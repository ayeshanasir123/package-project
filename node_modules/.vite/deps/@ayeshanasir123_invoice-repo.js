import {
  require_react_dom
} from "./chunk-M324AGAM.js";
import {
  __toESM,
  require_react
} from "./chunk-I4MZPW7S.js";

// node_modules/@ayeshanasir123/invoice-repo/dist/invoice-repo.es.js
var S = __toESM(require_react());
var import_react = __toESM(require_react());
var MI = __toESM(require_react_dom());
var import_react_dom = __toESM(require_react_dom());
var RI = Object.defineProperty;
var EI = (e10, t, n) => t in e10 ? RI(e10, t, { enumerable: true, configurable: true, writable: true, value: n }) : e10[t] = n;
var oa = (e10, t, n) => EI(e10, typeof t != "symbol" ? t + "" : t, n);
function Cm(e10) {
  return e10 && e10.__esModule && Object.prototype.hasOwnProperty.call(e10, "default") ? e10.default : e10;
}
var Jd = import_react_dom.default;
false ? (Jd.createRoot, Jd.hydrateRoot) : Jd.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
var rf = { exports: {} };
var Qd = {};
var Fh;
function VI() {
  return Fh || (Fh = 1, function() {
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var e10 = import_react.default, t = e10.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function n(x) {
      {
        for (var T = arguments.length, w = new Array(T > 1 ? T - 1 : 0), R = 1; R < T; R++)
          w[R - 1] = arguments[R];
        o("error", x, w);
      }
    }
    function o(x, T, w) {
      {
        var R = t.ReactDebugCurrentFrame, E = R.getStackAddendum();
        E !== "" && (T += "%s", w = w.concat([E]));
        var O = w.map(function(I) {
          return String(I);
        });
        O.unshift("Warning: " + T), Function.prototype.apply.call(console[x], console, O);
      }
    }
    function r(x, T) {
      return x === T && (x !== 0 || 1 / x === 1 / T) || x !== x && T !== T;
    }
    var s = typeof Object.is == "function" ? Object.is : r, a = e10.useState, l = e10.useEffect, c = e10.useLayoutEffect, u = e10.useDebugValue, d = false, p = false;
    function m(x, T, w) {
      d || e10.startTransition !== void 0 && (d = true, n("You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release."));
      var R = T();
      if (!p) {
        var E = T();
        s(R, E) || (n("The result of getSnapshot should be cached to avoid an infinite loop"), p = true);
      }
      var O = a({
        inst: {
          value: R,
          getSnapshot: T
        }
      }), I = O[0].inst, P = O[1];
      return c(function() {
        I.value = R, I.getSnapshot = T, g(I) && P({
          inst: I
        });
      }, [x, R, T]), l(function() {
        g(I) && P({
          inst: I
        });
        var A = function() {
          g(I) && P({
            inst: I
          });
        };
        return x(A);
      }, [x]), u(R), R;
    }
    function g(x) {
      var T = x.getSnapshot, w = x.value;
      try {
        var R = T();
        return !s(w, R);
      } catch {
        return true;
      }
    }
    function b(x, T, w) {
      return T();
    }
    var v = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u", h = !v, y = h ? b : m, C = e10.useSyncExternalStore !== void 0 ? e10.useSyncExternalStore : y;
    Qd.useSyncExternalStore = C, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
  }()), Qd;
}
false ? rf.exports = $I() : rf.exports = VI();
var nx = rf.exports;
var tp = {};
var $h;
function LI() {
  return $h || ($h = 1, function() {
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var e10 = import_react.default, t = nx;
    function n(d, p) {
      return d === p && (d !== 0 || 1 / d === 1 / p) || d !== d && p !== p;
    }
    var o = typeof Object.is == "function" ? Object.is : n, r = t.useSyncExternalStore, s = e10.useRef, a = e10.useEffect, l = e10.useMemo, c = e10.useDebugValue;
    function u(d, p, m, g, b) {
      var v = s(null), h;
      v.current === null ? (h = {
        hasValue: false,
        value: null
      }, v.current = h) : h = v.current;
      var y = l(function() {
        var w = false, R, E, O = function(M) {
          if (!w) {
            w = true, R = M;
            var F = g(M);
            if (b !== void 0 && h.hasValue) {
              var D = h.value;
              if (b(D, F))
                return E = D, D;
            }
            return E = F, F;
          }
          var N = R, j = E;
          if (o(N, M))
            return j;
          var _ = g(M);
          return b !== void 0 && b(j, _) ? j : (R = M, E = _, _);
        }, I = m === void 0 ? null : m, P = function() {
          return O(p());
        }, A = I === null ? void 0 : function() {
          return O(I());
        };
        return [P, A];
      }, [p, m, g, b]), C = y[0], x = y[1], T = r(d, C, x);
      return a(function() {
        h.hasValue = true, h.value = T;
      }, [T]), c(T), T;
    }
    tp.useSyncExternalStoreWithSelector = u, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
  }()), tp;
}
false ? _I() : LI();
function BI(e10) {
  e10();
}
var ox = BI;
var zI = (e10) => ox = e10;
var WI = () => ox;
var Vh = Symbol.for("react-redux-context");
var _h = typeof globalThis < "u" ? globalThis : (
  /* fall back to a per-module scope (pre-8.1 behaviour) if `globalThis` is not available */
  {}
);
function HI() {
  var e10;
  if (!S.createContext) return {};
  const t = (e10 = _h[Vh]) != null ? e10 : _h[Vh] = /* @__PURE__ */ new Map();
  let n = t.get(S.createContext);
  return n || (n = S.createContext(null), n.displayName = "ReactRedux", t.set(S.createContext, n)), n;
}
var Ts = HI();
function rx(e10 = Ts) {
  return function() {
    const n = (0, import_react.useContext)(e10);
    if (!n)
      throw new Error("could not find react-redux context value; please ensure the component is wrapped in a <Provider>");
    return n;
  };
}
var GI = rx();
function V() {
  return V = Object.assign ? Object.assign.bind() : function(e10) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var o in n) ({}).hasOwnProperty.call(n, o) && (e10[o] = n[o]);
    }
    return e10;
  }, V.apply(null, arguments);
}
function Xe(e10, t) {
  if (e10 == null) return {};
  var n = {};
  for (var o in e10) if ({}.hasOwnProperty.call(e10, o)) {
    if (t.includes(o)) continue;
    n[o] = e10[o];
  }
  return n;
}
var sf = { exports: {} };
var Ft = {};
var Bh;
function XI() {
  return Bh || (Bh = 1, function() {
    var e10 = typeof Symbol == "function" && Symbol.for, t = e10 ? Symbol.for("react.element") : 60103, n = e10 ? Symbol.for("react.portal") : 60106, o = e10 ? Symbol.for("react.fragment") : 60107, r = e10 ? Symbol.for("react.strict_mode") : 60108, s = e10 ? Symbol.for("react.profiler") : 60114, a = e10 ? Symbol.for("react.provider") : 60109, l = e10 ? Symbol.for("react.context") : 60110, c = e10 ? Symbol.for("react.async_mode") : 60111, u = e10 ? Symbol.for("react.concurrent_mode") : 60111, d = e10 ? Symbol.for("react.forward_ref") : 60112, p = e10 ? Symbol.for("react.suspense") : 60113, m = e10 ? Symbol.for("react.suspense_list") : 60120, g = e10 ? Symbol.for("react.memo") : 60115, b = e10 ? Symbol.for("react.lazy") : 60116, v = e10 ? Symbol.for("react.block") : 60121, h = e10 ? Symbol.for("react.fundamental") : 60117, y = e10 ? Symbol.for("react.responder") : 60118, C = e10 ? Symbol.for("react.scope") : 60119;
    function x(W) {
      return typeof W == "string" || typeof W == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      W === o || W === u || W === s || W === r || W === p || W === m || typeof W == "object" && W !== null && (W.$$typeof === b || W.$$typeof === g || W.$$typeof === a || W.$$typeof === l || W.$$typeof === d || W.$$typeof === h || W.$$typeof === y || W.$$typeof === C || W.$$typeof === v);
    }
    function T(W) {
      if (typeof W == "object" && W !== null) {
        var Z = W.$$typeof;
        switch (Z) {
          case t:
            var L = W.type;
            switch (L) {
              case c:
              case u:
              case o:
              case s:
              case r:
              case p:
                return L;
              default:
                var ie = L && L.$$typeof;
                switch (ie) {
                  case l:
                  case d:
                  case b:
                  case g:
                  case a:
                    return ie;
                  default:
                    return Z;
                }
            }
          case n:
            return Z;
        }
      }
    }
    var w = c, R = u, E = l, O = a, I = t, P = d, A = o, M = b, F = g, D = n, N = s, j = r, _ = p, z = false;
    function $(W) {
      return z || (z = true, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), k(W) || T(W) === c;
    }
    function k(W) {
      return T(W) === u;
    }
    function B(W) {
      return T(W) === l;
    }
    function Q(W) {
      return T(W) === a;
    }
    function ee(W) {
      return typeof W == "object" && W !== null && W.$$typeof === t;
    }
    function G(W) {
      return T(W) === d;
    }
    function H(W) {
      return T(W) === o;
    }
    function Y(W) {
      return T(W) === b;
    }
    function J(W) {
      return T(W) === g;
    }
    function U(W) {
      return T(W) === n;
    }
    function ne(W) {
      return T(W) === s;
    }
    function se(W) {
      return T(W) === r;
    }
    function oe(W) {
      return T(W) === p;
    }
    Ft.AsyncMode = w, Ft.ConcurrentMode = R, Ft.ContextConsumer = E, Ft.ContextProvider = O, Ft.Element = I, Ft.ForwardRef = P, Ft.Fragment = A, Ft.Lazy = M, Ft.Memo = F, Ft.Portal = D, Ft.Profiler = N, Ft.StrictMode = j, Ft.Suspense = _, Ft.isAsyncMode = $, Ft.isConcurrentMode = k, Ft.isContextConsumer = B, Ft.isContextProvider = Q, Ft.isElement = ee, Ft.isForwardRef = G, Ft.isFragment = H, Ft.isLazy = Y, Ft.isMemo = J, Ft.isPortal = U, Ft.isProfiler = ne, Ft.isStrictMode = se, Ft.isSuspense = oe, Ft.isValidElementType = x, Ft.typeOf = T;
  }()), Ft;
}
false ? sf.exports = UI() : sf.exports = XI();
var Sm = sf.exports;
var ix = Sm;
var YI = {
  $$typeof: true,
  render: true,
  defaultProps: true,
  displayName: true,
  propTypes: true
};
var ZI = {
  $$typeof: true,
  compare: true,
  defaultProps: true,
  displayName: true,
  propTypes: true,
  type: true
};
var sx = {};
sx[ix.ForwardRef] = YI;
sx[ix.Memo] = ZI;
var $t = {};
var Wh;
function JI() {
  return Wh || (Wh = 1, function() {
    var e10 = Symbol.for("react.element"), t = Symbol.for("react.portal"), n = Symbol.for("react.fragment"), o = Symbol.for("react.strict_mode"), r = Symbol.for("react.profiler"), s = Symbol.for("react.provider"), a = Symbol.for("react.context"), l = Symbol.for("react.server_context"), c = Symbol.for("react.forward_ref"), u = Symbol.for("react.suspense"), d = Symbol.for("react.suspense_list"), p = Symbol.for("react.memo"), m = Symbol.for("react.lazy"), g = Symbol.for("react.offscreen"), b = false, v = false, h = false, y = false, C = false, x;
    x = Symbol.for("react.module.reference");
    function T(L) {
      return !!(typeof L == "string" || typeof L == "function" || L === n || L === r || C || L === o || L === u || L === d || y || L === g || b || v || h || typeof L == "object" && L !== null && (L.$$typeof === m || L.$$typeof === p || L.$$typeof === s || L.$$typeof === a || L.$$typeof === c || // This needs to include all possible module reference object
      // types supported by any Flight configuration anywhere since
      // we don't know which Flight build this will end up being used
      // with.
      L.$$typeof === x || L.getModuleId !== void 0));
    }
    function w(L) {
      if (typeof L == "object" && L !== null) {
        var ie = L.$$typeof;
        switch (ie) {
          case e10:
            var te = L.type;
            switch (te) {
              case n:
              case r:
              case o:
              case u:
              case d:
                return te;
              default:
                var le = te && te.$$typeof;
                switch (le) {
                  case l:
                  case a:
                  case c:
                  case m:
                  case p:
                  case s:
                    return le;
                  default:
                    return ie;
                }
            }
          case t:
            return ie;
        }
      }
    }
    var R = a, E = s, O = e10, I = c, P = n, A = m, M = p, F = t, D = r, N = o, j = u, _ = d, z = false, $ = false;
    function k(L) {
      return z || (z = true, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.")), false;
    }
    function B(L) {
      return $ || ($ = true, console.warn("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.")), false;
    }
    function Q(L) {
      return w(L) === a;
    }
    function ee(L) {
      return w(L) === s;
    }
    function G(L) {
      return typeof L == "object" && L !== null && L.$$typeof === e10;
    }
    function H(L) {
      return w(L) === c;
    }
    function Y(L) {
      return w(L) === n;
    }
    function J(L) {
      return w(L) === m;
    }
    function U(L) {
      return w(L) === p;
    }
    function ne(L) {
      return w(L) === t;
    }
    function se(L) {
      return w(L) === r;
    }
    function oe(L) {
      return w(L) === o;
    }
    function W(L) {
      return w(L) === u;
    }
    function Z(L) {
      return w(L) === d;
    }
    $t.ContextConsumer = R, $t.ContextProvider = E, $t.Element = O, $t.ForwardRef = I, $t.Fragment = P, $t.Lazy = A, $t.Memo = M, $t.Portal = F, $t.Profiler = D, $t.StrictMode = N, $t.Suspense = j, $t.SuspenseList = _, $t.isAsyncMode = k, $t.isConcurrentMode = B, $t.isContextConsumer = Q, $t.isContextProvider = ee, $t.isElement = G, $t.isForwardRef = H, $t.isFragment = Y, $t.isLazy = J, $t.isMemo = U, $t.isPortal = ne, $t.isProfiler = se, $t.isStrictMode = oe, $t.isSuspense = W, $t.isSuspenseList = Z, $t.isValidElementType = T, $t.typeOf = w;
  }()), $t;
}
false ? qI() : JI();
function KI() {
  const e10 = WI();
  let t = null, n = null;
  return {
    clear() {
      t = null, n = null;
    },
    notify() {
      e10(() => {
        let o = t;
        for (; o; )
          o.callback(), o = o.next;
      });
    },
    get() {
      let o = [], r = t;
      for (; r; )
        o.push(r), r = r.next;
      return o;
    },
    subscribe(o) {
      let r = true, s = n = {
        callback: o,
        next: null,
        prev: n
      };
      return s.prev ? s.prev.next = s : t = s, function() {
        !r || t === null || (r = false, s.next ? s.next.prev = s.prev : n = s.prev, s.prev ? s.prev.next = s.next : t = s.next);
      };
    }
  };
}
var Hh = {
  notify() {
  },
  get: () => []
};
function QI(e10, t) {
  let n, o = Hh, r = 0, s = false;
  function a(v) {
    d();
    const h = o.subscribe(v);
    let y = false;
    return () => {
      y || (y = true, h(), p());
    };
  }
  function l() {
    o.notify();
  }
  function c() {
    b.onStateChange && b.onStateChange();
  }
  function u() {
    return s;
  }
  function d() {
    r++, n || (n = e10.subscribe(c), o = KI());
  }
  function p() {
    r--, n && r === 0 && (n(), n = void 0, o.clear(), o = Hh);
  }
  function m() {
    s || (s = true, d());
  }
  function g() {
    s && (s = false, p());
  }
  const b = {
    addNestedSub: a,
    notifyNestedSubs: l,
    handleChangeWrapper: c,
    isSubscribed: u,
    trySubscribe: m,
    tryUnsubscribe: g,
    getListeners: () => o
  };
  return b;
}
var eR = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u";
var tR = eR ? S.useLayoutEffect : S.useEffect;
function nR({
  store: e10,
  context: t,
  children: n,
  serverState: o,
  stabilityCheck: r = "once",
  noopCheck: s = "once"
}) {
  const a = S.useMemo(() => {
    const u = QI(e10);
    return {
      store: e10,
      subscription: u,
      getServerState: o ? () => o : void 0,
      stabilityCheck: r,
      noopCheck: s
    };
  }, [e10, o, r, s]), l = S.useMemo(() => e10.getState(), [e10]);
  tR(() => {
    const {
      subscription: u
    } = a;
    return u.onStateChange = u.notifyNestedSubs, u.trySubscribe(), l !== e10.getState() && u.notifyNestedSubs(), () => {
      u.tryUnsubscribe(), u.onStateChange = void 0;
    };
  }, [a, l]);
  const c = t || Ts;
  return S.createElement(c.Provider, {
    value: a
  }, n);
}
function ax(e10 = Ts) {
  const t = (
    // @ts-ignore
    e10 === Ts ? GI : (
      // @ts-ignore
      rx(e10)
    )
  );
  return function() {
    const {
      store: o
    } = t();
    return o;
  };
}
var oR = ax();
function rR(e10 = Ts) {
  const t = (
    // @ts-ignore
    e10 === Ts ? oR : ax(e10)
  );
  return function() {
    return t().dispatch;
  };
}
var iR = rR();
zI(import_react_dom.unstable_batchedUpdates);
function Wa() {
  return Wa = Object.assign ? Object.assign.bind() : function(e10) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var o in n)
        Object.prototype.hasOwnProperty.call(n, o) && (e10[o] = n[o]);
    }
    return e10;
  }, Wa.apply(this, arguments);
}
var Wr;
(function(e10) {
  e10.Pop = "POP", e10.Push = "PUSH", e10.Replace = "REPLACE";
})(Wr || (Wr = {}));
var Gh = "popstate";
function sR(e10) {
  e10 === void 0 && (e10 = {});
  function t(o, r) {
    let {
      pathname: s,
      search: a,
      hash: l
    } = o.location;
    return af(
      "",
      {
        pathname: s,
        search: a,
        hash: l
      },
      // state defaults to `null` because `window.history.state` does
      r.state && r.state.usr || null,
      r.state && r.state.key || "default"
    );
  }
  function n(o, r) {
    return typeof r == "string" ? r : Ha(r);
  }
  return lR(t, n, null, e10);
}
function mt(e10, t) {
  if (e10 === false || e10 === null || typeof e10 > "u")
    throw new Error(t);
}
function nr(e10, t) {
  if (!e10) {
    typeof console < "u" && console.warn(t);
    try {
      throw new Error(t);
    } catch {
    }
  }
}
function aR() {
  return Math.random().toString(36).substr(2, 8);
}
function Uh(e10, t) {
  return {
    usr: e10.state,
    key: e10.key,
    idx: t
  };
}
function af(e10, t, n, o) {
  return n === void 0 && (n = null), Wa({
    pathname: typeof e10 == "string" ? e10 : e10.pathname,
    search: "",
    hash: ""
  }, typeof t == "string" ? Vs(t) : t, {
    state: n,
    // TODO: This could be cleaned up.  push/replace should probably just take
    // full Locations now and avoid the need to run through this flow at all
    // But that's a pretty big refactor to the current test suite so going to
    // keep as is for the time being and just let any incoming keys take precedence
    key: t && t.key || o || aR()
  });
}
function Ha(e10) {
  let {
    pathname: t = "/",
    search: n = "",
    hash: o = ""
  } = e10;
  return n && n !== "?" && (t += n.charAt(0) === "?" ? n : "?" + n), o && o !== "#" && (t += o.charAt(0) === "#" ? o : "#" + o), t;
}
function Vs(e10) {
  let t = {};
  if (e10) {
    let n = e10.indexOf("#");
    n >= 0 && (t.hash = e10.substr(n), e10 = e10.substr(0, n));
    let o = e10.indexOf("?");
    o >= 0 && (t.search = e10.substr(o), e10 = e10.substr(0, o)), e10 && (t.pathname = e10);
  }
  return t;
}
function lR(e10, t, n, o) {
  o === void 0 && (o = {});
  let {
    window: r = document.defaultView,
    v5Compat: s = false
  } = o, a = r.history, l = Wr.Pop, c = null, u = d();
  u == null && (u = 0, a.replaceState(Wa({}, a.state, {
    idx: u
  }), ""));
  function d() {
    return (a.state || {
      idx: null
    }).idx;
  }
  function p() {
    l = Wr.Pop;
    let h = d(), y = h == null ? null : h - u;
    u = h, c && c({
      action: l,
      location: v.location,
      delta: y
    });
  }
  function m(h, y) {
    l = Wr.Push;
    let C = af(v.location, h, y);
    u = d() + 1;
    let x = Uh(C, u), T = v.createHref(C);
    try {
      a.pushState(x, "", T);
    } catch (w) {
      if (w instanceof DOMException && w.name === "DataCloneError")
        throw w;
      r.location.assign(T);
    }
    s && c && c({
      action: l,
      location: v.location,
      delta: 1
    });
  }
  function g(h, y) {
    l = Wr.Replace;
    let C = af(v.location, h, y);
    u = d();
    let x = Uh(C, u), T = v.createHref(C);
    a.replaceState(x, "", T), s && c && c({
      action: l,
      location: v.location,
      delta: 0
    });
  }
  function b(h) {
    let y = r.location.origin !== "null" ? r.location.origin : r.location.href, C = typeof h == "string" ? h : Ha(h);
    return C = C.replace(/ $/, "%20"), mt(y, "No window.location.(origin|href) available to create URL for href: " + C), new URL(C, y);
  }
  let v = {
    get action() {
      return l;
    },
    get location() {
      return e10(r, a);
    },
    listen(h) {
      if (c)
        throw new Error("A history only accepts one active listener");
      return r.addEventListener(Gh, p), c = h, () => {
        r.removeEventListener(Gh, p), c = null;
      };
    },
    createHref(h) {
      return t(r, h);
    },
    createURL: b,
    encodeLocation(h) {
      let y = b(h);
      return {
        pathname: y.pathname,
        search: y.search,
        hash: y.hash
      };
    },
    push: m,
    replace: g,
    go(h) {
      return a.go(h);
    }
  };
  return v;
}
var Xh;
(function(e10) {
  e10.data = "data", e10.deferred = "deferred", e10.redirect = "redirect", e10.error = "error";
})(Xh || (Xh = {}));
function cR(e10, t, n) {
  return n === void 0 && (n = "/"), uR(e10, t, n, false);
}
function uR(e10, t, n, o) {
  let r = typeof t == "string" ? Vs(t) : t, s = Xr(r.pathname || "/", n);
  if (s == null)
    return null;
  let a = lx(e10);
  dR(a);
  let l = null;
  for (let c = 0; l == null && c < a.length; ++c) {
    let u = SR(s);
    l = xR(a[c], u, o);
  }
  return l;
}
function lx(e10, t, n, o) {
  t === void 0 && (t = []), n === void 0 && (n = []), o === void 0 && (o = "");
  let r = (s, a, l) => {
    let c = {
      relativePath: l === void 0 ? s.path || "" : l,
      caseSensitive: s.caseSensitive === true,
      childrenIndex: a,
      route: s
    };
    c.relativePath.startsWith("/") && (mt(c.relativePath.startsWith(o), 'Absolute route path "' + c.relativePath + '" nested under path ' + ('"' + o + '" is not valid. An absolute child route path ') + "must start with the combined path of all its parent routes."), c.relativePath = c.relativePath.slice(o.length));
    let u = yr([o, c.relativePath]), d = n.concat(c);
    s.children && s.children.length > 0 && (mt(
      // Our types know better, but runtime JS may not!
      // @ts-expect-error
      s.index !== true,
      "Index routes must not have child routes. Please remove " + ('all child routes from route path "' + u + '".')
    ), lx(s.children, t, d, u)), !(s.path == null && !s.index) && t.push({
      path: u,
      score: vR(u, s.index),
      routesMeta: d
    });
  };
  return e10.forEach((s, a) => {
    var l;
    if (s.path === "" || !((l = s.path) != null && l.includes("?")))
      r(s, a);
    else
      for (let c of cx(s.path))
        r(s, a, c);
  }), t;
}
function cx(e10) {
  let t = e10.split("/");
  if (t.length === 0) return [];
  let [n, ...o] = t, r = n.endsWith("?"), s = n.replace(/\?$/, "");
  if (o.length === 0)
    return r ? [s, ""] : [s];
  let a = cx(o.join("/")), l = [];
  return l.push(...a.map((c) => c === "" ? s : [s, c].join("/"))), r && l.push(...a), l.map((c) => e10.startsWith("/") && c === "" ? "/" : c);
}
function dR(e10) {
  e10.sort((t, n) => t.score !== n.score ? n.score - t.score : yR(t.routesMeta.map((o) => o.childrenIndex), n.routesMeta.map((o) => o.childrenIndex)));
}
var pR = /^:[\w-]+$/;
var fR = 3;
var mR = 2;
var gR = 1;
var hR = 10;
var bR = -2;
var Yh = (e10) => e10 === "*";
function vR(e10, t) {
  let n = e10.split("/"), o = n.length;
  return n.some(Yh) && (o += bR), t && (o += mR), n.filter((r) => !Yh(r)).reduce((r, s) => r + (pR.test(s) ? fR : s === "" ? gR : hR), o);
}
function yR(e10, t) {
  return e10.length === t.length && e10.slice(0, -1).every((o, r) => o === t[r]) ? (
    // If two routes are siblings, we should try to match the earlier sibling
    // first. This allows people to have fine-grained control over the matching
    // behavior by simply putting routes with identical paths in the order they
    // want them tried.
    e10[e10.length - 1] - t[t.length - 1]
  ) : (
    // Otherwise, it doesn't really make sense to rank non-siblings by index,
    // so they sort equally.
    0
  );
}
function xR(e10, t, n) {
  let {
    routesMeta: o
  } = e10, r = {}, s = "/", a = [];
  for (let l = 0; l < o.length; ++l) {
    let c = o[l], u = l === o.length - 1, d = s === "/" ? t : t.slice(s.length) || "/", p = Hc({
      path: c.relativePath,
      caseSensitive: c.caseSensitive,
      end: u
    }, d), m = c.route;
    if (!p && u && n && !o[o.length - 1].route.index && (p = Hc({
      path: c.relativePath,
      caseSensitive: c.caseSensitive,
      end: false
    }, d)), !p)
      return null;
    Object.assign(r, p.params), a.push({
      // TODO: Can this as be avoided?
      params: r,
      pathname: yr([s, p.pathname]),
      pathnameBase: RR(yr([s, p.pathnameBase])),
      route: m
    }), p.pathnameBase !== "/" && (s = yr([s, p.pathnameBase]));
  }
  return a;
}
function Hc(e10, t) {
  typeof e10 == "string" && (e10 = {
    path: e10,
    caseSensitive: false,
    end: true
  });
  let [n, o] = CR(e10.path, e10.caseSensitive, e10.end), r = t.match(n);
  if (!r) return null;
  let s = r[0], a = s.replace(/(.)\/+$/, "$1"), l = r.slice(1);
  return {
    params: o.reduce((u, d, p) => {
      let {
        paramName: m,
        isOptional: g
      } = d;
      if (m === "*") {
        let v = l[p] || "";
        a = s.slice(0, s.length - v.length).replace(/(.)\/+$/, "$1");
      }
      const b = l[p];
      return g && !b ? u[m] = void 0 : u[m] = (b || "").replace(/%2F/g, "/"), u;
    }, {}),
    pathname: s,
    pathnameBase: a,
    pattern: e10
  };
}
function CR(e10, t, n) {
  t === void 0 && (t = false), n === void 0 && (n = true), nr(e10 === "*" || !e10.endsWith("*") || e10.endsWith("/*"), 'Route path "' + e10 + '" will be treated as if it were ' + ('"' + e10.replace(/\*$/, "/*") + '" because the `*` character must ') + "always follow a `/` in the pattern. To get rid of this warning, " + ('please change the route path to "' + e10.replace(/\*$/, "/*") + '".'));
  let o = [], r = "^" + e10.replace(/\/*\*?$/, "").replace(/^\/*/, "/").replace(/[\\.*+^${}|()[\]]/g, "\\$&").replace(/\/:([\w-]+)(\?)?/g, (a, l, c) => (o.push({
    paramName: l,
    isOptional: c != null
  }), c ? "/?([^\\/]+)?" : "/([^\\/]+)"));
  return e10.endsWith("*") ? (o.push({
    paramName: "*"
  }), r += e10 === "*" || e10 === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$") : n ? r += "\\/*$" : e10 !== "" && e10 !== "/" && (r += "(?:(?=\\/|$))"), [new RegExp(r, t ? void 0 : "i"), o];
}
function SR(e10) {
  try {
    return e10.split("/").map((t) => decodeURIComponent(t).replace(/\//g, "%2F")).join("/");
  } catch (t) {
    return nr(false, 'The URL path "' + e10 + '" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent ' + ("encoding (" + t + ").")), e10;
  }
}
function Xr(e10, t) {
  if (t === "/") return e10;
  if (!e10.toLowerCase().startsWith(t.toLowerCase()))
    return null;
  let n = t.endsWith("/") ? t.length - 1 : t.length, o = e10.charAt(n);
  return o && o !== "/" ? null : e10.slice(n) || "/";
}
function wR(e10, t) {
  t === void 0 && (t = "/");
  let {
    pathname: n,
    search: o = "",
    hash: r = ""
  } = typeof e10 == "string" ? Vs(e10) : e10;
  return {
    pathname: n ? n.startsWith("/") ? n : TR(n, t) : t,
    search: ER(o),
    hash: OR(r)
  };
}
function TR(e10, t) {
  let n = t.replace(/\/+$/, "").split("/");
  return e10.split("/").forEach((r) => {
    r === ".." ? n.length > 1 && n.pop() : r !== "." && n.push(r);
  }), n.length > 1 ? n.join("/") : "/";
}
function np(e10, t, n, o) {
  return "Cannot include a '" + e10 + "' character in a manually specified " + ("`to." + t + "` field [" + JSON.stringify(o) + "].  Please separate it out to the ") + ("`to." + n + "` field. Alternatively you may provide the full path as ") + 'a string in <Link to="..."> and the router will parse it for you.';
}
function IR(e10) {
  return e10.filter((t, n) => n === 0 || t.route.path && t.route.path.length > 0);
}
function ux(e10, t) {
  let n = IR(e10);
  return t ? n.map((o, r) => r === n.length - 1 ? o.pathname : o.pathnameBase) : n.map((o) => o.pathnameBase);
}
function dx(e10, t, n, o) {
  o === void 0 && (o = false);
  let r;
  typeof e10 == "string" ? r = Vs(e10) : (r = Wa({}, e10), mt(!r.pathname || !r.pathname.includes("?"), np("?", "pathname", "search", r)), mt(!r.pathname || !r.pathname.includes("#"), np("#", "pathname", "hash", r)), mt(!r.search || !r.search.includes("#"), np("#", "search", "hash", r)));
  let s = e10 === "" || r.pathname === "", a = s ? "/" : r.pathname, l;
  if (a == null)
    l = n;
  else {
    let p = t.length - 1;
    if (!o && a.startsWith("..")) {
      let m = a.split("/");
      for (; m[0] === ".."; )
        m.shift(), p -= 1;
      r.pathname = m.join("/");
    }
    l = p >= 0 ? t[p] : "/";
  }
  let c = wR(r, l), u = a && a !== "/" && a.endsWith("/"), d = (s || a === ".") && n.endsWith("/");
  return !c.pathname.endsWith("/") && (u || d) && (c.pathname += "/"), c;
}
var yr = (e10) => e10.join("/").replace(/\/\/+/g, "/");
var RR = (e10) => e10.replace(/\/+$/, "").replace(/^\/*/, "/");
var ER = (e10) => !e10 || e10 === "?" ? "" : e10.startsWith("?") ? e10 : "?" + e10;
var OR = (e10) => !e10 || e10 === "#" ? "" : e10.startsWith("#") ? e10 : "#" + e10;
function PR(e10) {
  return e10 != null && typeof e10.status == "number" && typeof e10.statusText == "string" && typeof e10.internal == "boolean" && "data" in e10;
}
var px = ["post", "put", "patch", "delete"];
new Set(px);
var AR = ["get", ...px];
new Set(AR);
function Ga() {
  return Ga = Object.assign ? Object.assign.bind() : function(e10) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var o in n)
        Object.prototype.hasOwnProperty.call(n, o) && (e10[o] = n[o]);
    }
    return e10;
  }, Ga.apply(this, arguments);
}
var bl = S.createContext(null);
bl.displayName = "DataRouter";
var wm = S.createContext(null);
wm.displayName = "DataRouterState";
var jR = S.createContext(null);
jR.displayName = "Await";
var Bo = S.createContext(null);
Bo.displayName = "Navigation";
var vl = S.createContext(null);
vl.displayName = "Location";
var ar = S.createContext({
  outlet: null,
  matches: [],
  isDataRoute: false
});
ar.displayName = "Route";
var Tm = S.createContext(null);
Tm.displayName = "RouteError";
function DR(e10, t) {
  let {
    relative: n
  } = t === void 0 ? {} : t;
  yl() || (true ? mt(
    false,
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    "useHref() may be used only in the context of a <Router> component."
  ) : mt(false));
  let {
    basename: o,
    navigator: r
  } = S.useContext(Bo), {
    hash: s,
    pathname: a,
    search: l
  } = xl(e10, {
    relative: n
  }), c = a;
  return o !== "/" && (c = a === "/" ? o : yr([o, a])), r.createHref({
    pathname: c,
    search: l,
    hash: s
  });
}
function yl() {
  return S.useContext(vl) != null;
}
function Ni() {
  return yl() || (true ? mt(
    false,
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    "useLocation() may be used only in the context of a <Router> component."
  ) : mt(false)), S.useContext(vl).location;
}
var fx = "You should call navigate() in a React.useEffect(), not when your component is first rendered.";
function mx(e10) {
  S.useContext(Bo).static || S.useLayoutEffect(e10);
}
function _s() {
  let {
    isDataRoute: e10
  } = S.useContext(ar);
  return e10 ? UR() : MR();
}
function MR() {
  yl() || (true ? mt(
    false,
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    "useNavigate() may be used only in the context of a <Router> component."
  ) : mt(false));
  let e10 = S.useContext(bl), {
    basename: t,
    future: n,
    navigator: o
  } = S.useContext(Bo), {
    matches: r
  } = S.useContext(ar), {
    pathname: s
  } = Ni(), a = JSON.stringify(ux(r, n.v7_relativeSplatPath)), l = S.useRef(false);
  return mx(() => {
    l.current = true;
  }), S.useCallback(function(u, d) {
    if (d === void 0 && (d = {}), nr(l.current, fx), !l.current) return;
    if (typeof u == "number") {
      o.go(u);
      return;
    }
    let p = dx(u, JSON.parse(a), s, d.relative === "path");
    e10 == null && t !== "/" && (p.pathname = p.pathname === "/" ? t : yr([t, p.pathname])), (d.replace ? o.replace : o.push)(p, d.state, d);
  }, [t, o, a, s, e10]);
}
function gx() {
  let {
    matches: e10
  } = S.useContext(ar), t = e10[e10.length - 1];
  return t ? t.params : {};
}
function xl(e10, t) {
  let {
    relative: n
  } = t === void 0 ? {} : t, {
    future: o
  } = S.useContext(Bo), {
    matches: r
  } = S.useContext(ar), {
    pathname: s
  } = Ni(), a = JSON.stringify(ux(r, o.v7_relativeSplatPath));
  return S.useMemo(() => dx(e10, JSON.parse(a), s, n === "path"), [e10, a, s, n]);
}
function kR(e10, t) {
  return FR(e10, t);
}
function FR(e10, t, n, o) {
  yl() || (true ? mt(
    false,
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    "useRoutes() may be used only in the context of a <Router> component."
  ) : mt(false));
  let {
    navigator: r
  } = S.useContext(Bo), {
    matches: s
  } = S.useContext(ar), a = s[s.length - 1], l = a ? a.params : {}, c = a ? a.pathname : "/", u = a ? a.pathnameBase : "/", d = a && a.route;
  if (true) {
    let C = d && d.path || "";
    bx(c, !d || C.endsWith("*"), "You rendered descendant <Routes> (or called `useRoutes()`) at " + ('"' + c + '" (under <Route path="' + C + '">) but the ') + `parent route path has no trailing "*". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.

` + ('Please change the parent <Route path="' + C + '"> to <Route ') + ('path="' + (C === "/" ? "*" : C + "/*") + '">.'));
  }
  let p = Ni(), m;
  if (t) {
    var g;
    let C = typeof t == "string" ? Vs(t) : t;
    u === "/" || (g = C.pathname) != null && g.startsWith(u) || (true ? mt(false, "When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, the location pathname must begin with the portion of the URL pathname that was " + ('matched by all parent routes. The current pathname base is "' + u + '" ') + ('but pathname "' + C.pathname + '" was given in the `location` prop.')) : mt(false)), m = C;
  } else
    m = p;
  let b = m.pathname || "/", v = b;
  if (u !== "/") {
    let C = u.replace(/^\//, "").split("/");
    v = "/" + b.replace(/^\//, "").split("/").slice(C.length).join("/");
  }
  let h = cR(e10, {
    pathname: v
  });
  nr(d || h != null, 'No routes matched location "' + m.pathname + m.search + m.hash + '" '), nr(h == null || h[h.length - 1].route.element !== void 0 || h[h.length - 1].route.Component !== void 0 || h[h.length - 1].route.lazy !== void 0, 'Matched leaf route at location "' + m.pathname + m.search + m.hash + '" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an "empty" page.');
  let y = LR(h && h.map((C) => Object.assign({}, C, {
    params: Object.assign({}, l, C.params),
    pathname: yr([
      u,
      // Re-encode pathnames that were decoded inside matchRoutes
      r.encodeLocation ? r.encodeLocation(C.pathname).pathname : C.pathname
    ]),
    pathnameBase: C.pathnameBase === "/" ? u : yr([
      u,
      // Re-encode pathnames that were decoded inside matchRoutes
      r.encodeLocation ? r.encodeLocation(C.pathnameBase).pathname : C.pathnameBase
    ])
  })), s, n, o);
  return t && y ? S.createElement(vl.Provider, {
    value: {
      location: Ga({
        pathname: "/",
        search: "",
        hash: "",
        state: null,
        key: "default"
      }, m),
      navigationType: Wr.Pop
    }
  }, y) : y;
}
function NR() {
  let e10 = GR(), t = PR(e10) ? e10.status + " " + e10.statusText : e10 instanceof Error ? e10.message : JSON.stringify(e10), n = e10 instanceof Error ? e10.stack : null, o = "rgba(200,200,200, 0.5)", r = {
    padding: "0.5rem",
    backgroundColor: o
  }, s = {
    padding: "2px 4px",
    backgroundColor: o
  }, a = null;
  return console.error("Error handled by React Router default ErrorBoundary:", e10), a = S.createElement(S.Fragment, null, S.createElement("p", null, "💿 Hey developer 👋"), S.createElement("p", null, "You can provide a way better UX than this when your app throws errors by providing your own ", S.createElement("code", {
    style: s
  }, "ErrorBoundary"), " or", " ", S.createElement("code", {
    style: s
  }, "errorElement"), " prop on your route.")), S.createElement(S.Fragment, null, S.createElement("h2", null, "Unexpected Application Error!"), S.createElement("h3", {
    style: {
      fontStyle: "italic"
    }
  }, t), n ? S.createElement("pre", {
    style: r
  }, n) : null, a);
}
var $R = S.createElement(NR, null);
var VR = class extends S.Component {
  constructor(t) {
    super(t), this.state = {
      location: t.location,
      revalidation: t.revalidation,
      error: t.error
    };
  }
  static getDerivedStateFromError(t) {
    return {
      error: t
    };
  }
  static getDerivedStateFromProps(t, n) {
    return n.location !== t.location || n.revalidation !== "idle" && t.revalidation === "idle" ? {
      error: t.error,
      location: t.location,
      revalidation: t.revalidation
    } : {
      error: t.error !== void 0 ? t.error : n.error,
      location: n.location,
      revalidation: t.revalidation || n.revalidation
    };
  }
  componentDidCatch(t, n) {
    console.error("React Router caught the following error during render", t, n);
  }
  render() {
    return this.state.error !== void 0 ? S.createElement(ar.Provider, {
      value: this.props.routeContext
    }, S.createElement(Tm.Provider, {
      value: this.state.error,
      children: this.props.component
    })) : this.props.children;
  }
};
function _R(e10) {
  let {
    routeContext: t,
    match: n,
    children: o
  } = e10, r = S.useContext(bl);
  return r && r.static && r.staticContext && (n.route.errorElement || n.route.ErrorBoundary) && (r.staticContext._deepestRenderedBoundaryId = n.route.id), S.createElement(ar.Provider, {
    value: t
  }, o);
}
function LR(e10, t, n, o) {
  var r;
  if (t === void 0 && (t = []), n === void 0 && (n = null), o === void 0 && (o = null), e10 == null) {
    var s;
    if (!n)
      return null;
    if (n.errors)
      e10 = n.matches;
    else if ((s = o) != null && s.v7_partialHydration && t.length === 0 && !n.initialized && n.matches.length > 0)
      e10 = n.matches;
    else
      return null;
  }
  let a = e10, l = (r = n) == null ? void 0 : r.errors;
  if (l != null) {
    let d = a.findIndex((p) => p.route.id && (l == null ? void 0 : l[p.route.id]) !== void 0);
    d >= 0 || (true ? mt(false, "Could not find a matching route for errors on route IDs: " + Object.keys(l).join(",")) : mt(false)), a = a.slice(0, Math.min(a.length, d + 1));
  }
  let c = false, u = -1;
  if (n && o && o.v7_partialHydration)
    for (let d = 0; d < a.length; d++) {
      let p = a[d];
      if ((p.route.HydrateFallback || p.route.hydrateFallbackElement) && (u = d), p.route.id) {
        let {
          loaderData: m,
          errors: g
        } = n, b = p.route.loader && m[p.route.id] === void 0 && (!g || g[p.route.id] === void 0);
        if (p.route.lazy || b) {
          c = true, u >= 0 ? a = a.slice(0, u + 1) : a = [a[0]];
          break;
        }
      }
    }
  return a.reduceRight((d, p, m) => {
    let g, b = false, v = null, h = null;
    n && (g = l && p.route.id ? l[p.route.id] : void 0, v = p.route.errorElement || $R, c && (u < 0 && m === 0 ? (bx("route-fallback", false, "No `HydrateFallback` element provided to render during initial hydration"), b = true, h = null) : u === m && (b = true, h = p.route.hydrateFallbackElement || null)));
    let y = t.concat(a.slice(0, m + 1)), C = () => {
      let x;
      return g ? x = v : b ? x = h : p.route.Component ? x = S.createElement(p.route.Component, null) : p.route.element ? x = p.route.element : x = d, S.createElement(_R, {
        match: p,
        routeContext: {
          outlet: d,
          matches: y,
          isDataRoute: n != null
        },
        children: x
      });
    };
    return n && (p.route.ErrorBoundary || p.route.errorElement || m === 0) ? S.createElement(VR, {
      location: n.location,
      revalidation: n.revalidation,
      component: v,
      error: g,
      children: C(),
      routeContext: {
        outlet: null,
        matches: y,
        isDataRoute: true
      }
    }) : C();
  }, null);
}
var hx = function(e10) {
  return e10.UseBlocker = "useBlocker", e10.UseRevalidator = "useRevalidator", e10.UseNavigateStable = "useNavigate", e10;
}(hx || {});
var Ua = function(e10) {
  return e10.UseBlocker = "useBlocker", e10.UseLoaderData = "useLoaderData", e10.UseActionData = "useActionData", e10.UseRouteError = "useRouteError", e10.UseNavigation = "useNavigation", e10.UseRouteLoaderData = "useRouteLoaderData", e10.UseMatches = "useMatches", e10.UseRevalidator = "useRevalidator", e10.UseNavigateStable = "useNavigate", e10.UseRouteId = "useRouteId", e10;
}(Ua || {});
function Im(e10) {
  return e10 + " must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.";
}
function BR(e10) {
  let t = S.useContext(bl);
  return t || (true ? mt(false, Im(e10)) : mt(false)), t;
}
function zR(e10) {
  let t = S.useContext(wm);
  return t || (true ? mt(false, Im(e10)) : mt(false)), t;
}
function WR(e10) {
  let t = S.useContext(ar);
  return t || (true ? mt(false, Im(e10)) : mt(false)), t;
}
function Rm(e10) {
  let t = WR(e10), n = t.matches[t.matches.length - 1];
  return n.route.id || (true ? mt(false, e10 + ' can only be used on routes that contain a unique "id"') : mt(false)), n.route.id;
}
function HR() {
  return Rm(Ua.UseRouteId);
}
function GR() {
  var e10;
  let t = S.useContext(Tm), n = zR(Ua.UseRouteError), o = Rm(Ua.UseRouteError);
  return t !== void 0 ? t : (e10 = n.errors) == null ? void 0 : e10[o];
}
function UR() {
  let {
    router: e10
  } = BR(hx.UseNavigateStable), t = Rm(Ua.UseNavigateStable), n = S.useRef(false);
  return mx(() => {
    n.current = true;
  }), S.useCallback(function(r, s) {
    s === void 0 && (s = {}), nr(n.current, fx), n.current && (typeof r == "number" ? e10.navigate(r) : e10.navigate(r, Ga({
      fromRouteId: t
    }, s)));
  }, [e10, t]);
}
var Zh = {};
function bx(e10, t, n) {
  !t && !Zh[e10] && (Zh[e10] = true, nr(false, n));
}
function Lr(e10) {
  true ? mt(false, "A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.") : mt(false);
}
function XR(e10) {
  let {
    basename: t = "/",
    children: n = null,
    location: o,
    navigationType: r = Wr.Pop,
    navigator: s,
    static: a = false,
    future: l
  } = e10;
  yl() && (true ? mt(false, "You cannot render a <Router> inside another <Router>. You should never have more than one in your app.") : mt(false));
  let c = t.replace(/^\/*/, "/"), u = S.useMemo(() => ({
    basename: c,
    navigator: s,
    static: a,
    future: Ga({
      v7_relativeSplatPath: false
    }, l)
  }), [c, l, s, a]);
  typeof o == "string" && (o = Vs(o));
  let {
    pathname: d = "/",
    search: p = "",
    hash: m = "",
    state: g = null,
    key: b = "default"
  } = o, v = S.useMemo(() => {
    let h = Xr(d, c);
    return h == null ? null : {
      location: {
        pathname: h,
        search: p,
        hash: m,
        state: g,
        key: b
      },
      navigationType: r
    };
  }, [c, d, p, m, g, b, r]);
  return nr(v != null, '<Router basename="' + c + '"> is not able to match the URL ' + ('"' + d + p + m + '" because it does not start with the ') + "basename, so the <Router> won't render anything."), v == null ? null : S.createElement(Bo.Provider, {
    value: u
  }, S.createElement(vl.Provider, {
    children: n,
    value: v
  }));
}
function YR(e10) {
  let {
    children: t,
    location: n
  } = e10;
  return kR(lf(t), n);
}
new Promise(() => {
});
function lf(e10, t) {
  t === void 0 && (t = []);
  let n = [];
  return S.Children.forEach(e10, (o, r) => {
    if (!S.isValidElement(o))
      return;
    let s = [...t, r];
    if (o.type === S.Fragment) {
      n.push.apply(n, lf(o.props.children, s));
      return;
    }
    o.type !== Lr && (true ? mt(false, "[" + (typeof o.type == "string" ? o.type : o.type.name) + "] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>") : mt(false)), !o.props.index || !o.props.children || (true ? mt(false, "An index route cannot have child routes.") : mt(false));
    let a = {
      id: o.props.id || s.join("-"),
      caseSensitive: o.props.caseSensitive,
      element: o.props.element,
      Component: o.props.Component,
      index: o.props.index,
      path: o.props.path,
      loader: o.props.loader,
      action: o.props.action,
      errorElement: o.props.errorElement,
      ErrorBoundary: o.props.ErrorBoundary,
      hasErrorBoundary: o.props.ErrorBoundary != null || o.props.errorElement != null,
      shouldRevalidate: o.props.shouldRevalidate,
      handle: o.props.handle,
      lazy: o.props.lazy
    };
    o.props.children && (a.children = lf(o.props.children, s)), n.push(a);
  }), n;
}
function Is() {
  return Is = Object.assign ? Object.assign.bind() : function(e10) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var o in n)
        Object.prototype.hasOwnProperty.call(n, o) && (e10[o] = n[o]);
    }
    return e10;
  }, Is.apply(this, arguments);
}
function Em(e10, t) {
  if (e10 == null) return {};
  var n = {}, o = Object.keys(e10), r, s;
  for (s = 0; s < o.length; s++)
    r = o[s], !(t.indexOf(r) >= 0) && (n[r] = e10[r]);
  return n;
}
var Oc = "get";
var Pc = "application/x-www-form-urlencoded";
function Iu(e10) {
  return e10 != null && typeof e10.tagName == "string";
}
function ZR(e10) {
  return Iu(e10) && e10.tagName.toLowerCase() === "button";
}
function qR(e10) {
  return Iu(e10) && e10.tagName.toLowerCase() === "form";
}
function JR(e10) {
  return Iu(e10) && e10.tagName.toLowerCase() === "input";
}
function KR(e10) {
  return !!(e10.metaKey || e10.altKey || e10.ctrlKey || e10.shiftKey);
}
function QR(e10, t) {
  return e10.button === 0 && // Ignore everything but left clicks
  (!t || t === "_self") && // Let browser handle "target=_blank" etc.
  !KR(e10);
}
var Hl = null;
function eE() {
  if (Hl === null)
    try {
      new FormData(
        document.createElement("form"),
        // @ts-expect-error if FormData supports the submitter parameter, this will throw
        0
      ), Hl = false;
    } catch {
      Hl = true;
    }
  return Hl;
}
var tE = /* @__PURE__ */ new Set(["application/x-www-form-urlencoded", "multipart/form-data", "text/plain"]);
function op(e10) {
  return e10 != null && !tE.has(e10) ? (nr(false, '"' + e10 + '" is not a valid `encType` for `<Form>`/`<fetcher.Form>` ' + ('and will default to "' + Pc + '"')), null) : e10;
}
function nE(e10, t) {
  let n, o, r, s, a;
  if (qR(e10)) {
    let l = e10.getAttribute("action");
    o = l ? Xr(l, t) : null, n = e10.getAttribute("method") || Oc, r = op(e10.getAttribute("enctype")) || Pc, s = new FormData(e10);
  } else if (ZR(e10) || JR(e10) && (e10.type === "submit" || e10.type === "image")) {
    let l = e10.form;
    if (l == null)
      throw new Error('Cannot submit a <button> or <input type="submit"> without a <form>');
    let c = e10.getAttribute("formaction") || l.getAttribute("action");
    if (o = c ? Xr(c, t) : null, n = e10.getAttribute("formmethod") || l.getAttribute("method") || Oc, r = op(e10.getAttribute("formenctype")) || op(l.getAttribute("enctype")) || Pc, s = new FormData(l, e10), !eE()) {
      let {
        name: u,
        type: d,
        value: p
      } = e10;
      if (d === "image") {
        let m = u ? u + "." : "";
        s.append(m + "x", "0"), s.append(m + "y", "0");
      } else u && s.append(u, p);
    }
  } else {
    if (Iu(e10))
      throw new Error('Cannot submit element that is not <form>, <button>, or <input type="submit|image">');
    n = Oc, o = null, r = Pc, a = e10;
  }
  return s && r === "text/plain" && (a = s, s = void 0), {
    action: o,
    method: n.toLowerCase(),
    encType: r,
    formData: s,
    body: a
  };
}
var oE = ["onClick", "relative", "reloadDocument", "replace", "state", "target", "to", "preventScrollReset", "unstable_viewTransition"];
var rE = ["aria-current", "caseSensitive", "className", "end", "style", "to", "unstable_viewTransition", "children"];
var iE = ["fetcherKey", "navigate", "reloadDocument", "replace", "state", "method", "action", "onSubmit", "relative", "preventScrollReset", "unstable_viewTransition"];
var sE = "6";
try {
  window.__reactRouterVersion = sE;
} catch {
}
var vx = S.createContext({
  isTransitioning: false
});
vx.displayName = "ViewTransition";
var aE = S.createContext(/* @__PURE__ */ new Map());
aE.displayName = "Fetchers";
var lE = "startTransition";
var qh = S[lE];
function cE(e10) {
  let {
    basename: t,
    children: n,
    future: o,
    window: r
  } = e10, s = S.useRef();
  s.current == null && (s.current = sR({
    window: r,
    v5Compat: true
  }));
  let a = s.current, [l, c] = S.useState({
    action: a.action,
    location: a.location
  }), {
    v7_startTransition: u
  } = o || {}, d = S.useCallback((p) => {
    u && qh ? qh(() => c(p)) : c(p);
  }, [c, u]);
  return S.useLayoutEffect(() => a.listen(d), [a, d]), S.createElement(XR, {
    basename: t,
    children: n,
    location: l.location,
    navigationType: l.action,
    navigator: a,
    future: o
  });
}
var uE = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u";
var dE = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i;
var Cl = S.forwardRef(function(t, n) {
  let {
    onClick: o,
    relative: r,
    reloadDocument: s,
    replace: a,
    state: l,
    target: c,
    to: u,
    preventScrollReset: d,
    unstable_viewTransition: p
  } = t, m = Em(t, oE), {
    basename: g
  } = S.useContext(Bo), b, v = false;
  if (typeof u == "string" && dE.test(u) && (b = u, uE))
    try {
      let x = new URL(window.location.href), T = u.startsWith("//") ? new URL(x.protocol + u) : new URL(u), w = Xr(T.pathname, g);
      T.origin === x.origin && w != null ? u = w + T.search + T.hash : v = true;
    } catch {
      nr(false, '<Link to="' + u + '"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.');
    }
  let h = DR(u, {
    relative: r
  }), y = gE(u, {
    replace: a,
    state: l,
    target: c,
    preventScrollReset: d,
    relative: r,
    unstable_viewTransition: p
  });
  function C(x) {
    o && o(x), x.defaultPrevented || y(x);
  }
  return (
    // eslint-disable-next-line jsx-a11y/anchor-has-content
    S.createElement("a", Is({}, m, {
      href: b || h,
      onClick: v || s ? o : C,
      ref: n,
      target: c
    }))
  );
});
Cl.displayName = "Link";
var pE = S.forwardRef(function(t, n) {
  let {
    "aria-current": o = "page",
    caseSensitive: r = false,
    className: s = "",
    end: a = false,
    style: l,
    to: c,
    unstable_viewTransition: u,
    children: d
  } = t, p = Em(t, rE), m = xl(c, {
    relative: p.relative
  }), g = Ni(), b = S.useContext(wm), {
    navigator: v,
    basename: h
  } = S.useContext(Bo), y = b != null && // Conditional usage is OK here because the usage of a data router is static
  // eslint-disable-next-line react-hooks/rules-of-hooks
  CE(m) && u === true, C = v.encodeLocation ? v.encodeLocation(m).pathname : m.pathname, x = g.pathname, T = b && b.navigation && b.navigation.location ? b.navigation.location.pathname : null;
  r || (x = x.toLowerCase(), T = T ? T.toLowerCase() : null, C = C.toLowerCase()), T && h && (T = Xr(T, h) || T);
  const w = C !== "/" && C.endsWith("/") ? C.length - 1 : C.length;
  let R = x === C || !a && x.startsWith(C) && x.charAt(w) === "/", E = T != null && (T === C || !a && T.startsWith(C) && T.charAt(C.length) === "/"), O = {
    isActive: R,
    isPending: E,
    isTransitioning: y
  }, I = R ? o : void 0, P;
  typeof s == "function" ? P = s(O) : P = [s, R ? "active" : null, E ? "pending" : null, y ? "transitioning" : null].filter(Boolean).join(" ");
  let A = typeof l == "function" ? l(O) : l;
  return S.createElement(Cl, Is({}, p, {
    "aria-current": I,
    className: P,
    ref: n,
    style: A,
    to: c,
    unstable_viewTransition: u
  }), typeof d == "function" ? d(O) : d);
});
pE.displayName = "NavLink";
var fE = S.forwardRef((e10, t) => {
  let {
    fetcherKey: n,
    navigate: o,
    reloadDocument: r,
    replace: s,
    state: a,
    method: l = Oc,
    action: c,
    onSubmit: u,
    relative: d,
    preventScrollReset: p,
    unstable_viewTransition: m
  } = e10, g = Em(e10, iE), b = yE(), v = xE(c, {
    relative: d
  }), h = l.toLowerCase() === "get" ? "get" : "post", y = (C) => {
    if (u && u(C), C.defaultPrevented) return;
    C.preventDefault();
    let x = C.nativeEvent.submitter, T = (x == null ? void 0 : x.getAttribute("formmethod")) || l;
    b(x || C.currentTarget, {
      fetcherKey: n,
      method: T,
      navigate: o,
      replace: s,
      state: a,
      relative: d,
      preventScrollReset: p,
      unstable_viewTransition: m
    });
  };
  return S.createElement("form", Is({
    ref: t,
    method: h,
    action: v,
    onSubmit: r ? u : y
  }, g));
});
fE.displayName = "Form";
var Gc;
(function(e10) {
  e10.UseScrollRestoration = "useScrollRestoration", e10.UseSubmit = "useSubmit", e10.UseSubmitFetcher = "useSubmitFetcher", e10.UseFetcher = "useFetcher", e10.useViewTransitionState = "useViewTransitionState";
})(Gc || (Gc = {}));
var Jh;
(function(e10) {
  e10.UseFetcher = "useFetcher", e10.UseFetchers = "useFetchers", e10.UseScrollRestoration = "useScrollRestoration";
})(Jh || (Jh = {}));
function mE(e10) {
  return e10 + " must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.";
}
function yx(e10) {
  let t = S.useContext(bl);
  return t || (true ? mt(false, mE(e10)) : mt(false)), t;
}
function gE(e10, t) {
  let {
    target: n,
    replace: o,
    state: r,
    preventScrollReset: s,
    relative: a,
    unstable_viewTransition: l
  } = t === void 0 ? {} : t, c = _s(), u = Ni(), d = xl(e10, {
    relative: a
  });
  return S.useCallback((p) => {
    if (QR(p, n)) {
      p.preventDefault();
      let m = o !== void 0 ? o : Ha(u) === Ha(d);
      c(e10, {
        replace: m,
        state: r,
        preventScrollReset: s,
        relative: a,
        unstable_viewTransition: l
      });
    }
  }, [u, c, d, o, r, n, e10, s, a, l]);
}
function hE() {
  if (typeof document > "u")
    throw new Error("You are calling submit during the server render. Try calling submit within a `useEffect` or callback instead.");
}
var bE = 0;
var vE = () => "__" + String(++bE) + "__";
function yE() {
  let {
    router: e10
  } = yx(Gc.UseSubmit), {
    basename: t
  } = S.useContext(Bo), n = HR();
  return S.useCallback(function(o, r) {
    r === void 0 && (r = {}), hE();
    let {
      action: s,
      method: a,
      encType: l,
      formData: c,
      body: u
    } = nE(o, t);
    if (r.navigate === false) {
      let d = r.fetcherKey || vE();
      e10.fetch(d, n, r.action || s, {
        preventScrollReset: r.preventScrollReset,
        formData: c,
        body: u,
        formMethod: r.method || a,
        formEncType: r.encType || l,
        unstable_flushSync: r.unstable_flushSync
      });
    } else
      e10.navigate(r.action || s, {
        preventScrollReset: r.preventScrollReset,
        formData: c,
        body: u,
        formMethod: r.method || a,
        formEncType: r.encType || l,
        replace: r.replace,
        state: r.state,
        fromRouteId: n,
        unstable_flushSync: r.unstable_flushSync,
        unstable_viewTransition: r.unstable_viewTransition
      });
  }, [e10, t, n]);
}
function xE(e10, t) {
  let {
    relative: n
  } = t === void 0 ? {} : t, {
    basename: o
  } = S.useContext(Bo), r = S.useContext(ar);
  r || (true ? mt(false, "useFormAction must be used inside a RouteContext") : mt(false));
  let [s] = r.matches.slice(-1), a = Is({}, xl(e10 || ".", {
    relative: n
  })), l = Ni();
  if (e10 == null) {
    a.search = l.search;
    let c = new URLSearchParams(a.search);
    c.has("index") && c.get("index") === "" && (c.delete("index"), a.search = c.toString() ? "?" + c.toString() : "");
  }
  return (!e10 || e10 === ".") && s.route.index && (a.search = a.search ? a.search.replace(/^\?/, "?index&") : "?index"), o !== "/" && (a.pathname = a.pathname === "/" ? o : yr([o, a.pathname])), Ha(a);
}
function CE(e10, t) {
  t === void 0 && (t = {});
  let n = S.useContext(vx);
  n == null && (true ? mt(false, "`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?") : mt(false));
  let {
    basename: o
  } = yx(Gc.useViewTransitionState), r = xl(e10, {
    relative: t.relative
  });
  if (!n.isTransitioning)
    return false;
  let s = Xr(n.currentLocation.pathname, o) || n.currentLocation.pathname, a = Xr(n.nextLocation.pathname, o) || n.nextLocation.pathname;
  return Hc(r.pathname, a) != null || Hc(r.pathname, s) != null;
}
var $o = "$$material";
function xx(e10) {
  var t = /* @__PURE__ */ Object.create(null);
  return function(n) {
    return t[n] === void 0 && (t[n] = e10(n)), t[n];
  };
}
var SE = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|disableRemotePlayback|download|draggable|encType|enterKeyHint|fetchpriority|fetchPriority|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;
var wE = xx(
  function(e10) {
    return SE.test(e10) || e10.charCodeAt(0) === 111 && e10.charCodeAt(1) === 110 && e10.charCodeAt(2) < 91;
  }
  /* Z+1 */
);
var TE = false;
function IE(e10) {
  if (e10.sheet)
    return e10.sheet;
  for (var t = 0; t < document.styleSheets.length; t++)
    if (document.styleSheets[t].ownerNode === e10)
      return document.styleSheets[t];
}
function RE(e10) {
  var t = document.createElement("style");
  return t.setAttribute("data-emotion", e10.key), e10.nonce !== void 0 && t.setAttribute("nonce", e10.nonce), t.appendChild(document.createTextNode("")), t.setAttribute("data-s", ""), t;
}
var EE = function() {
  function e10(n) {
    var o = this;
    this._insertTag = function(r) {
      var s;
      o.tags.length === 0 ? o.insertionPoint ? s = o.insertionPoint.nextSibling : o.prepend ? s = o.container.firstChild : s = o.before : s = o.tags[o.tags.length - 1].nextSibling, o.container.insertBefore(r, s), o.tags.push(r);
    }, this.isSpeedy = n.speedy === void 0 ? !TE : n.speedy, this.tags = [], this.ctr = 0, this.nonce = n.nonce, this.key = n.key, this.container = n.container, this.prepend = n.prepend, this.insertionPoint = n.insertionPoint, this.before = null;
  }
  var t = e10.prototype;
  return t.hydrate = function(o) {
    o.forEach(this._insertTag);
  }, t.insert = function(o) {
    this.ctr % (this.isSpeedy ? 65e3 : 1) === 0 && this._insertTag(RE(this));
    var r = this.tags[this.tags.length - 1];
    if (this.isSpeedy) {
      var s = IE(r);
      try {
        s.insertRule(o, s.cssRules.length);
      } catch {
      }
    } else
      r.appendChild(document.createTextNode(o));
    this.ctr++;
  }, t.flush = function() {
    this.tags.forEach(function(o) {
      var r;
      return (r = o.parentNode) == null ? void 0 : r.removeChild(o);
    }), this.tags = [], this.ctr = 0;
  }, e10;
}();
var jn = "-ms-";
var Uc = "-moz-";
var jt = "-webkit-";
var Cx = "comm";
var Om = "rule";
var Pm = "decl";
var OE = "@import";
var Sx = "@keyframes";
var PE = "@layer";
var AE = Math.abs;
var Ru = String.fromCharCode;
var jE = Object.assign;
function DE(e10, t) {
  return Rn(e10, 0) ^ 45 ? (((t << 2 ^ Rn(e10, 0)) << 2 ^ Rn(e10, 1)) << 2 ^ Rn(e10, 2)) << 2 ^ Rn(e10, 3) : 0;
}
function wx(e10) {
  return e10.trim();
}
function ME(e10, t) {
  return (e10 = t.exec(e10)) ? e10[0] : e10;
}
function Dt(e10, t, n) {
  return e10.replace(t, n);
}
function cf(e10, t) {
  return e10.indexOf(t);
}
function Rn(e10, t) {
  return e10.charCodeAt(t) | 0;
}
function Xa(e10, t, n) {
  return e10.slice(t, n);
}
function qo(e10) {
  return e10.length;
}
function Am(e10) {
  return e10.length;
}
function Gl(e10, t) {
  return t.push(e10), e10;
}
function kE(e10, t) {
  return e10.map(t).join("");
}
var Eu = 1;
var Rs = 1;
var Tx = 0;
var Zn = 0;
var fn = 0;
var Ls = "";
function Ou(e10, t, n, o, r, s, a) {
  return { value: e10, root: t, parent: n, type: o, props: r, children: s, line: Eu, column: Rs, length: a, return: "" };
}
function ra(e10, t) {
  return jE(Ou("", null, null, "", null, null, 0), e10, { length: -e10.length }, t);
}
function FE() {
  return fn;
}
function NE() {
  return fn = Zn > 0 ? Rn(Ls, --Zn) : 0, Rs--, fn === 10 && (Rs = 1, Eu--), fn;
}
function io() {
  return fn = Zn < Tx ? Rn(Ls, Zn++) : 0, Rs++, fn === 10 && (Rs = 1, Eu++), fn;
}
function er() {
  return Rn(Ls, Zn);
}
function Ac() {
  return Zn;
}
function Sl(e10, t) {
  return Xa(Ls, e10, t);
}
function Ya(e10) {
  switch (e10) {
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    case 59:
    case 123:
    case 125:
      return 4;
    case 58:
      return 3;
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function Ix(e10) {
  return Eu = Rs = 1, Tx = qo(Ls = e10), Zn = 0, [];
}
function Rx(e10) {
  return Ls = "", e10;
}
function jc(e10) {
  return wx(Sl(Zn - 1, uf(e10 === 91 ? e10 + 2 : e10 === 40 ? e10 + 1 : e10)));
}
function $E(e10) {
  for (; (fn = er()) && fn < 33; )
    io();
  return Ya(e10) > 2 || Ya(fn) > 3 ? "" : " ";
}
function VE(e10, t) {
  for (; --t && io() && !(fn < 48 || fn > 102 || fn > 57 && fn < 65 || fn > 70 && fn < 97); )
    ;
  return Sl(e10, Ac() + (t < 6 && er() == 32 && io() == 32));
}
function uf(e10) {
  for (; io(); )
    switch (fn) {
      case e10:
        return Zn;
      case 34:
      case 39:
        e10 !== 34 && e10 !== 39 && uf(fn);
        break;
      case 40:
        e10 === 41 && uf(e10);
        break;
      case 92:
        io();
        break;
    }
  return Zn;
}
function _E(e10, t) {
  for (; io() && e10 + fn !== 57; )
    if (e10 + fn === 84 && er() === 47)
      break;
  return "/*" + Sl(t, Zn - 1) + "*" + Ru(e10 === 47 ? e10 : io());
}
function LE(e10) {
  for (; !Ya(er()); )
    io();
  return Sl(e10, Zn);
}
function BE(e10) {
  return Rx(Dc("", null, null, null, [""], e10 = Ix(e10), 0, [0], e10));
}
function Dc(e10, t, n, o, r, s, a, l, c) {
  for (var u = 0, d = 0, p = a, m = 0, g = 0, b = 0, v = 1, h = 1, y = 1, C = 0, x = "", T = r, w = s, R = o, E = x; h; )
    switch (b = C, C = io()) {
      case 40:
        if (b != 108 && Rn(E, p - 1) == 58) {
          cf(E += Dt(jc(C), "&", "&\f"), "&\f") != -1 && (y = -1);
          break;
        }
      case 34:
      case 39:
      case 91:
        E += jc(C);
        break;
      case 9:
      case 10:
      case 13:
      case 32:
        E += $E(b);
        break;
      case 92:
        E += VE(Ac() - 1, 7);
        continue;
      case 47:
        switch (er()) {
          case 42:
          case 47:
            Gl(zE(_E(io(), Ac()), t, n), c);
            break;
          default:
            E += "/";
        }
        break;
      case 123 * v:
        l[u++] = qo(E) * y;
      case 125 * v:
      case 59:
      case 0:
        switch (C) {
          case 0:
          case 125:
            h = 0;
          case 59 + d:
            y == -1 && (E = Dt(E, /\f/g, "")), g > 0 && qo(E) - p && Gl(g > 32 ? Qh(E + ";", o, n, p - 1) : Qh(Dt(E, " ", "") + ";", o, n, p - 2), c);
            break;
          case 59:
            E += ";";
          default:
            if (Gl(R = Kh(E, t, n, u, d, r, l, x, T = [], w = [], p), s), C === 123)
              if (d === 0)
                Dc(E, t, R, R, T, s, p, l, w);
              else
                switch (m === 99 && Rn(E, 3) === 110 ? 100 : m) {
                  case 100:
                  case 108:
                  case 109:
                  case 115:
                    Dc(e10, R, R, o && Gl(Kh(e10, R, R, 0, 0, r, l, x, r, T = [], p), w), r, w, p, l, o ? T : w);
                    break;
                  default:
                    Dc(E, R, R, R, [""], w, 0, l, w);
                }
        }
        u = d = g = 0, v = y = 1, x = E = "", p = a;
        break;
      case 58:
        p = 1 + qo(E), g = b;
      default:
        if (v < 1) {
          if (C == 123)
            --v;
          else if (C == 125 && v++ == 0 && NE() == 125)
            continue;
        }
        switch (E += Ru(C), C * v) {
          case 38:
            y = d > 0 ? 1 : (E += "\f", -1);
            break;
          case 44:
            l[u++] = (qo(E) - 1) * y, y = 1;
            break;
          case 64:
            er() === 45 && (E += jc(io())), m = er(), d = p = qo(x = E += LE(Ac())), C++;
            break;
          case 45:
            b === 45 && qo(E) == 2 && (v = 0);
        }
    }
  return s;
}
function Kh(e10, t, n, o, r, s, a, l, c, u, d) {
  for (var p = r - 1, m = r === 0 ? s : [""], g = Am(m), b = 0, v = 0, h = 0; b < o; ++b)
    for (var y = 0, C = Xa(e10, p + 1, p = AE(v = a[b])), x = e10; y < g; ++y)
      (x = wx(v > 0 ? m[y] + " " + C : Dt(C, /&\f/g, m[y]))) && (c[h++] = x);
  return Ou(e10, t, n, r === 0 ? Om : l, c, u, d);
}
function zE(e10, t, n) {
  return Ou(e10, t, n, Cx, Ru(FE()), Xa(e10, 2, -2), 0);
}
function Qh(e10, t, n, o) {
  return Ou(e10, t, n, Pm, Xa(e10, 0, o), Xa(e10, o + 1, -1), o);
}
function hs(e10, t) {
  for (var n = "", o = Am(e10), r = 0; r < o; r++)
    n += t(e10[r], r, e10, t) || "";
  return n;
}
function WE(e10, t, n, o) {
  switch (e10.type) {
    case PE:
      if (e10.children.length) break;
    case OE:
    case Pm:
      return e10.return = e10.return || e10.value;
    case Cx:
      return "";
    case Sx:
      return e10.return = e10.value + "{" + hs(e10.children, o) + "}";
    case Om:
      e10.value = e10.props.join(",");
  }
  return qo(n = hs(e10.children, o)) ? e10.return = e10.value + "{" + n + "}" : "";
}
function HE(e10) {
  var t = Am(e10);
  return function(n, o, r, s) {
    for (var a = "", l = 0; l < t; l++)
      a += e10[l](n, o, r, s) || "";
    return a;
  };
}
function GE(e10) {
  return function(t) {
    t.root || (t = t.return) && e10(t);
  };
}
var UE = function(t, n, o) {
  for (var r = 0, s = 0; r = s, s = er(), r === 38 && s === 12 && (n[o] = 1), !Ya(s); )
    io();
  return Sl(t, Zn);
};
var XE = function(t, n) {
  var o = -1, r = 44;
  do
    switch (Ya(r)) {
      case 0:
        r === 38 && er() === 12 && (n[o] = 1), t[o] += UE(Zn - 1, n, o);
        break;
      case 2:
        t[o] += jc(r);
        break;
      case 4:
        if (r === 44) {
          t[++o] = er() === 58 ? "&\f" : "", n[o] = t[o].length;
          break;
        }
      default:
        t[o] += Ru(r);
    }
  while (r = io());
  return t;
};
var YE = function(t, n) {
  return Rx(XE(Ix(t), n));
};
var eb = /* @__PURE__ */ new WeakMap();
var ZE = function(t) {
  if (!(t.type !== "rule" || !t.parent || // positive .length indicates that this rule contains pseudo
  // negative .length indicates that this rule has been already prefixed
  t.length < 1)) {
    for (var n = t.value, o = t.parent, r = t.column === o.column && t.line === o.line; o.type !== "rule"; )
      if (o = o.parent, !o) return;
    if (!(t.props.length === 1 && n.charCodeAt(0) !== 58 && !eb.get(o)) && !r) {
      eb.set(t, true);
      for (var s = [], a = YE(n, s), l = o.props, c = 0, u = 0; c < a.length; c++)
        for (var d = 0; d < l.length; d++, u++)
          t.props[u] = s[c] ? a[c].replace(/&\f/g, l[d]) : l[d] + " " + a[c];
    }
  }
};
var qE = function(t) {
  if (t.type === "decl") {
    var n = t.value;
    n.charCodeAt(0) === 108 && // charcode for b
    n.charCodeAt(2) === 98 && (t.return = "", t.value = "");
  }
};
function Ex(e10, t) {
  switch (DE(e10, t)) {
    case 5103:
      return jt + "print-" + e10 + e10;
    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921:
    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005:
    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855:
    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return jt + e10 + e10;
    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return jt + e10 + Uc + e10 + jn + e10 + e10;
    case 6828:
    case 4268:
      return jt + e10 + jn + e10 + e10;
    case 6165:
      return jt + e10 + jn + "flex-" + e10 + e10;
    case 5187:
      return jt + e10 + Dt(e10, /(\w+).+(:[^]+)/, jt + "box-$1$2" + jn + "flex-$1$2") + e10;
    case 5443:
      return jt + e10 + jn + "flex-item-" + Dt(e10, /flex-|-self/, "") + e10;
    case 4675:
      return jt + e10 + jn + "flex-line-pack" + Dt(e10, /align-content|flex-|-self/, "") + e10;
    case 5548:
      return jt + e10 + jn + Dt(e10, "shrink", "negative") + e10;
    case 5292:
      return jt + e10 + jn + Dt(e10, "basis", "preferred-size") + e10;
    case 6060:
      return jt + "box-" + Dt(e10, "-grow", "") + jt + e10 + jn + Dt(e10, "grow", "positive") + e10;
    case 4554:
      return jt + Dt(e10, /([^-])(transform)/g, "$1" + jt + "$2") + e10;
    case 6187:
      return Dt(Dt(Dt(e10, /(zoom-|grab)/, jt + "$1"), /(image-set)/, jt + "$1"), e10, "") + e10;
    case 5495:
    case 3959:
      return Dt(e10, /(image-set\([^]*)/, jt + "$1$`$1");
    case 4968:
      return Dt(Dt(e10, /(.+:)(flex-)?(.*)/, jt + "box-pack:$3" + jn + "flex-pack:$3"), /s.+-b[^;]+/, "justify") + jt + e10 + e10;
    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return Dt(e10, /(.+)-inline(.+)/, jt + "$1$2") + e10;
    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      if (qo(e10) - 1 - t > 6) switch (Rn(e10, t + 1)) {
        case 109:
          if (Rn(e10, t + 4) !== 45) break;
        case 102:
          return Dt(e10, /(.+:)(.+)-([^]+)/, "$1" + jt + "$2-$3$1" + Uc + (Rn(e10, t + 3) == 108 ? "$3" : "$2-$3")) + e10;
        case 115:
          return ~cf(e10, "stretch") ? Ex(Dt(e10, "stretch", "fill-available"), t) + e10 : e10;
      }
      break;
    case 4949:
      if (Rn(e10, t + 1) !== 115) break;
    case 6444:
      switch (Rn(e10, qo(e10) - 3 - (~cf(e10, "!important") && 10))) {
        case 107:
          return Dt(e10, ":", ":" + jt) + e10;
        case 101:
          return Dt(e10, /(.+:)([^;!]+)(;|!.+)?/, "$1" + jt + (Rn(e10, 14) === 45 ? "inline-" : "") + "box$3$1" + jt + "$2$3$1" + jn + "$2box$3") + e10;
      }
      break;
    case 5936:
      switch (Rn(e10, t + 11)) {
        case 114:
          return jt + e10 + jn + Dt(e10, /[svh]\w+-[tblr]{2}/, "tb") + e10;
        case 108:
          return jt + e10 + jn + Dt(e10, /[svh]\w+-[tblr]{2}/, "tb-rl") + e10;
        case 45:
          return jt + e10 + jn + Dt(e10, /[svh]\w+-[tblr]{2}/, "lr") + e10;
      }
      return jt + e10 + jn + e10 + e10;
  }
  return e10;
}
var JE = function(t, n, o, r) {
  if (t.length > -1 && !t.return) switch (t.type) {
    case Pm:
      t.return = Ex(t.value, t.length);
      break;
    case Sx:
      return hs([ra(t, {
        value: Dt(t.value, "@", "@" + jt)
      })], r);
    case Om:
      if (t.length) return kE(t.props, function(s) {
        switch (ME(s, /(::plac\w+|:read-\w+)/)) {
          case ":read-only":
          case ":read-write":
            return hs([ra(t, {
              props: [Dt(s, /:(read-\w+)/, ":" + Uc + "$1")]
            })], r);
          case "::placeholder":
            return hs([ra(t, {
              props: [Dt(s, /:(plac\w+)/, ":" + jt + "input-$1")]
            }), ra(t, {
              props: [Dt(s, /:(plac\w+)/, ":" + Uc + "$1")]
            }), ra(t, {
              props: [Dt(s, /:(plac\w+)/, jn + "input-$1")]
            })], r);
        }
        return "";
      });
  }
};
var KE = [JE];
var QE = function(t) {
  var n = t.key;
  if (n === "css") {
    var o = document.querySelectorAll("style[data-emotion]:not([data-s])");
    Array.prototype.forEach.call(o, function(v) {
      var h = v.getAttribute("data-emotion");
      h.indexOf(" ") !== -1 && (document.head.appendChild(v), v.setAttribute("data-s", ""));
    });
  }
  var r = t.stylisPlugins || KE, s = {}, a, l = [];
  a = t.container || document.head, Array.prototype.forEach.call(
    // this means we will ignore elements which don't have a space in them which
    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements
    document.querySelectorAll('style[data-emotion^="' + n + ' "]'),
    function(v) {
      for (var h = v.getAttribute("data-emotion").split(" "), y = 1; y < h.length; y++)
        s[h[y]] = true;
      l.push(v);
    }
  );
  var c, u = [ZE, qE];
  {
    var d, p = [WE, GE(function(v) {
      d.insert(v);
    })], m = HE(u.concat(r, p)), g = function(h) {
      return hs(BE(h), m);
    };
    c = function(h, y, C, x) {
      d = C, g(h ? h + "{" + y.styles + "}" : y.styles), x && (b.inserted[y.name] = true);
    };
  }
  var b = {
    key: n,
    sheet: new EE({
      key: n,
      container: a,
      nonce: t.nonce,
      speedy: t.speedy,
      prepend: t.prepend,
      insertionPoint: t.insertionPoint
    }),
    nonce: t.nonce,
    inserted: s,
    registered: {},
    insert: c
  };
  return b.sheet.hydrate(l), b;
};
var eO = true;
function Ox(e10, t, n) {
  var o = "";
  return n.split(" ").forEach(function(r) {
    e10[r] !== void 0 ? t.push(e10[r] + ";") : r && (o += r + " ");
  }), o;
}
var jm = function(t, n, o) {
  var r = t.key + "-" + n.name;
  (o === false || // we need to always store it if we're in compat mode and
  // in node since emotion-server relies on whether a style is in
  // the registered cache to know whether a style is global or not
  // also, note that this check will be dead code eliminated in the browser
  eO === false) && t.registered[r] === void 0 && (t.registered[r] = n.styles);
};
var Dm = function(t, n, o) {
  jm(t, n, o);
  var r = t.key + "-" + n.name;
  if (t.inserted[n.name] === void 0) {
    var s = n;
    do
      t.insert(n === s ? "." + r : "", s, t.sheet, true), s = s.next;
    while (s !== void 0);
  }
};
function tO(e10) {
  for (var t = 0, n, o = 0, r = e10.length; r >= 4; ++o, r -= 4)
    n = e10.charCodeAt(o) & 255 | (e10.charCodeAt(++o) & 255) << 8 | (e10.charCodeAt(++o) & 255) << 16 | (e10.charCodeAt(++o) & 255) << 24, n = /* Math.imul(k, m): */
    (n & 65535) * 1540483477 + ((n >>> 16) * 59797 << 16), n ^= /* k >>> r: */
    n >>> 24, t = /* Math.imul(k, m): */
    (n & 65535) * 1540483477 + ((n >>> 16) * 59797 << 16) ^ /* Math.imul(h, m): */
    (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16);
  switch (r) {
    case 3:
      t ^= (e10.charCodeAt(o + 2) & 255) << 16;
    case 2:
      t ^= (e10.charCodeAt(o + 1) & 255) << 8;
    case 1:
      t ^= e10.charCodeAt(o) & 255, t = /* Math.imul(h, m): */
      (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16);
  }
  return t ^= t >>> 13, t = /* Math.imul(h, m): */
  (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16), ((t ^ t >>> 15) >>> 0).toString(36);
}
var nO = {
  animationIterationCount: 1,
  aspectRatio: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  scale: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
};
var oO = false;
var rO = /[A-Z]|^ms/g;
var iO = /_EMO_([^_]+?)_([^]*?)_EMO_/g;
var Px = function(t) {
  return t.charCodeAt(1) === 45;
};
var tb = function(t) {
  return t != null && typeof t != "boolean";
};
var rp = xx(function(e10) {
  return Px(e10) ? e10 : e10.replace(rO, "-$&").toLowerCase();
});
var nb = function(t, n) {
  switch (t) {
    case "animation":
    case "animationName":
      if (typeof n == "string")
        return n.replace(iO, function(o, r, s) {
          return Jo = {
            name: r,
            styles: s,
            next: Jo
          }, r;
        });
  }
  return nO[t] !== 1 && !Px(t) && typeof n == "number" && n !== 0 ? n + "px" : n;
};
var sO = "Component selectors can only be used in conjunction with @emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware compiler transform.";
function Za(e10, t, n) {
  if (n == null)
    return "";
  var o = n;
  if (o.__emotion_styles !== void 0)
    return o;
  switch (typeof n) {
    case "boolean":
      return "";
    case "object": {
      var r = n;
      if (r.anim === 1)
        return Jo = {
          name: r.name,
          styles: r.styles,
          next: Jo
        }, r.name;
      var s = n;
      if (s.styles !== void 0) {
        var a = s.next;
        if (a !== void 0)
          for (; a !== void 0; )
            Jo = {
              name: a.name,
              styles: a.styles,
              next: Jo
            }, a = a.next;
        var l = s.styles + ";";
        return l;
      }
      return aO(e10, t, n);
    }
    case "function": {
      if (e10 !== void 0) {
        var c = Jo, u = n(e10);
        return Jo = c, Za(e10, t, u);
      }
      break;
    }
  }
  var d = n;
  if (t == null)
    return d;
  var p = t[d];
  return p !== void 0 ? p : d;
}
function aO(e10, t, n) {
  var o = "";
  if (Array.isArray(n))
    for (var r = 0; r < n.length; r++)
      o += Za(e10, t, n[r]) + ";";
  else
    for (var s in n) {
      var a = n[s];
      if (typeof a != "object") {
        var l = a;
        t != null && t[l] !== void 0 ? o += s + "{" + t[l] + "}" : tb(l) && (o += rp(s) + ":" + nb(s, l) + ";");
      } else {
        if (s === "NO_COMPONENT_SELECTOR" && oO)
          throw new Error(sO);
        if (Array.isArray(a) && typeof a[0] == "string" && (t == null || t[a[0]] === void 0))
          for (var c = 0; c < a.length; c++)
            tb(a[c]) && (o += rp(s) + ":" + nb(s, a[c]) + ";");
        else {
          var u = Za(e10, t, a);
          switch (s) {
            case "animation":
            case "animationName": {
              o += rp(s) + ":" + u + ";";
              break;
            }
            default:
              o += s + "{" + u + "}";
          }
        }
      }
    }
  return o;
}
var ob = /label:\s*([^\s;{]+)\s*(;|$)/g;
var Jo;
function Pu(e10, t, n) {
  if (e10.length === 1 && typeof e10[0] == "object" && e10[0] !== null && e10[0].styles !== void 0)
    return e10[0];
  var o = true, r = "";
  Jo = void 0;
  var s = e10[0];
  if (s == null || s.raw === void 0)
    o = false, r += Za(n, t, s);
  else {
    var a = s;
    r += a[0];
  }
  for (var l = 1; l < e10.length; l++)
    if (r += Za(n, t, e10[l]), o) {
      var c = s;
      r += c[l];
    }
  ob.lastIndex = 0;
  for (var u = "", d; (d = ob.exec(r)) !== null; )
    u += "-" + d[1];
  var p = tO(r) + u;
  return {
    name: p,
    styles: r,
    next: Jo
  };
}
var lO = function(t) {
  return t();
};
var Ax = S.useInsertionEffect ? S.useInsertionEffect : false;
var jx = Ax || lO;
var rb = Ax || S.useLayoutEffect;
var cO = false;
var Dx = S.createContext(
  // we're doing this to avoid preconstruct's dead code elimination in this one case
  // because this module is primarily intended for the browser and node
  // but it's also required in react native and similar environments sometimes
  // and we could have a special build just for that
  // but this is much easier and the native packages
  // might use a different theme context in the future anyway
  typeof HTMLElement < "u" ? QE({
    key: "css"
  }) : null
);
Dx.Provider;
var Mm = function(t) {
  return (0, import_react.forwardRef)(function(n, o) {
    var r = (0, import_react.useContext)(Dx);
    return t(n, r, o);
  });
};
var wl = S.createContext({});
var km = {}.hasOwnProperty;
var df = "__EMOTION_TYPE_PLEASE_DO_NOT_USE__";
var uO = function(t, n) {
  var o = {};
  for (var r in n)
    km.call(n, r) && (o[r] = n[r]);
  return o[df] = t, o;
};
var dO = function(t) {
  var n = t.cache, o = t.serialized, r = t.isStringTag;
  return jm(n, o, r), jx(function() {
    return Dm(n, o, r);
  }), null;
};
var pO = Mm(
  /* <any, any> */
  function(e10, t, n) {
    var o = e10.css;
    typeof o == "string" && t.registered[o] !== void 0 && (o = t.registered[o]);
    var r = e10[df], s = [o], a = "";
    typeof e10.className == "string" ? a = Ox(t.registered, s, e10.className) : e10.className != null && (a = e10.className + " ");
    var l = Pu(s, void 0, S.useContext(wl));
    a += t.key + "-" + l.name;
    var c = {};
    for (var u in e10)
      km.call(e10, u) && u !== "css" && u !== df && !cO && (c[u] = e10[u]);
    return c.className = a, n && (c.ref = n), S.createElement(S.Fragment, null, S.createElement(dO, {
      cache: t,
      serialized: l,
      isStringTag: typeof r == "string"
    }), S.createElement(r, c));
  }
);
var fO = pO;
var nt = function(t, n) {
  var o = arguments;
  if (n == null || !km.call(n, "css"))
    return S.createElement.apply(void 0, o);
  var r = o.length, s = new Array(r);
  s[0] = fO, s[1] = uO(t, n);
  for (var a = 2; a < r; a++)
    s[a] = o[a];
  return S.createElement.apply(null, s);
};
var mO = Mm(function(e10, t) {
  var n = e10.styles, o = Pu([n], void 0, S.useContext(wl)), r = S.useRef();
  return rb(function() {
    var s = t.key + "-global", a = new t.sheet.constructor({
      key: s,
      nonce: t.sheet.nonce,
      container: t.sheet.container,
      speedy: t.sheet.isSpeedy
    }), l = false, c = document.querySelector('style[data-emotion="' + s + " " + o.name + '"]');
    return t.sheet.tags.length && (a.before = t.sheet.tags[0]), c !== null && (l = true, c.setAttribute("data-emotion", s), a.hydrate([c])), r.current = [a, l], function() {
      a.flush();
    };
  }, [t]), rb(function() {
    var s = r.current, a = s[0], l = s[1];
    if (l) {
      s[1] = false;
      return;
    }
    if (o.next !== void 0 && Dm(t, o.next, true), a.tags.length) {
      var c = a.tags[a.tags.length - 1].nextElementSibling;
      a.before = c, a.flush();
    }
    t.insert("", o, a, false);
  }, [t, o.name]), null;
});
function lr() {
  for (var e10 = arguments.length, t = new Array(e10), n = 0; n < e10; n++)
    t[n] = arguments[n];
  return Pu(t);
}
var zo = function() {
  var t = lr.apply(void 0, arguments), n = "animation-" + t.name;
  return {
    name: n,
    styles: "@keyframes " + n + "{" + t.styles + "}",
    anim: 1,
    toString: function() {
      return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
    }
  };
};
var gO = wE;
var hO = function(t) {
  return t !== "theme";
};
var ib = function(t) {
  return typeof t == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  t.charCodeAt(0) > 96 ? gO : hO;
};
var sb = function(t, n, o) {
  var r;
  if (n) {
    var s = n.shouldForwardProp;
    r = t.__emotion_forwardProp && s ? function(a) {
      return t.__emotion_forwardProp(a) && s(a);
    } : s;
  }
  return typeof r != "function" && o && (r = t.__emotion_forwardProp), r;
};
var bO = false;
var vO = function(t) {
  var n = t.cache, o = t.serialized, r = t.isStringTag;
  return jm(n, o, r), jx(function() {
    return Dm(n, o, r);
  }), null;
};
var yO = function e(t, n) {
  var o = t.__emotion_real === t, r = o && t.__emotion_base || t, s, a;
  n !== void 0 && (s = n.label, a = n.target);
  var l = sb(t, n, o), c = l || ib(r), u = !c("as");
  return function() {
    var d = arguments, p = o && t.__emotion_styles !== void 0 ? t.__emotion_styles.slice(0) : [];
    if (s !== void 0 && p.push("label:" + s + ";"), d[0] == null || d[0].raw === void 0)
      p.push.apply(p, d);
    else {
      p.push(d[0][0]);
      for (var m = d.length, g = 1; g < m; g++)
        p.push(d[g], d[0][g]);
    }
    var b = Mm(function(v, h, y) {
      var C = u && v.as || r, x = "", T = [], w = v;
      if (v.theme == null) {
        w = {};
        for (var R in v)
          w[R] = v[R];
        w.theme = S.useContext(wl);
      }
      typeof v.className == "string" ? x = Ox(h.registered, T, v.className) : v.className != null && (x = v.className + " ");
      var E = Pu(p.concat(T), h.registered, w);
      x += h.key + "-" + E.name, a !== void 0 && (x += " " + a);
      var O = u && l === void 0 ? ib(C) : c, I = {};
      for (var P in v)
        u && P === "as" || O(P) && (I[P] = v[P]);
      return I.className = x, y && (I.ref = y), S.createElement(S.Fragment, null, S.createElement(vO, {
        cache: h,
        serialized: E,
        isStringTag: typeof C == "string"
      }), S.createElement(C, I));
    });
    return b.displayName = s !== void 0 ? s : "Styled(" + (typeof r == "string" ? r : r.displayName || r.name || "Component") + ")", b.defaultProps = t.defaultProps, b.__emotion_real = b, b.__emotion_base = r, b.__emotion_styles = p, b.__emotion_forwardProp = l, Object.defineProperty(b, "toString", {
      value: function() {
        return a === void 0 && bO ? "NO_COMPONENT_SELECTOR" : "." + a;
      }
    }), b.withComponent = function(v, h) {
      return e(v, V({}, n, h, {
        shouldForwardProp: sb(b, h, true)
      })).apply(void 0, p);
    }, b;
  };
};
var xO = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "marquee",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  // SVG
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
];
var pf = yO.bind();
xO.forEach(function(e10) {
  pf[e10] = pf(e10);
});
var ff = { exports: {} };
var ip;
var ab;
function CO() {
  if (ab) return ip;
  ab = 1;
  var e10 = Object.getOwnPropertySymbols, t = Object.prototype.hasOwnProperty, n = Object.prototype.propertyIsEnumerable;
  function o(s) {
    if (s == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(s);
  }
  function r() {
    try {
      if (!Object.assign)
        return false;
      var s = new String("abc");
      if (s[5] = "de", Object.getOwnPropertyNames(s)[0] === "5")
        return false;
      for (var a = {}, l = 0; l < 10; l++)
        a["_" + String.fromCharCode(l)] = l;
      var c = Object.getOwnPropertyNames(a).map(function(d) {
        return a[d];
      });
      if (c.join("") !== "0123456789")
        return false;
      var u = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(d) {
        u[d] = d;
      }), Object.keys(Object.assign({}, u)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return false;
    }
  }
  return ip = r() ? Object.assign : function(s, a) {
    for (var l, c = o(s), u, d = 1; d < arguments.length; d++) {
      l = Object(arguments[d]);
      for (var p in l)
        t.call(l, p) && (c[p] = l[p]);
      if (e10) {
        u = e10(l);
        for (var m = 0; m < u.length; m++)
          n.call(l, u[m]) && (c[u[m]] = l[u[m]]);
      }
    }
    return c;
  }, ip;
}
var sp;
var lb;
function Fm() {
  if (lb) return sp;
  lb = 1;
  var e10 = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return sp = e10, sp;
}
var ap;
var cb;
function Mx() {
  return cb || (cb = 1, ap = Function.call.bind(Object.prototype.hasOwnProperty)), ap;
}
var lp;
var ub;
function SO() {
  if (ub) return lp;
  ub = 1;
  var e10 = function() {
  };
  if (true) {
    var t = Fm(), n = {}, o = Mx();
    e10 = function(s) {
      var a = "Warning: " + s;
      typeof console < "u" && console.error(a);
      try {
        throw new Error(a);
      } catch {
      }
    };
  }
  function r(s, a, l, c, u) {
    if (true) {
      for (var d in s)
        if (o(s, d)) {
          var p;
          try {
            if (typeof s[d] != "function") {
              var m = Error(
                (c || "React class") + ": " + l + " type `" + d + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof s[d] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw m.name = "Invariant Violation", m;
            }
            p = s[d](a, d, c, l, null, t);
          } catch (b) {
            p = b;
          }
          if (p && !(p instanceof Error) && e10(
            (c || "React class") + ": type specification of " + l + " `" + d + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof p + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), p instanceof Error && !(p.message in n)) {
            n[p.message] = true;
            var g = u ? u() : "";
            e10(
              "Failed " + l + " type: " + p.message + (g ?? "")
            );
          }
        }
    }
  }
  return r.resetWarningCache = function() {
    n = {};
  }, lp = r, lp;
}
var cp;
var db;
function wO() {
  if (db) return cp;
  db = 1;
  var e10 = Sm, t = CO(), n = Fm(), o = Mx(), r = SO(), s = function() {
  };
  s = function(l) {
    var c = "Warning: " + l;
    typeof console < "u" && console.error(c);
    try {
      throw new Error(c);
    } catch {
    }
  };
  function a() {
    return null;
  }
  return cp = function(l, c) {
    var u = typeof Symbol == "function" && Symbol.iterator, d = "@@iterator";
    function p(k) {
      var B = k && (u && k[u] || k[d]);
      if (typeof B == "function")
        return B;
    }
    var m = "<<anonymous>>", g = {
      array: y("array"),
      bigint: y("bigint"),
      bool: y("boolean"),
      func: y("function"),
      number: y("number"),
      object: y("object"),
      string: y("string"),
      symbol: y("symbol"),
      any: C(),
      arrayOf: x,
      element: T(),
      elementType: w(),
      instanceOf: R,
      node: P(),
      objectOf: O,
      oneOf: E,
      oneOfType: I,
      shape: M,
      exact: F
    };
    function b(k, B) {
      return k === B ? k !== 0 || 1 / k === 1 / B : k !== k && B !== B;
    }
    function v(k, B) {
      this.message = k, this.data = B && typeof B == "object" ? B : {}, this.stack = "";
    }
    v.prototype = Error.prototype;
    function h(k) {
      if (true)
        var B = {}, Q = 0;
      function ee(H, Y, J, U, ne, se, oe) {
        if (U = U || m, se = se || J, oe !== n) {
          if (c) {
            var W = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw W.name = "Invariant Violation", W;
          } else if (typeof console < "u") {
            var Z = U + ":" + J;
            !B[Z] && // Avoid spamming the console because they are often not actionable except for lib authors
            Q < 3 && (s(
              "You are manually calling a React.PropTypes validation function for the `" + se + "` prop on `" + U + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), B[Z] = true, Q++);
          }
        }
        return Y[J] == null ? H ? Y[J] === null ? new v("The " + ne + " `" + se + "` is marked as required " + ("in `" + U + "`, but its value is `null`.")) : new v("The " + ne + " `" + se + "` is marked as required in " + ("`" + U + "`, but its value is `undefined`.")) : null : k(Y, J, U, ne, se);
      }
      var G = ee.bind(null, false);
      return G.isRequired = ee.bind(null, true), G;
    }
    function y(k) {
      function B(Q, ee, G, H, Y, J) {
        var U = Q[ee], ne = j(U);
        if (ne !== k) {
          var se = _(U);
          return new v(
            "Invalid " + H + " `" + Y + "` of type " + ("`" + se + "` supplied to `" + G + "`, expected ") + ("`" + k + "`."),
            { expectedType: k }
          );
        }
        return null;
      }
      return h(B);
    }
    function C() {
      return h(a);
    }
    function x(k) {
      function B(Q, ee, G, H, Y) {
        if (typeof k != "function")
          return new v("Property `" + Y + "` of component `" + G + "` has invalid PropType notation inside arrayOf.");
        var J = Q[ee];
        if (!Array.isArray(J)) {
          var U = j(J);
          return new v("Invalid " + H + " `" + Y + "` of type " + ("`" + U + "` supplied to `" + G + "`, expected an array."));
        }
        for (var ne = 0; ne < J.length; ne++) {
          var se = k(J, ne, G, H, Y + "[" + ne + "]", n);
          if (se instanceof Error)
            return se;
        }
        return null;
      }
      return h(B);
    }
    function T() {
      function k(B, Q, ee, G, H) {
        var Y = B[Q];
        if (!l(Y)) {
          var J = j(Y);
          return new v("Invalid " + G + " `" + H + "` of type " + ("`" + J + "` supplied to `" + ee + "`, expected a single ReactElement."));
        }
        return null;
      }
      return h(k);
    }
    function w() {
      function k(B, Q, ee, G, H) {
        var Y = B[Q];
        if (!e10.isValidElementType(Y)) {
          var J = j(Y);
          return new v("Invalid " + G + " `" + H + "` of type " + ("`" + J + "` supplied to `" + ee + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return h(k);
    }
    function R(k) {
      function B(Q, ee, G, H, Y) {
        if (!(Q[ee] instanceof k)) {
          var J = k.name || m, U = $(Q[ee]);
          return new v("Invalid " + H + " `" + Y + "` of type " + ("`" + U + "` supplied to `" + G + "`, expected ") + ("instance of `" + J + "`."));
        }
        return null;
      }
      return h(B);
    }
    function E(k) {
      if (!Array.isArray(k))
        return arguments.length > 1 ? s(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : s("Invalid argument supplied to oneOf, expected an array."), a;
      function B(Q, ee, G, H, Y) {
        for (var J = Q[ee], U = 0; U < k.length; U++)
          if (b(J, k[U]))
            return null;
        var ne = JSON.stringify(k, function(oe, W) {
          var Z = _(W);
          return Z === "symbol" ? String(W) : W;
        });
        return new v("Invalid " + H + " `" + Y + "` of value `" + String(J) + "` " + ("supplied to `" + G + "`, expected one of " + ne + "."));
      }
      return h(B);
    }
    function O(k) {
      function B(Q, ee, G, H, Y) {
        if (typeof k != "function")
          return new v("Property `" + Y + "` of component `" + G + "` has invalid PropType notation inside objectOf.");
        var J = Q[ee], U = j(J);
        if (U !== "object")
          return new v("Invalid " + H + " `" + Y + "` of type " + ("`" + U + "` supplied to `" + G + "`, expected an object."));
        for (var ne in J)
          if (o(J, ne)) {
            var se = k(J, ne, G, H, Y + "." + ne, n);
            if (se instanceof Error)
              return se;
          }
        return null;
      }
      return h(B);
    }
    function I(k) {
      if (!Array.isArray(k))
        return s("Invalid argument supplied to oneOfType, expected an instance of array."), a;
      for (var B = 0; B < k.length; B++) {
        var Q = k[B];
        if (typeof Q != "function")
          return s(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + z(Q) + " at index " + B + "."
          ), a;
      }
      function ee(G, H, Y, J, U) {
        for (var ne = [], se = 0; se < k.length; se++) {
          var oe = k[se], W = oe(G, H, Y, J, U, n);
          if (W == null)
            return null;
          W.data && o(W.data, "expectedType") && ne.push(W.data.expectedType);
        }
        var Z = ne.length > 0 ? ", expected one of type [" + ne.join(", ") + "]" : "";
        return new v("Invalid " + J + " `" + U + "` supplied to " + ("`" + Y + "`" + Z + "."));
      }
      return h(ee);
    }
    function P() {
      function k(B, Q, ee, G, H) {
        return D(B[Q]) ? null : new v("Invalid " + G + " `" + H + "` supplied to " + ("`" + ee + "`, expected a ReactNode."));
      }
      return h(k);
    }
    function A(k, B, Q, ee, G) {
      return new v(
        (k || "React class") + ": " + B + " type `" + Q + "." + ee + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + G + "`."
      );
    }
    function M(k) {
      function B(Q, ee, G, H, Y) {
        var J = Q[ee], U = j(J);
        if (U !== "object")
          return new v("Invalid " + H + " `" + Y + "` of type `" + U + "` " + ("supplied to `" + G + "`, expected `object`."));
        for (var ne in k) {
          var se = k[ne];
          if (typeof se != "function")
            return A(G, H, Y, ne, _(se));
          var oe = se(J, ne, G, H, Y + "." + ne, n);
          if (oe)
            return oe;
        }
        return null;
      }
      return h(B);
    }
    function F(k) {
      function B(Q, ee, G, H, Y) {
        var J = Q[ee], U = j(J);
        if (U !== "object")
          return new v("Invalid " + H + " `" + Y + "` of type `" + U + "` " + ("supplied to `" + G + "`, expected `object`."));
        var ne = t({}, Q[ee], k);
        for (var se in ne) {
          var oe = k[se];
          if (o(k, se) && typeof oe != "function")
            return A(G, H, Y, se, _(oe));
          if (!oe)
            return new v(
              "Invalid " + H + " `" + Y + "` key `" + se + "` supplied to `" + G + "`.\nBad object: " + JSON.stringify(Q[ee], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(k), null, "  ")
            );
          var W = oe(J, se, G, H, Y + "." + se, n);
          if (W)
            return W;
        }
        return null;
      }
      return h(B);
    }
    function D(k) {
      switch (typeof k) {
        case "number":
        case "string":
        case "undefined":
          return true;
        case "boolean":
          return !k;
        case "object":
          if (Array.isArray(k))
            return k.every(D);
          if (k === null || l(k))
            return true;
          var B = p(k);
          if (B) {
            var Q = B.call(k), ee;
            if (B !== k.entries) {
              for (; !(ee = Q.next()).done; )
                if (!D(ee.value))
                  return false;
            } else
              for (; !(ee = Q.next()).done; ) {
                var G = ee.value;
                if (G && !D(G[1]))
                  return false;
              }
          } else
            return false;
          return true;
        default:
          return false;
      }
    }
    function N(k, B) {
      return k === "symbol" ? true : B ? B["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && B instanceof Symbol : false;
    }
    function j(k) {
      var B = typeof k;
      return Array.isArray(k) ? "array" : k instanceof RegExp ? "object" : N(B, k) ? "symbol" : B;
    }
    function _(k) {
      if (typeof k > "u" || k === null)
        return "" + k;
      var B = j(k);
      if (B === "object") {
        if (k instanceof Date)
          return "date";
        if (k instanceof RegExp)
          return "regexp";
      }
      return B;
    }
    function z(k) {
      var B = _(k);
      switch (B) {
        case "array":
        case "object":
          return "an " + B;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + B;
        default:
          return B;
      }
    }
    function $(k) {
      return !k.constructor || !k.constructor.name ? m : k.constructor.name;
    }
    return g.checkPropTypes = r, g.resetWarningCache = r.resetWarningCache, g.PropTypes = g, g;
  }, cp;
}
if (true) {
  IO = Sm, RO = true;
  ff.exports = wO()(IO.isElement, RO);
} else
  ff.exports = TO()();
var IO;
var RO;
var EO = ff.exports;
var i = Cm(EO);
var mf = { exports: {} };
var sa = {};
var mb;
function PO() {
  return mb || (mb = 1, function() {
    var e10 = import_react.default, t = Symbol.for("react.element"), n = Symbol.for("react.portal"), o = Symbol.for("react.fragment"), r = Symbol.for("react.strict_mode"), s = Symbol.for("react.profiler"), a = Symbol.for("react.provider"), l = Symbol.for("react.context"), c = Symbol.for("react.forward_ref"), u = Symbol.for("react.suspense"), d = Symbol.for("react.suspense_list"), p = Symbol.for("react.memo"), m = Symbol.for("react.lazy"), g = Symbol.for("react.offscreen"), b = Symbol.iterator, v = "@@iterator";
    function h(q) {
      if (q === null || typeof q != "object")
        return null;
      var Ce = b && q[b] || q[v];
      return typeof Ce == "function" ? Ce : null;
    }
    var y = e10.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function C(q) {
      {
        for (var Ce = arguments.length, Ne = new Array(Ce > 1 ? Ce - 1 : 0), pe = 1; pe < Ce; pe++)
          Ne[pe - 1] = arguments[pe];
        x("error", q, Ne);
      }
    }
    function x(q, Ce, Ne) {
      {
        var pe = y.ReactDebugCurrentFrame, fe = pe.getStackAddendum();
        fe !== "" && (Ce += "%s", Ne = Ne.concat([fe]));
        var Pe = Ne.map(function(_e) {
          return String(_e);
        });
        Pe.unshift("Warning: " + Ce), Function.prototype.apply.call(console[q], console, Pe);
      }
    }
    var T = false, w = false, R = false, E = false, O = false, I;
    I = Symbol.for("react.module.reference");
    function P(q) {
      return !!(typeof q == "string" || typeof q == "function" || q === o || q === s || O || q === r || q === u || q === d || E || q === g || T || w || R || typeof q == "object" && q !== null && (q.$$typeof === m || q.$$typeof === p || q.$$typeof === a || q.$$typeof === l || q.$$typeof === c || // This needs to include all possible module reference object
      // types supported by any Flight configuration anywhere since
      // we don't know which Flight build this will end up being used
      // with.
      q.$$typeof === I || q.getModuleId !== void 0));
    }
    function A(q, Ce, Ne) {
      var pe = q.displayName;
      if (pe)
        return pe;
      var fe = Ce.displayName || Ce.name || "";
      return fe !== "" ? Ne + "(" + fe + ")" : Ne;
    }
    function M(q) {
      return q.displayName || "Context";
    }
    function F(q) {
      if (q == null)
        return null;
      if (typeof q.tag == "number" && C("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof q == "function")
        return q.displayName || q.name || null;
      if (typeof q == "string")
        return q;
      switch (q) {
        case o:
          return "Fragment";
        case n:
          return "Portal";
        case s:
          return "Profiler";
        case r:
          return "StrictMode";
        case u:
          return "Suspense";
        case d:
          return "SuspenseList";
      }
      if (typeof q == "object")
        switch (q.$$typeof) {
          case l:
            var Ce = q;
            return M(Ce) + ".Consumer";
          case a:
            var Ne = q;
            return M(Ne._context) + ".Provider";
          case c:
            return A(q, q.render, "ForwardRef");
          case p:
            var pe = q.displayName || null;
            return pe !== null ? pe : F(q.type) || "Memo";
          case m: {
            var fe = q, Pe = fe._payload, _e = fe._init;
            try {
              return F(_e(Pe));
            } catch {
              return null;
            }
          }
        }
      return null;
    }
    var D = Object.assign, N = 0, j, _, z, $, k, B, Q;
    function ee() {
    }
    ee.__reactDisabledLog = true;
    function G() {
      {
        if (N === 0) {
          j = console.log, _ = console.info, z = console.warn, $ = console.error, k = console.group, B = console.groupCollapsed, Q = console.groupEnd;
          var q = {
            configurable: true,
            enumerable: true,
            value: ee,
            writable: true
          };
          Object.defineProperties(console, {
            info: q,
            log: q,
            warn: q,
            error: q,
            group: q,
            groupCollapsed: q,
            groupEnd: q
          });
        }
        N++;
      }
    }
    function H() {
      {
        if (N--, N === 0) {
          var q = {
            configurable: true,
            enumerable: true,
            writable: true
          };
          Object.defineProperties(console, {
            log: D({}, q, {
              value: j
            }),
            info: D({}, q, {
              value: _
            }),
            warn: D({}, q, {
              value: z
            }),
            error: D({}, q, {
              value: $
            }),
            group: D({}, q, {
              value: k
            }),
            groupCollapsed: D({}, q, {
              value: B
            }),
            groupEnd: D({}, q, {
              value: Q
            })
          });
        }
        N < 0 && C("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
      }
    }
    var Y = y.ReactCurrentDispatcher, J;
    function U(q, Ce, Ne) {
      {
        if (J === void 0)
          try {
            throw Error();
          } catch (fe) {
            var pe = fe.stack.trim().match(/\n( *(at )?)/);
            J = pe && pe[1] || "";
          }
        return `
` + J + q;
      }
    }
    var ne = false, se;
    {
      var oe = typeof WeakMap == "function" ? WeakMap : Map;
      se = new oe();
    }
    function W(q, Ce) {
      if (!q || ne)
        return "";
      {
        var Ne = se.get(q);
        if (Ne !== void 0)
          return Ne;
      }
      var pe;
      ne = true;
      var fe = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      var Pe;
      Pe = Y.current, Y.current = null, G();
      try {
        if (Ce) {
          var _e = function() {
            throw Error();
          };
          if (Object.defineProperty(_e.prototype, "props", {
            set: function() {
              throw Error();
            }
          }), typeof Reflect == "object" && Reflect.construct) {
            try {
              Reflect.construct(_e, []);
            } catch (Tn) {
              pe = Tn;
            }
            Reflect.construct(q, [], _e);
          } else {
            try {
              _e.call();
            } catch (Tn) {
              pe = Tn;
            }
            q.call(_e.prototype);
          }
        } else {
          try {
            throw Error();
          } catch (Tn) {
            pe = Tn;
          }
          q();
        }
      } catch (Tn) {
        if (Tn && pe && typeof Tn.stack == "string") {
          for (var $e = Tn.stack.split(`
`), ct = pe.stack.split(`
`), rt = $e.length - 1, St = ct.length - 1; rt >= 1 && St >= 0 && $e[rt] !== ct[St]; )
            St--;
          for (; rt >= 1 && St >= 0; rt--, St--)
            if ($e[rt] !== ct[St]) {
              if (rt !== 1 || St !== 1)
                do
                  if (rt--, St--, St < 0 || $e[rt] !== ct[St]) {
                    var bn = `
` + $e[rt].replace(" at new ", " at ");
                    return q.displayName && bn.includes("<anonymous>") && (bn = bn.replace("<anonymous>", q.displayName)), typeof q == "function" && se.set(q, bn), bn;
                  }
                while (rt >= 1 && St >= 0);
              break;
            }
        }
      } finally {
        ne = false, Y.current = Pe, H(), Error.prepareStackTrace = fe;
      }
      var ci = q ? q.displayName || q.name : "", fr = ci ? U(ci) : "";
      return typeof q == "function" && se.set(q, fr), fr;
    }
    function Z(q, Ce, Ne) {
      return W(q, false);
    }
    function L(q) {
      var Ce = q.prototype;
      return !!(Ce && Ce.isReactComponent);
    }
    function ie(q, Ce, Ne) {
      if (q == null)
        return "";
      if (typeof q == "function")
        return W(q, L(q));
      if (typeof q == "string")
        return U(q);
      switch (q) {
        case u:
          return U("Suspense");
        case d:
          return U("SuspenseList");
      }
      if (typeof q == "object")
        switch (q.$$typeof) {
          case c:
            return Z(q.render);
          case p:
            return ie(q.type, Ce, Ne);
          case m: {
            var pe = q, fe = pe._payload, Pe = pe._init;
            try {
              return ie(Pe(fe), Ce, Ne);
            } catch {
            }
          }
        }
      return "";
    }
    var te = Object.prototype.hasOwnProperty, le = {}, ue = y.ReactDebugCurrentFrame;
    function ve(q) {
      if (q) {
        var Ce = q._owner, Ne = ie(q.type, q._source, Ce ? Ce.type : null);
        ue.setExtraStackFrame(Ne);
      } else
        ue.setExtraStackFrame(null);
    }
    function Te(q, Ce, Ne, pe, fe) {
      {
        var Pe = Function.call.bind(te);
        for (var _e in q)
          if (Pe(q, _e)) {
            var $e = void 0;
            try {
              if (typeof q[_e] != "function") {
                var ct = Error((pe || "React class") + ": " + Ne + " type `" + _e + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof q[_e] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                throw ct.name = "Invariant Violation", ct;
              }
              $e = q[_e](Ce, _e, pe, Ne, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (rt) {
              $e = rt;
            }
            $e && !($e instanceof Error) && (ve(fe), C("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", pe || "React class", Ne, _e, typeof $e), ve(null)), $e instanceof Error && !($e.message in le) && (le[$e.message] = true, ve(fe), C("Failed %s type: %s", Ne, $e.message), ve(null));
          }
      }
    }
    var Re = Array.isArray;
    function re(q) {
      return Re(q);
    }
    function X(q) {
      {
        var Ce = typeof Symbol == "function" && Symbol.toStringTag, Ne = Ce && q[Symbol.toStringTag] || q.constructor.name || "Object";
        return Ne;
      }
    }
    function ae(q) {
      try {
        return ce(q), false;
      } catch {
        return true;
      }
    }
    function ce(q) {
      return "" + q;
    }
    function ge(q) {
      if (ae(q))
        return C("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", X(q)), ce(q);
    }
    var Se = y.ReactCurrentOwner, ye = {
      key: true,
      ref: true,
      __self: true,
      __source: true
    }, Ee, Le, Ae;
    Ae = {};
    function tt(q) {
      if (te.call(q, "ref")) {
        var Ce = Object.getOwnPropertyDescriptor(q, "ref").get;
        if (Ce && Ce.isReactWarning)
          return false;
      }
      return q.ref !== void 0;
    }
    function Ze(q) {
      if (te.call(q, "key")) {
        var Ce = Object.getOwnPropertyDescriptor(q, "key").get;
        if (Ce && Ce.isReactWarning)
          return false;
      }
      return q.key !== void 0;
    }
    function ut(q, Ce) {
      if (typeof q.ref == "string" && Se.current && Ce && Se.current.stateNode !== Ce) {
        var Ne = F(Se.current.type);
        Ae[Ne] || (C('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', F(Se.current.type), q.ref), Ae[Ne] = true);
      }
    }
    function me(q, Ce) {
      {
        var Ne = function() {
          Ee || (Ee = true, C("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", Ce));
        };
        Ne.isReactWarning = true, Object.defineProperty(q, "key", {
          get: Ne,
          configurable: true
        });
      }
    }
    function Oe(q, Ce) {
      {
        var Ne = function() {
          Le || (Le = true, C("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", Ce));
        };
        Ne.isReactWarning = true, Object.defineProperty(q, "ref", {
          get: Ne,
          configurable: true
        });
      }
    }
    var he = function(q, Ce, Ne, pe, fe, Pe, _e) {
      var $e = {
        // This tag allows us to uniquely identify this as a React Element
        $$typeof: t,
        // Built-in properties that belong on the element
        type: q,
        key: Ce,
        ref: Ne,
        props: _e,
        // Record the component responsible for creating this element.
        _owner: Pe
      };
      return $e._store = {}, Object.defineProperty($e._store, "validated", {
        configurable: false,
        enumerable: false,
        writable: true,
        value: false
      }), Object.defineProperty($e, "_self", {
        configurable: false,
        enumerable: false,
        writable: false,
        value: pe
      }), Object.defineProperty($e, "_source", {
        configurable: false,
        enumerable: false,
        writable: false,
        value: fe
      }), Object.freeze && (Object.freeze($e.props), Object.freeze($e)), $e;
    };
    function Me(q, Ce, Ne, pe, fe) {
      {
        var Pe, _e = {}, $e = null, ct = null;
        Ne !== void 0 && (ge(Ne), $e = "" + Ne), Ze(Ce) && (ge(Ce.key), $e = "" + Ce.key), tt(Ce) && (ct = Ce.ref, ut(Ce, fe));
        for (Pe in Ce)
          te.call(Ce, Pe) && !ye.hasOwnProperty(Pe) && (_e[Pe] = Ce[Pe]);
        if (q && q.defaultProps) {
          var rt = q.defaultProps;
          for (Pe in rt)
            _e[Pe] === void 0 && (_e[Pe] = rt[Pe]);
        }
        if ($e || ct) {
          var St = typeof q == "function" ? q.displayName || q.name || "Unknown" : q;
          $e && me(_e, St), ct && Oe(_e, St);
        }
        return he(q, $e, ct, fe, pe, Se.current, _e);
      }
    }
    var ke = y.ReactCurrentOwner, st = y.ReactDebugCurrentFrame;
    function pt(q) {
      if (q) {
        var Ce = q._owner, Ne = ie(q.type, q._source, Ce ? Ce.type : null);
        st.setExtraStackFrame(Ne);
      } else
        st.setExtraStackFrame(null);
    }
    var it;
    it = false;
    function xt(q) {
      return typeof q == "object" && q !== null && q.$$typeof === t;
    }
    function Kt() {
      {
        if (ke.current) {
          var q = F(ke.current.type);
          if (q)
            return `

Check the render method of \`` + q + "`.";
        }
        return "";
      }
    }
    function wn(q) {
      return "";
    }
    var Qt = {};
    function ot(q) {
      {
        var Ce = Kt();
        if (!Ce) {
          var Ne = typeof q == "string" ? q : q.displayName || q.name;
          Ne && (Ce = `

Check the top-level render call using <` + Ne + ">.");
        }
        return Ce;
      }
    }
    function dn(q, Ce) {
      {
        if (!q._store || q._store.validated || q.key != null)
          return;
        q._store.validated = true;
        var Ne = ot(Ce);
        if (Qt[Ne])
          return;
        Qt[Ne] = true;
        var pe = "";
        q && q._owner && q._owner !== ke.current && (pe = " It was passed a child from " + F(q._owner.type) + "."), pt(q), C('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', Ne, pe), pt(null);
      }
    }
    function dr(q, Ce) {
      {
        if (typeof q != "object")
          return;
        if (re(q))
          for (var Ne = 0; Ne < q.length; Ne++) {
            var pe = q[Ne];
            xt(pe) && dn(pe, Ce);
          }
        else if (xt(q))
          q._store && (q._store.validated = true);
        else if (q) {
          var fe = h(q);
          if (typeof fe == "function" && fe !== q.entries)
            for (var Pe = fe.call(q), _e; !(_e = Pe.next()).done; )
              xt(_e.value) && dn(_e.value, Ce);
        }
      }
    }
    function Ho(q) {
      {
        var Ce = q.type;
        if (Ce == null || typeof Ce == "string")
          return;
        var Ne;
        if (typeof Ce == "function")
          Ne = Ce.propTypes;
        else if (typeof Ce == "object" && (Ce.$$typeof === c || // Note: Memo only checks outer props here.
        // Inner props are checked in the reconciler.
        Ce.$$typeof === p))
          Ne = Ce.propTypes;
        else
          return;
        if (Ne) {
          var pe = F(Ce);
          Te(Ne, q.props, "prop", pe, q);
        } else if (Ce.PropTypes !== void 0 && !it) {
          it = true;
          var fe = F(Ce);
          C("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", fe || "Unknown");
        }
        typeof Ce.getDefaultProps == "function" && !Ce.getDefaultProps.isReactClassApproved && C("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
      }
    }
    function pr(q) {
      {
        for (var Ce = Object.keys(q.props), Ne = 0; Ne < Ce.length; Ne++) {
          var pe = Ce[Ne];
          if (pe !== "children" && pe !== "key") {
            pt(q), C("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", pe), pt(null);
            break;
          }
        }
        q.ref !== null && (pt(q), C("Invalid attribute `ref` supplied to `React.Fragment`."), pt(null));
      }
    }
    var Go = {};
    function qe(q, Ce, Ne, pe, fe, Pe) {
      {
        var _e = P(q);
        if (!_e) {
          var $e = "";
          (q === void 0 || typeof q == "object" && q !== null && Object.keys(q).length === 0) && ($e += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
          var ct = wn();
          ct ? $e += ct : $e += Kt();
          var rt;
          q === null ? rt = "null" : re(q) ? rt = "array" : q !== void 0 && q.$$typeof === t ? (rt = "<" + (F(q.type) || "Unknown") + " />", $e = " Did you accidentally export a JSX literal instead of a component?") : rt = typeof q, C("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", rt, $e);
        }
        var St = Me(q, Ce, Ne, fe, Pe);
        if (St == null)
          return St;
        if (_e) {
          var bn = Ce.children;
          if (bn !== void 0)
            if (pe)
              if (re(bn)) {
                for (var ci = 0; ci < bn.length; ci++)
                  dr(bn[ci], q);
                Object.freeze && Object.freeze(bn);
              } else
                C("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
            else
              dr(bn, q);
        }
        if (te.call(Ce, "key")) {
          var fr = F(q), Tn = Object.keys(Ce).filter(function(ta) {
            return ta !== "key";
          }), Fr = Tn.length > 0 ? "{key: someKey, " + Tn.join(": ..., ") + ": ...}" : "{key: someKey}";
          if (!Go[fr + Fr]) {
            var qi = Tn.length > 0 ? "{" + Tn.join(": ..., ") + ": ...}" : "{}";
            C(`A props object containing a "key" prop is being spread into JSX:
  let props = %s;
  <%s {...props} />
React keys must be passed directly to JSX without using spread:
  let props = %s;
  <%s key={someKey} {...props} />`, Fr, fr, qi, fr), Go[fr + Fr] = true;
          }
        }
        return q === o ? pr(St) : Ho(St), St;
      }
    }
    function kr(q, Ce, Ne) {
      return qe(q, Ce, Ne, true);
    }
    function Ht(q, Ce, Ne) {
      return qe(q, Ce, Ne, false);
    }
    var pn = Ht, hn = kr;
    sa.Fragment = o, sa.jsx = pn, sa.jsxs = hn;
  }()), sa;
}
false ? mf.exports = OO() : mf.exports = PO();
var f = mf.exports;
function AO(e10) {
  return e10 == null || Object.keys(e10).length === 0;
}
function Nm(e10) {
  const {
    styles: t,
    defaultTheme: n = {}
  } = e10, o = typeof t == "function" ? (r) => t(AO(r) ? n : r) : t;
  return f.jsx(mO, {
    styles: o
  });
}
Nm.propTypes = {
  defaultTheme: i.object,
  styles: i.oneOfType([i.array, i.string, i.object, i.func])
};
function kx(e10, t) {
  const n = pf(e10, t);
  return true ? (...o) => {
    const r = typeof e10 == "string" ? `"${e10}"` : "component";
    return o.length === 0 ? console.error([`MUI: Seems like you called \`styled(${r})()\` without a \`style\` argument.`, 'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'].join(`
`)) : o.some((s) => s === void 0) && console.error(`MUI: the styled(${r})(...args) API requires all its args to be defined.`), n(...o);
  } : n;
}
var jO = (e10, t) => {
  Array.isArray(e10.__emotion_styles) && (e10.__emotion_styles = t(e10.__emotion_styles));
};
function Ko(e10) {
  if (typeof e10 != "object" || e10 === null)
    return false;
  const t = Object.getPrototypeOf(e10);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e10) && !(Symbol.iterator in e10);
}
function Fx(e10) {
  if (!Ko(e10))
    return e10;
  const t = {};
  return Object.keys(e10).forEach((n) => {
    t[n] = Fx(e10[n]);
  }), t;
}
function Cn(e10, t, n = {
  clone: true
}) {
  const o = n.clone ? {
    ...e10
  } : e10;
  return Ko(e10) && Ko(t) && Object.keys(t).forEach((r) => {
    Ko(t[r]) && // Avoid prototype pollution
    Object.prototype.hasOwnProperty.call(e10, r) && Ko(e10[r]) ? o[r] = Cn(e10[r], t[r], n) : n.clone ? o[r] = Ko(t[r]) ? Fx(t[r]) : t[r] : o[r] = t[r];
  }), o;
}
var DO = (e10) => {
  const t = Object.keys(e10).map((n) => ({
    key: n,
    val: e10[n]
  })) || [];
  return t.sort((n, o) => n.val - o.val), t.reduce((n, o) => ({
    ...n,
    [o.key]: o.val
  }), {});
};
function MO(e10) {
  const {
    // The breakpoint **start** at this value.
    // For instance with the first breakpoint xs: [xs, sm).
    values: t = {
      xs: 0,
      // phone
      sm: 600,
      // tablet
      md: 900,
      // small laptop
      lg: 1200,
      // desktop
      xl: 1536
      // large screen
    },
    unit: n = "px",
    step: o = 5,
    ...r
  } = e10, s = DO(t), a = Object.keys(s);
  function l(m) {
    return `@media (min-width:${typeof t[m] == "number" ? t[m] : m}${n})`;
  }
  function c(m) {
    return `@media (max-width:${(typeof t[m] == "number" ? t[m] : m) - o / 100}${n})`;
  }
  function u(m, g) {
    const b = a.indexOf(g);
    return `@media (min-width:${typeof t[m] == "number" ? t[m] : m}${n}) and (max-width:${(b !== -1 && typeof t[a[b]] == "number" ? t[a[b]] : g) - o / 100}${n})`;
  }
  function d(m) {
    return a.indexOf(m) + 1 < a.length ? u(m, a[a.indexOf(m) + 1]) : l(m);
  }
  function p(m) {
    const g = a.indexOf(m);
    return g === 0 ? l(a[1]) : g === a.length - 1 ? c(a[g]) : u(m, a[a.indexOf(m) + 1]).replace("@media", "@media not all and");
  }
  return {
    keys: a,
    values: s,
    up: l,
    down: c,
    between: u,
    only: d,
    not: p,
    unit: n,
    ...r
  };
}
function kO(e10, t) {
  if (!e10.containerQueries)
    return t;
  const n = Object.keys(t).filter((o) => o.startsWith("@container")).sort((o, r) => {
    var a, l;
    const s = /min-width:\s*([0-9.]+)/;
    return +(((a = o.match(s)) == null ? void 0 : a[1]) || 0) - +(((l = r.match(s)) == null ? void 0 : l[1]) || 0);
  });
  return n.length ? n.reduce((o, r) => {
    const s = t[r];
    return delete o[r], o[r] = s, o;
  }, {
    ...t
  }) : t;
}
function FO(e10, t) {
  return t === "@" || t.startsWith("@") && (e10.some((n) => t.startsWith(`@${n}`)) || !!t.match(/^@\d/));
}
function NO(e10, t) {
  const n = t.match(/^@([^/]+)?\/?(.+)?$/);
  if (!n) {
    if (true)
      throw new Error(true ? `MUI: The provided shorthand ${`(${t})`} is invalid. The format should be \`@<breakpoint | number>\` or \`@<breakpoint | number>/<container>\`.
For example, \`@sm\` or \`@600\` or \`@40rem/sidebar\`.` : or(18, `(${t})`));
    return null;
  }
  const [, o, r] = n, s = Number.isNaN(+o) ? o || 0 : +o;
  return e10.containerQueries(r).up(s);
}
function $O(e10) {
  const t = (s, a) => s.replace("@media", a ? `@container ${a}` : "@container");
  function n(s, a) {
    s.up = (...l) => t(e10.breakpoints.up(...l), a), s.down = (...l) => t(e10.breakpoints.down(...l), a), s.between = (...l) => t(e10.breakpoints.between(...l), a), s.only = (...l) => t(e10.breakpoints.only(...l), a), s.not = (...l) => {
      const c = t(e10.breakpoints.not(...l), a);
      return c.includes("not all and") ? c.replace("not all and ", "").replace("min-width:", "width<").replace("max-width:", "width>").replace("and", "or") : c;
    };
  }
  const o = {}, r = (s) => (n(o, s), o);
  return n(r), {
    ...e10,
    containerQueries: r
  };
}
var VO = {
  borderRadius: 4
};
var ni = true ? i.oneOfType([i.number, i.string, i.object, i.array]) : {};
function Oa(e10, t) {
  return t ? Cn(e10, t, {
    clone: false
    // No need to clone deep, it's way faster.
  }) : e10;
}
var Au = {
  xs: 0,
  // phone
  sm: 600,
  // tablet
  md: 900,
  // small laptop
  lg: 1200,
  // desktop
  xl: 1536
  // large screen
};
var gb = {
  // Sorted ASC by size. That's important.
  // It can't be configured as it's used statically for propTypes.
  keys: ["xs", "sm", "md", "lg", "xl"],
  up: (e10) => `@media (min-width:${Au[e10]}px)`
};
var _O = {
  containerQueries: (e10) => ({
    up: (t) => {
      let n = typeof t == "number" ? t : Au[t] || t;
      return typeof n == "number" && (n = `${n}px`), e10 ? `@container ${e10} (min-width:${n})` : `@container (min-width:${n})`;
    }
  })
};
function qn(e10, t, n) {
  const o = e10.theme || {};
  if (Array.isArray(t)) {
    const s = o.breakpoints || gb;
    return t.reduce((a, l, c) => (a[s.up(s.keys[c])] = n(t[c]), a), {});
  }
  if (typeof t == "object") {
    const s = o.breakpoints || gb;
    return Object.keys(t).reduce((a, l) => {
      if (FO(s.keys, l)) {
        const c = NO(o.containerQueries ? o : _O, l);
        c && (a[c] = n(t[l], l));
      } else if (Object.keys(s.values || Au).includes(l)) {
        const c = s.up(l);
        a[c] = n(t[l], l);
      } else {
        const c = l;
        a[c] = t[c];
      }
      return a;
    }, {});
  }
  return n(t);
}
function Nx(e10 = {}) {
  var n;
  return ((n = e10.keys) == null ? void 0 : n.reduce((o, r) => {
    const s = e10.up(r);
    return o[s] = {}, o;
  }, {})) || {};
}
function $x(e10, t) {
  return e10.reduce((n, o) => {
    const r = n[o];
    return (!r || Object.keys(r).length === 0) && delete n[o], n;
  }, t);
}
function LO(e10, ...t) {
  const n = Nx(e10), o = [n, ...t].reduce((r, s) => Cn(r, s), {});
  return $x(Object.keys(n), o);
}
function BO(e10, t) {
  if (typeof e10 != "object")
    return {};
  const n = {}, o = Object.keys(t);
  return Array.isArray(e10) ? o.forEach((r, s) => {
    s < e10.length && (n[r] = true);
  }) : o.forEach((r) => {
    e10[r] != null && (n[r] = true);
  }), n;
}
function wi({
  values: e10,
  breakpoints: t,
  base: n
}) {
  const o = n || BO(e10, t), r = Object.keys(o);
  if (r.length === 0)
    return e10;
  let s;
  return r.reduce((a, l, c) => (Array.isArray(e10) ? (a[l] = e10[c] != null ? e10[c] : e10[s], s = c) : typeof e10 == "object" ? (a[l] = e10[l] != null ? e10[l] : e10[s], s = l) : a[l] = e10, a), {});
}
function de(e10) {
  if (typeof e10 != "string")
    throw new Error(true ? "MUI: `capitalize(string)` expects a string argument." : or(7));
  return e10.charAt(0).toUpperCase() + e10.slice(1);
}
function ju(e10, t, n = true) {
  if (!t || typeof t != "string")
    return null;
  if (e10 && e10.vars && n) {
    const o = `vars.${t}`.split(".").reduce((r, s) => r && r[s] ? r[s] : null, e10);
    if (o != null)
      return o;
  }
  return t.split(".").reduce((o, r) => o && o[r] != null ? o[r] : null, e10);
}
function Xc(e10, t, n, o = n) {
  let r;
  return typeof e10 == "function" ? r = e10(n) : Array.isArray(e10) ? r = e10[n] || o : r = ju(e10, n) || o, t && (r = t(r, o, e10)), r;
}
function cn(e10) {
  const {
    prop: t,
    cssProperty: n = e10.prop,
    themeKey: o,
    transform: r
  } = e10, s = (a) => {
    if (a[t] == null)
      return null;
    const l = a[t], c = a.theme, u = ju(c, o) || {};
    return qn(a, l, (p) => {
      let m = Xc(u, r, p);
      return p === m && typeof p == "string" && (m = Xc(u, r, `${t}${p === "default" ? "" : de(p)}`, p)), n === false ? m : {
        [n]: m
      };
    });
  };
  return s.propTypes = true ? {
    [t]: ni
  } : {}, s.filterProps = [t], s;
}
function zO(e10) {
  const t = {};
  return (n) => (t[n] === void 0 && (t[n] = e10(n)), t[n]);
}
var WO = {
  m: "margin",
  p: "padding"
};
var HO = {
  t: "Top",
  r: "Right",
  b: "Bottom",
  l: "Left",
  x: ["Left", "Right"],
  y: ["Top", "Bottom"]
};
var hb = {
  marginX: "mx",
  marginY: "my",
  paddingX: "px",
  paddingY: "py"
};
var GO = zO((e10) => {
  if (e10.length > 2)
    if (hb[e10])
      e10 = hb[e10];
    else
      return [e10];
  const [t, n] = e10.split(""), o = WO[t], r = HO[n] || "";
  return Array.isArray(r) ? r.map((s) => o + s) : [o + r];
});
var Du = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"];
var Mu = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"];
var UO = [...Du, ...Mu];
function Tl(e10, t, n, o) {
  const r = ju(e10, t, true) ?? n;
  return typeof r == "number" || typeof r == "string" ? (s) => typeof s == "string" ? s : (typeof s != "number" && console.error(`MUI: Expected ${o} argument to be a number or a string, got ${s}.`), typeof r == "string" ? `calc(${s} * ${r})` : r * s) : Array.isArray(r) ? (s) => {
    if (typeof s == "string")
      return s;
    const a = Math.abs(s);
    Number.isInteger(a) ? a > r.length - 1 && console.error([`MUI: The value provided (${a}) overflows.`, `The supported values are: ${JSON.stringify(r)}.`, `${a} > ${r.length - 1}, you need to add the missing values.`].join(`
`)) : console.error([`MUI: The \`theme.${t}\` array type cannot be combined with non integer values.You should either use an integer value that can be used as index, or define the \`theme.${t}\` as a number.`].join(`
`));
    const l = r[a];
    return s >= 0 ? l : typeof l == "number" ? -l : `-${l}`;
  } : typeof r == "function" ? r : (console.error([`MUI: The \`theme.${t}\` value (${r}) is invalid.`, "It should be a number, an array or a function."].join(`
`)), () => {
  });
}
function ku(e10) {
  return Tl(e10, "spacing", 8, "spacing");
}
function Pi(e10, t) {
  return typeof t == "string" || t == null ? t : e10(t);
}
function XO(e10, t) {
  return (n) => e10.reduce((o, r) => (o[r] = Pi(t, n), o), {});
}
function YO(e10, t, n, o) {
  if (!t.includes(n))
    return null;
  const r = GO(n), s = XO(r, o), a = e10[n];
  return qn(e10, a, s);
}
function Vx(e10, t) {
  const n = ku(e10.theme);
  return Object.keys(e10).map((o) => YO(e10, t, o, n)).reduce(Oa, {});
}
function en(e10) {
  return Vx(e10, Du);
}
en.propTypes = true ? Du.reduce((e10, t) => (e10[t] = ni, e10), {}) : {};
en.filterProps = Du;
function tn(e10) {
  return Vx(e10, Mu);
}
tn.propTypes = true ? Mu.reduce((e10, t) => (e10[t] = ni, e10), {}) : {};
tn.filterProps = Mu;
UO.reduce((e10, t) => (e10[t] = ni, e10), {});
function _x(e10 = 8, t = ku({
  spacing: e10
})) {
  if (e10.mui)
    return e10;
  const n = (...o) => (o.length <= 4 || console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${o.length}`), (o.length === 0 ? [1] : o).map((s) => {
    const a = t(s);
    return typeof a == "number" ? `${a}px` : a;
  }).join(" "));
  return n.mui = true, n;
}
function Fu(...e10) {
  const t = e10.reduce((o, r) => (r.filterProps.forEach((s) => {
    o[s] = r;
  }), o), {}), n = (o) => Object.keys(o).reduce((r, s) => t[s] ? Oa(r, t[s](o)) : r, {});
  return n.propTypes = true ? e10.reduce((o, r) => Object.assign(o, r.propTypes), {}) : {}, n.filterProps = e10.reduce((o, r) => o.concat(r.filterProps), []), n;
}
function xo(e10) {
  return typeof e10 != "number" ? e10 : `${e10}px solid`;
}
function Po(e10, t) {
  return cn({
    prop: e10,
    themeKey: "borders",
    transform: t
  });
}
var ZO = Po("border", xo);
var qO = Po("borderTop", xo);
var JO = Po("borderRight", xo);
var KO = Po("borderBottom", xo);
var QO = Po("borderLeft", xo);
var eP = Po("borderColor");
var tP = Po("borderTopColor");
var nP = Po("borderRightColor");
var oP = Po("borderBottomColor");
var rP = Po("borderLeftColor");
var iP = Po("outline", xo);
var sP = Po("outlineColor");
var Nu = (e10) => {
  if (e10.borderRadius !== void 0 && e10.borderRadius !== null) {
    const t = Tl(e10.theme, "shape.borderRadius", 4, "borderRadius"), n = (o) => ({
      borderRadius: Pi(t, o)
    });
    return qn(e10, e10.borderRadius, n);
  }
  return null;
};
Nu.propTypes = true ? {
  borderRadius: ni
} : {};
Nu.filterProps = ["borderRadius"];
Fu(ZO, qO, JO, KO, QO, eP, tP, nP, oP, rP, Nu, iP, sP);
var $u = (e10) => {
  if (e10.gap !== void 0 && e10.gap !== null) {
    const t = Tl(e10.theme, "spacing", 8, "gap"), n = (o) => ({
      gap: Pi(t, o)
    });
    return qn(e10, e10.gap, n);
  }
  return null;
};
$u.propTypes = true ? {
  gap: ni
} : {};
$u.filterProps = ["gap"];
var Vu = (e10) => {
  if (e10.columnGap !== void 0 && e10.columnGap !== null) {
    const t = Tl(e10.theme, "spacing", 8, "columnGap"), n = (o) => ({
      columnGap: Pi(t, o)
    });
    return qn(e10, e10.columnGap, n);
  }
  return null;
};
Vu.propTypes = true ? {
  columnGap: ni
} : {};
Vu.filterProps = ["columnGap"];
var _u = (e10) => {
  if (e10.rowGap !== void 0 && e10.rowGap !== null) {
    const t = Tl(e10.theme, "spacing", 8, "rowGap"), n = (o) => ({
      rowGap: Pi(t, o)
    });
    return qn(e10, e10.rowGap, n);
  }
  return null;
};
_u.propTypes = true ? {
  rowGap: ni
} : {};
_u.filterProps = ["rowGap"];
var aP = cn({
  prop: "gridColumn"
});
var lP = cn({
  prop: "gridRow"
});
var cP = cn({
  prop: "gridAutoFlow"
});
var uP = cn({
  prop: "gridAutoColumns"
});
var dP = cn({
  prop: "gridAutoRows"
});
var pP = cn({
  prop: "gridTemplateColumns"
});
var fP = cn({
  prop: "gridTemplateRows"
});
var mP = cn({
  prop: "gridTemplateAreas"
});
var gP = cn({
  prop: "gridArea"
});
Fu($u, Vu, _u, aP, lP, cP, uP, dP, pP, fP, mP, gP);
function bs(e10, t) {
  return t === "grey" ? t : e10;
}
var hP = cn({
  prop: "color",
  themeKey: "palette",
  transform: bs
});
var bP = cn({
  prop: "bgcolor",
  cssProperty: "backgroundColor",
  themeKey: "palette",
  transform: bs
});
var vP = cn({
  prop: "backgroundColor",
  themeKey: "palette",
  transform: bs
});
Fu(hP, bP, vP);
function oo(e10) {
  return e10 <= 1 && e10 !== 0 ? `${e10 * 100}%` : e10;
}
var yP = cn({
  prop: "width",
  transform: oo
});
var $m = (e10) => {
  if (e10.maxWidth !== void 0 && e10.maxWidth !== null) {
    const t = (n) => {
      var r, s, a, l, c;
      const o = ((a = (s = (r = e10.theme) == null ? void 0 : r.breakpoints) == null ? void 0 : s.values) == null ? void 0 : a[n]) || Au[n];
      return o ? ((c = (l = e10.theme) == null ? void 0 : l.breakpoints) == null ? void 0 : c.unit) !== "px" ? {
        maxWidth: `${o}${e10.theme.breakpoints.unit}`
      } : {
        maxWidth: o
      } : {
        maxWidth: oo(n)
      };
    };
    return qn(e10, e10.maxWidth, t);
  }
  return null;
};
$m.filterProps = ["maxWidth"];
var xP = cn({
  prop: "minWidth",
  transform: oo
});
var CP = cn({
  prop: "height",
  transform: oo
});
var SP = cn({
  prop: "maxHeight",
  transform: oo
});
var wP = cn({
  prop: "minHeight",
  transform: oo
});
cn({
  prop: "size",
  cssProperty: "width",
  transform: oo
});
cn({
  prop: "size",
  cssProperty: "height",
  transform: oo
});
var TP = cn({
  prop: "boxSizing"
});
Fu(yP, $m, xP, CP, SP, wP, TP);
var Il = {
  // borders
  border: {
    themeKey: "borders",
    transform: xo
  },
  borderTop: {
    themeKey: "borders",
    transform: xo
  },
  borderRight: {
    themeKey: "borders",
    transform: xo
  },
  borderBottom: {
    themeKey: "borders",
    transform: xo
  },
  borderLeft: {
    themeKey: "borders",
    transform: xo
  },
  borderColor: {
    themeKey: "palette"
  },
  borderTopColor: {
    themeKey: "palette"
  },
  borderRightColor: {
    themeKey: "palette"
  },
  borderBottomColor: {
    themeKey: "palette"
  },
  borderLeftColor: {
    themeKey: "palette"
  },
  outline: {
    themeKey: "borders",
    transform: xo
  },
  outlineColor: {
    themeKey: "palette"
  },
  borderRadius: {
    themeKey: "shape.borderRadius",
    style: Nu
  },
  // palette
  color: {
    themeKey: "palette",
    transform: bs
  },
  bgcolor: {
    themeKey: "palette",
    cssProperty: "backgroundColor",
    transform: bs
  },
  backgroundColor: {
    themeKey: "palette",
    transform: bs
  },
  // spacing
  p: {
    style: tn
  },
  pt: {
    style: tn
  },
  pr: {
    style: tn
  },
  pb: {
    style: tn
  },
  pl: {
    style: tn
  },
  px: {
    style: tn
  },
  py: {
    style: tn
  },
  padding: {
    style: tn
  },
  paddingTop: {
    style: tn
  },
  paddingRight: {
    style: tn
  },
  paddingBottom: {
    style: tn
  },
  paddingLeft: {
    style: tn
  },
  paddingX: {
    style: tn
  },
  paddingY: {
    style: tn
  },
  paddingInline: {
    style: tn
  },
  paddingInlineStart: {
    style: tn
  },
  paddingInlineEnd: {
    style: tn
  },
  paddingBlock: {
    style: tn
  },
  paddingBlockStart: {
    style: tn
  },
  paddingBlockEnd: {
    style: tn
  },
  m: {
    style: en
  },
  mt: {
    style: en
  },
  mr: {
    style: en
  },
  mb: {
    style: en
  },
  ml: {
    style: en
  },
  mx: {
    style: en
  },
  my: {
    style: en
  },
  margin: {
    style: en
  },
  marginTop: {
    style: en
  },
  marginRight: {
    style: en
  },
  marginBottom: {
    style: en
  },
  marginLeft: {
    style: en
  },
  marginX: {
    style: en
  },
  marginY: {
    style: en
  },
  marginInline: {
    style: en
  },
  marginInlineStart: {
    style: en
  },
  marginInlineEnd: {
    style: en
  },
  marginBlock: {
    style: en
  },
  marginBlockStart: {
    style: en
  },
  marginBlockEnd: {
    style: en
  },
  // display
  displayPrint: {
    cssProperty: false,
    transform: (e10) => ({
      "@media print": {
        display: e10
      }
    })
  },
  display: {},
  overflow: {},
  textOverflow: {},
  visibility: {},
  whiteSpace: {},
  // flexbox
  flexBasis: {},
  flexDirection: {},
  flexWrap: {},
  justifyContent: {},
  alignItems: {},
  alignContent: {},
  order: {},
  flex: {},
  flexGrow: {},
  flexShrink: {},
  alignSelf: {},
  justifyItems: {},
  justifySelf: {},
  // grid
  gap: {
    style: $u
  },
  rowGap: {
    style: _u
  },
  columnGap: {
    style: Vu
  },
  gridColumn: {},
  gridRow: {},
  gridAutoFlow: {},
  gridAutoColumns: {},
  gridAutoRows: {},
  gridTemplateColumns: {},
  gridTemplateRows: {},
  gridTemplateAreas: {},
  gridArea: {},
  // positions
  position: {},
  zIndex: {
    themeKey: "zIndex"
  },
  top: {},
  right: {},
  bottom: {},
  left: {},
  // shadows
  boxShadow: {
    themeKey: "shadows"
  },
  // sizing
  width: {
    transform: oo
  },
  maxWidth: {
    style: $m
  },
  minWidth: {
    transform: oo
  },
  height: {
    transform: oo
  },
  maxHeight: {
    transform: oo
  },
  minHeight: {
    transform: oo
  },
  boxSizing: {},
  // typography
  font: {
    themeKey: "font"
  },
  fontFamily: {
    themeKey: "typography"
  },
  fontSize: {
    themeKey: "typography"
  },
  fontStyle: {
    themeKey: "typography"
  },
  fontWeight: {
    themeKey: "typography"
  },
  letterSpacing: {},
  textTransform: {},
  lineHeight: {},
  textAlign: {},
  typography: {
    cssProperty: false,
    themeKey: "typography"
  }
};
function IP(...e10) {
  const t = e10.reduce((o, r) => o.concat(Object.keys(r)), []), n = new Set(t);
  return e10.every((o) => n.size === Object.keys(o).length);
}
function RP(e10, t) {
  return typeof e10 == "function" ? e10(t) : e10;
}
function EP() {
  function e10(n, o, r, s) {
    const a = {
      [n]: o,
      theme: r
    }, l = s[n];
    if (!l)
      return {
        [n]: o
      };
    const {
      cssProperty: c = n,
      themeKey: u,
      transform: d,
      style: p
    } = l;
    if (o == null)
      return null;
    if (u === "typography" && o === "inherit")
      return {
        [n]: o
      };
    const m = ju(r, u) || {};
    return p ? p(a) : qn(a, o, (b) => {
      let v = Xc(m, d, b);
      return b === v && typeof b == "string" && (v = Xc(m, d, `${n}${b === "default" ? "" : de(b)}`, b)), c === false ? v : {
        [c]: v
      };
    });
  }
  function t(n) {
    const {
      sx: o,
      theme: r = {}
    } = n || {};
    if (!o)
      return null;
    const s = r.unstable_sxConfig ?? Il;
    function a(l) {
      let c = l;
      if (typeof l == "function")
        c = l(r);
      else if (typeof l != "object")
        return l;
      if (!c)
        return null;
      const u = Nx(r.breakpoints), d = Object.keys(u);
      let p = u;
      return Object.keys(c).forEach((m) => {
        const g = RP(c[m], r);
        if (g != null)
          if (typeof g == "object")
            if (s[m])
              p = Oa(p, e10(m, g, r, s));
            else {
              const b = qn({
                theme: r
              }, g, (v) => ({
                [m]: v
              }));
              IP(b, g) ? p[m] = t({
                sx: g,
                theme: r
              }) : p = Oa(p, b);
            }
          else
            p = Oa(p, e10(m, g, r, s));
      }), kO(r, $x(d, p));
    }
    return Array.isArray(o) ? o.map(a) : a(o);
  }
  return t;
}
var $i = EP();
$i.filterProps = ["sx"];
function OP(e10, t) {
  var o;
  const n = this;
  if (n.vars) {
    if (!((o = n.colorSchemes) != null && o[e10]) || typeof n.getColorSchemeSelector != "function")
      return {};
    let r = n.getColorSchemeSelector(e10);
    return r === "&" ? t : ((r.includes("data-") || r.includes(".")) && (r = `*:where(${r.replace(/\s*&$/, "")}) &`), {
      [r]: t
    });
  }
  return n.palette.mode === e10 ? t : {};
}
function Lu(e10 = {}, ...t) {
  const {
    breakpoints: n = {},
    palette: o = {},
    spacing: r,
    shape: s = {},
    ...a
  } = e10, l = MO(n), c = _x(r);
  let u = Cn({
    breakpoints: l,
    direction: "ltr",
    components: {},
    // Inject component definitions.
    palette: {
      mode: "light",
      ...o
    },
    spacing: c,
    shape: {
      ...VO,
      ...s
    }
  }, a);
  return u = $O(u), u.applyStyles = OP, u = t.reduce((d, p) => Cn(d, p), u), u.unstable_sxConfig = {
    ...Il,
    ...a == null ? void 0 : a.unstable_sxConfig
  }, u.unstable_sx = function(p) {
    return $i({
      sx: p,
      theme: this
    });
  }, u;
}
function PP(e10) {
  return Object.keys(e10).length === 0;
}
function Vm(e10 = null) {
  const t = S.useContext(wl);
  return !t || PP(t) ? e10 : t;
}
var AP = Lu();
function Bu(e10 = AP) {
  return Vm(e10);
}
function Lx({
  styles: e10,
  themeId: t,
  defaultTheme: n = {}
}) {
  const o = Bu(n), r = typeof e10 == "function" ? e10(t && o[t] || o) : e10;
  return f.jsx(Nm, {
    styles: r
  });
}
Lx.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  defaultTheme: i.object,
  /**
   * @ignore
   */
  styles: i.oneOfType([i.array, i.func, i.number, i.object, i.string, i.bool]),
  /**
   * @ignore
   */
  themeId: i.string
};
var jP = (e10) => {
  var o;
  const t = {
    systemProps: {},
    otherProps: {}
  }, n = ((o = e10 == null ? void 0 : e10.theme) == null ? void 0 : o.unstable_sxConfig) ?? Il;
  return Object.keys(e10).forEach((r) => {
    n[r] ? t.systemProps[r] = e10[r] : t.otherProps[r] = e10[r];
  }), t;
};
function zu(e10) {
  const {
    sx: t,
    ...n
  } = e10, {
    systemProps: o,
    otherProps: r
  } = jP(n);
  let s;
  return Array.isArray(t) ? s = [o, ...t] : typeof t == "function" ? s = (...a) => {
    const l = t(...a);
    return Ko(l) ? {
      ...o,
      ...l
    } : o;
  } : s = {
    ...o,
    ...t
  }, {
    ...r,
    sx: s
  };
}
var bb = (e10) => e10;
var DP = () => {
  let e10 = bb;
  return {
    configure(t) {
      e10 = t;
    },
    generate(t) {
      return e10(t);
    },
    reset() {
      e10 = bb;
    }
  };
};
var Bx = DP();
function zx(e10) {
  var t, n, o = "";
  if (typeof e10 == "string" || typeof e10 == "number") o += e10;
  else if (typeof e10 == "object") if (Array.isArray(e10)) {
    var r = e10.length;
    for (t = 0; t < r; t++) e10[t] && (n = zx(e10[t])) && (o && (o += " "), o += n);
  } else for (n in e10) e10[n] && (o && (o += " "), o += n);
  return o;
}
function be() {
  for (var e10, t, n = 0, o = "", r = arguments.length; n < r; n++) (e10 = arguments[n]) && (t = zx(e10)) && (o && (o += " "), o += t);
  return o;
}
function MP(e10 = {}) {
  const {
    themeId: t,
    defaultTheme: n,
    defaultClassName: o = "MuiBox-root",
    generateClassName: r
  } = e10, s = kx("div", {
    shouldForwardProp: (l) => l !== "theme" && l !== "sx" && l !== "as"
  })($i);
  return S.forwardRef(function(c, u) {
    const d = Bu(n), {
      className: p,
      component: m = "div",
      ...g
    } = zu(c);
    return f.jsx(s, {
      as: m,
      ref: u,
      className: be(p, r ? r(o) : o),
      theme: t && d[t] || d,
      ...g
    });
  });
}
var kP = {
  active: "active",
  checked: "checked",
  completed: "completed",
  disabled: "disabled",
  error: "error",
  expanded: "expanded",
  focused: "focused",
  focusVisible: "focusVisible",
  open: "open",
  readOnly: "readOnly",
  required: "required",
  selected: "selected"
};
function He(e10, t, n = "Mui") {
  const o = kP[t];
  return o ? `${n}-${o}` : `${Bx.generate(e10)}-${t}`;
}
function Be(e10, t, n = "Mui") {
  const o = {};
  return t.forEach((r) => {
    o[r] = He(e10, r, n);
  }), o;
}
var gf = { exports: {} };
var _t = {};
var yb;
function NP() {
  return yb || (yb = 1, function() {
    var e10 = Symbol.for("react.element"), t = Symbol.for("react.portal"), n = Symbol.for("react.fragment"), o = Symbol.for("react.strict_mode"), r = Symbol.for("react.profiler"), s = Symbol.for("react.provider"), a = Symbol.for("react.context"), l = Symbol.for("react.server_context"), c = Symbol.for("react.forward_ref"), u = Symbol.for("react.suspense"), d = Symbol.for("react.suspense_list"), p = Symbol.for("react.memo"), m = Symbol.for("react.lazy"), g = Symbol.for("react.offscreen"), b = false, v = false, h = false, y = false, C = false, x;
    x = Symbol.for("react.module.reference");
    function T(L) {
      return !!(typeof L == "string" || typeof L == "function" || L === n || L === r || C || L === o || L === u || L === d || y || L === g || b || v || h || typeof L == "object" && L !== null && (L.$$typeof === m || L.$$typeof === p || L.$$typeof === s || L.$$typeof === a || L.$$typeof === c || // This needs to include all possible module reference object
      // types supported by any Flight configuration anywhere since
      // we don't know which Flight build this will end up being used
      // with.
      L.$$typeof === x || L.getModuleId !== void 0));
    }
    function w(L) {
      if (typeof L == "object" && L !== null) {
        var ie = L.$$typeof;
        switch (ie) {
          case e10:
            var te = L.type;
            switch (te) {
              case n:
              case r:
              case o:
              case u:
              case d:
                return te;
              default:
                var le = te && te.$$typeof;
                switch (le) {
                  case l:
                  case a:
                  case c:
                  case m:
                  case p:
                  case s:
                    return le;
                  default:
                    return ie;
                }
            }
          case t:
            return ie;
        }
      }
    }
    var R = a, E = s, O = e10, I = c, P = n, A = m, M = p, F = t, D = r, N = o, j = u, _ = d, z = false, $ = false;
    function k(L) {
      return z || (z = true, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.")), false;
    }
    function B(L) {
      return $ || ($ = true, console.warn("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.")), false;
    }
    function Q(L) {
      return w(L) === a;
    }
    function ee(L) {
      return w(L) === s;
    }
    function G(L) {
      return typeof L == "object" && L !== null && L.$$typeof === e10;
    }
    function H(L) {
      return w(L) === c;
    }
    function Y(L) {
      return w(L) === n;
    }
    function J(L) {
      return w(L) === m;
    }
    function U(L) {
      return w(L) === p;
    }
    function ne(L) {
      return w(L) === t;
    }
    function se(L) {
      return w(L) === r;
    }
    function oe(L) {
      return w(L) === o;
    }
    function W(L) {
      return w(L) === u;
    }
    function Z(L) {
      return w(L) === d;
    }
    _t.ContextConsumer = R, _t.ContextProvider = E, _t.Element = O, _t.ForwardRef = I, _t.Fragment = P, _t.Lazy = A, _t.Memo = M, _t.Portal = F, _t.Profiler = D, _t.StrictMode = N, _t.Suspense = j, _t.SuspenseList = _, _t.isAsyncMode = k, _t.isConcurrentMode = B, _t.isContextConsumer = Q, _t.isContextProvider = ee, _t.isElement = G, _t.isForwardRef = H, _t.isFragment = Y, _t.isLazy = J, _t.isMemo = U, _t.isPortal = ne, _t.isProfiler = se, _t.isStrictMode = oe, _t.isSuspense = W, _t.isSuspenseList = Z, _t.isValidElementType = T, _t.typeOf = w;
  }()), _t;
}
false ? gf.exports = FP() : gf.exports = NP();
var xb = gf.exports;
function Wx(e10, t = "") {
  return e10.displayName || e10.name || t;
}
function Cb(e10, t, n) {
  const o = Wx(t);
  return e10.displayName || (o !== "" ? `${n}(${o})` : n);
}
function $P(e10) {
  if (e10 != null) {
    if (typeof e10 == "string")
      return e10;
    if (typeof e10 == "function")
      return Wx(e10, "Component");
    if (typeof e10 == "object")
      switch (e10.$$typeof) {
        case xb.ForwardRef:
          return Cb(e10, e10.render, "ForwardRef");
        case xb.Memo:
          return Cb(e10, e10.type, "memo");
        default:
          return;
      }
  }
}
var VP = Lu();
function dp(e10) {
  return e10 !== "ownerState" && e10 !== "theme" && e10 !== "sx" && e10 !== "as";
}
function hf(e10, t, n) {
  return LP(t) ? n : t[e10] || t;
}
var Ul = Symbol("mui.processed_props");
function Xl(e10, t, n) {
  if (Ul in e10)
    return e10[Ul];
  const o = {
    ...e10,
    theme: hf(t, e10.theme, n)
  };
  return e10[Ul] = o, o[Ul] = o, o;
}
function _P(e10) {
  return e10 ? (t, n) => n[e10] : null;
}
function Mc(e10, t) {
  var o;
  const n = typeof e10 == "function" ? e10(t) : e10;
  if (Array.isArray(n))
    return n.flatMap((r) => Mc(r, t));
  if (Array.isArray(n == null ? void 0 : n.variants)) {
    const {
      variants: r,
      ...s
    } = n;
    let a = s, l;
    e: for (let c = 0; c < r.length; c += 1) {
      const u = r[c];
      if (typeof u.props == "function") {
        if (l ?? (l = {
          ...t,
          ...t.ownerState,
          ownerState: t.ownerState
        }), !u.props(l))
          continue;
      } else
        for (const d in u.props)
          if (t[d] !== u.props[d] && ((o = t.ownerState) == null ? void 0 : o[d]) !== u.props[d])
            continue e;
      Array.isArray(a) || (a = [a]), typeof u.style == "function" ? (l ?? (l = {
        ...t,
        ...t.ownerState,
        ownerState: t.ownerState
      }), a.push(u.style(l))) : a.push(u.style);
    }
    return a;
  }
  return n;
}
function Hx(e10 = {}) {
  const {
    themeId: t,
    defaultTheme: n = VP,
    rootShouldForwardProp: o = dp,
    slotShouldForwardProp: r = dp
  } = e10, s = (l) => $i(Xl(l, t, n));
  return s.__mui_systemSx = true, (l, c = {}) => {
    jO(l, (R) => R.filter((E) => !(E != null && E.__mui_systemSx)));
    const {
      name: u,
      slot: d,
      skipVariantsResolver: p,
      skipSx: m,
      // TODO v6: remove `lowercaseFirstLetter()` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      overridesResolver: g = _P(Sb(d)),
      ...b
    } = c, v = p !== void 0 ? p : (
      // TODO v6: remove `Root` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      d && d !== "Root" && d !== "root" || false
    ), h = m || false;
    let y;
    u && (y = `${u}-${Sb(d || "Root")}`);
    let C = dp;
    d === "Root" || d === "root" ? C = o : d ? C = r : BP(l) && (C = void 0);
    const x = kx(l, {
      shouldForwardProp: C,
      label: y,
      ...b
    }), T = (R) => typeof R == "function" && R.__emotion_real !== R || Ko(R) ? (E) => Mc(R, Xl(E, t, n)) : R, w = (R, ...E) => {
      let O = T(R);
      const I = E ? E.map(T) : [];
      u && g && I.push((M) => {
        const F = hf(t, M.theme, n);
        if (!F.components || !F.components[u] || !F.components[u].styleOverrides)
          return null;
        const D = F.components[u].styleOverrides, N = {}, j = Xl(M, t, n);
        for (const _ in D)
          N[_] = Mc(D[_], j);
        return g(M, N);
      }), u && !v && I.push((M) => {
        var N, j;
        const F = hf(t, M.theme, n), D = (j = (N = F == null ? void 0 : F.components) == null ? void 0 : N[u]) == null ? void 0 : j.variants;
        return D ? Mc({
          variants: D
        }, Xl(M, t, n)) : null;
      }), h || I.push(s);
      const P = I.length - E.length;
      if (Array.isArray(R) && P > 0) {
        const M = new Array(P).fill("");
        O = [...R, ...M], O.raw = [...R.raw, ...M];
      }
      const A = x(O, ...I);
      if (true) {
        let M;
        u && (M = `${u}${de(d || "")}`), M === void 0 && (M = `Styled(${$P(l)})`), A.displayName = M;
      }
      return l.muiName && (A.muiName = l.muiName), A;
    };
    return x.withConfig && (w.withConfig = x.withConfig), w;
  };
}
function LP(e10) {
  for (const t in e10)
    return false;
  return true;
}
function BP(e10) {
  return typeof e10 == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  e10.charCodeAt(0) > 96;
}
function Sb(e10) {
  return e10 && e10.charAt(0).toLowerCase() + e10.slice(1);
}
var zP = Hx();
function qa(e10, t) {
  const n = {
    ...t
  };
  for (const o in e10)
    if (Object.prototype.hasOwnProperty.call(e10, o)) {
      const r = o;
      if (r === "components" || r === "slots")
        n[r] = {
          ...e10[r],
          ...n[r]
        };
      else if (r === "componentsProps" || r === "slotProps") {
        const s = e10[r], a = t[r];
        if (!a)
          n[r] = s || {};
        else if (!s)
          n[r] = a;
        else {
          n[r] = {
            ...a
          };
          for (const l in s)
            if (Object.prototype.hasOwnProperty.call(s, l)) {
              const c = l;
              n[r][c] = qa(s[c], a[c]);
            }
        }
      } else n[r] === void 0 && (n[r] = e10[r]);
    }
  return n;
}
function Gx(e10) {
  const {
    theme: t,
    name: n,
    props: o
  } = e10;
  return !t || !t.components || !t.components[n] || !t.components[n].defaultProps ? o : qa(t.components[n].defaultProps, o);
}
function Ux({
  props: e10,
  name: t,
  defaultTheme: n,
  themeId: o
}) {
  let r = Bu(n);
  return o && (r = r[o] || r), Gx({
    theme: r,
    name: t,
    props: e10
  });
}
var ao = typeof window < "u" ? S.useLayoutEffect : S.useEffect;
function WP(e10, t, n, o, r) {
  const [s, a] = S.useState(() => r && n ? n(e10).matches : o ? o(e10).matches : t);
  return ao(() => {
    if (!n)
      return;
    const l = n(e10), c = () => {
      a(l.matches);
    };
    return c(), l.addEventListener("change", c), () => {
      l.removeEventListener("change", c);
    };
  }, [e10, n]), s;
}
var HP = {
  ...S
};
var Xx = HP.useSyncExternalStore;
function GP(e10, t, n, o, r) {
  const s = S.useCallback(() => t, [t]), a = S.useMemo(() => {
    if (r && n)
      return () => n(e10).matches;
    if (o !== null) {
      const {
        matches: d
      } = o(e10);
      return () => d;
    }
    return s;
  }, [s, e10, o, r, n]), [l, c] = S.useMemo(() => {
    if (n === null)
      return [s, () => () => {
      }];
    const d = n(e10);
    return [() => d.matches, (p) => (d.addEventListener("change", p), () => {
      d.removeEventListener("change", p);
    })];
  }, [s, n, e10]);
  return Xx(c, l, a);
}
function Yr(e10, t = {}) {
  const n = Vm(), o = typeof window < "u" && typeof window.matchMedia < "u", {
    defaultMatches: r = false,
    matchMedia: s = o ? window.matchMedia : null,
    ssrMatchMedia: a = null,
    noSsr: l = false
  } = Gx({
    name: "MuiUseMediaQuery",
    props: t,
    theme: n
  });
  typeof e10 == "function" && n === null && console.error(["MUI: The `query` argument provided is invalid.", "You are providing a function without a theme in the context.", "One of the parent elements needs to use a ThemeProvider."].join(`
`));
  let c = typeof e10 == "function" ? e10(n) : e10;
  c = c.replace(/^@media( ?)/m, "");
  const d = (Xx !== void 0 ? GP : WP)(c, r, s, a, l);
  return S.useDebugValue({
    query: c,
    match: d
  }), d;
}
function ls(e10, t = Number.MIN_SAFE_INTEGER, n = Number.MAX_SAFE_INTEGER) {
  return Math.max(t, Math.min(e10, n));
}
function _m(e10, t = 0, n = 1) {
  return (e10 < t || e10 > n) && console.error(`MUI: The value provided ${e10} is out of range [${t}, ${n}].`), ls(e10, t, n);
}
function UP(e10) {
  e10 = e10.slice(1);
  const t = new RegExp(`.{1,${e10.length >= 6 ? 2 : 1}}`, "g");
  let n = e10.match(t);
  return n && n[0].length === 1 && (n = n.map((o) => o + o)), n ? `rgb${n.length === 4 ? "a" : ""}(${n.map((o, r) => r < 3 ? parseInt(o, 16) : Math.round(parseInt(o, 16) / 255 * 1e3) / 1e3).join(", ")})` : "";
}
function Zr(e10) {
  if (e10.type)
    return e10;
  if (e10.charAt(0) === "#")
    return Zr(UP(e10));
  const t = e10.indexOf("("), n = e10.substring(0, t);
  if (!["rgb", "rgba", "hsl", "hsla", "color"].includes(n))
    throw new Error(true ? `MUI: Unsupported \`${e10}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : or(9, e10));
  let o = e10.substring(t + 1, e10.length - 1), r;
  if (n === "color") {
    if (o = o.split(" "), r = o.shift(), o.length === 4 && o[3].charAt(0) === "/" && (o[3] = o[3].slice(1)), !["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].includes(r))
      throw new Error(true ? `MUI: unsupported \`${r}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : or(10, r));
  } else
    o = o.split(",");
  return o = o.map((s) => parseFloat(s)), {
    type: n,
    values: o,
    colorSpace: r
  };
}
var XP = (e10) => {
  const t = Zr(e10);
  return t.values.slice(0, 3).map((n, o) => t.type.includes("hsl") && o !== 0 ? `${n}%` : n).join(" ");
};
var Ca = (e10, t) => {
  try {
    return XP(e10);
  } catch {
    return t && true && console.warn(t), e10;
  }
};
function Wu(e10) {
  const {
    type: t,
    colorSpace: n
  } = e10;
  let {
    values: o
  } = e10;
  return t.includes("rgb") ? o = o.map((r, s) => s < 3 ? parseInt(r, 10) : r) : t.includes("hsl") && (o[1] = `${o[1]}%`, o[2] = `${o[2]}%`), t.includes("color") ? o = `${n} ${o.join(" ")}` : o = `${o.join(", ")}`, `${t}(${o})`;
}
function Yx(e10) {
  e10 = Zr(e10);
  const {
    values: t
  } = e10, n = t[0], o = t[1] / 100, r = t[2] / 100, s = o * Math.min(r, 1 - r), a = (u, d = (u + n / 30) % 12) => r - s * Math.max(Math.min(d - 3, 9 - d, 1), -1);
  let l = "rgb";
  const c = [Math.round(a(0) * 255), Math.round(a(8) * 255), Math.round(a(4) * 255)];
  return e10.type === "hsla" && (l += "a", c.push(t[3])), Wu({
    type: l,
    values: c
  });
}
function bf(e10) {
  e10 = Zr(e10);
  let t = e10.type === "hsl" || e10.type === "hsla" ? Zr(Yx(e10)).values : e10.values;
  return t = t.map((n) => (e10.type !== "color" && (n /= 255), n <= 0.03928 ? n / 12.92 : ((n + 0.055) / 1.055) ** 2.4)), Number((0.2126 * t[0] + 0.7152 * t[1] + 0.0722 * t[2]).toFixed(3));
}
function wb(e10, t) {
  const n = bf(e10), o = bf(t);
  return (Math.max(n, o) + 0.05) / (Math.min(n, o) + 0.05);
}
function We(e10, t) {
  return e10 = Zr(e10), t = _m(t), (e10.type === "rgb" || e10.type === "hsl") && (e10.type += "a"), e10.type === "color" ? e10.values[3] = `/${t}` : e10.values[3] = t, Wu(e10);
}
function Yl(e10, t, n) {
  try {
    return We(e10, t);
  } catch {
    return e10;
  }
}
function lo(e10, t) {
  if (e10 = Zr(e10), t = _m(t), e10.type.includes("hsl"))
    e10.values[2] *= 1 - t;
  else if (e10.type.includes("rgb") || e10.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e10.values[n] *= 1 - t;
  return Wu(e10);
}
function Gt(e10, t, n) {
  try {
    return lo(e10, t);
  } catch {
    return e10;
  }
}
function Hn(e10, t) {
  if (e10 = Zr(e10), t = _m(t), e10.type.includes("hsl"))
    e10.values[2] += (100 - e10.values[2]) * t;
  else if (e10.type.includes("rgb"))
    for (let n = 0; n < 3; n += 1)
      e10.values[n] += (255 - e10.values[n]) * t;
  else if (e10.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e10.values[n] += (1 - e10.values[n]) * t;
  return Wu(e10);
}
function Ut(e10, t, n) {
  try {
    return Hn(e10, t);
  } catch {
    return e10;
  }
}
function YP(e10, t = 0.15) {
  return bf(e10) > 0.5 ? lo(e10, t) : Hn(e10, t);
}
function Zl(e10, t, n) {
  try {
    return YP(e10, t);
  } catch {
    return e10;
  }
}
function co(e10, t) {
  return false ? () => null : function(...o) {
    return e10(...o) || t(...o);
  };
}
function ZP(e10) {
  const {
    prototype: t = {}
  } = e10;
  return !!t.isReactComponent;
}
function Zx(e10, t, n, o, r) {
  const s = e10[t], a = r || t;
  if (s == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for Emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  const c = s.type;
  return typeof c == "function" && !ZP(c) && (l = "Did you accidentally use a plain function component for an element instead?"), l !== void 0 ? new Error(`Invalid ${o} \`${a}\` supplied to \`${n}\`. Expected an element that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
var Bs = co(i.element, Zx);
Bs.isRequired = co(i.element.isRequired, Zx);
function qP(e10) {
  const {
    prototype: t = {}
  } = e10;
  return !!t.isReactComponent;
}
function JP(e10, t, n, o, r) {
  const s = e10[t], a = r || t;
  if (s == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  return typeof s == "function" && !qP(s) && (l = "Did you accidentally provide a plain function component instead?"), l !== void 0 ? new Error(`Invalid ${o} \`${a}\` supplied to \`${n}\`. Expected an element type that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
var Rl = co(i.elementType, JP);
var KP = "exact-prop: ​";
function Hu(e10) {
  return false ? e10 : {
    ...e10,
    [KP]: (t) => {
      const n = Object.keys(t).filter((o) => !e10.hasOwnProperty(o));
      return n.length > 0 ? new Error(`The following props are not supported: ${n.map((o) => `\`${o}\``).join(", ")}. Please remove them.`) : null;
    }
  };
}
function Ir(e10, t, n, o, r) {
  if (false)
    return null;
  const s = e10[t], a = r || t;
  return s == null ? null : s && s.nodeType !== 1 ? new Error(`Invalid ${o} \`${a}\` supplied to \`${n}\`. Expected an HTMLElement.`) : null;
}
var On = i.oneOfType([i.func, i.object]);
function vf(...e10) {
  return e10.reduce((t, n) => n == null ? t : function(...r) {
    t.apply(this, r), n.apply(this, r);
  }, () => {
  });
}
function zs(e10, t = 166) {
  let n;
  function o(...r) {
    const s = () => {
      e10.apply(this, r);
    };
    clearTimeout(n), n = setTimeout(s, t);
  }
  return o.clear = () => {
    clearTimeout(n);
  }, o;
}
function Pa(e10, t) {
  var n, o, r;
  return S.isValidElement(e10) && t.indexOf(
    // For server components `muiName` is avaialble in element.type._payload.value.muiName
    // relevant info - https://github.com/facebook/react/blob/2807d781a08db8e9873687fccc25c0f12b4fb3d4/packages/react/src/ReactLazy.js#L45
    // eslint-disable-next-line no-underscore-dangle
    e10.type.muiName ?? ((r = (o = (n = e10.type) == null ? void 0 : n._payload) == null ? void 0 : o.value) == null ? void 0 : r.muiName)
  ) !== -1;
}
function mn(e10) {
  return e10 && e10.ownerDocument || document;
}
function Rr(e10) {
  return mn(e10).defaultView || window;
}
function QP(e10, t) {
  if (false)
    return () => null;
  const n = t ? {
    ...t.propTypes
  } : null;
  return (r) => (s, a, l, c, u, ...d) => {
    const p = u || a, m = n == null ? void 0 : n[p];
    if (m) {
      const g = m(s, a, l, c, u, ...d);
      if (g)
        return g;
    }
    return typeof s[a] < "u" && !s[r] ? new Error(`The prop \`${p}\` of \`${e10}\` can only be used together with the \`${r}\` prop.`) : null;
  };
}
function Yc(e10, t) {
  typeof e10 == "function" ? e10(t) : e10 && (e10.current = t);
}
var Tb = 0;
function eA(e10) {
  const [t, n] = S.useState(e10), o = e10 || t;
  return S.useEffect(() => {
    t == null && (Tb += 1, n(`mui-${Tb}`));
  }, [t]), o;
}
var tA = {
  ...S
};
var Ib = tA.useId;
function Ws(e10) {
  if (Ib !== void 0) {
    const t = Ib();
    return e10 ?? t;
  }
  return eA(e10);
}
function qx(e10, t, n, o, r) {
  if (false)
    return null;
  const s = r || t;
  return typeof e10[t] < "u" ? new Error(`The prop \`${s}\` is not supported. Please remove it.`) : null;
}
function xr({
  controlled: e10,
  default: t,
  name: n,
  state: o = "value"
}) {
  const {
    current: r
  } = S.useRef(e10 !== void 0), [s, a] = S.useState(t), l = r ? e10 : s;
  if (true) {
    S.useEffect(() => {
      r !== (e10 !== void 0) && console.error([`MUI: A component is changing the ${r ? "" : "un"}controlled ${o} state of ${n} to be ${r ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", `Decide between using a controlled or uncontrolled ${n} element for the lifetime of the component.`, "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join(`
`));
    }, [o, n, e10]);
    const {
      current: u
    } = S.useRef(t);
    S.useEffect(() => {
      !r && !Object.is(u, t) && console.error([`MUI: A component is changing the default ${o} state of an uncontrolled ${n} after being initialized. To suppress this warning opt to use a controlled ${n}.`].join(`
`));
    }, [JSON.stringify(t)]);
  }
  const c = S.useCallback((u) => {
    r || a(u);
  }, []);
  return [l, c];
}
function xn(e10) {
  const t = S.useRef(e10);
  return ao(() => {
    t.current = e10;
  }), S.useRef((...n) => (
    // @ts-expect-error hide `this`
    (0, t.current)(...n)
  )).current;
}
function Jt(...e10) {
  return S.useMemo(() => e10.every((t) => t == null) ? null : (t) => {
    e10.forEach((n) => {
      Yc(n, t);
    });
  }, e10);
}
var Rb = {};
function Jx(e10, t) {
  const n = S.useRef(Rb);
  return n.current === Rb && (n.current = e10(t)), n;
}
var nA = [];
function oA(e10) {
  S.useEffect(e10, nA);
}
var Gu = class _Gu {
  constructor() {
    oa(this, "currentId", null);
    oa(this, "clear", () => {
      this.currentId !== null && (clearTimeout(this.currentId), this.currentId = null);
    });
    oa(this, "disposeEffect", () => this.clear);
  }
  static create() {
    return new _Gu();
  }
  /**
   * Executes `fn` after `delay`, clearing any previously scheduled call.
   */
  start(t, n) {
    this.clear(), this.currentId = setTimeout(() => {
      this.currentId = null, n();
    }, t);
  }
};
function yi() {
  const e10 = Jx(Gu.create).current;
  return oA(e10.disposeEffect), e10;
}
function Es(e10) {
  try {
    return e10.matches(":focus-visible");
  } catch {
    !/jsdom/.test(window.navigator.userAgent) && console.warn(["MUI: The `:focus-visible` pseudo class is not supported in this browser.", "Some components rely on this feature to work properly."].join(`
`));
  }
  return false;
}
function Kx(e10) {
  const t = e10.documentElement.clientWidth;
  return Math.abs(window.innerWidth - t);
}
var Lm = (e10) => {
  const t = S.useRef({});
  return S.useEffect(() => {
    t.current = e10;
  }), t.current;
};
var rA = {
  border: 0,
  clip: "rect(0 0 0 0)",
  height: "1px",
  margin: "-1px",
  overflow: "hidden",
  padding: 0,
  position: "absolute",
  whiteSpace: "nowrap",
  width: "1px"
};
function iA(e10) {
  const t = typeof e10;
  switch (t) {
    case "number":
      return Number.isNaN(e10) ? "NaN" : Number.isFinite(e10) ? e10 !== Math.floor(e10) ? "float" : "number" : "Infinity";
    case "object":
      return e10 === null ? "null" : e10.constructor.name;
    default:
      return t;
  }
}
function Qx(e10, t, n, o) {
  const r = e10[t];
  if (r == null || !Number.isInteger(r)) {
    const s = iA(r);
    return new RangeError(`Invalid ${o} \`${t}\` of type \`${s}\` supplied to \`${n}\`, expected \`integer\`.`);
  }
  return null;
}
function eC(e10, t, ...n) {
  return e10[t] === void 0 ? null : Qx(e10, t, ...n);
}
function yf() {
  return null;
}
eC.isRequired = Qx;
yf.isRequired = yf;
var Br = false ? yf : eC;
function Ue(e10, t, n = void 0) {
  const o = {};
  for (const r in e10) {
    const s = e10[r];
    let a = "", l = true;
    for (let c = 0; c < s.length; c += 1) {
      const u = s[c];
      u && (a += (l === true ? "" : " ") + t(u), l = false, n && n[u] && (a += " " + n[u]));
    }
    o[r] = a;
  }
  return o;
}
function sA(e10) {
  return typeof e10 == "string";
}
function ps(e10, t, n) {
  return e10 === void 0 || sA(e10) ? t : {
    ...t,
    ownerState: {
      ...t.ownerState,
      ...n
    }
  };
}
function Aa(e10, t = []) {
  if (e10 === void 0)
    return {};
  const n = {};
  return Object.keys(e10).filter((o) => o.match(/^on[A-Z]/) && typeof e10[o] == "function" && !t.includes(o)).forEach((o) => {
    n[o] = e10[o];
  }), n;
}
function Eb(e10) {
  if (e10 === void 0)
    return {};
  const t = {};
  return Object.keys(e10).filter((n) => !(n.match(/^on[A-Z]/) && typeof e10[n] == "function")).forEach((n) => {
    t[n] = e10[n];
  }), t;
}
function tC(e10) {
  const {
    getSlotProps: t,
    additionalProps: n,
    externalSlotProps: o,
    externalForwardedProps: r,
    className: s
  } = e10;
  if (!t) {
    const g = be(n == null ? void 0 : n.className, s, r == null ? void 0 : r.className, o == null ? void 0 : o.className), b = {
      ...n == null ? void 0 : n.style,
      ...r == null ? void 0 : r.style,
      ...o == null ? void 0 : o.style
    }, v = {
      ...n,
      ...r,
      ...o
    };
    return g.length > 0 && (v.className = g), Object.keys(b).length > 0 && (v.style = b), {
      props: v,
      internalRef: void 0
    };
  }
  const a = Aa({
    ...r,
    ...o
  }), l = Eb(o), c = Eb(r), u = t(a), d = be(u == null ? void 0 : u.className, n == null ? void 0 : n.className, s, r == null ? void 0 : r.className, o == null ? void 0 : o.className), p = {
    ...u == null ? void 0 : u.style,
    ...n == null ? void 0 : n.style,
    ...r == null ? void 0 : r.style,
    ...o == null ? void 0 : o.style
  }, m = {
    ...u,
    ...n,
    ...c,
    ...l
  };
  return d.length > 0 && (m.className = d), Object.keys(p).length > 0 && (m.style = p), {
    props: m,
    internalRef: u.ref
  };
}
function nC(e10, t, n) {
  return typeof e10 == "function" ? e10(t, n) : e10;
}
function In(e10) {
  var p;
  const {
    elementType: t,
    externalSlotProps: n,
    ownerState: o,
    skipResolvingSlotProps: r = false,
    ...s
  } = e10, a = r ? {} : nC(n, o), {
    props: l,
    internalRef: c
  } = tC({
    ...s,
    externalSlotProps: a
  }), u = Jt(c, a == null ? void 0 : a.ref, (p = e10.additionalProps) == null ? void 0 : p.ref);
  return ps(t, {
    ...l,
    ref: u
  }, o);
}
function Hs(e10) {
  return !e10 || !S.isValidElement(e10) ? null : e10.props.propertyIsEnumerable("ref") ? e10.props.ref : (
    // @ts-expect-error element.ref is not included in the ReactElement type
    // We cannot check for it, but isValidElement is true at this point
    // https://github.com/DefinitelyTyped/DefinitelyTyped/discussions/70189
    e10.ref
  );
}
var Bm = S.createContext(null);
Bm.displayName = "ThemeContext";
function zm() {
  const e10 = S.useContext(Bm);
  return S.useDebugValue(e10), e10;
}
var aA = typeof Symbol == "function" && Symbol.for;
var lA = aA ? Symbol.for("mui.nested") : "__THEME_NESTED__";
function cA(e10, t) {
  if (typeof t == "function") {
    const n = t(e10);
    return n || console.error(["MUI: You should return an object from your theme function, i.e.", "<ThemeProvider theme={() => ({})} />"].join(`
`)), n;
  }
  return {
    ...e10,
    ...t
  };
}
function Zc(e10) {
  const {
    children: t,
    theme: n
  } = e10, o = zm();
  o === null && typeof n == "function" && console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join(`
`));
  const r = S.useMemo(() => {
    const s = o === null ? {
      ...n
    } : cA(o, n);
    return s != null && (s[lA] = o !== null), s;
  }, [n, o]);
  return f.jsx(Bm.Provider, {
    value: r,
    children: t
  });
}
Zc.propTypes = {
  /**
   * Your component tree.
   */
  children: i.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: i.oneOfType([i.object, i.func]).isRequired
};
Zc.propTypes = Hu(Zc.propTypes);
var oC = S.createContext();
function rC({
  value: e10,
  ...t
}) {
  return f.jsx(oC.Provider, {
    value: e10 ?? true,
    ...t
  });
}
rC.propTypes = {
  children: i.node,
  value: i.bool
};
var oi = () => S.useContext(oC) ?? false;
var iC = S.createContext(void 0);
function sC({
  value: e10,
  children: t
}) {
  return f.jsx(iC.Provider, {
    value: e10,
    children: t
  });
}
sC.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: i.node,
  /**
   * @ignore
   */
  value: i.object
};
function uA(e10) {
  const {
    theme: t,
    name: n,
    props: o
  } = e10;
  if (!t || !t.components || !t.components[n])
    return o;
  const r = t.components[n];
  return r.defaultProps ? qa(r.defaultProps, o) : !r.styleOverrides && !r.variants ? qa(r, o) : o;
}
function dA({
  props: e10,
  name: t
}) {
  const n = S.useContext(iC);
  return uA({
    props: e10,
    name: t,
    theme: {
      components: n
    }
  });
}
var Ob = {};
function Pb(e10, t, n, o = false) {
  return S.useMemo(() => {
    const r = e10 && t[e10] || t;
    if (typeof n == "function") {
      const s = n(r), a = e10 ? {
        ...t,
        [e10]: s
      } : s;
      return o ? () => a : a;
    }
    return e10 ? {
      ...t,
      [e10]: n
    } : {
      ...t,
      ...n
    };
  }, [e10, t, n, o]);
}
function Ja(e10) {
  const {
    children: t,
    theme: n,
    themeId: o
  } = e10, r = Vm(Ob), s = zm() || Ob;
  (r === null && typeof n == "function" || o && r && !r[o] && typeof n == "function") && console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join(`
`));
  const a = Pb(o, r, n), l = Pb(o, s, n, true), c = a.direction === "rtl";
  return f.jsx(Zc, {
    theme: l,
    children: f.jsx(wl.Provider, {
      value: a,
      children: f.jsx(rC, {
        value: c,
        children: f.jsx(sC, {
          value: a == null ? void 0 : a.components,
          children: t
        })
      })
    })
  });
}
Ja.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Your component tree.
   */
  children: i.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: i.oneOfType([i.func, i.object]).isRequired,
  /**
   * The design system's unique id for getting the corresponded theme when there are multiple design systems.
   */
  themeId: i.string
};
Ja.propTypes = Hu(Ja.propTypes);
var Wm = "mode";
var Hm = "color-scheme";
var pA = "data-color-scheme";
function fA(e10) {
  const {
    defaultLightColorScheme: t = "light",
    defaultDarkColorScheme: n = "dark",
    modeStorageKey: o = Wm,
    colorSchemeStorageKey: r = Hm,
    attribute: s = pA,
    colorSchemeNode: a = "document.documentElement",
    nonce: l
  } = e10 || {};
  let c = "", u = s;
  if (s === "class" && (u = ".%s"), s === "data" && (u = "[data-%s]"), u.startsWith(".")) {
    const p = u.substring(1);
    c += `${a}.classList.remove('${p}'.replace('%s', light), '${p}'.replace('%s', dark));
      ${a}.classList.add('${p}'.replace('%s', colorScheme));`;
  }
  const d = u.match(/\[([^\]]+)\]/);
  if (d) {
    const [p, m] = d[1].split("=");
    m || (c += `${a}.removeAttribute('${p}'.replace('%s', light));
      ${a}.removeAttribute('${p}'.replace('%s', dark));`), c += `
      ${a}.setAttribute('${p}'.replace('%s', colorScheme), ${m ? `${m}.replace('%s', colorScheme)` : '""'});`;
  } else
    c += `${a}.setAttribute('${u}', colorScheme);`;
  return f.jsx("script", {
    suppressHydrationWarning: true,
    nonce: typeof window > "u" ? l : "",
    dangerouslySetInnerHTML: {
      __html: `(function() {
try {
  let colorScheme = '';
  const mode = localStorage.getItem('${o}') || 'system';
  const dark = localStorage.getItem('${r}-dark') || '${n}';
  const light = localStorage.getItem('${r}-light') || '${t}';
  if (mode === 'system') {
    // handle system mode
    const mql = window.matchMedia('(prefers-color-scheme: dark)');
    if (mql.matches) {
      colorScheme = dark
    } else {
      colorScheme = light
    }
  }
  if (mode === 'light') {
    colorScheme = light;
  }
  if (mode === 'dark') {
    colorScheme = dark;
  }
  if (colorScheme) {
    ${c}
  }
} catch(e){}})();`
    }
  }, "mui-color-scheme-init");
}
function Ab(e10) {
  if (typeof window < "u" && typeof window.matchMedia == "function" && e10 === "system")
    return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
}
function aC(e10, t) {
  if (e10.mode === "light" || e10.mode === "system" && e10.systemMode === "light")
    return t("light");
  if (e10.mode === "dark" || e10.mode === "system" && e10.systemMode === "dark")
    return t("dark");
}
function mA(e10) {
  return aC(e10, (t) => {
    if (t === "light")
      return e10.lightColorScheme;
    if (t === "dark")
      return e10.darkColorScheme;
  });
}
function pp(e10, t) {
  if (typeof window > "u")
    return;
  let n;
  try {
    n = localStorage.getItem(e10) || void 0, n || localStorage.setItem(e10, t);
  } catch {
  }
  return n || t;
}
function gA(e10) {
  const {
    defaultMode: t = "light",
    defaultLightColorScheme: n,
    defaultDarkColorScheme: o,
    supportedColorSchemes: r = [],
    modeStorageKey: s = Wm,
    colorSchemeStorageKey: a = Hm,
    storageWindow: l = typeof window > "u" ? void 0 : window
  } = e10, c = r.join(","), u = r.length > 1, [d, p] = S.useState(() => {
    const x = pp(s, t), T = pp(`${a}-light`, n), w = pp(`${a}-dark`, o);
    return {
      mode: x,
      systemMode: Ab(x),
      lightColorScheme: T,
      darkColorScheme: w
    };
  }), [, m] = S.useState(false), g = S.useRef(false);
  S.useEffect(() => {
    u && m(true), g.current = true;
  }, [u]);
  const b = mA(d), v = S.useCallback((x) => {
    p((T) => {
      if (x === T.mode)
        return T;
      const w = x ?? t;
      try {
        localStorage.setItem(s, w);
      } catch {
      }
      return {
        ...T,
        mode: w,
        systemMode: Ab(w)
      };
    });
  }, [s, t]), h = S.useCallback((x) => {
    x ? typeof x == "string" ? x && !c.includes(x) ? console.error(`\`${x}\` does not exist in \`theme.colorSchemes\`.`) : p((T) => {
      const w = {
        ...T
      };
      return aC(T, (R) => {
        try {
          localStorage.setItem(`${a}-${R}`, x);
        } catch {
        }
        R === "light" && (w.lightColorScheme = x), R === "dark" && (w.darkColorScheme = x);
      }), w;
    }) : p((T) => {
      const w = {
        ...T
      }, R = x.light === null ? n : x.light, E = x.dark === null ? o : x.dark;
      if (R)
        if (!c.includes(R))
          console.error(`\`${R}\` does not exist in \`theme.colorSchemes\`.`);
        else {
          w.lightColorScheme = R;
          try {
            localStorage.setItem(`${a}-light`, R);
          } catch {
          }
        }
      if (E)
        if (!c.includes(E))
          console.error(`\`${E}\` does not exist in \`theme.colorSchemes\`.`);
        else {
          w.darkColorScheme = E;
          try {
            localStorage.setItem(`${a}-dark`, E);
          } catch {
          }
        }
      return w;
    }) : p((T) => {
      try {
        localStorage.setItem(`${a}-light`, n), localStorage.setItem(`${a}-dark`, o);
      } catch {
      }
      return {
        ...T,
        lightColorScheme: n,
        darkColorScheme: o
      };
    });
  }, [c, a, n, o]), y = S.useCallback((x) => {
    d.mode === "system" && p((T) => {
      const w = x != null && x.matches ? "dark" : "light";
      return T.systemMode === w ? T : {
        ...T,
        systemMode: w
      };
    });
  }, [d.mode]), C = S.useRef(y);
  return C.current = y, S.useEffect(() => {
    if (typeof window.matchMedia != "function" || !u)
      return;
    const x = (...w) => C.current(...w), T = window.matchMedia("(prefers-color-scheme: dark)");
    return T.addListener(x), x(T), () => {
      T.removeListener(x);
    };
  }, [u]), S.useEffect(() => {
    if (l && u) {
      const x = (T) => {
        const w = T.newValue;
        typeof T.key == "string" && T.key.startsWith(a) && (!w || c.match(w)) && (T.key.endsWith("light") && h({
          light: w
        }), T.key.endsWith("dark") && h({
          dark: w
        })), T.key === s && (!w || ["light", "dark", "system"].includes(w)) && v(w || t);
      };
      return l.addEventListener("storage", x), () => {
        l.removeEventListener("storage", x);
      };
    }
  }, [h, v, s, a, c, t, l, u]), {
    ...d,
    mode: g.current || !u ? d.mode : void 0,
    systemMode: g.current || !u ? d.systemMode : void 0,
    colorScheme: g.current || !u ? b : void 0,
    setMode: v,
    setColorScheme: h
  };
}
var hA = "*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}";
function bA(e10) {
  const {
    themeId: t,
    /**
     * This `theme` object needs to follow a certain structure to
     * be used correctly by the finel `CssVarsProvider`. It should have a
     * `colorSchemes` key with the light and dark (and any other) palette.
     * It should also ideally have a vars object created using `prepareCssVars`.
     */
    theme: n = {},
    modeStorageKey: o = Wm,
    colorSchemeStorageKey: r = Hm,
    disableTransitionOnChange: s = false,
    defaultColorScheme: a,
    resolveTheme: l
  } = e10, c = {
    allColorSchemes: [],
    colorScheme: void 0,
    darkColorScheme: void 0,
    lightColorScheme: void 0,
    mode: void 0,
    setColorScheme: () => {
    },
    setMode: () => {
    },
    systemMode: void 0
  }, u = S.createContext(void 0);
  u.displayName = "ColorSchemeContext";
  const d = () => S.useContext(u) || c;
  function p(v) {
    var Re, re, X, ae, ce;
    const {
      children: h,
      theme: y,
      modeStorageKey: C = o,
      colorSchemeStorageKey: x = r,
      disableTransitionOnChange: T = s,
      storageWindow: w = typeof window > "u" ? void 0 : window,
      documentNode: R = typeof document > "u" ? void 0 : document,
      colorSchemeNode: E = typeof document > "u" ? void 0 : document.documentElement,
      disableNestedContext: O = false,
      disableStyleSheetGeneration: I = false
    } = v, P = S.useRef(false), A = zm(), M = S.useContext(u), F = !!M && !O, D = S.useMemo(() => y || (typeof n == "function" ? n() : n), [y]), N = D[t], {
      colorSchemes: j = {},
      components: _ = {},
      cssVarPrefix: z,
      ...$
    } = N || D, k = Object.keys(j).filter((ge) => !!j[ge]).join(","), B = S.useMemo(() => k.split(","), [k]), Q = typeof a == "string" ? a : a.light, ee = typeof a == "string" ? a : a.dark, G = j[Q] && j[ee] ? "system" : ((re = (Re = j[$.defaultColorScheme]) == null ? void 0 : Re.palette) == null ? void 0 : re.mode) || ((X = $.palette) == null ? void 0 : X.mode), {
      mode: H,
      setMode: Y,
      systemMode: J,
      lightColorScheme: U,
      darkColorScheme: ne,
      colorScheme: se,
      setColorScheme: oe
    } = gA({
      supportedColorSchemes: B,
      defaultLightColorScheme: Q,
      defaultDarkColorScheme: ee,
      modeStorageKey: C,
      colorSchemeStorageKey: x,
      defaultMode: G,
      storageWindow: w
    });
    let W = H, Z = se;
    F && (W = M.mode, Z = M.colorScheme);
    const L = Z || $.defaultColorScheme, ie = ((ae = $.generateThemeVars) == null ? void 0 : ae.call($)) || $.vars, te = {
      ...$,
      components: _,
      colorSchemes: j,
      cssVarPrefix: z,
      vars: ie
    };
    if (typeof te.generateSpacing == "function" && (te.spacing = te.generateSpacing()), L) {
      const ge = j[L];
      ge && typeof ge == "object" && Object.keys(ge).forEach((Se) => {
        ge[Se] && typeof ge[Se] == "object" ? te[Se] = {
          ...te[Se],
          ...ge[Se]
        } : te[Se] = ge[Se];
      });
    }
    const le = $.colorSchemeSelector;
    S.useEffect(() => {
      if (Z && E && le && le !== "media") {
        const ge = le;
        let Se = le;
        if (ge === "class" && (Se = ".%s"), ge === "data" && (Se = "[data-%s]"), ge != null && ge.startsWith("data-") && !ge.includes("%s") && (Se = `[${ge}="%s"]`), Se.startsWith("."))
          E.classList.remove(...B.map((ye) => Se.substring(1).replace("%s", ye))), E.classList.add(Se.substring(1).replace("%s", Z));
        else {
          const ye = Se.replace("%s", Z).match(/\[([^\]]+)\]/);
          if (ye) {
            const [Ee, Le] = ye[1].split("=");
            Le || B.forEach((Ae) => {
              E.removeAttribute(Ee.replace(Z, Ae));
            }), E.setAttribute(Ee, Le ? Le.replace(/"|'/g, "") : "");
          } else
            E.setAttribute(Se, Z);
        }
      }
    }, [Z, le, E, B]), S.useEffect(() => {
      let ge;
      if (T && P.current && R) {
        const Se = R.createElement("style");
        Se.appendChild(R.createTextNode(hA)), R.head.appendChild(Se), window.getComputedStyle(R.body), ge = setTimeout(() => {
          R.head.removeChild(Se);
        }, 1);
      }
      return () => {
        clearTimeout(ge);
      };
    }, [Z, T, R]), S.useEffect(() => (P.current = true, () => {
      P.current = false;
    }), []);
    const ue = S.useMemo(() => ({
      allColorSchemes: B,
      colorScheme: Z,
      darkColorScheme: ne,
      lightColorScheme: U,
      mode: W,
      setColorScheme: oe,
      setMode: Y,
      systemMode: J
    }), [B, Z, ne, U, W, oe, Y, J]);
    let ve = true;
    (I || $.cssVariables === false || F && (A == null ? void 0 : A.cssVarPrefix) === z) && (ve = false);
    const Te = f.jsxs(S.Fragment, {
      children: [f.jsx(Ja, {
        themeId: N ? t : void 0,
        theme: l ? l(te) : te,
        children: h
      }), ve && f.jsx(Nm, {
        styles: ((ce = te.generateStyleSheets) == null ? void 0 : ce.call(te)) || []
      })]
    });
    return F ? Te : f.jsx(u.Provider, {
      value: ue,
      children: Te
    });
  }
  p.propTypes = {
    /**
     * The component tree.
     */
    children: i.node,
    /**
     * The node used to attach the color-scheme attribute
     */
    colorSchemeNode: i.any,
    /**
     * localStorage key used to store `colorScheme`
     */
    colorSchemeStorageKey: i.string,
    /**
     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.
     */
    disableNestedContext: i.bool,
    /**
     * If `true`, the style sheet won't be generated.
     *
     * This is useful for controlling nested CssVarsProvider behavior.
     */
    disableStyleSheetGeneration: i.bool,
    /**
     * Disable CSS transitions when switching between modes or color schemes.
     */
    disableTransitionOnChange: i.bool,
    /**
     * The document to attach the attribute to.
     */
    documentNode: i.any,
    /**
     * The key in the local storage used to store current color scheme.
     */
    modeStorageKey: i.string,
    /**
     * The window that attaches the 'storage' event listener.
     * @default window
     */
    storageWindow: i.any,
    /**
     * The calculated theme object that will be passed through context.
     */
    theme: i.object
  };
  const m = typeof a == "string" ? a : a.light, g = typeof a == "string" ? a : a.dark;
  return {
    CssVarsProvider: p,
    useColorScheme: d,
    getInitColorSchemeScript: (v) => fA({
      colorSchemeStorageKey: r,
      defaultLightColorScheme: m,
      defaultDarkColorScheme: g,
      modeStorageKey: o,
      ...v
    })
  };
}
function vA(e10 = "") {
  function t(...o) {
    if (!o.length)
      return "";
    const r = o[0];
    return typeof r == "string" && !r.match(/(#|\(|\)|(-?(\d*\.)?\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\d*\.)?\d+)$|(\d+ \d+ \d+)/) ? `, var(--${e10 ? `${e10}-` : ""}${r}${t(...o.slice(1))})` : `, ${r}`;
  }
  return (o, ...r) => `var(--${e10 ? `${e10}-` : ""}${o}${t(...r)})`;
}
var jb = (e10, t, n, o = []) => {
  let r = e10;
  t.forEach((s, a) => {
    a === t.length - 1 ? Array.isArray(r) ? r[Number(s)] = n : r && typeof r == "object" && (r[s] = n) : r && typeof r == "object" && (r[s] || (r[s] = o.includes(s) ? [] : {}), r = r[s]);
  });
};
var yA = (e10, t, n) => {
  function o(r, s = [], a = []) {
    Object.entries(r).forEach(([l, c]) => {
      (!n || n && !n([...s, l])) && c != null && (typeof c == "object" && Object.keys(c).length > 0 ? o(c, [...s, l], Array.isArray(c) ? [...a, l] : a) : t([...s, l], c, a));
    });
  }
  o(e10);
};
var xA = (e10, t) => typeof t == "number" ? ["lineHeight", "fontWeight", "opacity", "zIndex"].some((o) => e10.includes(o)) || e10[e10.length - 1].toLowerCase().includes("opacity") ? t : `${t}px` : t;
function fp(e10, t) {
  const {
    prefix: n,
    shouldSkipGeneratingVar: o
  } = t || {}, r = {}, s = {}, a = {};
  return yA(
    e10,
    (l, c, u) => {
      if ((typeof c == "string" || typeof c == "number") && (!o || !o(l, c))) {
        const d = `--${n ? `${n}-` : ""}${l.join("-")}`, p = xA(l, c);
        Object.assign(r, {
          [d]: p
        }), jb(s, l, `var(${d})`, u), jb(a, l, `var(${d}, ${p})`, u);
      }
    },
    (l) => l[0] === "vars"
    // skip 'vars/*' paths
  ), {
    css: r,
    vars: s,
    varsWithDefaults: a
  };
}
function CA(e10, t = {}) {
  const {
    getSelector: n = h,
    disableCssColorScheme: o,
    colorSchemeSelector: r
  } = t, {
    colorSchemes: s = {},
    components: a,
    defaultColorScheme: l = "light",
    ...c
  } = e10, {
    vars: u,
    css: d,
    varsWithDefaults: p
  } = fp(c, t);
  let m = p;
  const g = {}, {
    [l]: b,
    ...v
  } = s;
  if (Object.entries(v || {}).forEach(([x, T]) => {
    const {
      vars: w,
      css: R,
      varsWithDefaults: E
    } = fp(T, t);
    m = Cn(m, E), g[x] = {
      css: R,
      vars: w
    };
  }), b) {
    const {
      css: x,
      vars: T,
      varsWithDefaults: w
    } = fp(b, t);
    m = Cn(m, w), g[l] = {
      css: x,
      vars: T
    };
  }
  function h(x, T) {
    var R, E;
    let w = r;
    if (r === "class" && (w = ".%s"), r === "data" && (w = "[data-%s]"), r != null && r.startsWith("data-") && !r.includes("%s") && (w = `[${r}="%s"]`), x) {
      if (w === "media")
        return e10.defaultColorScheme === x ? ":root" : {
          [`@media (prefers-color-scheme: ${((E = (R = s[x]) == null ? void 0 : R.palette) == null ? void 0 : E.mode) || x})`]: {
            ":root": T
          }
        };
      if (w)
        return e10.defaultColorScheme === x ? `:root, ${w.replace("%s", String(x))}` : w.replace("%s", String(x));
    }
    return ":root";
  }
  return {
    vars: m,
    generateThemeVars: () => {
      let x = {
        ...u
      };
      return Object.entries(g).forEach(([, {
        vars: T
      }]) => {
        x = Cn(x, T);
      }), x;
    },
    generateStyleSheets: () => {
      var O, I;
      const x = [], T = e10.defaultColorScheme || "light";
      function w(P, A) {
        Object.keys(A).length && x.push(typeof P == "string" ? {
          [P]: {
            ...A
          }
        } : P);
      }
      w(n(void 0, {
        ...d
      }), d);
      const {
        [T]: R,
        ...E
      } = g;
      if (R) {
        const {
          css: P
        } = R, A = (I = (O = s[T]) == null ? void 0 : O.palette) == null ? void 0 : I.mode, M = !o && A ? {
          colorScheme: A,
          ...P
        } : {
          ...P
        };
        w(n(T, {
          ...M
        }), M);
      }
      return Object.entries(E).forEach(([P, {
        css: A
      }]) => {
        var D, N;
        const M = (N = (D = s[P]) == null ? void 0 : D.palette) == null ? void 0 : N.mode, F = !o && M ? {
          colorScheme: M,
          ...A
        } : {
          ...A
        };
        w(n(P, {
          ...F
        }), F);
      }), x;
    }
  };
}
function SA(e10) {
  return function(n) {
    return e10 === "media" ? (n !== "light" && n !== "dark" && console.error(`MUI: @media (prefers-color-scheme) supports only 'light' or 'dark', but receive '${n}'.`), `@media (prefers-color-scheme: ${n})`) : e10 ? e10.startsWith("data-") && !e10.includes("%s") ? `[${e10}="${n}"] &` : e10 === "class" ? `.${n} &` : e10 === "data" ? `[data-${n}] &` : `${e10.replace("%s", n)} &` : "&";
  };
}
var wA = Lu();
var TA = zP("div", {
  name: "MuiStack",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
});
function IA(e10) {
  return Ux({
    props: e10,
    name: "MuiStack",
    defaultTheme: wA
  });
}
function RA(e10, t) {
  const n = S.Children.toArray(e10).filter(Boolean);
  return n.reduce((o, r, s) => (o.push(r), s < n.length - 1 && o.push(S.cloneElement(t, {
    key: `separator-${s}`
  })), o), []);
}
var EA = (e10) => ({
  row: "Left",
  "row-reverse": "Right",
  column: "Top",
  "column-reverse": "Bottom"
})[e10];
var OA = ({
  ownerState: e10,
  theme: t
}) => {
  let n = {
    display: "flex",
    flexDirection: "column",
    ...qn({
      theme: t
    }, wi({
      values: e10.direction,
      breakpoints: t.breakpoints.values
    }), (o) => ({
      flexDirection: o
    }))
  };
  if (e10.spacing) {
    const o = ku(t), r = Object.keys(t.breakpoints.values).reduce((c, u) => ((typeof e10.spacing == "object" && e10.spacing[u] != null || typeof e10.direction == "object" && e10.direction[u] != null) && (c[u] = true), c), {}), s = wi({
      values: e10.direction,
      base: r
    }), a = wi({
      values: e10.spacing,
      base: r
    });
    typeof s == "object" && Object.keys(s).forEach((c, u, d) => {
      if (!s[c]) {
        const m = u > 0 ? s[d[u - 1]] : "column";
        s[c] = m;
      }
    }), n = Cn(n, qn({
      theme: t
    }, a, (c, u) => e10.useFlexGap ? {
      gap: Pi(o, c)
    } : {
      // The useFlexGap={false} implement relies on each child to give up control of the margin.
      // We need to reset the margin to avoid double spacing.
      "& > :not(style):not(style)": {
        margin: 0
      },
      "& > :not(style) ~ :not(style)": {
        [`margin${EA(u ? s[u] : e10.direction)}`]: Pi(o, c)
      }
    }));
  }
  return n = LO(t.breakpoints, n), n;
};
function PA(e10 = {}) {
  const {
    // This will allow adding custom styled fn (for example for custom sx style function)
    createStyledComponent: t = TA,
    useThemeProps: n = IA,
    componentName: o = "MuiStack"
  } = e10, r = () => Ue({
    root: ["root"]
  }, (c) => He(o, c), {}), s = t(OA), a = S.forwardRef(function(c, u) {
    const d = n(c), p = zu(d), {
      component: m = "div",
      direction: g = "column",
      spacing: b = 0,
      divider: v,
      children: h,
      className: y,
      useFlexGap: C = false,
      ...x
    } = p, T = {
      direction: g,
      spacing: b,
      useFlexGap: C
    }, w = r();
    return f.jsx(s, {
      as: m,
      ownerState: T,
      ref: u,
      className: be(w.root, y),
      ...x,
      children: v ? RA(h, v) : h
    });
  });
  return a.propTypes = {
    children: i.node,
    direction: i.oneOfType([i.oneOf(["column-reverse", "column", "row-reverse", "row"]), i.arrayOf(i.oneOf(["column-reverse", "column", "row-reverse", "row"])), i.object]),
    divider: i.node,
    spacing: i.oneOfType([i.arrayOf(i.oneOfType([i.number, i.string])), i.number, i.object, i.string]),
    sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
  }, a;
}
var Ka = {
  black: "#000",
  white: "#fff"
};
var AA = {
  50: "#fafafa",
  100: "#f5f5f5",
  200: "#eeeeee",
  300: "#e0e0e0",
  400: "#bdbdbd",
  500: "#9e9e9e",
  600: "#757575",
  700: "#616161",
  800: "#424242",
  900: "#212121",
  A100: "#f5f5f5",
  A200: "#eeeeee",
  A400: "#bdbdbd",
  A700: "#616161"
};
var Ji = {
  50: "#f3e5f5",
  100: "#e1bee7",
  200: "#ce93d8",
  300: "#ba68c8",
  400: "#ab47bc",
  500: "#9c27b0",
  600: "#8e24aa",
  700: "#7b1fa2",
  800: "#6a1b9a",
  900: "#4a148c",
  A100: "#ea80fc",
  A200: "#e040fb",
  A400: "#d500f9",
  A700: "#aa00ff"
};
var Ki = {
  50: "#ffebee",
  100: "#ffcdd2",
  200: "#ef9a9a",
  300: "#e57373",
  400: "#ef5350",
  500: "#f44336",
  600: "#e53935",
  700: "#d32f2f",
  800: "#c62828",
  900: "#b71c1c",
  A100: "#ff8a80",
  A200: "#ff5252",
  A400: "#ff1744",
  A700: "#d50000"
};
var bi = {
  50: "#fff3e0",
  100: "#ffe0b2",
  200: "#ffcc80",
  300: "#ffb74d",
  400: "#ffa726",
  500: "#ff9800",
  600: "#fb8c00",
  700: "#f57c00",
  800: "#ef6c00",
  900: "#e65100",
  A100: "#ffd180",
  A200: "#ffab40",
  A400: "#ff9100",
  A700: "#ff6d00"
};
var Qi = {
  50: "#e3f2fd",
  100: "#bbdefb",
  200: "#90caf9",
  300: "#64b5f6",
  400: "#42a5f5",
  500: "#2196f3",
  600: "#1e88e5",
  700: "#1976d2",
  800: "#1565c0",
  900: "#0d47a1",
  A100: "#82b1ff",
  A200: "#448aff",
  A400: "#2979ff",
  A700: "#2962ff"
};
var es = {
  50: "#e1f5fe",
  100: "#b3e5fc",
  200: "#81d4fa",
  300: "#4fc3f7",
  400: "#29b6f6",
  500: "#03a9f4",
  600: "#039be5",
  700: "#0288d1",
  800: "#0277bd",
  900: "#01579b",
  A100: "#80d8ff",
  A200: "#40c4ff",
  A400: "#00b0ff",
  A700: "#0091ea"
};
var ts = {
  50: "#e8f5e9",
  100: "#c8e6c9",
  200: "#a5d6a7",
  300: "#81c784",
  400: "#66bb6a",
  500: "#4caf50",
  600: "#43a047",
  700: "#388e3c",
  800: "#2e7d32",
  900: "#1b5e20",
  A100: "#b9f6ca",
  A200: "#69f0ae",
  A400: "#00e676",
  A700: "#00c853"
};
var Db = {
  // The colors used to style the text.
  text: {
    // The most important text.
    primary: "rgba(0, 0, 0, 0.87)",
    // Secondary text.
    secondary: "rgba(0, 0, 0, 0.6)",
    // Disabled text have even lower visual prominence.
    disabled: "rgba(0, 0, 0, 0.38)"
  },
  // The color used to divide different elements.
  divider: "rgba(0, 0, 0, 0.12)",
  // The background colors used to style the surfaces.
  // Consistency between these values is important.
  background: {
    paper: Ka.white,
    default: Ka.white
  },
  // The colors used to style the action elements.
  action: {
    // The color of an active action like an icon button.
    active: "rgba(0, 0, 0, 0.54)",
    // The color of an hovered action.
    hover: "rgba(0, 0, 0, 0.04)",
    hoverOpacity: 0.04,
    // The color of a selected action.
    selected: "rgba(0, 0, 0, 0.08)",
    selectedOpacity: 0.08,
    // The color of a disabled action.
    disabled: "rgba(0, 0, 0, 0.26)",
    // The background color of a disabled action.
    disabledBackground: "rgba(0, 0, 0, 0.12)",
    disabledOpacity: 0.38,
    focus: "rgba(0, 0, 0, 0.12)",
    focusOpacity: 0.12,
    activatedOpacity: 0.12
  }
};
var mp = {
  text: {
    primary: Ka.white,
    secondary: "rgba(255, 255, 255, 0.7)",
    disabled: "rgba(255, 255, 255, 0.5)",
    icon: "rgba(255, 255, 255, 0.5)"
  },
  divider: "rgba(255, 255, 255, 0.12)",
  background: {
    paper: "#121212",
    default: "#121212"
  },
  action: {
    active: Ka.white,
    hover: "rgba(255, 255, 255, 0.08)",
    hoverOpacity: 0.08,
    selected: "rgba(255, 255, 255, 0.16)",
    selectedOpacity: 0.16,
    disabled: "rgba(255, 255, 255, 0.3)",
    disabledBackground: "rgba(255, 255, 255, 0.12)",
    disabledOpacity: 0.38,
    focus: "rgba(255, 255, 255, 0.12)",
    focusOpacity: 0.12,
    activatedOpacity: 0.24
  }
};
function Mb(e10, t, n, o) {
  const r = o.light || o, s = o.dark || o * 1.5;
  e10[t] || (e10.hasOwnProperty(n) ? e10[t] = e10[n] : t === "light" ? e10.light = Hn(e10.main, r) : t === "dark" && (e10.dark = lo(e10.main, s)));
}
function jA(e10 = "light") {
  return e10 === "dark" ? {
    main: Qi[200],
    light: Qi[50],
    dark: Qi[400]
  } : {
    main: Qi[700],
    light: Qi[400],
    dark: Qi[800]
  };
}
function DA(e10 = "light") {
  return e10 === "dark" ? {
    main: Ji[200],
    light: Ji[50],
    dark: Ji[400]
  } : {
    main: Ji[500],
    light: Ji[300],
    dark: Ji[700]
  };
}
function MA(e10 = "light") {
  return e10 === "dark" ? {
    main: Ki[500],
    light: Ki[300],
    dark: Ki[700]
  } : {
    main: Ki[700],
    light: Ki[400],
    dark: Ki[800]
  };
}
function kA(e10 = "light") {
  return e10 === "dark" ? {
    main: es[400],
    light: es[300],
    dark: es[700]
  } : {
    main: es[700],
    light: es[500],
    dark: es[900]
  };
}
function FA(e10 = "light") {
  return e10 === "dark" ? {
    main: ts[400],
    light: ts[300],
    dark: ts[700]
  } : {
    main: ts[800],
    light: ts[500],
    dark: ts[900]
  };
}
function NA(e10 = "light") {
  return e10 === "dark" ? {
    main: bi[400],
    light: bi[300],
    dark: bi[700]
  } : {
    main: "#ed6c02",
    // closest to orange[800] that pass 3:1.
    light: bi[500],
    dark: bi[900]
  };
}
function Gm(e10) {
  const {
    mode: t = "light",
    contrastThreshold: n = 3,
    tonalOffset: o = 0.2,
    ...r
  } = e10, s = e10.primary || jA(t), a = e10.secondary || DA(t), l = e10.error || MA(t), c = e10.info || kA(t), u = e10.success || FA(t), d = e10.warning || NA(t);
  function p(v) {
    const h = wb(v, mp.text.primary) >= n ? mp.text.primary : Db.text.primary;
    if (true) {
      const y = wb(v, h);
      y < 3 && console.error([`MUI: The contrast ratio of ${y}:1 for ${h} on ${v}`, "falls below the WCAG recommended absolute minimum contrast ratio of 3:1.", "https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast"].join(`
`));
    }
    return h;
  }
  const m = ({
    color: v,
    name: h,
    mainShade: y = 500,
    lightShade: C = 300,
    darkShade: x = 700
  }) => {
    if (v = {
      ...v
    }, !v.main && v[y] && (v.main = v[y]), !v.hasOwnProperty("main"))
      throw new Error(true ? `MUI: The color${h ? ` (${h})` : ""} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${y}\` property.` : or(11, h ? ` (${h})` : "", y));
    if (typeof v.main != "string")
      throw new Error(true ? `MUI: The color${h ? ` (${h})` : ""} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(v.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` : or(12, h ? ` (${h})` : "", JSON.stringify(v.main)));
    return Mb(v, "light", C, o), Mb(v, "dark", x, o), v.contrastText || (v.contrastText = p(v.main)), v;
  }, g = {
    dark: mp,
    light: Db
  };
  return g[t] || console.error(`MUI: The palette mode \`${t}\` is not supported.`), Cn({
    // A collection of common colors.
    common: {
      ...Ka
    },
    // prevent mutable object.
    // The palette mode, can be light or dark.
    mode: t,
    // The colors used to represent primary interface elements for a user.
    primary: m({
      color: s,
      name: "primary"
    }),
    // The colors used to represent secondary interface elements for a user.
    secondary: m({
      color: a,
      name: "secondary",
      mainShade: "A400",
      lightShade: "A200",
      darkShade: "A700"
    }),
    // The colors used to represent interface elements that the user should be made aware of.
    error: m({
      color: l,
      name: "error"
    }),
    // The colors used to represent potentially dangerous actions or important messages.
    warning: m({
      color: d,
      name: "warning"
    }),
    // The colors used to present information to the user that is neutral and not necessarily important.
    info: m({
      color: c,
      name: "info"
    }),
    // The colors used to indicate the successful completion of an action that user triggered.
    success: m({
      color: u,
      name: "success"
    }),
    // The grey colors.
    grey: AA,
    // Used by `getContrastText()` to maximize the contrast between
    // the background and the text.
    contrastThreshold: n,
    // Takes a background color and returns the text color that maximizes the contrast.
    getContrastText: p,
    // Generate a rich color object.
    augmentColor: m,
    // Used by the functions below to shift a color's luminance by approximately
    // two indexes within its tonal palette.
    // E.g., shift from Red 500 to Red 300 or Red 700.
    tonalOffset: o,
    // The light and dark mode object.
    ...g[t]
  }, r);
}
function $A(e10) {
  const t = {};
  return Object.entries(e10).forEach((o) => {
    const [r, s] = o;
    typeof s == "object" && (t[r] = `${s.fontStyle ? `${s.fontStyle} ` : ""}${s.fontVariant ? `${s.fontVariant} ` : ""}${s.fontWeight ? `${s.fontWeight} ` : ""}${s.fontStretch ? `${s.fontStretch} ` : ""}${s.fontSize || ""}${s.lineHeight ? `/${s.lineHeight} ` : ""}${s.fontFamily || ""}`);
  }), t;
}
function VA(e10, t) {
  return {
    toolbar: {
      minHeight: 56,
      [e10.up("xs")]: {
        "@media (orientation: landscape)": {
          minHeight: 48
        }
      },
      [e10.up("sm")]: {
        minHeight: 64
      }
    },
    ...t
  };
}
function _A(e10) {
  return Math.round(e10 * 1e5) / 1e5;
}
var kb = {
  textTransform: "uppercase"
};
var Fb = '"Roboto", "Helvetica", "Arial", sans-serif';
function lC(e10, t) {
  const {
    fontFamily: n = Fb,
    // The default font size of the Material Specification.
    fontSize: o = 14,
    // px
    fontWeightLight: r = 300,
    fontWeightRegular: s = 400,
    fontWeightMedium: a = 500,
    fontWeightBold: l = 700,
    // Tell MUI what's the font-size on the html element.
    // 16px is the default font-size used by browsers.
    htmlFontSize: c = 16,
    // Apply the CSS properties to all the variants.
    allVariants: u,
    pxToRem: d,
    ...p
  } = typeof t == "function" ? t(e10) : t;
  typeof o != "number" && console.error("MUI: `fontSize` is required to be a number."), typeof c != "number" && console.error("MUI: `htmlFontSize` is required to be a number.");
  const m = o / 14, g = d || ((h) => `${h / c * m}rem`), b = (h, y, C, x, T) => ({
    fontFamily: n,
    fontWeight: h,
    fontSize: g(y),
    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
    lineHeight: C,
    // The letter spacing was designed for the Roboto font-family. Using the same letter-spacing
    // across font-families can cause issues with the kerning.
    ...n === Fb ? {
      letterSpacing: `${_A(x / y)}em`
    } : {},
    ...T,
    ...u
  }), v = {
    h1: b(r, 96, 1.167, -1.5),
    h2: b(r, 60, 1.2, -0.5),
    h3: b(s, 48, 1.167, 0),
    h4: b(s, 34, 1.235, 0.25),
    h5: b(s, 24, 1.334, 0),
    h6: b(a, 20, 1.6, 0.15),
    subtitle1: b(s, 16, 1.75, 0.15),
    subtitle2: b(a, 14, 1.57, 0.1),
    body1: b(s, 16, 1.5, 0.15),
    body2: b(s, 14, 1.43, 0.15),
    button: b(a, 14, 1.75, 0.4, kb),
    caption: b(s, 12, 1.66, 0.4),
    overline: b(s, 12, 2.66, 1, kb),
    // TODO v6: Remove handling of 'inherit' variant from the theme as it is already handled in Material UI's Typography component. Also, remember to remove the associated types.
    inherit: {
      fontFamily: "inherit",
      fontWeight: "inherit",
      fontSize: "inherit",
      lineHeight: "inherit",
      letterSpacing: "inherit"
    }
  };
  return Cn({
    htmlFontSize: c,
    pxToRem: g,
    fontFamily: n,
    fontSize: o,
    fontWeightLight: r,
    fontWeightRegular: s,
    fontWeightMedium: a,
    fontWeightBold: l,
    ...v
  }, p, {
    clone: false
    // No need to clone deep
  });
}
var LA = 0.2;
var BA = 0.14;
var zA = 0.12;
function Zt(...e10) {
  return [`${e10[0]}px ${e10[1]}px ${e10[2]}px ${e10[3]}px rgba(0,0,0,${LA})`, `${e10[4]}px ${e10[5]}px ${e10[6]}px ${e10[7]}px rgba(0,0,0,${BA})`, `${e10[8]}px ${e10[9]}px ${e10[10]}px ${e10[11]}px rgba(0,0,0,${zA})`].join(",");
}
var WA = ["none", Zt(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), Zt(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), Zt(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), Zt(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), Zt(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), Zt(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), Zt(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), Zt(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), Zt(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), Zt(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), Zt(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), Zt(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), Zt(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), Zt(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), Zt(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), Zt(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), Zt(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), Zt(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), Zt(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), Zt(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), Zt(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), Zt(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), Zt(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), Zt(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)];
var HA = {
  // This is the most common easing curve.
  easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
  // Objects enter the screen at full velocity from off-screen and
  // slowly decelerate to a resting point.
  easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
  // Objects leave the screen at full velocity. They do not decelerate when off-screen.
  easeIn: "cubic-bezier(0.4, 0, 1, 1)",
  // The sharp curve is used by objects that may return to the screen at any time.
  sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
};
var cC = {
  shortest: 150,
  shorter: 200,
  short: 250,
  // most basic recommended timing
  standard: 300,
  // this is to be used in complex animations
  complex: 375,
  // recommended when something is entering screen
  enteringScreen: 225,
  // recommended when something is leaving screen
  leavingScreen: 195
};
function Nb(e10) {
  return `${Math.round(e10)}ms`;
}
function GA(e10) {
  if (!e10)
    return 0;
  const t = e10 / 36;
  return Math.min(Math.round((4 + 15 * t ** 0.25 + t / 5) * 10), 3e3);
}
function UA(e10) {
  const t = {
    ...HA,
    ...e10.easing
  }, n = {
    ...cC,
    ...e10.duration
  };
  return {
    getAutoHeightDuration: GA,
    create: (r = ["all"], s = {}) => {
      const {
        duration: a = n.standard,
        easing: l = t.easeInOut,
        delay: c = 0,
        ...u
      } = s;
      if (true) {
        const d = (m) => typeof m == "string", p = (m) => !Number.isNaN(parseFloat(m));
        !d(r) && !Array.isArray(r) && console.error('MUI: Argument "props" must be a string or Array.'), !p(a) && !d(a) && console.error(`MUI: Argument "duration" must be a number or a string but found ${a}.`), d(l) || console.error('MUI: Argument "easing" must be a string.'), !p(c) && !d(c) && console.error('MUI: Argument "delay" must be a number or a string.'), typeof s != "object" && console.error(["MUI: Secong argument of transition.create must be an object.", "Arguments should be either `create('prop1', options)` or `create(['prop1', 'prop2'], options)`"].join(`
`)), Object.keys(u).length !== 0 && console.error(`MUI: Unrecognized argument(s) [${Object.keys(u).join(",")}].`);
      }
      return (Array.isArray(r) ? r : [r]).map((d) => `${d} ${typeof a == "string" ? a : Nb(a)} ${l} ${typeof c == "string" ? c : Nb(c)}`).join(",");
    },
    ...e10,
    easing: t,
    duration: n
  };
}
var XA = {
  mobileStepper: 1e3,
  fab: 1050,
  speedDial: 1050,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500
};
function xf(e10 = {}, ...t) {
  const {
    breakpoints: n,
    mixins: o = {},
    spacing: r,
    palette: s = {},
    transitions: a = {},
    typography: l = {},
    shape: c,
    ...u
  } = e10;
  if (e10.vars)
    throw new Error(true ? "MUI: `vars` is a private field used for CSS variables support.\nPlease use another name." : or(20));
  const d = Gm(s), p = Lu(e10);
  let m = Cn(p, {
    mixins: VA(p.breakpoints, o),
    palette: d,
    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.
    shadows: WA.slice(),
    typography: lC(d, l),
    transitions: UA(a),
    zIndex: {
      ...XA
    }
  });
  if (m = Cn(m, u), m = t.reduce((g, b) => Cn(g, b), m), true) {
    const g = ["active", "checked", "completed", "disabled", "error", "expanded", "focused", "focusVisible", "required", "selected"], b = (v, h) => {
      let y;
      for (y in v) {
        const C = v[y];
        if (g.includes(y) && Object.keys(C).length > 0) {
          if (true) {
            const x = He("", y);
            console.error([`MUI: The \`${h}\` component increases the CSS specificity of the \`${y}\` internal state.`, "You can not override it like this: ", JSON.stringify(v, null, 2), "", `Instead, you need to use the '&.${x}' syntax:`, JSON.stringify({
              root: {
                [`&.${x}`]: C
              }
            }, null, 2), "", "https://mui.com/r/state-classes-guide"].join(`
`));
          }
          v[y] = {};
        }
      }
    };
    Object.keys(m.components).forEach((v) => {
      const h = m.components[v].styleOverrides;
      h && v.startsWith("Mui") && b(h, v);
    });
  }
  return m.unstable_sxConfig = {
    ...Il,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, m.unstable_sx = function(b) {
    return $i({
      sx: b,
      theme: this
    });
  }, m;
}
function Cf(e10) {
  let t;
  return e10 < 1 ? t = 5.11916 * e10 ** 2 : t = 4.5 * Math.log(e10 + 1) + 2, Math.round(t * 10) / 1e3;
}
var YA = [...Array(25)].map((e10, t) => {
  if (t === 0)
    return "none";
  const n = Cf(t);
  return `linear-gradient(rgba(255 255 255 / ${n}), rgba(255 255 255 / ${n}))`;
});
function uC(e10) {
  return {
    inputPlaceholder: e10 === "dark" ? 0.5 : 0.42,
    inputUnderline: e10 === "dark" ? 0.7 : 0.42,
    switchTrackDisabled: e10 === "dark" ? 0.2 : 0.12,
    switchTrack: e10 === "dark" ? 0.3 : 0.38
  };
}
function dC(e10) {
  return e10 === "dark" ? YA : [];
}
function ZA(e10) {
  const {
    palette: t = {
      mode: "light"
    },
    // need to cast to avoid module augmentation test
    opacity: n,
    overlays: o,
    ...r
  } = e10, s = Gm(t);
  return {
    palette: s,
    opacity: {
      ...uC(s.mode),
      ...n
    },
    overlays: o || dC(s.mode),
    ...r
  };
}
function qA(e10) {
  var t;
  return !!e10[0].match(/(cssVarPrefix|colorSchemeSelector|typography|mixins|breakpoints|direction|transitions)/) || !!e10[0].match(/sxConfig$/) || // ends with sxConfig
  e10[0] === "palette" && !!((t = e10[1]) != null && t.match(/(mode|contrastThreshold|tonalOffset)/));
}
var JA = (e10) => [...[...Array(25)].map((t, n) => `--${e10 ? `${e10}-` : ""}overlays-${n}`), `--${e10 ? `${e10}-` : ""}palette-AppBar-darkBg`, `--${e10 ? `${e10}-` : ""}palette-AppBar-darkColor`];
var KA = (e10) => (t, n) => {
  const o = e10.colorSchemeSelector;
  let r = o;
  if (o === "class" && (r = ".%s"), o === "data" && (r = "[data-%s]"), o != null && o.startsWith("data-") && !o.includes("%s") && (r = `[${o}="%s"]`), e10.defaultColorScheme === t) {
    if (t === "dark") {
      const s = {};
      return JA(e10.cssVarPrefix).forEach((a) => {
        s[a] = n[a], delete n[a];
      }), r === "media" ? {
        ":root": n,
        "@media (prefers-color-scheme: dark)": {
          ":root": s
        }
      } : r ? {
        [r.replace("%s", t)]: s,
        [`:root, ${r.replace("%s", t)}`]: n
      } : {
        ":root": {
          ...n,
          ...s
        }
      };
    }
    if (r && r !== "media")
      return `:root, ${r.replace("%s", String(t))}`;
  } else if (t) {
    if (r === "media")
      return {
        [`@media (prefers-color-scheme: ${String(t)})`]: {
          ":root": n
        }
      };
    if (r)
      return r.replace("%s", String(t));
  }
  return ":root";
};
function QA(e10) {
  return Ko(e10) || typeof e10 > "u" || typeof e10 == "string" || typeof e10 == "boolean" || typeof e10 == "number" || Array.isArray(e10);
}
function ej(e10 = {}) {
  const t = {
    ...e10
  };
  function n(o) {
    const r = Object.entries(o);
    for (let s = 0; s < r.length; s++) {
      const [a, l] = r[s];
      !QA(l) || a.startsWith("unstable_") ? delete o[a] : Ko(l) && (o[a] = {
        ...l
      }, n(o[a]));
    }
  }
  return n(t), `import { unstable_createBreakpoints as createBreakpoints, createTransitions } from '@mui/material/styles';

const theme = ${JSON.stringify(t, null, 2)};

theme.breakpoints = createBreakpoints(theme.breakpoints || {});
theme.transitions = createTransitions(theme.transitions || {});

export default theme;`;
}
function tj(e10, t) {
  t.forEach((n) => {
    e10[n] || (e10[n] = {});
  });
}
function we(e10, t, n) {
  !e10[t] && n && (e10[t] = n);
}
function Sa(e10) {
  return !e10 || !e10.startsWith("hsl") ? e10 : Yx(e10);
}
function mr(e10, t) {
  `${t}Channel` in e10 || (e10[`${t}Channel`] = Ca(Sa(e10[t]), `MUI: Can't create \`palette.${t}Channel\` because \`palette.${t}\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().
To suppress this warning, you need to explicitly provide the \`palette.${t}Channel\` as a string (in rgb format, for example "12 12 12") or undefined if you want to remove the channel token.`));
}
function nj(e10) {
  return typeof e10 == "number" ? `${e10}px` : typeof e10 == "string" || typeof e10 == "function" || Array.isArray(e10) ? e10 : "8px";
}
var Xo = (e10) => {
  try {
    return e10();
  } catch {
  }
};
var oj = (e10 = "mui") => vA(e10);
function gp(e10, t, n, o) {
  if (!t)
    return;
  t = t === true ? {} : t;
  const r = o === "dark" ? "dark" : "light";
  if (!n) {
    e10[o] = ZA({
      ...t,
      palette: {
        mode: r,
        ...t == null ? void 0 : t.palette
      }
    });
    return;
  }
  const {
    palette: s,
    ...a
  } = xf({
    ...n,
    palette: {
      mode: r,
      ...t == null ? void 0 : t.palette
    }
  });
  return e10[o] = {
    ...t,
    palette: s,
    opacity: {
      ...uC(r),
      ...t == null ? void 0 : t.opacity
    },
    overlays: (t == null ? void 0 : t.overlays) || dC(r)
  }, a;
}
function rj(e10 = {}, ...t) {
  const {
    colorSchemes: n = {
      light: true
    },
    defaultColorScheme: o,
    disableCssColorScheme: r = false,
    cssVarPrefix: s = "mui",
    shouldSkipGeneratingVar: a = qA,
    colorSchemeSelector: l = n.light && n.dark ? "media" : void 0,
    ...c
  } = e10, u = Object.keys(n)[0], d = o || (n.light && u !== "light" ? "light" : u), p = oj(s), {
    [d]: m,
    light: g,
    dark: b,
    ...v
  } = n, h = {
    ...v
  };
  let y = m;
  if ((d === "dark" && !("dark" in n) || d === "light" && !("light" in n)) && (y = true), !y)
    throw new Error(true ? `MUI: The \`colorSchemes.${d}\` option is either missing or invalid.` : or(21, d));
  const C = gp(h, y, c, d);
  g && !h.light && gp(h, g, void 0, "light"), b && !h.dark && gp(h, b, void 0, "dark");
  let x = {
    defaultColorScheme: d,
    ...C,
    cssVarPrefix: s,
    colorSchemeSelector: l,
    getCssVar: p,
    colorSchemes: h,
    font: {
      ...$A(C.typography),
      ...C.font
    },
    spacing: nj(c.spacing)
  };
  Object.keys(x.colorSchemes).forEach((O) => {
    const I = x.colorSchemes[O].palette, P = (A) => {
      const M = A.split("-"), F = M[1], D = M[2];
      return p(A, I[F][D]);
    };
    if (I.mode === "light" && (we(I.common, "background", "#fff"), we(I.common, "onBackground", "#000")), I.mode === "dark" && (we(I.common, "background", "#000"), we(I.common, "onBackground", "#fff")), tj(I, ["Alert", "AppBar", "Avatar", "Button", "Chip", "FilledInput", "LinearProgress", "Skeleton", "Slider", "SnackbarContent", "SpeedDialAction", "StepConnector", "StepContent", "Switch", "TableCell", "Tooltip"]), I.mode === "light") {
      we(I.Alert, "errorColor", Gt(I.error.light, 0.6)), we(I.Alert, "infoColor", Gt(I.info.light, 0.6)), we(I.Alert, "successColor", Gt(I.success.light, 0.6)), we(I.Alert, "warningColor", Gt(I.warning.light, 0.6)), we(I.Alert, "errorFilledBg", P("palette-error-main")), we(I.Alert, "infoFilledBg", P("palette-info-main")), we(I.Alert, "successFilledBg", P("palette-success-main")), we(I.Alert, "warningFilledBg", P("palette-warning-main")), we(I.Alert, "errorFilledColor", Xo(() => I.getContrastText(I.error.main))), we(I.Alert, "infoFilledColor", Xo(() => I.getContrastText(I.info.main))), we(I.Alert, "successFilledColor", Xo(() => I.getContrastText(I.success.main))), we(I.Alert, "warningFilledColor", Xo(() => I.getContrastText(I.warning.main))), we(I.Alert, "errorStandardBg", Ut(I.error.light, 0.9)), we(I.Alert, "infoStandardBg", Ut(I.info.light, 0.9)), we(I.Alert, "successStandardBg", Ut(I.success.light, 0.9)), we(I.Alert, "warningStandardBg", Ut(I.warning.light, 0.9)), we(I.Alert, "errorIconColor", P("palette-error-main")), we(I.Alert, "infoIconColor", P("palette-info-main")), we(I.Alert, "successIconColor", P("palette-success-main")), we(I.Alert, "warningIconColor", P("palette-warning-main")), we(I.AppBar, "defaultBg", P("palette-grey-100")), we(I.Avatar, "defaultBg", P("palette-grey-400")), we(I.Button, "inheritContainedBg", P("palette-grey-300")), we(I.Button, "inheritContainedHoverBg", P("palette-grey-A100")), we(I.Chip, "defaultBorder", P("palette-grey-400")), we(I.Chip, "defaultAvatarColor", P("palette-grey-700")), we(I.Chip, "defaultIconColor", P("palette-grey-700")), we(I.FilledInput, "bg", "rgba(0, 0, 0, 0.06)"), we(I.FilledInput, "hoverBg", "rgba(0, 0, 0, 0.09)"), we(I.FilledInput, "disabledBg", "rgba(0, 0, 0, 0.12)"), we(I.LinearProgress, "primaryBg", Ut(I.primary.main, 0.62)), we(I.LinearProgress, "secondaryBg", Ut(I.secondary.main, 0.62)), we(I.LinearProgress, "errorBg", Ut(I.error.main, 0.62)), we(I.LinearProgress, "infoBg", Ut(I.info.main, 0.62)), we(I.LinearProgress, "successBg", Ut(I.success.main, 0.62)), we(I.LinearProgress, "warningBg", Ut(I.warning.main, 0.62)), we(I.Skeleton, "bg", `rgba(${P("palette-text-primaryChannel")} / 0.11)`), we(I.Slider, "primaryTrack", Ut(I.primary.main, 0.62)), we(I.Slider, "secondaryTrack", Ut(I.secondary.main, 0.62)), we(I.Slider, "errorTrack", Ut(I.error.main, 0.62)), we(I.Slider, "infoTrack", Ut(I.info.main, 0.62)), we(I.Slider, "successTrack", Ut(I.success.main, 0.62)), we(I.Slider, "warningTrack", Ut(I.warning.main, 0.62));
      const A = Zl(I.background.default, 0.8);
      we(I.SnackbarContent, "bg", A), we(I.SnackbarContent, "color", Xo(() => I.getContrastText(A))), we(I.SpeedDialAction, "fabHoverBg", Zl(I.background.paper, 0.15)), we(I.StepConnector, "border", P("palette-grey-400")), we(I.StepContent, "border", P("palette-grey-400")), we(I.Switch, "defaultColor", P("palette-common-white")), we(I.Switch, "defaultDisabledColor", P("palette-grey-100")), we(I.Switch, "primaryDisabledColor", Ut(I.primary.main, 0.62)), we(I.Switch, "secondaryDisabledColor", Ut(I.secondary.main, 0.62)), we(I.Switch, "errorDisabledColor", Ut(I.error.main, 0.62)), we(I.Switch, "infoDisabledColor", Ut(I.info.main, 0.62)), we(I.Switch, "successDisabledColor", Ut(I.success.main, 0.62)), we(I.Switch, "warningDisabledColor", Ut(I.warning.main, 0.62)), we(I.TableCell, "border", Ut(Yl(I.divider, 1), 0.88)), we(I.Tooltip, "bg", Yl(I.grey[700], 0.92));
    }
    if (I.mode === "dark") {
      we(I.Alert, "errorColor", Ut(I.error.light, 0.6)), we(I.Alert, "infoColor", Ut(I.info.light, 0.6)), we(I.Alert, "successColor", Ut(I.success.light, 0.6)), we(I.Alert, "warningColor", Ut(I.warning.light, 0.6)), we(I.Alert, "errorFilledBg", P("palette-error-dark")), we(I.Alert, "infoFilledBg", P("palette-info-dark")), we(I.Alert, "successFilledBg", P("palette-success-dark")), we(I.Alert, "warningFilledBg", P("palette-warning-dark")), we(I.Alert, "errorFilledColor", Xo(() => I.getContrastText(I.error.dark))), we(I.Alert, "infoFilledColor", Xo(() => I.getContrastText(I.info.dark))), we(I.Alert, "successFilledColor", Xo(() => I.getContrastText(I.success.dark))), we(I.Alert, "warningFilledColor", Xo(() => I.getContrastText(I.warning.dark))), we(I.Alert, "errorStandardBg", Gt(I.error.light, 0.9)), we(I.Alert, "infoStandardBg", Gt(I.info.light, 0.9)), we(I.Alert, "successStandardBg", Gt(I.success.light, 0.9)), we(I.Alert, "warningStandardBg", Gt(I.warning.light, 0.9)), we(I.Alert, "errorIconColor", P("palette-error-main")), we(I.Alert, "infoIconColor", P("palette-info-main")), we(I.Alert, "successIconColor", P("palette-success-main")), we(I.Alert, "warningIconColor", P("palette-warning-main")), we(I.AppBar, "defaultBg", P("palette-grey-900")), we(I.AppBar, "darkBg", P("palette-background-paper")), we(I.AppBar, "darkColor", P("palette-text-primary")), we(I.Avatar, "defaultBg", P("palette-grey-600")), we(I.Button, "inheritContainedBg", P("palette-grey-800")), we(I.Button, "inheritContainedHoverBg", P("palette-grey-700")), we(I.Chip, "defaultBorder", P("palette-grey-700")), we(I.Chip, "defaultAvatarColor", P("palette-grey-300")), we(I.Chip, "defaultIconColor", P("palette-grey-300")), we(I.FilledInput, "bg", "rgba(255, 255, 255, 0.09)"), we(I.FilledInput, "hoverBg", "rgba(255, 255, 255, 0.13)"), we(I.FilledInput, "disabledBg", "rgba(255, 255, 255, 0.12)"), we(I.LinearProgress, "primaryBg", Gt(I.primary.main, 0.5)), we(I.LinearProgress, "secondaryBg", Gt(I.secondary.main, 0.5)), we(I.LinearProgress, "errorBg", Gt(I.error.main, 0.5)), we(I.LinearProgress, "infoBg", Gt(I.info.main, 0.5)), we(I.LinearProgress, "successBg", Gt(I.success.main, 0.5)), we(I.LinearProgress, "warningBg", Gt(I.warning.main, 0.5)), we(I.Skeleton, "bg", `rgba(${P("palette-text-primaryChannel")} / 0.13)`), we(I.Slider, "primaryTrack", Gt(I.primary.main, 0.5)), we(I.Slider, "secondaryTrack", Gt(I.secondary.main, 0.5)), we(I.Slider, "errorTrack", Gt(I.error.main, 0.5)), we(I.Slider, "infoTrack", Gt(I.info.main, 0.5)), we(I.Slider, "successTrack", Gt(I.success.main, 0.5)), we(I.Slider, "warningTrack", Gt(I.warning.main, 0.5));
      const A = Zl(I.background.default, 0.98);
      we(I.SnackbarContent, "bg", A), we(I.SnackbarContent, "color", Xo(() => I.getContrastText(A))), we(I.SpeedDialAction, "fabHoverBg", Zl(I.background.paper, 0.15)), we(I.StepConnector, "border", P("palette-grey-600")), we(I.StepContent, "border", P("palette-grey-600")), we(I.Switch, "defaultColor", P("palette-grey-300")), we(I.Switch, "defaultDisabledColor", P("palette-grey-600")), we(I.Switch, "primaryDisabledColor", Gt(I.primary.main, 0.55)), we(I.Switch, "secondaryDisabledColor", Gt(I.secondary.main, 0.55)), we(I.Switch, "errorDisabledColor", Gt(I.error.main, 0.55)), we(I.Switch, "infoDisabledColor", Gt(I.info.main, 0.55)), we(I.Switch, "successDisabledColor", Gt(I.success.main, 0.55)), we(I.Switch, "warningDisabledColor", Gt(I.warning.main, 0.55)), we(I.TableCell, "border", Gt(Yl(I.divider, 1), 0.68)), we(I.Tooltip, "bg", Yl(I.grey[700], 0.92));
    }
    mr(I.background, "default"), mr(I.background, "paper"), mr(I.common, "background"), mr(I.common, "onBackground"), mr(I, "divider"), Object.keys(I).forEach((A) => {
      const M = I[A];
      M && typeof M == "object" && (M.main && we(I[A], "mainChannel", Ca(Sa(M.main))), M.light && we(I[A], "lightChannel", Ca(Sa(M.light))), M.dark && we(I[A], "darkChannel", Ca(Sa(M.dark))), M.contrastText && we(I[A], "contrastTextChannel", Ca(Sa(M.contrastText))), A === "text" && (mr(I[A], "primary"), mr(I[A], "secondary")), A === "action" && (M.active && mr(I[A], "active"), M.selected && mr(I[A], "selected")));
    });
  }), x = t.reduce((O, I) => Cn(O, I), x);
  const T = {
    prefix: s,
    disableCssColorScheme: r,
    shouldSkipGeneratingVar: a,
    getSelector: KA(x)
  }, {
    vars: w,
    generateThemeVars: R,
    generateStyleSheets: E
  } = CA(x, T);
  return x.vars = w, Object.entries(x.colorSchemes[x.defaultColorScheme]).forEach(([O, I]) => {
    x[O] = I;
  }), x.generateThemeVars = R, x.generateStyleSheets = E, x.generateSpacing = function() {
    return _x(c.spacing, ku(this));
  }, x.getColorSchemeSelector = SA(l), x.spacing = x.generateSpacing(), x.shouldSkipGeneratingVar = a, x.unstable_sxConfig = {
    ...Il,
    ...c == null ? void 0 : c.unstable_sxConfig
  }, x.unstable_sx = function(I) {
    return $i({
      sx: I,
      theme: this
    });
  }, x.toRuntimeSource = ej, x;
}
function $b(e10, t, n) {
  e10.colorSchemes && n && (e10.colorSchemes[t] = {
    ...n !== true && n,
    palette: Gm({
      ...n === true ? {} : n.palette,
      mode: t
    })
    // cast type to skip module augmentation test
  });
}
function Uu(e10 = {}, ...t) {
  const {
    palette: n,
    cssVariables: o = false,
    colorSchemes: r = n ? void 0 : {
      light: true
    },
    defaultColorScheme: s = n == null ? void 0 : n.mode,
    ...a
  } = e10, l = s || "light", c = r == null ? void 0 : r[l], u = {
    ...r,
    ...n ? {
      [l]: {
        ...typeof c != "boolean" && c,
        palette: n
      }
    } : void 0
  };
  if (o === false) {
    if (!("colorSchemes" in e10))
      return xf(e10, ...t);
    let d = n;
    "palette" in e10 || u[l] && (u[l] !== true ? d = u[l].palette : l === "dark" && (d = {
      mode: "dark"
    }));
    const p = xf({
      ...e10,
      palette: d
    }, ...t);
    return p.defaultColorScheme = l, p.colorSchemes = u, p.palette.mode === "light" && (p.colorSchemes.light = {
      ...u.light !== true && u.light,
      palette: p.palette
    }, $b(p, "dark", u.dark)), p.palette.mode === "dark" && (p.colorSchemes.dark = {
      ...u.dark !== true && u.dark,
      palette: p.palette
    }, $b(p, "light", u.light)), p;
  }
  return !n && !("light" in u) && l === "light" && (u.light = true), rj({
    ...a,
    colorSchemes: u,
    defaultColorScheme: l,
    ...typeof o != "boolean" && o
  }, ...t);
}
function ij(e10) {
  return String(e10).match(/[\d.\-+]*\s*(.*)/)[1] || "";
}
function sj(e10) {
  return parseFloat(e10);
}
var Xu = Uu();
function Sn() {
  const e10 = Bu(Xu);
  return S.useDebugValue(e10), e10[$o] || e10;
}
function at({
  props: e10,
  name: t
}) {
  return Ux({
    props: e10,
    name: t,
    defaultTheme: Xu,
    themeId: $o
  });
}
function Yu(e10) {
  return e10 !== "ownerState" && e10 !== "theme" && e10 !== "sx" && e10 !== "as";
}
var Fn = (e10) => Yu(e10) && e10 !== "classes";
var K = Hx({
  themeId: $o,
  defaultTheme: Xu,
  rootShouldForwardProp: Fn
});
function Vb({
  theme: e10,
  ...t
}) {
  const n = $o in e10 ? e10[$o] : void 0;
  return f.jsx(Ja, {
    ...t,
    themeId: n ? $o : void 0,
    theme: n || e10
  });
}
var ql = {
  attribute: "data-mui-color-scheme",
  colorSchemeStorageKey: "mui-color-scheme",
  defaultLightColorScheme: "light",
  defaultDarkColorScheme: "dark",
  modeStorageKey: "mui-mode"
};
var {
  CssVarsProvider: aj,
  useColorScheme: WK,
  getInitColorSchemeScript: HK
} = bA({
  themeId: $o,
  // @ts-ignore ignore module augmentation tests
  theme: () => Uu({
    cssVariables: true
  }),
  colorSchemeStorageKey: ql.colorSchemeStorageKey,
  modeStorageKey: ql.modeStorageKey,
  defaultColorScheme: {
    light: ql.defaultLightColorScheme,
    dark: ql.defaultDarkColorScheme
  },
  resolveTheme: (e10) => {
    const t = {
      ...e10,
      typography: lC(e10.palette, e10.typography)
    };
    return t.unstable_sx = function(o) {
      return $i({
        sx: o,
        theme: this
      });
    }, t;
  }
});
var lj = aj;
function cj({
  theme: e10,
  ...t
}) {
  return typeof e10 == "function" ? f.jsx(Vb, {
    theme: e10,
    ...t
  }) : "colorSchemes" in ($o in e10 ? e10[$o] : e10) ? f.jsx(lj, {
    theme: e10,
    ...t
  }) : f.jsx(Vb, {
    theme: e10,
    ...t
  });
}
function pC(e10) {
  return f.jsx(Lx, {
    ...e10,
    defaultTheme: Xu,
    themeId: $o
  });
}
pC.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The styles you want to apply globally.
   */
  styles: i.oneOfType([i.array, i.func, i.number, i.object, i.string, i.bool])
};
function uj(e10) {
  return function(n) {
    return (
      // Pigment CSS `globalCss` support callback with theme inside an object but `GlobalStyles` support theme as a callback value.
      f.jsx(pC, {
        styles: typeof e10 == "function" ? (o) => e10({
          theme: o,
          ...n
        }) : e10
      })
    );
  };
}
function dj() {
  return zu;
}
var _b = {
  theme: void 0
};
function Ve(e10) {
  let t, n;
  return (o) => {
    let r = t;
    return (r === void 0 || o.theme !== n) && (_b.theme = o.theme, r = e10(_b), t = r, n = o.theme), r;
  };
}
i.node, i.object.isRequired;
function Ye(e10) {
  return dA(e10);
}
function pj(e10) {
  return He("MuiSvgIcon", e10);
}
Be("MuiSvgIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]);
var fj = (e10) => {
  const {
    color: t,
    fontSize: n,
    classes: o
  } = e10, r = {
    root: ["root", t !== "inherit" && `color${de(t)}`, `fontSize${de(n)}`]
  };
  return Ue(r, pj, o);
};
var mj = K("svg", {
  name: "MuiSvgIcon",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.root, n.color !== "inherit" && t[`color${de(n.color)}`], t[`fontSize${de(n.fontSize)}`]];
  }
})(Ve(({
  theme: e10
}) => {
  var t, n, o, r, s, a, l, c, u, d, p, m, g, b;
  return {
    userSelect: "none",
    width: "1em",
    height: "1em",
    display: "inline-block",
    flexShrink: 0,
    transition: (r = (t = e10.transitions) == null ? void 0 : t.create) == null ? void 0 : r.call(t, "fill", {
      duration: (o = (n = (e10.vars ?? e10).transitions) == null ? void 0 : n.duration) == null ? void 0 : o.shorter
    }),
    variants: [
      {
        props: (v) => !v.hasSvgAsChild,
        style: {
          // the <svg> will define the property that has `currentColor`
          // for example heroicons uses fill="none" and stroke="currentColor"
          fill: "currentColor"
        }
      },
      {
        props: {
          fontSize: "inherit"
        },
        style: {
          fontSize: "inherit"
        }
      },
      {
        props: {
          fontSize: "small"
        },
        style: {
          fontSize: ((a = (s = e10.typography) == null ? void 0 : s.pxToRem) == null ? void 0 : a.call(s, 20)) || "1.25rem"
        }
      },
      {
        props: {
          fontSize: "medium"
        },
        style: {
          fontSize: ((c = (l = e10.typography) == null ? void 0 : l.pxToRem) == null ? void 0 : c.call(l, 24)) || "1.5rem"
        }
      },
      {
        props: {
          fontSize: "large"
        },
        style: {
          fontSize: ((d = (u = e10.typography) == null ? void 0 : u.pxToRem) == null ? void 0 : d.call(u, 35)) || "2.1875rem"
        }
      },
      // TODO v5 deprecate color prop, v6 remove for sx
      ...Object.entries((e10.vars ?? e10).palette).filter(([, v]) => v && v.main).map(([v]) => {
        var h, y;
        return {
          props: {
            color: v
          },
          style: {
            color: (y = (h = (e10.vars ?? e10).palette) == null ? void 0 : h[v]) == null ? void 0 : y.main
          }
        };
      }),
      {
        props: {
          color: "action"
        },
        style: {
          color: (m = (p = (e10.vars ?? e10).palette) == null ? void 0 : p.action) == null ? void 0 : m.active
        }
      },
      {
        props: {
          color: "disabled"
        },
        style: {
          color: (b = (g = (e10.vars ?? e10).palette) == null ? void 0 : g.action) == null ? void 0 : b.disabled
        }
      },
      {
        props: {
          color: "inherit"
        },
        style: {
          color: void 0
        }
      }
    ]
  };
}));
var Qa = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiSvgIcon"
  }), {
    children: r,
    className: s,
    color: a = "inherit",
    component: l = "svg",
    fontSize: c = "medium",
    htmlColor: u,
    inheritViewBox: d = false,
    titleAccess: p,
    viewBox: m = "0 0 24 24",
    ...g
  } = o, b = S.isValidElement(r) && r.type === "svg", v = {
    ...o,
    color: a,
    component: l,
    fontSize: c,
    instanceFontSize: t.fontSize,
    inheritViewBox: d,
    viewBox: m,
    hasSvgAsChild: b
  }, h = {};
  d || (h.viewBox = m);
  const y = fj(v);
  return f.jsxs(mj, {
    as: l,
    className: be(y.root, s),
    focusable: "false",
    color: u,
    "aria-hidden": p ? void 0 : true,
    role: p ? "img" : void 0,
    ref: n,
    ...h,
    ...g,
    ...b && r.props,
    ownerState: v,
    children: [b ? r.props.children : r, p ? f.jsx("title", {
      children: p
    }) : null]
  });
});
Qa.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Node passed into the SVG element.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.
   * @default 'inherit'
   */
  color: i.oneOfType([i.oneOf(["inherit", "action", "disabled", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
   * @default 'medium'
   */
  fontSize: i.oneOfType([i.oneOf(["inherit", "large", "medium", "small"]), i.string]),
  /**
   * Applies a color attribute to the SVG element.
   */
  htmlColor: i.string,
  /**
   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`
   * prop will be ignored.
   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that
   * `component`'s viewBox to the root node.
   * @default false
   */
  inheritViewBox: i.bool,
  /**
   * The shape-rendering attribute. The behavior of the different options is described on the
   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).
   * If you are having issues with blurry icons you should investigate this prop.
   */
  shapeRendering: i.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Provides a human-readable title for the element that contains it.
   * https://www.w3.org/TR/SVG-access/#Equivalent
   */
  titleAccess: i.string,
  /**
   * Allows you to redefine what the coordinates without units mean inside an SVG element.
   * For example, if the SVG element is 500 (width) by 200 (height),
   * and you pass viewBox="0 0 50 20",
   * this means that the coordinates inside the SVG will go from the top left corner (0,0)
   * to bottom right (50,20) and each unit will be worth 10px.
   * @default '0 0 24 24'
   */
  viewBox: i.string
};
Qa && (Qa.muiName = "SvgIcon");
function ze(e10, t) {
  function n(o, r) {
    return f.jsx(Qa, {
      "data-testid": `${t}Icon`,
      ref: r,
      ...o,
      children: e10
    });
  }
  return n.displayName = `${t}Icon`, n.muiName = Qa.muiName, S.memo(S.forwardRef(n));
}
var Sf = { exports: {} };
var Bt = {};
var Bb;
function hj() {
  return Bb || (Bb = 1, function() {
    var e10 = Symbol.for("react.element"), t = Symbol.for("react.portal"), n = Symbol.for("react.fragment"), o = Symbol.for("react.strict_mode"), r = Symbol.for("react.profiler"), s = Symbol.for("react.provider"), a = Symbol.for("react.context"), l = Symbol.for("react.server_context"), c = Symbol.for("react.forward_ref"), u = Symbol.for("react.suspense"), d = Symbol.for("react.suspense_list"), p = Symbol.for("react.memo"), m = Symbol.for("react.lazy"), g = Symbol.for("react.offscreen"), b = false, v = false, h = false, y = false, C = false, x;
    x = Symbol.for("react.module.reference");
    function T(L) {
      return !!(typeof L == "string" || typeof L == "function" || L === n || L === r || C || L === o || L === u || L === d || y || L === g || b || v || h || typeof L == "object" && L !== null && (L.$$typeof === m || L.$$typeof === p || L.$$typeof === s || L.$$typeof === a || L.$$typeof === c || // This needs to include all possible module reference object
      // types supported by any Flight configuration anywhere since
      // we don't know which Flight build this will end up being used
      // with.
      L.$$typeof === x || L.getModuleId !== void 0));
    }
    function w(L) {
      if (typeof L == "object" && L !== null) {
        var ie = L.$$typeof;
        switch (ie) {
          case e10:
            var te = L.type;
            switch (te) {
              case n:
              case r:
              case o:
              case u:
              case d:
                return te;
              default:
                var le = te && te.$$typeof;
                switch (le) {
                  case l:
                  case a:
                  case c:
                  case m:
                  case p:
                  case s:
                    return le;
                  default:
                    return ie;
                }
            }
          case t:
            return ie;
        }
      }
    }
    var R = a, E = s, O = e10, I = c, P = n, A = m, M = p, F = t, D = r, N = o, j = u, _ = d, z = false, $ = false;
    function k(L) {
      return z || (z = true, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.")), false;
    }
    function B(L) {
      return $ || ($ = true, console.warn("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.")), false;
    }
    function Q(L) {
      return w(L) === a;
    }
    function ee(L) {
      return w(L) === s;
    }
    function G(L) {
      return typeof L == "object" && L !== null && L.$$typeof === e10;
    }
    function H(L) {
      return w(L) === c;
    }
    function Y(L) {
      return w(L) === n;
    }
    function J(L) {
      return w(L) === m;
    }
    function U(L) {
      return w(L) === p;
    }
    function ne(L) {
      return w(L) === t;
    }
    function se(L) {
      return w(L) === r;
    }
    function oe(L) {
      return w(L) === o;
    }
    function W(L) {
      return w(L) === u;
    }
    function Z(L) {
      return w(L) === d;
    }
    Bt.ContextConsumer = R, Bt.ContextProvider = E, Bt.Element = O, Bt.ForwardRef = I, Bt.Fragment = P, Bt.Lazy = A, Bt.Memo = M, Bt.Portal = F, Bt.Profiler = D, Bt.StrictMode = N, Bt.Suspense = j, Bt.SuspenseList = _, Bt.isAsyncMode = k, Bt.isConcurrentMode = B, Bt.isContextConsumer = Q, Bt.isContextProvider = ee, Bt.isElement = G, Bt.isForwardRef = H, Bt.isFragment = Y, Bt.isLazy = J, Bt.isMemo = U, Bt.isPortal = ne, Bt.isProfiler = se, Bt.isStrictMode = oe, Bt.isSuspense = W, Bt.isSuspenseList = Z, Bt.isValidElementType = T, Bt.typeOf = w;
  }()), Bt;
}
false ? Sf.exports = gj() : Sf.exports = hj();
var Zu = Sf.exports;
function qc(e10, t) {
  return qc = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(n, o) {
    return n.__proto__ = o, n;
  }, qc(e10, t);
}
function Um(e10, t) {
  e10.prototype = Object.create(t.prototype), e10.prototype.constructor = e10, qc(e10, t);
}
function bj(e10, t) {
  return e10.classList ? !!t && e10.classList.contains(t) : (" " + (e10.className.baseVal || e10.className) + " ").indexOf(" " + t + " ") !== -1;
}
function vj(e10, t) {
  e10.classList ? e10.classList.add(t) : bj(e10, t) || (typeof e10.className == "string" ? e10.className = e10.className + " " + t : e10.setAttribute("class", (e10.className && e10.className.baseVal || "") + " " + t));
}
function zb(e10, t) {
  return e10.replace(new RegExp("(^|\\s)" + t + "(?:\\s|$)", "g"), "$1").replace(/\s+/g, " ").replace(/^\s*|\s*$/g, "");
}
function yj(e10, t) {
  e10.classList ? e10.classList.remove(t) : typeof e10.className == "string" ? e10.className = zb(e10.className, t) : e10.setAttribute("class", zb(e10.className && e10.className.baseVal || "", t));
}
var Wb = {
  disabled: false
};
var xj = true ? i.oneOfType([i.number, i.shape({
  enter: i.number,
  exit: i.number,
  appear: i.number
}).isRequired]) : null;
var Cj = true ? i.oneOfType([i.string, i.shape({
  enter: i.string,
  exit: i.string,
  active: i.string
}), i.shape({
  enter: i.string,
  enterDone: i.string,
  enterActive: i.string,
  exit: i.string,
  exitDone: i.string,
  exitActive: i.string
})]) : null;
var Jc = import_react.default.createContext(null);
var fC = function(t) {
  return t.scrollTop;
};
var wa = "unmounted";
var fi = "exited";
var mi = "entering";
var cs = "entered";
var wf = "exiting";
var fo = function(e10) {
  Um(t, e10);
  function t(o, r) {
    var s;
    s = e10.call(this, o, r) || this;
    var a = r, l = a && !a.isMounting ? o.enter : o.appear, c;
    return s.appearStatus = null, o.in ? l ? (c = fi, s.appearStatus = mi) : c = cs : o.unmountOnExit || o.mountOnEnter ? c = wa : c = fi, s.state = {
      status: c
    }, s.nextCallback = null, s;
  }
  t.getDerivedStateFromProps = function(r, s) {
    var a = r.in;
    return a && s.status === wa ? {
      status: fi
    } : null;
  };
  var n = t.prototype;
  return n.componentDidMount = function() {
    this.updateStatus(true, this.appearStatus);
  }, n.componentDidUpdate = function(r) {
    var s = null;
    if (r !== this.props) {
      var a = this.state.status;
      this.props.in ? a !== mi && a !== cs && (s = mi) : (a === mi || a === cs) && (s = wf);
    }
    this.updateStatus(false, s);
  }, n.componentWillUnmount = function() {
    this.cancelNextCallback();
  }, n.getTimeouts = function() {
    var r = this.props.timeout, s, a, l;
    return s = a = l = r, r != null && typeof r != "number" && (s = r.exit, a = r.enter, l = r.appear !== void 0 ? r.appear : a), {
      exit: s,
      enter: a,
      appear: l
    };
  }, n.updateStatus = function(r, s) {
    if (r === void 0 && (r = false), s !== null)
      if (this.cancelNextCallback(), s === mi) {
        if (this.props.unmountOnExit || this.props.mountOnEnter) {
          var a = this.props.nodeRef ? this.props.nodeRef.current : import_react_dom.default.findDOMNode(this);
          a && fC(a);
        }
        this.performEnter(r);
      } else
        this.performExit();
    else this.props.unmountOnExit && this.state.status === fi && this.setState({
      status: wa
    });
  }, n.performEnter = function(r) {
    var s = this, a = this.props.enter, l = this.context ? this.context.isMounting : r, c = this.props.nodeRef ? [l] : [import_react_dom.default.findDOMNode(this), l], u = c[0], d = c[1], p = this.getTimeouts(), m = l ? p.appear : p.enter;
    if (!r && !a || Wb.disabled) {
      this.safeSetState({
        status: cs
      }, function() {
        s.props.onEntered(u);
      });
      return;
    }
    this.props.onEnter(u, d), this.safeSetState({
      status: mi
    }, function() {
      s.props.onEntering(u, d), s.onTransitionEnd(m, function() {
        s.safeSetState({
          status: cs
        }, function() {
          s.props.onEntered(u, d);
        });
      });
    });
  }, n.performExit = function() {
    var r = this, s = this.props.exit, a = this.getTimeouts(), l = this.props.nodeRef ? void 0 : import_react_dom.default.findDOMNode(this);
    if (!s || Wb.disabled) {
      this.safeSetState({
        status: fi
      }, function() {
        r.props.onExited(l);
      });
      return;
    }
    this.props.onExit(l), this.safeSetState({
      status: wf
    }, function() {
      r.props.onExiting(l), r.onTransitionEnd(a.exit, function() {
        r.safeSetState({
          status: fi
        }, function() {
          r.props.onExited(l);
        });
      });
    });
  }, n.cancelNextCallback = function() {
    this.nextCallback !== null && (this.nextCallback.cancel(), this.nextCallback = null);
  }, n.safeSetState = function(r, s) {
    s = this.setNextCallback(s), this.setState(r, s);
  }, n.setNextCallback = function(r) {
    var s = this, a = true;
    return this.nextCallback = function(l) {
      a && (a = false, s.nextCallback = null, r(l));
    }, this.nextCallback.cancel = function() {
      a = false;
    }, this.nextCallback;
  }, n.onTransitionEnd = function(r, s) {
    this.setNextCallback(s);
    var a = this.props.nodeRef ? this.props.nodeRef.current : import_react_dom.default.findDOMNode(this), l = r == null && !this.props.addEndListener;
    if (!a || l) {
      setTimeout(this.nextCallback, 0);
      return;
    }
    if (this.props.addEndListener) {
      var c = this.props.nodeRef ? [this.nextCallback] : [a, this.nextCallback], u = c[0], d = c[1];
      this.props.addEndListener(u, d);
    }
    r != null && setTimeout(this.nextCallback, r);
  }, n.render = function() {
    var r = this.state.status;
    if (r === wa)
      return null;
    var s = this.props, a = s.children;
    s.in, s.mountOnEnter, s.unmountOnExit, s.appear, s.enter, s.exit, s.timeout, s.addEndListener, s.onEnter, s.onEntering, s.onEntered, s.onExit, s.onExiting, s.onExited, s.nodeRef;
    var l = Xe(s, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
    return (
      // allows for nested Transitions
      import_react.default.createElement(Jc.Provider, {
        value: null
      }, typeof a == "function" ? a(r, l) : import_react.default.cloneElement(import_react.default.Children.only(a), l))
    );
  }, t;
}(import_react.default.Component);
fo.contextType = Jc;
fo.propTypes = true ? {
  /**
   * A React reference to DOM element that need to transition:
   * https://stackoverflow.com/a/51127130/4671932
   *
   *   - When `nodeRef` prop is used, `node` is not passed to callback functions
   *      (e.g. `onEnter`) because user already has direct access to the node.
   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
   *     `nodeRef` need to be provided to `Transition` with changed `key` prop
   *     (see
   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
   */
  nodeRef: i.shape({
    current: typeof Element > "u" ? i.any : function(e10, t, n, o, r, s) {
      var a = e10[t];
      return i.instanceOf(a && "ownerDocument" in a ? a.ownerDocument.defaultView.Element : Element)(e10, t, n, o, r, s);
    }
  }),
  /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: i.oneOfType([i.func.isRequired, i.element.isRequired]).isRequired,
  /**
   * Show the component; triggers the enter or exit states
   */
  in: i.bool,
  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: i.bool,
  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: i.bool,
  /**
   * By default the child component does not perform the enter transition when
   * it first mounts, regardless of the value of `in`. If you want this
   * behavior, set both `appear` and `in` to `true`.
   *
   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
   * > only adds an additional enter transition. However, in the
   * > `<CSSTransition>` component that first enter transition does result in
   * > additional `.appear-*` classes, that way you can choose to style it
   * > differently.
   */
  appear: i.bool,
  /**
   * Enable or disable enter transitions.
   */
  enter: i.bool,
  /**
   * Enable or disable exit transitions.
   */
  exit: i.bool,
  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */
  timeout: function(t) {
    var n = xj;
    t.addEndListener || (n = n.isRequired);
    for (var o = arguments.length, r = new Array(o > 1 ? o - 1 : 0), s = 1; s < o; s++)
      r[s - 1] = arguments[s];
    return n.apply(void 0, [t].concat(r));
  },
  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. Timeouts are still used as a fallback if provided.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: i.func,
  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: i.func,
  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: i.func,
  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: i.func,
  /**
   * Callback fired before the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: i.func,
  /**
   * Callback fired after the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: i.func,
  /**
   * Callback fired after the "exited" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: i.func
} : {};
function ns() {
}
fo.defaultProps = {
  in: false,
  mountOnEnter: false,
  unmountOnExit: false,
  appear: false,
  enter: true,
  exit: true,
  onEnter: ns,
  onEntering: ns,
  onEntered: ns,
  onExit: ns,
  onExiting: ns,
  onExited: ns
};
fo.UNMOUNTED = wa;
fo.EXITED = fi;
fo.ENTERING = mi;
fo.ENTERED = cs;
fo.EXITING = wf;
var Sj = function(t, n) {
  return t && n && n.split(" ").forEach(function(o) {
    return vj(t, o);
  });
};
var hp = function(t, n) {
  return t && n && n.split(" ").forEach(function(o) {
    return yj(t, o);
  });
};
var Xm = function(e10) {
  Um(t, e10);
  function t() {
    for (var o, r = arguments.length, s = new Array(r), a = 0; a < r; a++)
      s[a] = arguments[a];
    return o = e10.call.apply(e10, [this].concat(s)) || this, o.appliedClasses = {
      appear: {},
      enter: {},
      exit: {}
    }, o.onEnter = function(l, c) {
      var u = o.resolveArguments(l, c), d = u[0], p = u[1];
      o.removeClasses(d, "exit"), o.addClass(d, p ? "appear" : "enter", "base"), o.props.onEnter && o.props.onEnter(l, c);
    }, o.onEntering = function(l, c) {
      var u = o.resolveArguments(l, c), d = u[0], p = u[1], m = p ? "appear" : "enter";
      o.addClass(d, m, "active"), o.props.onEntering && o.props.onEntering(l, c);
    }, o.onEntered = function(l, c) {
      var u = o.resolveArguments(l, c), d = u[0], p = u[1], m = p ? "appear" : "enter";
      o.removeClasses(d, m), o.addClass(d, m, "done"), o.props.onEntered && o.props.onEntered(l, c);
    }, o.onExit = function(l) {
      var c = o.resolveArguments(l), u = c[0];
      o.removeClasses(u, "appear"), o.removeClasses(u, "enter"), o.addClass(u, "exit", "base"), o.props.onExit && o.props.onExit(l);
    }, o.onExiting = function(l) {
      var c = o.resolveArguments(l), u = c[0];
      o.addClass(u, "exit", "active"), o.props.onExiting && o.props.onExiting(l);
    }, o.onExited = function(l) {
      var c = o.resolveArguments(l), u = c[0];
      o.removeClasses(u, "exit"), o.addClass(u, "exit", "done"), o.props.onExited && o.props.onExited(l);
    }, o.resolveArguments = function(l, c) {
      return o.props.nodeRef ? [o.props.nodeRef.current, l] : [l, c];
    }, o.getClassNames = function(l) {
      var c = o.props.classNames, u = typeof c == "string", d = u && c ? c + "-" : "", p = u ? "" + d + l : c[l], m = u ? p + "-active" : c[l + "Active"], g = u ? p + "-done" : c[l + "Done"];
      return {
        baseClassName: p,
        activeClassName: m,
        doneClassName: g
      };
    }, o;
  }
  var n = t.prototype;
  return n.addClass = function(r, s, a) {
    var l = this.getClassNames(s)[a + "ClassName"], c = this.getClassNames("enter"), u = c.doneClassName;
    s === "appear" && a === "done" && u && (l += " " + u), a === "active" && r && fC(r), l && (this.appliedClasses[s][a] = l, Sj(r, l));
  }, n.removeClasses = function(r, s) {
    var a = this.appliedClasses[s], l = a.base, c = a.active, u = a.done;
    this.appliedClasses[s] = {}, l && hp(r, l), c && hp(r, c), u && hp(r, u);
  }, n.render = function() {
    var r = this.props;
    r.classNames;
    var s = Xe(r, ["classNames"]);
    return import_react.default.createElement(fo, V({}, s, {
      onEnter: this.onEnter,
      onEntered: this.onEntered,
      onEntering: this.onEntering,
      onExit: this.onExit,
      onExiting: this.onExiting,
      onExited: this.onExited
    }));
  }, t;
}(import_react.default.Component);
Xm.defaultProps = {
  classNames: ""
};
Xm.propTypes = true ? V({}, fo.propTypes, {
  /**
   * The animation classNames applied to the component as it appears, enters,
   * exits or has finished the transition. A single name can be provided, which
   * will be suffixed for each stage, e.g. `classNames="fade"` applies:
   *
   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`
   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`
   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`
   *
   * A few details to note about how these classes are applied:
   *
   * 1. They are _joined_ with the ones that are already defined on the child
   *    component, so if you want to add some base styles, you can use
   *    `className` without worrying that it will be overridden.
   *
   * 2. If the transition component mounts with `in={false}`, no classes are
   *    applied yet. You might be expecting `*-exit-done`, but if you think
   *    about it, a component cannot finish exiting if it hasn't entered yet.
   *
   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This
   *    allows you to define different behavior for when appearing is done and
   *    when regular entering is done, using selectors like
   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply
   *    an epic entrance animation when element first appears in the DOM using
   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can
   *    simply use `fade-enter-done` for defining both cases.
   *
   * Each individual classNames can also be specified independently like:
   *
   * ```js
   * classNames={{
   *  appear: 'my-appear',
   *  appearActive: 'my-active-appear',
   *  appearDone: 'my-done-appear',
   *  enter: 'my-enter',
   *  enterActive: 'my-active-enter',
   *  enterDone: 'my-done-enter',
   *  exit: 'my-exit',
   *  exitActive: 'my-active-exit',
   *  exitDone: 'my-done-exit',
   * }}
   * ```
   *
   * If you want to set these classes using CSS Modules:
   *
   * ```js
   * import styles from './styles.css';
   * ```
   *
   * you might want to use camelCase in your CSS file, that way could simply
   * spread them instead of listing them one by one:
   *
   * ```js
   * classNames={{ ...styles }}
   * ```
   *
   * @type {string | {
   *  appear?: string,
   *  appearActive?: string,
   *  appearDone?: string,
   *  enter?: string,
   *  enterActive?: string,
   *  enterDone?: string,
   *  exit?: string,
   *  exitActive?: string,
   *  exitDone?: string,
   * }}
   */
  classNames: Cj,
  /**
   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is
   * applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEnter: i.func,
  /**
   * A `<Transition>` callback fired immediately after the 'enter-active' or
   * 'appear-active' class is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: i.func,
  /**
   * A `<Transition>` callback fired immediately after the 'enter' or
   * 'appear' classes are **removed** and the `done` class is added to the DOM node.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntered: i.func,
  /**
   * A `<Transition>` callback fired immediately after the 'exit' class is
   * applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExit: i.func,
  /**
   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExiting: i.func,
  /**
   * A `<Transition>` callback fired immediately after the 'exit' classes
   * are **removed** and the `exit-done` class is added to the DOM node.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExited: i.func
}) : {};
function mC(e10) {
  if (e10 === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e10;
}
function Ym(e10, t) {
  var n = function(s) {
    return t && (0, import_react.isValidElement)(s) ? t(s) : s;
  }, o = /* @__PURE__ */ Object.create(null);
  return e10 && import_react.Children.map(e10, function(r) {
    return r;
  }).forEach(function(r) {
    o[r.key] = n(r);
  }), o;
}
function wj(e10, t) {
  e10 = e10 || {}, t = t || {};
  function n(d) {
    return d in t ? t[d] : e10[d];
  }
  var o = /* @__PURE__ */ Object.create(null), r = [];
  for (var s in e10)
    s in t ? r.length && (o[s] = r, r = []) : r.push(s);
  var a, l = {};
  for (var c in t) {
    if (o[c])
      for (a = 0; a < o[c].length; a++) {
        var u = o[c][a];
        l[o[c][a]] = n(u);
      }
    l[c] = n(c);
  }
  for (a = 0; a < r.length; a++)
    l[r[a]] = n(r[a]);
  return l;
}
function xi(e10, t, n) {
  return n[t] != null ? n[t] : e10.props[t];
}
function Tj(e10, t) {
  return Ym(e10.children, function(n) {
    return (0, import_react.cloneElement)(n, {
      onExited: t.bind(null, n),
      in: true,
      appear: xi(n, "appear", e10),
      enter: xi(n, "enter", e10),
      exit: xi(n, "exit", e10)
    });
  });
}
function Ij(e10, t, n) {
  var o = Ym(e10.children), r = wj(t, o);
  return Object.keys(r).forEach(function(s) {
    var a = r[s];
    if ((0, import_react.isValidElement)(a)) {
      var l = s in t, c = s in o, u = t[s], d = (0, import_react.isValidElement)(u) && !u.props.in;
      c && (!l || d) ? r[s] = (0, import_react.cloneElement)(a, {
        onExited: n.bind(null, a),
        in: true,
        exit: xi(a, "exit", e10),
        enter: xi(a, "enter", e10)
      }) : !c && l && !d ? r[s] = (0, import_react.cloneElement)(a, {
        in: false
      }) : c && l && (0, import_react.isValidElement)(u) && (r[s] = (0, import_react.cloneElement)(a, {
        onExited: n.bind(null, a),
        in: u.props.in,
        exit: xi(a, "exit", e10),
        enter: xi(a, "enter", e10)
      }));
    }
  }), r;
}
var Rj = Object.values || function(e10) {
  return Object.keys(e10).map(function(t) {
    return e10[t];
  });
};
var Ej = {
  component: "div",
  childFactory: function(t) {
    return t;
  }
};
var El = function(e10) {
  Um(t, e10);
  function t(o, r) {
    var s;
    s = e10.call(this, o, r) || this;
    var a = s.handleExited.bind(mC(s));
    return s.state = {
      contextValue: {
        isMounting: true
      },
      handleExited: a,
      firstRender: true
    }, s;
  }
  var n = t.prototype;
  return n.componentDidMount = function() {
    this.mounted = true, this.setState({
      contextValue: {
        isMounting: false
      }
    });
  }, n.componentWillUnmount = function() {
    this.mounted = false;
  }, t.getDerivedStateFromProps = function(r, s) {
    var a = s.children, l = s.handleExited, c = s.firstRender;
    return {
      children: c ? Tj(r, l) : Ij(r, a, l),
      firstRender: false
    };
  }, n.handleExited = function(r, s) {
    var a = Ym(this.props.children);
    r.key in a || (r.props.onExited && r.props.onExited(s), this.mounted && this.setState(function(l) {
      var c = V({}, l.children);
      return delete c[r.key], {
        children: c
      };
    }));
  }, n.render = function() {
    var r = this.props, s = r.component, a = r.childFactory, l = Xe(r, ["component", "childFactory"]), c = this.state.contextValue, u = Rj(this.state.children).map(a);
    return delete l.appear, delete l.enter, delete l.exit, s === null ? import_react.default.createElement(Jc.Provider, {
      value: c
    }, u) : import_react.default.createElement(Jc.Provider, {
      value: c
    }, import_react.default.createElement(s, l, u));
  }, t;
}(import_react.default.Component);
El.propTypes = true ? {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */
  component: i.any,
  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   *
   * While this component is meant for multiple `Transition` or `CSSTransition`
   * children, sometimes you may want to have a single transition child with
   * content that you want to be transitioned out and in when you change it
   * (e.g. routes, images etc.) In that case you can change the `key` prop of
   * the transition child as you change its content, this will cause
   * `TransitionGroup` to transition the child out and back in.
   */
  children: i.node,
  /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: i.bool,
  /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: i.bool,
  /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  exit: i.bool,
  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: i.func
} : {};
El.defaultProps = Ej;
var gC = (e10) => e10.scrollTop;
function Os(e10, t) {
  const {
    timeout: n,
    easing: o,
    style: r = {}
  } = e10;
  return {
    duration: r.transitionDuration ?? (typeof n == "number" ? n : n[t.mode] || 0),
    easing: r.transitionTimingFunction ?? (typeof o == "object" ? o[t.mode] : o),
    delay: r.transitionDelay
  };
}
function Oj(e10) {
  return He("MuiCollapse", e10);
}
Be("MuiCollapse", ["root", "horizontal", "vertical", "entered", "hidden", "wrapper", "wrapperInner"]);
var Pj = (e10) => {
  const {
    orientation: t,
    classes: n
  } = e10, o = {
    root: ["root", `${t}`],
    entered: ["entered"],
    hidden: ["hidden"],
    wrapper: ["wrapper", `${t}`],
    wrapperInner: ["wrapperInner", `${t}`]
  };
  return Ue(o, Oj, n);
};
var Aj = K("div", {
  name: "MuiCollapse",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.root, t[n.orientation], n.state === "entered" && t.entered, n.state === "exited" && !n.in && n.collapsedSize === "0px" && t.hidden];
  }
})(Ve(({
  theme: e10
}) => ({
  height: 0,
  overflow: "hidden",
  transition: e10.transitions.create("height"),
  variants: [{
    props: {
      orientation: "horizontal"
    },
    style: {
      height: "auto",
      width: 0,
      transition: e10.transitions.create("width")
    }
  }, {
    props: {
      state: "entered"
    },
    style: {
      height: "auto",
      overflow: "visible"
    }
  }, {
    props: {
      state: "entered",
      orientation: "horizontal"
    },
    style: {
      width: "auto"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.state === "exited" && !t.in && t.collapsedSize === "0px",
    style: {
      visibility: "hidden"
    }
  }]
})));
var jj = K("div", {
  name: "MuiCollapse",
  slot: "Wrapper",
  overridesResolver: (e10, t) => t.wrapper
})({
  // Hack to get children with a negative margin to not falsify the height computation.
  display: "flex",
  width: "100%",
  variants: [{
    props: {
      orientation: "horizontal"
    },
    style: {
      width: "auto",
      height: "100%"
    }
  }]
});
var Dj = K("div", {
  name: "MuiCollapse",
  slot: "WrapperInner",
  overridesResolver: (e10, t) => t.wrapperInner
})({
  width: "100%",
  variants: [{
    props: {
      orientation: "horizontal"
    },
    style: {
      width: "auto",
      height: "100%"
    }
  }]
});
var qr = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiCollapse"
  }), {
    addEndListener: r,
    children: s,
    className: a,
    collapsedSize: l = "0px",
    component: c,
    easing: u,
    in: d,
    onEnter: p,
    onEntered: m,
    onEntering: g,
    onExit: b,
    onExited: v,
    onExiting: h,
    orientation: y = "vertical",
    style: C,
    timeout: x = cC.standard,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: T = fo,
    ...w
  } = o, R = {
    ...o,
    orientation: y,
    collapsedSize: l
  }, E = Pj(R), O = Sn(), I = yi(), P = S.useRef(null), A = S.useRef(), M = typeof l == "number" ? `${l}px` : l, F = y === "horizontal", D = F ? "width" : "height", N = S.useRef(null), j = Jt(n, N), _ = (Y) => (J) => {
    if (Y) {
      const U = N.current;
      J === void 0 ? Y(U) : Y(U, J);
    }
  }, z = () => P.current ? P.current[F ? "clientWidth" : "clientHeight"] : 0, $ = _((Y, J) => {
    P.current && F && (P.current.style.position = "absolute"), Y.style[D] = M, p && p(Y, J);
  }), k = _((Y, J) => {
    const U = z();
    P.current && F && (P.current.style.position = "");
    const {
      duration: ne,
      easing: se
    } = Os({
      style: C,
      timeout: x,
      easing: u
    }, {
      mode: "enter"
    });
    if (x === "auto") {
      const oe = O.transitions.getAutoHeightDuration(U);
      Y.style.transitionDuration = `${oe}ms`, A.current = oe;
    } else
      Y.style.transitionDuration = typeof ne == "string" ? ne : `${ne}ms`;
    Y.style[D] = `${U}px`, Y.style.transitionTimingFunction = se, g && g(Y, J);
  }), B = _((Y, J) => {
    Y.style[D] = "auto", m && m(Y, J);
  }), Q = _((Y) => {
    Y.style[D] = `${z()}px`, b && b(Y);
  }), ee = _(v), G = _((Y) => {
    const J = z(), {
      duration: U,
      easing: ne
    } = Os({
      style: C,
      timeout: x,
      easing: u
    }, {
      mode: "exit"
    });
    if (x === "auto") {
      const se = O.transitions.getAutoHeightDuration(J);
      Y.style.transitionDuration = `${se}ms`, A.current = se;
    } else
      Y.style.transitionDuration = typeof U == "string" ? U : `${U}ms`;
    Y.style[D] = M, Y.style.transitionTimingFunction = ne, h && h(Y);
  }), H = (Y) => {
    x === "auto" && I.start(A.current || 0, Y), r && r(N.current, Y);
  };
  return f.jsx(T, {
    in: d,
    onEnter: $,
    onEntered: B,
    onEntering: k,
    onExit: Q,
    onExited: ee,
    onExiting: G,
    addEndListener: H,
    nodeRef: N,
    timeout: x === "auto" ? null : x,
    ...w,
    children: (Y, J) => f.jsx(Aj, {
      as: c,
      className: be(E.root, a, {
        entered: E.entered,
        exited: !d && M === "0px" && E.hidden
      }[Y]),
      style: {
        [F ? "minWidth" : "minHeight"]: M,
        ...C
      },
      ref: j,
      ...J,
      // `ownerState` is set after `childProps` to override any existing `ownerState` property in `childProps`
      // that might have been forwarded from the Transition component.
      ownerState: {
        ...R,
        state: Y
      },
      children: f.jsx(jj, {
        ownerState: {
          ...R,
          state: Y
        },
        className: E.wrapper,
        ref: P,
        children: f.jsx(Dj, {
          ownerState: {
            ...R,
            state: Y
          },
          className: E.wrapperInner,
          children: s
        })
      })
    })
  });
});
qr.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: i.func,
  /**
   * The content node to be collapsed.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The width (horizontal) or height (vertical) of the container when collapsed.
   * @default '0px'
   */
  collapsedSize: i.oneOfType([i.number, i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: Rl,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: i.oneOfType([i.shape({
    enter: i.string,
    exit: i.string
  }), i.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: i.bool,
  /**
   * @ignore
   */
  onEnter: i.func,
  /**
   * @ignore
   */
  onEntered: i.func,
  /**
   * @ignore
   */
  onEntering: i.func,
  /**
   * @ignore
   */
  onExit: i.func,
  /**
   * @ignore
   */
  onExited: i.func,
  /**
   * @ignore
   */
  onExiting: i.func,
  /**
   * The transition orientation.
   * @default 'vertical'
   */
  orientation: i.oneOf(["horizontal", "vertical"]),
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default duration.standard
   */
  timeout: i.oneOfType([i.oneOf(["auto"]), i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })])
};
qr && (qr.muiSupportAuto = true);
function Mj(e10) {
  return He("MuiPaper", e10);
}
Be("MuiPaper", ["root", "rounded", "outlined", "elevation", "elevation0", "elevation1", "elevation2", "elevation3", "elevation4", "elevation5", "elevation6", "elevation7", "elevation8", "elevation9", "elevation10", "elevation11", "elevation12", "elevation13", "elevation14", "elevation15", "elevation16", "elevation17", "elevation18", "elevation19", "elevation20", "elevation21", "elevation22", "elevation23", "elevation24"]);
var kj = (e10) => {
  const {
    square: t,
    elevation: n,
    variant: o,
    classes: r
  } = e10, s = {
    root: ["root", o, !t && "rounded", o === "elevation" && `elevation${n}`]
  };
  return Ue(s, Mj, r);
};
var Fj = K("div", {
  name: "MuiPaper",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.root, t[n.variant], !n.square && t.rounded, n.variant === "elevation" && t[`elevation${n.elevation}`]];
  }
})(Ve(({
  theme: e10
}) => ({
  backgroundColor: (e10.vars || e10).palette.background.paper,
  color: (e10.vars || e10).palette.text.primary,
  transition: e10.transitions.create("box-shadow"),
  variants: [{
    props: ({
      ownerState: t
    }) => !t.square,
    style: {
      borderRadius: e10.shape.borderRadius
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      border: `1px solid ${(e10.vars || e10).palette.divider}`
    }
  }, {
    props: {
      variant: "elevation"
    },
    style: {
      boxShadow: "var(--Paper-shadow)",
      backgroundImage: "var(--Paper-overlay)"
    }
  }]
})));
var vn = S.forwardRef(function(t, n) {
  var g;
  const o = Ye({
    props: t,
    name: "MuiPaper"
  }), r = Sn(), {
    className: s,
    component: a = "div",
    elevation: l = 1,
    square: c = false,
    variant: u = "elevation",
    ...d
  } = o, p = {
    ...o,
    component: a,
    elevation: l,
    square: c,
    variant: u
  }, m = kj(p);
  return r.shadows[l] === void 0 && console.error([`MUI: The elevation provided <Paper elevation={${l}}> is not available in the theme.`, `Please make sure that \`theme.shadows[${l}]\` is defined.`].join(`
`)), f.jsx(Fj, {
    as: a,
    ownerState: p,
    className: be(m.root, s),
    ref: n,
    ...d,
    style: {
      ...u === "elevation" && {
        "--Paper-shadow": (r.vars || r).shadows[l],
        ...r.vars && {
          "--Paper-overlay": (g = r.vars.overlays) == null ? void 0 : g[l]
        },
        ...!r.vars && r.palette.mode === "dark" && {
          "--Paper-overlay": `linear-gradient(${We("#fff", Cf(l))}, ${We("#fff", Cf(l))})`
        }
      },
      ...d.style
    }
  });
});
vn.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * Shadow depth, corresponds to `dp` in the spec.
   * It accepts values between 0 and 24 inclusive.
   * @default 1
   */
  elevation: co(Br, (e10) => {
    const {
      elevation: t,
      variant: n
    } = e10;
    return t > 0 && n === "outlined" ? new Error(`MUI: Combining \`elevation={${t}}\` with \`variant="${n}"\` has no effect. Either use \`elevation={0}\` or use a different \`variant\`.`) : null;
  }),
  /**
   * If `true`, rounded corners are disabled.
   * @default false
   */
  square: i.bool,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The variant to use.
   * @default 'elevation'
   */
  variant: i.oneOfType([i.oneOf(["elevation", "outlined"]), i.string])
};
function sn(e10, t) {
  const {
    className: n,
    elementType: o,
    ownerState: r,
    externalForwardedProps: s,
    getSlotOwnerState: a,
    internalForwardedProps: l,
    ...c
  } = t, {
    component: u,
    slots: d = {
      [e10]: void 0
    },
    slotProps: p = {
      [e10]: void 0
    },
    ...m
  } = s, g = d[e10] || o, b = nC(p[e10], r), {
    props: {
      component: v,
      ...h
    },
    internalRef: y
  } = tC({
    className: n,
    ...c,
    externalForwardedProps: e10 === "root" ? m : void 0,
    externalSlotProps: b
  }), C = Jt(y, b == null ? void 0 : b.ref, t.ref), x = a ? a(h) : {}, T = {
    ...r,
    ...x
  }, w = e10 === "root" ? v || u : v, R = ps(g, {
    ...e10 === "root" && !u && !d[e10] && l,
    ...e10 !== "root" && !d[e10] && l,
    ...h,
    ...w && {
      as: w
    },
    ref: C
  }, T);
  return Object.keys(x).forEach((E) => {
    delete R[E];
  }), [g, R];
}
var Kc = class _Kc {
  constructor() {
    oa(this, "mountEffect", () => {
      this.shouldMount && !this.didMount && this.ref.current !== null && (this.didMount = true, this.mounted.resolve());
    });
    this.ref = {
      current: null
    }, this.mounted = null, this.didMount = false, this.shouldMount = false, this.setShouldMount = null;
  }
  /** React ref to the ripple instance */
  /** If the ripple component should be mounted */
  /** Promise that resolves when the ripple component is mounted */
  /** If the ripple component has been mounted */
  /** React state hook setter */
  static create() {
    return new _Kc();
  }
  static use() {
    const t = Jx(_Kc.create).current, [n, o] = S.useState(false);
    return t.shouldMount = n, t.setShouldMount = o, S.useEffect(t.mountEffect, [n]), t;
  }
  mount() {
    return this.mounted || (this.mounted = $j(), this.shouldMount = true, this.setShouldMount(this.shouldMount)), this.mounted;
  }
  /* Ripple API */
  start(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.start(...t);
    });
  }
  stop(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.stop(...t);
    });
  }
  pulsate(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.pulsate(...t);
    });
  }
};
function Nj() {
  return Kc.use();
}
function $j() {
  let e10, t;
  const n = new Promise((o, r) => {
    e10 = o, t = r;
  });
  return n.resolve = e10, n.reject = t, n;
}
function hC(e10) {
  const {
    className: t,
    classes: n,
    pulsate: o = false,
    rippleX: r,
    rippleY: s,
    rippleSize: a,
    in: l,
    onExited: c,
    timeout: u
  } = e10, [d, p] = S.useState(false), m = be(t, n.ripple, n.rippleVisible, o && n.ripplePulsate), g = {
    width: a,
    height: a,
    top: -(a / 2) + s,
    left: -(a / 2) + r
  }, b = be(n.child, d && n.childLeaving, o && n.childPulsate);
  return !l && !d && p(true), S.useEffect(() => {
    if (!l && c != null) {
      const v = setTimeout(c, u);
      return () => {
        clearTimeout(v);
      };
    }
  }, [c, l, u]), f.jsx("span", {
    className: m,
    style: g,
    children: f.jsx("span", {
      className: b
    })
  });
}
hC.propTypes = {
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object.isRequired,
  className: i.string,
  /**
   * @ignore - injected from TransitionGroup
   */
  in: i.bool,
  /**
   * @ignore - injected from TransitionGroup
   */
  onExited: i.func,
  /**
   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.
   */
  pulsate: i.bool,
  /**
   * Diameter of the ripple.
   */
  rippleSize: i.number,
  /**
   * Horizontal position of the ripple center.
   */
  rippleX: i.number,
  /**
   * Vertical position of the ripple center.
   */
  rippleY: i.number,
  /**
   * exit delay
   */
  timeout: i.number.isRequired
};
var yo = Be("MuiTouchRipple", ["root", "ripple", "rippleVisible", "ripplePulsate", "child", "childLeaving", "childPulsate"]);
var Tf = 550;
var Vj = 80;
var _j = zo`
  0% {
    transform: scale(0);
    opacity: 0.1;
  }

  100% {
    transform: scale(1);
    opacity: 0.3;
  }
`;
var Lj = zo`
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
`;
var Bj = zo`
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.92);
  }

  100% {
    transform: scale(1);
  }
`;
var zj = K("span", {
  name: "MuiTouchRipple",
  slot: "Root"
})({
  overflow: "hidden",
  pointerEvents: "none",
  position: "absolute",
  zIndex: 0,
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  borderRadius: "inherit"
});
var Wj = K(hC, {
  name: "MuiTouchRipple",
  slot: "Ripple"
})`
  opacity: 0;
  position: absolute;

  &.${yo.rippleVisible} {
    opacity: 0.3;
    transform: scale(1);
    animation-name: ${_j};
    animation-duration: ${Tf}ms;
    animation-timing-function: ${({
  theme: e10
}) => e10.transitions.easing.easeInOut};
  }

  &.${yo.ripplePulsate} {
    animation-duration: ${({
  theme: e10
}) => e10.transitions.duration.shorter}ms;
  }

  & .${yo.child} {
    opacity: 1;
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: currentColor;
  }

  & .${yo.childLeaving} {
    opacity: 0;
    animation-name: ${Lj};
    animation-duration: ${Tf}ms;
    animation-timing-function: ${({
  theme: e10
}) => e10.transitions.easing.easeInOut};
  }

  & .${yo.childPulsate} {
    position: absolute;
    /* @noflip */
    left: 0px;
    top: 0;
    animation-name: ${Bj};
    animation-duration: 2500ms;
    animation-timing-function: ${({
  theme: e10
}) => e10.transitions.easing.easeInOut};
    animation-iteration-count: infinite;
    animation-delay: 200ms;
  }
`;
var bC = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiTouchRipple"
  }), {
    center: r = false,
    classes: s = {},
    className: a,
    ...l
  } = o, [c, u] = S.useState([]), d = S.useRef(0), p = S.useRef(null);
  S.useEffect(() => {
    p.current && (p.current(), p.current = null);
  }, [c]);
  const m = S.useRef(false), g = yi(), b = S.useRef(null), v = S.useRef(null), h = S.useCallback((T) => {
    const {
      pulsate: w,
      rippleX: R,
      rippleY: E,
      rippleSize: O,
      cb: I
    } = T;
    u((P) => [...P, f.jsx(Wj, {
      classes: {
        ripple: be(s.ripple, yo.ripple),
        rippleVisible: be(s.rippleVisible, yo.rippleVisible),
        ripplePulsate: be(s.ripplePulsate, yo.ripplePulsate),
        child: be(s.child, yo.child),
        childLeaving: be(s.childLeaving, yo.childLeaving),
        childPulsate: be(s.childPulsate, yo.childPulsate)
      },
      timeout: Tf,
      pulsate: w,
      rippleX: R,
      rippleY: E,
      rippleSize: O
    }, d.current)]), d.current += 1, p.current = I;
  }, [s]), y = S.useCallback((T = {}, w = {}, R = () => {
  }) => {
    const {
      pulsate: E = false,
      center: O = r || w.pulsate,
      fakeElement: I = false
      // For test purposes
    } = w;
    if ((T == null ? void 0 : T.type) === "mousedown" && m.current) {
      m.current = false;
      return;
    }
    (T == null ? void 0 : T.type) === "touchstart" && (m.current = true);
    const P = I ? null : v.current, A = P ? P.getBoundingClientRect() : {
      width: 0,
      height: 0,
      left: 0,
      top: 0
    };
    let M, F, D;
    if (O || T === void 0 || T.clientX === 0 && T.clientY === 0 || !T.clientX && !T.touches)
      M = Math.round(A.width / 2), F = Math.round(A.height / 2);
    else {
      const {
        clientX: N,
        clientY: j
      } = T.touches && T.touches.length > 0 ? T.touches[0] : T;
      M = Math.round(N - A.left), F = Math.round(j - A.top);
    }
    if (O)
      D = Math.sqrt((2 * A.width ** 2 + A.height ** 2) / 3), D % 2 === 0 && (D += 1);
    else {
      const N = Math.max(Math.abs((P ? P.clientWidth : 0) - M), M) * 2 + 2, j = Math.max(Math.abs((P ? P.clientHeight : 0) - F), F) * 2 + 2;
      D = Math.sqrt(N ** 2 + j ** 2);
    }
    T != null && T.touches ? b.current === null && (b.current = () => {
      h({
        pulsate: E,
        rippleX: M,
        rippleY: F,
        rippleSize: D,
        cb: R
      });
    }, g.start(Vj, () => {
      b.current && (b.current(), b.current = null);
    })) : h({
      pulsate: E,
      rippleX: M,
      rippleY: F,
      rippleSize: D,
      cb: R
    });
  }, [r, h, g]), C = S.useCallback(() => {
    y({}, {
      pulsate: true
    });
  }, [y]), x = S.useCallback((T, w) => {
    if (g.clear(), (T == null ? void 0 : T.type) === "touchend" && b.current) {
      b.current(), b.current = null, g.start(0, () => {
        x(T, w);
      });
      return;
    }
    b.current = null, u((R) => R.length > 0 ? R.slice(1) : R), p.current = w;
  }, [g]);
  return S.useImperativeHandle(n, () => ({
    pulsate: C,
    start: y,
    stop: x
  }), [C, y, x]), f.jsx(zj, {
    className: be(yo.root, s.root, a),
    ref: v,
    ...l,
    children: f.jsx(El, {
      component: null,
      exit: true,
      children: c
    })
  });
});
bC.propTypes = {
  /**
   * If `true`, the ripple starts at the center of the component
   * rather than at the point of interaction.
   */
  center: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string
};
function Hj(e10) {
  return He("MuiButtonBase", e10);
}
var Gj = Be("MuiButtonBase", ["root", "disabled", "focusVisible"]);
var Uj = (e10) => {
  const {
    disabled: t,
    focusVisible: n,
    focusVisibleClassName: o,
    classes: r
  } = e10, a = Ue({
    root: ["root", t && "disabled", n && "focusVisible"]
  }, Hj, r);
  return n && o && (a.root += ` ${o}`), a;
};
var Xj = K("button", {
  name: "MuiButtonBase",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})({
  display: "inline-flex",
  alignItems: "center",
  justifyContent: "center",
  position: "relative",
  boxSizing: "border-box",
  WebkitTapHighlightColor: "transparent",
  backgroundColor: "transparent",
  // Reset default value
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  border: 0,
  margin: 0,
  // Remove the margin in Safari
  borderRadius: 0,
  padding: 0,
  // Remove the padding in Firefox
  cursor: "pointer",
  userSelect: "none",
  verticalAlign: "middle",
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // Reset
  textDecoration: "none",
  // So we take precedent over the style of a native <a /> element.
  color: "inherit",
  "&::-moz-focus-inner": {
    borderStyle: "none"
    // Remove Firefox dotted outline.
  },
  [`&.${Gj.disabled}`]: {
    pointerEvents: "none",
    // Disable link interactions
    cursor: "default"
  },
  "@media print": {
    colorAdjust: "exact"
  }
});
var Ro = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiButtonBase"
  }), {
    action: r,
    centerRipple: s = false,
    children: a,
    className: l,
    component: c = "button",
    disabled: u = false,
    disableRipple: d = false,
    disableTouchRipple: p = false,
    focusRipple: m = false,
    focusVisibleClassName: g,
    LinkComponent: b = "a",
    onBlur: v,
    onClick: h,
    onContextMenu: y,
    onDragLeave: C,
    onFocus: x,
    onFocusVisible: T,
    onKeyDown: w,
    onKeyUp: R,
    onMouseDown: E,
    onMouseLeave: O,
    onMouseUp: I,
    onTouchEnd: P,
    onTouchMove: A,
    onTouchStart: M,
    tabIndex: F = 0,
    TouchRippleProps: D,
    touchRippleRef: N,
    type: j,
    ..._
  } = o, z = S.useRef(null), $ = Nj(), k = Jt($.ref, N), [B, Q] = S.useState(false);
  u && B && Q(false), S.useImperativeHandle(r, () => ({
    focusVisible: () => {
      Q(true), z.current.focus();
    }
  }), []);
  const ee = $.shouldMount && !d && !u;
  S.useEffect(() => {
    B && m && !d && $.pulsate();
  }, [d, m, B, $]);
  function G(X, ae, ce = p) {
    return xn((ge) => (ae && ae(ge), ce || $[X](ge), true));
  }
  const H = G("start", E), Y = G("stop", y), J = G("stop", C), U = G("stop", I), ne = G("stop", (X) => {
    B && X.preventDefault(), O && O(X);
  }), se = G("start", M), oe = G("stop", P), W = G("stop", A), Z = G("stop", (X) => {
    Es(X.target) || Q(false), v && v(X);
  }, false), L = xn((X) => {
    z.current || (z.current = X.currentTarget), Es(X.target) && (Q(true), T && T(X)), x && x(X);
  }), ie = () => {
    const X = z.current;
    return c && c !== "button" && !(X.tagName === "A" && X.href);
  }, te = xn((X) => {
    m && !X.repeat && B && X.key === " " && $.stop(X, () => {
      $.start(X);
    }), X.target === X.currentTarget && ie() && X.key === " " && X.preventDefault(), w && w(X), X.target === X.currentTarget && ie() && X.key === "Enter" && !u && (X.preventDefault(), h && h(X));
  }), le = xn((X) => {
    m && X.key === " " && B && !X.defaultPrevented && $.stop(X, () => {
      $.pulsate(X);
    }), R && R(X), h && X.target === X.currentTarget && ie() && X.key === " " && !X.defaultPrevented && h(X);
  });
  let ue = c;
  ue === "button" && (_.href || _.to) && (ue = b);
  const ve = {};
  ue === "button" ? (ve.type = j === void 0 ? "button" : j, ve.disabled = u) : (!_.href && !_.to && (ve.role = "button"), u && (ve["aria-disabled"] = u));
  const Te = Jt(n, z), Re = {
    ...o,
    centerRipple: s,
    component: c,
    disabled: u,
    disableRipple: d,
    disableTouchRipple: p,
    focusRipple: m,
    tabIndex: F,
    focusVisible: B
  }, re = Uj(Re);
  return f.jsxs(Xj, {
    as: ue,
    className: be(re.root, l),
    ownerState: Re,
    onBlur: Z,
    onClick: h,
    onContextMenu: Y,
    onFocus: L,
    onKeyDown: te,
    onKeyUp: le,
    onMouseDown: H,
    onMouseLeave: ne,
    onMouseUp: U,
    onDragLeave: J,
    onTouchEnd: oe,
    onTouchMove: W,
    onTouchStart: se,
    ref: Te,
    tabIndex: u ? -1 : F,
    type: j,
    ...ve,
    ..._,
    children: [a, ee ? f.jsx(bC, {
      ref: k,
      center: s,
      ...D
    }) : null]
  });
});
Ro.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports `focusVisible()` action.
   */
  action: On,
  /**
   * If `true`, the ripples are centered.
   * They won't start at the cursor interaction position.
   * @default false
   */
  centerRipple: i.bool,
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: Rl,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: i.bool,
  /**
   * If `true`, the touch ripple effect is disabled.
   * @default false
   */
  disableTouchRipple: i.bool,
  /**
   * If `true`, the base button will have a keyboard focus ripple.
   * @default false
   */
  focusRipple: i.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: i.string,
  /**
   * @ignore
   */
  href: i.any,
  /**
   * The component used to render a link when the `href` prop is provided.
   * @default 'a'
   */
  LinkComponent: i.elementType,
  /**
   * @ignore
   */
  onBlur: i.func,
  /**
   * @ignore
   */
  onClick: i.func,
  /**
   * @ignore
   */
  onContextMenu: i.func,
  /**
   * @ignore
   */
  onDragLeave: i.func,
  /**
   * @ignore
   */
  onFocus: i.func,
  /**
   * Callback fired when the component is focused with a keyboard.
   * We trigger a `onFocus` callback too.
   */
  onFocusVisible: i.func,
  /**
   * @ignore
   */
  onKeyDown: i.func,
  /**
   * @ignore
   */
  onKeyUp: i.func,
  /**
   * @ignore
   */
  onMouseDown: i.func,
  /**
   * @ignore
   */
  onMouseLeave: i.func,
  /**
   * @ignore
   */
  onMouseUp: i.func,
  /**
   * @ignore
   */
  onTouchEnd: i.func,
  /**
   * @ignore
   */
  onTouchMove: i.func,
  /**
   * @ignore
   */
  onTouchStart: i.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * @default 0
   */
  tabIndex: i.number,
  /**
   * Props applied to the `TouchRipple` element.
   */
  TouchRippleProps: i.object,
  /**
   * A ref that points to the `TouchRipple` element.
   */
  touchRippleRef: i.oneOfType([i.func, i.shape({
    current: i.shape({
      pulsate: i.func.isRequired,
      start: i.func.isRequired,
      stop: i.func.isRequired
    })
  })]),
  /**
   * @ignore
   */
  type: i.oneOfType([i.oneOf(["button", "reset", "submit"]), i.string])
};
function Yj(e10) {
  return typeof e10.main == "string";
}
function Zj(e10, t = []) {
  if (!Yj(e10))
    return false;
  for (const n of t)
    if (!e10.hasOwnProperty(n) || typeof e10[n] != "string")
      return false;
  return true;
}
function Rt(e10 = []) {
  return ([, t]) => t && Zj(t, e10);
}
function qj(e10) {
  return He("MuiAlert", e10);
}
var Hb = Be("MuiAlert", ["root", "action", "icon", "message", "filled", "colorSuccess", "colorInfo", "colorWarning", "colorError", "filledSuccess", "filledInfo", "filledWarning", "filledError", "outlined", "outlinedSuccess", "outlinedInfo", "outlinedWarning", "outlinedError", "standard", "standardSuccess", "standardInfo", "standardWarning", "standardError"]);
function Jj(e10) {
  return He("MuiIconButton", e10);
}
var Kj = Be("MuiIconButton", ["root", "disabled", "colorInherit", "colorPrimary", "colorSecondary", "colorError", "colorInfo", "colorSuccess", "colorWarning", "edgeStart", "edgeEnd", "sizeSmall", "sizeMedium", "sizeLarge"]);
var Qj = (e10) => {
  const {
    classes: t,
    disabled: n,
    color: o,
    edge: r,
    size: s
  } = e10, a = {
    root: ["root", n && "disabled", o !== "default" && `color${de(o)}`, r && `edge${de(r)}`, `size${de(s)}`]
  };
  return Ue(a, Jj, t);
};
var eD = K(Ro, {
  name: "MuiIconButton",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.root, n.color !== "default" && t[`color${de(n.color)}`], n.edge && t[`edge${de(n.edge)}`], t[`size${de(n.size)}`]];
  }
})(Ve(({
  theme: e10
}) => ({
  textAlign: "center",
  flex: "0 0 auto",
  fontSize: e10.typography.pxToRem(24),
  padding: 8,
  borderRadius: "50%",
  color: (e10.vars || e10).palette.action.active,
  transition: e10.transitions.create("background-color", {
    duration: e10.transitions.duration.shortest
  }),
  variants: [{
    props: {
      disableRipple: false
    },
    style: {
      "&:hover": {
        backgroundColor: e10.vars ? `rgba(${e10.vars.palette.action.activeChannel} / ${e10.vars.palette.action.hoverOpacity})` : We(e10.palette.action.active, e10.palette.action.hoverOpacity),
        // Reset on touch devices, it doesn't add specificity
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  }, {
    props: {
      edge: "start"
    },
    style: {
      marginLeft: -12
    }
  }, {
    props: {
      edge: "start",
      size: "small"
    },
    style: {
      marginLeft: -3
    }
  }, {
    props: {
      edge: "end"
    },
    style: {
      marginRight: -12
    }
  }, {
    props: {
      edge: "end",
      size: "small"
    },
    style: {
      marginRight: -3
    }
  }]
})), Ve(({
  theme: e10
}) => ({
  variants: [{
    props: {
      color: "inherit"
    },
    style: {
      color: "inherit"
    }
  }, ...Object.entries(e10.palette).filter(Rt()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      color: (e10.vars || e10).palette[t].main
    }
  })), ...Object.entries(e10.palette).filter(Rt()).map(([t]) => ({
    props: {
      color: t,
      disableRipple: false
    },
    style: {
      "&:hover": {
        backgroundColor: e10.vars ? `rgba(${(e10.vars || e10).palette[t].mainChannel} / ${e10.vars.palette.action.hoverOpacity})` : We((e10.vars || e10).palette[t].main, e10.palette.action.hoverOpacity),
        // Reset on touch devices, it doesn't add specificity
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  })), {
    props: {
      size: "small"
    },
    style: {
      padding: 5,
      fontSize: e10.typography.pxToRem(18)
    }
  }, {
    props: {
      size: "large"
    },
    style: {
      padding: 12,
      fontSize: e10.typography.pxToRem(28)
    }
  }],
  [`&.${Kj.disabled}`]: {
    backgroundColor: "transparent",
    color: (e10.vars || e10).palette.action.disabled
  }
})));
var lt = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiIconButton"
  }), {
    edge: r = false,
    children: s,
    className: a,
    color: l = "default",
    disabled: c = false,
    disableFocusRipple: u = false,
    disableRipple: d = false,
    size: p = "medium",
    ...m
  } = o, g = {
    ...o,
    edge: r,
    color: l,
    disabled: c,
    disableFocusRipple: u,
    disableRipple: d,
    size: p
  }, b = Qj(g);
  return f.jsx(eD, {
    className: be(b.root, a),
    centerRipple: true,
    focusRipple: !u,
    disabled: c,
    disableRipple: d,
    ref: n,
    ...m,
    ownerState: g,
    children: s
  });
});
lt.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The icon to display.
   */
  children: co(i.node, (e10) => S.Children.toArray(e10.children).some((n) => S.isValidElement(n) && n.props.onClick) ? new Error(["MUI: You are providing an onClick event listener to a child of a button element.", "Prefer applying it to the IconButton directly.", "This guarantees that the whole <button> will be responsive to click events."].join(`
`)) : null),
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: i.oneOfType([i.oneOf(["inherit", "default", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: i.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: i.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: i.oneOf(["end", "start", false]),
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["small", "medium", "large"]), i.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
};
var tD = ze(f.jsx("path", {
  d: "M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z"
}), "SuccessOutlined");
var nD = ze(f.jsx("path", {
  d: "M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z"
}), "ReportProblemOutlined");
var oD = ze(f.jsx("path", {
  d: "M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
}), "ErrorOutline");
var rD = ze(f.jsx("path", {
  d: "M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z"
}), "InfoOutlined");
var vC = ze(f.jsx("path", {
  d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}), "Close");
var iD = (e10) => {
  const {
    variant: t,
    color: n,
    severity: o,
    classes: r
  } = e10, s = {
    root: ["root", `color${de(n || o)}`, `${t}${de(n || o)}`, `${t}`],
    icon: ["icon"],
    message: ["message"],
    action: ["action"]
  };
  return Ue(s, qj, r);
};
var sD = K(vn, {
  name: "MuiAlert",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.root, t[n.variant], t[`${n.variant}${de(n.color || n.severity)}`]];
  }
})(Ve(({
  theme: e10
}) => {
  const t = e10.palette.mode === "light" ? lo : Hn, n = e10.palette.mode === "light" ? Hn : lo;
  return {
    ...e10.typography.body2,
    backgroundColor: "transparent",
    display: "flex",
    padding: "6px 16px",
    variants: [...Object.entries(e10.palette).filter(Rt(["light"])).map(([o]) => ({
      props: {
        colorSeverity: o,
        variant: "standard"
      },
      style: {
        color: e10.vars ? e10.vars.palette.Alert[`${o}Color`] : t(e10.palette[o].light, 0.6),
        backgroundColor: e10.vars ? e10.vars.palette.Alert[`${o}StandardBg`] : n(e10.palette[o].light, 0.9),
        [`& .${Hb.icon}`]: e10.vars ? {
          color: e10.vars.palette.Alert[`${o}IconColor`]
        } : {
          color: e10.palette[o].main
        }
      }
    })), ...Object.entries(e10.palette).filter(Rt(["light"])).map(([o]) => ({
      props: {
        colorSeverity: o,
        variant: "outlined"
      },
      style: {
        color: e10.vars ? e10.vars.palette.Alert[`${o}Color`] : t(e10.palette[o].light, 0.6),
        border: `1px solid ${(e10.vars || e10).palette[o].light}`,
        [`& .${Hb.icon}`]: e10.vars ? {
          color: e10.vars.palette.Alert[`${o}IconColor`]
        } : {
          color: e10.palette[o].main
        }
      }
    })), ...Object.entries(e10.palette).filter(Rt(["dark"])).map(([o]) => ({
      props: {
        colorSeverity: o,
        variant: "filled"
      },
      style: {
        fontWeight: e10.typography.fontWeightMedium,
        ...e10.vars ? {
          color: e10.vars.palette.Alert[`${o}FilledColor`],
          backgroundColor: e10.vars.palette.Alert[`${o}FilledBg`]
        } : {
          backgroundColor: e10.palette.mode === "dark" ? e10.palette[o].dark : e10.palette[o].main,
          color: e10.palette.getContrastText(e10.palette[o].main)
        }
      }
    }))]
  };
}));
var aD = K("div", {
  name: "MuiAlert",
  slot: "Icon",
  overridesResolver: (e10, t) => t.icon
})({
  marginRight: 12,
  padding: "7px 0",
  display: "flex",
  fontSize: 22,
  opacity: 0.9
});
var lD = K("div", {
  name: "MuiAlert",
  slot: "Message",
  overridesResolver: (e10, t) => t.message
})({
  padding: "8px 0",
  minWidth: 0,
  overflow: "auto"
});
var Gb = K("div", {
  name: "MuiAlert",
  slot: "Action",
  overridesResolver: (e10, t) => t.action
})({
  display: "flex",
  alignItems: "flex-start",
  padding: "4px 0 0 16px",
  marginLeft: "auto",
  marginRight: -8
});
var Ub = {
  success: f.jsx(tD, {
    fontSize: "inherit"
  }),
  warning: f.jsx(nD, {
    fontSize: "inherit"
  }),
  error: f.jsx(oD, {
    fontSize: "inherit"
  }),
  info: f.jsx(rD, {
    fontSize: "inherit"
  })
};
var yC = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiAlert"
  }), {
    action: r,
    children: s,
    className: a,
    closeText: l = "Close",
    color: c,
    components: u = {},
    componentsProps: d = {},
    icon: p,
    iconMapping: m = Ub,
    onClose: g,
    role: b = "alert",
    severity: v = "success",
    slotProps: h = {},
    slots: y = {},
    variant: C = "standard",
    ...x
  } = o, T = {
    ...o,
    color: c,
    severity: v,
    variant: C,
    colorSeverity: c || v
  }, w = iD(T), R = {
    slots: {
      closeButton: u.CloseButton,
      closeIcon: u.CloseIcon,
      ...y
    },
    slotProps: {
      ...d,
      ...h
    }
  }, [E, O] = sn("closeButton", {
    elementType: lt,
    externalForwardedProps: R,
    ownerState: T
  }), [I, P] = sn("closeIcon", {
    elementType: vC,
    externalForwardedProps: R,
    ownerState: T
  });
  return f.jsxs(sD, {
    role: b,
    elevation: 0,
    ownerState: T,
    className: be(w.root, a),
    ref: n,
    ...x,
    children: [p !== false ? f.jsx(aD, {
      ownerState: T,
      className: w.icon,
      children: p || m[v] || Ub[v]
    }) : null, f.jsx(lD, {
      ownerState: T,
      className: w.message,
      children: s
    }), r != null ? f.jsx(Gb, {
      ownerState: T,
      className: w.action,
      children: r
    }) : null, r == null && g ? f.jsx(Gb, {
      ownerState: T,
      className: w.action,
      children: f.jsx(E, {
        size: "small",
        "aria-label": l,
        title: l,
        color: "inherit",
        onClick: g,
        ...O,
        children: f.jsx(I, {
          fontSize: "small",
          ...P
        })
      })
    }) : null]
  });
});
yC.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The action to display. It renders after the message, at the end of the alert.
   */
  action: i.node,
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * Override the default label for the *close popup* icon button.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Close'
   */
  closeText: i.string,
  /**
   * The color of the component. Unless provided, the value is taken from the `severity` prop.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: i.oneOfType([i.oneOf(["error", "info", "success", "warning"]), i.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    CloseButton: i.elementType,
    CloseIcon: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    closeButton: i.object,
    closeIcon: i.object
  }),
  /**
   * Override the icon displayed before the children.
   * Unless provided, the icon is mapped to the value of the `severity` prop.
   * Set to `false` to remove the `icon`.
   */
  icon: i.node,
  /**
   * The component maps the `severity` prop to a range of different icons,
   * for instance success to `<SuccessOutlined>`.
   * If you wish to change this mapping, you can provide your own.
   * Alternatively, you can use the `icon` prop to override the icon displayed.
   */
  iconMapping: i.shape({
    error: i.node,
    info: i.node,
    success: i.node,
    warning: i.node
  }),
  /**
   * Callback fired when the component requests to be closed.
   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onClose: i.func,
  /**
   * The ARIA role attribute of the element.
   * @default 'alert'
   */
  role: i.string,
  /**
   * The severity of the alert. This defines the color and icon used.
   * @default 'success'
   */
  severity: i.oneOfType([i.oneOf(["error", "info", "success", "warning"]), i.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    closeButton: i.oneOfType([i.func, i.object]),
    closeIcon: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    closeButton: i.elementType,
    closeIcon: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The variant to use.
   * @default 'standard'
   */
  variant: i.oneOfType([i.oneOf(["filled", "outlined", "standard"]), i.string])
};
function cD(e10) {
  return He("MuiTypography", e10);
}
Be("MuiTypography", ["root", "h1", "h2", "h3", "h4", "h5", "h6", "subtitle1", "subtitle2", "body1", "body2", "inherit", "button", "caption", "overline", "alignLeft", "alignRight", "alignCenter", "alignJustify", "noWrap", "gutterBottom", "paragraph"]);
var uD = {
  primary: true,
  secondary: true,
  error: true,
  info: true,
  success: true,
  warning: true,
  textPrimary: true,
  textSecondary: true,
  textDisabled: true
};
var dD = dj();
var pD = (e10) => {
  const {
    align: t,
    gutterBottom: n,
    noWrap: o,
    paragraph: r,
    variant: s,
    classes: a
  } = e10, l = {
    root: ["root", s, e10.align !== "inherit" && `align${de(t)}`, n && "gutterBottom", o && "noWrap", r && "paragraph"]
  };
  return Ue(l, cD, a);
};
var fD = K("span", {
  name: "MuiTypography",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.root, n.variant && t[n.variant], n.align !== "inherit" && t[`align${de(n.align)}`], n.noWrap && t.noWrap, n.gutterBottom && t.gutterBottom, n.paragraph && t.paragraph];
  }
})(Ve(({
  theme: e10
}) => {
  var t;
  return {
    margin: 0,
    variants: [{
      props: {
        variant: "inherit"
      },
      style: {
        // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.
        font: "inherit",
        lineHeight: "inherit",
        letterSpacing: "inherit"
      }
    }, ...Object.entries(e10.typography).filter(([n, o]) => n !== "inherit" && o && typeof o == "object").map(([n, o]) => ({
      props: {
        variant: n
      },
      style: o
    })), ...Object.entries(e10.palette).filter(Rt()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        color: (e10.vars || e10).palette[n].main
      }
    })), ...Object.entries(((t = e10.palette) == null ? void 0 : t.text) || {}).filter(([, n]) => typeof n == "string").map(([n]) => ({
      props: {
        color: `text${de(n)}`
      },
      style: {
        color: (e10.vars || e10).palette.text[n]
      }
    })), {
      props: ({
        ownerState: n
      }) => n.align !== "inherit",
      style: {
        textAlign: "var(--Typography-textAlign)"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.noWrap,
      style: {
        overflow: "hidden",
        textOverflow: "ellipsis",
        whiteSpace: "nowrap"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.gutterBottom,
      style: {
        marginBottom: "0.35em"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.paragraph,
      style: {
        marginBottom: 16
      }
    }]
  };
}));
var Xb = {
  h1: "h1",
  h2: "h2",
  h3: "h3",
  h4: "h4",
  h5: "h5",
  h6: "h6",
  subtitle1: "h6",
  subtitle2: "h6",
  body1: "p",
  body2: "p",
  inherit: "p"
};
var Fe = S.forwardRef(function(t, n) {
  const {
    color: o,
    ...r
  } = Ye({
    props: t,
    name: "MuiTypography"
  }), s = !uD[o], a = dD({
    ...r,
    ...s && {
      color: o
    }
  }), {
    align: l = "inherit",
    className: c,
    component: u,
    gutterBottom: d = false,
    noWrap: p = false,
    paragraph: m = false,
    variant: g = "body1",
    variantMapping: b = Xb,
    ...v
  } = a, h = {
    ...a,
    align: l,
    color: o,
    className: c,
    component: u,
    gutterBottom: d,
    noWrap: p,
    paragraph: m,
    variant: g,
    variantMapping: b
  }, y = u || (m ? "p" : b[g] || Xb[g]) || "span", C = pD(h);
  return f.jsx(fD, {
    as: y,
    ref: n,
    className: be(C.root, c),
    ...v,
    ownerState: h,
    style: {
      ...l !== "inherit" && {
        "--Typography-textAlign": l
      },
      ...v.style
    }
  });
});
Fe.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Set the text-align on the component.
   * @default 'inherit'
   */
  align: i.oneOf(["center", "inherit", "justify", "left", "right"]),
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary", "success", "error", "info", "warning", "textPrimary", "textSecondary", "textDisabled"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, the text will have a bottom margin.
   * @default false
   */
  gutterBottom: i.bool,
  /**
   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.
   *
   * Note that text overflow can only happen with block or inline-block level elements
   * (the element needs to have a width in order to overflow).
   * @default false
   */
  noWrap: i.bool,
  /**
   * If `true`, the element will be a paragraph element.
   * @default false
   * @deprecated Use the `component` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  paragraph: i.bool,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Applies the theme typography styles.
   * @default 'body1'
   */
  variant: i.oneOfType([i.oneOf(["body1", "body2", "button", "caption", "h1", "h2", "h3", "h4", "h5", "h6", "inherit", "overline", "subtitle1", "subtitle2"]), i.string]),
  /**
   * The component maps the variant prop to a range of different HTML element types.
   * For instance, subtitle1 to `<h6>`.
   * If you wish to change that mapping, you can provide your own.
   * Alternatively, you can use the `component` prop.
   * @default {
   *   h1: 'h1',
   *   h2: 'h2',
   *   h3: 'h3',
   *   h4: 'h4',
   *   h5: 'h5',
   *   h6: 'h6',
   *   subtitle1: 'h6',
   *   subtitle2: 'h6',
   *   body1: 'p',
   *   body2: 'p',
   *   inherit: 'p',
   * }
   */
  variantMapping: i.object
};
function mD(e10) {
  return He("MuiAlertTitle", e10);
}
Be("MuiAlertTitle", ["root"]);
var gD = (e10) => {
  const {
    classes: t
  } = e10;
  return Ue({
    root: ["root"]
  }, mD, t);
};
var hD = K(Fe, {
  name: "MuiAlertTitle",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})(Ve(({
  theme: e10
}) => ({
  fontWeight: e10.typography.fontWeightMedium,
  marginTop: -2
})));
var xC = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiAlertTitle"
  }), {
    className: r,
    ...s
  } = o, a = o, l = gD(a);
  return f.jsx(hD, {
    gutterBottom: true,
    component: "div",
    ownerState: a,
    ref: n,
    className: be(l.root, r),
    ...s
  });
});
xC.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
};
function bD(e10) {
  return He("MuiAppBar", e10);
}
Be("MuiAppBar", ["root", "positionFixed", "positionAbsolute", "positionSticky", "positionStatic", "positionRelative", "colorDefault", "colorPrimary", "colorSecondary", "colorInherit", "colorTransparent", "colorError", "colorInfo", "colorSuccess", "colorWarning"]);
var vD = (e10) => {
  const {
    color: t,
    position: n,
    classes: o
  } = e10, r = {
    root: ["root", `color${de(t)}`, `position${de(n)}`]
  };
  return Ue(r, bD, o);
};
var Yb = (e10, t) => e10 ? `${e10 == null ? void 0 : e10.replace(")", "")}, ${t})` : t;
var yD = K(vn, {
  name: "MuiAppBar",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.root, t[`position${de(n.position)}`], t[`color${de(n.color)}`]];
  }
})(Ve(({
  theme: e10
}) => ({
  display: "flex",
  flexDirection: "column",
  width: "100%",
  boxSizing: "border-box",
  // Prevent padding issue with the Modal and fixed positioned AppBar.
  flexShrink: 0,
  variants: [{
    props: {
      position: "fixed"
    },
    style: {
      position: "fixed",
      zIndex: (e10.vars || e10).zIndex.appBar,
      top: 0,
      left: "auto",
      right: 0,
      "@media print": {
        // Prevent the app bar to be visible on each printed page.
        position: "absolute"
      }
    }
  }, {
    props: {
      position: "absolute"
    },
    style: {
      position: "absolute",
      zIndex: (e10.vars || e10).zIndex.appBar,
      top: 0,
      left: "auto",
      right: 0
    }
  }, {
    props: {
      position: "sticky"
    },
    style: {
      position: "sticky",
      zIndex: (e10.vars || e10).zIndex.appBar,
      top: 0,
      left: "auto",
      right: 0
    }
  }, {
    props: {
      position: "static"
    },
    style: {
      position: "static"
    }
  }, {
    props: {
      position: "relative"
    },
    style: {
      position: "relative"
    }
  }, {
    props: {
      color: "inherit"
    },
    style: {
      "--AppBar-color": "inherit"
    }
  }, {
    props: {
      color: "default"
    },
    style: {
      "--AppBar-background": e10.vars ? e10.vars.palette.AppBar.defaultBg : e10.palette.grey[100],
      "--AppBar-color": e10.vars ? e10.vars.palette.text.primary : e10.palette.getContrastText(e10.palette.grey[100]),
      ...e10.applyStyles("dark", {
        "--AppBar-background": e10.vars ? e10.vars.palette.AppBar.defaultBg : e10.palette.grey[900],
        "--AppBar-color": e10.vars ? e10.vars.palette.text.primary : e10.palette.getContrastText(e10.palette.grey[900])
      })
    }
  }, ...Object.entries(e10.palette).filter(Rt(["contrastText"])).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      "--AppBar-background": (e10.vars ?? e10).palette[t].main,
      "--AppBar-color": (e10.vars ?? e10).palette[t].contrastText
    }
  })), {
    props: (t) => t.enableColorOnDark === true && !["inherit", "transparent"].includes(t.color),
    style: {
      backgroundColor: "var(--AppBar-background)",
      color: "var(--AppBar-color)"
    }
  }, {
    props: (t) => t.enableColorOnDark === false && !["inherit", "transparent"].includes(t.color),
    style: {
      backgroundColor: "var(--AppBar-background)",
      color: "var(--AppBar-color)",
      ...e10.applyStyles("dark", {
        backgroundColor: e10.vars ? Yb(e10.vars.palette.AppBar.darkBg, "var(--AppBar-background)") : null,
        color: e10.vars ? Yb(e10.vars.palette.AppBar.darkColor, "var(--AppBar-color)") : null
      })
    }
  }, {
    props: {
      color: "transparent"
    },
    style: {
      "--AppBar-background": "transparent",
      "--AppBar-color": "inherit",
      backgroundColor: "var(--AppBar-background)",
      color: "var(--AppBar-color)",
      ...e10.applyStyles("dark", {
        backgroundImage: "none"
      })
    }
  }]
})));
var CC = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiAppBar"
  }), {
    className: r,
    color: s = "primary",
    enableColorOnDark: a = false,
    position: l = "fixed",
    ...c
  } = o, u = {
    ...o,
    color: s,
    position: l,
    enableColorOnDark: a
  }, d = vD(u);
  return f.jsx(yD, {
    square: true,
    component: "header",
    ownerState: u,
    elevation: 4,
    className: be(d.root, r, l === "fixed" && "mui-fixed"),
    ref: n,
    ...c
  });
});
CC.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["default", "inherit", "primary", "secondary", "transparent", "error", "info", "success", "warning"]), i.string]),
  /**
   * If true, the `color` prop is applied in dark mode.
   * @default false
   */
  enableColorOnDark: i.bool,
  /**
   * The positioning type. The behavior of the different options is described
   * [in the MDN web docs](https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Positioning).
   * Note: `sticky` is not universally supported and will fall back to `static` when unavailable.
   * @default 'fixed'
   */
  position: i.oneOf(["absolute", "fixed", "relative", "static", "sticky"]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
};
function Zb(e10) {
  return e10.normalize("NFD").replace(/[\u0300-\u036f]/g, "");
}
function xD(e10 = {}) {
  const {
    ignoreAccents: t = true,
    ignoreCase: n = true,
    limit: o,
    matchFrom: r = "any",
    stringify: s,
    trim: a = false
  } = e10;
  return (l, {
    inputValue: c,
    getOptionLabel: u
  }) => {
    let d = a ? c.trim() : c;
    n && (d = d.toLowerCase()), t && (d = Zb(d));
    const p = d ? l.filter((m) => {
      let g = (s || u)(m);
      return n && (g = g.toLowerCase()), t && (g = Zb(g)), r === "start" ? g.startsWith(d) : g.includes(d);
    }) : l;
    return typeof o == "number" ? p.slice(0, o) : p;
  };
}
var CD = xD();
var qb = 5;
var SD = (e10) => {
  var t;
  return e10.current !== null && ((t = e10.current.parentElement) == null ? void 0 : t.contains(document.activeElement));
};
var wD = [];
function TD(e10) {
  const {
    // eslint-disable-next-line @typescript-eslint/naming-convention
    unstable_isActiveElementInListbox: t = SD,
    // eslint-disable-next-line @typescript-eslint/naming-convention
    unstable_classNamePrefix: n = "Mui",
    autoComplete: o = false,
    autoHighlight: r = false,
    autoSelect: s = false,
    blurOnSelect: a = false,
    clearOnBlur: l = !e10.freeSolo,
    clearOnEscape: c = false,
    componentName: u = "useAutocomplete",
    defaultValue: d = e10.multiple ? wD : null,
    disableClearable: p = false,
    disableCloseOnSelect: m = false,
    disabled: g,
    disabledItemsFocusable: b = false,
    disableListWrap: v = false,
    filterOptions: h = CD,
    filterSelectedOptions: y = false,
    freeSolo: C = false,
    getOptionDisabled: x,
    getOptionKey: T,
    getOptionLabel: w = (pe) => pe.label ?? pe,
    groupBy: R,
    handleHomeEndKeys: E = !e10.freeSolo,
    id: O,
    includeInputInList: I = false,
    inputValue: P,
    isOptionEqualToValue: A = (pe, fe) => pe === fe,
    multiple: M = false,
    onChange: F,
    onClose: D,
    onHighlightChange: N,
    onInputChange: j,
    onOpen: _,
    open: z,
    openOnFocus: $ = false,
    options: k,
    readOnly: B = false,
    selectOnFocus: Q = !e10.freeSolo,
    value: ee
  } = e10, G = Ws(O);
  let H = w;
  H = (pe) => {
    const fe = w(pe);
    if (typeof fe != "string") {
      if (true) {
        const Pe = fe === void 0 ? "undefined" : `${typeof fe} (${fe})`;
        console.error(`MUI: The \`getOptionLabel\` method of ${u} returned ${Pe} instead of a string for ${JSON.stringify(pe)}.`);
      }
      return String(fe);
    }
    return fe;
  };
  const Y = S.useRef(false), J = S.useRef(true), U = S.useRef(null), ne = S.useRef(null), [se, oe] = S.useState(null), [W, Z] = S.useState(-1), L = r ? 0 : -1, ie = S.useRef(L), [te, le] = xr({
    controlled: ee,
    default: d,
    name: u
  }), [ue, ve] = xr({
    controlled: P,
    default: "",
    name: u,
    state: "inputValue"
  }), [Te, Re] = S.useState(false), re = S.useCallback((pe, fe, Pe) => {
    if (!(M ? te.length < fe.length : fe !== null) && !l)
      return;
    let $e;
    if (M)
      $e = "";
    else if (fe == null)
      $e = "";
    else {
      const ct = H(fe);
      $e = typeof ct == "string" ? ct : "";
    }
    ue !== $e && (ve($e), j && j(pe, $e, Pe));
  }, [H, ue, M, j, ve, l, te]), [X, ae] = xr({
    controlled: z,
    default: false,
    name: u,
    state: "open"
  }), [ce, ge] = S.useState(true), Se = !M && te != null && ue === H(te), ye = X && !B, Ee = ye ? h(
    k.filter((pe) => !(y && (M ? te : [te]).some((fe) => fe !== null && A(pe, fe)))),
    // we use the empty string to manipulate `filterOptions` to not filter any options
    // i.e. the filter predicate always returns true
    {
      inputValue: Se && ce ? "" : ue,
      getOptionLabel: H
    }
  ) : [], Le = Lm({
    filteredOptions: Ee,
    value: te,
    inputValue: ue
  });
  S.useEffect(() => {
    const pe = te !== Le.value;
    Te && !pe || C && !pe || re(null, te, "reset");
  }, [te, re, Te, Le.value, C]);
  const Ae = X && Ee.length > 0 && !B, tt = xn((pe) => {
    pe === -1 ? U.current.focus() : se.querySelector(`[data-tag-index="${pe}"]`).focus();
  });
  S.useEffect(() => {
    M && W > te.length - 1 && (Z(-1), tt(-1));
  }, [te, M, W, tt]);
  function Ze(pe, fe) {
    if (!ne.current || pe < 0 || pe >= Ee.length)
      return -1;
    let Pe = pe;
    for (; ; ) {
      const _e = ne.current.querySelector(`[data-option-index="${Pe}"]`), $e = b ? false : !_e || _e.disabled || _e.getAttribute("aria-disabled") === "true";
      if (_e && _e.hasAttribute("tabindex") && !$e)
        return Pe;
      if (fe === "next" ? Pe = (Pe + 1) % Ee.length : Pe = (Pe - 1 + Ee.length) % Ee.length, Pe === pe)
        return -1;
    }
  }
  const ut = xn(({
    event: pe,
    index: fe,
    reason: Pe = "auto"
  }) => {
    if (ie.current = fe, fe === -1 ? U.current.removeAttribute("aria-activedescendant") : U.current.setAttribute("aria-activedescendant", `${G}-option-${fe}`), N && N(pe, fe === -1 ? null : Ee[fe], Pe), !ne.current)
      return;
    const _e = ne.current.querySelector(`[role="option"].${n}-focused`);
    _e && (_e.classList.remove(`${n}-focused`), _e.classList.remove(`${n}-focusVisible`));
    let $e = ne.current;
    if (ne.current.getAttribute("role") !== "listbox" && ($e = ne.current.parentElement.querySelector('[role="listbox"]')), !$e)
      return;
    if (fe === -1) {
      $e.scrollTop = 0;
      return;
    }
    const ct = ne.current.querySelector(`[data-option-index="${fe}"]`);
    if (ct && (ct.classList.add(`${n}-focused`), Pe === "keyboard" && ct.classList.add(`${n}-focusVisible`), $e.scrollHeight > $e.clientHeight && Pe !== "mouse" && Pe !== "touch")) {
      const rt = ct, St = $e.clientHeight + $e.scrollTop, bn = rt.offsetTop + rt.offsetHeight;
      bn > St ? $e.scrollTop = bn - $e.clientHeight : rt.offsetTop - rt.offsetHeight * (R ? 1.3 : 0) < $e.scrollTop && ($e.scrollTop = rt.offsetTop - rt.offsetHeight * (R ? 1.3 : 0));
    }
  }), me = xn(({
    event: pe,
    diff: fe,
    direction: Pe = "next",
    reason: _e = "auto"
  }) => {
    if (!ye)
      return;
    const ct = Ze((() => {
      const rt = Ee.length - 1;
      if (fe === "reset")
        return L;
      if (fe === "start")
        return 0;
      if (fe === "end")
        return rt;
      const St = ie.current + fe;
      return St < 0 ? St === -1 && I ? -1 : v && ie.current !== -1 || Math.abs(fe) > 1 ? 0 : rt : St > rt ? St === rt + 1 && I ? -1 : v || Math.abs(fe) > 1 ? rt : 0 : St;
    })(), Pe);
    if (ut({
      index: ct,
      reason: _e,
      event: pe
    }), o && fe !== "reset")
      if (ct === -1)
        U.current.value = ue;
      else {
        const rt = H(Ee[ct]);
        U.current.value = rt, rt.toLowerCase().indexOf(ue.toLowerCase()) === 0 && ue.length > 0 && U.current.setSelectionRange(ue.length, rt.length);
      }
  }), Oe = () => {
    const pe = (fe, Pe) => {
      const _e = fe ? H(fe) : "", $e = Pe ? H(Pe) : "";
      return _e === $e;
    };
    if (ie.current !== -1 && Le.filteredOptions && Le.filteredOptions.length !== Ee.length && Le.inputValue === ue && (M ? te.length === Le.value.length && Le.value.every((fe, Pe) => H(te[Pe]) === H(fe)) : pe(Le.value, te))) {
      const fe = Le.filteredOptions[ie.current];
      if (fe)
        return Ee.findIndex((Pe) => H(Pe) === H(fe));
    }
    return -1;
  }, he = S.useCallback(() => {
    if (!ye)
      return;
    const pe = Oe();
    if (pe !== -1) {
      ie.current = pe;
      return;
    }
    const fe = M ? te[0] : te;
    if (Ee.length === 0 || fe == null) {
      me({
        diff: "reset"
      });
      return;
    }
    if (ne.current) {
      if (fe != null) {
        const Pe = Ee[ie.current];
        if (M && Pe && te.findIndex(($e) => A(Pe, $e)) !== -1)
          return;
        const _e = Ee.findIndex(($e) => A($e, fe));
        _e === -1 ? me({
          diff: "reset"
        }) : ut({
          index: _e
        });
        return;
      }
      if (ie.current >= Ee.length - 1) {
        ut({
          index: Ee.length - 1
        });
        return;
      }
      ut({
        index: ie.current
      });
    }
  }, [
    // Only sync the highlighted index when the option switch between empty and not
    Ee.length,
    // Don't sync the highlighted index with the value when multiple
    // eslint-disable-next-line react-hooks/exhaustive-deps
    M ? false : te,
    y,
    me,
    ut,
    ye,
    ue,
    M
  ]), Me = xn((pe) => {
    Yc(ne, pe), pe && he();
  });
  S.useEffect(() => {
    (!U.current || U.current.nodeName !== "INPUT") && (U.current && U.current.nodeName === "TEXTAREA" ? console.warn([`A textarea element was provided to ${u} where input was expected.`, "This is not a supported scenario but it may work under certain conditions.", "A textarea keyboard navigation may conflict with Autocomplete controls (for example enter and arrow keys).", "Make sure to test keyboard navigation and add custom event handlers if necessary."].join(`
`)) : console.error([`MUI: Unable to find the input element. It was resolved to ${U.current} while an HTMLInputElement was expected.`, `Instead, ${u} expects an input element.`, "", u === "useAutocomplete" ? "Make sure you have bound getInputProps correctly and that the normal ref/effect resolutions order is guaranteed." : "Make sure you have customized the input component correctly."].join(`
`)));
  }, [u]), S.useEffect(() => {
    he();
  }, [he]);
  const ke = (pe) => {
    X || (ae(true), ge(true), _ && _(pe));
  }, st = (pe, fe) => {
    X && (ae(false), D && D(pe, fe));
  }, pt = (pe, fe, Pe, _e) => {
    if (M) {
      if (te.length === fe.length && te.every(($e, ct) => $e === fe[ct]))
        return;
    } else if (te === fe)
      return;
    F && F(pe, fe, Pe, _e), le(fe);
  }, it = S.useRef(false), xt = (pe, fe, Pe = "selectOption", _e = "options") => {
    let $e = Pe, ct = fe;
    if (M) {
      if (ct = Array.isArray(te) ? te.slice() : [], true) {
        const St = ct.filter((bn) => A(fe, bn));
        St.length > 1 && console.error([`MUI: The \`isOptionEqualToValue\` method of ${u} does not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${St.length} matches.`].join(`
`));
      }
      const rt = ct.findIndex((St) => A(fe, St));
      rt === -1 ? ct.push(fe) : _e !== "freeSolo" && (ct.splice(rt, 1), $e = "removeOption");
    }
    re(pe, ct, $e), pt(pe, ct, $e, {
      option: fe
    }), !m && (!pe || !pe.ctrlKey && !pe.metaKey) && st(pe, $e), (a === true || a === "touch" && it.current || a === "mouse" && !it.current) && U.current.blur();
  };
  function Kt(pe, fe) {
    if (pe === -1)
      return -1;
    let Pe = pe;
    for (; ; ) {
      if (fe === "next" && Pe === te.length || fe === "previous" && Pe === -1)
        return -1;
      const _e = se.querySelector(`[data-tag-index="${Pe}"]`);
      if (!_e || !_e.hasAttribute("tabindex") || _e.disabled || _e.getAttribute("aria-disabled") === "true")
        Pe += fe === "next" ? 1 : -1;
      else
        return Pe;
    }
  }
  const wn = (pe, fe) => {
    if (!M)
      return;
    ue === "" && st(pe, "toggleInput");
    let Pe = W;
    W === -1 ? ue === "" && fe === "previous" && (Pe = te.length - 1) : (Pe += fe === "next" ? 1 : -1, Pe < 0 && (Pe = 0), Pe === te.length && (Pe = -1)), Pe = Kt(Pe, fe), Z(Pe), tt(Pe);
  }, Qt = (pe) => {
    Y.current = true, ve(""), j && j(pe, "", "clear"), pt(pe, M ? [] : null, "clear");
  }, ot = (pe) => (fe) => {
    if (pe.onKeyDown && pe.onKeyDown(fe), !fe.defaultMuiPrevented && (W !== -1 && !["ArrowLeft", "ArrowRight"].includes(fe.key) && (Z(-1), tt(-1)), fe.which !== 229))
      switch (fe.key) {
        case "Home":
          ye && E && (fe.preventDefault(), me({
            diff: "start",
            direction: "next",
            reason: "keyboard",
            event: fe
          }));
          break;
        case "End":
          ye && E && (fe.preventDefault(), me({
            diff: "end",
            direction: "previous",
            reason: "keyboard",
            event: fe
          }));
          break;
        case "PageUp":
          fe.preventDefault(), me({
            diff: -qb,
            direction: "previous",
            reason: "keyboard",
            event: fe
          }), ke(fe);
          break;
        case "PageDown":
          fe.preventDefault(), me({
            diff: qb,
            direction: "next",
            reason: "keyboard",
            event: fe
          }), ke(fe);
          break;
        case "ArrowDown":
          fe.preventDefault(), me({
            diff: 1,
            direction: "next",
            reason: "keyboard",
            event: fe
          }), ke(fe);
          break;
        case "ArrowUp":
          fe.preventDefault(), me({
            diff: -1,
            direction: "previous",
            reason: "keyboard",
            event: fe
          }), ke(fe);
          break;
        case "ArrowLeft":
          wn(fe, "previous");
          break;
        case "ArrowRight":
          wn(fe, "next");
          break;
        case "Enter":
          if (ie.current !== -1 && ye) {
            const Pe = Ee[ie.current], _e = x ? x(Pe) : false;
            if (fe.preventDefault(), _e)
              return;
            xt(fe, Pe, "selectOption"), o && U.current.setSelectionRange(U.current.value.length, U.current.value.length);
          } else C && ue !== "" && Se === false && (M && fe.preventDefault(), xt(fe, ue, "createOption", "freeSolo"));
          break;
        case "Escape":
          ye ? (fe.preventDefault(), fe.stopPropagation(), st(fe, "escape")) : c && (ue !== "" || M && te.length > 0) && (fe.preventDefault(), fe.stopPropagation(), Qt(fe));
          break;
        case "Backspace":
          if (M && !B && ue === "" && te.length > 0) {
            const Pe = W === -1 ? te.length - 1 : W, _e = te.slice();
            _e.splice(Pe, 1), pt(fe, _e, "removeOption", {
              option: te[Pe]
            });
          }
          break;
        case "Delete":
          if (M && !B && ue === "" && te.length > 0 && W !== -1) {
            const Pe = W, _e = te.slice();
            _e.splice(Pe, 1), pt(fe, _e, "removeOption", {
              option: te[Pe]
            });
          }
          break;
      }
  }, dn = (pe) => {
    Re(true), $ && !Y.current && ke(pe);
  }, dr = (pe) => {
    if (t(ne)) {
      U.current.focus();
      return;
    }
    Re(false), J.current = true, Y.current = false, s && ie.current !== -1 && ye ? xt(pe, Ee[ie.current], "blur") : s && C && ue !== "" ? xt(pe, ue, "blur", "freeSolo") : l && re(pe, te, "blur"), st(pe, "blur");
  }, Ho = (pe) => {
    const fe = pe.target.value;
    ue !== fe && (ve(fe), ge(false), j && j(pe, fe, "input")), fe === "" ? !p && !M && pt(pe, null, "clear") : ke(pe);
  }, pr = (pe) => {
    const fe = Number(pe.currentTarget.getAttribute("data-option-index"));
    ie.current !== fe && ut({
      event: pe,
      index: fe,
      reason: "mouse"
    });
  }, Go = (pe) => {
    ut({
      event: pe,
      index: Number(pe.currentTarget.getAttribute("data-option-index")),
      reason: "touch"
    }), it.current = true;
  }, qe = (pe) => {
    const fe = Number(pe.currentTarget.getAttribute("data-option-index"));
    xt(pe, Ee[fe], "selectOption"), it.current = false;
  }, kr = (pe) => (fe) => {
    const Pe = te.slice();
    Pe.splice(pe, 1), pt(fe, Pe, "removeOption", {
      option: te[pe]
    });
  }, Ht = (pe) => {
    X ? st(pe, "toggleInput") : ke(pe);
  }, pn = (pe) => {
    pe.currentTarget.contains(pe.target) && pe.target.getAttribute("id") !== G && pe.preventDefault();
  }, hn = (pe) => {
    pe.currentTarget.contains(pe.target) && (U.current.focus(), Q && J.current && U.current.selectionEnd - U.current.selectionStart === 0 && U.current.select(), J.current = false);
  }, q = (pe) => {
    !g && (ue === "" || !X) && Ht(pe);
  };
  let Ce = C && ue.length > 0;
  Ce = Ce || (M ? te.length > 0 : te !== null);
  let Ne = Ee;
  if (R) {
    const pe = /* @__PURE__ */ new Map();
    let fe = false;
    Ne = Ee.reduce((Pe, _e, $e) => {
      const ct = R(_e);
      return Pe.length > 0 && Pe[Pe.length - 1].group === ct ? Pe[Pe.length - 1].options.push(_e) : (pe.get(ct) && !fe && (console.warn(`MUI: The options provided combined with the \`groupBy\` method of ${u} returns duplicated headers.`, "You can solve the issue by sorting the options with the output of `groupBy`."), fe = true), pe.set(ct, true), Pe.push({
        key: $e,
        index: $e,
        group: ct,
        options: [_e]
      })), Pe;
    }, []);
  }
  return g && Te && dr(), {
    getRootProps: (pe = {}) => ({
      "aria-owns": Ae ? `${G}-listbox` : null,
      ...pe,
      onKeyDown: ot(pe),
      onMouseDown: pn,
      onClick: hn
    }),
    getInputLabelProps: () => ({
      id: `${G}-label`,
      htmlFor: G
    }),
    getInputProps: () => ({
      id: G,
      value: ue,
      onBlur: dr,
      onFocus: dn,
      onChange: Ho,
      onMouseDown: q,
      // if open then this is handled imperatively so don't let react override
      // only have an opinion about this when closed
      "aria-activedescendant": ye ? "" : null,
      "aria-autocomplete": o ? "both" : "list",
      "aria-controls": Ae ? `${G}-listbox` : void 0,
      "aria-expanded": Ae,
      // Disable browser's suggestion that might overlap with the popup.
      // Handle autocomplete but not autofill.
      autoComplete: "off",
      ref: U,
      autoCapitalize: "none",
      spellCheck: "false",
      role: "combobox",
      disabled: g
    }),
    getClearProps: () => ({
      tabIndex: -1,
      type: "button",
      onClick: Qt
    }),
    getPopupIndicatorProps: () => ({
      tabIndex: -1,
      type: "button",
      onClick: Ht
    }),
    getTagProps: ({
      index: pe
    }) => ({
      key: pe,
      "data-tag-index": pe,
      tabIndex: -1,
      ...!B && {
        onDelete: kr(pe)
      }
    }),
    getListboxProps: () => ({
      role: "listbox",
      id: `${G}-listbox`,
      "aria-labelledby": `${G}-label`,
      ref: Me,
      onMouseDown: (pe) => {
        pe.preventDefault();
      }
    }),
    getOptionProps: ({
      index: pe,
      option: fe
    }) => {
      const Pe = (M ? te : [te]).some(($e) => $e != null && A(fe, $e)), _e = x ? x(fe) : false;
      return {
        key: (T == null ? void 0 : T(fe)) ?? H(fe),
        tabIndex: -1,
        role: "option",
        id: `${G}-option-${pe}`,
        onMouseMove: pr,
        onClick: qe,
        onTouchStart: Go,
        "data-option-index": pe,
        "aria-disabled": _e,
        "aria-selected": Pe
      };
    },
    id: G,
    inputValue: ue,
    value: te,
    dirty: Ce,
    expanded: ye && se,
    popupOpen: ye,
    focused: Te || W !== -1,
    anchorEl: se,
    setAnchorEl: oe,
    focusedTag: W,
    groupedOptions: Ne
  };
}
var Gn = "top";
var Eo = "bottom";
var Oo = "right";
var Un = "left";
var Zm = "auto";
var Ol = [Gn, Eo, Oo, Un];
var Ps = "start";
var el = "end";
var ID = "clippingParents";
var SC = "viewport";
var aa = "popper";
var RD = "reference";
var Jb = Ol.reduce(function(e10, t) {
  return e10.concat([t + "-" + Ps, t + "-" + el]);
}, []);
var wC = [].concat(Ol, [Zm]).reduce(function(e10, t) {
  return e10.concat([t, t + "-" + Ps, t + "-" + el]);
}, []);
var ED = "beforeRead";
var OD = "read";
var PD = "afterRead";
var AD = "beforeMain";
var jD = "main";
var DD = "afterMain";
var MD = "beforeWrite";
var kD = "write";
var FD = "afterWrite";
var ND = [ED, OD, PD, AD, jD, DD, MD, kD, FD];
function rr(e10) {
  return e10 ? (e10.nodeName || "").toLowerCase() : null;
}
function uo(e10) {
  if (e10 == null)
    return window;
  if (e10.toString() !== "[object Window]") {
    var t = e10.ownerDocument;
    return t && t.defaultView || window;
  }
  return e10;
}
function Ai(e10) {
  var t = uo(e10).Element;
  return e10 instanceof t || e10 instanceof Element;
}
function To(e10) {
  var t = uo(e10).HTMLElement;
  return e10 instanceof t || e10 instanceof HTMLElement;
}
function qm(e10) {
  if (typeof ShadowRoot > "u")
    return false;
  var t = uo(e10).ShadowRoot;
  return e10 instanceof t || e10 instanceof ShadowRoot;
}
function $D(e10) {
  var t = e10.state;
  Object.keys(t.elements).forEach(function(n) {
    var o = t.styles[n] || {}, r = t.attributes[n] || {}, s = t.elements[n];
    !To(s) || !rr(s) || (Object.assign(s.style, o), Object.keys(r).forEach(function(a) {
      var l = r[a];
      l === false ? s.removeAttribute(a) : s.setAttribute(a, l === true ? "" : l);
    }));
  });
}
function VD(e10) {
  var t = e10.state, n = {
    popper: {
      position: t.options.strategy,
      left: "0",
      top: "0",
      margin: "0"
    },
    arrow: {
      position: "absolute"
    },
    reference: {}
  };
  return Object.assign(t.elements.popper.style, n.popper), t.styles = n, t.elements.arrow && Object.assign(t.elements.arrow.style, n.arrow), function() {
    Object.keys(t.elements).forEach(function(o) {
      var r = t.elements[o], s = t.attributes[o] || {}, a = Object.keys(t.styles.hasOwnProperty(o) ? t.styles[o] : n[o]), l = a.reduce(function(c, u) {
        return c[u] = "", c;
      }, {});
      !To(r) || !rr(r) || (Object.assign(r.style, l), Object.keys(s).forEach(function(c) {
        r.removeAttribute(c);
      }));
    });
  };
}
var _D = {
  name: "applyStyles",
  enabled: true,
  phase: "write",
  fn: $D,
  effect: VD,
  requires: ["computeStyles"]
};
function tr(e10) {
  return e10.split("-")[0];
}
var Ti = Math.max;
var Qc = Math.min;
var As = Math.round;
function If() {
  var e10 = navigator.userAgentData;
  return e10 != null && e10.brands && Array.isArray(e10.brands) ? e10.brands.map(function(t) {
    return t.brand + "/" + t.version;
  }).join(" ") : navigator.userAgent;
}
function TC() {
  return !/^((?!chrome|android).)*safari/i.test(If());
}
function js(e10, t, n) {
  t === void 0 && (t = false), n === void 0 && (n = false);
  var o = e10.getBoundingClientRect(), r = 1, s = 1;
  t && To(e10) && (r = e10.offsetWidth > 0 && As(o.width) / e10.offsetWidth || 1, s = e10.offsetHeight > 0 && As(o.height) / e10.offsetHeight || 1);
  var a = Ai(e10) ? uo(e10) : window, l = a.visualViewport, c = !TC() && n, u = (o.left + (c && l ? l.offsetLeft : 0)) / r, d = (o.top + (c && l ? l.offsetTop : 0)) / s, p = o.width / r, m = o.height / s;
  return {
    width: p,
    height: m,
    top: d,
    right: u + p,
    bottom: d + m,
    left: u,
    x: u,
    y: d
  };
}
function Jm(e10) {
  var t = js(e10), n = e10.offsetWidth, o = e10.offsetHeight;
  return Math.abs(t.width - n) <= 1 && (n = t.width), Math.abs(t.height - o) <= 1 && (o = t.height), {
    x: e10.offsetLeft,
    y: e10.offsetTop,
    width: n,
    height: o
  };
}
function IC(e10, t) {
  var n = t.getRootNode && t.getRootNode();
  if (e10.contains(t))
    return true;
  if (n && qm(n)) {
    var o = t;
    do {
      if (o && e10.isSameNode(o))
        return true;
      o = o.parentNode || o.host;
    } while (o);
  }
  return false;
}
function Er(e10) {
  return uo(e10).getComputedStyle(e10);
}
function LD(e10) {
  return ["table", "td", "th"].indexOf(rr(e10)) >= 0;
}
function ri(e10) {
  return ((Ai(e10) ? e10.ownerDocument : (
    // $FlowFixMe[prop-missing]
    e10.document
  )) || window.document).documentElement;
}
function qu(e10) {
  return rr(e10) === "html" ? e10 : (
    // this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    e10.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    e10.parentNode || // DOM Element detected
    (qm(e10) ? e10.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    ri(e10)
  );
}
function Kb(e10) {
  return !To(e10) || // https://github.com/popperjs/popper-core/issues/837
  Er(e10).position === "fixed" ? null : e10.offsetParent;
}
function BD(e10) {
  var t = /firefox/i.test(If()), n = /Trident/i.test(If());
  if (n && To(e10)) {
    var o = Er(e10);
    if (o.position === "fixed")
      return null;
  }
  var r = qu(e10);
  for (qm(r) && (r = r.host); To(r) && ["html", "body"].indexOf(rr(r)) < 0; ) {
    var s = Er(r);
    if (s.transform !== "none" || s.perspective !== "none" || s.contain === "paint" || ["transform", "perspective"].indexOf(s.willChange) !== -1 || t && s.willChange === "filter" || t && s.filter && s.filter !== "none")
      return r;
    r = r.parentNode;
  }
  return null;
}
function Pl(e10) {
  for (var t = uo(e10), n = Kb(e10); n && LD(n) && Er(n).position === "static"; )
    n = Kb(n);
  return n && (rr(n) === "html" || rr(n) === "body" && Er(n).position === "static") ? t : n || BD(e10) || t;
}
function Km(e10) {
  return ["top", "bottom"].indexOf(e10) >= 0 ? "x" : "y";
}
function ja(e10, t, n) {
  return Ti(e10, Qc(t, n));
}
function zD(e10, t, n) {
  var o = ja(e10, t, n);
  return o > n ? n : o;
}
function RC() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}
function EC(e10) {
  return Object.assign({}, RC(), e10);
}
function OC(e10, t) {
  return t.reduce(function(n, o) {
    return n[o] = e10, n;
  }, {});
}
var WD = function(t, n) {
  return t = typeof t == "function" ? t(Object.assign({}, n.rects, {
    placement: n.placement
  })) : t, EC(typeof t != "number" ? t : OC(t, Ol));
};
function HD(e10) {
  var t, n = e10.state, o = e10.name, r = e10.options, s = n.elements.arrow, a = n.modifiersData.popperOffsets, l = tr(n.placement), c = Km(l), u = [Un, Oo].indexOf(l) >= 0, d = u ? "height" : "width";
  if (!(!s || !a)) {
    var p = WD(r.padding, n), m = Jm(s), g = c === "y" ? Gn : Un, b = c === "y" ? Eo : Oo, v = n.rects.reference[d] + n.rects.reference[c] - a[c] - n.rects.popper[d], h = a[c] - n.rects.reference[c], y = Pl(s), C = y ? c === "y" ? y.clientHeight || 0 : y.clientWidth || 0 : 0, x = v / 2 - h / 2, T = p[g], w = C - m[d] - p[b], R = C / 2 - m[d] / 2 + x, E = ja(T, R, w), O = c;
    n.modifiersData[o] = (t = {}, t[O] = E, t.centerOffset = E - R, t);
  }
}
function GD(e10) {
  var t = e10.state, n = e10.options, o = n.element, r = o === void 0 ? "[data-popper-arrow]" : o;
  r != null && (typeof r == "string" && (r = t.elements.popper.querySelector(r), !r) || IC(t.elements.popper, r) && (t.elements.arrow = r));
}
var UD = {
  name: "arrow",
  enabled: true,
  phase: "main",
  fn: HD,
  effect: GD,
  requires: ["popperOffsets"],
  requiresIfExists: ["preventOverflow"]
};
function Ds(e10) {
  return e10.split("-")[1];
}
var XD = {
  top: "auto",
  right: "auto",
  bottom: "auto",
  left: "auto"
};
function YD(e10, t) {
  var n = e10.x, o = e10.y, r = t.devicePixelRatio || 1;
  return {
    x: As(n * r) / r || 0,
    y: As(o * r) / r || 0
  };
}
function Qb(e10) {
  var t, n = e10.popper, o = e10.popperRect, r = e10.placement, s = e10.variation, a = e10.offsets, l = e10.position, c = e10.gpuAcceleration, u = e10.adaptive, d = e10.roundOffsets, p = e10.isFixed, m = a.x, g = m === void 0 ? 0 : m, b = a.y, v = b === void 0 ? 0 : b, h = typeof d == "function" ? d({
    x: g,
    y: v
  }) : {
    x: g,
    y: v
  };
  g = h.x, v = h.y;
  var y = a.hasOwnProperty("x"), C = a.hasOwnProperty("y"), x = Un, T = Gn, w = window;
  if (u) {
    var R = Pl(n), E = "clientHeight", O = "clientWidth";
    if (R === uo(n) && (R = ri(n), Er(R).position !== "static" && l === "absolute" && (E = "scrollHeight", O = "scrollWidth")), R = R, r === Gn || (r === Un || r === Oo) && s === el) {
      T = Eo;
      var I = p && R === w && w.visualViewport ? w.visualViewport.height : (
        // $FlowFixMe[prop-missing]
        R[E]
      );
      v -= I - o.height, v *= c ? 1 : -1;
    }
    if (r === Un || (r === Gn || r === Eo) && s === el) {
      x = Oo;
      var P = p && R === w && w.visualViewport ? w.visualViewport.width : (
        // $FlowFixMe[prop-missing]
        R[O]
      );
      g -= P - o.width, g *= c ? 1 : -1;
    }
  }
  var A = Object.assign({
    position: l
  }, u && XD), M = d === true ? YD({
    x: g,
    y: v
  }, uo(n)) : {
    x: g,
    y: v
  };
  if (g = M.x, v = M.y, c) {
    var F;
    return Object.assign({}, A, (F = {}, F[T] = C ? "0" : "", F[x] = y ? "0" : "", F.transform = (w.devicePixelRatio || 1) <= 1 ? "translate(" + g + "px, " + v + "px)" : "translate3d(" + g + "px, " + v + "px, 0)", F));
  }
  return Object.assign({}, A, (t = {}, t[T] = C ? v + "px" : "", t[x] = y ? g + "px" : "", t.transform = "", t));
}
function ZD(e10) {
  var t = e10.state, n = e10.options, o = n.gpuAcceleration, r = o === void 0 ? true : o, s = n.adaptive, a = s === void 0 ? true : s, l = n.roundOffsets, c = l === void 0 ? true : l, u = {
    placement: tr(t.placement),
    variation: Ds(t.placement),
    popper: t.elements.popper,
    popperRect: t.rects.popper,
    gpuAcceleration: r,
    isFixed: t.options.strategy === "fixed"
  };
  t.modifiersData.popperOffsets != null && (t.styles.popper = Object.assign({}, t.styles.popper, Qb(Object.assign({}, u, {
    offsets: t.modifiersData.popperOffsets,
    position: t.options.strategy,
    adaptive: a,
    roundOffsets: c
  })))), t.modifiersData.arrow != null && (t.styles.arrow = Object.assign({}, t.styles.arrow, Qb(Object.assign({}, u, {
    offsets: t.modifiersData.arrow,
    position: "absolute",
    adaptive: false,
    roundOffsets: c
  })))), t.attributes.popper = Object.assign({}, t.attributes.popper, {
    "data-popper-placement": t.placement
  });
}
var qD = {
  name: "computeStyles",
  enabled: true,
  phase: "beforeWrite",
  fn: ZD,
  data: {}
};
var Jl = {
  passive: true
};
function JD(e10) {
  var t = e10.state, n = e10.instance, o = e10.options, r = o.scroll, s = r === void 0 ? true : r, a = o.resize, l = a === void 0 ? true : a, c = uo(t.elements.popper), u = [].concat(t.scrollParents.reference, t.scrollParents.popper);
  return s && u.forEach(function(d) {
    d.addEventListener("scroll", n.update, Jl);
  }), l && c.addEventListener("resize", n.update, Jl), function() {
    s && u.forEach(function(d) {
      d.removeEventListener("scroll", n.update, Jl);
    }), l && c.removeEventListener("resize", n.update, Jl);
  };
}
var KD = {
  name: "eventListeners",
  enabled: true,
  phase: "write",
  fn: function() {
  },
  effect: JD,
  data: {}
};
var QD = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
function kc(e10) {
  return e10.replace(/left|right|bottom|top/g, function(t) {
    return QD[t];
  });
}
var eM = {
  start: "end",
  end: "start"
};
function ev(e10) {
  return e10.replace(/start|end/g, function(t) {
    return eM[t];
  });
}
function Qm(e10) {
  var t = uo(e10), n = t.pageXOffset, o = t.pageYOffset;
  return {
    scrollLeft: n,
    scrollTop: o
  };
}
function eg(e10) {
  return js(ri(e10)).left + Qm(e10).scrollLeft;
}
function tM(e10, t) {
  var n = uo(e10), o = ri(e10), r = n.visualViewport, s = o.clientWidth, a = o.clientHeight, l = 0, c = 0;
  if (r) {
    s = r.width, a = r.height;
    var u = TC();
    (u || !u && t === "fixed") && (l = r.offsetLeft, c = r.offsetTop);
  }
  return {
    width: s,
    height: a,
    x: l + eg(e10),
    y: c
  };
}
function nM(e10) {
  var t, n = ri(e10), o = Qm(e10), r = (t = e10.ownerDocument) == null ? void 0 : t.body, s = Ti(n.scrollWidth, n.clientWidth, r ? r.scrollWidth : 0, r ? r.clientWidth : 0), a = Ti(n.scrollHeight, n.clientHeight, r ? r.scrollHeight : 0, r ? r.clientHeight : 0), l = -o.scrollLeft + eg(e10), c = -o.scrollTop;
  return Er(r || n).direction === "rtl" && (l += Ti(n.clientWidth, r ? r.clientWidth : 0) - s), {
    width: s,
    height: a,
    x: l,
    y: c
  };
}
function tg(e10) {
  var t = Er(e10), n = t.overflow, o = t.overflowX, r = t.overflowY;
  return /auto|scroll|overlay|hidden/.test(n + r + o);
}
function PC(e10) {
  return ["html", "body", "#document"].indexOf(rr(e10)) >= 0 ? e10.ownerDocument.body : To(e10) && tg(e10) ? e10 : PC(qu(e10));
}
function Da(e10, t) {
  var n;
  t === void 0 && (t = []);
  var o = PC(e10), r = o === ((n = e10.ownerDocument) == null ? void 0 : n.body), s = uo(o), a = r ? [s].concat(s.visualViewport || [], tg(o) ? o : []) : o, l = t.concat(a);
  return r ? l : (
    // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
    l.concat(Da(qu(a)))
  );
}
function Rf(e10) {
  return Object.assign({}, e10, {
    left: e10.x,
    top: e10.y,
    right: e10.x + e10.width,
    bottom: e10.y + e10.height
  });
}
function oM(e10, t) {
  var n = js(e10, false, t === "fixed");
  return n.top = n.top + e10.clientTop, n.left = n.left + e10.clientLeft, n.bottom = n.top + e10.clientHeight, n.right = n.left + e10.clientWidth, n.width = e10.clientWidth, n.height = e10.clientHeight, n.x = n.left, n.y = n.top, n;
}
function tv(e10, t, n) {
  return t === SC ? Rf(tM(e10, n)) : Ai(t) ? oM(t, n) : Rf(nM(ri(e10)));
}
function rM(e10) {
  var t = Da(qu(e10)), n = ["absolute", "fixed"].indexOf(Er(e10).position) >= 0, o = n && To(e10) ? Pl(e10) : e10;
  return Ai(o) ? t.filter(function(r) {
    return Ai(r) && IC(r, o) && rr(r) !== "body";
  }) : [];
}
function iM(e10, t, n, o) {
  var r = t === "clippingParents" ? rM(e10) : [].concat(t), s = [].concat(r, [n]), a = s[0], l = s.reduce(function(c, u) {
    var d = tv(e10, u, o);
    return c.top = Ti(d.top, c.top), c.right = Qc(d.right, c.right), c.bottom = Qc(d.bottom, c.bottom), c.left = Ti(d.left, c.left), c;
  }, tv(e10, a, o));
  return l.width = l.right - l.left, l.height = l.bottom - l.top, l.x = l.left, l.y = l.top, l;
}
function AC(e10) {
  var t = e10.reference, n = e10.element, o = e10.placement, r = o ? tr(o) : null, s = o ? Ds(o) : null, a = t.x + t.width / 2 - n.width / 2, l = t.y + t.height / 2 - n.height / 2, c;
  switch (r) {
    case Gn:
      c = {
        x: a,
        y: t.y - n.height
      };
      break;
    case Eo:
      c = {
        x: a,
        y: t.y + t.height
      };
      break;
    case Oo:
      c = {
        x: t.x + t.width,
        y: l
      };
      break;
    case Un:
      c = {
        x: t.x - n.width,
        y: l
      };
      break;
    default:
      c = {
        x: t.x,
        y: t.y
      };
  }
  var u = r ? Km(r) : null;
  if (u != null) {
    var d = u === "y" ? "height" : "width";
    switch (s) {
      case Ps:
        c[u] = c[u] - (t[d] / 2 - n[d] / 2);
        break;
      case el:
        c[u] = c[u] + (t[d] / 2 - n[d] / 2);
        break;
    }
  }
  return c;
}
function tl(e10, t) {
  t === void 0 && (t = {});
  var n = t, o = n.placement, r = o === void 0 ? e10.placement : o, s = n.strategy, a = s === void 0 ? e10.strategy : s, l = n.boundary, c = l === void 0 ? ID : l, u = n.rootBoundary, d = u === void 0 ? SC : u, p = n.elementContext, m = p === void 0 ? aa : p, g = n.altBoundary, b = g === void 0 ? false : g, v = n.padding, h = v === void 0 ? 0 : v, y = EC(typeof h != "number" ? h : OC(h, Ol)), C = m === aa ? RD : aa, x = e10.rects.popper, T = e10.elements[b ? C : m], w = iM(Ai(T) ? T : T.contextElement || ri(e10.elements.popper), c, d, a), R = js(e10.elements.reference), E = AC({
    reference: R,
    element: x,
    strategy: "absolute",
    placement: r
  }), O = Rf(Object.assign({}, x, E)), I = m === aa ? O : R, P = {
    top: w.top - I.top + y.top,
    bottom: I.bottom - w.bottom + y.bottom,
    left: w.left - I.left + y.left,
    right: I.right - w.right + y.right
  }, A = e10.modifiersData.offset;
  if (m === aa && A) {
    var M = A[r];
    Object.keys(P).forEach(function(F) {
      var D = [Oo, Eo].indexOf(F) >= 0 ? 1 : -1, N = [Gn, Eo].indexOf(F) >= 0 ? "y" : "x";
      P[F] += M[N] * D;
    });
  }
  return P;
}
function sM(e10, t) {
  t === void 0 && (t = {});
  var n = t, o = n.placement, r = n.boundary, s = n.rootBoundary, a = n.padding, l = n.flipVariations, c = n.allowedAutoPlacements, u = c === void 0 ? wC : c, d = Ds(o), p = d ? l ? Jb : Jb.filter(function(b) {
    return Ds(b) === d;
  }) : Ol, m = p.filter(function(b) {
    return u.indexOf(b) >= 0;
  });
  m.length === 0 && (m = p);
  var g = m.reduce(function(b, v) {
    return b[v] = tl(e10, {
      placement: v,
      boundary: r,
      rootBoundary: s,
      padding: a
    })[tr(v)], b;
  }, {});
  return Object.keys(g).sort(function(b, v) {
    return g[b] - g[v];
  });
}
function aM(e10) {
  if (tr(e10) === Zm)
    return [];
  var t = kc(e10);
  return [ev(e10), t, ev(t)];
}
function lM(e10) {
  var t = e10.state, n = e10.options, o = e10.name;
  if (!t.modifiersData[o]._skip) {
    for (var r = n.mainAxis, s = r === void 0 ? true : r, a = n.altAxis, l = a === void 0 ? true : a, c = n.fallbackPlacements, u = n.padding, d = n.boundary, p = n.rootBoundary, m = n.altBoundary, g = n.flipVariations, b = g === void 0 ? true : g, v = n.allowedAutoPlacements, h = t.options.placement, y = tr(h), C = y === h, x = c || (C || !b ? [kc(h)] : aM(h)), T = [h].concat(x).reduce(function(G, H) {
      return G.concat(tr(H) === Zm ? sM(t, {
        placement: H,
        boundary: d,
        rootBoundary: p,
        padding: u,
        flipVariations: b,
        allowedAutoPlacements: v
      }) : H);
    }, []), w = t.rects.reference, R = t.rects.popper, E = /* @__PURE__ */ new Map(), O = true, I = T[0], P = 0; P < T.length; P++) {
      var A = T[P], M = tr(A), F = Ds(A) === Ps, D = [Gn, Eo].indexOf(M) >= 0, N = D ? "width" : "height", j = tl(t, {
        placement: A,
        boundary: d,
        rootBoundary: p,
        altBoundary: m,
        padding: u
      }), _ = D ? F ? Oo : Un : F ? Eo : Gn;
      w[N] > R[N] && (_ = kc(_));
      var z = kc(_), $ = [];
      if (s && $.push(j[M] <= 0), l && $.push(j[_] <= 0, j[z] <= 0), $.every(function(G) {
        return G;
      })) {
        I = A, O = false;
        break;
      }
      E.set(A, $);
    }
    if (O)
      for (var k = b ? 3 : 1, B = function(H) {
        var Y = T.find(function(J) {
          var U = E.get(J);
          if (U)
            return U.slice(0, H).every(function(ne) {
              return ne;
            });
        });
        if (Y)
          return I = Y, "break";
      }, Q = k; Q > 0; Q--) {
        var ee = B(Q);
        if (ee === "break") break;
      }
    t.placement !== I && (t.modifiersData[o]._skip = true, t.placement = I, t.reset = true);
  }
}
var cM = {
  name: "flip",
  enabled: true,
  phase: "main",
  fn: lM,
  requiresIfExists: ["offset"],
  data: {
    _skip: false
  }
};
function nv(e10, t, n) {
  return n === void 0 && (n = {
    x: 0,
    y: 0
  }), {
    top: e10.top - t.height - n.y,
    right: e10.right - t.width + n.x,
    bottom: e10.bottom - t.height + n.y,
    left: e10.left - t.width - n.x
  };
}
function ov(e10) {
  return [Gn, Oo, Eo, Un].some(function(t) {
    return e10[t] >= 0;
  });
}
function uM(e10) {
  var t = e10.state, n = e10.name, o = t.rects.reference, r = t.rects.popper, s = t.modifiersData.preventOverflow, a = tl(t, {
    elementContext: "reference"
  }), l = tl(t, {
    altBoundary: true
  }), c = nv(a, o), u = nv(l, r, s), d = ov(c), p = ov(u);
  t.modifiersData[n] = {
    referenceClippingOffsets: c,
    popperEscapeOffsets: u,
    isReferenceHidden: d,
    hasPopperEscaped: p
  }, t.attributes.popper = Object.assign({}, t.attributes.popper, {
    "data-popper-reference-hidden": d,
    "data-popper-escaped": p
  });
}
var dM = {
  name: "hide",
  enabled: true,
  phase: "main",
  requiresIfExists: ["preventOverflow"],
  fn: uM
};
function pM(e10, t, n) {
  var o = tr(e10), r = [Un, Gn].indexOf(o) >= 0 ? -1 : 1, s = typeof n == "function" ? n(Object.assign({}, t, {
    placement: e10
  })) : n, a = s[0], l = s[1];
  return a = a || 0, l = (l || 0) * r, [Un, Oo].indexOf(o) >= 0 ? {
    x: l,
    y: a
  } : {
    x: a,
    y: l
  };
}
function fM(e10) {
  var t = e10.state, n = e10.options, o = e10.name, r = n.offset, s = r === void 0 ? [0, 0] : r, a = wC.reduce(function(d, p) {
    return d[p] = pM(p, t.rects, s), d;
  }, {}), l = a[t.placement], c = l.x, u = l.y;
  t.modifiersData.popperOffsets != null && (t.modifiersData.popperOffsets.x += c, t.modifiersData.popperOffsets.y += u), t.modifiersData[o] = a;
}
var mM = {
  name: "offset",
  enabled: true,
  phase: "main",
  requires: ["popperOffsets"],
  fn: fM
};
function gM(e10) {
  var t = e10.state, n = e10.name;
  t.modifiersData[n] = AC({
    reference: t.rects.reference,
    element: t.rects.popper,
    strategy: "absolute",
    placement: t.placement
  });
}
var hM = {
  name: "popperOffsets",
  enabled: true,
  phase: "read",
  fn: gM,
  data: {}
};
function bM(e10) {
  return e10 === "x" ? "y" : "x";
}
function vM(e10) {
  var t = e10.state, n = e10.options, o = e10.name, r = n.mainAxis, s = r === void 0 ? true : r, a = n.altAxis, l = a === void 0 ? false : a, c = n.boundary, u = n.rootBoundary, d = n.altBoundary, p = n.padding, m = n.tether, g = m === void 0 ? true : m, b = n.tetherOffset, v = b === void 0 ? 0 : b, h = tl(t, {
    boundary: c,
    rootBoundary: u,
    padding: p,
    altBoundary: d
  }), y = tr(t.placement), C = Ds(t.placement), x = !C, T = Km(y), w = bM(T), R = t.modifiersData.popperOffsets, E = t.rects.reference, O = t.rects.popper, I = typeof v == "function" ? v(Object.assign({}, t.rects, {
    placement: t.placement
  })) : v, P = typeof I == "number" ? {
    mainAxis: I,
    altAxis: I
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, I), A = t.modifiersData.offset ? t.modifiersData.offset[t.placement] : null, M = {
    x: 0,
    y: 0
  };
  if (R) {
    if (s) {
      var F, D = T === "y" ? Gn : Un, N = T === "y" ? Eo : Oo, j = T === "y" ? "height" : "width", _ = R[T], z = _ + h[D], $ = _ - h[N], k = g ? -O[j] / 2 : 0, B = C === Ps ? E[j] : O[j], Q = C === Ps ? -O[j] : -E[j], ee = t.elements.arrow, G = g && ee ? Jm(ee) : {
        width: 0,
        height: 0
      }, H = t.modifiersData["arrow#persistent"] ? t.modifiersData["arrow#persistent"].padding : RC(), Y = H[D], J = H[N], U = ja(0, E[j], G[j]), ne = x ? E[j] / 2 - k - U - Y - P.mainAxis : B - U - Y - P.mainAxis, se = x ? -E[j] / 2 + k + U + J + P.mainAxis : Q + U + J + P.mainAxis, oe = t.elements.arrow && Pl(t.elements.arrow), W = oe ? T === "y" ? oe.clientTop || 0 : oe.clientLeft || 0 : 0, Z = (F = A == null ? void 0 : A[T]) != null ? F : 0, L = _ + ne - Z - W, ie = _ + se - Z, te = ja(g ? Qc(z, L) : z, _, g ? Ti($, ie) : $);
      R[T] = te, M[T] = te - _;
    }
    if (l) {
      var le, ue = T === "x" ? Gn : Un, ve = T === "x" ? Eo : Oo, Te = R[w], Re = w === "y" ? "height" : "width", re = Te + h[ue], X = Te - h[ve], ae = [Gn, Un].indexOf(y) !== -1, ce = (le = A == null ? void 0 : A[w]) != null ? le : 0, ge = ae ? re : Te - E[Re] - O[Re] - ce + P.altAxis, Se = ae ? Te + E[Re] + O[Re] - ce - P.altAxis : X, ye = g && ae ? zD(ge, Te, Se) : ja(g ? ge : re, Te, g ? Se : X);
      R[w] = ye, M[w] = ye - Te;
    }
    t.modifiersData[o] = M;
  }
}
var yM = {
  name: "preventOverflow",
  enabled: true,
  phase: "main",
  fn: vM,
  requiresIfExists: ["offset"]
};
function xM(e10) {
  return {
    scrollLeft: e10.scrollLeft,
    scrollTop: e10.scrollTop
  };
}
function CM(e10) {
  return e10 === uo(e10) || !To(e10) ? Qm(e10) : xM(e10);
}
function SM(e10) {
  var t = e10.getBoundingClientRect(), n = As(t.width) / e10.offsetWidth || 1, o = As(t.height) / e10.offsetHeight || 1;
  return n !== 1 || o !== 1;
}
function wM(e10, t, n) {
  n === void 0 && (n = false);
  var o = To(t), r = To(t) && SM(t), s = ri(t), a = js(e10, r, n), l = {
    scrollLeft: 0,
    scrollTop: 0
  }, c = {
    x: 0,
    y: 0
  };
  return (o || !o && !n) && ((rr(t) !== "body" || // https://github.com/popperjs/popper-core/issues/1078
  tg(s)) && (l = CM(t)), To(t) ? (c = js(t, true), c.x += t.clientLeft, c.y += t.clientTop) : s && (c.x = eg(s))), {
    x: a.left + l.scrollLeft - c.x,
    y: a.top + l.scrollTop - c.y,
    width: a.width,
    height: a.height
  };
}
function TM(e10) {
  var t = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Set(), o = [];
  e10.forEach(function(s) {
    t.set(s.name, s);
  });
  function r(s) {
    n.add(s.name);
    var a = [].concat(s.requires || [], s.requiresIfExists || []);
    a.forEach(function(l) {
      if (!n.has(l)) {
        var c = t.get(l);
        c && r(c);
      }
    }), o.push(s);
  }
  return e10.forEach(function(s) {
    n.has(s.name) || r(s);
  }), o;
}
function IM(e10) {
  var t = TM(e10);
  return ND.reduce(function(n, o) {
    return n.concat(t.filter(function(r) {
      return r.phase === o;
    }));
  }, []);
}
function RM(e10) {
  var t;
  return function() {
    return t || (t = new Promise(function(n) {
      Promise.resolve().then(function() {
        t = void 0, n(e10());
      });
    })), t;
  };
}
function EM(e10) {
  var t = e10.reduce(function(n, o) {
    var r = n[o.name];
    return n[o.name] = r ? Object.assign({}, r, o, {
      options: Object.assign({}, r.options, o.options),
      data: Object.assign({}, r.data, o.data)
    }) : o, n;
  }, {});
  return Object.keys(t).map(function(n) {
    return t[n];
  });
}
var rv = {
  placement: "bottom",
  modifiers: [],
  strategy: "absolute"
};
function iv() {
  for (var e10 = arguments.length, t = new Array(e10), n = 0; n < e10; n++)
    t[n] = arguments[n];
  return !t.some(function(o) {
    return !(o && typeof o.getBoundingClientRect == "function");
  });
}
function OM(e10) {
  e10 === void 0 && (e10 = {});
  var t = e10, n = t.defaultModifiers, o = n === void 0 ? [] : n, r = t.defaultOptions, s = r === void 0 ? rv : r;
  return function(l, c, u) {
    u === void 0 && (u = s);
    var d = {
      placement: "bottom",
      orderedModifiers: [],
      options: Object.assign({}, rv, s),
      modifiersData: {},
      elements: {
        reference: l,
        popper: c
      },
      attributes: {},
      styles: {}
    }, p = [], m = false, g = {
      state: d,
      setOptions: function(y) {
        var C = typeof y == "function" ? y(d.options) : y;
        v(), d.options = Object.assign({}, s, d.options, C), d.scrollParents = {
          reference: Ai(l) ? Da(l) : l.contextElement ? Da(l.contextElement) : [],
          popper: Da(c)
        };
        var x = IM(EM([].concat(o, d.options.modifiers)));
        return d.orderedModifiers = x.filter(function(T) {
          return T.enabled;
        }), b(), g.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function() {
        if (!m) {
          var y = d.elements, C = y.reference, x = y.popper;
          if (iv(C, x)) {
            d.rects = {
              reference: wM(C, Pl(x), d.options.strategy === "fixed"),
              popper: Jm(x)
            }, d.reset = false, d.placement = d.options.placement, d.orderedModifiers.forEach(function(P) {
              return d.modifiersData[P.name] = Object.assign({}, P.data);
            });
            for (var T = 0; T < d.orderedModifiers.length; T++) {
              if (d.reset === true) {
                d.reset = false, T = -1;
                continue;
              }
              var w = d.orderedModifiers[T], R = w.fn, E = w.options, O = E === void 0 ? {} : E, I = w.name;
              typeof R == "function" && (d = R({
                state: d,
                options: O,
                name: I,
                instance: g
              }) || d);
            }
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: RM(function() {
        return new Promise(function(h) {
          g.forceUpdate(), h(d);
        });
      }),
      destroy: function() {
        v(), m = true;
      }
    };
    if (!iv(l, c))
      return g;
    g.setOptions(u).then(function(h) {
      !m && u.onFirstUpdate && u.onFirstUpdate(h);
    });
    function b() {
      d.orderedModifiers.forEach(function(h) {
        var y = h.name, C = h.options, x = C === void 0 ? {} : C, T = h.effect;
        if (typeof T == "function") {
          var w = T({
            state: d,
            name: y,
            instance: g,
            options: x
          }), R = function() {
          };
          p.push(w || R);
        }
      });
    }
    function v() {
      p.forEach(function(h) {
        return h();
      }), p = [];
    }
    return g;
  };
}
var PM = [KD, hM, qD, _D, mM, cM, yM, UD, dM];
var AM = OM({
  defaultModifiers: PM
});
function jM(e10) {
  return typeof e10 == "function" ? e10() : e10;
}
var nl = S.forwardRef(function(t, n) {
  const {
    children: o,
    container: r,
    disablePortal: s = false
  } = t, [a, l] = S.useState(null), c = Jt(Hs(o), n);
  if (ao(() => {
    s || l(jM(r) || document.body);
  }, [r, s]), ao(() => {
    if (a && !s)
      return Yc(n, a), () => {
        Yc(n, null);
      };
  }, [n, a, s]), s) {
    if (S.isValidElement(o)) {
      const u = {
        ref: c
      };
      return S.cloneElement(o, u);
    }
    return f.jsx(S.Fragment, {
      children: o
    });
  }
  return f.jsx(S.Fragment, {
    children: a && MI.createPortal(o, a)
  });
});
nl.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The children to render into the `container`.
   */
  children: i.node,
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([Ir, i.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: i.bool
};
nl.propTypes = Hu(nl.propTypes);
function DM(e10) {
  return He("MuiPopper", e10);
}
Be("MuiPopper", ["root"]);
function MM(e10, t) {
  if (t === "ltr")
    return e10;
  switch (e10) {
    case "bottom-end":
      return "bottom-start";
    case "bottom-start":
      return "bottom-end";
    case "top-end":
      return "top-start";
    case "top-start":
      return "top-end";
    default:
      return e10;
  }
}
function eu(e10) {
  return typeof e10 == "function" ? e10() : e10;
}
function Ju(e10) {
  return e10.nodeType !== void 0;
}
function kM(e10) {
  return !Ju(e10);
}
var FM = (e10) => {
  const {
    classes: t
  } = e10;
  return Ue({
    root: ["root"]
  }, DM, t);
};
var NM = {};
var $M = S.forwardRef(function(t, n) {
  const {
    anchorEl: o,
    children: r,
    direction: s,
    disablePortal: a,
    modifiers: l,
    open: c,
    placement: u,
    popperOptions: d,
    popperRef: p,
    slotProps: m = {},
    slots: g = {},
    TransitionProps: b,
    // @ts-ignore internal logic
    ownerState: v,
    // prevent from spreading to DOM, it can come from the parent component e.g. Select.
    ...h
  } = t, y = S.useRef(null), C = Jt(y, n), x = S.useRef(null), T = Jt(x, p), w = S.useRef(T);
  ao(() => {
    w.current = T;
  }, [T]), S.useImperativeHandle(p, () => x.current, []);
  const R = MM(u, s), [E, O] = S.useState(R), [I, P] = S.useState(eu(o));
  S.useEffect(() => {
    x.current && x.current.forceUpdate();
  }), S.useEffect(() => {
    o && P(eu(o));
  }, [o]), ao(() => {
    if (!I || !c)
      return;
    const N = (z) => {
      O(z.placement);
    };
    if (I && Ju(I) && I.nodeType === 1) {
      const z = I.getBoundingClientRect();
      z.top === 0 && z.left === 0 && z.right === 0 && z.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    let j = [{
      name: "preventOverflow",
      options: {
        altBoundary: a
      }
    }, {
      name: "flip",
      options: {
        altBoundary: a
      }
    }, {
      name: "onUpdate",
      enabled: true,
      phase: "afterWrite",
      fn: ({
        state: z
      }) => {
        N(z);
      }
    }];
    l != null && (j = j.concat(l)), d && d.modifiers != null && (j = j.concat(d.modifiers));
    const _ = AM(I, y.current, {
      placement: R,
      ...d,
      modifiers: j
    });
    return w.current(_), () => {
      _.destroy(), w.current(null);
    };
  }, [I, a, l, c, d, R]);
  const A = {
    placement: E
  };
  b !== null && (A.TransitionProps = b);
  const M = FM(t), F = g.root ?? "div", D = In({
    elementType: F,
    externalSlotProps: m.root,
    externalForwardedProps: h,
    additionalProps: {
      role: "tooltip",
      ref: C
    },
    ownerState: t,
    className: M.root
  });
  return f.jsx(F, {
    ...D,
    children: typeof r == "function" ? r(A) : r
  });
});
var jC = S.forwardRef(function(t, n) {
  const {
    anchorEl: o,
    children: r,
    container: s,
    direction: a = "ltr",
    disablePortal: l = false,
    keepMounted: c = false,
    modifiers: u,
    open: d,
    placement: p = "bottom",
    popperOptions: m = NM,
    popperRef: g,
    style: b,
    transition: v = false,
    slotProps: h = {},
    slots: y = {},
    ...C
  } = t, [x, T] = S.useState(true), w = () => {
    T(false);
  }, R = () => {
    T(true);
  };
  if (!c && !d && (!v || x))
    return null;
  let E;
  if (s)
    E = s;
  else if (o) {
    const P = eu(o);
    E = P && Ju(P) ? mn(P).body : mn(null).body;
  }
  const O = !d && c && (!v || x) ? "none" : void 0, I = v ? {
    in: d,
    onEnter: w,
    onExited: R
  } : void 0;
  return f.jsx(nl, {
    disablePortal: l,
    container: E,
    children: f.jsx($M, {
      anchorEl: o,
      direction: a,
      disablePortal: l,
      modifiers: u,
      ref: n,
      open: v ? !x : d,
      placement: p,
      popperOptions: m,
      popperRef: g,
      slotProps: h,
      slots: y,
      ...C,
      style: {
        // Prevents scroll issue, waiting for Popper.js to add this style once initiated.
        position: "fixed",
        // Fix Popper.js display issue
        top: 0,
        left: 0,
        display: O,
        ...b
      },
      TransitionProps: I,
      children: r
    })
  });
});
jC.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: co(i.oneOfType([Ir, i.object, i.func]), (e10) => {
    if (e10.open) {
      const t = eu(e10.anchorEl);
      if (t && Ju(t) && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else if (!t || typeof t.getBoundingClientRect != "function" || kM(t) && t.contextElement != null && t.contextElement.nodeType !== 1)
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "It should be an HTML element instance or a virtualElement ", "(https://popper.js.org/docs/v2/virtual-elements/)."].join(`
`));
    }
    return null;
  }),
  /**
   * Popper render function or node.
   */
  children: i.oneOfType([i.node, i.func]),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([Ir, i.func]),
  /**
   * Direction of the text.
   * @default 'ltr'
   */
  direction: i.oneOf(["ltr", "rtl"]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: i.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: i.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: i.arrayOf(i.shape({
    data: i.object,
    effect: i.func,
    enabled: i.bool,
    fn: i.func,
    name: i.any,
    options: i.object,
    phase: i.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: i.arrayOf(i.string),
    requiresIfExists: i.arrayOf(i.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: i.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: i.shape({
    modifiers: i.array,
    onFirstUpdate: i.func,
    placement: i.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: i.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: On,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: i.shape({
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: i.shape({
    root: i.elementType
  }),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: i.bool
};
var VM = K(jC, {
  name: "MuiPopper",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})({});
var Gs = S.forwardRef(function(t, n) {
  const o = oi(), r = Ye({
    props: t,
    name: "MuiPopper"
  }), {
    anchorEl: s,
    component: a,
    components: l,
    componentsProps: c,
    container: u,
    disablePortal: d,
    keepMounted: p,
    modifiers: m,
    open: g,
    placement: b,
    popperOptions: v,
    popperRef: h,
    transition: y,
    slots: C,
    slotProps: x,
    ...T
  } = r, w = (C == null ? void 0 : C.root) ?? (l == null ? void 0 : l.Root), R = {
    anchorEl: s,
    container: u,
    disablePortal: d,
    keepMounted: p,
    modifiers: m,
    open: g,
    placement: b,
    popperOptions: v,
    popperRef: h,
    transition: y,
    ...T
  };
  return f.jsx(VM, {
    as: a,
    direction: o ? "rtl" : "ltr",
    slots: {
      root: w
    },
    slotProps: x ?? c,
    ...R,
    ref: n
  });
});
Gs.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: i.oneOfType([Ir, i.object, i.func]),
  /**
   * Popper render function or node.
   */
  children: i.oneOfType([i.node, i.func]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   * @default {}
   */
  components: i.shape({
    Root: i.elementType
  }),
  /**
   * The props used for each slot inside the Popper.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   * @default {}
   */
  componentsProps: i.shape({
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([Ir, i.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: i.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: i.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: i.arrayOf(i.shape({
    data: i.object,
    effect: i.func,
    enabled: i.bool,
    fn: i.func,
    name: i.any,
    options: i.object,
    phase: i.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: i.arrayOf(i.string),
    requiresIfExists: i.arrayOf(i.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: i.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: i.shape({
    modifiers: i.array,
    onFirstUpdate: i.func,
    placement: i.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: i.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: On,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: i.shape({
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: i.shape({
    root: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: i.bool
};
function _M(e10) {
  return He("MuiListSubheader", e10);
}
Be("MuiListSubheader", ["root", "colorPrimary", "colorInherit", "gutters", "inset", "sticky"]);
var LM = (e10) => {
  const {
    classes: t,
    color: n,
    disableGutters: o,
    inset: r,
    disableSticky: s
  } = e10, a = {
    root: ["root", n !== "default" && `color${de(n)}`, !o && "gutters", r && "inset", !s && "sticky"]
  };
  return Ue(a, _M, t);
};
var BM = K("li", {
  name: "MuiListSubheader",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.root, n.color !== "default" && t[`color${de(n.color)}`], !n.disableGutters && t.gutters, n.inset && t.inset, !n.disableSticky && t.sticky];
  }
})(Ve(({
  theme: e10
}) => ({
  boxSizing: "border-box",
  lineHeight: "48px",
  listStyle: "none",
  color: (e10.vars || e10).palette.text.secondary,
  fontFamily: e10.typography.fontFamily,
  fontWeight: e10.typography.fontWeightMedium,
  fontSize: e10.typography.pxToRem(14),
  variants: [{
    props: {
      color: "primary"
    },
    style: {
      color: (e10.vars || e10).palette.primary.main
    }
  }, {
    props: {
      color: "inherit"
    },
    style: {
      color: "inherit"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disableGutters,
    style: {
      paddingLeft: 16,
      paddingRight: 16
    }
  }, {
    props: ({
      ownerState: t
    }) => t.inset,
    style: {
      paddingLeft: 72
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disableSticky,
    style: {
      position: "sticky",
      top: 0,
      zIndex: 1,
      backgroundColor: (e10.vars || e10).palette.background.paper
    }
  }]
})));
var tu = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiListSubheader"
  }), {
    className: r,
    color: s = "default",
    component: a = "li",
    disableGutters: l = false,
    disableSticky: c = false,
    inset: u = false,
    ...d
  } = o, p = {
    ...o,
    color: s,
    component: a,
    disableGutters: l,
    disableSticky: c,
    inset: u
  }, m = LM(p);
  return f.jsx(BM, {
    as: a,
    className: be(m.root, r),
    ref: n,
    ownerState: p,
    ...d
  });
});
tu && (tu.muiSkipListHighlight = true);
tu.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component. It supports those theme colors that make sense for this component.
   * @default 'default'
   */
  color: i.oneOf(["default", "inherit", "primary"]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, the List Subheader will not have gutters.
   * @default false
   */
  disableGutters: i.bool,
  /**
   * If `true`, the List Subheader will not stick to the top during scroll.
   * @default false
   */
  disableSticky: i.bool,
  /**
   * If `true`, the List Subheader is indented.
   * @default false
   */
  inset: i.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
};
var zM = ze(f.jsx("path", {
  d: "M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
}), "Cancel");
function WM(e10) {
  return He("MuiChip", e10);
}
var yt = Be("MuiChip", ["root", "sizeSmall", "sizeMedium", "colorDefault", "colorError", "colorInfo", "colorPrimary", "colorSecondary", "colorSuccess", "colorWarning", "disabled", "clickable", "clickableColorPrimary", "clickableColorSecondary", "deletable", "deletableColorPrimary", "deletableColorSecondary", "outlined", "filled", "outlinedPrimary", "outlinedSecondary", "filledPrimary", "filledSecondary", "avatar", "avatarSmall", "avatarMedium", "avatarColorPrimary", "avatarColorSecondary", "icon", "iconSmall", "iconMedium", "iconColorPrimary", "iconColorSecondary", "label", "labelSmall", "labelMedium", "deleteIcon", "deleteIconSmall", "deleteIconMedium", "deleteIconColorPrimary", "deleteIconColorSecondary", "deleteIconOutlinedColorPrimary", "deleteIconOutlinedColorSecondary", "deleteIconFilledColorPrimary", "deleteIconFilledColorSecondary", "focusVisible"]);
var HM = (e10) => {
  const {
    classes: t,
    disabled: n,
    size: o,
    color: r,
    iconColor: s,
    onDelete: a,
    clickable: l,
    variant: c
  } = e10, u = {
    root: ["root", c, n && "disabled", `size${de(o)}`, `color${de(r)}`, l && "clickable", l && `clickableColor${de(r)}`, a && "deletable", a && `deletableColor${de(r)}`, `${c}${de(r)}`],
    label: ["label", `label${de(o)}`],
    avatar: ["avatar", `avatar${de(o)}`, `avatarColor${de(r)}`],
    icon: ["icon", `icon${de(o)}`, `iconColor${de(s)}`],
    deleteIcon: ["deleteIcon", `deleteIcon${de(o)}`, `deleteIconColor${de(r)}`, `deleteIcon${de(c)}Color${de(r)}`]
  };
  return Ue(u, WM, t);
};
var GM = K("div", {
  name: "MuiChip",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10, {
      color: o,
      iconColor: r,
      clickable: s,
      onDelete: a,
      size: l,
      variant: c
    } = n;
    return [{
      [`& .${yt.avatar}`]: t.avatar
    }, {
      [`& .${yt.avatar}`]: t[`avatar${de(l)}`]
    }, {
      [`& .${yt.avatar}`]: t[`avatarColor${de(o)}`]
    }, {
      [`& .${yt.icon}`]: t.icon
    }, {
      [`& .${yt.icon}`]: t[`icon${de(l)}`]
    }, {
      [`& .${yt.icon}`]: t[`iconColor${de(r)}`]
    }, {
      [`& .${yt.deleteIcon}`]: t.deleteIcon
    }, {
      [`& .${yt.deleteIcon}`]: t[`deleteIcon${de(l)}`]
    }, {
      [`& .${yt.deleteIcon}`]: t[`deleteIconColor${de(o)}`]
    }, {
      [`& .${yt.deleteIcon}`]: t[`deleteIcon${de(c)}Color${de(o)}`]
    }, t.root, t[`size${de(l)}`], t[`color${de(o)}`], s && t.clickable, s && o !== "default" && t[`clickableColor${de(o)})`], a && t.deletable, a && o !== "default" && t[`deletableColor${de(o)}`], t[c], t[`${c}${de(o)}`]];
  }
})(Ve(({
  theme: e10
}) => {
  const t = e10.palette.mode === "light" ? e10.palette.grey[700] : e10.palette.grey[300];
  return {
    maxWidth: "100%",
    fontFamily: e10.typography.fontFamily,
    fontSize: e10.typography.pxToRem(13),
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    height: 32,
    color: (e10.vars || e10).palette.text.primary,
    backgroundColor: (e10.vars || e10).palette.action.selected,
    borderRadius: 32 / 2,
    whiteSpace: "nowrap",
    transition: e10.transitions.create(["background-color", "box-shadow"]),
    // reset cursor explicitly in case ButtonBase is used
    cursor: "unset",
    // We disable the focus ring for mouse, touch and keyboard users.
    outline: 0,
    textDecoration: "none",
    border: 0,
    // Remove `button` border
    padding: 0,
    // Remove `button` padding
    verticalAlign: "middle",
    boxSizing: "border-box",
    [`&.${yt.disabled}`]: {
      opacity: (e10.vars || e10).palette.action.disabledOpacity,
      pointerEvents: "none"
    },
    [`& .${yt.avatar}`]: {
      marginLeft: 5,
      marginRight: -6,
      width: 24,
      height: 24,
      color: e10.vars ? e10.vars.palette.Chip.defaultAvatarColor : t,
      fontSize: e10.typography.pxToRem(12)
    },
    [`& .${yt.avatarColorPrimary}`]: {
      color: (e10.vars || e10).palette.primary.contrastText,
      backgroundColor: (e10.vars || e10).palette.primary.dark
    },
    [`& .${yt.avatarColorSecondary}`]: {
      color: (e10.vars || e10).palette.secondary.contrastText,
      backgroundColor: (e10.vars || e10).palette.secondary.dark
    },
    [`& .${yt.avatarSmall}`]: {
      marginLeft: 4,
      marginRight: -4,
      width: 18,
      height: 18,
      fontSize: e10.typography.pxToRem(10)
    },
    [`& .${yt.icon}`]: {
      marginLeft: 5,
      marginRight: -6
    },
    [`& .${yt.deleteIcon}`]: {
      WebkitTapHighlightColor: "transparent",
      color: e10.vars ? `rgba(${e10.vars.palette.text.primaryChannel} / 0.26)` : We(e10.palette.text.primary, 0.26),
      fontSize: 22,
      cursor: "pointer",
      margin: "0 5px 0 -6px",
      "&:hover": {
        color: e10.vars ? `rgba(${e10.vars.palette.text.primaryChannel} / 0.4)` : We(e10.palette.text.primary, 0.4)
      }
    },
    variants: [{
      props: {
        size: "small"
      },
      style: {
        height: 24,
        [`& .${yt.icon}`]: {
          fontSize: 18,
          marginLeft: 4,
          marginRight: -4
        },
        [`& .${yt.deleteIcon}`]: {
          fontSize: 16,
          marginRight: 4,
          marginLeft: -4
        }
      }
    }, ...Object.entries(e10.palette).filter(Rt(["contrastText"])).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        backgroundColor: (e10.vars || e10).palette[n].main,
        color: (e10.vars || e10).palette[n].contrastText,
        [`& .${yt.deleteIcon}`]: {
          color: e10.vars ? `rgba(${e10.vars.palette[n].contrastTextChannel} / 0.7)` : We(e10.palette[n].contrastText, 0.7),
          "&:hover, &:active": {
            color: (e10.vars || e10).palette[n].contrastText
          }
        }
      }
    })), {
      props: (n) => n.iconColor === n.color,
      style: {
        [`& .${yt.icon}`]: {
          color: e10.vars ? e10.vars.palette.Chip.defaultIconColor : t
        }
      }
    }, {
      props: (n) => n.iconColor === n.color && n.color !== "default",
      style: {
        [`& .${yt.icon}`]: {
          color: "inherit"
        }
      }
    }, {
      props: {
        onDelete: true
      },
      style: {
        [`&.${yt.focusVisible}`]: {
          backgroundColor: e10.vars ? `rgba(${e10.vars.palette.action.selectedChannel} / calc(${e10.vars.palette.action.selectedOpacity} + ${e10.vars.palette.action.focusOpacity}))` : We(e10.palette.action.selected, e10.palette.action.selectedOpacity + e10.palette.action.focusOpacity)
        }
      }
    }, ...Object.entries(e10.palette).filter(Rt(["dark"])).map(([n]) => ({
      props: {
        color: n,
        onDelete: true
      },
      style: {
        [`&.${yt.focusVisible}`]: {
          background: (e10.vars || e10).palette[n].dark
        }
      }
    })), {
      props: {
        clickable: true
      },
      style: {
        userSelect: "none",
        WebkitTapHighlightColor: "transparent",
        cursor: "pointer",
        "&:hover": {
          backgroundColor: e10.vars ? `rgba(${e10.vars.palette.action.selectedChannel} / calc(${e10.vars.palette.action.selectedOpacity} + ${e10.vars.palette.action.hoverOpacity}))` : We(e10.palette.action.selected, e10.palette.action.selectedOpacity + e10.palette.action.hoverOpacity)
        },
        [`&.${yt.focusVisible}`]: {
          backgroundColor: e10.vars ? `rgba(${e10.vars.palette.action.selectedChannel} / calc(${e10.vars.palette.action.selectedOpacity} + ${e10.vars.palette.action.focusOpacity}))` : We(e10.palette.action.selected, e10.palette.action.selectedOpacity + e10.palette.action.focusOpacity)
        },
        "&:active": {
          boxShadow: (e10.vars || e10).shadows[1]
        }
      }
    }, ...Object.entries(e10.palette).filter(Rt(["dark"])).map(([n]) => ({
      props: {
        color: n,
        clickable: true
      },
      style: {
        [`&:hover, &.${yt.focusVisible}`]: {
          backgroundColor: (e10.vars || e10).palette[n].dark
        }
      }
    })), {
      props: {
        variant: "outlined"
      },
      style: {
        backgroundColor: "transparent",
        border: e10.vars ? `1px solid ${e10.vars.palette.Chip.defaultBorder}` : `1px solid ${e10.palette.mode === "light" ? e10.palette.grey[400] : e10.palette.grey[700]}`,
        [`&.${yt.clickable}:hover`]: {
          backgroundColor: (e10.vars || e10).palette.action.hover
        },
        [`&.${yt.focusVisible}`]: {
          backgroundColor: (e10.vars || e10).palette.action.focus
        },
        [`& .${yt.avatar}`]: {
          marginLeft: 4
        },
        [`& .${yt.avatarSmall}`]: {
          marginLeft: 2
        },
        [`& .${yt.icon}`]: {
          marginLeft: 4
        },
        [`& .${yt.iconSmall}`]: {
          marginLeft: 2
        },
        [`& .${yt.deleteIcon}`]: {
          marginRight: 5
        },
        [`& .${yt.deleteIconSmall}`]: {
          marginRight: 3
        }
      }
    }, ...Object.entries(e10.palette).filter(Rt()).map(([n]) => ({
      props: {
        variant: "outlined",
        color: n
      },
      style: {
        color: (e10.vars || e10).palette[n].main,
        border: `1px solid ${e10.vars ? `rgba(${e10.vars.palette[n].mainChannel} / 0.7)` : We(e10.palette[n].main, 0.7)}`,
        [`&.${yt.clickable}:hover`]: {
          backgroundColor: e10.vars ? `rgba(${e10.vars.palette[n].mainChannel} / ${e10.vars.palette.action.hoverOpacity})` : We(e10.palette[n].main, e10.palette.action.hoverOpacity)
        },
        [`&.${yt.focusVisible}`]: {
          backgroundColor: e10.vars ? `rgba(${e10.vars.palette[n].mainChannel} / ${e10.vars.palette.action.focusOpacity})` : We(e10.palette[n].main, e10.palette.action.focusOpacity)
        },
        [`& .${yt.deleteIcon}`]: {
          color: e10.vars ? `rgba(${e10.vars.palette[n].mainChannel} / 0.7)` : We(e10.palette[n].main, 0.7),
          "&:hover, &:active": {
            color: (e10.vars || e10).palette[n].main
          }
        }
      }
    }))]
  };
}));
var UM = K("span", {
  name: "MuiChip",
  slot: "Label",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10, {
      size: o
    } = n;
    return [t.label, t[`label${de(o)}`]];
  }
})({
  overflow: "hidden",
  textOverflow: "ellipsis",
  paddingLeft: 12,
  paddingRight: 12,
  whiteSpace: "nowrap",
  variants: [{
    props: {
      variant: "outlined"
    },
    style: {
      paddingLeft: 11,
      paddingRight: 11
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      paddingLeft: 8,
      paddingRight: 8
    }
  }, {
    props: {
      size: "small",
      variant: "outlined"
    },
    style: {
      paddingLeft: 7,
      paddingRight: 7
    }
  }]
});
function sv(e10) {
  return e10.key === "Backspace" || e10.key === "Delete";
}
var Ms = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiChip"
  }), {
    avatar: r,
    className: s,
    clickable: a,
    color: l = "default",
    component: c,
    deleteIcon: u,
    disabled: d = false,
    icon: p,
    label: m,
    onClick: g,
    onDelete: b,
    onKeyDown: v,
    onKeyUp: h,
    size: y = "medium",
    variant: C = "filled",
    tabIndex: x,
    skipFocusWhenDisabled: T = false,
    // TODO v6: Rename to `focusableWhenDisabled`.
    ...w
  } = o, R = S.useRef(null), E = Jt(R, n), O = ($) => {
    $.stopPropagation(), b && b($);
  }, I = ($) => {
    $.currentTarget === $.target && sv($) && $.preventDefault(), v && v($);
  }, P = ($) => {
    $.currentTarget === $.target && b && sv($) && b($), h && h($);
  }, A = a !== false && g ? true : a, M = A || b ? Ro : c || "div", F = {
    ...o,
    component: M,
    disabled: d,
    size: y,
    color: l,
    iconColor: S.isValidElement(p) && p.props.color || l,
    onDelete: !!b,
    clickable: A,
    variant: C
  }, D = HM(F), N = M === Ro ? {
    component: c || "div",
    focusVisibleClassName: D.focusVisible,
    ...b && {
      disableRipple: true
    }
  } : {};
  let j = null;
  b && (j = u && S.isValidElement(u) ? S.cloneElement(u, {
    className: be(u.props.className, D.deleteIcon),
    onClick: O
  }) : f.jsx(zM, {
    className: be(D.deleteIcon),
    onClick: O
  }));
  let _ = null;
  r && S.isValidElement(r) && (_ = S.cloneElement(r, {
    className: be(D.avatar, r.props.className)
  }));
  let z = null;
  return p && S.isValidElement(p) && (z = S.cloneElement(p, {
    className: be(D.icon, p.props.className)
  })), _ && z && console.error("MUI: The Chip component can not handle the avatar and the icon prop at the same time. Pick one."), f.jsxs(GM, {
    as: M,
    className: be(D.root, s),
    disabled: A && d ? true : void 0,
    onClick: g,
    onKeyDown: I,
    onKeyUp: P,
    ref: E,
    tabIndex: T && d ? -1 : x,
    ownerState: F,
    ...N,
    ...w,
    children: [_ || z, f.jsx(UM, {
      className: be(D.label),
      ownerState: F,
      children: m
    }), j]
  });
});
Ms.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The Avatar element to display.
   */
  avatar: i.element,
  /**
   * This prop isn't supported.
   * Use the `component` prop if you need to change the children structure.
   */
  children: qx,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * If `true`, the chip will appear clickable, and will raise when pressed,
   * even if the onClick prop is not defined.
   * If `false`, the chip will not appear clickable, even if onClick prop is defined.
   * This can be used, for example,
   * along with the component prop to indicate an anchor Chip is clickable.
   * Note: this controls the UI and does not affect the onClick event.
   */
  clickable: i.bool,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: i.oneOfType([i.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * Override the default delete icon element. Shown only if `onDelete` is set.
   */
  deleteIcon: i.element,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * Icon element.
   */
  icon: i.element,
  /**
   * The content of the component.
   */
  label: i.node,
  /**
   * @ignore
   */
  onClick: i.func,
  /**
   * Callback fired when the delete icon is clicked.
   * If set, the delete icon will be shown.
   */
  onDelete: i.func,
  /**
   * @ignore
   */
  onKeyDown: i.func,
  /**
   * @ignore
   */
  onKeyUp: i.func,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * If `true`, allows the disabled chip to escape focus.
   * If `false`, allows the disabled chip to receive focus.
   * @default false
   */
  skipFocusWhenDisabled: i.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * @ignore
   */
  tabIndex: i.number,
  /**
   * The variant to use.
   * @default 'filled'
   */
  variant: i.oneOfType([i.oneOf(["filled", "outlined"]), i.string])
};
function Kl(e10) {
  return parseInt(e10, 10) || 0;
}
var XM = {
  shadow: {
    // Visibility needed to hide the extra text area on iPads
    visibility: "hidden",
    // Remove from the content flow
    position: "absolute",
    // Ignore the scrollbar width
    overflow: "hidden",
    height: 0,
    top: 0,
    left: 0,
    // Create a new layer, increase the isolation of the computed values
    transform: "translateZ(0)"
  }
};
function YM(e10) {
  return e10 == null || Object.keys(e10).length === 0 || e10.outerHeightStyle === 0 && !e10.overflowing;
}
var DC = S.forwardRef(function(t, n) {
  const {
    onChange: o,
    maxRows: r,
    minRows: s = 1,
    style: a,
    value: l,
    ...c
  } = t, {
    current: u
  } = S.useRef(l != null), d = S.useRef(null), p = Jt(n, d), m = S.useRef(null), g = S.useRef(null), b = S.useCallback(() => {
    const y = d.current, x = Rr(y).getComputedStyle(y);
    if (x.width === "0px")
      return {
        outerHeightStyle: 0,
        overflowing: false
      };
    const T = g.current;
    T.style.width = x.width, T.value = y.value || t.placeholder || "x", T.value.slice(-1) === `
` && (T.value += " ");
    const w = x.boxSizing, R = Kl(x.paddingBottom) + Kl(x.paddingTop), E = Kl(x.borderBottomWidth) + Kl(x.borderTopWidth), O = T.scrollHeight;
    T.value = "x";
    const I = T.scrollHeight;
    let P = O;
    s && (P = Math.max(Number(s) * I, P)), r && (P = Math.min(Number(r) * I, P)), P = Math.max(P, I);
    const A = P + (w === "border-box" ? R + E : 0), M = Math.abs(P - O) <= 1;
    return {
      outerHeightStyle: A,
      overflowing: M
    };
  }, [r, s, t.placeholder]), v = S.useCallback(() => {
    const y = b();
    if (YM(y))
      return;
    const C = y.outerHeightStyle, x = d.current;
    m.current !== C && (m.current = C, x.style.height = `${C}px`), x.style.overflow = y.overflowing ? "hidden" : "";
  }, [b]);
  ao(() => {
    const y = () => {
      v();
    };
    let C;
    const x = () => {
      cancelAnimationFrame(C), C = requestAnimationFrame(() => {
        y();
      });
    }, T = zs(y), w = d.current, R = Rr(w);
    R.addEventListener("resize", T);
    let E;
    return typeof ResizeObserver < "u" && (E = new ResizeObserver(false ? x : y), E.observe(w)), () => {
      T.clear(), cancelAnimationFrame(C), R.removeEventListener("resize", T), E && E.disconnect();
    };
  }, [b, v]), ao(() => {
    v();
  });
  const h = (y) => {
    u || v(), o && o(y);
  };
  return f.jsxs(S.Fragment, {
    children: [f.jsx("textarea", {
      value: l,
      onChange: h,
      ref: p,
      rows: s,
      style: a,
      ...c
    }), f.jsx("textarea", {
      "aria-hidden": true,
      className: t.className,
      readOnly: true,
      ref: g,
      tabIndex: -1,
      style: {
        ...XM.shadow,
        ...a,
        paddingTop: 0,
        paddingBottom: 0
      }
    })]
  });
});
DC.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  className: i.string,
  /**
   * Maximum number of rows to display.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display.
   * @default 1
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * @ignore
   */
  onChange: i.func,
  /**
   * @ignore
   */
  placeholder: i.string,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * @ignore
   */
  value: i.oneOfType([i.arrayOf(i.string), i.number, i.string])
};
function Cr(e10) {
  return typeof e10 == "string";
}
function Vi({
  props: e10,
  states: t,
  muiFormControl: n
}) {
  return t.reduce((o, r) => (o[r] = e10[r], n && typeof e10[r] > "u" && (o[r] = n[r]), o), {});
}
var Al = S.createContext(void 0);
Al.displayName = "FormControlContext";
function Jn() {
  return S.useContext(Al);
}
function av(e10) {
  return e10 != null && !(Array.isArray(e10) && e10.length === 0);
}
function nu(e10, t = false) {
  return e10 && (av(e10.value) && e10.value !== "" || t && av(e10.defaultValue) && e10.defaultValue !== "");
}
function ZM(e10) {
  return e10.startAdornment;
}
function qM(e10) {
  return He("MuiInputBase", e10);
}
var eo = Be("MuiInputBase", ["root", "formControl", "focused", "disabled", "adornedStart", "adornedEnd", "error", "sizeSmall", "multiline", "colorSecondary", "fullWidth", "hiddenLabel", "readOnly", "input", "inputSizeSmall", "inputMultiline", "inputTypeSearch", "inputAdornedStart", "inputAdornedEnd", "inputHiddenLabel"]);
var lv;
var Ku = (e10, t) => {
  const {
    ownerState: n
  } = e10;
  return [t.root, n.formControl && t.formControl, n.startAdornment && t.adornedStart, n.endAdornment && t.adornedEnd, n.error && t.error, n.size === "small" && t.sizeSmall, n.multiline && t.multiline, n.color && t[`color${de(n.color)}`], n.fullWidth && t.fullWidth, n.hiddenLabel && t.hiddenLabel];
};
var Qu = (e10, t) => {
  const {
    ownerState: n
  } = e10;
  return [t.input, n.size === "small" && t.inputSizeSmall, n.multiline && t.inputMultiline, n.type === "search" && t.inputTypeSearch, n.startAdornment && t.inputAdornedStart, n.endAdornment && t.inputAdornedEnd, n.hiddenLabel && t.inputHiddenLabel];
};
var JM = (e10) => {
  const {
    classes: t,
    color: n,
    disabled: o,
    error: r,
    endAdornment: s,
    focused: a,
    formControl: l,
    fullWidth: c,
    hiddenLabel: u,
    multiline: d,
    readOnly: p,
    size: m,
    startAdornment: g,
    type: b
  } = e10, v = {
    root: ["root", `color${de(n)}`, o && "disabled", r && "error", c && "fullWidth", a && "focused", l && "formControl", m && m !== "medium" && `size${de(m)}`, d && "multiline", g && "adornedStart", s && "adornedEnd", u && "hiddenLabel", p && "readOnly"],
    input: ["input", o && "disabled", b === "search" && "inputTypeSearch", d && "inputMultiline", m === "small" && "inputSizeSmall", u && "inputHiddenLabel", g && "inputAdornedStart", s && "inputAdornedEnd", p && "readOnly"]
  };
  return Ue(v, qM, t);
};
var ed = K("div", {
  name: "MuiInputBase",
  slot: "Root",
  overridesResolver: Ku
})(Ve(({
  theme: e10
}) => ({
  ...e10.typography.body1,
  color: (e10.vars || e10).palette.text.primary,
  lineHeight: "1.4375em",
  // 23px
  boxSizing: "border-box",
  // Prevent padding issue with fullWidth.
  position: "relative",
  cursor: "text",
  display: "inline-flex",
  alignItems: "center",
  [`&.${eo.disabled}`]: {
    color: (e10.vars || e10).palette.text.disabled,
    cursor: "default"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: "4px 0 5px"
    }
  }, {
    props: ({
      ownerState: t,
      size: n
    }) => t.multiline && n === "small",
    style: {
      paddingTop: 1
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      width: "100%"
    }
  }]
})));
var td = K("input", {
  name: "MuiInputBase",
  slot: "Input",
  overridesResolver: Qu
})(Ve(({
  theme: e10
}) => {
  const t = e10.palette.mode === "light", n = {
    color: "currentColor",
    ...e10.vars ? {
      opacity: e10.vars.opacity.inputPlaceholder
    } : {
      opacity: t ? 0.42 : 0.5
    },
    transition: e10.transitions.create("opacity", {
      duration: e10.transitions.duration.shorter
    })
  }, o = {
    opacity: "0 !important"
  }, r = e10.vars ? {
    opacity: e10.vars.opacity.inputPlaceholder
  } : {
    opacity: t ? 0.42 : 0.5
  };
  return {
    font: "inherit",
    letterSpacing: "inherit",
    color: "currentColor",
    padding: "4px 0 5px",
    border: 0,
    boxSizing: "content-box",
    background: "none",
    height: "1.4375em",
    // Reset 23pxthe native input line-height
    margin: 0,
    // Reset for Safari
    WebkitTapHighlightColor: "transparent",
    display: "block",
    // Make the flex item shrink with Firefox
    minWidth: 0,
    width: "100%",
    "&::-webkit-input-placeholder": n,
    "&::-moz-placeholder": n,
    // Firefox 19+
    "&::-ms-input-placeholder": n,
    // Edge
    "&:focus": {
      outline: 0
    },
    // Reset Firefox invalid required input style
    "&:invalid": {
      boxShadow: "none"
    },
    "&::-webkit-search-decoration": {
      // Remove the padding when type=search.
      WebkitAppearance: "none"
    },
    // Show and hide the placeholder logic
    [`label[data-shrink=false] + .${eo.formControl} &`]: {
      "&::-webkit-input-placeholder": o,
      "&::-moz-placeholder": o,
      // Firefox 19+
      "&::-ms-input-placeholder": o,
      // Edge
      "&:focus::-webkit-input-placeholder": r,
      "&:focus::-moz-placeholder": r,
      // Firefox 19+
      "&:focus::-ms-input-placeholder": r
      // Edge
    },
    [`&.${eo.disabled}`]: {
      opacity: 1,
      // Reset iOS opacity
      WebkitTextFillColor: (e10.vars || e10).palette.text.disabled
      // Fix opacity Safari bug
    },
    variants: [{
      props: ({
        ownerState: s
      }) => !s.disableInjectingGlobalStyles,
      style: {
        animationName: "mui-auto-fill-cancel",
        animationDuration: "10ms",
        "&:-webkit-autofill": {
          animationDuration: "5000s",
          animationName: "mui-auto-fill"
        }
      }
    }, {
      props: {
        size: "small"
      },
      style: {
        paddingTop: 1
      }
    }, {
      props: ({
        ownerState: s
      }) => s.multiline,
      style: {
        height: "auto",
        resize: "none",
        padding: 0,
        paddingTop: 0
      }
    }, {
      props: {
        type: "search"
      },
      style: {
        MozAppearance: "textfield"
        // Improve type search style.
      }
    }]
  };
}));
var cv = uj({
  "@keyframes mui-auto-fill": {
    from: {
      display: "block"
    }
  },
  "@keyframes mui-auto-fill-cancel": {
    from: {
      display: "block"
    }
  }
});
var nd = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiInputBase"
  }), {
    "aria-describedby": r,
    autoComplete: s,
    autoFocus: a,
    className: l,
    color: c,
    components: u = {},
    componentsProps: d = {},
    defaultValue: p,
    disabled: m,
    disableInjectingGlobalStyles: g,
    endAdornment: b,
    error: v,
    fullWidth: h = false,
    id: y,
    inputComponent: C = "input",
    inputProps: x = {},
    inputRef: T,
    margin: w,
    maxRows: R,
    minRows: E,
    multiline: O = false,
    name: I,
    onBlur: P,
    onChange: A,
    onClick: M,
    onFocus: F,
    onKeyDown: D,
    onKeyUp: N,
    placeholder: j,
    readOnly: _,
    renderSuffix: z,
    rows: $,
    size: k,
    slotProps: B = {},
    slots: Q = {},
    startAdornment: ee,
    type: G = "text",
    value: H,
    ...Y
  } = o, J = x.value != null ? x.value : H, {
    current: U
  } = S.useRef(J != null), ne = S.useRef(), se = S.useCallback((Ae) => {
    Ae && Ae.nodeName !== "INPUT" && !Ae.focus && console.error(["MUI: You have provided a `inputComponent` to the input component", "that does not correctly handle the `ref` prop.", "Make sure the `ref` prop is called with a HTMLInputElement."].join(`
`));
  }, []), oe = Jt(ne, T, x.ref, se), [W, Z] = S.useState(false), L = Jn();
  S.useEffect(() => {
    if (L)
      return L.registerEffect();
  }, [L]);
  const ie = Vi({
    props: o,
    muiFormControl: L,
    states: ["color", "disabled", "error", "hiddenLabel", "size", "required", "filled"]
  });
  ie.focused = L ? L.focused : W, S.useEffect(() => {
    !L && m && W && (Z(false), P && P());
  }, [L, m, W, P]);
  const te = L && L.onFilled, le = L && L.onEmpty, ue = S.useCallback((Ae) => {
    nu(Ae) ? te && te() : le && le();
  }, [te, le]);
  ao(() => {
    U && ue({
      value: J
    });
  }, [J, ue, U]);
  const ve = (Ae) => {
    F && F(Ae), x.onFocus && x.onFocus(Ae), L && L.onFocus ? L.onFocus(Ae) : Z(true);
  }, Te = (Ae) => {
    P && P(Ae), x.onBlur && x.onBlur(Ae), L && L.onBlur ? L.onBlur(Ae) : Z(false);
  }, Re = (Ae, ...tt) => {
    if (!U) {
      const Ze = Ae.target || ne.current;
      if (Ze == null)
        throw new Error(true ? "MUI: Expected valid input target. Did you use a custom `inputComponent` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info." : or(1));
      ue({
        value: Ze.value
      });
    }
    x.onChange && x.onChange(Ae, ...tt), A && A(Ae, ...tt);
  };
  S.useEffect(() => {
    ue(ne.current);
  }, []);
  const re = (Ae) => {
    ne.current && Ae.currentTarget === Ae.target && ne.current.focus(), M && M(Ae);
  };
  let X = C, ae = x;
  O && X === "input" && ($ ? ((E || R) && console.warn("MUI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set."), ae = {
    type: void 0,
    minRows: $,
    maxRows: $,
    ...ae
  }) : ae = {
    type: void 0,
    maxRows: R,
    minRows: E,
    ...ae
  }, X = DC);
  const ce = (Ae) => {
    ue(Ae.animationName === "mui-auto-fill-cancel" ? ne.current : {
      value: "x"
    });
  };
  S.useEffect(() => {
    L && L.setAdornedStart(!!ee);
  }, [L, ee]);
  const ge = {
    ...o,
    color: ie.color || "primary",
    disabled: ie.disabled,
    endAdornment: b,
    error: ie.error,
    focused: ie.focused,
    formControl: L,
    fullWidth: h,
    hiddenLabel: ie.hiddenLabel,
    multiline: O,
    size: ie.size,
    startAdornment: ee,
    type: G
  }, Se = JM(ge), ye = Q.root || u.Root || ed, Ee = B.root || d.root || {}, Le = Q.input || u.Input || td;
  return ae = {
    ...ae,
    ...B.input ?? d.input
  }, f.jsxs(S.Fragment, {
    children: [!g && typeof cv == "function" && // For Emotion/Styled-components, InputGlobalStyles will be a function
    // For Pigment CSS, this has no effect because the InputGlobalStyles will be null.
    (lv || (lv = f.jsx(cv, {}))), f.jsxs(ye, {
      ...Ee,
      ref: n,
      onClick: re,
      ...Y,
      ...!Cr(ye) && {
        ownerState: {
          ...ge,
          ...Ee.ownerState
        }
      },
      className: be(Se.root, Ee.className, l, _ && "MuiInputBase-readOnly"),
      children: [ee, f.jsx(Al.Provider, {
        value: null,
        children: f.jsx(Le, {
          "aria-invalid": ie.error,
          "aria-describedby": r,
          autoComplete: s,
          autoFocus: a,
          defaultValue: p,
          disabled: ie.disabled,
          id: y,
          onAnimationStart: ce,
          name: I,
          placeholder: j,
          readOnly: _,
          required: ie.required,
          rows: $,
          value: J,
          onKeyDown: D,
          onKeyUp: N,
          type: G,
          ...ae,
          ...!Cr(Le) && {
            as: X,
            ownerState: {
              ...ge,
              ...ae.ownerState
            }
          },
          ref: oe,
          className: be(Se.input, ae.className, _ && "MuiInputBase-readOnly"),
          onBlur: Te,
          onChange: Re,
          onFocus: ve
        })
      }), b, z ? z({
        ...ie,
        startAdornment: ee
      }) : null]
    })]
  });
});
nd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  "aria-describedby": i.string,
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: i.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Input: i.elementType,
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: i.bool,
  /**
   * If `true`, GlobalStyles for the auto-fill keyframes will not be injected/removed on mount/unmount. Make sure to inject them at the top of your application.
   * This option is intended to help with boosting the initial rendering performance if you are loading a big amount of Input components at once.
   * @default false
   */
  disableInjectingGlobalStyles: i.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: i.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: i.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: Rl,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: On,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: i.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: i.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * Callback fired when the `input` is blurred.
   *
   * Notice that the first argument (event) might be undefined.
   */
  onBlur: i.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * @ignore
   */
  onClick: i.func,
  /**
   * @ignore
   */
  onFocus: i.func,
  /**
   * Callback fired when the `input` doesn't satisfy its constraints.
   */
  onInvalid: i.func,
  /**
   * @ignore
   */
  onKeyDown: i.func,
  /**
   * @ignore
   */
  onKeyUp: i.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: i.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: i.bool,
  /**
   * @ignore
   */
  renderSuffix: i.func,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: i.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: i.oneOfType([i.number, i.string]),
  /**
   * The size of the component.
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: i.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: i.any
};
function KM(e10) {
  return He("MuiInput", e10);
}
var zr = {
  ...eo,
  ...Be("MuiInput", ["root", "underline", "input"])
};
function QM(e10) {
  return He("MuiOutlinedInput", e10);
}
var vo = {
  ...eo,
  ...Be("MuiOutlinedInput", ["root", "notchedOutline", "input"])
};
function ek(e10) {
  return He("MuiFilledInput", e10);
}
var to = {
  ...eo,
  ...Be("MuiFilledInput", ["root", "underline", "input", "adornedStart", "adornedEnd", "sizeSmall", "multiline", "hiddenLabel"])
};
var MC = ze(f.jsx("path", {
  d: "M7 10l5 5 5-5z"
}), "ArrowDropDown");
function tk(e10) {
  return He("MuiAutocomplete", e10);
}
var ft = Be("MuiAutocomplete", ["root", "expanded", "fullWidth", "focused", "focusVisible", "tag", "tagSizeSmall", "tagSizeMedium", "hasPopupIcon", "hasClearIcon", "inputRoot", "input", "inputFocused", "endAdornment", "clearIndicator", "popupIndicator", "popupIndicatorOpen", "popper", "popperDisablePortal", "paper", "listbox", "loading", "noOptions", "option", "groupLabel", "groupUl"]);
var uv;
var dv;
var nk = (e10) => {
  const {
    classes: t,
    disablePortal: n,
    expanded: o,
    focused: r,
    fullWidth: s,
    hasClearIcon: a,
    hasPopupIcon: l,
    inputFocused: c,
    popupOpen: u,
    size: d
  } = e10, p = {
    root: ["root", o && "expanded", r && "focused", s && "fullWidth", a && "hasClearIcon", l && "hasPopupIcon"],
    inputRoot: ["inputRoot"],
    input: ["input", c && "inputFocused"],
    tag: ["tag", `tagSize${de(d)}`],
    endAdornment: ["endAdornment"],
    clearIndicator: ["clearIndicator"],
    popupIndicator: ["popupIndicator", u && "popupIndicatorOpen"],
    popper: ["popper", n && "popperDisablePortal"],
    paper: ["paper"],
    listbox: ["listbox"],
    loading: ["loading"],
    noOptions: ["noOptions"],
    option: ["option"],
    groupLabel: ["groupLabel"],
    groupUl: ["groupUl"]
  };
  return Ue(p, tk, t);
};
var ok = K("div", {
  name: "MuiAutocomplete",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10, {
      fullWidth: o,
      hasClearIcon: r,
      hasPopupIcon: s,
      inputFocused: a,
      size: l
    } = n;
    return [{
      [`& .${ft.tag}`]: t.tag
    }, {
      [`& .${ft.tag}`]: t[`tagSize${de(l)}`]
    }, {
      [`& .${ft.inputRoot}`]: t.inputRoot
    }, {
      [`& .${ft.input}`]: t.input
    }, {
      [`& .${ft.input}`]: a && t.inputFocused
    }, t.root, o && t.fullWidth, s && t.hasPopupIcon, r && t.hasClearIcon];
  }
})({
  [`&.${ft.focused} .${ft.clearIndicator}`]: {
    visibility: "visible"
  },
  /* Avoid double tap issue on iOS */
  "@media (pointer: fine)": {
    [`&:hover .${ft.clearIndicator}`]: {
      visibility: "visible"
    }
  },
  [`& .${ft.tag}`]: {
    margin: 3,
    maxWidth: "calc(100% - 6px)"
  },
  [`& .${ft.inputRoot}`]: {
    [`.${ft.hasPopupIcon}&, .${ft.hasClearIcon}&`]: {
      paddingRight: 30
    },
    [`.${ft.hasPopupIcon}.${ft.hasClearIcon}&`]: {
      paddingRight: 56
    },
    [`& .${ft.input}`]: {
      width: 0,
      minWidth: 30
    }
  },
  [`& .${zr.root}`]: {
    paddingBottom: 1,
    "& .MuiInput-input": {
      padding: "4px 4px 4px 0px"
    }
  },
  [`& .${zr.root}.${eo.sizeSmall}`]: {
    [`& .${zr.input}`]: {
      padding: "2px 4px 3px 0"
    }
  },
  [`& .${vo.root}`]: {
    padding: 9,
    [`.${ft.hasPopupIcon}&, .${ft.hasClearIcon}&`]: {
      paddingRight: 39
    },
    [`.${ft.hasPopupIcon}.${ft.hasClearIcon}&`]: {
      paddingRight: 65
    },
    [`& .${ft.input}`]: {
      padding: "7.5px 4px 7.5px 5px"
    },
    [`& .${ft.endAdornment}`]: {
      right: 9
    }
  },
  [`& .${vo.root}.${eo.sizeSmall}`]: {
    // Don't specify paddingRight, as it overrides the default value set when there is only
    // one of the popup or clear icon as the specificity is equal so the latter one wins
    paddingTop: 6,
    paddingBottom: 6,
    paddingLeft: 6,
    [`& .${ft.input}`]: {
      padding: "2.5px 4px 2.5px 8px"
    }
  },
  [`& .${to.root}`]: {
    paddingTop: 19,
    paddingLeft: 8,
    [`.${ft.hasPopupIcon}&, .${ft.hasClearIcon}&`]: {
      paddingRight: 39
    },
    [`.${ft.hasPopupIcon}.${ft.hasClearIcon}&`]: {
      paddingRight: 65
    },
    [`& .${to.input}`]: {
      padding: "7px 4px"
    },
    [`& .${ft.endAdornment}`]: {
      right: 9
    }
  },
  [`& .${to.root}.${eo.sizeSmall}`]: {
    paddingBottom: 1,
    [`& .${to.input}`]: {
      padding: "2.5px 4px"
    }
  },
  [`& .${eo.hiddenLabel}`]: {
    paddingTop: 8
  },
  [`& .${to.root}.${eo.hiddenLabel}`]: {
    paddingTop: 0,
    paddingBottom: 0,
    [`& .${ft.input}`]: {
      paddingTop: 16,
      paddingBottom: 17
    }
  },
  [`& .${to.root}.${eo.hiddenLabel}.${eo.sizeSmall}`]: {
    [`& .${ft.input}`]: {
      paddingTop: 8,
      paddingBottom: 9
    }
  },
  [`& .${ft.input}`]: {
    flexGrow: 1,
    textOverflow: "ellipsis",
    opacity: 0
  },
  variants: [{
    props: {
      fullWidth: true
    },
    style: {
      width: "100%"
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      [`& .${ft.tag}`]: {
        margin: 2,
        maxWidth: "calc(100% - 4px)"
      }
    }
  }, {
    props: {
      inputFocused: true
    },
    style: {
      [`& .${ft.input}`]: {
        opacity: 1
      }
    }
  }, {
    props: {
      multiple: true
    },
    style: {
      [`& .${ft.inputRoot}`]: {
        flexWrap: "wrap"
      }
    }
  }]
});
var rk = K("div", {
  name: "MuiAutocomplete",
  slot: "EndAdornment",
  overridesResolver: (e10, t) => t.endAdornment
})({
  // We use a position absolute to support wrapping tags.
  position: "absolute",
  right: 0,
  top: "50%",
  transform: "translate(0, -50%)"
});
var ik = K(lt, {
  name: "MuiAutocomplete",
  slot: "ClearIndicator",
  overridesResolver: (e10, t) => t.clearIndicator
})({
  marginRight: -2,
  padding: 4,
  visibility: "hidden"
});
var sk = K(lt, {
  name: "MuiAutocomplete",
  slot: "PopupIndicator",
  overridesResolver: ({
    ownerState: e10
  }, t) => ({
    ...t.popupIndicator,
    ...e10.popupOpen && t.popupIndicatorOpen
  })
})({
  padding: 2,
  marginRight: -2,
  variants: [{
    props: {
      popupOpen: true
    },
    style: {
      transform: "rotate(180deg)"
    }
  }]
});
var ak = K(Gs, {
  name: "MuiAutocomplete",
  slot: "Popper",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [{
      [`& .${ft.option}`]: t.option
    }, t.popper, n.disablePortal && t.popperDisablePortal];
  }
})(Ve(({
  theme: e10
}) => ({
  zIndex: (e10.vars || e10).zIndex.modal,
  variants: [{
    props: {
      disablePortal: true
    },
    style: {
      position: "absolute"
    }
  }]
})));
var lk = K(vn, {
  name: "MuiAutocomplete",
  slot: "Paper",
  overridesResolver: (e10, t) => t.paper
})(Ve(({
  theme: e10
}) => ({
  ...e10.typography.body1,
  overflow: "auto"
})));
var ck = K("div", {
  name: "MuiAutocomplete",
  slot: "Loading",
  overridesResolver: (e10, t) => t.loading
})(Ve(({
  theme: e10
}) => ({
  color: (e10.vars || e10).palette.text.secondary,
  padding: "14px 16px"
})));
var uk = K("div", {
  name: "MuiAutocomplete",
  slot: "NoOptions",
  overridesResolver: (e10, t) => t.noOptions
})(Ve(({
  theme: e10
}) => ({
  color: (e10.vars || e10).palette.text.secondary,
  padding: "14px 16px"
})));
var dk = K("div", {
  name: "MuiAutocomplete",
  slot: "Listbox",
  overridesResolver: (e10, t) => t.listbox
})(Ve(({
  theme: e10
}) => ({
  listStyle: "none",
  margin: 0,
  padding: "8px 0",
  maxHeight: "40vh",
  overflow: "auto",
  position: "relative",
  [`& .${ft.option}`]: {
    minHeight: 48,
    display: "flex",
    overflow: "hidden",
    justifyContent: "flex-start",
    alignItems: "center",
    cursor: "pointer",
    paddingTop: 6,
    boxSizing: "border-box",
    outline: "0",
    WebkitTapHighlightColor: "transparent",
    paddingBottom: 6,
    paddingLeft: 16,
    paddingRight: 16,
    [e10.breakpoints.up("sm")]: {
      minHeight: "auto"
    },
    [`&.${ft.focused}`]: {
      backgroundColor: (e10.vars || e10).palette.action.hover,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    },
    '&[aria-disabled="true"]': {
      opacity: (e10.vars || e10).palette.action.disabledOpacity,
      pointerEvents: "none"
    },
    [`&.${ft.focusVisible}`]: {
      backgroundColor: (e10.vars || e10).palette.action.focus
    },
    '&[aria-selected="true"]': {
      backgroundColor: e10.vars ? `rgba(${e10.vars.palette.primary.mainChannel} / ${e10.vars.palette.action.selectedOpacity})` : We(e10.palette.primary.main, e10.palette.action.selectedOpacity),
      [`&.${ft.focused}`]: {
        backgroundColor: e10.vars ? `rgba(${e10.vars.palette.primary.mainChannel} / calc(${e10.vars.palette.action.selectedOpacity} + ${e10.vars.palette.action.hoverOpacity}))` : We(e10.palette.primary.main, e10.palette.action.selectedOpacity + e10.palette.action.hoverOpacity),
        // Reset on touch devices, it doesn't add specificity
        "@media (hover: none)": {
          backgroundColor: (e10.vars || e10).palette.action.selected
        }
      },
      [`&.${ft.focusVisible}`]: {
        backgroundColor: e10.vars ? `rgba(${e10.vars.palette.primary.mainChannel} / calc(${e10.vars.palette.action.selectedOpacity} + ${e10.vars.palette.action.focusOpacity}))` : We(e10.palette.primary.main, e10.palette.action.selectedOpacity + e10.palette.action.focusOpacity)
      }
    }
  }
})));
var pk = K(tu, {
  name: "MuiAutocomplete",
  slot: "GroupLabel",
  overridesResolver: (e10, t) => t.groupLabel
})(Ve(({
  theme: e10
}) => ({
  backgroundColor: (e10.vars || e10).palette.background.paper,
  top: -8
})));
var fk = K("ul", {
  name: "MuiAutocomplete",
  slot: "GroupUl",
  overridesResolver: (e10, t) => t.groupUl
})({
  padding: 0,
  [`& .${ft.option}`]: {
    paddingLeft: 24
  }
});
var kC = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiAutocomplete"
  }), {
    autoComplete: r = false,
    autoHighlight: s = false,
    autoSelect: a = false,
    blurOnSelect: l = false,
    ChipProps: c,
    className: u,
    clearIcon: d = uv || (uv = f.jsx(vC, {
      fontSize: "small"
    })),
    clearOnBlur: p = !o.freeSolo,
    clearOnEscape: m = false,
    clearText: g = "Clear",
    closeText: b = "Close",
    componentsProps: v,
    defaultValue: h = o.multiple ? [] : null,
    disableClearable: y = false,
    disableCloseOnSelect: C = false,
    disabled: x = false,
    disabledItemsFocusable: T = false,
    disableListWrap: w = false,
    disablePortal: R = false,
    filterOptions: E,
    filterSelectedOptions: O = false,
    forcePopupIcon: I = "auto",
    freeSolo: P = false,
    fullWidth: A = false,
    getLimitTagsText: M = (It) => `+${It}`,
    getOptionDisabled: F,
    getOptionKey: D,
    getOptionLabel: N,
    isOptionEqualToValue: j,
    groupBy: _,
    handleHomeEndKeys: z = !o.freeSolo,
    id: $,
    includeInputInList: k = false,
    inputValue: B,
    limitTags: Q = -1,
    ListboxComponent: ee,
    ListboxProps: G,
    loading: H = false,
    loadingText: Y = "Loading…",
    multiple: J = false,
    noOptionsText: U = "No options",
    onChange: ne,
    onClose: se,
    onHighlightChange: oe,
    onInputChange: W,
    onOpen: Z,
    open: L,
    openOnFocus: ie = false,
    openText: te = "Open",
    options: le,
    PaperComponent: ue,
    PopperComponent: ve,
    popupIcon: Te = dv || (dv = f.jsx(MC, {})),
    readOnly: Re = false,
    renderGroup: re,
    renderInput: X,
    renderOption: ae,
    renderTags: ce,
    selectOnFocus: ge = !o.freeSolo,
    size: Se = "medium",
    slots: ye = {},
    slotProps: Ee = {},
    value: Le,
    ...Ae
  } = o, {
    getRootProps: tt,
    getInputProps: Ze,
    getInputLabelProps: ut,
    getPopupIndicatorProps: me,
    getClearProps: Oe,
    getTagProps: he,
    getListboxProps: Me,
    getOptionProps: ke,
    value: st,
    dirty: pt,
    expanded: it,
    id: xt,
    popupOpen: Kt,
    focused: wn,
    focusedTag: Qt,
    anchorEl: ot,
    setAnchorEl: dn,
    inputValue: dr,
    groupedOptions: Ho
  } = TD({
    ...o,
    componentName: "Autocomplete"
  }), pr = !y && !x && pt && !Re, Go = (!P || I === true) && I !== false, {
    onMouseDown: qe
  } = Ze(), {
    ref: kr,
    ...Ht
  } = Me(), hn = N || ((It) => It.label ?? It), q = {
    ...o,
    disablePortal: R,
    expanded: it,
    focused: wn,
    fullWidth: A,
    getOptionLabel: hn,
    hasClearIcon: pr,
    hasPopupIcon: Go,
    inputFocused: Qt === -1,
    popupOpen: Kt,
    size: Se
  }, Ce = nk(q), Ne = {
    slots: {
      listbox: ee,
      paper: ue,
      popper: ve,
      ...ye
    },
    slotProps: {
      chip: c,
      listbox: G,
      ...v,
      ...Ee
    }
  }, [pe, fe] = sn("listbox", {
    elementType: "ul",
    externalForwardedProps: Ne,
    ownerState: q,
    className: Ce.listbox,
    additionalProps: Ht,
    ref: kr
  }), [Pe, _e] = sn("paper", {
    elementType: vn,
    externalForwardedProps: Ne,
    ownerState: q,
    className: Ce.paper
  }), [$e, ct] = sn("popper", {
    elementType: Gs,
    externalForwardedProps: Ne,
    ownerState: q,
    className: Ce.popper,
    additionalProps: {
      disablePortal: R,
      style: {
        width: ot ? ot.clientWidth : null
      },
      role: "presentation",
      anchorEl: ot,
      open: Kt
    }
  });
  let rt;
  if (J && st.length > 0) {
    const It = (Uo) => ({
      className: Ce.tag,
      disabled: x,
      ...he(Uo)
    });
    ce ? rt = ce(st, It, q) : rt = st.map((Uo, Nr) => {
      const {
        key: na,
        ...II
      } = It({
        index: Nr
      });
      return f.jsx(Ms, {
        label: hn(Uo),
        size: Se,
        ...II,
        ...Ne.slotProps.chip
      }, na);
    });
  }
  if (Q > -1 && Array.isArray(rt)) {
    const It = rt.length - Q;
    !wn && It > 0 && (rt = rt.splice(0, Q), rt.push(f.jsx("span", {
      className: Ce.tag,
      children: M(It)
    }, rt.length)));
  }
  const bn = re || ((It) => f.jsxs("li", {
    children: [f.jsx(pk, {
      className: Ce.groupLabel,
      ownerState: q,
      component: "div",
      children: It.group
    }), f.jsx(fk, {
      className: Ce.groupUl,
      ownerState: q,
      children: It.children
    })]
  }, It.key)), fr = ae || ((It, Uo) => {
    const {
      key: Nr,
      ...na
    } = It;
    return f.jsx("li", {
      ...na,
      children: hn(Uo)
    }, Nr);
  }), Tn = (It, Uo) => {
    const Nr = ke({
      option: It,
      index: Uo
    });
    return fr({
      ...Nr,
      className: Ce.option
    }, It, {
      selected: Nr["aria-selected"],
      index: Uo,
      inputValue: dr
    }, q);
  }, Fr = Ne.slotProps.clearIndicator, qi = Ne.slotProps.popupIndicator, ta = (It) => f.jsx(ak, {
    as: $e,
    ...ct,
    children: f.jsx(lk, {
      as: Pe,
      ..._e,
      children: It
    })
  });
  let Wl = null;
  return Ho.length > 0 ? Wl = ta(f.jsx(dk, {
    as: pe,
    ...fe,
    children: Ho.map((It, Uo) => _ ? bn({
      key: It.key,
      group: It.group,
      children: It.options.map((Nr, na) => Tn(Nr, It.index + na))
    }) : Tn(It, Uo))
  })) : H && Ho.length === 0 ? Wl = ta(f.jsx(ck, {
    className: Ce.loading,
    ownerState: q,
    children: Y
  })) : Ho.length === 0 && !P && !H && (Wl = ta(f.jsx(uk, {
    className: Ce.noOptions,
    ownerState: q,
    role: "presentation",
    onMouseDown: (It) => {
      It.preventDefault();
    },
    children: U
  }))), f.jsxs(S.Fragment, {
    children: [f.jsx(ok, {
      ref: n,
      className: be(Ce.root, u),
      ownerState: q,
      ...tt(Ae),
      children: X({
        id: xt,
        disabled: x,
        fullWidth: true,
        size: Se === "small" ? "small" : void 0,
        InputLabelProps: ut(),
        InputProps: {
          ref: dn,
          className: Ce.inputRoot,
          startAdornment: rt,
          onClick: (It) => {
            It.target === It.currentTarget && qe(It);
          },
          ...(pr || Go) && {
            endAdornment: f.jsxs(rk, {
              className: Ce.endAdornment,
              ownerState: q,
              children: [pr ? f.jsx(ik, {
                ...Oe(),
                "aria-label": g,
                title: g,
                ownerState: q,
                ...Fr,
                className: be(Ce.clearIndicator, Fr == null ? void 0 : Fr.className),
                children: d
              }) : null, Go ? f.jsx(sk, {
                ...me(),
                disabled: x,
                "aria-label": Kt ? b : te,
                title: Kt ? b : te,
                ownerState: q,
                ...qi,
                className: be(Ce.popupIndicator, qi == null ? void 0 : qi.className),
                children: Te
              }) : null]
            })
          }
        },
        inputProps: {
          className: Ce.input,
          disabled: x,
          readOnly: Re,
          ...Ze()
        }
      })
    }), ot ? Wl : null]
  });
});
kC.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the portion of the selected suggestion that the user hasn't typed,
   * known as the completion string, appears inline after the input cursor in the textbox.
   * The inline completion string is visually highlighted and has a selected state.
   * @default false
   */
  autoComplete: i.bool,
  /**
   * If `true`, the first option is automatically highlighted.
   * @default false
   */
  autoHighlight: i.bool,
  /**
   * If `true`, the selected option becomes the value of the input
   * when the Autocomplete loses focus unless the user chooses
   * a different option or changes the character string in the input.
   *
   * When using the `freeSolo` mode, the typed value will be the input value
   * if the Autocomplete loses focus without highlighting an option.
   * @default false
   */
  autoSelect: i.bool,
  /**
   * Control if the input should be blurred when an option is selected:
   *
   * - `false` the input is not blurred.
   * - `true` the input is always blurred.
   * - `touch` the input is blurred after a touch event.
   * - `mouse` the input is blurred after a mouse event.
   * @default false
   */
  blurOnSelect: i.oneOfType([i.oneOf(["mouse", "touch"]), i.bool]),
  /**
   * Props applied to the [`Chip`](https://mui.com/material-ui/api/chip/) element.
   */
  ChipProps: i.object,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The icon to display in place of the default clear icon.
   * @default <ClearIcon fontSize="small" />
   */
  clearIcon: i.node,
  /**
   * If `true`, the input's text is cleared on blur if no value is selected.
   *
   * Set it to `true` if you want to help the user enter a new value.
   * Set it to `false` if you want to help the user resume their search.
   * @default !props.freeSolo
   */
  clearOnBlur: i.bool,
  /**
   * If `true`, clear all values when the user presses escape and the popup is closed.
   * @default false
   */
  clearOnEscape: i.bool,
  /**
   * Override the default text for the *clear* icon button.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Clear'
   */
  clearText: i.string,
  /**
   * Override the default text for the *close popup* icon button.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Close'
   */
  closeText: i.string,
  /**
   * The props used for each slot inside.
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  componentsProps: i.shape({
    clearIndicator: i.object,
    paper: i.object,
    popper: i.object,
    popupIndicator: i.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   * @default props.multiple ? [] : null
   */
  defaultValue: co(i.any, (e10) => e10.multiple && e10.defaultValue !== void 0 && !Array.isArray(e10.defaultValue) ? new Error(["MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.", `However, ${e10.defaultValue} was provided.`].join(`
`)) : null),
  /**
   * If `true`, the input can't be cleared.
   * @default false
   */
  disableClearable: i.bool,
  /**
   * If `true`, the popup won't close when a value is selected.
   * @default false
   */
  disableCloseOnSelect: i.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, will allow focus on disabled items.
   * @default false
   */
  disabledItemsFocusable: i.bool,
  /**
   * If `true`, the list box in the popup will not wrap focus.
   * @default false
   */
  disableListWrap: i.bool,
  /**
   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: i.bool,
  /**
   * A function that determines the filtered options to be rendered on search.
   *
   * @default createFilterOptions()
   * @param {Value[]} options The options to render.
   * @param {object} state The state of the component.
   * @returns {Value[]}
   */
  filterOptions: i.func,
  /**
   * If `true`, hide the selected options from the list box.
   * @default false
   */
  filterSelectedOptions: i.bool,
  /**
   * Force the visibility display of the popup icon.
   * @default 'auto'
   */
  forcePopupIcon: i.oneOfType([i.oneOf(["auto"]), i.bool]),
  /**
   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.
   * @default false
   */
  freeSolo: i.bool,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The label to display when the tags are truncated (`limitTags`).
   *
   * @param {number} more The number of truncated tags.
   * @returns {ReactNode}
   * @default (more) => `+${more}`
   */
  getLimitTagsText: i.func,
  /**
   * Used to determine the disabled state for a given option.
   *
   * @param {Value} option The option to test.
   * @returns {boolean}
   */
  getOptionDisabled: i.func,
  /**
   * Used to determine the key for a given option.
   * This can be useful when the labels of options are not unique (since labels are used as keys by default).
   *
   * @param {Value} option The option to get the key for.
   * @returns {string | number}
   */
  getOptionKey: i.func,
  /**
   * Used to determine the string value for a given option.
   * It's used to fill the input (and the list box options if `renderOption` is not provided).
   *
   * If used in free solo mode, it must accept both the type of the options and a string.
   *
   * @param {Value} option
   * @returns {string}
   * @default (option) => option.label ?? option
   */
  getOptionLabel: i.func,
  /**
   * If provided, the options will be grouped under the returned string.
   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.
   *
   * @param {Value} options The options to group.
   * @returns {string}
   */
  groupBy: i.func,
  /**
   * If `true`, the component handles the "Home" and "End" keys when the popup is open.
   * It should move focus to the first option and last option, respectively.
   * @default !props.freeSolo
   */
  handleHomeEndKeys: i.bool,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide an id it will fall back to a randomly generated one.
   */
  id: i.string,
  /**
   * If `true`, the highlight can move to the input.
   * @default false
   */
  includeInputInList: i.bool,
  /**
   * The input value.
   */
  inputValue: i.string,
  /**
   * Used to determine if the option represents the given value.
   * Uses strict equality by default.
   * ⚠️ Both arguments need to be handled, an option can only match with one value.
   *
   * @param {Value} option The option to test.
   * @param {Value} value The value to test against.
   * @returns {boolean}
   */
  isOptionEqualToValue: i.func,
  /**
   * The maximum number of tags that will be visible when not focused.
   * Set `-1` to disable the limit.
   * @default -1
   */
  limitTags: Br,
  /**
   * The component used to render the listbox.
   * @default 'ul'
   */
  ListboxComponent: i.elementType,
  /**
   * Props applied to the Listbox element.
   */
  ListboxProps: i.object,
  /**
   * If `true`, the component is in a loading state.
   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, for example `options` are empty).
   * @default false
   */
  loading: i.bool,
  /**
   * Text to display when in a loading state.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Loading…'
   */
  loadingText: i.node,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   * @default false
   */
  multiple: i.bool,
  /**
   * Text to display when there are no options.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'No options'
   */
  noOptionsText: i.node,
  /**
   * Callback fired when the value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {Value|Value[]} value The new value of the component.
   * @param {string} reason One of "createOption", "selectOption", "removeOption", "blur" or "clear".
   * @param {string} [details]
   */
  onChange: i.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see open).
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {string} reason Can be: `"toggleInput"`, `"escape"`, `"selectOption"`, `"removeOption"`, `"blur"`.
   */
  onClose: i.func,
  /**
   * Callback fired when the highlight option changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {Value} option The highlighted option.
   * @param {string} reason Can be: `"keyboard"`, `"auto"`, `"mouse"`, `"touch"`.
   */
  onHighlightChange: i.func,
  /**
   * Callback fired when the input value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {string} value The new value of the text input.
   * @param {string} reason Can be: `"input"` (user input), `"reset"` (programmatic change), `"clear"`, `"blur"`, `"selectOption"`, `"removeOption"`
   */
  onInputChange: i.func,
  /**
   * @ignore
   */
  onKeyDown: i.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see open).
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onOpen: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool,
  /**
   * If `true`, the popup will open on input focus.
   * @default false
   */
  openOnFocus: i.bool,
  /**
   * Override the default text for the *open popup* icon button.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Open'
   */
  openText: i.string,
  /**
   * A list of options that will be shown in the Autocomplete.
   */
  options: i.array.isRequired,
  /**
   * The component used to render the body of the popup.
   * @default Paper
   */
  PaperComponent: i.elementType,
  /**
   * The component used to position the popup.
   * @default Popper
   */
  PopperComponent: i.elementType,
  /**
   * The icon to display in place of the default popup icon.
   * @default <ArrowDropDownIcon />
   */
  popupIcon: i.node,
  /**
   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.
   * @default false
   */
  readOnly: i.bool,
  /**
   * Render the group.
   *
   * @param {AutocompleteRenderGroupParams} params The group to render.
   * @returns {ReactNode}
   */
  renderGroup: i.func,
  /**
   * Render the input.
   *
   * @param {object} params
   * @returns {ReactNode}
   */
  renderInput: i.func.isRequired,
  /**
   * Render the option, use `getOptionLabel` by default.
   *
   * @param {object} props The props to apply on the li element.
   * @param {Value} option The option to render.
   * @param {object} state The state of each option.
   * @param {object} ownerState The state of the Autocomplete component.
   * @returns {ReactNode}
   */
  renderOption: i.func,
  /**
   * Render the selected value.
   *
   * @param {Value[]} value The `value` provided to the component.
   * @param {function} getTagProps A tag props getter.
   * @param {object} ownerState The state of the Autocomplete component.
   * @returns {ReactNode}
   */
  renderTags: i.func,
  /**
   * If `true`, the input's text is selected on focus.
   * It helps the user clear the selected value.
   * @default !props.freeSolo
   */
  selectOnFocus: i.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["small", "medium"]), i.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    chip: i.oneOfType([i.func, i.object]),
    clearIndicator: i.oneOfType([i.func, i.object]),
    listbox: i.oneOfType([i.func, i.object]),
    paper: i.oneOfType([i.func, i.object]),
    popper: i.oneOfType([i.func, i.object]),
    popupIndicator: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    listbox: i.elementType,
    paper: i.elementType,
    popper: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The value of the autocomplete.
   *
   * The value must have reference equality with the option in order to be selected.
   * You can customize the equality behavior with the `isOptionEqualToValue` prop.
   */
  value: co(i.any, (e10) => e10.multiple && e10.value !== void 0 && !Array.isArray(e10.value) ? new Error(["MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.", `However, ${e10.value} was provided.`].join(`
`)) : null)
};
var mk = ze(f.jsx("path", {
  d: "M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
}), "Person");
function gk(e10) {
  return He("MuiAvatar", e10);
}
Be("MuiAvatar", ["root", "colorDefault", "circular", "rounded", "square", "img", "fallback"]);
var hk = (e10) => {
  const {
    classes: t,
    variant: n,
    colorDefault: o
  } = e10;
  return Ue({
    root: ["root", n, o && "colorDefault"],
    img: ["img"],
    fallback: ["fallback"]
  }, gk, t);
};
var bk = K("div", {
  name: "MuiAvatar",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.root, t[n.variant], n.colorDefault && t.colorDefault];
  }
})(Ve(({
  theme: e10
}) => ({
  position: "relative",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  flexShrink: 0,
  width: 40,
  height: 40,
  fontFamily: e10.typography.fontFamily,
  fontSize: e10.typography.pxToRem(20),
  lineHeight: 1,
  borderRadius: "50%",
  overflow: "hidden",
  userSelect: "none",
  variants: [{
    props: {
      variant: "rounded"
    },
    style: {
      borderRadius: (e10.vars || e10).shape.borderRadius
    }
  }, {
    props: {
      variant: "square"
    },
    style: {
      borderRadius: 0
    }
  }, {
    props: {
      colorDefault: true
    },
    style: {
      color: (e10.vars || e10).palette.background.default,
      ...e10.vars ? {
        backgroundColor: e10.vars.palette.Avatar.defaultBg
      } : {
        backgroundColor: e10.palette.grey[400],
        ...e10.applyStyles("dark", {
          backgroundColor: e10.palette.grey[600]
        })
      }
    }
  }]
})));
var vk = K("img", {
  name: "MuiAvatar",
  slot: "Img",
  overridesResolver: (e10, t) => t.img
})({
  width: "100%",
  height: "100%",
  textAlign: "center",
  // Handle non-square image.
  objectFit: "cover",
  // Hide alt text.
  color: "transparent",
  // Hide the image broken icon, only works on Chrome.
  textIndent: 1e4
});
var yk = K(mk, {
  name: "MuiAvatar",
  slot: "Fallback",
  overridesResolver: (e10, t) => t.fallback
})({
  width: "75%",
  height: "75%"
});
function xk({
  crossOrigin: e10,
  referrerPolicy: t,
  src: n,
  srcSet: o
}) {
  const [r, s] = S.useState(false);
  return S.useEffect(() => {
    if (!n && !o)
      return;
    s(false);
    let a = true;
    const l = new Image();
    return l.onload = () => {
      a && s("loaded");
    }, l.onerror = () => {
      a && s("error");
    }, l.crossOrigin = e10, l.referrerPolicy = t, l.src = n, o && (l.srcset = o), () => {
      a = false;
    };
  }, [e10, t, n, o]), r;
}
var ng = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiAvatar"
  }), {
    alt: r,
    children: s,
    className: a,
    component: l = "div",
    slots: c = {},
    slotProps: u = {},
    imgProps: d,
    sizes: p,
    src: m,
    srcSet: g,
    variant: b = "circular",
    ...v
  } = o;
  let h = null;
  const y = xk({
    ...d,
    src: m,
    srcSet: g
  }), C = m || g, x = C && y !== "error", T = {
    ...o,
    colorDefault: !x,
    component: l,
    variant: b
  };
  delete T.ownerState;
  const w = hk(T), [R, E] = sn("img", {
    className: w.img,
    elementType: vk,
    externalForwardedProps: {
      slots: c,
      slotProps: {
        img: {
          ...d,
          ...u.img
        }
      }
    },
    additionalProps: {
      alt: r,
      src: m,
      srcSet: g,
      sizes: p
    },
    ownerState: T
  });
  return x ? h = f.jsx(R, {
    ...E
  }) : s || s === 0 ? h = s : C && r ? h = r[0] : h = f.jsx(yk, {
    ownerState: T,
    className: w.fallback
  }), f.jsx(bk, {
    as: l,
    className: be(w.root, a),
    ref: n,
    ...v,
    ownerState: T,
    children: h
  });
});
ng.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Used in combination with `src` or `srcSet` to
   * provide an alt attribute for the rendered `img` element.
   */
  alt: i.string,
  /**
   * Used to render icon or text elements inside the Avatar if `src` is not set.
   * This can be an element, or just a string.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.
   * It can be used to listen for the loading error event.
   */
  imgProps: i.object,
  /**
   * The `sizes` attribute for the `img` element.
   */
  sizes: i.string,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    img: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    img: i.elementType
  }),
  /**
   * The `src` attribute for the `img` element.
   */
  src: i.string,
  /**
   * The `srcSet` attribute for the `img` element.
   * Use this attribute for responsive image display.
   */
  srcSet: i.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The shape of the avatar.
   * @default 'circular'
   */
  variant: i.oneOfType([i.oneOf(["circular", "rounded", "square"]), i.string])
};
var Ck = {
  entering: {
    opacity: 1
  },
  entered: {
    opacity: 1
  }
};
var ii = S.forwardRef(function(t, n) {
  const o = Sn(), r = {
    enter: o.transitions.duration.enteringScreen,
    exit: o.transitions.duration.leavingScreen
  }, {
    addEndListener: s,
    appear: a = true,
    children: l,
    easing: c,
    in: u,
    onEnter: d,
    onEntered: p,
    onEntering: m,
    onExit: g,
    onExited: b,
    onExiting: v,
    style: h,
    timeout: y = r,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: C = fo,
    ...x
  } = t, T = S.useRef(null), w = Jt(T, Hs(l), n), R = (D) => (N) => {
    if (D) {
      const j = T.current;
      N === void 0 ? D(j) : D(j, N);
    }
  }, E = R(m), O = R((D, N) => {
    gC(D);
    const j = Os({
      style: h,
      timeout: y,
      easing: c
    }, {
      mode: "enter"
    });
    D.style.webkitTransition = o.transitions.create("opacity", j), D.style.transition = o.transitions.create("opacity", j), d && d(D, N);
  }), I = R(p), P = R(v), A = R((D) => {
    const N = Os({
      style: h,
      timeout: y,
      easing: c
    }, {
      mode: "exit"
    });
    D.style.webkitTransition = o.transitions.create("opacity", N), D.style.transition = o.transitions.create("opacity", N), g && g(D);
  }), M = R(b), F = (D) => {
    s && s(T.current, D);
  };
  return f.jsx(C, {
    appear: a,
    in: u,
    nodeRef: T,
    onEnter: O,
    onEntered: I,
    onEntering: E,
    onExit: A,
    onExited: M,
    onExiting: P,
    addEndListener: F,
    timeout: y,
    ...x,
    children: (D, N) => S.cloneElement(l, {
      style: {
        opacity: 0,
        visibility: D === "exited" && !u ? "hidden" : void 0,
        ...Ck[D],
        ...h,
        ...l.props.style
      },
      ref: w,
      ...N
    })
  });
});
ii.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: i.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: i.bool,
  /**
   * A single child content element.
   */
  children: Bs.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: i.oneOfType([i.shape({
    enter: i.string,
    exit: i.string
  }), i.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: i.bool,
  /**
   * @ignore
   */
  onEnter: i.func,
  /**
   * @ignore
   */
  onEntered: i.func,
  /**
   * @ignore
   */
  onEntering: i.func,
  /**
   * @ignore
   */
  onExit: i.func,
  /**
   * @ignore
   */
  onExited: i.func,
  /**
   * @ignore
   */
  onExiting: i.func,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: i.oneOfType([i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })])
};
function Sk(e10) {
  return He("MuiBackdrop", e10);
}
Be("MuiBackdrop", ["root", "invisible"]);
var wk = (e10) => {
  const {
    ownerState: t,
    ...n
  } = e10;
  return n;
};
var Tk = (e10) => {
  const {
    classes: t,
    invisible: n
  } = e10;
  return Ue({
    root: ["root", n && "invisible"]
  }, Sk, t);
};
var Ik = K("div", {
  name: "MuiBackdrop",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.root, n.invisible && t.invisible];
  }
})({
  position: "fixed",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  backgroundColor: "rgba(0, 0, 0, 0.5)",
  WebkitTapHighlightColor: "transparent",
  variants: [{
    props: {
      invisible: true
    },
    style: {
      backgroundColor: "transparent"
    }
  }]
});
var og = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiBackdrop"
  }), {
    children: r,
    className: s,
    component: a = "div",
    invisible: l = false,
    open: c,
    components: u = {},
    componentsProps: d = {},
    slotProps: p = {},
    slots: m = {},
    TransitionComponent: g,
    transitionDuration: b,
    ...v
  } = o, h = {
    ...o,
    component: a,
    invisible: l
  }, y = Tk(h), C = {
    transition: g,
    root: u.Root,
    ...m
  }, x = {
    ...d,
    ...p
  }, T = {
    slots: C,
    slotProps: x
  }, [w, R] = sn("root", {
    elementType: Ik,
    externalForwardedProps: T,
    className: be(y.root, s),
    ownerState: h
  }), [E, O] = sn("transition", {
    elementType: ii,
    externalForwardedProps: T,
    ownerState: h
  }), I = wk(O);
  return f.jsx(E, {
    in: c,
    timeout: b,
    ...v,
    ...I,
    children: f.jsx(w, {
      "aria-hidden": true,
      ...R,
      classes: y,
      ref: n,
      children: r
    })
  });
});
og.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    root: i.object
  }),
  /**
   * If `true`, the backdrop is invisible.
   * It can be used when rendering a popover or a custom select component.
   * @default false
   */
  invisible: i.bool,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    root: i.oneOfType([i.func, i.object]),
    transition: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    root: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   */
  TransitionComponent: i.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   */
  transitionDuration: i.oneOfType([i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })])
};
function Rk(e10) {
  const {
    badgeContent: t,
    invisible: n = false,
    max: o = 99,
    showZero: r = false
  } = e10, s = Lm({
    badgeContent: t,
    max: o
  });
  let a = n;
  n === false && t === 0 && !r && (a = true);
  const {
    badgeContent: l,
    max: c = o
  } = a ? s : e10, u = l && Number(l) > c ? `${c}+` : l;
  return {
    badgeContent: l,
    invisible: a,
    max: c,
    displayValue: u
  };
}
function Ek(e10) {
  return He("MuiBadge", e10);
}
var $r = Be("MuiBadge", [
  "root",
  "badge",
  "dot",
  "standard",
  "anchorOriginTopRight",
  "anchorOriginBottomRight",
  "anchorOriginTopLeft",
  "anchorOriginBottomLeft",
  "invisible",
  "colorError",
  "colorInfo",
  "colorPrimary",
  "colorSecondary",
  "colorSuccess",
  "colorWarning",
  "overlapRectangular",
  "overlapCircular",
  // TODO: v6 remove the overlap value from these class keys
  "anchorOriginTopLeftCircular",
  "anchorOriginTopLeftRectangular",
  "anchorOriginTopRightCircular",
  "anchorOriginTopRightRectangular",
  "anchorOriginBottomLeftCircular",
  "anchorOriginBottomLeftRectangular",
  "anchorOriginBottomRightCircular",
  "anchorOriginBottomRightRectangular"
]);
var bp = 10;
var vp = 4;
var Ok = (e10) => {
  const {
    color: t,
    anchorOrigin: n,
    invisible: o,
    overlap: r,
    variant: s,
    classes: a = {}
  } = e10, l = {
    root: ["root"],
    badge: ["badge", s, o && "invisible", `anchorOrigin${de(n.vertical)}${de(n.horizontal)}`, `anchorOrigin${de(n.vertical)}${de(n.horizontal)}${de(r)}`, `overlap${de(r)}`, t !== "default" && `color${de(t)}`]
  };
  return Ue(l, Ek, a);
};
var Pk = K("span", {
  name: "MuiBadge",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})({
  position: "relative",
  display: "inline-flex",
  // For correct alignment with the text.
  verticalAlign: "middle",
  flexShrink: 0
});
var Ak = K("span", {
  name: "MuiBadge",
  slot: "Badge",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.badge, t[n.variant], t[`anchorOrigin${de(n.anchorOrigin.vertical)}${de(n.anchorOrigin.horizontal)}${de(n.overlap)}`], n.color !== "default" && t[`color${de(n.color)}`], n.invisible && t.invisible];
  }
})(Ve(({
  theme: e10
}) => ({
  display: "flex",
  flexDirection: "row",
  flexWrap: "wrap",
  justifyContent: "center",
  alignContent: "center",
  alignItems: "center",
  position: "absolute",
  boxSizing: "border-box",
  fontFamily: e10.typography.fontFamily,
  fontWeight: e10.typography.fontWeightMedium,
  fontSize: e10.typography.pxToRem(12),
  minWidth: bp * 2,
  lineHeight: 1,
  padding: "0 6px",
  height: bp * 2,
  borderRadius: bp,
  zIndex: 1,
  // Render the badge on top of potential ripples.
  transition: e10.transitions.create("transform", {
    easing: e10.transitions.easing.easeInOut,
    duration: e10.transitions.duration.enteringScreen
  }),
  variants: [...Object.entries(e10.palette).filter(Rt(["contrastText"])).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: (e10.vars || e10).palette[t].main,
      color: (e10.vars || e10).palette[t].contrastText
    }
  })), {
    props: {
      variant: "dot"
    },
    style: {
      borderRadius: vp,
      height: vp * 2,
      minWidth: vp * 2,
      padding: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "right" && t.overlap === "rectangular",
    style: {
      top: 0,
      right: 0,
      transform: "scale(1) translate(50%, -50%)",
      transformOrigin: "100% 0%",
      [`&.${$r.invisible}`]: {
        transform: "scale(0) translate(50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "right" && t.overlap === "rectangular",
    style: {
      bottom: 0,
      right: 0,
      transform: "scale(1) translate(50%, 50%)",
      transformOrigin: "100% 100%",
      [`&.${$r.invisible}`]: {
        transform: "scale(0) translate(50%, 50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "left" && t.overlap === "rectangular",
    style: {
      top: 0,
      left: 0,
      transform: "scale(1) translate(-50%, -50%)",
      transformOrigin: "0% 0%",
      [`&.${$r.invisible}`]: {
        transform: "scale(0) translate(-50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "left" && t.overlap === "rectangular",
    style: {
      bottom: 0,
      left: 0,
      transform: "scale(1) translate(-50%, 50%)",
      transformOrigin: "0% 100%",
      [`&.${$r.invisible}`]: {
        transform: "scale(0) translate(-50%, 50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "right" && t.overlap === "circular",
    style: {
      top: "14%",
      right: "14%",
      transform: "scale(1) translate(50%, -50%)",
      transformOrigin: "100% 0%",
      [`&.${$r.invisible}`]: {
        transform: "scale(0) translate(50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "right" && t.overlap === "circular",
    style: {
      bottom: "14%",
      right: "14%",
      transform: "scale(1) translate(50%, 50%)",
      transformOrigin: "100% 100%",
      [`&.${$r.invisible}`]: {
        transform: "scale(0) translate(50%, 50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "left" && t.overlap === "circular",
    style: {
      top: "14%",
      left: "14%",
      transform: "scale(1) translate(-50%, -50%)",
      transformOrigin: "0% 0%",
      [`&.${$r.invisible}`]: {
        transform: "scale(0) translate(-50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "left" && t.overlap === "circular",
    style: {
      bottom: "14%",
      left: "14%",
      transform: "scale(1) translate(-50%, 50%)",
      transformOrigin: "0% 100%",
      [`&.${$r.invisible}`]: {
        transform: "scale(0) translate(-50%, 50%)"
      }
    }
  }, {
    props: {
      invisible: true
    },
    style: {
      transition: e10.transitions.create("transform", {
        easing: e10.transitions.easing.easeInOut,
        duration: e10.transitions.duration.leavingScreen
      })
    }
  }]
})));
var FC = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiBadge"
  }), {
    anchorOrigin: r = {
      vertical: "top",
      horizontal: "right"
    },
    className: s,
    classes: a,
    component: l,
    components: c = {},
    componentsProps: u = {},
    children: d,
    overlap: p = "rectangular",
    color: m = "default",
    invisible: g = false,
    max: b = 99,
    badgeContent: v,
    slots: h,
    slotProps: y,
    showZero: C = false,
    variant: x = "standard",
    ...T
  } = o, {
    badgeContent: w,
    invisible: R,
    max: E,
    displayValue: O
  } = Rk({
    max: b,
    invisible: g,
    badgeContent: v,
    showZero: C
  }), I = Lm({
    anchorOrigin: r,
    color: m,
    overlap: p,
    variant: x,
    badgeContent: v
  }), P = R || w == null && x !== "dot", {
    color: A = m,
    overlap: M = p,
    anchorOrigin: F = r,
    variant: D = x
  } = P ? I : o, N = D !== "dot" ? O : void 0, j = {
    ...o,
    badgeContent: w,
    invisible: P,
    max: E,
    displayValue: N,
    showZero: C,
    anchorOrigin: F,
    color: A,
    overlap: M,
    variant: D
  }, _ = Ok(j), z = (h == null ? void 0 : h.root) ?? c.Root ?? Pk, $ = (h == null ? void 0 : h.badge) ?? c.Badge ?? Ak, k = (y == null ? void 0 : y.root) ?? u.root, B = (y == null ? void 0 : y.badge) ?? u.badge, Q = In({
    elementType: z,
    externalSlotProps: k,
    externalForwardedProps: T,
    additionalProps: {
      ref: n,
      as: l
    },
    ownerState: j,
    className: be(k == null ? void 0 : k.className, _.root, s)
  }), ee = In({
    elementType: $,
    externalSlotProps: B,
    ownerState: j,
    className: be(_.badge, B == null ? void 0 : B.className)
  });
  return f.jsxs(z, {
    ...Q,
    children: [d, f.jsx($, {
      ...ee,
      children: N
    })]
  });
});
FC.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The anchor of the badge.
   * @default {
   *   vertical: 'top',
   *   horizontal: 'right',
   * }
   */
  anchorOrigin: i.shape({
    horizontal: i.oneOf(["left", "right"]).isRequired,
    vertical: i.oneOf(["bottom", "top"]).isRequired
  }),
  /**
   * The content rendered within the badge.
   */
  badgeContent: i.node,
  /**
   * The badge will be added relative to this node.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: i.oneOfType([i.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Badge: i.elementType,
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    badge: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * If `true`, the badge is invisible.
   * @default false
   */
  invisible: i.bool,
  /**
   * Max count to show.
   * @default 99
   */
  max: i.number,
  /**
   * Wrapped shape the badge should overlap.
   * @default 'rectangular'
   */
  overlap: i.oneOf(["circular", "rectangular"]),
  /**
   * Controls whether the badge is hidden when `badgeContent` is zero.
   * @default false
   */
  showZero: i.bool,
  /**
   * The props used for each slot inside the Badge.
   * @default {}
   */
  slotProps: i.shape({
    badge: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside the Badge.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: i.shape({
    badge: i.elementType,
    root: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The variant to use.
   * @default 'standard'
   */
  variant: i.oneOfType([i.oneOf(["dot", "standard"]), i.string])
};
var jk = Be("MuiBox", ["root"]);
var Dk = Uu();
var De = MP({
  themeId: $o,
  defaultTheme: Dk,
  defaultClassName: jk.root,
  generateClassName: Bx.generate
});
De.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: i.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
};
function Mk(e10) {
  return He("MuiButton", e10);
}
var os = Be("MuiButton", ["root", "text", "textInherit", "textPrimary", "textSecondary", "textSuccess", "textError", "textInfo", "textWarning", "outlined", "outlinedInherit", "outlinedPrimary", "outlinedSecondary", "outlinedSuccess", "outlinedError", "outlinedInfo", "outlinedWarning", "contained", "containedInherit", "containedPrimary", "containedSecondary", "containedSuccess", "containedError", "containedInfo", "containedWarning", "disableElevation", "focusVisible", "disabled", "colorInherit", "colorPrimary", "colorSecondary", "colorSuccess", "colorError", "colorInfo", "colorWarning", "textSizeSmall", "textSizeMedium", "textSizeLarge", "outlinedSizeSmall", "outlinedSizeMedium", "outlinedSizeLarge", "containedSizeSmall", "containedSizeMedium", "containedSizeLarge", "sizeMedium", "sizeSmall", "sizeLarge", "fullWidth", "startIcon", "endIcon", "icon", "iconSizeSmall", "iconSizeMedium", "iconSizeLarge"]);
var rg = S.createContext({});
rg.displayName = "ButtonGroupContext";
var NC = S.createContext(void 0);
NC.displayName = "ButtonGroupButtonContext";
var kk = (e10) => {
  const {
    color: t,
    disableElevation: n,
    fullWidth: o,
    size: r,
    variant: s,
    classes: a
  } = e10, l = {
    root: ["root", s, `${s}${de(t)}`, `size${de(r)}`, `${s}Size${de(r)}`, `color${de(t)}`, n && "disableElevation", o && "fullWidth"],
    label: ["label"],
    startIcon: ["icon", "startIcon", `iconSize${de(r)}`],
    endIcon: ["icon", "endIcon", `iconSize${de(r)}`]
  }, c = Ue(l, Mk, a);
  return {
    ...a,
    // forward the focused, disabled, etc. classes to the ButtonBase
    ...c
  };
};
var $C = [{
  props: {
    size: "small"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 18
    }
  }
}, {
  props: {
    size: "medium"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 20
    }
  }
}, {
  props: {
    size: "large"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 22
    }
  }
}];
var Fk = K(Ro, {
  shouldForwardProp: (e10) => Fn(e10) || e10 === "classes",
  name: "MuiButton",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.root, t[n.variant], t[`${n.variant}${de(n.color)}`], t[`size${de(n.size)}`], t[`${n.variant}Size${de(n.size)}`], n.color === "inherit" && t.colorInherit, n.disableElevation && t.disableElevation, n.fullWidth && t.fullWidth];
  }
})(Ve(({
  theme: e10
}) => {
  var o, r;
  const t = e10.palette.mode === "light" ? e10.palette.grey[300] : e10.palette.grey[800], n = e10.palette.mode === "light" ? e10.palette.grey.A100 : e10.palette.grey[700];
  return {
    ...e10.typography.button,
    minWidth: 64,
    padding: "6px 16px",
    border: 0,
    borderRadius: (e10.vars || e10).shape.borderRadius,
    transition: e10.transitions.create(["background-color", "box-shadow", "border-color", "color"], {
      duration: e10.transitions.duration.short
    }),
    "&:hover": {
      textDecoration: "none"
    },
    [`&.${os.disabled}`]: {
      color: (e10.vars || e10).palette.action.disabled
    },
    variants: [{
      props: {
        variant: "contained"
      },
      style: {
        color: "var(--variant-containedColor)",
        backgroundColor: "var(--variant-containedBg)",
        boxShadow: (e10.vars || e10).shadows[2],
        "&:hover": {
          boxShadow: (e10.vars || e10).shadows[4],
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            boxShadow: (e10.vars || e10).shadows[2]
          }
        },
        "&:active": {
          boxShadow: (e10.vars || e10).shadows[8]
        },
        [`&.${os.focusVisible}`]: {
          boxShadow: (e10.vars || e10).shadows[6]
        },
        [`&.${os.disabled}`]: {
          color: (e10.vars || e10).palette.action.disabled,
          boxShadow: (e10.vars || e10).shadows[0],
          backgroundColor: (e10.vars || e10).palette.action.disabledBackground
        }
      }
    }, {
      props: {
        variant: "outlined"
      },
      style: {
        padding: "5px 15px",
        border: "1px solid currentColor",
        borderColor: "var(--variant-outlinedBorder, currentColor)",
        backgroundColor: "var(--variant-outlinedBg)",
        color: "var(--variant-outlinedColor)",
        [`&.${os.disabled}`]: {
          border: `1px solid ${(e10.vars || e10).palette.action.disabledBackground}`
        }
      }
    }, {
      props: {
        variant: "text"
      },
      style: {
        padding: "6px 8px",
        color: "var(--variant-textColor)",
        backgroundColor: "var(--variant-textBg)"
      }
    }, ...Object.entries(e10.palette).filter(Rt(["dark", "contrastText"])).map(([s]) => ({
      props: {
        color: s
      },
      style: {
        "--variant-textColor": (e10.vars || e10).palette[s].main,
        "--variant-outlinedColor": (e10.vars || e10).palette[s].main,
        "--variant-outlinedBorder": e10.vars ? `rgba(${e10.vars.palette[s].mainChannel} / 0.5)` : We(e10.palette[s].main, 0.5),
        "--variant-containedColor": (e10.vars || e10).palette[s].contrastText,
        "--variant-containedBg": (e10.vars || e10).palette[s].main,
        "@media (hover: hover)": {
          "&:hover": {
            "--variant-containedBg": (e10.vars || e10).palette[s].dark,
            "--variant-textBg": e10.vars ? `rgba(${e10.vars.palette[s].mainChannel} / ${e10.vars.palette.action.hoverOpacity})` : We(e10.palette[s].main, e10.palette.action.hoverOpacity),
            "--variant-outlinedBorder": (e10.vars || e10).palette[s].main,
            "--variant-outlinedBg": e10.vars ? `rgba(${e10.vars.palette[s].mainChannel} / ${e10.vars.palette.action.hoverOpacity})` : We(e10.palette[s].main, e10.palette.action.hoverOpacity)
          }
        }
      }
    })), {
      props: {
        color: "inherit"
      },
      style: {
        "--variant-containedColor": e10.vars ? (
          // this is safe because grey does not change between default light/dark mode
          e10.vars.palette.text.primary
        ) : (r = (o = e10.palette).getContrastText) == null ? void 0 : r.call(o, t),
        "--variant-containedBg": e10.vars ? e10.vars.palette.Button.inheritContainedBg : t,
        "@media (hover: hover)": {
          "&:hover": {
            "--variant-containedBg": e10.vars ? e10.vars.palette.Button.inheritContainedHoverBg : n,
            "--variant-textBg": e10.vars ? `rgba(${e10.vars.palette.text.primaryChannel} / ${e10.vars.palette.action.hoverOpacity})` : We(e10.palette.text.primary, e10.palette.action.hoverOpacity),
            "--variant-outlinedBg": e10.vars ? `rgba(${e10.vars.palette.text.primaryChannel} / ${e10.vars.palette.action.hoverOpacity})` : We(e10.palette.text.primary, e10.palette.action.hoverOpacity)
          }
        }
      }
    }, {
      props: {
        size: "small",
        variant: "text"
      },
      style: {
        padding: "4px 5px",
        fontSize: e10.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "text"
      },
      style: {
        padding: "8px 11px",
        fontSize: e10.typography.pxToRem(15)
      }
    }, {
      props: {
        size: "small",
        variant: "outlined"
      },
      style: {
        padding: "3px 9px",
        fontSize: e10.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "outlined"
      },
      style: {
        padding: "7px 21px",
        fontSize: e10.typography.pxToRem(15)
      }
    }, {
      props: {
        size: "small",
        variant: "contained"
      },
      style: {
        padding: "4px 10px",
        fontSize: e10.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "contained"
      },
      style: {
        padding: "8px 22px",
        fontSize: e10.typography.pxToRem(15)
      }
    }, {
      props: {
        disableElevation: true
      },
      style: {
        boxShadow: "none",
        "&:hover": {
          boxShadow: "none"
        },
        [`&.${os.focusVisible}`]: {
          boxShadow: "none"
        },
        "&:active": {
          boxShadow: "none"
        },
        [`&.${os.disabled}`]: {
          boxShadow: "none"
        }
      }
    }, {
      props: {
        fullWidth: true
      },
      style: {
        width: "100%"
      }
    }]
  };
}));
var Nk = K("span", {
  name: "MuiButton",
  slot: "StartIcon",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.startIcon, t[`iconSize${de(n.size)}`]];
  }
})({
  display: "inherit",
  marginRight: 8,
  marginLeft: -4,
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginLeft: -2
    }
  }, ...$C]
});
var $k = K("span", {
  name: "MuiButton",
  slot: "EndIcon",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.endIcon, t[`iconSize${de(n.size)}`]];
  }
})({
  display: "inherit",
  marginRight: -4,
  marginLeft: 8,
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginRight: -2
    }
  }, ...$C]
});
var vt = S.forwardRef(function(t, n) {
  const o = S.useContext(rg), r = S.useContext(NC), s = qa(o, t), a = Ye({
    props: s,
    name: "MuiButton"
  }), {
    children: l,
    color: c = "primary",
    component: u = "button",
    className: d,
    disabled: p = false,
    disableElevation: m = false,
    disableFocusRipple: g = false,
    endIcon: b,
    focusVisibleClassName: v,
    fullWidth: h = false,
    size: y = "medium",
    startIcon: C,
    type: x,
    variant: T = "text",
    ...w
  } = a, R = {
    ...a,
    color: c,
    component: u,
    disabled: p,
    disableElevation: m,
    disableFocusRipple: g,
    fullWidth: h,
    size: y,
    type: x,
    variant: T
  }, E = kk(R), O = C && f.jsx(Nk, {
    className: E.startIcon,
    ownerState: R,
    children: C
  }), I = b && f.jsx($k, {
    className: E.endIcon,
    ownerState: R,
    children: b
  }), P = r || "";
  return f.jsxs(Fk, {
    ownerState: R,
    className: be(o.className, E.root, d, P),
    component: u,
    disabled: p,
    focusRipple: !g,
    focusVisibleClassName: be(E.focusVisible, v),
    ref: n,
    type: x,
    ...w,
    classes: E,
    children: [O, l, I]
  });
});
vt.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["inherit", "primary", "secondary", "success", "error", "info", "warning"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, no elevation is used.
   * @default false
   */
  disableElevation: i.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: i.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: i.bool,
  /**
   * Element placed after the children.
   */
  endIcon: i.node,
  /**
   * @ignore
   */
  focusVisibleClassName: i.string,
  /**
   * If `true`, the button will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The URL to link to when the button is clicked.
   * If defined, an `a` element will be used as the root node.
   */
  href: i.string,
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["small", "medium", "large"]), i.string]),
  /**
   * Element placed before the children.
   */
  startIcon: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * @ignore
   */
  type: i.oneOfType([i.oneOf(["button", "reset", "submit"]), i.string]),
  /**
   * The variant to use.
   * @default 'text'
   */
  variant: i.oneOfType([i.oneOf(["contained", "outlined", "text"]), i.string])
};
function Vk(e10) {
  return He("PrivateSwitchBase", e10);
}
Be("PrivateSwitchBase", ["root", "checked", "disabled", "input", "edgeStart", "edgeEnd"]);
var _k = (e10) => {
  const {
    classes: t,
    checked: n,
    disabled: o,
    edge: r
  } = e10, s = {
    root: ["root", n && "checked", o && "disabled", r && `edge${de(r)}`],
    input: ["input"]
  };
  return Ue(s, Vk, t);
};
var Lk = K(Ro)({
  padding: 9,
  borderRadius: "50%",
  variants: [{
    props: {
      edge: "start",
      size: "small"
    },
    style: {
      marginLeft: -3
    }
  }, {
    props: ({
      edge: e10,
      ownerState: t
    }) => e10 === "start" && t.size !== "small",
    style: {
      marginLeft: -12
    }
  }, {
    props: {
      edge: "end",
      size: "small"
    },
    style: {
      marginRight: -3
    }
  }, {
    props: ({
      edge: e10,
      ownerState: t
    }) => e10 === "end" && t.size !== "small",
    style: {
      marginRight: -12
    }
  }]
});
var Bk = K("input", {
  shouldForwardProp: Fn
})({
  cursor: "inherit",
  position: "absolute",
  opacity: 0,
  width: "100%",
  height: "100%",
  top: 0,
  left: 0,
  margin: 0,
  padding: 0,
  zIndex: 1
});
var od = S.forwardRef(function(t, n) {
  const {
    autoFocus: o,
    checked: r,
    checkedIcon: s,
    className: a,
    defaultChecked: l,
    disabled: c,
    disableFocusRipple: u = false,
    edge: d = false,
    icon: p,
    id: m,
    inputProps: g,
    inputRef: b,
    name: v,
    onBlur: h,
    onChange: y,
    onFocus: C,
    readOnly: x,
    required: T = false,
    tabIndex: w,
    type: R,
    value: E,
    ...O
  } = t, [I, P] = xr({
    controlled: r,
    default: !!l,
    name: "SwitchBase",
    state: "checked"
  }), A = Jn(), M = ($) => {
    C && C($), A && A.onFocus && A.onFocus($);
  }, F = ($) => {
    h && h($), A && A.onBlur && A.onBlur($);
  }, D = ($) => {
    if ($.nativeEvent.defaultPrevented)
      return;
    const k = $.target.checked;
    P(k), y && y($, k);
  };
  let N = c;
  A && typeof N > "u" && (N = A.disabled);
  const j = R === "checkbox" || R === "radio", _ = {
    ...t,
    checked: I,
    disabled: N,
    disableFocusRipple: u,
    edge: d
  }, z = _k(_);
  return f.jsxs(Lk, {
    component: "span",
    className: be(z.root, a),
    centerRipple: true,
    focusRipple: !u,
    disabled: N,
    tabIndex: null,
    role: void 0,
    onFocus: M,
    onBlur: F,
    ownerState: _,
    ref: n,
    ...O,
    children: [f.jsx(Bk, {
      autoFocus: o,
      checked: r,
      defaultChecked: l,
      className: z.input,
      disabled: N,
      id: j ? m : void 0,
      name: v,
      onChange: D,
      readOnly: x,
      ref: b,
      required: T,
      ownerState: _,
      tabIndex: w,
      type: R,
      ...R === "checkbox" && E === void 0 ? {} : {
        value: E
      },
      ...g
    }), I ? s : p]
  });
});
od.propTypes = {
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: i.bool,
  /**
   * If `true`, the component is checked.
   */
  checked: i.bool,
  /**
   * The icon to display when the component is checked.
   */
  checkedIcon: i.node.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * @ignore
   */
  defaultChecked: i.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: i.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: i.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: i.oneOf(["end", "start", false]),
  /**
   * The icon to display when the component is unchecked.
   */
  icon: i.node.isRequired,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: On,
  /*
   * @ignore
   */
  name: i.string,
  /**
   * @ignore
   */
  onBlur: i.func,
  /**
   * Callback fired when the state is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: i.func,
  /**
   * @ignore
   */
  onFocus: i.func,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: i.bool,
  /**
   * If `true`, the `input` element is required.
   */
  required: i.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.object,
  /**
   * @ignore
   */
  tabIndex: i.oneOfType([i.number, i.string]),
  /**
   * The input component prop `type`.
   */
  type: i.string.isRequired,
  /**
   * The value of the component.
   */
  value: i.any
};
var zk = ze(f.jsx("path", {
  d: "M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
}), "CheckBoxOutlineBlank");
var Wk = ze(f.jsx("path", {
  d: "M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
}), "CheckBox");
var Hk = ze(f.jsx("path", {
  d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"
}), "IndeterminateCheckBox");
function Gk(e10) {
  return He("MuiCheckbox", e10);
}
var yp = Be("MuiCheckbox", ["root", "checked", "disabled", "indeterminate", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium"]);
var Uk = (e10) => {
  const {
    classes: t,
    indeterminate: n,
    color: o,
    size: r
  } = e10, s = {
    root: ["root", n && "indeterminate", `color${de(o)}`, `size${de(r)}`]
  }, a = Ue(s, Gk, t);
  return {
    ...t,
    // forward the disabled and checked classes to the SwitchBase
    ...a
  };
};
var Xk = K(od, {
  shouldForwardProp: (e10) => Fn(e10) || e10 === "classes",
  name: "MuiCheckbox",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.root, n.indeterminate && t.indeterminate, t[`size${de(n.size)}`], n.color !== "default" && t[`color${de(n.color)}`]];
  }
})(Ve(({
  theme: e10
}) => ({
  color: (e10.vars || e10).palette.text.secondary,
  variants: [{
    props: {
      color: "default",
      disableRipple: false
    },
    style: {
      "&:hover": {
        backgroundColor: e10.vars ? `rgba(${e10.vars.palette.action.activeChannel} / ${e10.vars.palette.action.hoverOpacity})` : We(e10.palette.action.active, e10.palette.action.hoverOpacity)
      }
    }
  }, ...Object.entries(e10.palette).filter(Rt()).map(([t]) => ({
    props: {
      color: t,
      disableRipple: false
    },
    style: {
      "&:hover": {
        backgroundColor: e10.vars ? `rgba(${e10.vars.palette[t].mainChannel} / ${e10.vars.palette.action.hoverOpacity})` : We(e10.palette[t].main, e10.palette.action.hoverOpacity)
      }
    }
  })), ...Object.entries(e10.palette).filter(Rt()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${yp.checked}, &.${yp.indeterminate}`]: {
        color: (e10.vars || e10).palette[t].main
      },
      [`&.${yp.disabled}`]: {
        color: (e10.vars || e10).palette.action.disabled
      }
    }
  })), {
    // Should be last to override other colors
    props: {
      disableRipple: false
    },
    style: {
      // Reset on touch devices, it doesn't add specificity
      "&:hover": {
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  }]
})));
var Yk = f.jsx(Wk, {});
var Zk = f.jsx(zk, {});
var qk = f.jsx(Hk, {});
var _i = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiCheckbox"
  }), {
    checkedIcon: r = Yk,
    color: s = "primary",
    icon: a = Zk,
    indeterminate: l = false,
    indeterminateIcon: c = qk,
    inputProps: u,
    size: d = "medium",
    disableRipple: p = false,
    className: m,
    ...g
  } = o, b = l ? c : a, v = l ? c : r, h = {
    ...o,
    disableRipple: p,
    color: s,
    indeterminate: l,
    size: d
  }, y = Uk(h);
  return f.jsx(Xk, {
    type: "checkbox",
    inputProps: {
      "data-indeterminate": l,
      ...u
    },
    icon: S.cloneElement(b, {
      fontSize: b.props.fontSize ?? d
    }),
    checkedIcon: S.cloneElement(v, {
      fontSize: v.props.fontSize ?? d
    }),
    ownerState: h,
    ref: n,
    className: be(y.root, m),
    ...g,
    classes: y
  });
});
_i.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: i.bool,
  /**
   * The icon to display when the component is checked.
   * @default <CheckBoxIcon />
   */
  checkedIcon: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: i.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: i.bool,
  /**
   * The icon to display when the component is unchecked.
   * @default <CheckBoxOutlineBlankIcon />
   */
  icon: i.node,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * If `true`, the component appears indeterminate.
   * This does not set the native input element to indeterminate due
   * to inconsistent behavior across browsers.
   * However, we set a `data-indeterminate` attribute on the `input`.
   * @default false
   */
  indeterminate: i.bool,
  /**
   * The icon to display when the component is indeterminate.
   * @default <IndeterminateCheckBoxIcon />
   */
  indeterminateIcon: i.node,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: On,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: i.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: i.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense checkbox styling.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */
  value: i.any
};
function Jk(e10) {
  return He("MuiCircularProgress", e10);
}
Be("MuiCircularProgress", ["root", "determinate", "indeterminate", "colorPrimary", "colorSecondary", "svg", "circle", "circleDeterminate", "circleIndeterminate", "circleDisableShrink"]);
var Vr = 44;
var Ef = zo`
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
`;
var Of = zo`
  0% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -15px;
  }

  100% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -125px;
  }
`;
var Kk = typeof Ef != "string" ? lr`
        animation: ${Ef} 1.4s linear infinite;
      ` : null;
var Qk = typeof Of != "string" ? lr`
        animation: ${Of} 1.4s ease-in-out infinite;
      ` : null;
var eF = (e10) => {
  const {
    classes: t,
    variant: n,
    color: o,
    disableShrink: r
  } = e10, s = {
    root: ["root", n, `color${de(o)}`],
    svg: ["svg"],
    circle: ["circle", `circle${de(n)}`, r && "circleDisableShrink"]
  };
  return Ue(s, Jk, t);
};
var tF = K("span", {
  name: "MuiCircularProgress",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.root, t[n.variant], t[`color${de(n.color)}`]];
  }
})(Ve(({
  theme: e10
}) => ({
  display: "inline-block",
  variants: [{
    props: {
      variant: "determinate"
    },
    style: {
      transition: e10.transitions.create("transform")
    }
  }, {
    props: {
      variant: "indeterminate"
    },
    style: Kk || {
      animation: `${Ef} 1.4s linear infinite`
    }
  }, ...Object.entries(e10.palette).filter(Rt()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      color: (e10.vars || e10).palette[t].main
    }
  }))]
})));
var nF = K("svg", {
  name: "MuiCircularProgress",
  slot: "Svg",
  overridesResolver: (e10, t) => t.svg
})({
  display: "block"
  // Keeps the progress centered
});
var oF = K("circle", {
  name: "MuiCircularProgress",
  slot: "Circle",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.circle, t[`circle${de(n.variant)}`], n.disableShrink && t.circleDisableShrink];
  }
})(Ve(({
  theme: e10
}) => ({
  stroke: "currentColor",
  variants: [{
    props: {
      variant: "determinate"
    },
    style: {
      transition: e10.transitions.create("stroke-dashoffset")
    }
  }, {
    props: {
      variant: "indeterminate"
    },
    style: {
      // Some default value that looks fine waiting for the animation to kicks in.
      strokeDasharray: "80px, 200px",
      strokeDashoffset: 0
      // Add the unit to fix a Edge 16 and below bug.
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" && !t.disableShrink,
    style: Qk || {
      // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.
      animation: `${Of} 1.4s ease-in-out infinite`
    }
  }]
})));
var Jr = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiCircularProgress"
  }), {
    className: r,
    color: s = "primary",
    disableShrink: a = false,
    size: l = 40,
    style: c,
    thickness: u = 3.6,
    value: d = 0,
    variant: p = "indeterminate",
    ...m
  } = o, g = {
    ...o,
    color: s,
    disableShrink: a,
    size: l,
    thickness: u,
    value: d,
    variant: p
  }, b = eF(g), v = {}, h = {}, y = {};
  if (p === "determinate") {
    const C = 2 * Math.PI * ((Vr - u) / 2);
    v.strokeDasharray = C.toFixed(3), y["aria-valuenow"] = Math.round(d), v.strokeDashoffset = `${((100 - d) / 100 * C).toFixed(3)}px`, h.transform = "rotate(-90deg)";
  }
  return f.jsx(tF, {
    className: be(b.root, r),
    style: {
      width: l,
      height: l,
      ...h,
      ...c
    },
    ownerState: g,
    ref: n,
    role: "progressbar",
    ...y,
    ...m,
    children: f.jsx(nF, {
      className: b.svg,
      ownerState: g,
      viewBox: `${Vr / 2} ${Vr / 2} ${Vr} ${Vr}`,
      children: f.jsx(oF, {
        className: b.circle,
        style: v,
        ownerState: g,
        cx: Vr,
        cy: Vr,
        r: (Vr - u) / 2,
        fill: "none",
        strokeWidth: u
      })
    })
  });
});
Jr.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["inherit", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * If `true`, the shrink animation is disabled.
   * This only works if variant is `indeterminate`.
   * @default false
   */
  disableShrink: co(i.bool, (e10) => e10.disableShrink && e10.variant && e10.variant !== "indeterminate" ? new Error("MUI: You have provided the `disableShrink` prop with a variant other than `indeterminate`. This will have no effect.") : null),
  /**
   * The size of the component.
   * If using a number, the pixel unit is assumed.
   * If using a string, you need to provide the CSS unit, for example '3rem'.
   * @default 40
   */
  size: i.oneOfType([i.number, i.string]),
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The thickness of the circle.
   * @default 3.6
   */
  thickness: i.number,
  /**
   * The value of the progress indicator for the determinate variant.
   * Value between 0 and 100.
   * @default 0
   */
  value: i.number,
  /**
   * The variant to use.
   * Use indeterminate when there is no progress value.
   * @default 'indeterminate'
   */
  variant: i.oneOf(["determinate", "indeterminate"])
};
function rF(e10) {
  const t = mn(e10);
  return t.body === e10 ? Rr(e10).innerWidth > t.documentElement.clientWidth : e10.scrollHeight > e10.clientHeight;
}
function Ma(e10, t) {
  t ? e10.setAttribute("aria-hidden", "true") : e10.removeAttribute("aria-hidden");
}
function pv(e10) {
  return parseInt(Rr(e10).getComputedStyle(e10).paddingRight, 10) || 0;
}
function iF(e10) {
  const n = ["TEMPLATE", "SCRIPT", "STYLE", "LINK", "MAP", "META", "NOSCRIPT", "PICTURE", "COL", "COLGROUP", "PARAM", "SLOT", "SOURCE", "TRACK"].includes(e10.tagName), o = e10.tagName === "INPUT" && e10.getAttribute("type") === "hidden";
  return n || o;
}
function fv(e10, t, n, o, r) {
  const s = [t, n, ...o];
  [].forEach.call(e10.children, (a) => {
    const l = !s.includes(a), c = !iF(a);
    l && c && Ma(a, r);
  });
}
function xp(e10, t) {
  let n = -1;
  return e10.some((o, r) => t(o) ? (n = r, true) : false), n;
}
function sF(e10, t) {
  const n = [], o = e10.container;
  if (!t.disableScrollLock) {
    if (rF(o)) {
      const a = Kx(mn(o));
      n.push({
        value: o.style.paddingRight,
        property: "padding-right",
        el: o
      }), o.style.paddingRight = `${pv(o) + a}px`;
      const l = mn(o).querySelectorAll(".mui-fixed");
      [].forEach.call(l, (c) => {
        n.push({
          value: c.style.paddingRight,
          property: "padding-right",
          el: c
        }), c.style.paddingRight = `${pv(c) + a}px`;
      });
    }
    let s;
    if (o.parentNode instanceof DocumentFragment)
      s = mn(o).body;
    else {
      const a = o.parentElement, l = Rr(o);
      s = (a == null ? void 0 : a.nodeName) === "HTML" && l.getComputedStyle(a).overflowY === "scroll" ? a : o;
    }
    n.push({
      value: s.style.overflow,
      property: "overflow",
      el: s
    }, {
      value: s.style.overflowX,
      property: "overflow-x",
      el: s
    }, {
      value: s.style.overflowY,
      property: "overflow-y",
      el: s
    }), s.style.overflow = "hidden";
  }
  return () => {
    n.forEach(({
      value: s,
      el: a,
      property: l
    }) => {
      s ? a.style.setProperty(l, s) : a.style.removeProperty(l);
    });
  };
}
function aF(e10) {
  const t = [];
  return [].forEach.call(e10.children, (n) => {
    n.getAttribute("aria-hidden") === "true" && t.push(n);
  }), t;
}
var lF = class {
  constructor() {
    this.modals = [], this.containers = [];
  }
  add(t, n) {
    let o = this.modals.indexOf(t);
    if (o !== -1)
      return o;
    o = this.modals.length, this.modals.push(t), t.modalRef && Ma(t.modalRef, false);
    const r = aF(n);
    fv(n, t.mount, t.modalRef, r, true);
    const s = xp(this.containers, (a) => a.container === n);
    return s !== -1 ? (this.containers[s].modals.push(t), o) : (this.containers.push({
      modals: [t],
      container: n,
      restore: null,
      hiddenSiblings: r
    }), o);
  }
  mount(t, n) {
    const o = xp(this.containers, (s) => s.modals.includes(t)), r = this.containers[o];
    r.restore || (r.restore = sF(r, n));
  }
  remove(t, n = true) {
    const o = this.modals.indexOf(t);
    if (o === -1)
      return o;
    const r = xp(this.containers, (a) => a.modals.includes(t)), s = this.containers[r];
    if (s.modals.splice(s.modals.indexOf(t), 1), this.modals.splice(o, 1), s.modals.length === 0)
      s.restore && s.restore(), t.modalRef && Ma(t.modalRef, n), fv(s.container, t.mount, t.modalRef, s.hiddenSiblings, false), this.containers.splice(r, 1);
    else {
      const a = s.modals[s.modals.length - 1];
      a.modalRef && Ma(a.modalRef, false);
    }
    return o;
  }
  isTopModal(t) {
    return this.modals.length > 0 && this.modals[this.modals.length - 1] === t;
  }
};
var cF = ["input", "select", "textarea", "a[href]", "button", "[tabindex]", "audio[controls]", "video[controls]", '[contenteditable]:not([contenteditable="false"])'].join(",");
function uF(e10) {
  const t = parseInt(e10.getAttribute("tabindex") || "", 10);
  return Number.isNaN(t) ? e10.contentEditable === "true" || (e10.nodeName === "AUDIO" || e10.nodeName === "VIDEO" || e10.nodeName === "DETAILS") && e10.getAttribute("tabindex") === null ? 0 : e10.tabIndex : t;
}
function dF(e10) {
  if (e10.tagName !== "INPUT" || e10.type !== "radio" || !e10.name)
    return false;
  const t = (o) => e10.ownerDocument.querySelector(`input[type="radio"]${o}`);
  let n = t(`[name="${e10.name}"]:checked`);
  return n || (n = t(`[name="${e10.name}"]`)), n !== e10;
}
function pF(e10) {
  return !(e10.disabled || e10.tagName === "INPUT" && e10.type === "hidden" || dF(e10));
}
function fF(e10) {
  const t = [], n = [];
  return Array.from(e10.querySelectorAll(cF)).forEach((o, r) => {
    const s = uF(o);
    s === -1 || !pF(o) || (s === 0 ? t.push(o) : n.push({
      documentOrder: r,
      tabIndex: s,
      node: o
    }));
  }), n.sort((o, r) => o.tabIndex === r.tabIndex ? o.documentOrder - r.documentOrder : o.tabIndex - r.tabIndex).map((o) => o.node).concat(t);
}
function mF() {
  return true;
}
function ol(e10) {
  const {
    children: t,
    disableAutoFocus: n = false,
    disableEnforceFocus: o = false,
    disableRestoreFocus: r = false,
    getTabbable: s = fF,
    isEnabled: a = mF,
    open: l
  } = e10, c = S.useRef(false), u = S.useRef(null), d = S.useRef(null), p = S.useRef(null), m = S.useRef(null), g = S.useRef(false), b = S.useRef(null), v = Jt(Hs(t), b), h = S.useRef(null);
  S.useEffect(() => {
    !l || !b.current || (g.current = !n);
  }, [n, l]), S.useEffect(() => {
    if (!l || !b.current)
      return;
    const x = mn(b.current);
    return b.current.contains(x.activeElement) || (b.current.hasAttribute("tabIndex") || (console.error(["MUI: The modal content node does not accept focus.", 'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".'].join(`
`)), b.current.setAttribute("tabIndex", "-1")), g.current && b.current.focus()), () => {
      r || (p.current && p.current.focus && (c.current = true, p.current.focus()), p.current = null);
    };
  }, [l]), S.useEffect(() => {
    if (!l || !b.current)
      return;
    const x = mn(b.current), T = (E) => {
      h.current = E, !(o || !a() || E.key !== "Tab") && x.activeElement === b.current && E.shiftKey && (c.current = true, d.current && d.current.focus());
    }, w = () => {
      var I, P;
      const E = b.current;
      if (E === null)
        return;
      if (!x.hasFocus() || !a() || c.current) {
        c.current = false;
        return;
      }
      if (E.contains(x.activeElement) || o && x.activeElement !== u.current && x.activeElement !== d.current)
        return;
      if (x.activeElement !== m.current)
        m.current = null;
      else if (m.current !== null)
        return;
      if (!g.current)
        return;
      let O = [];
      if ((x.activeElement === u.current || x.activeElement === d.current) && (O = s(b.current)), O.length > 0) {
        const A = !!((I = h.current) != null && I.shiftKey && ((P = h.current) == null ? void 0 : P.key) === "Tab"), M = O[0], F = O[O.length - 1];
        typeof M != "string" && typeof F != "string" && (A ? F.focus() : M.focus());
      } else
        E.focus();
    };
    x.addEventListener("focusin", w), x.addEventListener("keydown", T, true);
    const R = setInterval(() => {
      x.activeElement && x.activeElement.tagName === "BODY" && w();
    }, 50);
    return () => {
      clearInterval(R), x.removeEventListener("focusin", w), x.removeEventListener("keydown", T, true);
    };
  }, [n, o, r, a, l, s]);
  const y = (x) => {
    p.current === null && (p.current = x.relatedTarget), g.current = true, m.current = x.target;
    const T = t.props.onFocus;
    T && T(x);
  }, C = (x) => {
    p.current === null && (p.current = x.relatedTarget), g.current = true;
  };
  return f.jsxs(S.Fragment, {
    children: [f.jsx("div", {
      tabIndex: l ? 0 : -1,
      onFocus: C,
      ref: u,
      "data-testid": "sentinelStart"
    }), S.cloneElement(t, {
      ref: v,
      onFocus: y
    }), f.jsx("div", {
      tabIndex: l ? 0 : -1,
      onFocus: C,
      ref: d,
      "data-testid": "sentinelEnd"
    })]
  });
}
ol.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A single child content element.
   */
  children: Bs,
  /**
   * If `true`, the focus trap will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any focus trap children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: i.bool,
  /**
   * If `true`, the focus trap will not prevent focus from leaving the focus trap while open.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: i.bool,
  /**
   * If `true`, the focus trap will not restore focus to previously focused element once
   * focus trap is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: i.bool,
  /**
   * Returns an array of ordered tabbable nodes (i.e. in tab order) within the root.
   * For instance, you can provide the "tabbable" npm dependency.
   * @param {HTMLElement} root
   */
  getTabbable: i.func,
  /**
   * This prop extends the `open` prop.
   * It allows to toggle the open state without having to wait for a rerender when changing the `open` prop.
   * This prop should be memoized.
   * It can be used to support multiple focus trap mounted at the same time.
   * @default function defaultIsEnabled(): boolean {
   *   return true;
   * }
   */
  isEnabled: i.func,
  /**
   * If `true`, focus is locked.
   */
  open: i.bool.isRequired
};
ol.propTypes = Hu(ol.propTypes);
function gF(e10) {
  return typeof e10 == "function" ? e10() : e10;
}
function hF(e10) {
  return e10 ? e10.props.hasOwnProperty("in") : false;
}
var bF = new lF();
function vF(e10) {
  const {
    container: t,
    disableEscapeKeyDown: n = false,
    disableScrollLock: o = false,
    // @ts-ignore internal logic - Base UI supports the manager as a prop too
    manager: r = bF,
    closeAfterTransition: s = false,
    onTransitionEnter: a,
    onTransitionExited: l,
    children: c,
    onClose: u,
    open: d,
    rootRef: p
  } = e10, m = S.useRef({}), g = S.useRef(null), b = S.useRef(null), v = Jt(b, p), [h, y] = S.useState(!d), C = hF(c);
  let x = true;
  (e10["aria-hidden"] === "false" || e10["aria-hidden"] === false) && (x = false);
  const T = () => mn(g.current), w = () => (m.current.modalRef = b.current, m.current.mount = g.current, m.current), R = () => {
    r.mount(w(), {
      disableScrollLock: o
    }), b.current && (b.current.scrollTop = 0);
  }, E = xn(() => {
    const j = gF(t) || T().body;
    r.add(w(), j), b.current && R();
  }), O = S.useCallback(() => r.isTopModal(w()), [r]), I = xn((j) => {
    g.current = j, j && (d && O() ? R() : b.current && Ma(b.current, x));
  }), P = S.useCallback(() => {
    r.remove(w(), x);
  }, [x, r]);
  S.useEffect(() => () => {
    P();
  }, [P]), S.useEffect(() => {
    d ? E() : (!C || !s) && P();
  }, [d, P, C, s, E]);
  const A = (j) => (_) => {
    var z;
    (z = j.onKeyDown) == null || z.call(j, _), !(_.key !== "Escape" || _.which === 229 || // Wait until IME is settled.
    !O()) && (n || (_.stopPropagation(), u && u(_, "escapeKeyDown")));
  }, M = (j) => (_) => {
    var z;
    (z = j.onClick) == null || z.call(j, _), _.target === _.currentTarget && u && u(_, "backdropClick");
  };
  return {
    getRootProps: (j = {}) => {
      const _ = Aa(e10);
      delete _.onTransitionEnter, delete _.onTransitionExited;
      const z = {
        ..._,
        ...j
      };
      return {
        role: "presentation",
        ...z,
        onKeyDown: A(z),
        ref: v
      };
    },
    getBackdropProps: (j = {}) => {
      const _ = j;
      return {
        "aria-hidden": true,
        ..._,
        onClick: M(_),
        open: d
      };
    },
    getTransitionProps: () => {
      const j = () => {
        y(false), a && a();
      }, _ = () => {
        y(true), l && l(), s && P();
      };
      return {
        onEnter: vf(j, c == null ? void 0 : c.props.onEnter),
        onExited: vf(_, c == null ? void 0 : c.props.onExited)
      };
    },
    rootRef: v,
    portalRef: I,
    isTopModal: O,
    exited: h,
    hasTransition: C
  };
}
function yF(e10) {
  return He("MuiModal", e10);
}
Be("MuiModal", ["root", "hidden", "backdrop"]);
var xF = (e10) => {
  const {
    open: t,
    exited: n,
    classes: o
  } = e10;
  return Ue({
    root: ["root", !t && n && "hidden"],
    backdrop: ["backdrop"]
  }, yF, o);
};
var CF = K("div", {
  name: "MuiModal",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.root, !n.open && n.exited && t.hidden];
  }
})(Ve(({
  theme: e10
}) => ({
  position: "fixed",
  zIndex: (e10.vars || e10).zIndex.modal,
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  variants: [{
    props: ({
      ownerState: t
    }) => !t.open && t.exited,
    style: {
      visibility: "hidden"
    }
  }]
})));
var SF = K(og, {
  name: "MuiModal",
  slot: "Backdrop",
  overridesResolver: (e10, t) => t.backdrop
})({
  zIndex: -1
});
var jl = S.forwardRef(function(t, n) {
  const o = Ye({
    name: "MuiModal",
    props: t
  }), {
    BackdropComponent: r = SF,
    BackdropProps: s,
    classes: a,
    className: l,
    closeAfterTransition: c = false,
    children: u,
    container: d,
    component: p,
    components: m = {},
    componentsProps: g = {},
    disableAutoFocus: b = false,
    disableEnforceFocus: v = false,
    disableEscapeKeyDown: h = false,
    disablePortal: y = false,
    disableRestoreFocus: C = false,
    disableScrollLock: x = false,
    hideBackdrop: T = false,
    keepMounted: w = false,
    onBackdropClick: R,
    onClose: E,
    onTransitionEnter: O,
    onTransitionExited: I,
    open: P,
    slotProps: A = {},
    slots: M = {},
    // eslint-disable-next-line react/prop-types
    theme: F,
    ...D
  } = o, N = {
    ...o,
    closeAfterTransition: c,
    disableAutoFocus: b,
    disableEnforceFocus: v,
    disableEscapeKeyDown: h,
    disablePortal: y,
    disableRestoreFocus: C,
    disableScrollLock: x,
    hideBackdrop: T,
    keepMounted: w
  }, {
    getRootProps: j,
    getBackdropProps: _,
    getTransitionProps: z,
    portalRef: $,
    isTopModal: k,
    exited: B,
    hasTransition: Q
  } = vF({
    ...N,
    rootRef: n
  }), ee = {
    ...N,
    exited: B
  }, G = xF(ee), H = {};
  if (u.props.tabIndex === void 0 && (H.tabIndex = "-1"), Q) {
    const {
      onEnter: W,
      onExited: Z
    } = z();
    H.onEnter = W, H.onExited = Z;
  }
  const Y = {
    ...D,
    slots: {
      root: m.Root,
      backdrop: m.Backdrop,
      ...M
    },
    slotProps: {
      ...g,
      ...A
    }
  }, [J, U] = sn("root", {
    elementType: CF,
    externalForwardedProps: Y,
    getSlotProps: j,
    additionalProps: {
      ref: n,
      as: p
    },
    ownerState: ee,
    className: be(l, G == null ? void 0 : G.root, !ee.open && ee.exited && (G == null ? void 0 : G.hidden))
  }), [ne, se] = sn("backdrop", {
    elementType: r,
    externalForwardedProps: Y,
    additionalProps: s,
    getSlotProps: (W) => _({
      ...W,
      onClick: (Z) => {
        R && R(Z), W != null && W.onClick && W.onClick(Z);
      }
    }),
    className: be(s == null ? void 0 : s.className, G == null ? void 0 : G.backdrop),
    ownerState: ee
  }), oe = Jt(s == null ? void 0 : s.ref, se.ref);
  return !w && !P && (!Q || B) ? null : f.jsx(nl, {
    ref: $,
    container: d,
    disablePortal: y,
    children: f.jsxs(J, {
      ...U,
      children: [!T && r ? f.jsx(ne, {
        ...se,
        ref: oe
      }) : null, f.jsx(ol, {
        disableEnforceFocus: v,
        disableAutoFocus: b,
        disableRestoreFocus: C,
        isEnabled: k,
        open: P,
        children: S.cloneElement(u, H)
      })]
    })
  });
});
jl.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: i.elementType,
  /**
   * Props applied to the [`Backdrop`](https://mui.com/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead.
   */
  BackdropProps: i.object,
  /**
   * A single child content element.
   */
  children: Bs.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * When set to true the Modal waits until a nested Transition is completed before closing.
   * @default false
   */
  closeAfterTransition: i.bool,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Backdrop: i.elementType,
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([Ir, i.func]),
  /**
   * If `true`, the modal will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any modal children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: i.bool,
  /**
   * If `true`, the modal will not prevent focus from leaving the modal while open.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: i.bool,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: i.bool,
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: i.bool,
  /**
   * If `true`, the modal will not restore focus to previously focused element once
   * modal is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: i.bool,
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: i.bool,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: i.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Modal.
   * @default false
   */
  keepMounted: i.bool,
  /**
   * Callback fired when the backdrop is clicked.
   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.
   */
  onBackdropClick: i.func,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: i.func,
  /**
   * A function called when a transition enters.
   */
  onTransitionEnter: i.func,
  /**
   * A function called when a transition has exited.
   */
  onTransitionExited: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * The props used for each slot inside the Modal.
   * @default {}
   */
  slotProps: i.shape({
    backdrop: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside the Modal.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: i.shape({
    backdrop: i.elementType,
    root: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
};
function wF(e10) {
  return He("MuiDialog", e10);
}
var ka = Be("MuiDialog", ["root", "scrollPaper", "scrollBody", "container", "paper", "paperScrollPaper", "paperScrollBody", "paperWidthFalse", "paperWidthXs", "paperWidthSm", "paperWidthMd", "paperWidthLg", "paperWidthXl", "paperFullWidth", "paperFullScreen"]);
var ig = S.createContext({});
ig.displayName = "DialogContext";
var TF = K(og, {
  name: "MuiDialog",
  slot: "Backdrop",
  overrides: (e10, t) => t.backdrop
})({
  // Improve scrollable dialog support.
  zIndex: -1
});
var IF = (e10) => {
  const {
    classes: t,
    scroll: n,
    maxWidth: o,
    fullWidth: r,
    fullScreen: s
  } = e10, a = {
    root: ["root"],
    container: ["container", `scroll${de(n)}`],
    paper: ["paper", `paperScroll${de(n)}`, `paperWidth${de(String(o))}`, r && "paperFullWidth", s && "paperFullScreen"]
  };
  return Ue(a, wF, t);
};
var RF = K(jl, {
  name: "MuiDialog",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})({
  "@media print": {
    // Use !important to override the Modal inline-style.
    position: "absolute !important"
  }
});
var EF = K("div", {
  name: "MuiDialog",
  slot: "Container",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.container, t[`scroll${de(n.scroll)}`]];
  }
})({
  height: "100%",
  "@media print": {
    height: "auto"
  },
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  variants: [{
    props: {
      scroll: "paper"
    },
    style: {
      display: "flex",
      justifyContent: "center",
      alignItems: "center"
    }
  }, {
    props: {
      scroll: "body"
    },
    style: {
      overflowY: "auto",
      overflowX: "hidden",
      textAlign: "center",
      "&::after": {
        content: '""',
        display: "inline-block",
        verticalAlign: "middle",
        height: "100%",
        width: "0"
      }
    }
  }]
});
var OF = K(vn, {
  name: "MuiDialog",
  slot: "Paper",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.paper, t[`scrollPaper${de(n.scroll)}`], t[`paperWidth${de(String(n.maxWidth))}`], n.fullWidth && t.paperFullWidth, n.fullScreen && t.paperFullScreen];
  }
})(Ve(({
  theme: e10
}) => ({
  margin: 32,
  position: "relative",
  overflowY: "auto",
  "@media print": {
    overflowY: "visible",
    boxShadow: "none"
  },
  variants: [{
    props: {
      scroll: "paper"
    },
    style: {
      display: "flex",
      flexDirection: "column",
      maxHeight: "calc(100% - 64px)"
    }
  }, {
    props: {
      scroll: "body"
    },
    style: {
      display: "inline-block",
      verticalAlign: "middle",
      textAlign: "initial"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.maxWidth,
    style: {
      maxWidth: "calc(100% - 64px)"
    }
  }, {
    props: {
      maxWidth: "xs"
    },
    style: {
      maxWidth: e10.breakpoints.unit === "px" ? Math.max(e10.breakpoints.values.xs, 444) : `max(${e10.breakpoints.values.xs}${e10.breakpoints.unit}, 444px)`,
      [`&.${ka.paperScrollBody}`]: {
        [e10.breakpoints.down(Math.max(e10.breakpoints.values.xs, 444) + 32 * 2)]: {
          maxWidth: "calc(100% - 64px)"
        }
      }
    }
  }, ...Object.keys(e10.breakpoints.values).filter((t) => t !== "xs").map((t) => ({
    props: {
      maxWidth: t
    },
    style: {
      maxWidth: `${e10.breakpoints.values[t]}${e10.breakpoints.unit}`,
      [`&.${ka.paperScrollBody}`]: {
        [e10.breakpoints.down(e10.breakpoints.values[t] + 32 * 2)]: {
          maxWidth: "calc(100% - 64px)"
        }
      }
    }
  })), {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      width: "calc(100% - 64px)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullScreen,
    style: {
      margin: 0,
      width: "100%",
      maxWidth: "100%",
      height: "100%",
      maxHeight: "none",
      borderRadius: 0,
      [`&.${ka.paperScrollBody}`]: {
        margin: 0,
        maxWidth: "100%"
      }
    }
  }]
})));
var sg = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiDialog"
  }), r = Sn(), s = {
    enter: r.transitions.duration.enteringScreen,
    exit: r.transitions.duration.leavingScreen
  }, {
    "aria-describedby": a,
    "aria-labelledby": l,
    BackdropComponent: c,
    BackdropProps: u,
    children: d,
    className: p,
    disableEscapeKeyDown: m = false,
    fullScreen: g = false,
    fullWidth: b = false,
    maxWidth: v = "sm",
    onBackdropClick: h,
    onClick: y,
    onClose: C,
    open: x,
    PaperComponent: T = vn,
    PaperProps: w = {},
    scroll: R = "paper",
    TransitionComponent: E = ii,
    transitionDuration: O = s,
    TransitionProps: I,
    ...P
  } = o, A = {
    ...o,
    disableEscapeKeyDown: m,
    fullScreen: g,
    fullWidth: b,
    maxWidth: v,
    scroll: R
  }, M = IF(A), F = S.useRef(), D = (z) => {
    F.current = z.target === z.currentTarget;
  }, N = (z) => {
    y && y(z), F.current && (F.current = null, h && h(z), C && C(z, "backdropClick"));
  }, j = Ws(l), _ = S.useMemo(() => ({
    titleId: j
  }), [j]);
  return f.jsx(RF, {
    className: be(M.root, p),
    closeAfterTransition: true,
    components: {
      Backdrop: TF
    },
    componentsProps: {
      backdrop: {
        transitionDuration: O,
        as: c,
        ...u
      }
    },
    disableEscapeKeyDown: m,
    onClose: C,
    open: x,
    ref: n,
    onClick: N,
    ownerState: A,
    ...P,
    children: f.jsx(E, {
      appear: true,
      in: x,
      timeout: O,
      role: "presentation",
      ...I,
      children: f.jsx(EF, {
        className: be(M.container),
        onMouseDown: D,
        ownerState: A,
        children: f.jsx(OF, {
          as: T,
          elevation: 24,
          role: "dialog",
          "aria-describedby": a,
          "aria-labelledby": j,
          ...w,
          className: be(M.paper, w.className),
          ownerState: A,
          children: f.jsx(ig.Provider, {
            value: _,
            children: d
          })
        })
      })
    })
  });
});
sg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The id(s) of the element(s) that describe the dialog.
   */
  "aria-describedby": i.string,
  /**
   * The id(s) of the element(s) that label the dialog.
   */
  "aria-labelledby": i.string,
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: i.elementType,
  /**
   * @ignore
   */
  BackdropProps: i.object,
  /**
   * Dialog children, usually the included sub-components.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: i.bool,
  /**
   * If `true`, the dialog is full-screen.
   * @default false
   */
  fullScreen: i.bool,
  /**
   * If `true`, the dialog stretches to `maxWidth`.
   *
   * Notice that the dialog width grow is limited by the default margin.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * Determine the max-width of the dialog.
   * The dialog width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   * @default 'sm'
   */
  maxWidth: i.oneOfType([i.oneOf(["xs", "sm", "md", "lg", "xl", false]), i.string]),
  /**
   * Callback fired when the backdrop is clicked.
   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.
   */
  onBackdropClick: i.func,
  /**
   * @ignore
   */
  onClick: i.func,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * The component used to render the body of the dialog.
   * @default Paper
   */
  PaperComponent: i.elementType,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   * @default {}
   */
  PaperProps: i.object,
  /**
   * Determine the container for scrolling the dialog.
   * @default 'paper'
   */
  scroll: i.oneOf(["body", "paper"]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   */
  TransitionComponent: i.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: i.oneOfType([i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   */
  TransitionProps: i.object
};
function PF(e10) {
  return He("MuiDialogActions", e10);
}
Be("MuiDialogActions", ["root", "spacing"]);
var AF = (e10) => {
  const {
    classes: t,
    disableSpacing: n
  } = e10;
  return Ue({
    root: ["root", !n && "spacing"]
  }, PF, t);
};
var jF = K("div", {
  name: "MuiDialogActions",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.root, !n.disableSpacing && t.spacing];
  }
})({
  display: "flex",
  alignItems: "center",
  padding: 8,
  justifyContent: "flex-end",
  flex: "0 0 auto",
  variants: [{
    props: ({
      ownerState: e10
    }) => !e10.disableSpacing,
    style: {
      "& > :not(style) ~ :not(style)": {
        marginLeft: 8
      }
    }
  }]
});
var ag = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiDialogActions"
  }), {
    className: r,
    disableSpacing: s = false,
    ...a
  } = o, l = {
    ...o,
    disableSpacing: s
  }, c = AF(l);
  return f.jsx(jF, {
    className: be(c.root, r),
    ownerState: l,
    ref: n,
    ...a
  });
});
ag.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * If `true`, the actions do not have additional margin.
   * @default false
   */
  disableSpacing: i.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
};
function DF(e10) {
  return He("MuiDialogContent", e10);
}
Be("MuiDialogContent", ["root", "dividers"]);
function MF(e10) {
  return He("MuiDialogTitle", e10);
}
var kF = Be("MuiDialogTitle", ["root"]);
var FF = (e10) => {
  const {
    classes: t,
    dividers: n
  } = e10;
  return Ue({
    root: ["root", n && "dividers"]
  }, DF, t);
};
var NF = K("div", {
  name: "MuiDialogContent",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.root, n.dividers && t.dividers];
  }
})(Ve(({
  theme: e10
}) => ({
  flex: "1 1 auto",
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch",
  overflowY: "auto",
  padding: "20px 24px",
  variants: [{
    props: ({
      ownerState: t
    }) => t.dividers,
    style: {
      padding: "16px 24px",
      borderTop: `1px solid ${(e10.vars || e10).palette.divider}`,
      borderBottom: `1px solid ${(e10.vars || e10).palette.divider}`
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.dividers,
    style: {
      [`.${kF.root} + &`]: {
        paddingTop: 0
      }
    }
  }]
})));
var lg = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiDialogContent"
  }), {
    className: r,
    dividers: s = false,
    ...a
  } = o, l = {
    ...o,
    dividers: s
  }, c = FF(l);
  return f.jsx(NF, {
    className: be(c.root, r),
    ownerState: l,
    ref: n,
    ...a
  });
});
lg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * Display the top and bottom dividers.
   * @default false
   */
  dividers: i.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
};
var $F = (e10) => {
  const {
    classes: t
  } = e10;
  return Ue({
    root: ["root"]
  }, MF, t);
};
var VF = K(Fe, {
  name: "MuiDialogTitle",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})({
  padding: "16px 24px",
  flex: "0 0 auto"
});
var VC = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiDialogTitle"
  }), {
    className: r,
    id: s,
    ...a
  } = o, l = o, c = $F(l), {
    titleId: u = s
  } = S.useContext(ig);
  return f.jsx(VF, {
    component: "h2",
    className: be(c.root, r),
    ownerState: l,
    ref: n,
    variant: "h6",
    id: s ?? u,
    ...a
  });
});
VC.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * @ignore
   */
  id: i.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
};
function _F(e10) {
  return He("MuiDivider", e10);
}
var mv = Be("MuiDivider", ["root", "absolute", "fullWidth", "inset", "middle", "flexItem", "light", "vertical", "withChildren", "withChildrenVertical", "textAlignRight", "textAlignLeft", "wrapper", "wrapperVertical"]);
var LF = (e10) => {
  const {
    absolute: t,
    children: n,
    classes: o,
    flexItem: r,
    light: s,
    orientation: a,
    textAlign: l,
    variant: c
  } = e10;
  return Ue({
    root: ["root", t && "absolute", c, s && "light", a === "vertical" && "vertical", r && "flexItem", n && "withChildren", n && a === "vertical" && "withChildrenVertical", l === "right" && a !== "vertical" && "textAlignRight", l === "left" && a !== "vertical" && "textAlignLeft"],
    wrapper: ["wrapper", a === "vertical" && "wrapperVertical"]
  }, _F, o);
};
var BF = K("div", {
  name: "MuiDivider",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.root, n.absolute && t.absolute, t[n.variant], n.light && t.light, n.orientation === "vertical" && t.vertical, n.flexItem && t.flexItem, n.children && t.withChildren, n.children && n.orientation === "vertical" && t.withChildrenVertical, n.textAlign === "right" && n.orientation !== "vertical" && t.textAlignRight, n.textAlign === "left" && n.orientation !== "vertical" && t.textAlignLeft];
  }
})(Ve(({
  theme: e10
}) => ({
  margin: 0,
  // Reset browser default style.
  flexShrink: 0,
  borderWidth: 0,
  borderStyle: "solid",
  borderColor: (e10.vars || e10).palette.divider,
  borderBottomWidth: "thin",
  variants: [{
    props: {
      absolute: true
    },
    style: {
      position: "absolute",
      bottom: 0,
      left: 0,
      width: "100%"
    }
  }, {
    props: {
      light: true
    },
    style: {
      borderColor: e10.vars ? `rgba(${e10.vars.palette.dividerChannel} / 0.08)` : We(e10.palette.divider, 0.08)
    }
  }, {
    props: {
      variant: "inset"
    },
    style: {
      marginLeft: 72
    }
  }, {
    props: {
      variant: "middle",
      orientation: "horizontal"
    },
    style: {
      marginLeft: e10.spacing(2),
      marginRight: e10.spacing(2)
    }
  }, {
    props: {
      variant: "middle",
      orientation: "vertical"
    },
    style: {
      marginTop: e10.spacing(1),
      marginBottom: e10.spacing(1)
    }
  }, {
    props: {
      orientation: "vertical"
    },
    style: {
      height: "100%",
      borderBottomWidth: 0,
      borderRightWidth: "thin"
    }
  }, {
    props: {
      flexItem: true
    },
    style: {
      alignSelf: "stretch",
      height: "auto"
    }
  }, {
    props: ({
      ownerState: t
    }) => !!t.children,
    style: {
      display: "flex",
      whiteSpace: "nowrap",
      textAlign: "center",
      border: 0,
      borderTopStyle: "solid",
      borderLeftStyle: "solid",
      "&::before, &::after": {
        content: '""',
        alignSelf: "center"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.children && t.orientation !== "vertical",
    style: {
      "&::before, &::after": {
        width: "100%",
        borderTop: `thin solid ${(e10.vars || e10).palette.divider}`,
        borderTopStyle: "inherit"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.orientation === "vertical" && t.children,
    style: {
      flexDirection: "column",
      "&::before, &::after": {
        height: "100%",
        borderLeft: `thin solid ${(e10.vars || e10).palette.divider}`,
        borderLeftStyle: "inherit"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.textAlign === "right" && t.orientation !== "vertical",
    style: {
      "&::before": {
        width: "90%"
      },
      "&::after": {
        width: "10%"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.textAlign === "left" && t.orientation !== "vertical",
    style: {
      "&::before": {
        width: "10%"
      },
      "&::after": {
        width: "90%"
      }
    }
  }]
})));
var zF = K("span", {
  name: "MuiDivider",
  slot: "Wrapper",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.wrapper, n.orientation === "vertical" && t.wrapperVertical];
  }
})(Ve(({
  theme: e10
}) => ({
  display: "inline-block",
  paddingLeft: `calc(${e10.spacing(1)} * 1.2)`,
  paddingRight: `calc(${e10.spacing(1)} * 1.2)`,
  variants: [{
    props: {
      orientation: "vertical"
    },
    style: {
      paddingTop: `calc(${e10.spacing(1)} * 1.2)`,
      paddingBottom: `calc(${e10.spacing(1)} * 1.2)`
    }
  }]
})));
var Vo = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiDivider"
  }), {
    absolute: r = false,
    children: s,
    className: a,
    orientation: l = "horizontal",
    component: c = s || l === "vertical" ? "div" : "hr",
    flexItem: u = false,
    light: d = false,
    role: p = c !== "hr" ? "separator" : void 0,
    textAlign: m = "center",
    variant: g = "fullWidth",
    ...b
  } = o, v = {
    ...o,
    absolute: r,
    component: c,
    flexItem: u,
    light: d,
    orientation: l,
    role: p,
    textAlign: m,
    variant: g
  }, h = LF(v);
  return f.jsx(BF, {
    as: c,
    className: be(h.root, a),
    role: p,
    ref: n,
    ownerState: v,
    "aria-orientation": p === "separator" && (c !== "hr" || l === "vertical") ? l : void 0,
    ...b,
    children: s ? f.jsx(zF, {
      className: h.wrapper,
      ownerState: v,
      children: s
    }) : null
  });
});
Vo && (Vo.muiSkipListHighlight = true);
Vo.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Absolutely position the element.
   * @default false
   */
  absolute: i.bool,
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, a vertical divider will have the correct height when used in flex container.
   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)
   * @default false
   */
  flexItem: i.bool,
  /**
   * If `true`, the divider will have a lighter color.
   * @default false
   * @deprecated Use <Divider sx={{ opacity: 0.6 }} /> (or any opacity or color) instead. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  light: i.bool,
  /**
   * The component orientation.
   * @default 'horizontal'
   */
  orientation: i.oneOf(["horizontal", "vertical"]),
  /**
   * @ignore
   */
  role: i.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The text alignment.
   * @default 'center'
   */
  textAlign: i.oneOf(["center", "left", "right"]),
  /**
   * The variant to use.
   * @default 'fullWidth'
   */
  variant: i.oneOfType([i.oneOf(["fullWidth", "inset", "middle"]), i.string])
};
var WF = (e10) => {
  const {
    classes: t,
    disableUnderline: n,
    startAdornment: o,
    endAdornment: r,
    size: s,
    hiddenLabel: a,
    multiline: l
  } = e10, c = {
    root: ["root", !n && "underline", o && "adornedStart", r && "adornedEnd", s === "small" && `size${de(s)}`, a && "hiddenLabel", l && "multiline"],
    input: ["input"]
  }, u = Ue(c, ek, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...u
  };
};
var HF = K(ed, {
  shouldForwardProp: (e10) => Fn(e10) || e10 === "classes",
  name: "MuiFilledInput",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [...Ku(e10, t), !n.disableUnderline && t.underline];
  }
})(Ve(({
  theme: e10
}) => {
  const t = e10.palette.mode === "light", n = t ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)", o = t ? "rgba(0, 0, 0, 0.06)" : "rgba(255, 255, 255, 0.09)", r = t ? "rgba(0, 0, 0, 0.09)" : "rgba(255, 255, 255, 0.13)", s = t ? "rgba(0, 0, 0, 0.12)" : "rgba(255, 255, 255, 0.12)";
  return {
    position: "relative",
    backgroundColor: e10.vars ? e10.vars.palette.FilledInput.bg : o,
    borderTopLeftRadius: (e10.vars || e10).shape.borderRadius,
    borderTopRightRadius: (e10.vars || e10).shape.borderRadius,
    transition: e10.transitions.create("background-color", {
      duration: e10.transitions.duration.shorter,
      easing: e10.transitions.easing.easeOut
    }),
    "&:hover": {
      backgroundColor: e10.vars ? e10.vars.palette.FilledInput.hoverBg : r,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: e10.vars ? e10.vars.palette.FilledInput.bg : o
      }
    },
    [`&.${to.focused}`]: {
      backgroundColor: e10.vars ? e10.vars.palette.FilledInput.bg : o
    },
    [`&.${to.disabled}`]: {
      backgroundColor: e10.vars ? e10.vars.palette.FilledInput.disabledBg : s
    },
    variants: [{
      props: ({
        ownerState: a
      }) => !a.disableUnderline,
      style: {
        "&::after": {
          left: 0,
          bottom: 0,
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e10.transitions.create("transform", {
            duration: e10.transitions.duration.shorter,
            easing: e10.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${to.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${to.error}`]: {
          "&::before, &::after": {
            borderBottomColor: (e10.vars || e10).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${e10.vars ? `rgba(${e10.vars.palette.common.onBackgroundChannel} / ${e10.vars.opacity.inputUnderline})` : n}`,
          left: 0,
          bottom: 0,
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e10.transitions.create("border-bottom-color", {
            duration: e10.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${to.disabled}, .${to.error}):before`]: {
          borderBottom: `1px solid ${(e10.vars || e10).palette.text.primary}`
        },
        [`&.${to.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }, ...Object.entries(e10.palette).filter(Rt()).map(([a]) => {
      var l;
      return {
        props: {
          disableUnderline: false,
          color: a
        },
        style: {
          "&::after": {
            borderBottom: `2px solid ${(l = (e10.vars || e10).palette[a]) == null ? void 0 : l.main}`
          }
        }
      };
    }), {
      props: ({
        ownerState: a
      }) => a.startAdornment,
      style: {
        paddingLeft: 12
      }
    }, {
      props: ({
        ownerState: a
      }) => a.endAdornment,
      style: {
        paddingRight: 12
      }
    }, {
      props: ({
        ownerState: a
      }) => a.multiline,
      style: {
        padding: "25px 12px 8px"
      }
    }, {
      props: ({
        ownerState: a,
        size: l
      }) => a.multiline && l === "small",
      style: {
        paddingTop: 21,
        paddingBottom: 4
      }
    }, {
      props: ({
        ownerState: a
      }) => a.multiline && a.hiddenLabel,
      style: {
        paddingTop: 16,
        paddingBottom: 17
      }
    }, {
      props: ({
        ownerState: a
      }) => a.multiline && a.hiddenLabel && a.size === "small",
      style: {
        paddingTop: 8,
        paddingBottom: 9
      }
    }]
  };
}));
var GF = K(td, {
  name: "MuiFilledInput",
  slot: "Input",
  overridesResolver: Qu
})(Ve(({
  theme: e10
}) => ({
  paddingTop: 25,
  paddingRight: 12,
  paddingBottom: 8,
  paddingLeft: 12,
  ...!e10.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e10.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e10.palette.mode === "light" ? null : "#fff",
      caretColor: e10.palette.mode === "light" ? null : "#fff",
      borderTopLeftRadius: "inherit",
      borderTopRightRadius: "inherit"
    }
  },
  ...e10.vars && {
    "&:-webkit-autofill": {
      borderTopLeftRadius: "inherit",
      borderTopRightRadius: "inherit"
    },
    [e10.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      paddingTop: 21,
      paddingBottom: 4
    }
  }, {
    props: ({
      ownerState: t
    }) => t.hiddenLabel,
    style: {
      paddingTop: 16,
      paddingBottom: 17
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.hiddenLabel && t.size === "small",
    style: {
      paddingTop: 8,
      paddingBottom: 9
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      paddingTop: 0,
      paddingBottom: 0,
      paddingLeft: 0,
      paddingRight: 0
    }
  }]
})));
var rl = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiFilledInput"
  }), {
    disableUnderline: r = false,
    components: s = {},
    componentsProps: a,
    fullWidth: l = false,
    hiddenLabel: c,
    // declare here to prevent spreading to DOM
    inputComponent: u = "input",
    multiline: d = false,
    slotProps: p,
    slots: m = {},
    type: g = "text",
    ...b
  } = o, v = {
    ...o,
    disableUnderline: r,
    fullWidth: l,
    inputComponent: u,
    multiline: d,
    type: g
  }, h = WF(o), y = {
    root: {
      ownerState: v
    },
    input: {
      ownerState: v
    }
  }, C = p ?? a ? Cn(y, p ?? a) : y, x = m.root ?? s.Root ?? HF, T = m.input ?? s.Input ?? GF;
  return f.jsx(nd, {
    slots: {
      root: x,
      input: T
    },
    componentsProps: C,
    fullWidth: l,
    inputComponent: u,
    multiline: d,
    ref: n,
    type: g,
    ...b,
    classes: h
  });
});
rl.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: i.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary"]), i.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Input: i.elementType,
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: i.bool,
  /**
   * If `true`, the input will not have an underline.
   * @default false
   */
  disableUnderline: i.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: i.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: i.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: i.bool,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: i.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: On,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: i.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: i.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: i.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: i.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: i.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: i.oneOfType([i.number, i.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: i.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: i.any
};
rl && (rl.muiName = "Input");
function UF(e10) {
  return He("MuiFormControl", e10);
}
Be("MuiFormControl", ["root", "marginNone", "marginNormal", "marginDense", "fullWidth", "disabled"]);
var XF = (e10) => {
  const {
    classes: t,
    margin: n,
    fullWidth: o
  } = e10, r = {
    root: ["root", n !== "none" && `margin${de(n)}`, o && "fullWidth"]
  };
  return Ue(r, UF, t);
};
var YF = K("div", {
  name: "MuiFormControl",
  slot: "Root",
  overridesResolver: ({
    ownerState: e10
  }, t) => ({
    ...t.root,
    ...t[`margin${de(e10.margin)}`],
    ...e10.fullWidth && t.fullWidth
  })
})({
  display: "inline-flex",
  flexDirection: "column",
  position: "relative",
  // Reset fieldset default style.
  minWidth: 0,
  padding: 0,
  margin: 0,
  border: 0,
  verticalAlign: "top",
  // Fix alignment issue on Safari.
  variants: [{
    props: {
      margin: "normal"
    },
    style: {
      marginTop: 16,
      marginBottom: 8
    }
  }, {
    props: {
      margin: "dense"
    },
    style: {
      marginTop: 8,
      marginBottom: 4
    }
  }, {
    props: {
      fullWidth: true
    },
    style: {
      width: "100%"
    }
  }]
});
var So = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiFormControl"
  }), {
    children: r,
    className: s,
    color: a = "primary",
    component: l = "div",
    disabled: c = false,
    error: u = false,
    focused: d,
    fullWidth: p = false,
    hiddenLabel: m = false,
    margin: g = "none",
    required: b = false,
    size: v = "medium",
    variant: h = "outlined",
    ...y
  } = o, C = {
    ...o,
    color: a,
    component: l,
    disabled: c,
    error: u,
    fullWidth: p,
    hiddenLabel: m,
    margin: g,
    required: b,
    size: v,
    variant: h
  }, x = XF(C), [T, w] = S.useState(() => {
    let D = false;
    return r && S.Children.forEach(r, (N) => {
      if (!Pa(N, ["Input", "Select"]))
        return;
      const j = Pa(N, ["Select"]) ? N.props.input : N;
      j && ZM(j.props) && (D = true);
    }), D;
  }), [R, E] = S.useState(() => {
    let D = false;
    return r && S.Children.forEach(r, (N) => {
      Pa(N, ["Input", "Select"]) && (nu(N.props, true) || nu(N.props.inputProps, true)) && (D = true);
    }), D;
  }), [O, I] = S.useState(false);
  c && O && I(false);
  const P = d !== void 0 && !c ? d : O;
  let A;
  const M = S.useRef(false);
  A = () => (M.current && console.error(["MUI: There are multiple `InputBase` components inside a FormControl.", "This creates visual inconsistencies, only use one `InputBase`."].join(`
`)), M.current = true, () => {
    M.current = false;
  });
  const F = S.useMemo(() => ({
    adornedStart: T,
    setAdornedStart: w,
    color: a,
    disabled: c,
    error: u,
    filled: R,
    focused: P,
    fullWidth: p,
    hiddenLabel: m,
    size: v,
    onBlur: () => {
      I(false);
    },
    onEmpty: () => {
      E(false);
    },
    onFilled: () => {
      E(true);
    },
    onFocus: () => {
      I(true);
    },
    registerEffect: A,
    required: b,
    variant: h
  }), [T, a, c, u, R, P, p, m, A, b, v, h]);
  return f.jsx(Al.Provider, {
    value: F,
    children: f.jsx(YF, {
      as: l,
      ownerState: C,
      className: be(x.root, s),
      ref: n,
      ...y,
      children: r
    })
  });
});
So.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, the label, input and helper text should be displayed in a disabled state.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: i.bool,
  /**
   * If `true`, the component is displayed in focused state.
   */
  focused: i.bool,
  /**
   * If `true`, the component will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: i.bool,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: i.oneOf(["dense", "none", "normal"]),
  /**
   * If `true`, the label will indicate that the `input` is required.
   * @default false
   */
  required: i.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: i.oneOf(["filled", "outlined", "standard"])
};
function ZF(e10) {
  return He("MuiFormControlLabel", e10);
}
var Ta = Be("MuiFormControlLabel", ["root", "labelPlacementStart", "labelPlacementTop", "labelPlacementBottom", "disabled", "label", "error", "required", "asterisk"]);
var qF = (e10) => {
  const {
    classes: t,
    disabled: n,
    labelPlacement: o,
    error: r,
    required: s
  } = e10, a = {
    root: ["root", n && "disabled", `labelPlacement${de(o)}`, r && "error", s && "required"],
    label: ["label", n && "disabled"],
    asterisk: ["asterisk", r && "error"]
  };
  return Ue(a, ZF, t);
};
var JF = K("label", {
  name: "MuiFormControlLabel",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [{
      [`& .${Ta.label}`]: t.label
    }, t.root, t[`labelPlacement${de(n.labelPlacement)}`]];
  }
})(Ve(({
  theme: e10
}) => ({
  display: "inline-flex",
  alignItems: "center",
  cursor: "pointer",
  // For correct alignment with the text.
  verticalAlign: "middle",
  WebkitTapHighlightColor: "transparent",
  marginLeft: -11,
  marginRight: 16,
  // used for row presentation of radio/checkbox
  [`&.${Ta.disabled}`]: {
    cursor: "default"
  },
  [`& .${Ta.label}`]: {
    [`&.${Ta.disabled}`]: {
      color: (e10.vars || e10).palette.text.disabled
    }
  },
  variants: [{
    props: {
      labelPlacement: "start"
    },
    style: {
      flexDirection: "row-reverse",
      marginRight: -11
    }
  }, {
    props: {
      labelPlacement: "top"
    },
    style: {
      flexDirection: "column-reverse"
    }
  }, {
    props: {
      labelPlacement: "bottom"
    },
    style: {
      flexDirection: "column"
    }
  }, {
    props: ({
      labelPlacement: t
    }) => t === "start" || t === "top" || t === "bottom",
    style: {
      marginLeft: 16
      // used for row presentation of radio/checkbox
    }
  }]
})));
var KF = K("span", {
  name: "MuiFormControlLabel",
  slot: "Asterisk",
  overridesResolver: (e10, t) => t.asterisk
})(Ve(({
  theme: e10
}) => ({
  [`&.${Ta.error}`]: {
    color: (e10.vars || e10).palette.error.main
  }
})));
var rd = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiFormControlLabel"
  }), {
    checked: r,
    className: s,
    componentsProps: a = {},
    control: l,
    disabled: c,
    disableTypography: u,
    inputRef: d,
    label: p,
    labelPlacement: m = "end",
    name: g,
    onChange: b,
    required: v,
    slots: h = {},
    slotProps: y = {},
    value: C,
    ...x
  } = o, T = Jn(), w = c ?? l.props.disabled ?? (T == null ? void 0 : T.disabled), R = v ?? l.props.required, E = {
    disabled: w,
    required: R
  };
  ["checked", "name", "onChange", "value", "inputRef"].forEach((N) => {
    typeof l.props[N] > "u" && typeof o[N] < "u" && (E[N] = o[N]);
  });
  const O = Vi({
    props: o,
    muiFormControl: T,
    states: ["error"]
  }), I = {
    ...o,
    disabled: w,
    labelPlacement: m,
    required: R,
    error: O.error
  }, P = qF(I), A = {
    slots: h,
    slotProps: {
      ...a,
      ...y
    }
  }, [M, F] = sn("typography", {
    elementType: Fe,
    externalForwardedProps: A,
    ownerState: I
  });
  let D = p;
  return D != null && D.type !== Fe && !u && (D = f.jsx(M, {
    component: "span",
    ...F,
    className: be(P.label, F == null ? void 0 : F.className),
    children: D
  })), f.jsxs(JF, {
    className: be(P.root, s),
    ownerState: I,
    ref: n,
    ...x,
    children: [S.cloneElement(l, E), R ? f.jsxs("div", {
      children: [D, f.jsxs(KF, {
        ownerState: I,
        "aria-hidden": true,
        className: P.asterisk,
        children: [" ", "*"]
      })]
    }) : D]
  });
});
rd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component appears selected.
   */
  checked: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The props used for each slot inside.
   * @default {}
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  componentsProps: i.shape({
    typography: i.object
  }),
  /**
   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.
   */
  control: i.element.isRequired,
  /**
   * If `true`, the control is disabled.
   */
  disabled: i.bool,
  /**
   * If `true`, the label is rendered as it is passed without an additional typography node.
   */
  disableTypography: i.bool,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: On,
  /**
   * A text or an element to be used in an enclosing label element.
   */
  label: i.node,
  /**
   * The position of the label.
   * @default 'end'
   */
  labelPlacement: i.oneOf(["bottom", "end", "start", "top"]),
  /**
   * @ignore
   */
  name: i.string,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: i.func,
  /**
   * If `true`, the label will indicate that the `input` is required.
   */
  required: i.bool,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    typography: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    typography: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The value of the component.
   */
  value: i.any
};
function QF(e10) {
  return He("MuiFormHelperText", e10);
}
var gv = Be("MuiFormHelperText", ["root", "error", "disabled", "sizeSmall", "sizeMedium", "contained", "focused", "filled", "required"]);
var hv;
var e2 = (e10) => {
  const {
    classes: t,
    contained: n,
    size: o,
    disabled: r,
    error: s,
    filled: a,
    focused: l,
    required: c
  } = e10, u = {
    root: ["root", r && "disabled", s && "error", o && `size${de(o)}`, n && "contained", l && "focused", a && "filled", c && "required"]
  };
  return Ue(u, QF, t);
};
var t2 = K("p", {
  name: "MuiFormHelperText",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.root, n.size && t[`size${de(n.size)}`], n.contained && t.contained, n.filled && t.filled];
  }
})(Ve(({
  theme: e10
}) => ({
  color: (e10.vars || e10).palette.text.secondary,
  ...e10.typography.caption,
  textAlign: "left",
  marginTop: 3,
  marginRight: 0,
  marginBottom: 0,
  marginLeft: 0,
  [`&.${gv.disabled}`]: {
    color: (e10.vars || e10).palette.text.disabled
  },
  [`&.${gv.error}`]: {
    color: (e10.vars || e10).palette.error.main
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginTop: 4
    }
  }, {
    props: ({
      ownerState: t
    }) => t.contained,
    style: {
      marginLeft: 14,
      marginRight: 14
    }
  }]
})));
var id = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiFormHelperText"
  }), {
    children: r,
    className: s,
    component: a = "p",
    disabled: l,
    error: c,
    filled: u,
    focused: d,
    margin: p,
    required: m,
    variant: g,
    ...b
  } = o, v = Jn(), h = Vi({
    props: o,
    muiFormControl: v,
    states: ["variant", "size", "disabled", "error", "filled", "focused", "required"]
  }), y = {
    ...o,
    component: a,
    contained: h.variant === "filled" || h.variant === "outlined",
    variant: h.variant,
    size: h.size,
    disabled: h.disabled,
    error: h.error,
    filled: h.filled,
    focused: h.focused,
    required: h.required
  };
  delete y.ownerState;
  const C = e2(y);
  return f.jsx(t2, {
    as: a,
    className: be(C.root, s),
    ref: n,
    ...b,
    ownerState: y,
    children: r === " " ? (
      // notranslate needed while Google Translate will not fix zero-width space issue
      hv || (hv = f.jsx("span", {
        className: "notranslate",
        children: "​"
      }))
    ) : r
  });
});
id.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   *
   * If `' '` is provided, the component reserves one line height for displaying a future message.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, the helper text should be displayed in a disabled state.
   */
  disabled: i.bool,
  /**
   * If `true`, helper text should be displayed in an error state.
   */
  error: i.bool,
  /**
   * If `true`, the helper text should use filled classes key.
   */
  filled: i.bool,
  /**
   * If `true`, the helper text should use focused classes key.
   */
  focused: i.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: i.oneOf(["dense"]),
  /**
   * If `true`, the helper text should use required classes key.
   */
  required: i.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The variant to use.
   */
  variant: i.oneOfType([i.oneOf(["filled", "outlined", "standard"]), i.string])
};
function n2(e10) {
  return He("MuiFormLabel", e10);
}
var Fa = Be("MuiFormLabel", ["root", "colorSecondary", "focused", "disabled", "error", "filled", "required", "asterisk"]);
var o2 = (e10) => {
  const {
    classes: t,
    color: n,
    focused: o,
    disabled: r,
    error: s,
    filled: a,
    required: l
  } = e10, c = {
    root: ["root", `color${de(n)}`, r && "disabled", s && "error", a && "filled", o && "focused", l && "required"],
    asterisk: ["asterisk", s && "error"]
  };
  return Ue(c, n2, t);
};
var r2 = K("label", {
  name: "MuiFormLabel",
  slot: "Root",
  overridesResolver: ({
    ownerState: e10
  }, t) => ({
    ...t.root,
    ...e10.color === "secondary" && t.colorSecondary,
    ...e10.filled && t.filled
  })
})(Ve(({
  theme: e10
}) => ({
  color: (e10.vars || e10).palette.text.secondary,
  ...e10.typography.body1,
  lineHeight: "1.4375em",
  padding: 0,
  position: "relative",
  variants: [...Object.entries(e10.palette).filter(Rt()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${Fa.focused}`]: {
        color: (e10.vars || e10).palette[t].main
      }
    }
  })), {
    props: {},
    style: {
      [`&.${Fa.disabled}`]: {
        color: (e10.vars || e10).palette.text.disabled
      },
      [`&.${Fa.error}`]: {
        color: (e10.vars || e10).palette.error.main
      }
    }
  }]
})));
var i2 = K("span", {
  name: "MuiFormLabel",
  slot: "Asterisk",
  overridesResolver: (e10, t) => t.asterisk
})(Ve(({
  theme: e10
}) => ({
  [`&.${Fa.error}`]: {
    color: (e10.vars || e10).palette.error.main
  }
})));
var _C = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiFormLabel"
  }), {
    children: r,
    className: s,
    color: a,
    component: l = "label",
    disabled: c,
    error: u,
    filled: d,
    focused: p,
    required: m,
    ...g
  } = o, b = Jn(), v = Vi({
    props: o,
    muiFormControl: b,
    states: ["color", "required", "focused", "disabled", "error", "filled"]
  }), h = {
    ...o,
    color: v.color || "primary",
    component: l,
    disabled: v.disabled,
    error: v.error,
    filled: v.filled,
    focused: v.focused,
    required: v.required
  }, y = o2(h);
  return f.jsxs(r2, {
    as: l,
    ownerState: h,
    className: be(y.root, s),
    ref: n,
    ...g,
    children: [r, v.required && f.jsxs(i2, {
      ownerState: h,
      "aria-hidden": true,
      className: y.asterisk,
      children: [" ", "*"]
    })]
  });
});
_C.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: i.oneOfType([i.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, the label should be displayed in a disabled state.
   */
  disabled: i.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: i.bool,
  /**
   * If `true`, the label should use filled classes key.
   */
  filled: i.bool,
  /**
   * If `true`, the input of this label is focused (used by `FormGroup` components).
   */
  focused: i.bool,
  /**
   * If `true`, the label will indicate that the `input` is required.
   */
  required: i.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
};
var Pf = S.createContext();
Pf.displayName = "GridContext";
function s2(e10) {
  return He("MuiGrid", e10);
}
var a2 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
var l2 = ["column-reverse", "column", "row-reverse", "row"];
var c2 = ["nowrap", "wrap-reverse", "wrap"];
var la = ["auto", true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];
var il = Be("MuiGrid", [
  "root",
  "container",
  "item",
  "zeroMinWidth",
  // spacings
  ...a2.map((e10) => `spacing-xs-${e10}`),
  // direction values
  ...l2.map((e10) => `direction-xs-${e10}`),
  // wrap values
  ...c2.map((e10) => `wrap-xs-${e10}`),
  // grid sizes for all breakpoints
  ...la.map((e10) => `grid-xs-${e10}`),
  ...la.map((e10) => `grid-sm-${e10}`),
  ...la.map((e10) => `grid-md-${e10}`),
  ...la.map((e10) => `grid-lg-${e10}`),
  ...la.map((e10) => `grid-xl-${e10}`)
]);
function u2({
  theme: e10,
  ownerState: t
}) {
  let n;
  return e10.breakpoints.keys.reduce((o, r) => {
    let s = {};
    if (t[r] && (n = t[r]), !n)
      return o;
    if (n === true)
      s = {
        flexBasis: 0,
        flexGrow: 1,
        maxWidth: "100%"
      };
    else if (n === "auto")
      s = {
        flexBasis: "auto",
        flexGrow: 0,
        flexShrink: 0,
        maxWidth: "none",
        width: "auto"
      };
    else {
      const a = wi({
        values: t.columns,
        breakpoints: e10.breakpoints.values
      }), l = typeof a == "object" ? a[r] : a;
      if (l == null)
        return o;
      const c = `${Math.round(n / l * 1e8) / 1e6}%`;
      let u = {};
      if (t.container && t.item && t.columnSpacing !== 0) {
        const d = e10.spacing(t.columnSpacing);
        if (d !== "0px") {
          const p = `calc(${c} + ${d})`;
          u = {
            flexBasis: p,
            maxWidth: p
          };
        }
      }
      s = {
        flexBasis: c,
        flexGrow: 0,
        maxWidth: c,
        ...u
      };
    }
    return e10.breakpoints.values[r] === 0 ? Object.assign(o, s) : o[e10.breakpoints.up(r)] = s, o;
  }, {});
}
function d2({
  theme: e10,
  ownerState: t
}) {
  const n = wi({
    values: t.direction,
    breakpoints: e10.breakpoints.values
  });
  return qn({
    theme: e10
  }, n, (o) => {
    const r = {
      flexDirection: o
    };
    return o.startsWith("column") && (r[`& > .${il.item}`] = {
      maxWidth: "none"
    }), r;
  });
}
function LC({
  breakpoints: e10,
  values: t
}) {
  let n = "";
  Object.keys(t).forEach((r) => {
    n === "" && t[r] !== 0 && (n = r);
  });
  const o = Object.keys(e10).sort((r, s) => e10[r] - e10[s]);
  return o.slice(0, o.indexOf(n));
}
function p2({
  theme: e10,
  ownerState: t
}) {
  const {
    container: n,
    rowSpacing: o
  } = t;
  let r = {};
  if (n && o !== 0) {
    const s = wi({
      values: o,
      breakpoints: e10.breakpoints.values
    });
    let a;
    typeof s == "object" && (a = LC({
      breakpoints: e10.breakpoints.values,
      values: s
    })), r = qn({
      theme: e10
    }, s, (l, c) => {
      const u = e10.spacing(l);
      return u !== "0px" ? {
        marginTop: e10.spacing(-l),
        [`& > .${il.item}`]: {
          paddingTop: u
        }
      } : a != null && a.includes(c) ? {} : {
        marginTop: 0,
        [`& > .${il.item}`]: {
          paddingTop: 0
        }
      };
    });
  }
  return r;
}
function f2({
  theme: e10,
  ownerState: t
}) {
  const {
    container: n,
    columnSpacing: o
  } = t;
  let r = {};
  if (n && o !== 0) {
    const s = wi({
      values: o,
      breakpoints: e10.breakpoints.values
    });
    let a;
    typeof s == "object" && (a = LC({
      breakpoints: e10.breakpoints.values,
      values: s
    })), r = qn({
      theme: e10
    }, s, (l, c) => {
      const u = e10.spacing(l);
      if (u !== "0px") {
        const d = e10.spacing(-l);
        return {
          width: `calc(100% + ${u})`,
          marginLeft: d,
          [`& > .${il.item}`]: {
            paddingLeft: u
          }
        };
      }
      return a != null && a.includes(c) ? {} : {
        width: "100%",
        marginLeft: 0,
        [`& > .${il.item}`]: {
          paddingLeft: 0
        }
      };
    });
  }
  return r;
}
function m2(e10, t, n = {}) {
  if (!e10 || e10 <= 0)
    return [];
  if (typeof e10 == "string" && !Number.isNaN(Number(e10)) || typeof e10 == "number")
    return [n[`spacing-xs-${String(e10)}`]];
  const o = [];
  return t.forEach((r) => {
    const s = e10[r];
    Number(s) > 0 && o.push(n[`spacing-${r}-${String(s)}`]);
  }), o;
}
var g2 = K("div", {
  name: "MuiGrid",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10, {
      container: o,
      direction: r,
      item: s,
      spacing: a,
      wrap: l,
      zeroMinWidth: c,
      breakpoints: u
    } = n;
    let d = [];
    o && (d = m2(a, u, t));
    const p = [];
    return u.forEach((m) => {
      const g = n[m];
      g && p.push(t[`grid-${m}-${String(g)}`]);
    }), [t.root, o && t.container, s && t.item, c && t.zeroMinWidth, ...d, r !== "row" && t[`direction-xs-${String(r)}`], l !== "wrap" && t[`wrap-xs-${String(l)}`], ...p];
  }
})(
  // FIXME(romgrk): Can't use memoTheme here
  ({
    ownerState: e10
  }) => ({
    boxSizing: "border-box",
    ...e10.container && {
      display: "flex",
      flexWrap: "wrap",
      width: "100%"
    },
    ...e10.item && {
      margin: 0
      // For instance, it's useful when used with a `figure` element.
    },
    ...e10.zeroMinWidth && {
      minWidth: 0
    },
    ...e10.wrap !== "wrap" && {
      flexWrap: e10.wrap
    }
  }),
  d2,
  p2,
  f2,
  u2
);
function h2(e10, t) {
  if (!e10 || e10 <= 0)
    return [];
  if (typeof e10 == "string" && !Number.isNaN(Number(e10)) || typeof e10 == "number")
    return [`spacing-xs-${String(e10)}`];
  const n = [];
  return t.forEach((o) => {
    const r = e10[o];
    if (Number(r) > 0) {
      const s = `spacing-${o}-${String(r)}`;
      n.push(s);
    }
  }), n;
}
var b2 = (e10) => {
  const {
    classes: t,
    container: n,
    direction: o,
    item: r,
    spacing: s,
    wrap: a,
    zeroMinWidth: l,
    breakpoints: c
  } = e10;
  let u = [];
  n && (u = h2(s, c));
  const d = [];
  c.forEach((m) => {
    const g = e10[m];
    g && d.push(`grid-${m}-${String(g)}`);
  });
  const p = {
    root: ["root", n && "container", r && "item", l && "zeroMinWidth", ...u, o !== "row" && `direction-xs-${String(o)}`, a !== "wrap" && `wrap-xs-${String(a)}`, ...d]
  };
  return Ue(p, s2, t);
};
var Ct = S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiGrid"
  }), {
    breakpoints: r
  } = Sn(), s = zu(o), {
    className: a,
    columns: l,
    columnSpacing: c,
    component: u = "div",
    container: d = false,
    direction: p = "row",
    item: m = false,
    rowSpacing: g,
    spacing: b = 0,
    wrap: v = "wrap",
    zeroMinWidth: h = false,
    ...y
  } = s, C = g || b, x = c || b, T = S.useContext(Pf), w = d ? l || 12 : T, R = {}, E = {
    ...y
  };
  r.keys.forEach((P) => {
    y[P] != null && (R[P] = y[P], delete E[P]);
  });
  const O = {
    ...s,
    columns: w,
    container: d,
    direction: p,
    item: m,
    rowSpacing: C,
    columnSpacing: x,
    wrap: v,
    zeroMinWidth: h,
    spacing: b,
    ...R,
    breakpoints: r.keys
  }, I = b2(O);
  return f.jsx(Pf.Provider, {
    value: w,
    children: f.jsx(g2, {
      ownerState: O,
      className: be(I.root, a),
      as: u,
      ref: n,
      ...E
    })
  });
});
Ct.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The number of columns.
   * @default 12
   */
  columns: i.oneOfType([i.arrayOf(i.number), i.number, i.object]),
  /**
   * Defines the horizontal space between the type `item` components.
   * It overrides the value of the `spacing` prop.
   */
  columnSpacing: i.oneOfType([i.arrayOf(i.oneOfType([i.number, i.string])), i.number, i.object, i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, the component will have the flex *container* behavior.
   * You should be wrapping *items* with a *container*.
   * @default false
   */
  container: i.bool,
  /**
   * Defines the `flex-direction` style property.
   * It is applied for all screen sizes.
   * @default 'row'
   */
  direction: i.oneOfType([i.oneOf(["column-reverse", "column", "row-reverse", "row"]), i.arrayOf(i.oneOf(["column-reverse", "column", "row-reverse", "row"])), i.object]),
  /**
   * If `true`, the component will have the flex *item* behavior.
   * You should be wrapping *items* with a *container*.
   * @default false
   */
  item: i.bool,
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for the `lg` breakpoint and wider screens if not overridden.
   * @default false
   */
  lg: i.oneOfType([i.oneOf(["auto"]), i.number, i.bool]),
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for the `md` breakpoint and wider screens if not overridden.
   * @default false
   */
  md: i.oneOfType([i.oneOf(["auto"]), i.number, i.bool]),
  /**
   * Defines the vertical space between the type `item` components.
   * It overrides the value of the `spacing` prop.
   */
  rowSpacing: i.oneOfType([i.arrayOf(i.oneOfType([i.number, i.string])), i.number, i.object, i.string]),
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for the `sm` breakpoint and wider screens if not overridden.
   * @default false
   */
  sm: i.oneOfType([i.oneOf(["auto"]), i.number, i.bool]),
  /**
   * Defines the space between the type `item` components.
   * It can only be used on a type `container` component.
   * @default 0
   */
  spacing: i.oneOfType([i.arrayOf(i.oneOfType([i.number, i.string])), i.number, i.object, i.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Defines the `flex-wrap` style property.
   * It's applied for all screen sizes.
   * @default 'wrap'
   */
  wrap: i.oneOf(["nowrap", "wrap-reverse", "wrap"]),
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for the `xl` breakpoint and wider screens if not overridden.
   * @default false
   */
  xl: i.oneOfType([i.oneOf(["auto"]), i.number, i.bool]),
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for all the screen sizes with the lowest priority.
   * @default false
   */
  xs: i.oneOfType([i.oneOf(["auto"]), i.number, i.bool]),
  /**
   * If `true`, it sets `min-width: 0` on the item.
   * Refer to the limitations section of the documentation to better understand the use case.
   * @default false
   */
  zeroMinWidth: i.bool
};
if (true) {
  const e10 = QP("Grid", Ct);
  Ct.propTypes = {
    // eslint-disable-next-line react/forbid-foreign-prop-types
    ...Ct.propTypes,
    direction: e10("container"),
    lg: e10("item"),
    md: e10("item"),
    sm: e10("item"),
    spacing: e10("container"),
    wrap: e10("container"),
    xs: e10("item"),
    zeroMinWidth: e10("item")
  };
}
function Af(e10) {
  return `scale(${e10}, ${e10 ** 2})`;
}
var v2 = {
  entering: {
    opacity: 1,
    transform: Af(1)
  },
  entered: {
    opacity: 1,
    transform: "none"
  }
};
var Cp = typeof navigator < "u" && /^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent) && /(os |version\/)15(.|_)4/i.test(navigator.userAgent);
var Kr = S.forwardRef(function(t, n) {
  const {
    addEndListener: o,
    appear: r = true,
    children: s,
    easing: a,
    in: l,
    onEnter: c,
    onEntered: u,
    onEntering: d,
    onExit: p,
    onExited: m,
    onExiting: g,
    style: b,
    timeout: v = "auto",
    // eslint-disable-next-line react/prop-types
    TransitionComponent: h = fo,
    ...y
  } = t, C = yi(), x = S.useRef(), T = Sn(), w = S.useRef(null), R = Jt(w, Hs(s), n), E = (N) => (j) => {
    if (N) {
      const _ = w.current;
      j === void 0 ? N(_) : N(_, j);
    }
  }, O = E(d), I = E((N, j) => {
    gC(N);
    const {
      duration: _,
      delay: z,
      easing: $
    } = Os({
      style: b,
      timeout: v,
      easing: a
    }, {
      mode: "enter"
    });
    let k;
    v === "auto" ? (k = T.transitions.getAutoHeightDuration(N.clientHeight), x.current = k) : k = _, N.style.transition = [T.transitions.create("opacity", {
      duration: k,
      delay: z
    }), T.transitions.create("transform", {
      duration: Cp ? k : k * 0.666,
      delay: z,
      easing: $
    })].join(","), c && c(N, j);
  }), P = E(u), A = E(g), M = E((N) => {
    const {
      duration: j,
      delay: _,
      easing: z
    } = Os({
      style: b,
      timeout: v,
      easing: a
    }, {
      mode: "exit"
    });
    let $;
    v === "auto" ? ($ = T.transitions.getAutoHeightDuration(N.clientHeight), x.current = $) : $ = j, N.style.transition = [T.transitions.create("opacity", {
      duration: $,
      delay: _
    }), T.transitions.create("transform", {
      duration: Cp ? $ : $ * 0.666,
      delay: Cp ? _ : _ || $ * 0.333,
      easing: z
    })].join(","), N.style.opacity = 0, N.style.transform = Af(0.75), p && p(N);
  }), F = E(m), D = (N) => {
    v === "auto" && C.start(x.current || 0, N), o && o(w.current, N);
  };
  return f.jsx(h, {
    appear: r,
    in: l,
    nodeRef: w,
    onEnter: I,
    onEntered: P,
    onEntering: O,
    onExit: M,
    onExited: F,
    onExiting: A,
    addEndListener: D,
    timeout: v === "auto" ? null : v,
    ...y,
    children: (N, j) => S.cloneElement(s, {
      style: {
        opacity: 0,
        transform: Af(0.75),
        visibility: N === "exited" && !l ? "hidden" : void 0,
        ...v2[N],
        ...b,
        ...s.props.style
      },
      ref: R,
      ...j
    })
  });
});
Kr.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: i.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: i.bool,
  /**
   * A single child content element.
   */
  children: Bs.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: i.oneOfType([i.shape({
    enter: i.string,
    exit: i.string
  }), i.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: i.bool,
  /**
   * @ignore
   */
  onEnter: i.func,
  /**
   * @ignore
   */
  onEntered: i.func,
  /**
   * @ignore
   */
  onEntering: i.func,
  /**
   * @ignore
   */
  onExit: i.func,
  /**
   * @ignore
   */
  onExited: i.func,
  /**
   * @ignore
   */
  onExiting: i.func,
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  timeout: i.oneOfType([i.oneOf(["auto"]), i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })])
};
Kr && (Kr.muiSupportAuto = true);
var y2 = (e10) => {
  const {
    classes: t,
    disableUnderline: n
  } = e10, r = Ue({
    root: ["root", !n && "underline"],
    input: ["input"]
  }, KM, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...r
  };
};
var x2 = K(ed, {
  shouldForwardProp: (e10) => Fn(e10) || e10 === "classes",
  name: "MuiInput",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [...Ku(e10, t), !n.disableUnderline && t.underline];
  }
})(Ve(({
  theme: e10
}) => {
  let n = e10.palette.mode === "light" ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)";
  return e10.vars && (n = `rgba(${e10.vars.palette.common.onBackgroundChannel} / ${e10.vars.opacity.inputUnderline})`), {
    position: "relative",
    variants: [{
      props: ({
        ownerState: o
      }) => o.formControl,
      style: {
        "label + &": {
          marginTop: 16
        }
      }
    }, {
      props: ({
        ownerState: o
      }) => !o.disableUnderline,
      style: {
        "&::after": {
          left: 0,
          bottom: 0,
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e10.transitions.create("transform", {
            duration: e10.transitions.duration.shorter,
            easing: e10.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${zr.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${zr.error}`]: {
          "&::before, &::after": {
            borderBottomColor: (e10.vars || e10).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${n}`,
          left: 0,
          bottom: 0,
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e10.transitions.create("border-bottom-color", {
            duration: e10.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${zr.disabled}, .${zr.error}):before`]: {
          borderBottom: `2px solid ${(e10.vars || e10).palette.text.primary}`,
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            borderBottom: `1px solid ${n}`
          }
        },
        [`&.${zr.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }, ...Object.entries(e10.palette).filter(Rt()).map(([o]) => ({
      props: {
        color: o,
        disableUnderline: false
      },
      style: {
        "&::after": {
          borderBottom: `2px solid ${(e10.vars || e10).palette[o].main}`
        }
      }
    }))]
  };
}));
var C2 = K(td, {
  name: "MuiInput",
  slot: "Input",
  overridesResolver: Qu
})({});
var sl = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiInput"
  }), {
    disableUnderline: r = false,
    components: s = {},
    componentsProps: a,
    fullWidth: l = false,
    inputComponent: c = "input",
    multiline: u = false,
    slotProps: d,
    slots: p = {},
    type: m = "text",
    ...g
  } = o, b = y2(o), h = {
    root: {
      ownerState: {
        disableUnderline: r
      }
    }
  }, y = d ?? a ? Cn(d ?? a, h) : h, C = p.root ?? s.Root ?? x2, x = p.input ?? s.Input ?? C2;
  return f.jsx(nd, {
    slots: {
      root: C,
      input: x
    },
    slotProps: y,
    fullWidth: l,
    inputComponent: c,
    multiline: u,
    ref: n,
    type: m,
    ...g,
    classes: b
  });
});
sl.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: i.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary"]), i.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Input: i.elementType,
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: i.bool,
  /**
   * If `true`, the `input` will not have an underline.
   * @default false
   */
  disableUnderline: i.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: i.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: i.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: i.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: On,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: i.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: i.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: i.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: i.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: i.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: i.oneOfType([i.number, i.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: i.shape({
    input: i.object,
    root: i.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: i.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: i.any
};
sl && (sl.muiName = "Input");
function S2(e10) {
  return He("MuiInputAdornment", e10);
}
var bv = Be("MuiInputAdornment", ["root", "filled", "standard", "outlined", "positionStart", "positionEnd", "disablePointerEvents", "hiddenLabel", "sizeSmall"]);
var vv;
var w2 = (e10, t) => {
  const {
    ownerState: n
  } = e10;
  return [t.root, t[`position${de(n.position)}`], n.disablePointerEvents === true && t.disablePointerEvents, t[n.variant]];
};
var T2 = (e10) => {
  const {
    classes: t,
    disablePointerEvents: n,
    hiddenLabel: o,
    position: r,
    size: s,
    variant: a
  } = e10, l = {
    root: ["root", n && "disablePointerEvents", r && `position${de(r)}`, a, o && "hiddenLabel", s && `size${de(s)}`]
  };
  return Ue(l, S2, t);
};
var I2 = K("div", {
  name: "MuiInputAdornment",
  slot: "Root",
  overridesResolver: w2
})(Ve(({
  theme: e10
}) => ({
  display: "flex",
  maxHeight: "2em",
  alignItems: "center",
  whiteSpace: "nowrap",
  color: (e10.vars || e10).palette.action.active,
  variants: [{
    props: {
      variant: "filled"
    },
    style: {
      [`&.${bv.positionStart}&:not(.${bv.hiddenLabel})`]: {
        marginTop: 16
      }
    }
  }, {
    props: {
      position: "start"
    },
    style: {
      marginRight: 8
    }
  }, {
    props: {
      position: "end"
    },
    style: {
      marginLeft: 8
    }
  }, {
    props: {
      disablePointerEvents: true
    },
    style: {
      pointerEvents: "none"
    }
  }]
})));
var Or = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiInputAdornment"
  }), {
    children: r,
    className: s,
    component: a = "div",
    disablePointerEvents: l = false,
    disableTypography: c = false,
    position: u,
    variant: d,
    ...p
  } = o, m = Jn() || {};
  let g = d;
  d && m.variant && true && d === m.variant && console.error("MUI: The `InputAdornment` variant infers the variant prop you do not have to provide one."), m && !g && (g = m.variant);
  const b = {
    ...o,
    hiddenLabel: m.hiddenLabel,
    size: m.size,
    disablePointerEvents: l,
    position: u,
    variant: g
  }, v = T2(b);
  return f.jsx(Al.Provider, {
    value: null,
    children: f.jsx(I2, {
      as: a,
      ownerState: b,
      className: be(v.root, s),
      ref: n,
      ...p,
      children: typeof r == "string" && !c ? f.jsx(Fe, {
        color: "textSecondary",
        children: r
      }) : f.jsxs(S.Fragment, {
        children: [u === "start" ? (
          /* notranslate needed while Google Translate will not fix zero-width space issue */
          vv || (vv = f.jsx("span", {
            className: "notranslate",
            children: "​"
          }))
        ) : null, r]
      })
    })
  });
});
Or.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally an `IconButton` or string.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * Disable pointer events on the root.
   * This allows for the content of the adornment to focus the `input` on click.
   * @default false
   */
  disablePointerEvents: i.bool,
  /**
   * If children is a string then disable wrapping in a Typography component.
   * @default false
   */
  disableTypography: i.bool,
  /**
   * The position this adornment should appear relative to the `Input`.
   */
  position: i.oneOf(["end", "start"]).isRequired,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The variant to use.
   * Note: If you are using the `TextField` component or the `FormControl` component
   * you do not have to set this manually.
   */
  variant: i.oneOf(["filled", "outlined", "standard"])
};
function R2(e10) {
  return He("MuiInputLabel", e10);
}
Be("MuiInputLabel", ["root", "focused", "disabled", "error", "required", "asterisk", "formControl", "sizeSmall", "shrink", "animated", "standard", "filled", "outlined"]);
var E2 = (e10) => {
  const {
    classes: t,
    formControl: n,
    size: o,
    shrink: r,
    disableAnimation: s,
    variant: a,
    required: l
  } = e10, c = {
    root: ["root", n && "formControl", !s && "animated", r && "shrink", o && o !== "normal" && `size${de(o)}`, a],
    asterisk: [l && "asterisk"]
  }, u = Ue(c, R2, t);
  return {
    ...t,
    // forward the focused, disabled, etc. classes to the FormLabel
    ...u
  };
};
var O2 = K(_C, {
  shouldForwardProp: (e10) => Fn(e10) || e10 === "classes",
  name: "MuiInputLabel",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [{
      [`& .${Fa.asterisk}`]: t.asterisk
    }, t.root, n.formControl && t.formControl, n.size === "small" && t.sizeSmall, n.shrink && t.shrink, !n.disableAnimation && t.animated, n.focused && t.focused, t[n.variant]];
  }
})(Ve(({
  theme: e10
}) => ({
  display: "block",
  transformOrigin: "top left",
  whiteSpace: "nowrap",
  overflow: "hidden",
  textOverflow: "ellipsis",
  maxWidth: "100%",
  variants: [{
    props: ({
      ownerState: t
    }) => t.formControl,
    style: {
      position: "absolute",
      left: 0,
      top: 0,
      // slight alteration to spec spacing to match visual spec result
      transform: "translate(0, 20px) scale(1)"
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      // Compensation for the `Input.inputSizeSmall` style.
      transform: "translate(0, 17px) scale(1)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.shrink,
    style: {
      transform: "translate(0, -1.5px) scale(0.75)",
      transformOrigin: "top left",
      maxWidth: "133%"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disableAnimation,
    style: {
      transition: e10.transitions.create(["color", "transform", "max-width"], {
        duration: e10.transitions.duration.shorter,
        easing: e10.transitions.easing.easeOut
      })
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      // Chrome's autofill feature gives the input field a yellow background.
      // Since the input field is behind the label in the HTML tree,
      // the input field is drawn last and hides the label with an opaque background color.
      // zIndex: 1 will raise the label above opaque background-colors of input.
      zIndex: 1,
      pointerEvents: "none",
      transform: "translate(12px, 16px) scale(1)",
      maxWidth: "calc(100% - 24px)"
    }
  }, {
    props: {
      variant: "filled",
      size: "small"
    },
    style: {
      transform: "translate(12px, 13px) scale(1)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n
    }) => t === "filled" && n.shrink,
    style: {
      userSelect: "none",
      pointerEvents: "auto",
      transform: "translate(12px, 7px) scale(0.75)",
      maxWidth: "calc(133% - 24px)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n,
      size: o
    }) => t === "filled" && n.shrink && o === "small",
    style: {
      transform: "translate(12px, 4px) scale(0.75)"
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      // see comment above on filled.zIndex
      zIndex: 1,
      pointerEvents: "none",
      transform: "translate(14px, 16px) scale(1)",
      maxWidth: "calc(100% - 24px)"
    }
  }, {
    props: {
      variant: "outlined",
      size: "small"
    },
    style: {
      transform: "translate(14px, 9px) scale(1)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n
    }) => t === "outlined" && n.shrink,
    style: {
      userSelect: "none",
      pointerEvents: "auto",
      // Theoretically, we should have (8+5)*2/0.75 = 34px
      // but it feels a better when it bleeds a bit on the left, so 32px.
      maxWidth: "calc(133% - 32px)",
      transform: "translate(14px, -9px) scale(0.75)"
    }
  }]
})));
var sd = S.forwardRef(function(t, n) {
  const o = Ye({
    name: "MuiInputLabel",
    props: t
  }), {
    disableAnimation: r = false,
    margin: s,
    shrink: a,
    variant: l,
    className: c,
    ...u
  } = o, d = Jn();
  let p = a;
  typeof p > "u" && d && (p = d.filled || d.focused || d.adornedStart);
  const m = Vi({
    props: o,
    muiFormControl: d,
    states: ["size", "variant", "required", "focused"]
  }), g = {
    ...o,
    disableAnimation: r,
    formControl: d,
    shrink: p,
    size: m.size,
    variant: m.variant,
    required: m.required,
    focused: m.focused
  }, b = E2(g);
  return f.jsx(O2, {
    "data-shrink": p,
    ref: n,
    className: be(b.root, c),
    ...u,
    ownerState: g,
    classes: b
  });
});
sd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: i.oneOfType([i.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), i.string]),
  /**
   * If `true`, the transition animation is disabled.
   * @default false
   */
  disableAnimation: i.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: i.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: i.bool,
  /**
   * If `true`, the `input` of this label is focused.
   */
  focused: i.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: i.oneOf(["dense"]),
  /**
   * if `true`, the label will indicate that the `input` is required.
   */
  required: i.bool,
  /**
   * If `true`, the label is shrunk.
   */
  shrink: i.bool,
  /**
   * The size of the component.
   * @default 'normal'
   */
  size: i.oneOfType([i.oneOf(["normal", "small"]), i.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The variant to use.
   */
  variant: i.oneOf(["filled", "outlined", "standard"])
};
function P2(e10) {
  return He("MuiLinearProgress", e10);
}
Be("MuiLinearProgress", ["root", "colorPrimary", "colorSecondary", "determinate", "indeterminate", "buffer", "query", "dashed", "dashedColorPrimary", "dashedColorSecondary", "bar", "barColorPrimary", "barColorSecondary", "bar1Indeterminate", "bar1Determinate", "bar1Buffer", "bar2Indeterminate", "bar2Buffer"]);
var jf = 4;
var Df = zo`
  0% {
    left: -35%;
    right: 100%;
  }

  60% {
    left: 100%;
    right: -90%;
  }

  100% {
    left: 100%;
    right: -90%;
  }
`;
var A2 = typeof Df != "string" ? lr`
        animation: ${Df} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;
      ` : null;
var Mf = zo`
  0% {
    left: -200%;
    right: 100%;
  }

  60% {
    left: 107%;
    right: -8%;
  }

  100% {
    left: 107%;
    right: -8%;
  }
`;
var j2 = typeof Mf != "string" ? lr`
        animation: ${Mf} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;
      ` : null;
var kf = zo`
  0% {
    opacity: 1;
    background-position: 0 -23px;
  }

  60% {
    opacity: 0;
    background-position: 0 -23px;
  }

  100% {
    opacity: 1;
    background-position: -200px -23px;
  }
`;
var D2 = typeof kf != "string" ? lr`
        animation: ${kf} 3s infinite linear;
      ` : null;
var M2 = (e10) => {
  const {
    classes: t,
    variant: n,
    color: o
  } = e10, r = {
    root: ["root", `color${de(o)}`, n],
    dashed: ["dashed", `dashedColor${de(o)}`],
    bar1: ["bar", `barColor${de(o)}`, (n === "indeterminate" || n === "query") && "bar1Indeterminate", n === "determinate" && "bar1Determinate", n === "buffer" && "bar1Buffer"],
    bar2: ["bar", n !== "buffer" && `barColor${de(o)}`, n === "buffer" && `color${de(o)}`, (n === "indeterminate" || n === "query") && "bar2Indeterminate", n === "buffer" && "bar2Buffer"]
  };
  return Ue(r, P2, t);
};
var cg = (e10, t) => e10.vars ? e10.vars.palette.LinearProgress[`${t}Bg`] : e10.palette.mode === "light" ? Hn(e10.palette[t].main, 0.62) : lo(e10.palette[t].main, 0.5);
var k2 = K("span", {
  name: "MuiLinearProgress",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.root, t[`color${de(n.color)}`], t[n.variant]];
  }
})(Ve(({
  theme: e10
}) => ({
  position: "relative",
  overflow: "hidden",
  display: "block",
  height: 4,
  // Fix Safari's bug during composition of different paint.
  zIndex: 0,
  "@media print": {
    colorAdjust: "exact"
  },
  variants: [...Object.entries(e10.palette).filter(Rt()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: cg(e10, t)
    }
  })), {
    props: ({
      ownerState: t
    }) => t.color === "inherit" && t.variant !== "buffer",
    style: {
      "&::before": {
        content: '""',
        position: "absolute",
        left: 0,
        top: 0,
        right: 0,
        bottom: 0,
        backgroundColor: "currentColor",
        opacity: 0.3
      }
    }
  }, {
    props: {
      variant: "buffer"
    },
    style: {
      backgroundColor: "transparent"
    }
  }, {
    props: {
      variant: "query"
    },
    style: {
      transform: "rotate(180deg)"
    }
  }]
})));
var F2 = K("span", {
  name: "MuiLinearProgress",
  slot: "Dashed",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.dashed, t[`dashedColor${de(n.color)}`]];
  }
})(Ve(({
  theme: e10
}) => ({
  position: "absolute",
  marginTop: 0,
  height: "100%",
  width: "100%",
  backgroundSize: "10px 10px",
  backgroundPosition: "0 -23px",
  variants: [{
    props: {
      color: "inherit"
    },
    style: {
      opacity: 0.3,
      backgroundImage: "radial-gradient(currentColor 0%, currentColor 16%, transparent 42%)"
    }
  }, ...Object.entries(e10.palette).filter(Rt()).map(([t]) => {
    const n = cg(e10, t);
    return {
      props: {
        color: t
      },
      style: {
        backgroundImage: `radial-gradient(${n} 0%, ${n} 16%, transparent 42%)`
      }
    };
  })]
})), D2 || {
  // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.
  animation: `${kf} 3s infinite linear`
});
var N2 = K("span", {
  name: "MuiLinearProgress",
  slot: "Bar1",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.bar, t[`barColor${de(n.color)}`], (n.variant === "indeterminate" || n.variant === "query") && t.bar1Indeterminate, n.variant === "determinate" && t.bar1Determinate, n.variant === "buffer" && t.bar1Buffer];
  }
})(Ve(({
  theme: e10
}) => ({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left",
  variants: [{
    props: {
      color: "inherit"
    },
    style: {
      backgroundColor: "currentColor"
    }
  }, ...Object.entries(e10.palette).filter(Rt()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: (e10.vars || e10).palette[t].main
    }
  })), {
    props: {
      variant: "determinate"
    },
    style: {
      transition: `transform .${jf}s linear`
    }
  }, {
    props: {
      variant: "buffer"
    },
    style: {
      zIndex: 1,
      transition: `transform .${jf}s linear`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: {
      width: "auto"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: A2 || {
      animation: `${Df} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite`
    }
  }]
})));
var $2 = K("span", {
  name: "MuiLinearProgress",
  slot: "Bar2",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.bar, t[`barColor${de(n.color)}`], (n.variant === "indeterminate" || n.variant === "query") && t.bar2Indeterminate, n.variant === "buffer" && t.bar2Buffer];
  }
})(Ve(({
  theme: e10
}) => ({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left",
  variants: [...Object.entries(e10.palette).filter(Rt()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      "--LinearProgressBar2-barColor": (e10.vars || e10).palette[t].main
    }
  })), {
    props: ({
      ownerState: t
    }) => t.variant !== "buffer" && t.color !== "inherit",
    style: {
      backgroundColor: "var(--LinearProgressBar2-barColor, currentColor)"
    }
  }, {
    props: {
      color: "inherit"
    },
    style: {
      opacity: 0.3
    }
  }, ...Object.entries(e10.palette).filter(Rt()).map(([t]) => ({
    props: {
      color: t,
      variant: "buffer"
    },
    style: {
      backgroundColor: cg(e10, t),
      transition: `transform .${jf}s linear`
    }
  })), {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: {
      width: "auto"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: j2 || {
      animation: `${Mf} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite`
    }
  }]
})));
var BC = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiLinearProgress"
  }), {
    className: r,
    color: s = "primary",
    value: a,
    valueBuffer: l,
    variant: c = "indeterminate",
    ...u
  } = o, d = {
    ...o,
    color: s,
    variant: c
  }, p = M2(d), m = oi(), g = {}, b = {
    bar1: {},
    bar2: {}
  };
  if (c === "determinate" || c === "buffer")
    if (a !== void 0) {
      g["aria-valuenow"] = Math.round(a), g["aria-valuemin"] = 0, g["aria-valuemax"] = 100;
      let v = a - 100;
      m && (v = -v), b.bar1.transform = `translateX(${v}%)`;
    } else console.error("MUI: You need to provide a value prop when using the determinate or buffer variant of LinearProgress .");
  if (c === "buffer")
    if (l !== void 0) {
      let v = (l || 0) - 100;
      m && (v = -v), b.bar2.transform = `translateX(${v}%)`;
    } else console.error("MUI: You need to provide a valueBuffer prop when using the buffer variant of LinearProgress.");
  return f.jsxs(k2, {
    className: be(p.root, r),
    ownerState: d,
    role: "progressbar",
    ...g,
    ref: n,
    ...u,
    children: [c === "buffer" ? f.jsx(F2, {
      className: p.dashed,
      ownerState: d
    }) : null, f.jsx(N2, {
      className: p.bar1,
      ownerState: d,
      style: b.bar1
    }), c === "determinate" ? null : f.jsx($2, {
      className: p.bar2,
      ownerState: d,
      style: b.bar2
    })]
  });
});
BC.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["inherit", "primary", "secondary"]), i.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The value of the progress indicator for the determinate and buffer variants.
   * Value between 0 and 100.
   */
  value: i.number,
  /**
   * The value for the buffer variant.
   * Value between 0 and 100.
   */
  valueBuffer: i.number,
  /**
   * The variant to use.
   * Use indeterminate or query when there is no progress value.
   * @default 'indeterminate'
   */
  variant: i.oneOf(["buffer", "determinate", "indeterminate", "query"])
};
var Sr = S.createContext({});
Sr.displayName = "ListContext";
function V2(e10) {
  return He("MuiList", e10);
}
Be("MuiList", ["root", "padding", "dense", "subheader"]);
var _2 = (e10) => {
  const {
    classes: t,
    disablePadding: n,
    dense: o,
    subheader: r
  } = e10;
  return Ue({
    root: ["root", !n && "padding", o && "dense", r && "subheader"]
  }, V2, t);
};
var L2 = K("ul", {
  name: "MuiList",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.root, !n.disablePadding && t.padding, n.dense && t.dense, n.subheader && t.subheader];
  }
})({
  listStyle: "none",
  margin: 0,
  padding: 0,
  position: "relative",
  variants: [{
    props: ({
      ownerState: e10
    }) => !e10.disablePadding,
    style: {
      paddingTop: 8,
      paddingBottom: 8
    }
  }, {
    props: ({
      ownerState: e10
    }) => e10.subheader,
    style: {
      paddingTop: 0
    }
  }]
});
var ug = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiList"
  }), {
    children: r,
    className: s,
    component: a = "ul",
    dense: l = false,
    disablePadding: c = false,
    subheader: u,
    ...d
  } = o, p = S.useMemo(() => ({
    dense: l
  }), [l]), m = {
    ...o,
    component: a,
    dense: l,
    disablePadding: c
  }, g = _2(m);
  return f.jsx(Sr.Provider, {
    value: p,
    children: f.jsxs(L2, {
      as: a,
      className: be(g.root, s),
      ref: n,
      ownerState: m,
      ...d,
      children: [u, r]
    })
  });
});
ug.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used for
   * the list and list items.
   * The prop is available to descendant components as the `dense` context.
   * @default false
   */
  dense: i.bool,
  /**
   * If `true`, vertical padding is removed from the list.
   * @default false
   */
  disablePadding: i.bool,
  /**
   * The content of the subheader, normally `ListSubheader`.
   */
  subheader: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
};
function B2(e10) {
  return He("MuiListItem", e10);
}
Be("MuiListItem", ["root", "container", "dense", "alignItemsFlexStart", "divider", "gutters", "padding", "secondaryAction"]);
var z2 = Be("MuiListItemButton", ["root", "focusVisible", "dense", "alignItemsFlexStart", "disabled", "divider", "gutters", "selected"]);
function W2(e10) {
  return He("MuiListItemSecondaryAction", e10);
}
Be("MuiListItemSecondaryAction", ["root", "disableGutters"]);
var H2 = (e10) => {
  const {
    disableGutters: t,
    classes: n
  } = e10;
  return Ue({
    root: ["root", t && "disableGutters"]
  }, W2, n);
};
var G2 = K("div", {
  name: "MuiListItemSecondaryAction",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.root, n.disableGutters && t.disableGutters];
  }
})({
  position: "absolute",
  right: 16,
  top: "50%",
  transform: "translateY(-50%)",
  variants: [{
    props: ({
      ownerState: e10
    }) => e10.disableGutters,
    style: {
      right: 0
    }
  }]
});
var dg = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiListItemSecondaryAction"
  }), {
    className: r,
    ...s
  } = o, a = S.useContext(Sr), l = {
    ...o,
    disableGutters: a.disableGutters
  }, c = H2(l);
  return f.jsx(G2, {
    className: be(c.root, r),
    ownerState: l,
    ref: n,
    ...s
  });
});
dg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally an `IconButton` or selection control.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
};
dg.muiName = "ListItemSecondaryAction";
var U2 = (e10, t) => {
  const {
    ownerState: n
  } = e10;
  return [t.root, n.dense && t.dense, n.alignItems === "flex-start" && t.alignItemsFlexStart, n.divider && t.divider, !n.disableGutters && t.gutters, !n.disablePadding && t.padding, n.hasSecondaryAction && t.secondaryAction];
};
var X2 = (e10) => {
  const {
    alignItems: t,
    classes: n,
    dense: o,
    disableGutters: r,
    disablePadding: s,
    divider: a,
    hasSecondaryAction: l
  } = e10;
  return Ue({
    root: ["root", o && "dense", !r && "gutters", !s && "padding", a && "divider", t === "flex-start" && "alignItemsFlexStart", l && "secondaryAction"],
    container: ["container"]
  }, B2, n);
};
var Y2 = K("div", {
  name: "MuiListItem",
  slot: "Root",
  overridesResolver: U2
})(Ve(({
  theme: e10
}) => ({
  display: "flex",
  justifyContent: "flex-start",
  alignItems: "center",
  position: "relative",
  textDecoration: "none",
  width: "100%",
  boxSizing: "border-box",
  textAlign: "left",
  variants: [{
    props: ({
      ownerState: t
    }) => !t.disablePadding,
    style: {
      paddingTop: 8,
      paddingBottom: 8
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disablePadding && t.dense,
    style: {
      paddingTop: 4,
      paddingBottom: 4
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disablePadding && !t.disableGutters,
    style: {
      paddingLeft: 16,
      paddingRight: 16
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disablePadding && !!t.secondaryAction,
    style: {
      // Add some space to avoid collision as `ListItemSecondaryAction`
      // is absolutely positioned.
      paddingRight: 48
    }
  }, {
    props: ({
      ownerState: t
    }) => !!t.secondaryAction,
    style: {
      [`& > .${z2.root}`]: {
        paddingRight: 48
      }
    }
  }, {
    props: {
      alignItems: "flex-start"
    },
    style: {
      alignItems: "flex-start"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.divider,
    style: {
      borderBottom: `1px solid ${(e10.vars || e10).palette.divider}`,
      backgroundClip: "padding-box"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.button,
    style: {
      transition: e10.transitions.create("background-color", {
        duration: e10.transitions.duration.shortest
      }),
      "&:hover": {
        textDecoration: "none",
        backgroundColor: (e10.vars || e10).palette.action.hover,
        // Reset on touch devices, it doesn't add specificity
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.hasSecondaryAction,
    style: {
      // Add some space to avoid collision as `ListItemSecondaryAction`
      // is absolutely positioned.
      paddingRight: 48
    }
  }]
})));
var Z2 = K("li", {
  name: "MuiListItem",
  slot: "Container",
  overridesResolver: (e10, t) => t.container
})({
  position: "relative"
});
var zC = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiListItem"
  }), {
    alignItems: r = "center",
    children: s,
    className: a,
    component: l,
    components: c = {},
    componentsProps: u = {},
    ContainerComponent: d = "li",
    ContainerProps: {
      className: p,
      ...m
    } = {},
    dense: g = false,
    disableGutters: b = false,
    disablePadding: v = false,
    divider: h = false,
    secondaryAction: y,
    slotProps: C = {},
    slots: x = {},
    ...T
  } = o, w = S.useContext(Sr), R = S.useMemo(() => ({
    dense: g || w.dense || false,
    alignItems: r,
    disableGutters: b
  }), [r, w.dense, g, b]), E = S.useRef(null), O = S.Children.toArray(s), I = O.length && Pa(O[O.length - 1], ["ListItemSecondaryAction"]), P = {
    ...o,
    alignItems: r,
    dense: R.dense,
    disableGutters: b,
    disablePadding: v,
    divider: h,
    hasSecondaryAction: I
  }, A = X2(P), M = Jt(E, n), F = x.root || c.Root || Y2, D = C.root || u.root || {}, N = {
    className: be(A.root, D.className, a),
    ...T
  };
  let j = l || "li";
  return I ? (j = !N.component && !l ? "div" : j, d === "li" && (j === "li" ? j = "div" : N.component === "li" && (N.component = "div")), f.jsx(Sr.Provider, {
    value: R,
    children: f.jsxs(Z2, {
      as: d,
      className: be(A.container, p),
      ref: M,
      ownerState: P,
      ...m,
      children: [f.jsx(F, {
        ...D,
        ...!Cr(F) && {
          as: j,
          ownerState: {
            ...P,
            ...D.ownerState
          }
        },
        ...N,
        children: O
      }), O.pop()]
    })
  })) : f.jsx(Sr.Provider, {
    value: R,
    children: f.jsxs(F, {
      ...D,
      as: j,
      ref: M,
      ...!Cr(F) && {
        ownerState: {
          ...P,
          ...D.ownerState
        }
      },
      ...N,
      children: [O, y && f.jsx(dg, {
        children: y
      })]
    })
  });
});
zC.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Defines the `align-items` style property.
   * @default 'center'
   */
  alignItems: i.oneOf(["center", "flex-start"]),
  /**
   * The content of the component if a `ListItemSecondaryAction` is used it must
   * be the last child.
   */
  children: co(i.node, (e10) => {
    const t = S.Children.toArray(e10.children);
    let n = -1;
    for (let o = t.length - 1; o >= 0; o -= 1) {
      const r = t[o];
      if (Pa(r, ["ListItemSecondaryAction"])) {
        n = o;
        break;
      }
    }
    return n !== -1 && n !== t.length - 1 ? new Error("MUI: You used an element after ListItemSecondaryAction. For ListItem to detect that it has a secondary action you must pass it as the last child to ListItem.") : null;
  }),
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  components: i.shape({
    Root: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  componentsProps: i.shape({
    root: i.object
  }),
  /**
   * The container component used when a `ListItemSecondaryAction` is the last child.
   * @default 'li'
   * @deprecated Use the `component` or `slots.root` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  ContainerComponent: Rl,
  /**
   * Props applied to the container component if used.
   * @default {}
   * @deprecated Use the `slotProps.root` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  ContainerProps: i.object,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used.
   * The prop defaults to the value inherited from the parent List component.
   * @default false
   */
  dense: i.bool,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: i.bool,
  /**
   * If `true`, all padding is removed.
   * @default false
   */
  disablePadding: i.bool,
  /**
   * If `true`, a 1px light border is added to the bottom of the list item.
   * @default false
   */
  divider: i.bool,
  /**
   * The element to display at the end of ListItem.
   */
  secondaryAction: i.node,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @default {}
   */
  slotProps: i.shape({
    root: i.object
  }),
  /**
   * The components used for each slot inside.
   *
   * @default {}
   */
  slots: i.shape({
    root: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
};
function q2(e10) {
  return He("MuiListItemIcon", e10);
}
var yv = Be("MuiListItemIcon", ["root", "alignItemsFlexStart"]);
var J2 = (e10) => {
  const {
    alignItems: t,
    classes: n
  } = e10;
  return Ue({
    root: ["root", t === "flex-start" && "alignItemsFlexStart"]
  }, q2, n);
};
var K2 = K("div", {
  name: "MuiListItemIcon",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.root, n.alignItems === "flex-start" && t.alignItemsFlexStart];
  }
})(Ve(({
  theme: e10
}) => ({
  minWidth: 56,
  color: (e10.vars || e10).palette.action.active,
  flexShrink: 0,
  display: "inline-flex",
  variants: [{
    props: {
      alignItems: "flex-start"
    },
    style: {
      marginTop: 8
    }
  }]
})));
var WC = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiListItemIcon"
  }), {
    className: r,
    ...s
  } = o, a = S.useContext(Sr), l = {
    ...o,
    alignItems: a.alignItems
  }, c = J2(l);
  return f.jsx(K2, {
    className: be(c.root, r),
    ownerState: l,
    ref: n,
    ...s
  });
});
WC.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally `Icon`, `SvgIcon`,
   * or a `@mui/icons-material` SVG icon element.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
};
var xv = Be("MuiListItemText", ["root", "multiline", "dense", "inset", "primary", "secondary"]);
function Sp(e10, t, n) {
  return e10 === t ? e10.firstChild : t && t.nextElementSibling ? t.nextElementSibling : n ? null : e10.firstChild;
}
function Cv(e10, t, n) {
  return e10 === t ? n ? e10.firstChild : e10.lastChild : t && t.previousElementSibling ? t.previousElementSibling : n ? null : e10.lastChild;
}
function HC(e10, t) {
  if (t === void 0)
    return true;
  let n = e10.innerText;
  return n === void 0 && (n = e10.textContent), n = n.trim().toLowerCase(), n.length === 0 ? false : t.repeating ? n[0] === t.keys[0] : n.startsWith(t.keys.join(""));
}
function ca(e10, t, n, o, r, s) {
  let a = false, l = r(e10, t, t ? n : false);
  for (; l; ) {
    if (l === e10.firstChild) {
      if (a)
        return false;
      a = true;
    }
    const c = o ? false : l.disabled || l.getAttribute("aria-disabled") === "true";
    if (!l.hasAttribute("tabindex") || !HC(l, s) || c)
      l = r(e10, l, n);
    else
      return l.focus(), true;
  }
  return false;
}
var ad = S.forwardRef(function(t, n) {
  const {
    // private
    // eslint-disable-next-line react/prop-types
    actions: o,
    autoFocus: r = false,
    autoFocusItem: s = false,
    children: a,
    className: l,
    disabledItemsFocusable: c = false,
    disableListWrap: u = false,
    onKeyDown: d,
    variant: p = "selectedMenu",
    ...m
  } = t, g = S.useRef(null), b = S.useRef({
    keys: [],
    repeating: true,
    previousKeyMatched: true,
    lastTime: null
  });
  ao(() => {
    r && g.current.focus();
  }, [r]), S.useImperativeHandle(o, () => ({
    adjustStyleForScrollbar: (x, {
      direction: T
    }) => {
      const w = !g.current.style.width;
      if (x.clientHeight < g.current.clientHeight && w) {
        const R = `${Kx(mn(x))}px`;
        g.current.style[T === "rtl" ? "paddingLeft" : "paddingRight"] = R, g.current.style.width = `calc(100% + ${R})`;
      }
      return g.current;
    }
  }), []);
  const v = (x) => {
    const T = g.current, w = x.key;
    if (x.ctrlKey || x.metaKey || x.altKey) {
      d && d(x);
      return;
    }
    const E = mn(T).activeElement;
    if (w === "ArrowDown")
      x.preventDefault(), ca(T, E, u, c, Sp);
    else if (w === "ArrowUp")
      x.preventDefault(), ca(T, E, u, c, Cv);
    else if (w === "Home")
      x.preventDefault(), ca(T, null, u, c, Sp);
    else if (w === "End")
      x.preventDefault(), ca(T, null, u, c, Cv);
    else if (w.length === 1) {
      const O = b.current, I = w.toLowerCase(), P = performance.now();
      O.keys.length > 0 && (P - O.lastTime > 500 ? (O.keys = [], O.repeating = true, O.previousKeyMatched = true) : O.repeating && I !== O.keys[0] && (O.repeating = false)), O.lastTime = P, O.keys.push(I);
      const A = E && !O.repeating && HC(E, O);
      O.previousKeyMatched && (A || ca(T, E, false, c, Sp, O)) ? x.preventDefault() : O.previousKeyMatched = false;
    }
    d && d(x);
  }, h = Jt(g, n);
  let y = -1;
  S.Children.forEach(a, (x, T) => {
    if (!S.isValidElement(x)) {
      y === T && (y += 1, y >= a.length && (y = -1));
      return;
    }
    Zu.isFragment(x) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), x.props.disabled || (p === "selectedMenu" && x.props.selected || y === -1) && (y = T), y === T && (x.props.disabled || x.props.muiSkipListHighlight || x.type.muiSkipListHighlight) && (y += 1, y >= a.length && (y = -1));
  });
  const C = S.Children.map(a, (x, T) => {
    if (T === y) {
      const w = {};
      return s && (w.autoFocus = true), x.props.tabIndex === void 0 && p === "selectedMenu" && (w.tabIndex = 0), S.cloneElement(x, w);
    }
    return x;
  });
  return f.jsx(ug, {
    role: "menu",
    ref: h,
    className: l,
    onKeyDown: v,
    tabIndex: r ? 0 : -1,
    ...m,
    children: C
  });
});
ad.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, will focus the `[role="menu"]` container and move into tab order.
   * @default false
   */
  autoFocus: i.bool,
  /**
   * If `true`, will focus the first menuitem if `variant="menu"` or selected item
   * if `variant="selectedMenu"`.
   * @default false
   */
  autoFocusItem: i.bool,
  /**
   * MenuList contents, normally `MenuItem`s.
   */
  children: i.node,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * If `true`, will allow focus on disabled items.
   * @default false
   */
  disabledItemsFocusable: i.bool,
  /**
   * If `true`, the menu items will not wrap focus.
   * @default false
   */
  disableListWrap: i.bool,
  /**
   * @ignore
   */
  onKeyDown: i.func,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus
   * and the vertical alignment relative to the anchor element.
   * @default 'selectedMenu'
   */
  variant: i.oneOf(["menu", "selectedMenu"])
};
function Q2(e10) {
  return He("MuiPopover", e10);
}
Be("MuiPopover", ["root", "paper"]);
function Sv(e10, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e10.height / 2 : t === "bottom" && (n = e10.height), n;
}
function wv(e10, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e10.width / 2 : t === "right" && (n = e10.width), n;
}
function Tv(e10) {
  return [e10.horizontal, e10.vertical].map((t) => typeof t == "number" ? `${t}px` : t).join(" ");
}
function Fc(e10) {
  return typeof e10 == "function" ? e10() : e10;
}
var eN = (e10) => {
  const {
    classes: t
  } = e10;
  return Ue({
    root: ["root"],
    paper: ["paper"]
  }, Q2, t);
};
var tN = K(jl, {
  name: "MuiPopover",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})({});
var GC = K(vn, {
  name: "MuiPopover",
  slot: "Paper",
  overridesResolver: (e10, t) => t.paper
})({
  position: "absolute",
  overflowY: "auto",
  overflowX: "hidden",
  // So we see the popover when it's empty.
  // It's most likely on issue on userland.
  minWidth: 16,
  minHeight: 16,
  maxWidth: "calc(100% - 32px)",
  maxHeight: "calc(100% - 32px)",
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
});
var pg = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiPopover"
  }), {
    action: r,
    anchorEl: s,
    anchorOrigin: a = {
      vertical: "top",
      horizontal: "left"
    },
    anchorPosition: l,
    anchorReference: c = "anchorEl",
    children: u,
    className: d,
    container: p,
    elevation: m = 8,
    marginThreshold: g = 16,
    open: b,
    PaperProps: v = {},
    slots: h = {},
    slotProps: y = {},
    transformOrigin: C = {
      vertical: "top",
      horizontal: "left"
    },
    TransitionComponent: x = Kr,
    transitionDuration: T = "auto",
    TransitionProps: {
      onEntering: w,
      ...R
    } = {},
    disableScrollLock: E = false,
    ...O
  } = o, I = (y == null ? void 0 : y.paper) ?? v, P = S.useRef(), A = {
    ...o,
    anchorOrigin: a,
    anchorReference: c,
    elevation: m,
    marginThreshold: g,
    externalPaperSlotProps: I,
    transformOrigin: C,
    TransitionComponent: x,
    transitionDuration: T,
    TransitionProps: R
  }, M = eN(A), F = S.useCallback(() => {
    if (c === "anchorPosition")
      return l || console.error('MUI: You need to provide a `anchorPosition` prop when using <Popover anchorReference="anchorPosition" />.'), l;
    const se = Fc(s), oe = se && se.nodeType === 1 ? se : mn(P.current).body, W = oe.getBoundingClientRect();
    if (true) {
      const Z = oe.getBoundingClientRect();
      Z.top === 0 && Z.left === 0 && Z.right === 0 && Z.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    return {
      top: W.top + Sv(W, a.vertical),
      left: W.left + wv(W, a.horizontal)
    };
  }, [s, a.horizontal, a.vertical, l, c]), D = S.useCallback((se) => ({
    vertical: Sv(se, C.vertical),
    horizontal: wv(se, C.horizontal)
  }), [C.horizontal, C.vertical]), N = S.useCallback((se) => {
    const oe = {
      width: se.offsetWidth,
      height: se.offsetHeight
    }, W = D(oe);
    if (c === "none")
      return {
        top: null,
        left: null,
        transformOrigin: Tv(W)
      };
    const Z = F();
    let L = Z.top - W.vertical, ie = Z.left - W.horizontal;
    const te = L + oe.height, le = ie + oe.width, ue = Rr(Fc(s)), ve = ue.innerHeight - g, Te = ue.innerWidth - g;
    if (g !== null && L < g) {
      const Re = L - g;
      L -= Re, W.vertical += Re;
    } else if (g !== null && te > ve) {
      const Re = te - ve;
      L -= Re, W.vertical += Re;
    }
    if (oe.height > ve && oe.height && ve && console.error(["MUI: The popover component is too tall.", `Some part of it can not be seen on the screen (${oe.height - ve}px).`, "Please consider adding a `max-height` to improve the user-experience."].join(`
`)), g !== null && ie < g) {
      const Re = ie - g;
      ie -= Re, W.horizontal += Re;
    } else if (le > Te) {
      const Re = le - Te;
      ie -= Re, W.horizontal += Re;
    }
    return {
      top: `${Math.round(L)}px`,
      left: `${Math.round(ie)}px`,
      transformOrigin: Tv(W)
    };
  }, [s, c, F, D, g]), [j, _] = S.useState(b), z = S.useCallback(() => {
    const se = P.current;
    if (!se)
      return;
    const oe = N(se);
    oe.top !== null && se.style.setProperty("top", oe.top), oe.left !== null && (se.style.left = oe.left), se.style.transformOrigin = oe.transformOrigin, _(true);
  }, [N]);
  S.useEffect(() => (E && window.addEventListener("scroll", z), () => window.removeEventListener("scroll", z)), [s, E, z]);
  const $ = (se, oe) => {
    w && w(se, oe), z();
  }, k = () => {
    _(false);
  };
  S.useEffect(() => {
    b && z();
  }), S.useImperativeHandle(r, () => b ? {
    updatePosition: () => {
      z();
    }
  } : null, [b, z]), S.useEffect(() => {
    if (!b)
      return;
    const se = zs(() => {
      z();
    }), oe = Rr(s);
    return oe.addEventListener("resize", se), () => {
      se.clear(), oe.removeEventListener("resize", se);
    };
  }, [s, b, z]);
  let B = T;
  T === "auto" && !x.muiSupportAuto && (B = void 0);
  const Q = p || (s ? mn(Fc(s)).body : void 0), ee = {
    slots: h,
    slotProps: {
      ...y,
      paper: I
    }
  }, [G, H] = sn("paper", {
    elementType: GC,
    externalForwardedProps: ee,
    additionalProps: {
      elevation: m,
      className: be(M.paper, I == null ? void 0 : I.className),
      style: j ? I.style : {
        ...I.style,
        opacity: 0
      }
    },
    ownerState: A
  }), [Y, {
    slotProps: J,
    ...U
  }] = sn("root", {
    elementType: tN,
    externalForwardedProps: ee,
    additionalProps: {
      slotProps: {
        backdrop: {
          invisible: true
        }
      },
      container: Q,
      open: b
    },
    ownerState: A,
    className: be(M.root, d)
  }), ne = Jt(P, H.ref);
  return f.jsx(Y, {
    ...U,
    ...!Cr(Y) && {
      slotProps: J,
      disableScrollLock: E
    },
    ...O,
    ref: n,
    children: f.jsx(x, {
      appear: true,
      in: b,
      onEntering: $,
      onExited: k,
      timeout: B,
      ...R,
      children: f.jsx(G, {
        ...H,
        ref: ne,
        children: u
      })
    })
  });
});
pg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports updatePosition() action.
   */
  action: On,
  /**
   * An HTML element, [PopoverVirtualElement](https://mui.com/material-ui/react-popover/#virtual-element),
   * or a function that returns either.
   * It's used to set the position of the popover.
   */
  anchorEl: co(i.oneOfType([Ir, i.func]), (e10) => {
    if (e10.open && (!e10.anchorReference || e10.anchorReference === "anchorEl")) {
      const t = Fc(e10.anchorEl);
      if (t && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", `It should be an Element or PopoverVirtualElement instance but it's \`${t}\` instead.`].join(`
`));
    }
    return null;
  }),
  /**
   * This is the point on the anchor where the popover's
   * `anchorEl` will attach to. This is not used when the
   * anchorReference is 'anchorPosition'.
   *
   * Options:
   * vertical: [top, center, bottom];
   * horizontal: [left, center, right].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  anchorOrigin: i.shape({
    horizontal: i.oneOfType([i.oneOf(["center", "left", "right"]), i.number]).isRequired,
    vertical: i.oneOfType([i.oneOf(["bottom", "center", "top"]), i.number]).isRequired
  }),
  /**
   * This is the position that may be used to set the position of the popover.
   * The coordinates are relative to the application's client area.
   */
  anchorPosition: i.shape({
    left: i.number.isRequired,
    top: i.number.isRequired
  }),
  /**
   * This determines which anchor prop to refer to when setting
   * the position of the popover.
   * @default 'anchorEl'
   */
  anchorReference: i.oneOf(["anchorEl", "anchorPosition", "none"]),
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slotProps.root.slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slotProps.root.slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: i.elementType,
  /**
   * Props applied to the [`Backdrop`](/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.root.slotProps.backdrop` instead.
   */
  BackdropProps: i.object,
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * An HTML element, component instance, or function that returns either.
   * The `container` will passed to the Modal component.
   *
   * By default, it uses the body of the anchorEl's top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: i.oneOfType([Ir, i.func]),
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: i.bool,
  /**
   * The elevation of the popover.
   * @default 8
   */
  elevation: Br,
  /**
   * Specifies how close to the edge of the window the popover can appear.
   * If null, the popover will not be constrained by the window.
   * @default 16
   */
  marginThreshold: i.number,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   */
  onClose: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   *
   * This prop is an alias for `slotProps.paper` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.paper` instead.
   *
   * @default {}
   */
  PaperProps: i.shape({
    component: Rl
  }),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    paper: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    paper: i.elementType,
    root: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * This is the point on the popover which
   * will attach to the anchor's origin.
   *
   * Options:
   * vertical: [top, center, bottom, x(px)];
   * horizontal: [left, center, right, x(px)].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  transformOrigin: i.shape({
    horizontal: i.oneOfType([i.oneOf(["center", "left", "right"]), i.number]).isRequired,
    vertical: i.oneOfType([i.oneOf(["bottom", "center", "top"]), i.number]).isRequired
  }),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Grow
   */
  TransitionComponent: i.elementType,
  /**
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  transitionDuration: i.oneOfType([i.oneOf(["auto"]), i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @default {}
   */
  TransitionProps: i.object
};
function nN(e10) {
  return He("MuiMenu", e10);
}
Be("MuiMenu", ["root", "paper", "list"]);
var oN = {
  vertical: "top",
  horizontal: "right"
};
var rN = {
  vertical: "top",
  horizontal: "left"
};
var iN = (e10) => {
  const {
    classes: t
  } = e10;
  return Ue({
    root: ["root"],
    paper: ["paper"],
    list: ["list"]
  }, nN, t);
};
var sN = K(pg, {
  shouldForwardProp: (e10) => Fn(e10) || e10 === "classes",
  name: "MuiMenu",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})({});
var aN = K(GC, {
  name: "MuiMenu",
  slot: "Paper",
  overridesResolver: (e10, t) => t.paper
})({
  // specZ: The maximum height of a simple menu should be one or more rows less than the view
  // height. This ensures a tappable area outside of the simple menu with which to dismiss
  // the menu.
  maxHeight: "calc(100% - 96px)",
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch"
});
var lN = K(ad, {
  name: "MuiMenu",
  slot: "List",
  overridesResolver: (e10, t) => t.list
})({
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
});
var si = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiMenu"
  }), {
    autoFocus: r = true,
    children: s,
    className: a,
    disableAutoFocusItem: l = false,
    MenuListProps: c = {},
    onClose: u,
    open: d,
    PaperProps: p = {},
    PopoverClasses: m,
    transitionDuration: g = "auto",
    TransitionProps: {
      onEntering: b,
      ...v
    } = {},
    variant: h = "selectedMenu",
    slots: y = {},
    slotProps: C = {},
    ...x
  } = o, T = oi(), w = {
    ...o,
    autoFocus: r,
    disableAutoFocusItem: l,
    MenuListProps: c,
    onEntering: b,
    PaperProps: p,
    transitionDuration: g,
    TransitionProps: v,
    variant: h
  }, R = iN(w), E = r && !l && d, O = S.useRef(null), I = (j, _) => {
    O.current && O.current.adjustStyleForScrollbar(j, {
      direction: T ? "rtl" : "ltr"
    }), b && b(j, _);
  }, P = (j) => {
    j.key === "Tab" && (j.preventDefault(), u && u(j, "tabKeyDown"));
  };
  let A = -1;
  S.Children.map(s, (j, _) => {
    S.isValidElement(j) && (Zu.isFragment(j) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), j.props.disabled || (h === "selectedMenu" && j.props.selected || A === -1) && (A = _));
  });
  const M = y.paper ?? aN, F = C.paper ?? p, D = In({
    elementType: y.root,
    externalSlotProps: C.root,
    ownerState: w,
    className: [R.root, a]
  }), N = In({
    elementType: M,
    externalSlotProps: F,
    ownerState: w,
    className: R.paper
  });
  return f.jsx(sN, {
    onClose: u,
    anchorOrigin: {
      vertical: "bottom",
      horizontal: T ? "right" : "left"
    },
    transformOrigin: T ? oN : rN,
    slots: {
      paper: M,
      root: y.root
    },
    slotProps: {
      root: D,
      paper: N
    },
    open: d,
    ref: n,
    transitionDuration: g,
    TransitionProps: {
      onEntering: I,
      ...v
    },
    ownerState: w,
    ...x,
    classes: m,
    children: f.jsx(lN, {
      onKeyDown: P,
      actions: O,
      autoFocus: r && (A === -1 || l),
      autoFocusItem: E,
      variant: h,
      ...c,
      className: be(R.list, c.className),
      children: s
    })
  });
});
si.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, or a function that returns one.
   * It's used to set the position of the menu.
   */
  anchorEl: i.oneOfType([Ir, i.func]),
  /**
   * If `true` (Default) will focus the `[role="menu"]` if no focusable child is found. Disabled
   * children are not focusable. If you set this prop to `false` focus will be placed
   * on the parent modal container. This has severe accessibility implications
   * and should only be considered if you manage focus otherwise.
   * @default true
   */
  autoFocus: i.bool,
  /**
   * Menu contents, normally `MenuItem`s.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * When opening the menu will not focus the active item but the `[role="menu"]`
   * unless `autoFocus` is also set to `false`. Not using the default means not
   * following WAI-ARIA authoring practices. Please be considerate about possible
   * accessibility implications.
   * @default false
   */
  disableAutoFocusItem: i.bool,
  /**
   * Props applied to the [`MenuList`](https://mui.com/material-ui/api/menu-list/) element.
   * @default {}
   */
  MenuListProps: i.object,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`, `"tabKeyDown"`.
   */
  onClose: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool.isRequired,
  /**
   * @ignore
   */
  PaperProps: i.object,
  /**
   * `classes` prop applied to the [`Popover`](https://mui.com/material-ui/api/popover/) element.
   */
  PopoverClasses: i.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    paper: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    paper: i.elementType,
    root: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The length of the transition in `ms`, or 'auto'
   * @default 'auto'
   */
  transitionDuration: i.oneOfType([i.oneOf(["auto"]), i.number, i.shape({
    appear: i.number,
    enter: i.number,
    exit: i.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @default {}
   */
  TransitionProps: i.object,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.
   * @default 'selectedMenu'
   */
  variant: i.oneOf(["menu", "selectedMenu"])
};
function cN(e10) {
  return He("MuiMenuItem", e10);
}
var ua = Be("MuiMenuItem", ["root", "focusVisible", "dense", "disabled", "divider", "gutters", "selected"]);
var uN = (e10, t) => {
  const {
    ownerState: n
  } = e10;
  return [t.root, n.dense && t.dense, n.divider && t.divider, !n.disableGutters && t.gutters];
};
var dN = (e10) => {
  const {
    disabled: t,
    dense: n,
    divider: o,
    disableGutters: r,
    selected: s,
    classes: a
  } = e10, c = Ue({
    root: ["root", n && "dense", t && "disabled", !r && "gutters", o && "divider", s && "selected"]
  }, cN, a);
  return {
    ...a,
    ...c
  };
};
var pN = K(Ro, {
  shouldForwardProp: (e10) => Fn(e10) || e10 === "classes",
  name: "MuiMenuItem",
  slot: "Root",
  overridesResolver: uN
})(Ve(({
  theme: e10
}) => ({
  ...e10.typography.body1,
  display: "flex",
  justifyContent: "flex-start",
  alignItems: "center",
  position: "relative",
  textDecoration: "none",
  minHeight: 48,
  paddingTop: 6,
  paddingBottom: 6,
  boxSizing: "border-box",
  whiteSpace: "nowrap",
  "&:hover": {
    textDecoration: "none",
    backgroundColor: (e10.vars || e10).palette.action.hover,
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  [`&.${ua.selected}`]: {
    backgroundColor: e10.vars ? `rgba(${e10.vars.palette.primary.mainChannel} / ${e10.vars.palette.action.selectedOpacity})` : We(e10.palette.primary.main, e10.palette.action.selectedOpacity),
    [`&.${ua.focusVisible}`]: {
      backgroundColor: e10.vars ? `rgba(${e10.vars.palette.primary.mainChannel} / calc(${e10.vars.palette.action.selectedOpacity} + ${e10.vars.palette.action.focusOpacity}))` : We(e10.palette.primary.main, e10.palette.action.selectedOpacity + e10.palette.action.focusOpacity)
    }
  },
  [`&.${ua.selected}:hover`]: {
    backgroundColor: e10.vars ? `rgba(${e10.vars.palette.primary.mainChannel} / calc(${e10.vars.palette.action.selectedOpacity} + ${e10.vars.palette.action.hoverOpacity}))` : We(e10.palette.primary.main, e10.palette.action.selectedOpacity + e10.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: e10.vars ? `rgba(${e10.vars.palette.primary.mainChannel} / ${e10.vars.palette.action.selectedOpacity})` : We(e10.palette.primary.main, e10.palette.action.selectedOpacity)
    }
  },
  [`&.${ua.focusVisible}`]: {
    backgroundColor: (e10.vars || e10).palette.action.focus
  },
  [`&.${ua.disabled}`]: {
    opacity: (e10.vars || e10).palette.action.disabledOpacity
  },
  [`& + .${mv.root}`]: {
    marginTop: e10.spacing(1),
    marginBottom: e10.spacing(1)
  },
  [`& + .${mv.inset}`]: {
    marginLeft: 52
  },
  [`& .${xv.root}`]: {
    marginTop: 0,
    marginBottom: 0
  },
  [`& .${xv.inset}`]: {
    paddingLeft: 36
  },
  [`& .${yv.root}`]: {
    minWidth: 36
  },
  variants: [{
    props: ({
      ownerState: t
    }) => !t.disableGutters,
    style: {
      paddingLeft: 16,
      paddingRight: 16
    }
  }, {
    props: ({
      ownerState: t
    }) => t.divider,
    style: {
      borderBottom: `1px solid ${(e10.vars || e10).palette.divider}`,
      backgroundClip: "padding-box"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.dense,
    style: {
      [e10.breakpoints.up("sm")]: {
        minHeight: "auto"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.dense,
    style: {
      minHeight: 32,
      // https://m2.material.io/components/menus#specs > Dense
      paddingTop: 4,
      paddingBottom: 4,
      ...e10.typography.body2,
      [`& .${yv.root} svg`]: {
        fontSize: "1.25rem"
      }
    }
  }]
})));
var Lo = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiMenuItem"
  }), {
    autoFocus: r = false,
    component: s = "li",
    dense: a = false,
    divider: l = false,
    disableGutters: c = false,
    focusVisibleClassName: u,
    role: d = "menuitem",
    tabIndex: p,
    className: m,
    ...g
  } = o, b = S.useContext(Sr), v = S.useMemo(() => ({
    dense: a || b.dense || false,
    disableGutters: c
  }), [b.dense, a, c]), h = S.useRef(null);
  ao(() => {
    r && (h.current ? h.current.focus() : console.error("MUI: Unable to set focus to a MenuItem whose component has not been rendered."));
  }, [r]);
  const y = {
    ...o,
    dense: v.dense,
    divider: l,
    disableGutters: c
  }, C = dN(o), x = Jt(h, n);
  let T;
  return o.disabled || (T = p !== void 0 ? p : -1), f.jsx(Sr.Provider, {
    value: v,
    children: f.jsx(pN, {
      ref: x,
      role: d,
      tabIndex: T,
      component: s,
      focusVisibleClassName: be(C.focusVisible, u),
      className: be(C.root, m),
      ...g,
      ownerState: y,
      classes: C
    })
  });
});
Lo.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the list item is focused during the first mount.
   * Focus will also be triggered if the value changes from false to true.
   * @default false
   */
  autoFocus: i.bool,
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used.
   * The prop defaults to the value inherited from the parent Menu component.
   * @default false
   */
  dense: i.bool,
  /**
   * @ignore
   */
  disabled: i.bool,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: i.bool,
  /**
   * If `true`, a 1px light border is added to the bottom of the menu item.
   * @default false
   */
  divider: i.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: i.string,
  /**
   * @ignore
   */
  role: i.string,
  /**
   * If `true`, the component is selected.
   * @default false
   */
  selected: i.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * @default 0
   */
  tabIndex: i.number
};
function fN(e10) {
  return He("MuiNativeSelect", e10);
}
var fg = Be("MuiNativeSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]);
var mN = (e10) => {
  const {
    classes: t,
    variant: n,
    disabled: o,
    multiple: r,
    open: s,
    error: a
  } = e10, l = {
    select: ["select", n, o && "disabled", r && "multiple", a && "error"],
    icon: ["icon", `icon${de(n)}`, s && "iconOpen", o && "disabled"]
  };
  return Ue(l, fN, t);
};
var UC = K("select")(({
  theme: e10
}) => ({
  // Reset
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // When interacting quickly, the text can end up selected.
  // Native select can't be selected either.
  userSelect: "none",
  // Reset
  borderRadius: 0,
  cursor: "pointer",
  "&:focus": {
    // Reset Chrome style
    borderRadius: 0
  },
  [`&.${fg.disabled}`]: {
    cursor: "default"
  },
  "&[multiple]": {
    height: "auto"
  },
  "&:not([multiple]) option, &:not([multiple]) optgroup": {
    backgroundColor: (e10.vars || e10).palette.background.paper
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.variant !== "filled" && t.variant !== "outlined",
    style: {
      // Bump specificity to allow extending custom inputs
      "&&&": {
        paddingRight: 24,
        minWidth: 16
        // So it doesn't collapse.
      }
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      "&&&": {
        paddingRight: 32
      }
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      borderRadius: (e10.vars || e10).shape.borderRadius,
      "&:focus": {
        borderRadius: (e10.vars || e10).shape.borderRadius
        // Reset the reset for Chrome style
      },
      "&&&": {
        paddingRight: 32
      }
    }
  }]
}));
var gN = K(UC, {
  name: "MuiNativeSelect",
  slot: "Select",
  shouldForwardProp: Fn,
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.select, t[n.variant], n.error && t.error, {
      [`&.${fg.multiple}`]: t.multiple
    }];
  }
})({});
var XC = K("svg")(({
  theme: e10
}) => ({
  // We use a position absolute over a flexbox in order to forward the pointer events
  // to the input and to support wrapping tags..
  position: "absolute",
  right: 0,
  // Center vertically, height is 1em
  top: "calc(50% - .5em)",
  // Don't block pointer events on the select under the icon.
  pointerEvents: "none",
  color: (e10.vars || e10).palette.action.active,
  [`&.${fg.disabled}`]: {
    color: (e10.vars || e10).palette.action.disabled
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.open,
    style: {
      transform: "rotate(180deg)"
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      right: 7
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      right: 7
    }
  }]
}));
var hN = K(XC, {
  name: "MuiNativeSelect",
  slot: "Icon",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.icon, n.variant && t[`icon${de(n.variant)}`], n.open && t.iconOpen];
  }
})({});
var YC = S.forwardRef(function(t, n) {
  const {
    className: o,
    disabled: r,
    error: s,
    IconComponent: a,
    inputRef: l,
    variant: c = "standard",
    ...u
  } = t, d = {
    ...t,
    disabled: r,
    variant: c,
    error: s
  }, p = mN(d);
  return f.jsxs(S.Fragment, {
    children: [f.jsx(gN, {
      ownerState: d,
      className: be(p.select, o),
      disabled: r,
      ref: l || n,
      ...u
    }), t.multiple ? null : f.jsx(hN, {
      as: a,
      ownerState: d,
      className: p.icon
    })]
  });
});
YC.propTypes = {
  /**
   * The option elements to populate the select with.
   * Can be some `<option>` elements.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The CSS class name of the select element.
   */
  className: i.string,
  /**
   * If `true`, the select is disabled.
   */
  disabled: i.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: i.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: i.elementType.isRequired,
  /**
   * Use that prop to pass a ref to the native select element.
   * @deprecated
   */
  inputRef: On,
  /**
   * @ignore
   */
  multiple: i.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: i.string,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * The input value.
   */
  value: i.any,
  /**
   * The variant to use.
   */
  variant: i.oneOf(["standard", "outlined", "filled"])
};
var Iv;
var bN = K("fieldset", {
  shouldForwardProp: Fn
})({
  textAlign: "left",
  position: "absolute",
  bottom: 0,
  right: 0,
  top: -5,
  left: 0,
  margin: 0,
  padding: "0 8px",
  pointerEvents: "none",
  borderRadius: "inherit",
  borderStyle: "solid",
  borderWidth: 1,
  overflow: "hidden",
  minWidth: "0%"
});
var vN = K("legend", {
  shouldForwardProp: Fn
})(Ve(({
  theme: e10
}) => ({
  float: "unset",
  // Fix conflict with bootstrap
  width: "auto",
  // Fix conflict with bootstrap
  overflow: "hidden",
  // Fix Horizontal scroll when label too long
  variants: [{
    props: ({
      ownerState: t
    }) => !t.withLabel,
    style: {
      padding: 0,
      lineHeight: "11px",
      // sync with `height` in `legend` styles
      transition: e10.transitions.create("width", {
        duration: 150,
        easing: e10.transitions.easing.easeOut
      })
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel,
    style: {
      display: "block",
      // Fix conflict with normalize.css and sanitize.css
      padding: 0,
      height: 11,
      // sync with `lineHeight` in `legend` styles
      fontSize: "0.75em",
      visibility: "hidden",
      maxWidth: 0.01,
      transition: e10.transitions.create("max-width", {
        duration: 50,
        easing: e10.transitions.easing.easeOut
      }),
      whiteSpace: "nowrap",
      "& > span": {
        paddingLeft: 5,
        paddingRight: 5,
        display: "inline-block",
        opacity: 0,
        visibility: "visible"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel && t.notched,
    style: {
      maxWidth: "100%",
      transition: e10.transitions.create("max-width", {
        duration: 100,
        easing: e10.transitions.easing.easeOut,
        delay: 50
      })
    }
  }]
})));
function ZC(e10) {
  const {
    children: t,
    classes: n,
    className: o,
    label: r,
    notched: s,
    ...a
  } = e10, l = r != null && r !== "", c = {
    ...e10,
    notched: s,
    withLabel: l
  };
  return f.jsx(bN, {
    "aria-hidden": true,
    className: o,
    ownerState: c,
    ...a,
    children: f.jsx(vN, {
      ownerState: c,
      children: l ? f.jsx("span", {
        children: r
      }) : (
        // notranslate needed while Google Translate will not fix zero-width space issue
        Iv || (Iv = f.jsx("span", {
          className: "notranslate",
          children: "​"
        }))
      )
    })
  });
}
ZC.propTypes = {
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The label.
   */
  label: i.node,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: i.bool.isRequired,
  /**
   * @ignore
   */
  style: i.object
};
var yN = (e10) => {
  const {
    classes: t
  } = e10, o = Ue({
    root: ["root"],
    notchedOutline: ["notchedOutline"],
    input: ["input"]
  }, QM, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...o
  };
};
var xN = K(ed, {
  shouldForwardProp: (e10) => Fn(e10) || e10 === "classes",
  name: "MuiOutlinedInput",
  slot: "Root",
  overridesResolver: Ku
})(Ve(({
  theme: e10
}) => {
  const t = e10.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    position: "relative",
    borderRadius: (e10.vars || e10).shape.borderRadius,
    [`&:hover .${vo.notchedOutline}`]: {
      borderColor: (e10.vars || e10).palette.text.primary
    },
    [`&.${vo.focused} .${vo.notchedOutline}`]: {
      borderWidth: 2
    },
    variants: [...Object.entries(e10.palette).filter(Rt()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        [`&.${vo.focused} .${vo.notchedOutline}`]: {
          borderColor: (e10.vars || e10).palette[n].main
        }
      }
    })), {
      props: {},
      // to overide the above style
      style: {
        // Reset on touch devices, it doesn't add specificity
        "@media (hover: none)": {
          [`&:hover .${vo.notchedOutline}`]: {
            borderColor: e10.vars ? `rgba(${e10.vars.palette.common.onBackgroundChannel} / 0.23)` : t
          }
        },
        [`&.${vo.error} .${vo.notchedOutline}`]: {
          borderColor: (e10.vars || e10).palette.error.main
        },
        [`&.${vo.disabled} .${vo.notchedOutline}`]: {
          borderColor: (e10.vars || e10).palette.action.disabled
        }
      }
    }, {
      props: ({
        ownerState: n
      }) => n.startAdornment,
      style: {
        paddingLeft: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.endAdornment,
      style: {
        paddingRight: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.multiline,
      style: {
        padding: "16.5px 14px"
      }
    }, {
      props: ({
        ownerState: n,
        size: o
      }) => n.multiline && o === "small",
      style: {
        padding: "8.5px 14px"
      }
    }]
  };
}));
var CN = K(ZC, {
  name: "MuiOutlinedInput",
  slot: "NotchedOutline",
  overridesResolver: (e10, t) => t.notchedOutline
})(Ve(({
  theme: e10
}) => {
  const t = e10.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    borderColor: e10.vars ? `rgba(${e10.vars.palette.common.onBackgroundChannel} / 0.23)` : t
  };
}));
var SN = K(td, {
  name: "MuiOutlinedInput",
  slot: "Input",
  overridesResolver: Qu
})(Ve(({
  theme: e10
}) => ({
  padding: "16.5px 14px",
  ...!e10.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e10.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e10.palette.mode === "light" ? null : "#fff",
      caretColor: e10.palette.mode === "light" ? null : "#fff",
      borderRadius: "inherit"
    }
  },
  ...e10.vars && {
    "&:-webkit-autofill": {
      borderRadius: "inherit"
    },
    [e10.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      padding: "8.5px 14px"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }]
})));
var al = S.forwardRef(function(t, n) {
  var o;
  const r = Ye({
    props: t,
    name: "MuiOutlinedInput"
  }), {
    components: s = {},
    fullWidth: a = false,
    inputComponent: l = "input",
    label: c,
    multiline: u = false,
    notched: d,
    slots: p = {},
    type: m = "text",
    ...g
  } = r, b = yN(r), v = Jn(), h = Vi({
    props: r,
    muiFormControl: v,
    states: ["color", "disabled", "error", "focused", "hiddenLabel", "size", "required"]
  }), y = {
    ...r,
    color: h.color || "primary",
    disabled: h.disabled,
    error: h.error,
    focused: h.focused,
    formControl: v,
    fullWidth: a,
    hiddenLabel: h.hiddenLabel,
    multiline: u,
    size: h.size,
    type: m
  }, C = p.root ?? s.Root ?? xN, x = p.input ?? s.Input ?? SN;
  return f.jsx(nd, {
    slots: {
      root: C,
      input: x
    },
    renderSuffix: (T) => f.jsx(CN, {
      ownerState: y,
      className: b.notchedOutline,
      label: c != null && c !== "" && h.required ? o || (o = f.jsxs(S.Fragment, {
        children: [c, " ", "*"]
      })) : c,
      notched: typeof d < "u" ? d : !!(T.startAdornment || T.filled || T.focused)
    }),
    fullWidth: a,
    inputComponent: l,
    multiline: u,
    ref: n,
    type: m,
    ...g,
    classes: {
      ...b,
      notchedOutline: null
    }
  });
});
al.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: i.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary"]), i.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Input: i.elementType,
    Root: i.elementType
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: i.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: i.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: i.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: i.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: On,
  /**
   * The label of the `input`. It is only used for layout. The actual labelling
   * is handled by `InputLabel`.
   */
  label: i.node,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: i.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: i.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: i.bool,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: i.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: i.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: i.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: i.oneOfType([i.number, i.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    root: i.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: i.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: i.any
};
al && (al.muiName = "Input");
function wN(e10) {
  return He("MuiPagination", e10);
}
Be("MuiPagination", ["root", "ul", "outlined", "text"]);
function TN(e10 = {}) {
  const {
    boundaryCount: t = 1,
    componentName: n = "usePagination",
    count: o = 1,
    defaultPage: r = 1,
    disabled: s = false,
    hideNextButton: a = false,
    hidePrevButton: l = false,
    onChange: c,
    page: u,
    showFirstButton: d = false,
    showLastButton: p = false,
    siblingCount: m = 1,
    ...g
  } = e10, [b, v] = xr({
    controlled: u,
    default: r,
    name: n,
    state: "page"
  }), h = (I, P) => {
    u || v(P), c && c(I, P);
  }, y = (I, P) => {
    const A = P - I + 1;
    return Array.from({
      length: A
    }, (M, F) => I + F);
  }, C = y(1, Math.min(t, o)), x = y(Math.max(o - t + 1, t + 1), o), T = Math.max(
    Math.min(
      // Natural start
      b - m,
      // Lower boundary when page is high
      o - t - m * 2 - 1
    ),
    // Greater than startPages
    t + 2
  ), w = Math.min(
    Math.max(
      // Natural end
      b + m,
      // Upper boundary when page is low
      t + m * 2 + 2
    ),
    // Less than endPages
    o - t - 1
  ), R = [
    ...d ? ["first"] : [],
    ...l ? [] : ["previous"],
    ...C,
    // Start ellipsis
    // eslint-disable-next-line no-nested-ternary
    ...T > t + 2 ? ["start-ellipsis"] : t + 1 < o - t ? [t + 1] : [],
    // Sibling pages
    ...y(T, w),
    // End ellipsis
    // eslint-disable-next-line no-nested-ternary
    ...w < o - t - 1 ? ["end-ellipsis"] : o - t > t ? [o - t] : [],
    ...x,
    ...a ? [] : ["next"],
    ...p ? ["last"] : []
  ], E = (I) => {
    switch (I) {
      case "first":
        return 1;
      case "previous":
        return b - 1;
      case "next":
        return b + 1;
      case "last":
        return o;
      default:
        return null;
    }
  };
  return {
    items: R.map((I) => typeof I == "number" ? {
      onClick: (P) => {
        h(P, I);
      },
      type: "page",
      page: I,
      selected: I === b,
      disabled: s,
      "aria-current": I === b ? "true" : void 0
    } : {
      onClick: (P) => {
        h(P, E(I));
      },
      type: I,
      page: E(I),
      selected: false,
      disabled: s || !I.includes("ellipsis") && (I === "next" || I === "last" ? b >= o : b <= 1)
    }),
    ...g
  };
}
function IN(e10) {
  return He("MuiPaginationItem", e10);
}
var Nn = Be("MuiPaginationItem", ["root", "page", "sizeSmall", "sizeLarge", "text", "textPrimary", "textSecondary", "outlined", "outlinedPrimary", "outlinedSecondary", "rounded", "ellipsis", "firstLast", "previousNext", "focusVisible", "disabled", "selected", "icon", "colorPrimary", "colorSecondary"]);
var RN = ze(f.jsx("path", {
  d: "M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z"
}), "FirstPage");
var EN = ze(f.jsx("path", {
  d: "M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z"
}), "LastPage");
var ON = ze(f.jsx("path", {
  d: "M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"
}), "NavigateBefore");
var PN = ze(f.jsx("path", {
  d: "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
}), "NavigateNext");
var qC = (e10, t) => {
  const {
    ownerState: n
  } = e10;
  return [t.root, t[n.variant], t[`size${de(n.size)}`], n.variant === "text" && t[`text${de(n.color)}`], n.variant === "outlined" && t[`outlined${de(n.color)}`], n.shape === "rounded" && t.rounded, n.type === "page" && t.page, (n.type === "start-ellipsis" || n.type === "end-ellipsis") && t.ellipsis, (n.type === "previous" || n.type === "next") && t.previousNext, (n.type === "first" || n.type === "last") && t.firstLast];
};
var AN = (e10) => {
  const {
    classes: t,
    color: n,
    disabled: o,
    selected: r,
    size: s,
    shape: a,
    type: l,
    variant: c
  } = e10, u = {
    root: ["root", `size${de(s)}`, c, a, n !== "standard" && `color${de(n)}`, n !== "standard" && `${c}${de(n)}`, o && "disabled", r && "selected", {
      page: "page",
      first: "firstLast",
      last: "firstLast",
      "start-ellipsis": "ellipsis",
      "end-ellipsis": "ellipsis",
      previous: "previousNext",
      next: "previousNext"
    }[l]],
    icon: ["icon"]
  };
  return Ue(u, IN, t);
};
var jN = K("div", {
  name: "MuiPaginationItem",
  slot: "Root",
  overridesResolver: qC
})(Ve(({
  theme: e10
}) => ({
  ...e10.typography.body2,
  borderRadius: 32 / 2,
  textAlign: "center",
  boxSizing: "border-box",
  minWidth: 32,
  padding: "0 6px",
  margin: "0 3px",
  color: (e10.vars || e10).palette.text.primary,
  height: "auto",
  [`&.${Nn.disabled}`]: {
    opacity: (e10.vars || e10).palette.action.disabledOpacity
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      minWidth: 26,
      borderRadius: 26 / 2,
      margin: "0 1px",
      padding: "0 4px"
    }
  }, {
    props: {
      size: "large"
    },
    style: {
      minWidth: 40,
      borderRadius: 40 / 2,
      padding: "0 10px",
      fontSize: e10.typography.pxToRem(15)
    }
  }]
})));
var DN = K(Ro, {
  name: "MuiPaginationItem",
  slot: "Root",
  overridesResolver: qC
})(Ve(({
  theme: e10
}) => ({
  ...e10.typography.body2,
  borderRadius: 32 / 2,
  textAlign: "center",
  boxSizing: "border-box",
  minWidth: 32,
  height: 32,
  padding: "0 6px",
  margin: "0 3px",
  color: (e10.vars || e10).palette.text.primary,
  [`&.${Nn.focusVisible}`]: {
    backgroundColor: (e10.vars || e10).palette.action.focus
  },
  [`&.${Nn.disabled}`]: {
    opacity: (e10.vars || e10).palette.action.disabledOpacity
  },
  transition: e10.transitions.create(["color", "background-color"], {
    duration: e10.transitions.duration.short
  }),
  "&:hover": {
    backgroundColor: (e10.vars || e10).palette.action.hover,
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  [`&.${Nn.selected}`]: {
    backgroundColor: (e10.vars || e10).palette.action.selected,
    "&:hover": {
      backgroundColor: e10.vars ? `rgba(${e10.vars.palette.action.selectedChannel} / calc(${e10.vars.palette.action.selectedOpacity} + ${e10.vars.palette.action.hoverOpacity}))` : We(e10.palette.action.selected, e10.palette.action.selectedOpacity + e10.palette.action.hoverOpacity),
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: (e10.vars || e10).palette.action.selected
      }
    },
    [`&.${Nn.focusVisible}`]: {
      backgroundColor: e10.vars ? `rgba(${e10.vars.palette.action.selectedChannel} / calc(${e10.vars.palette.action.selectedOpacity} + ${e10.vars.palette.action.focusOpacity}))` : We(e10.palette.action.selected, e10.palette.action.selectedOpacity + e10.palette.action.focusOpacity)
    },
    [`&.${Nn.disabled}`]: {
      opacity: 1,
      color: (e10.vars || e10).palette.action.disabled,
      backgroundColor: (e10.vars || e10).palette.action.selected
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      minWidth: 26,
      height: 26,
      borderRadius: 26 / 2,
      margin: "0 1px",
      padding: "0 4px"
    }
  }, {
    props: {
      size: "large"
    },
    style: {
      minWidth: 40,
      height: 40,
      borderRadius: 40 / 2,
      padding: "0 10px",
      fontSize: e10.typography.pxToRem(15)
    }
  }, {
    props: {
      shape: "rounded"
    },
    style: {
      borderRadius: (e10.vars || e10).shape.borderRadius
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      border: e10.vars ? `1px solid rgba(${e10.vars.palette.common.onBackgroundChannel} / 0.23)` : `1px solid ${e10.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)"}`,
      [`&.${Nn.selected}`]: {
        [`&.${Nn.disabled}`]: {
          borderColor: (e10.vars || e10).palette.action.disabledBackground,
          color: (e10.vars || e10).palette.action.disabled
        }
      }
    }
  }, {
    props: {
      variant: "text"
    },
    style: {
      [`&.${Nn.selected}`]: {
        [`&.${Nn.disabled}`]: {
          color: (e10.vars || e10).palette.action.disabled
        }
      }
    }
  }, ...Object.entries(e10.palette).filter(Rt(["dark", "contrastText"])).map(([t]) => ({
    props: {
      variant: "text",
      color: t
    },
    style: {
      [`&.${Nn.selected}`]: {
        color: (e10.vars || e10).palette[t].contrastText,
        backgroundColor: (e10.vars || e10).palette[t].main,
        "&:hover": {
          backgroundColor: (e10.vars || e10).palette[t].dark,
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            backgroundColor: (e10.vars || e10).palette[t].main
          }
        },
        [`&.${Nn.focusVisible}`]: {
          backgroundColor: (e10.vars || e10).palette[t].dark
        },
        [`&.${Nn.disabled}`]: {
          color: (e10.vars || e10).palette.action.disabled
        }
      }
    }
  })), ...Object.entries(e10.palette).filter(Rt(["light"])).map(([t]) => ({
    props: {
      variant: "outlined",
      color: t
    },
    style: {
      [`&.${Nn.selected}`]: {
        color: (e10.vars || e10).palette[t].main,
        border: `1px solid ${e10.vars ? `rgba(${e10.vars.palette[t].mainChannel} / 0.5)` : We(e10.palette[t].main, 0.5)}`,
        backgroundColor: e10.vars ? `rgba(${e10.vars.palette[t].mainChannel} / ${e10.vars.palette.action.activatedOpacity})` : We(e10.palette[t].main, e10.palette.action.activatedOpacity),
        "&:hover": {
          backgroundColor: e10.vars ? `rgba(${e10.vars.palette[t].mainChannel} / calc(${e10.vars.palette.action.activatedOpacity} + ${e10.vars.palette.action.focusOpacity}))` : We(e10.palette[t].main, e10.palette.action.activatedOpacity + e10.palette.action.focusOpacity),
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            backgroundColor: "transparent"
          }
        },
        [`&.${Nn.focusVisible}`]: {
          backgroundColor: e10.vars ? `rgba(${e10.vars.palette[t].mainChannel} / calc(${e10.vars.palette.action.activatedOpacity} + ${e10.vars.palette.action.focusOpacity}))` : We(e10.palette[t].main, e10.palette.action.activatedOpacity + e10.palette.action.focusOpacity)
        }
      }
    }
  }))]
})));
var MN = K("div", {
  name: "MuiPaginationItem",
  slot: "Icon",
  overridesResolver: (e10, t) => t.icon
})(Ve(({
  theme: e10
}) => ({
  fontSize: e10.typography.pxToRem(20),
  margin: "0 -8px",
  variants: [{
    props: {
      size: "small"
    },
    style: {
      fontSize: e10.typography.pxToRem(18)
    }
  }, {
    props: {
      size: "large"
    },
    style: {
      fontSize: e10.typography.pxToRem(22)
    }
  }]
})));
var mg = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiPaginationItem"
  }), {
    className: r,
    color: s = "standard",
    component: a,
    components: l = {},
    disabled: c = false,
    page: u,
    selected: d = false,
    shape: p = "circular",
    size: m = "medium",
    slots: g = {},
    slotProps: b = {},
    type: v = "page",
    variant: h = "text",
    ...y
  } = o, C = {
    ...o,
    color: s,
    disabled: c,
    selected: d,
    shape: p,
    size: m,
    type: v,
    variant: h
  }, x = oi(), T = AN(C), w = {
    slots: {
      previous: g.previous ?? l.previous,
      next: g.next ?? l.next,
      first: g.first ?? l.first,
      last: g.last ?? l.last
    },
    slotProps: b
  }, [R, E] = sn("previous", {
    elementType: ON,
    externalForwardedProps: w,
    ownerState: C
  }), [O, I] = sn("next", {
    elementType: PN,
    externalForwardedProps: w,
    ownerState: C
  }), [P, A] = sn("first", {
    elementType: RN,
    externalForwardedProps: w,
    ownerState: C
  }), [M, F] = sn("last", {
    elementType: EN,
    externalForwardedProps: w,
    ownerState: C
  }), D = x ? {
    previous: "next",
    next: "previous",
    first: "last",
    last: "first"
  }[v] : v, N = {
    previous: R,
    next: O,
    first: P,
    last: M
  }[D], j = {
    previous: E,
    next: I,
    first: A,
    last: F
  }[D];
  return v === "start-ellipsis" || v === "end-ellipsis" ? f.jsx(jN, {
    ref: n,
    ownerState: C,
    className: be(T.root, r),
    children: "…"
  }) : f.jsxs(DN, {
    ref: n,
    ownerState: C,
    component: a,
    disabled: c,
    className: be(T.root, r),
    ...y,
    children: [v === "page" && u, N ? f.jsx(MN, {
      ...j,
      className: T.icon,
      as: N
    }) : null]
  });
});
mg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The active color.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'standard'
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary", "standard"]), i.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  components: i.shape({
    first: i.elementType,
    last: i.elementType,
    next: i.elementType,
    previous: i.elementType
  }),
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * The current page number.
   */
  page: i.node,
  /**
   * If `true` the pagination item is selected.
   * @default false
   */
  selected: i.bool,
  /**
   * The shape of the pagination item.
   * @default 'circular'
   */
  shape: i.oneOf(["circular", "rounded"]),
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["small", "medium", "large"]), i.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    first: i.oneOfType([i.func, i.object]),
    last: i.oneOfType([i.func, i.object]),
    next: i.oneOfType([i.func, i.object]),
    previous: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    first: i.elementType,
    last: i.elementType,
    next: i.elementType,
    previous: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The type of pagination item.
   * @default 'page'
   */
  type: i.oneOf(["end-ellipsis", "first", "last", "next", "page", "previous", "start-ellipsis"]),
  /**
   * The variant to use.
   * @default 'text'
   */
  variant: i.oneOfType([i.oneOf(["outlined", "text"]), i.string])
};
var kN = (e10) => {
  const {
    classes: t,
    variant: n
  } = e10;
  return Ue({
    root: ["root", n],
    ul: ["ul"]
  }, wN, t);
};
var FN = K("nav", {
  name: "MuiPagination",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.root, t[n.variant]];
  }
})({});
var NN = K("ul", {
  name: "MuiPagination",
  slot: "Ul",
  overridesResolver: (e10, t) => t.ul
})({
  display: "flex",
  flexWrap: "wrap",
  alignItems: "center",
  padding: 0,
  margin: 0,
  listStyle: "none"
});
function $N(e10, t, n) {
  return e10 === "page" ? `${n ? "" : "Go to "}page ${t}` : `Go to ${e10} page`;
}
var gg = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiPagination"
  }), {
    boundaryCount: r = 1,
    className: s,
    color: a = "standard",
    count: l = 1,
    defaultPage: c = 1,
    disabled: u = false,
    getItemAriaLabel: d = $N,
    hideNextButton: p = false,
    hidePrevButton: m = false,
    onChange: g,
    page: b,
    renderItem: v = (P) => f.jsx(mg, {
      ...P
    }),
    shape: h = "circular",
    showFirstButton: y = false,
    showLastButton: C = false,
    siblingCount: x = 1,
    size: T = "medium",
    variant: w = "text",
    ...R
  } = o, {
    items: E
  } = TN({
    ...o,
    componentName: "Pagination"
  }), O = {
    ...o,
    boundaryCount: r,
    color: a,
    count: l,
    defaultPage: c,
    disabled: u,
    getItemAriaLabel: d,
    hideNextButton: p,
    hidePrevButton: m,
    renderItem: v,
    shape: h,
    showFirstButton: y,
    showLastButton: C,
    siblingCount: x,
    size: T,
    variant: w
  }, I = kN(O);
  return f.jsx(FN, {
    "aria-label": "pagination navigation",
    className: be(I.root, s),
    ownerState: O,
    ref: n,
    ...R,
    children: f.jsx(NN, {
      className: I.ul,
      ownerState: O,
      children: E.map((P, A) => f.jsx("li", {
        children: v({
          ...P,
          color: a,
          "aria-label": d(P.type, P.page, P.selected),
          shape: h,
          size: T,
          variant: w
        })
      }, A))
    })
  });
});
gg.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Number of always visible pages at the beginning and end.
   * @default 1
   */
  boundaryCount: Br,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The active color.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'standard'
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary", "standard"]), i.string]),
  /**
   * The total number of pages.
   * @default 1
   */
  count: Br,
  /**
   * The page selected by default when the component is uncontrolled.
   * @default 1
   */
  defaultPage: Br,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current page.
   * This is important for screen reader users.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous' | 'start-ellipsis' | 'end-ellipsis'). Defaults to 'page'.
   * @param {number | null} page The page number to format.
   * @param {boolean} selected If true, the current page is selected.
   * @returns {string}
   */
  getItemAriaLabel: i.func,
  /**
   * If `true`, hide the next-page button.
   * @default false
   */
  hideNextButton: i.bool,
  /**
   * If `true`, hide the previous-page button.
   * @default false
   */
  hidePrevButton: i.bool,
  /**
   * Callback fired when the page is changed.
   *
   * @param {React.ChangeEvent<unknown>} event The event source of the callback.
   * @param {number} page The page selected.
   */
  onChange: i.func,
  /**
   * The current page. Unlike `TablePagination`, which starts numbering from `0`, this pagination starts from `1`.
   */
  page: Br,
  /**
   * Render the item.
   * @param {PaginationRenderItemParams} params The props to spread on a PaginationItem.
   * @returns {ReactNode}
   * @default (item) => <PaginationItem {...item} />
   */
  renderItem: i.func,
  /**
   * The shape of the pagination items.
   * @default 'circular'
   */
  shape: i.oneOf(["circular", "rounded"]),
  /**
   * If `true`, show the first-page button.
   * @default false
   */
  showFirstButton: i.bool,
  /**
   * If `true`, show the last-page button.
   * @default false
   */
  showLastButton: i.bool,
  /**
   * Number of always visible pages before and after the current page.
   * @default 1
   */
  siblingCount: Br,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["small", "medium", "large"]), i.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The variant to use.
   * @default 'text'
   */
  variant: i.oneOfType([i.oneOf(["outlined", "text"]), i.string])
};
var VN = ze(f.jsx("path", {
  d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
}), "RadioButtonUnchecked");
var _N = ze(f.jsx("path", {
  d: "M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"
}), "RadioButtonChecked");
var LN = K("span", {
  shouldForwardProp: Fn
})({
  position: "relative",
  display: "flex"
});
var BN = K(VN)({
  // Scale applied to prevent dot misalignment in Safari
  transform: "scale(1)"
});
var zN = K(_N)(Ve(({
  theme: e10
}) => ({
  left: 0,
  position: "absolute",
  transform: "scale(0)",
  transition: e10.transitions.create("transform", {
    easing: e10.transitions.easing.easeIn,
    duration: e10.transitions.duration.shortest
  }),
  variants: [{
    props: {
      checked: true
    },
    style: {
      transform: "scale(1)",
      transition: e10.transitions.create("transform", {
        easing: e10.transitions.easing.easeOut,
        duration: e10.transitions.duration.shortest
      })
    }
  }]
})));
function hg(e10) {
  const {
    checked: t = false,
    classes: n = {},
    fontSize: o
  } = e10, r = {
    ...e10,
    checked: t
  };
  return f.jsxs(LN, {
    className: n.root,
    ownerState: r,
    children: [f.jsx(BN, {
      fontSize: o,
      className: n.background,
      ownerState: r
    }), f.jsx(zN, {
      fontSize: o,
      className: n.dot,
      ownerState: r
    })]
  });
}
hg.propTypes = {
  /**
   * If `true`, the component is checked.
   */
  checked: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The size of the component.
   * `small` is equivalent to the dense radio styling.
   */
  fontSize: i.oneOf(["small", "medium"])
};
var JC = S.createContext(void 0);
JC.displayName = "RadioGroupContext";
function WN() {
  return S.useContext(JC);
}
function HN(e10) {
  return He("MuiRadio", e10);
}
var Rv = Be("MuiRadio", ["root", "checked", "disabled", "colorPrimary", "colorSecondary", "sizeSmall"]);
var GN = (e10) => {
  const {
    classes: t,
    color: n,
    size: o
  } = e10, r = {
    root: ["root", `color${de(n)}`, o !== "medium" && `size${de(o)}`]
  };
  return {
    ...t,
    ...Ue(r, HN, t)
  };
};
var UN = K(od, {
  shouldForwardProp: (e10) => Fn(e10) || e10 === "classes",
  name: "MuiRadio",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.root, n.size !== "medium" && t[`size${de(n.size)}`], t[`color${de(n.color)}`]];
  }
})(Ve(({
  theme: e10
}) => ({
  color: (e10.vars || e10).palette.text.secondary,
  [`&.${Rv.disabled}`]: {
    color: (e10.vars || e10).palette.action.disabled
  },
  variants: [{
    props: {
      color: "default",
      disabled: false,
      disableRipple: false
    },
    style: {
      "&:hover": {
        backgroundColor: e10.vars ? `rgba(${e10.vars.palette.action.activeChannel} / ${e10.vars.palette.action.hoverOpacity})` : We(e10.palette.action.active, e10.palette.action.hoverOpacity)
      }
    }
  }, ...Object.entries(e10.palette).filter(Rt()).map(([t]) => ({
    props: {
      color: t,
      disabled: false,
      disableRipple: false
    },
    style: {
      "&:hover": {
        backgroundColor: e10.vars ? `rgba(${e10.vars.palette[t].mainChannel} / ${e10.vars.palette.action.hoverOpacity})` : We(e10.palette[t].main, e10.palette.action.hoverOpacity)
      }
    }
  })), ...Object.entries(e10.palette).filter(Rt()).map(([t]) => ({
    props: {
      color: t,
      disabled: false
    },
    style: {
      [`&.${Rv.checked}`]: {
        color: (e10.vars || e10).palette[t].main
      }
    }
  })), {
    // Should be last to override other colors
    props: {
      disableRipple: false
    },
    style: {
      // Reset on touch devices, it doesn't add specificity
      "&:hover": {
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  }]
})));
function XN(e10, t) {
  return typeof t == "object" && t !== null ? e10 === t : String(e10) === String(t);
}
var Ev = f.jsx(hg, {
  checked: true
});
var Ov = f.jsx(hg, {});
var KC = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiRadio"
  }), {
    checked: r,
    checkedIcon: s = Ev,
    color: a = "primary",
    icon: l = Ov,
    name: c,
    onChange: u,
    size: d = "medium",
    className: p,
    disabled: m,
    disableRipple: g = false,
    ...b
  } = o, v = Jn();
  let h = m;
  v && typeof h > "u" && (h = v.disabled), h ?? (h = false);
  const y = {
    ...o,
    disabled: h,
    disableRipple: g,
    color: a,
    size: d
  }, C = GN(y), x = WN();
  let T = r;
  const w = vf(u, x && x.onChange);
  let R = c;
  return x && (typeof T > "u" && (T = XN(x.value, o.value)), typeof R > "u" && (R = x.name)), f.jsx(UN, {
    type: "radio",
    icon: S.cloneElement(l, {
      fontSize: Ov.props.fontSize ?? d
    }),
    checkedIcon: S.cloneElement(s, {
      fontSize: Ev.props.fontSize ?? d
    }),
    disabled: h,
    ownerState: y,
    classes: C,
    name: R,
    checked: T,
    onChange: w,
    ref: n,
    className: be(C.root, p),
    ...b
  });
});
KC.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: i.bool,
  /**
   * The icon to display when the component is checked.
   * @default <RadioButtonIcon checked />
   */
  checkedIcon: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * If `true`, the component is disabled.
   */
  disabled: i.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: i.bool,
  /**
   * The icon to display when the component is unchecked.
   * @default <RadioButtonIcon />
   */
  icon: i.node,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: On,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: i.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: i.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense radio styling.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   */
  value: i.any
};
function YN(e10) {
  return He("MuiSelect", e10);
}
var da = Be("MuiSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "focused", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]);
var Pv;
var ZN = K(UC, {
  name: "MuiSelect",
  slot: "Select",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [
      // Win specificity over the input base
      {
        [`&.${da.select}`]: t.select
      },
      {
        [`&.${da.select}`]: t[n.variant]
      },
      {
        [`&.${da.error}`]: t.error
      },
      {
        [`&.${da.multiple}`]: t.multiple
      }
    ];
  }
})({
  // Win specificity over the input base
  [`&.${da.select}`]: {
    height: "auto",
    // Resets for multiple select with chips
    minHeight: "1.4375em",
    // Required for select\text-field height consistency
    textOverflow: "ellipsis",
    whiteSpace: "nowrap",
    overflow: "hidden"
  }
});
var qN = K(XC, {
  name: "MuiSelect",
  slot: "Icon",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.icon, n.variant && t[`icon${de(n.variant)}`], n.open && t.iconOpen];
  }
})({});
var JN = K("input", {
  shouldForwardProp: (e10) => Yu(e10) && e10 !== "classes",
  name: "MuiSelect",
  slot: "NativeInput",
  overridesResolver: (e10, t) => t.nativeInput
})({
  bottom: 0,
  left: 0,
  position: "absolute",
  opacity: 0,
  pointerEvents: "none",
  width: "100%",
  boxSizing: "border-box"
});
function Av(e10, t) {
  return typeof t == "object" && t !== null ? e10 === t : String(e10) === String(t);
}
function KN(e10) {
  return e10 == null || typeof e10 == "string" && !e10.trim();
}
var QN = (e10) => {
  const {
    classes: t,
    variant: n,
    disabled: o,
    multiple: r,
    open: s,
    error: a
  } = e10, l = {
    select: ["select", n, o && "disabled", r && "multiple", a && "error"],
    icon: ["icon", `icon${de(n)}`, s && "iconOpen", o && "disabled"],
    nativeInput: ["nativeInput"]
  };
  return Ue(l, YN, t);
};
var QC = S.forwardRef(function(t, n) {
  var ut;
  const {
    "aria-describedby": o,
    "aria-label": r,
    autoFocus: s,
    autoWidth: a,
    children: l,
    className: c,
    defaultOpen: u,
    defaultValue: d,
    disabled: p,
    displayEmpty: m,
    error: g = false,
    IconComponent: b,
    inputRef: v,
    labelId: h,
    MenuProps: y = {},
    multiple: C,
    name: x,
    onBlur: T,
    onChange: w,
    onClose: R,
    onFocus: E,
    onOpen: O,
    open: I,
    readOnly: P,
    renderValue: A,
    SelectDisplayProps: M = {},
    tabIndex: F,
    // catching `type` from Input which makes no sense for SelectInput
    type: D,
    value: N,
    variant: j = "standard",
    ..._
  } = t, [z, $] = xr({
    controlled: N,
    default: d,
    name: "Select"
  }), [k, B] = xr({
    controlled: I,
    default: u,
    name: "Select"
  }), Q = S.useRef(null), ee = S.useRef(null), [G, H] = S.useState(null), {
    current: Y
  } = S.useRef(I != null), [J, U] = S.useState(), ne = Jt(n, v), se = S.useCallback((me) => {
    ee.current = me, me && H(me);
  }, []), oe = G == null ? void 0 : G.parentNode;
  S.useImperativeHandle(ne, () => ({
    focus: () => {
      ee.current.focus();
    },
    node: Q.current,
    value: z
  }), [z]), S.useEffect(() => {
    u && k && G && !Y && (U(a ? null : oe.clientWidth), ee.current.focus());
  }, [G, a]), S.useEffect(() => {
    s && ee.current.focus();
  }, [s]), S.useEffect(() => {
    if (!h)
      return;
    const me = mn(ee.current).getElementById(h);
    if (me) {
      const Oe = () => {
        getSelection().isCollapsed && ee.current.focus();
      };
      return me.addEventListener("click", Oe), () => {
        me.removeEventListener("click", Oe);
      };
    }
  }, [h]);
  const W = (me, Oe) => {
    me ? O && O(Oe) : R && R(Oe), Y || (U(a ? null : oe.clientWidth), B(me));
  }, Z = (me) => {
    me.button === 0 && (me.preventDefault(), ee.current.focus(), W(true, me));
  }, L = (me) => {
    W(false, me);
  }, ie = S.Children.toArray(l), te = (me) => {
    const Oe = ie.find((he) => he.props.value === me.target.value);
    Oe !== void 0 && ($(Oe.props.value), w && w(me, Oe));
  }, le = (me) => (Oe) => {
    let he;
    if (Oe.currentTarget.hasAttribute("tabindex")) {
      if (C) {
        he = Array.isArray(z) ? z.slice() : [];
        const Me = z.indexOf(me.props.value);
        Me === -1 ? he.push(me.props.value) : he.splice(Me, 1);
      } else
        he = me.props.value;
      if (me.props.onClick && me.props.onClick(Oe), z !== he && ($(he), w)) {
        const Me = Oe.nativeEvent || Oe, ke = new Me.constructor(Me.type, Me);
        Object.defineProperty(ke, "target", {
          writable: true,
          value: {
            value: he,
            name: x
          }
        }), w(ke, me);
      }
      C || W(false, Oe);
    }
  }, ue = (me) => {
    P || [
      " ",
      "ArrowUp",
      "ArrowDown",
      // The native select doesn't respond to enter on macOS, but it's recommended by
      // https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-select-only/
      "Enter"
    ].includes(me.key) && (me.preventDefault(), W(true, me));
  }, ve = G !== null && k, Te = (me) => {
    !ve && T && (Object.defineProperty(me, "target", {
      writable: true,
      value: {
        value: z,
        name: x
      }
    }), T(me));
  };
  delete _["aria-invalid"];
  let Re, re;
  const X = [];
  let ae = false, ce = false;
  (nu({
    value: z
  }) || m) && (A ? Re = A(z) : ae = true);
  const ge = ie.map((me) => {
    if (!S.isValidElement(me))
      return null;
    Zu.isFragment(me) && console.error(["MUI: The Select component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`));
    let Oe;
    if (C) {
      if (!Array.isArray(z))
        throw new Error(true ? "MUI: The `value` prop must be an array when using the `Select` component with `multiple`." : or(2));
      Oe = z.some((he) => Av(he, me.props.value)), Oe && ae && X.push(me.props.children);
    } else
      Oe = Av(z, me.props.value), Oe && ae && (re = me.props.children);
    return Oe && (ce = true), S.cloneElement(me, {
      "aria-selected": Oe ? "true" : "false",
      onClick: le(me),
      onKeyUp: (he) => {
        he.key === " " && he.preventDefault(), me.props.onKeyUp && me.props.onKeyUp(he);
      },
      role: "option",
      selected: Oe,
      value: void 0,
      // The value is most likely not a valid HTML attribute.
      "data-value": me.props.value
      // Instead, we provide it as a data attribute.
    });
  });
  S.useEffect(() => {
    if (!ce && !C && z !== "") {
      const me = ie.map((Oe) => Oe.props.value);
      console.warn([`MUI: You have provided an out-of-range value \`${z}\` for the select ${x ? `(name="${x}") ` : ""}component.`, "Consider providing a value that matches one of the available options or ''.", `The available values are ${me.filter((Oe) => Oe != null).map((Oe) => `\`${Oe}\``).join(", ") || '""'}.`].join(`
`));
    }
  }, [ce, ie, C, x, z]), ae && (C ? X.length === 0 ? Re = null : Re = X.reduce((me, Oe, he) => (me.push(Oe), he < X.length - 1 && me.push(", "), me), []) : Re = re);
  let Se = J;
  !a && Y && G && (Se = oe.clientWidth);
  let ye;
  typeof F < "u" ? ye = F : ye = p ? null : 0;
  const Ee = M.id || (x ? `mui-component-select-${x}` : void 0), Le = {
    ...t,
    variant: j,
    value: z,
    open: ve,
    error: g
  }, Ae = QN(Le), tt = {
    ...y.PaperProps,
    ...(ut = y.slotProps) == null ? void 0 : ut.paper
  }, Ze = Ws();
  return f.jsxs(S.Fragment, {
    children: [f.jsx(ZN, {
      as: "div",
      ref: se,
      tabIndex: ye,
      role: "combobox",
      "aria-controls": Ze,
      "aria-disabled": p ? "true" : void 0,
      "aria-expanded": ve ? "true" : "false",
      "aria-haspopup": "listbox",
      "aria-label": r,
      "aria-labelledby": [h, Ee].filter(Boolean).join(" ") || void 0,
      "aria-describedby": o,
      onKeyDown: ue,
      onMouseDown: p || P ? null : Z,
      onBlur: Te,
      onFocus: E,
      ...M,
      ownerState: Le,
      className: be(M.className, Ae.select, c),
      id: Ee,
      children: KN(Re) ? (
        // notranslate needed while Google Translate will not fix zero-width space issue
        Pv || (Pv = f.jsx("span", {
          className: "notranslate",
          children: "​"
        }))
      ) : Re
    }), f.jsx(JN, {
      "aria-invalid": g,
      value: Array.isArray(z) ? z.join(",") : z,
      name: x,
      ref: Q,
      "aria-hidden": true,
      onChange: te,
      tabIndex: -1,
      disabled: p,
      className: Ae.nativeInput,
      autoFocus: s,
      ..._,
      ownerState: Le
    }), f.jsx(qN, {
      as: b,
      className: Ae.icon,
      ownerState: Le
    }), f.jsx(si, {
      id: `menu-${x || ""}`,
      anchorEl: oe,
      open: ve,
      onClose: L,
      anchorOrigin: {
        vertical: "bottom",
        horizontal: "center"
      },
      transformOrigin: {
        vertical: "top",
        horizontal: "center"
      },
      ...y,
      MenuListProps: {
        "aria-labelledby": h,
        role: "listbox",
        "aria-multiselectable": C ? "true" : void 0,
        disableListWrap: true,
        id: Ze,
        ...y.MenuListProps
      },
      slotProps: {
        ...y.slotProps,
        paper: {
          ...tt,
          style: {
            minWidth: Se,
            ...tt != null ? tt.style : null
          }
        }
      },
      children: ge
    })]
  });
});
QC.propTypes = {
  /**
   * @ignore
   */
  "aria-describedby": i.string,
  /**
   * @ignore
   */
  "aria-label": i.string,
  /**
   * @ignore
   */
  autoFocus: i.bool,
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   */
  autoWidth: i.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `<MenuItem>` elements.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * The CSS class name of the select element.
   */
  className: i.string,
  /**
   * If `true`, the component is toggled on mount. Use when the component open state is not controlled.
   * You can only use it when the `native` prop is `false` (default).
   */
  defaultOpen: i.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the select is disabled.
   */
  disabled: i.bool,
  /**
   * If `true`, the selected item is displayed even if its value is empty.
   */
  displayEmpty: i.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: i.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: i.elementType.isRequired,
  /**
   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`
   * Equivalent to `ref`
   */
  inputRef: On,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: i.string,
  /**
   * Props applied to the [`Menu`](/material-ui/api/menu/) element.
   */
  MenuProps: i.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   */
  multiple: i.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: i.string,
  /**
   * @ignore
   */
  onBlur: i.func,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * @param {object} [child] The react element that was selected.
   */
  onChange: i.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: i.func,
  /**
   * @ignore
   */
  onFocus: i.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool,
  /**
   * @ignore
   */
  readOnly: i.bool,
  /**
   * Render the selected value.
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: i.func,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: i.object,
  /**
   * @ignore
   */
  tabIndex: i.oneOfType([i.number, i.string]),
  /**
   * @ignore
   */
  type: i.any,
  /**
   * The input value.
   */
  value: i.any,
  /**
   * The variant to use.
   */
  variant: i.oneOf(["standard", "outlined", "filled"])
};
var e$ = (e10) => {
  const {
    classes: t
  } = e10;
  return t;
};
var bg = {
  name: "MuiSelect",
  overridesResolver: (e10, t) => t.root,
  shouldForwardProp: (e10) => Fn(e10) && e10 !== "variant",
  slot: "Root"
};
var t$ = K(sl, bg)("");
var n$ = K(al, bg)("");
var o$ = K(rl, bg)("");
var Dl = S.forwardRef(function(t, n) {
  const o = at({
    name: "MuiSelect",
    props: t
  }), {
    autoWidth: r = false,
    children: s,
    classes: a = {},
    className: l,
    defaultOpen: c = false,
    displayEmpty: u = false,
    IconComponent: d = MC,
    id: p,
    input: m,
    inputProps: g,
    label: b,
    labelId: v,
    MenuProps: h,
    multiple: y = false,
    native: C = false,
    onClose: x,
    onOpen: T,
    open: w,
    renderValue: R,
    SelectDisplayProps: E,
    variant: O = "outlined",
    ...I
  } = o, P = C ? YC : QC, A = Jn(), M = Vi({
    props: o,
    muiFormControl: A,
    states: ["variant", "error"]
  }), F = M.variant || O, D = {
    ...o,
    variant: F,
    classes: a
  }, N = e$(D), {
    root: j,
    ..._
  } = N, z = m || {
    standard: f.jsx(t$, {
      ownerState: D
    }),
    outlined: f.jsx(n$, {
      label: b,
      ownerState: D
    }),
    filled: f.jsx(o$, {
      ownerState: D
    })
  }[F], $ = Jt(n, Hs(z));
  return f.jsx(S.Fragment, {
    children: S.cloneElement(z, {
      // Most of the logic is implemented in `SelectInput`.
      // The `Select` component is a simple API wrapper to expose something better to play with.
      inputComponent: P,
      inputProps: {
        children: s,
        error: M.error,
        IconComponent: d,
        variant: F,
        type: void 0,
        // We render a select. We can ignore the type provided by the `Input`.
        multiple: y,
        ...C ? {
          id: p
        } : {
          autoWidth: r,
          defaultOpen: c,
          displayEmpty: u,
          labelId: v,
          MenuProps: h,
          onClose: x,
          onOpen: T,
          open: w,
          renderValue: R,
          SelectDisplayProps: {
            id: p,
            ...E
          }
        },
        ...g,
        classes: g ? Cn(_, g.classes) : _,
        ...m ? m.props.inputProps : {}
      },
      ...(y && C || u) && F === "outlined" ? {
        notched: true
      } : {},
      ref: $,
      className: be(z.props.className, l, N.root),
      // If a custom input is provided via 'input' prop, do not allow 'variant' to be propagated to it's root element. See https://github.com/mui/material-ui/issues/33894.
      ...!m && {
        variant: F
      },
      ...I
    })
  });
});
Dl.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   * @default false
   */
  autoWidth: i.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `MenuItem` when `native` is false and `option` when `native` is true.
   *
   * ⚠️The `MenuItem` elements **must** be direct descendants when `native` is false.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   * @default {}
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * If `true`, the component is initially open. Use when the component open state is not controlled (i.e. the `open` prop is not defined).
   * You can only use it when the `native` prop is `false` (default).
   * @default false
   */
  defaultOpen: i.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, a value is displayed even if no items are selected.
   *
   * In order to display a meaningful value, a function can be passed to the `renderValue` prop which
   * returns the value to be displayed when no items are selected.
   *
   * ⚠️ When using this prop, make sure the label doesn't overlap with the empty displayed value.
   * The label should either be hidden or forced to a shrunk state.
   * @default false
   */
  displayEmpty: i.bool,
  /**
   * The icon that displays the arrow.
   * @default ArrowDropDownIcon
   */
  IconComponent: i.elementType,
  /**
   * The `id` of the wrapper element or the `select` element when `native`.
   */
  id: i.string,
  /**
   * An `Input` element; does not have to be a material-ui specific `Input`.
   */
  input: i.element,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * When `native` is `true`, the attributes are applied on the `select` element.
   */
  inputProps: i.object,
  /**
   * See [OutlinedInput#label](https://mui.com/material-ui/api/outlined-input/#props)
   */
  label: i.node,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: i.string,
  /**
   * Props applied to the [`Menu`](https://mui.com/material-ui/api/menu/) element.
   */
  MenuProps: i.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   * @default false
   */
  multiple: i.bool,
  /**
   * If `true`, the component uses a native `select` element.
   * @default false
   */
  native: i.bool,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {SelectChangeEvent<Value>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * **Warning**: This is a generic event, not a change event, unless the change event is caused by browser autofill.
   * @param {object} [child] The react element that was selected when `native` is `false` (default).
   */
  onChange: i.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select collapses).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: i.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select expands).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: i.func,
  /**
   * If `true`, the component is shown.
   * You can only use it when the `native` prop is `false` (default).
   */
  open: i.bool,
  /**
   * Render the selected value.
   * You can only use it when the `native` prop is `false` (default).
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: i.func,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The `input` value. Providing an empty string will select no options.
   * Set to an empty string `''` if you don't want any of the available options to be selected.
   *
   * If the value is an object it must have reference equality with the option in order to be selected.
   * If the value is not an object, the string representation must match with the string representation of the option in order to be selected.
   */
  value: i.oneOfType([i.oneOf([""]), i.any]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: i.oneOf(["filled", "outlined", "standard"])
};
Dl.muiName = "Select";
function r$(e10) {
  return He("MuiSkeleton", e10);
}
Be("MuiSkeleton", ["root", "text", "rectangular", "rounded", "circular", "pulse", "wave", "withChildren", "fitContent", "heightAuto"]);
var i$ = (e10) => {
  const {
    classes: t,
    variant: n,
    animation: o,
    hasChildren: r,
    width: s,
    height: a
  } = e10;
  return Ue({
    root: ["root", n, o, r && "withChildren", r && !s && "fitContent", r && !a && "heightAuto"]
  }, r$, t);
};
var Ff = zo`
  0% {
    opacity: 1;
  }

  50% {
    opacity: 0.4;
  }

  100% {
    opacity: 1;
  }
`;
var Nf = zo`
  0% {
    transform: translateX(-100%);
  }

  50% {
    /* +0.5s of delay between each loop */
    transform: translateX(100%);
  }

  100% {
    transform: translateX(100%);
  }
`;
var s$ = typeof Ff != "string" ? lr`
        animation: ${Ff} 2s ease-in-out 0.5s infinite;
      ` : null;
var a$ = typeof Nf != "string" ? lr`
        &::after {
          animation: ${Nf} 2s linear 0.5s infinite;
        }
      ` : null;
var l$ = K("span", {
  name: "MuiSkeleton",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.root, t[n.variant], n.animation !== false && t[n.animation], n.hasChildren && t.withChildren, n.hasChildren && !n.width && t.fitContent, n.hasChildren && !n.height && t.heightAuto];
  }
})(Ve(({
  theme: e10
}) => {
  const t = ij(e10.shape.borderRadius) || "px", n = sj(e10.shape.borderRadius);
  return {
    display: "block",
    // Create a "on paper" color with sufficient contrast retaining the color
    backgroundColor: e10.vars ? e10.vars.palette.Skeleton.bg : We(e10.palette.text.primary, e10.palette.mode === "light" ? 0.11 : 0.13),
    height: "1.2em",
    variants: [{
      props: {
        variant: "text"
      },
      style: {
        marginTop: 0,
        marginBottom: 0,
        height: "auto",
        transformOrigin: "0 55%",
        transform: "scale(1, 0.60)",
        borderRadius: `${n}${t}/${Math.round(n / 0.6 * 10) / 10}${t}`,
        "&:empty:before": {
          content: '"\\00a0"'
        }
      }
    }, {
      props: {
        variant: "circular"
      },
      style: {
        borderRadius: "50%"
      }
    }, {
      props: {
        variant: "rounded"
      },
      style: {
        borderRadius: (e10.vars || e10).shape.borderRadius
      }
    }, {
      props: ({
        ownerState: o
      }) => o.hasChildren,
      style: {
        "& > *": {
          visibility: "hidden"
        }
      }
    }, {
      props: ({
        ownerState: o
      }) => o.hasChildren && !o.width,
      style: {
        maxWidth: "fit-content"
      }
    }, {
      props: ({
        ownerState: o
      }) => o.hasChildren && !o.height,
      style: {
        height: "auto"
      }
    }, {
      props: {
        animation: "pulse"
      },
      style: s$ || {
        animation: `${Ff} 2s ease-in-out 0.5s infinite`
      }
    }, {
      props: {
        animation: "wave"
      },
      style: {
        position: "relative",
        overflow: "hidden",
        /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */
        WebkitMaskImage: "-webkit-radial-gradient(white, black)",
        "&::after": {
          background: `linear-gradient(
                90deg,
                transparent,
                ${(e10.vars || e10).palette.action.hover},
                transparent
              )`,
          content: '""',
          position: "absolute",
          transform: "translateX(-100%)",
          bottom: 0,
          left: 0,
          right: 0,
          top: 0
        }
      }
    }, {
      props: {
        animation: "wave"
      },
      style: a$ || {
        "&::after": {
          animation: `${Nf} 2s linear 0.5s infinite`
        }
      }
    }]
  };
}));
var ll = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiSkeleton"
  }), {
    animation: r = "pulse",
    className: s,
    component: a = "span",
    height: l,
    style: c,
    variant: u = "text",
    width: d,
    ...p
  } = o, m = {
    ...o,
    animation: r,
    component: a,
    variant: u,
    hasChildren: !!p.children
  }, g = i$(m);
  return f.jsx(l$, {
    as: a,
    ref: n,
    className: be(g.root, s),
    ownerState: m,
    ...p,
    style: {
      width: d,
      height: l,
      ...c
    }
  });
});
ll.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The animation.
   * If `false` the animation effect is disabled.
   * @default 'pulse'
   */
  animation: i.oneOf(["pulse", "wave", false]),
  /**
   * Optional children to infer width and height from.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * Height of the skeleton.
   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.
   */
  height: i.oneOfType([i.number, i.string]),
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The type of content that will be rendered.
   * @default 'text'
   */
  variant: i.oneOfType([i.oneOf(["circular", "rectangular", "rounded", "text"]), i.string]),
  /**
   * Width of the skeleton.
   * Useful when the skeleton is inside an inline element with no width of its own.
   */
  width: i.oneOfType([i.number, i.string])
};
function c$(e10, t, n = (o, r) => o === r) {
  return e10.length === t.length && e10.every((o, r) => n(o, t[r]));
}
var u$ = 2;
function eS(e10, t) {
  return e10 - t;
}
function jv(e10, t) {
  const {
    index: n
  } = e10.reduce((o, r, s) => {
    const a = Math.abs(t - r);
    return o === null || a < o.distance || a === o.distance ? {
      distance: a,
      index: s
    } : o;
  }, null) ?? {};
  return n;
}
function Ql(e10, t) {
  if (t.current !== void 0 && e10.changedTouches) {
    const n = e10;
    for (let o = 0; o < n.changedTouches.length; o += 1) {
      const r = n.changedTouches[o];
      if (r.identifier === t.current)
        return {
          x: r.clientX,
          y: r.clientY
        };
    }
    return false;
  }
  return {
    x: e10.clientX,
    y: e10.clientY
  };
}
function ou(e10, t, n) {
  return (e10 - t) * 100 / (n - t);
}
function d$(e10, t, n) {
  return (n - t) * e10 + t;
}
function p$(e10) {
  if (Math.abs(e10) < 1) {
    const n = e10.toExponential().split("e-"), o = n[0].split(".")[1];
    return (o ? o.length : 0) + parseInt(n[1], 10);
  }
  const t = e10.toString().split(".")[1];
  return t ? t.length : 0;
}
function f$(e10, t, n) {
  const o = Math.round((e10 - n) / t) * t + n;
  return Number(o.toFixed(p$(t)));
}
function Dv({
  values: e10,
  newValue: t,
  index: n
}) {
  const o = e10.slice();
  return o[n] = t, o.sort(eS);
}
function ec({
  sliderRef: e10,
  activeIndex: t,
  setActive: n
}) {
  var r, s, a;
  const o = mn(e10.current);
  (!((r = e10.current) != null && r.contains(o.activeElement)) || Number((s = o == null ? void 0 : o.activeElement) == null ? void 0 : s.getAttribute("data-index")) !== t) && ((a = e10.current) == null || a.querySelector(`[type="range"][data-index="${t}"]`).focus()), n && n(t);
}
function tc(e10, t) {
  return typeof e10 == "number" && typeof t == "number" ? e10 === t : typeof e10 == "object" && typeof t == "object" ? c$(e10, t) : false;
}
var m$ = {
  horizontal: {
    offset: (e10) => ({
      left: `${e10}%`
    }),
    leap: (e10) => ({
      width: `${e10}%`
    })
  },
  "horizontal-reverse": {
    offset: (e10) => ({
      right: `${e10}%`
    }),
    leap: (e10) => ({
      width: `${e10}%`
    })
  },
  vertical: {
    offset: (e10) => ({
      bottom: `${e10}%`
    }),
    leap: (e10) => ({
      height: `${e10}%`
    })
  }
};
var g$ = (e10) => e10;
var nc;
function Mv() {
  return nc === void 0 && (typeof CSS < "u" && typeof CSS.supports == "function" ? nc = CSS.supports("touch-action", "none") : nc = true), nc;
}
function h$(e10) {
  const {
    "aria-labelledby": t,
    defaultValue: n,
    disabled: o = false,
    disableSwap: r = false,
    isRtl: s = false,
    marks: a = false,
    max: l = 100,
    min: c = 0,
    name: u,
    onChange: d,
    onChangeCommitted: p,
    orientation: m = "horizontal",
    rootRef: g,
    scale: b = g$,
    step: v = 1,
    shiftStep: h = 10,
    tabIndex: y,
    value: C
  } = e10, x = S.useRef(void 0), [T, w] = S.useState(-1), [R, E] = S.useState(-1), [O, I] = S.useState(false), P = S.useRef(0), [A, M] = xr({
    controlled: C,
    default: n ?? c,
    name: "Slider"
  }), F = d && ((X, ae, ce) => {
    const ge = X.nativeEvent || X, Se = new ge.constructor(ge.type, ge);
    Object.defineProperty(Se, "target", {
      writable: true,
      value: {
        value: ae,
        name: u
      }
    }), d(Se, ae, ce);
  }), D = Array.isArray(A);
  let N = D ? A.slice().sort(eS) : [A];
  N = N.map((X) => X == null ? c : ls(X, c, l));
  const j = a === true && v !== null ? [...Array(Math.floor((l - c) / v) + 1)].map((X, ae) => ({
    value: c + v * ae
  })) : a || [], _ = j.map((X) => X.value), [z, $] = S.useState(-1), k = S.useRef(null), B = Jt(g, k), Q = (X) => (ae) => {
    var ge;
    const ce = Number(ae.currentTarget.getAttribute("data-index"));
    Es(ae.target) && $(ce), E(ce), (ge = X == null ? void 0 : X.onFocus) == null || ge.call(X, ae);
  }, ee = (X) => (ae) => {
    var ce;
    Es(ae.target) || $(-1), E(-1), (ce = X == null ? void 0 : X.onBlur) == null || ce.call(X, ae);
  }, G = (X, ae) => {
    const ce = Number(X.currentTarget.getAttribute("data-index")), ge = N[ce], Se = _.indexOf(ge);
    let ye = ae;
    if (j && v == null) {
      const Ee = _[_.length - 1];
      ye > Ee ? ye = Ee : ye < _[0] ? ye = _[0] : ye = ye < ge ? _[Se - 1] : _[Se + 1];
    }
    if (ye = ls(ye, c, l), D) {
      r && (ye = ls(ye, N[ce - 1] || -1 / 0, N[ce + 1] || 1 / 0));
      const Ee = ye;
      ye = Dv({
        values: N,
        newValue: ye,
        index: ce
      });
      let Le = ce;
      r || (Le = ye.indexOf(Ee)), ec({
        sliderRef: k,
        activeIndex: Le
      });
    }
    M(ye), $(ce), F && !tc(ye, A) && F(X, ye, ce), p && p(X, ye);
  }, H = (X) => (ae) => {
    var ce;
    if (v !== null) {
      const ge = Number(ae.currentTarget.getAttribute("data-index")), Se = N[ge];
      let ye = null;
      (ae.key === "ArrowLeft" || ae.key === "ArrowDown") && ae.shiftKey || ae.key === "PageDown" ? ye = Math.max(Se - h, c) : ((ae.key === "ArrowRight" || ae.key === "ArrowUp") && ae.shiftKey || ae.key === "PageUp") && (ye = Math.min(Se + h, l)), ye !== null && (G(ae, ye), ae.preventDefault());
    }
    (ce = X == null ? void 0 : X.onKeyDown) == null || ce.call(X, ae);
  };
  ao(() => {
    var X;
    o && k.current.contains(document.activeElement) && ((X = document.activeElement) == null || X.blur());
  }, [o]), o && T !== -1 && w(-1), o && z !== -1 && $(-1);
  const Y = (X) => (ae) => {
    var ce;
    (ce = X.onChange) == null || ce.call(X, ae), G(ae, ae.target.valueAsNumber);
  }, J = S.useRef(void 0);
  let U = m;
  s && m === "horizontal" && (U += "-reverse");
  const ne = ({
    finger: X,
    move: ae = false
  }) => {
    const {
      current: ce
    } = k, {
      width: ge,
      height: Se,
      bottom: ye,
      left: Ee
    } = ce.getBoundingClientRect();
    let Le;
    U.startsWith("vertical") ? Le = (ye - X.y) / Se : Le = (X.x - Ee) / ge, U.includes("-reverse") && (Le = 1 - Le);
    let Ae;
    if (Ae = d$(Le, c, l), v)
      Ae = f$(Ae, v, c);
    else {
      const Ze = jv(_, Ae);
      Ae = _[Ze];
    }
    Ae = ls(Ae, c, l);
    let tt = 0;
    if (D) {
      ae ? tt = J.current : tt = jv(N, Ae), r && (Ae = ls(Ae, N[tt - 1] || -1 / 0, N[tt + 1] || 1 / 0));
      const Ze = Ae;
      Ae = Dv({
        values: N,
        newValue: Ae,
        index: tt
      }), r && ae || (tt = Ae.indexOf(Ze), J.current = tt);
    }
    return {
      newValue: Ae,
      activeIndex: tt
    };
  }, se = xn((X) => {
    const ae = Ql(X, x);
    if (!ae)
      return;
    if (P.current += 1, X.type === "mousemove" && X.buttons === 0) {
      oe(X);
      return;
    }
    const {
      newValue: ce,
      activeIndex: ge
    } = ne({
      finger: ae,
      move: true
    });
    ec({
      sliderRef: k,
      activeIndex: ge,
      setActive: w
    }), M(ce), !O && P.current > u$ && I(true), F && !tc(ce, A) && F(X, ce, ge);
  }), oe = xn((X) => {
    const ae = Ql(X, x);
    if (I(false), !ae)
      return;
    const {
      newValue: ce
    } = ne({
      finger: ae,
      move: true
    });
    w(-1), X.type === "touchend" && E(-1), p && p(X, ce), x.current = void 0, Z();
  }), W = xn((X) => {
    if (o)
      return;
    Mv() || X.preventDefault();
    const ae = X.changedTouches[0];
    ae != null && (x.current = ae.identifier);
    const ce = Ql(X, x);
    if (ce !== false) {
      const {
        newValue: Se,
        activeIndex: ye
      } = ne({
        finger: ce
      });
      ec({
        sliderRef: k,
        activeIndex: ye,
        setActive: w
      }), M(Se), F && !tc(Se, A) && F(X, Se, ye);
    }
    P.current = 0;
    const ge = mn(k.current);
    ge.addEventListener("touchmove", se, {
      passive: true
    }), ge.addEventListener("touchend", oe, {
      passive: true
    });
  }), Z = S.useCallback(() => {
    const X = mn(k.current);
    X.removeEventListener("mousemove", se), X.removeEventListener("mouseup", oe), X.removeEventListener("touchmove", se), X.removeEventListener("touchend", oe);
  }, [oe, se]);
  S.useEffect(() => {
    const {
      current: X
    } = k;
    return X.addEventListener("touchstart", W, {
      passive: Mv()
    }), () => {
      X.removeEventListener("touchstart", W), Z();
    };
  }, [Z, W]), S.useEffect(() => {
    o && Z();
  }, [o, Z]);
  const L = (X) => (ae) => {
    var Se;
    if ((Se = X.onMouseDown) == null || Se.call(X, ae), o || ae.defaultPrevented || ae.button !== 0)
      return;
    ae.preventDefault();
    const ce = Ql(ae, x);
    if (ce !== false) {
      const {
        newValue: ye,
        activeIndex: Ee
      } = ne({
        finger: ce
      });
      ec({
        sliderRef: k,
        activeIndex: Ee,
        setActive: w
      }), M(ye), F && !tc(ye, A) && F(ae, ye, Ee);
    }
    P.current = 0;
    const ge = mn(k.current);
    ge.addEventListener("mousemove", se, {
      passive: true
    }), ge.addEventListener("mouseup", oe);
  }, ie = ou(D ? N[0] : c, c, l), te = ou(N[N.length - 1], c, l) - ie, le = (X = {}) => {
    const ae = Aa(X), ce = {
      onMouseDown: L(ae || {})
    }, ge = {
      ...ae,
      ...ce
    };
    return {
      ...X,
      ref: B,
      ...ge
    };
  }, ue = (X) => (ae) => {
    var ge;
    (ge = X.onMouseOver) == null || ge.call(X, ae);
    const ce = Number(ae.currentTarget.getAttribute("data-index"));
    E(ce);
  }, ve = (X) => (ae) => {
    var ce;
    (ce = X.onMouseLeave) == null || ce.call(X, ae), E(-1);
  };
  return {
    active: T,
    axis: U,
    axisProps: m$,
    dragging: O,
    focusedThumbIndex: z,
    getHiddenInputProps: (X = {}) => {
      const ae = Aa(X), ce = {
        onChange: Y(ae || {}),
        onFocus: Q(ae || {}),
        onBlur: ee(ae || {}),
        onKeyDown: H(ae || {})
      }, ge = {
        ...ae,
        ...ce
      };
      return {
        tabIndex: y,
        "aria-labelledby": t,
        "aria-orientation": m,
        "aria-valuemax": b(l),
        "aria-valuemin": b(c),
        name: u,
        type: "range",
        min: e10.min,
        max: e10.max,
        step: e10.step === null && e10.marks ? "any" : e10.step ?? void 0,
        disabled: o,
        ...X,
        ...ge,
        style: {
          ...rA,
          direction: s ? "rtl" : "ltr",
          // So that VoiceOver's focus indicator matches the thumb's dimensions
          width: "100%",
          height: "100%"
        }
      };
    },
    getRootProps: le,
    getThumbProps: (X = {}) => {
      const ae = Aa(X), ce = {
        onMouseOver: ue(ae || {}),
        onMouseLeave: ve(ae || {})
      };
      return {
        ...X,
        ...ae,
        ...ce
      };
    },
    marks: j,
    open: R,
    range: D,
    rootRef: B,
    trackLeap: te,
    trackOffset: ie,
    values: N,
    getThumbStyle: (X) => ({
      // So the non active thumb doesn't show its label on hover.
      pointerEvents: T !== -1 && T !== X ? "none" : void 0
    })
  };
}
var b$ = (e10) => !e10 || !Cr(e10);
function v$(e10) {
  return He("MuiSlider", e10);
}
var wo = Be("MuiSlider", ["root", "active", "colorPrimary", "colorSecondary", "colorError", "colorInfo", "colorSuccess", "colorWarning", "disabled", "dragging", "focusVisible", "mark", "markActive", "marked", "markLabel", "markLabelActive", "rail", "sizeSmall", "thumb", "thumbColorPrimary", "thumbColorSecondary", "thumbColorError", "thumbColorSuccess", "thumbColorInfo", "thumbColorWarning", "track", "trackInverted", "trackFalse", "thumbSizeSmall", "valueLabel", "valueLabelOpen", "valueLabelCircle", "valueLabelLabel", "vertical"]);
var y$ = (e10) => {
  const {
    open: t
  } = e10;
  return {
    offset: be(t && wo.valueLabelOpen),
    circle: wo.valueLabelCircle,
    label: wo.valueLabelLabel
  };
};
function tS(e10) {
  const {
    children: t,
    className: n,
    value: o
  } = e10, r = y$(e10);
  return t ? S.cloneElement(t, {
    className: be(t.props.className)
  }, f.jsxs(S.Fragment, {
    children: [t.props.children, f.jsx("span", {
      className: be(r.offset, n),
      "aria-hidden": true,
      children: f.jsx("span", {
        className: r.circle,
        children: f.jsx("span", {
          className: r.label,
          children: o
        })
      })
    })]
  })) : null;
}
tS.propTypes = {
  children: i.element.isRequired,
  className: i.string,
  value: i.node
};
function kv(e10) {
  return e10;
}
var x$ = K("span", {
  name: "MuiSlider",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.root, t[`color${de(n.color)}`], n.size !== "medium" && t[`size${de(n.size)}`], n.marked && t.marked, n.orientation === "vertical" && t.vertical, n.track === "inverted" && t.trackInverted, n.track === false && t.trackFalse];
  }
})(Ve(({
  theme: e10
}) => ({
  borderRadius: 12,
  boxSizing: "content-box",
  display: "inline-block",
  position: "relative",
  cursor: "pointer",
  touchAction: "none",
  WebkitTapHighlightColor: "transparent",
  "@media print": {
    colorAdjust: "exact"
  },
  [`&.${wo.disabled}`]: {
    pointerEvents: "none",
    cursor: "default",
    color: (e10.vars || e10).palette.grey[400]
  },
  [`&.${wo.dragging}`]: {
    [`& .${wo.thumb}, & .${wo.track}`]: {
      transition: "none"
    }
  },
  variants: [...Object.entries(e10.palette).filter(Rt()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      color: (e10.vars || e10).palette[t].main
    }
  })), {
    props: {
      orientation: "horizontal"
    },
    style: {
      height: 4,
      width: "100%",
      padding: "13px 0",
      // The primary input mechanism of the device includes a pointing device of limited accuracy.
      "@media (pointer: coarse)": {
        // Reach 42px touch target, about ~8mm on screen.
        padding: "20px 0"
      }
    }
  }, {
    props: {
      orientation: "horizontal",
      size: "small"
    },
    style: {
      height: 2
    }
  }, {
    props: {
      orientation: "horizontal",
      marked: true
    },
    style: {
      marginBottom: 20
    }
  }, {
    props: {
      orientation: "vertical"
    },
    style: {
      height: "100%",
      width: 4,
      padding: "0 13px",
      // The primary input mechanism of the device includes a pointing device of limited accuracy.
      "@media (pointer: coarse)": {
        // Reach 42px touch target, about ~8mm on screen.
        padding: "0 20px"
      }
    }
  }, {
    props: {
      orientation: "vertical",
      size: "small"
    },
    style: {
      width: 2
    }
  }, {
    props: {
      orientation: "vertical",
      marked: true
    },
    style: {
      marginRight: 44
    }
  }]
})));
var C$ = K("span", {
  name: "MuiSlider",
  slot: "Rail",
  overridesResolver: (e10, t) => t.rail
})({
  display: "block",
  position: "absolute",
  borderRadius: "inherit",
  backgroundColor: "currentColor",
  opacity: 0.38,
  variants: [{
    props: {
      orientation: "horizontal"
    },
    style: {
      width: "100%",
      height: "inherit",
      top: "50%",
      transform: "translateY(-50%)"
    }
  }, {
    props: {
      orientation: "vertical"
    },
    style: {
      height: "100%",
      width: "inherit",
      left: "50%",
      transform: "translateX(-50%)"
    }
  }, {
    props: {
      track: "inverted"
    },
    style: {
      opacity: 1
    }
  }]
});
var S$ = K("span", {
  name: "MuiSlider",
  slot: "Track",
  overridesResolver: (e10, t) => t.track
})(Ve(({
  theme: e10
}) => ({
  display: "block",
  position: "absolute",
  borderRadius: "inherit",
  border: "1px solid currentColor",
  backgroundColor: "currentColor",
  transition: e10.transitions.create(["left", "width", "bottom", "height"], {
    duration: e10.transitions.duration.shortest
  }),
  variants: [{
    props: {
      size: "small"
    },
    style: {
      border: "none"
    }
  }, {
    props: {
      orientation: "horizontal"
    },
    style: {
      height: "inherit",
      top: "50%",
      transform: "translateY(-50%)"
    }
  }, {
    props: {
      orientation: "vertical"
    },
    style: {
      width: "inherit",
      left: "50%",
      transform: "translateX(-50%)"
    }
  }, {
    props: {
      track: false
    },
    style: {
      display: "none"
    }
  }, ...Object.entries(e10.palette).filter(Rt()).map(([t]) => ({
    props: {
      color: t,
      track: "inverted"
    },
    style: {
      ...e10.vars ? {
        backgroundColor: e10.vars.palette.Slider[`${t}Track`],
        borderColor: e10.vars.palette.Slider[`${t}Track`]
      } : {
        backgroundColor: Hn(e10.palette[t].main, 0.62),
        borderColor: Hn(e10.palette[t].main, 0.62),
        ...e10.applyStyles("dark", {
          backgroundColor: lo(e10.palette[t].main, 0.5)
        }),
        ...e10.applyStyles("dark", {
          borderColor: lo(e10.palette[t].main, 0.5)
        })
      }
    }
  }))]
})));
var w$ = K("span", {
  name: "MuiSlider",
  slot: "Thumb",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.thumb, t[`thumbColor${de(n.color)}`], n.size !== "medium" && t[`thumbSize${de(n.size)}`]];
  }
})(Ve(({
  theme: e10
}) => ({
  position: "absolute",
  width: 20,
  height: 20,
  boxSizing: "border-box",
  borderRadius: "50%",
  outline: 0,
  backgroundColor: "currentColor",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  transition: e10.transitions.create(["box-shadow", "left", "bottom"], {
    duration: e10.transitions.duration.shortest
  }),
  "&::before": {
    position: "absolute",
    content: '""',
    borderRadius: "inherit",
    width: "100%",
    height: "100%",
    boxShadow: (e10.vars || e10).shadows[2]
  },
  "&::after": {
    position: "absolute",
    content: '""',
    borderRadius: "50%",
    // 42px is the hit target
    width: 42,
    height: 42,
    top: "50%",
    left: "50%",
    transform: "translate(-50%, -50%)"
  },
  [`&.${wo.disabled}`]: {
    "&:hover": {
      boxShadow: "none"
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      width: 12,
      height: 12,
      "&::before": {
        boxShadow: "none"
      }
    }
  }, {
    props: {
      orientation: "horizontal"
    },
    style: {
      top: "50%",
      transform: "translate(-50%, -50%)"
    }
  }, {
    props: {
      orientation: "vertical"
    },
    style: {
      left: "50%",
      transform: "translate(-50%, 50%)"
    }
  }, ...Object.entries(e10.palette).filter(Rt()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&:hover, &.${wo.focusVisible}`]: {
        ...e10.vars ? {
          boxShadow: `0px 0px 0px 8px rgba(${e10.vars.palette[t].mainChannel} / 0.16)`
        } : {
          boxShadow: `0px 0px 0px 8px ${We(e10.palette[t].main, 0.16)}`
        },
        "@media (hover: none)": {
          boxShadow: "none"
        }
      },
      [`&.${wo.active}`]: {
        ...e10.vars ? {
          boxShadow: `0px 0px 0px 14px rgba(${e10.vars.palette[t].mainChannel} / 0.16)`
        } : {
          boxShadow: `0px 0px 0px 14px ${We(e10.palette[t].main, 0.16)}`
        }
      }
    }
  }))]
})));
var T$ = K(tS, {
  name: "MuiSlider",
  slot: "ValueLabel",
  overridesResolver: (e10, t) => t.valueLabel
})(Ve(({
  theme: e10
}) => ({
  zIndex: 1,
  whiteSpace: "nowrap",
  ...e10.typography.body2,
  fontWeight: 500,
  transition: e10.transitions.create(["transform"], {
    duration: e10.transitions.duration.shortest
  }),
  position: "absolute",
  backgroundColor: (e10.vars || e10).palette.grey[600],
  borderRadius: 2,
  color: (e10.vars || e10).palette.common.white,
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  padding: "0.25rem 0.75rem",
  variants: [{
    props: {
      orientation: "horizontal"
    },
    style: {
      transform: "translateY(-100%) scale(0)",
      top: "-10px",
      transformOrigin: "bottom center",
      "&::before": {
        position: "absolute",
        content: '""',
        width: 8,
        height: 8,
        transform: "translate(-50%, 50%) rotate(45deg)",
        backgroundColor: "inherit",
        bottom: 0,
        left: "50%"
      },
      [`&.${wo.valueLabelOpen}`]: {
        transform: "translateY(-100%) scale(1)"
      }
    }
  }, {
    props: {
      orientation: "vertical"
    },
    style: {
      transform: "translateY(-50%) scale(0)",
      right: "30px",
      top: "50%",
      transformOrigin: "right center",
      "&::before": {
        position: "absolute",
        content: '""',
        width: 8,
        height: 8,
        transform: "translate(-50%, -50%) rotate(45deg)",
        backgroundColor: "inherit",
        right: -8,
        top: "50%"
      },
      [`&.${wo.valueLabelOpen}`]: {
        transform: "translateY(-50%) scale(1)"
      }
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      fontSize: e10.typography.pxToRem(12),
      padding: "0.25rem 0.5rem"
    }
  }, {
    props: {
      orientation: "vertical",
      size: "small"
    },
    style: {
      right: "20px"
    }
  }]
})));
var I$ = K("span", {
  name: "MuiSlider",
  slot: "Mark",
  shouldForwardProp: (e10) => Yu(e10) && e10 !== "markActive",
  overridesResolver: (e10, t) => {
    const {
      markActive: n
    } = e10;
    return [t.mark, n && t.markActive];
  }
})(Ve(({
  theme: e10
}) => ({
  position: "absolute",
  width: 2,
  height: 2,
  borderRadius: 1,
  backgroundColor: "currentColor",
  variants: [{
    props: {
      orientation: "horizontal"
    },
    style: {
      top: "50%",
      transform: "translate(-1px, -50%)"
    }
  }, {
    props: {
      orientation: "vertical"
    },
    style: {
      left: "50%",
      transform: "translate(-50%, 1px)"
    }
  }, {
    props: {
      markActive: true
    },
    style: {
      backgroundColor: (e10.vars || e10).palette.background.paper,
      opacity: 0.8
    }
  }]
})));
var R$ = K("span", {
  name: "MuiSlider",
  slot: "MarkLabel",
  shouldForwardProp: (e10) => Yu(e10) && e10 !== "markLabelActive",
  overridesResolver: (e10, t) => t.markLabel
})(Ve(({
  theme: e10
}) => ({
  ...e10.typography.body2,
  color: (e10.vars || e10).palette.text.secondary,
  position: "absolute",
  whiteSpace: "nowrap",
  variants: [{
    props: {
      orientation: "horizontal"
    },
    style: {
      top: 30,
      transform: "translateX(-50%)",
      "@media (pointer: coarse)": {
        top: 40
      }
    }
  }, {
    props: {
      orientation: "vertical"
    },
    style: {
      left: 36,
      transform: "translateY(50%)",
      "@media (pointer: coarse)": {
        left: 44
      }
    }
  }, {
    props: {
      markLabelActive: true
    },
    style: {
      color: (e10.vars || e10).palette.text.primary
    }
  }]
})));
var E$ = (e10) => {
  const {
    disabled: t,
    dragging: n,
    marked: o,
    orientation: r,
    track: s,
    classes: a,
    color: l,
    size: c
  } = e10, u = {
    root: ["root", t && "disabled", n && "dragging", o && "marked", r === "vertical" && "vertical", s === "inverted" && "trackInverted", s === false && "trackFalse", l && `color${de(l)}`, c && `size${de(c)}`],
    rail: ["rail"],
    track: ["track"],
    mark: ["mark"],
    markActive: ["markActive"],
    markLabel: ["markLabel"],
    markLabelActive: ["markLabelActive"],
    valueLabel: ["valueLabel"],
    thumb: ["thumb", t && "disabled", c && `thumbSize${de(c)}`, l && `thumbColor${de(l)}`],
    active: ["active"],
    disabled: ["disabled"],
    focusVisible: ["focusVisible"]
  };
  return Ue(u, v$, a);
};
var O$ = ({
  children: e10
}) => e10;
var nS = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiSlider"
  }), r = oi(), {
    "aria-label": s,
    "aria-valuetext": a,
    "aria-labelledby": l,
    // eslint-disable-next-line react/prop-types
    component: c = "span",
    components: u = {},
    componentsProps: d = {},
    color: p = "primary",
    classes: m,
    className: g,
    disableSwap: b = false,
    disabled: v = false,
    getAriaLabel: h,
    getAriaValueText: y,
    marks: C = false,
    max: x = 100,
    min: T = 0,
    name: w,
    onChange: R,
    onChangeCommitted: E,
    orientation: O = "horizontal",
    shiftStep: I = 10,
    size: P = "medium",
    step: A = 1,
    scale: M = kv,
    slotProps: F,
    slots: D,
    tabIndex: N,
    track: j = "normal",
    value: _,
    valueLabelDisplay: z = "off",
    valueLabelFormat: $ = kv,
    ...k
  } = o, B = {
    ...o,
    isRtl: r,
    max: x,
    min: T,
    classes: m,
    disabled: v,
    disableSwap: b,
    orientation: O,
    marks: C,
    color: p,
    size: P,
    step: A,
    shiftStep: I,
    scale: M,
    track: j,
    valueLabelDisplay: z,
    valueLabelFormat: $
  }, {
    axisProps: Q,
    getRootProps: ee,
    getHiddenInputProps: G,
    getThumbProps: H,
    open: Y,
    active: J,
    axis: U,
    focusedThumbIndex: ne,
    range: se,
    dragging: oe,
    marks: W,
    values: Z,
    trackOffset: L,
    trackLeap: ie,
    getThumbStyle: te
  } = h$({
    ...B,
    rootRef: n
  });
  B.marked = W.length > 0 && W.some((it) => it.label), B.dragging = oe, B.focusedThumbIndex = ne;
  const le = E$(B), ue = (D == null ? void 0 : D.root) ?? u.Root ?? x$, ve = (D == null ? void 0 : D.rail) ?? u.Rail ?? C$, Te = (D == null ? void 0 : D.track) ?? u.Track ?? S$, Re = (D == null ? void 0 : D.thumb) ?? u.Thumb ?? w$, re = (D == null ? void 0 : D.valueLabel) ?? u.ValueLabel ?? T$, X = (D == null ? void 0 : D.mark) ?? u.Mark ?? I$, ae = (D == null ? void 0 : D.markLabel) ?? u.MarkLabel ?? R$, ce = (D == null ? void 0 : D.input) ?? u.Input ?? "input", ge = (F == null ? void 0 : F.root) ?? d.root, Se = (F == null ? void 0 : F.rail) ?? d.rail, ye = (F == null ? void 0 : F.track) ?? d.track, Ee = (F == null ? void 0 : F.thumb) ?? d.thumb, Le = (F == null ? void 0 : F.valueLabel) ?? d.valueLabel, Ae = (F == null ? void 0 : F.mark) ?? d.mark, tt = (F == null ? void 0 : F.markLabel) ?? d.markLabel, Ze = (F == null ? void 0 : F.input) ?? d.input, ut = In({
    elementType: ue,
    getSlotProps: ee,
    externalSlotProps: ge,
    externalForwardedProps: k,
    additionalProps: {
      ...b$(ue) && {
        as: c
      }
    },
    ownerState: {
      ...B,
      ...ge == null ? void 0 : ge.ownerState
    },
    className: [le.root, g]
  }), me = In({
    elementType: ve,
    externalSlotProps: Se,
    ownerState: B,
    className: le.rail
  }), Oe = In({
    elementType: Te,
    externalSlotProps: ye,
    additionalProps: {
      style: {
        ...Q[U].offset(L),
        ...Q[U].leap(ie)
      }
    },
    ownerState: {
      ...B,
      ...ye == null ? void 0 : ye.ownerState
    },
    className: le.track
  }), he = In({
    elementType: Re,
    getSlotProps: H,
    externalSlotProps: Ee,
    ownerState: {
      ...B,
      ...Ee == null ? void 0 : Ee.ownerState
    },
    className: le.thumb
  }), Me = In({
    elementType: re,
    externalSlotProps: Le,
    ownerState: {
      ...B,
      ...Le == null ? void 0 : Le.ownerState
    },
    className: le.valueLabel
  }), ke = In({
    elementType: X,
    externalSlotProps: Ae,
    ownerState: B,
    className: le.mark
  }), st = In({
    elementType: ae,
    externalSlotProps: tt,
    ownerState: B,
    className: le.markLabel
  }), pt = In({
    elementType: ce,
    getSlotProps: G,
    externalSlotProps: Ze,
    ownerState: B
  });
  return f.jsxs(ue, {
    ...ut,
    children: [f.jsx(ve, {
      ...me
    }), f.jsx(Te, {
      ...Oe
    }), W.filter((it) => it.value >= T && it.value <= x).map((it, xt) => {
      const Kt = ou(it.value, T, x), wn = Q[U].offset(Kt);
      let Qt;
      return j === false ? Qt = Z.includes(it.value) : Qt = j === "normal" && (se ? it.value >= Z[0] && it.value <= Z[Z.length - 1] : it.value <= Z[0]) || j === "inverted" && (se ? it.value <= Z[0] || it.value >= Z[Z.length - 1] : it.value >= Z[0]), f.jsxs(S.Fragment, {
        children: [f.jsx(X, {
          "data-index": xt,
          ...ke,
          ...!Cr(X) && {
            markActive: Qt
          },
          style: {
            ...wn,
            ...ke.style
          },
          className: be(ke.className, Qt && le.markActive)
        }), it.label != null ? f.jsx(ae, {
          "aria-hidden": true,
          "data-index": xt,
          ...st,
          ...!Cr(ae) && {
            markLabelActive: Qt
          },
          style: {
            ...wn,
            ...st.style
          },
          className: be(le.markLabel, st.className, Qt && le.markLabelActive),
          children: it.label
        }) : null]
      }, xt);
    }), Z.map((it, xt) => {
      const Kt = ou(it, T, x), wn = Q[U].offset(Kt), Qt = z === "off" ? O$ : re;
      return (
        /* TODO v6: Change component structure. It will help in avoiding the complicated React.cloneElement API added in SliderValueLabel component. Should be: Thumb -> Input, ValueLabel. Follow Joy UI's Slider structure. */
        f.jsx(Qt, {
          ...!Cr(Qt) && {
            valueLabelFormat: $,
            valueLabelDisplay: z,
            value: typeof $ == "function" ? $(M(it), xt) : $,
            index: xt,
            open: Y === xt || J === xt || z === "on",
            disabled: v
          },
          ...Me,
          children: f.jsx(Re, {
            "data-index": xt,
            ...he,
            className: be(le.thumb, he.className, J === xt && le.active, ne === xt && le.focusVisible),
            style: {
              ...wn,
              ...te(xt),
              ...he.style
            },
            children: f.jsx(ce, {
              "data-index": xt,
              "aria-label": h ? h(xt) : s,
              "aria-valuenow": M(it),
              "aria-labelledby": l,
              "aria-valuetext": y ? y(M(it), xt) : a,
              value: Z[xt],
              ...pt
            })
          })
        }, xt)
      );
    })]
  });
});
nS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The label of the slider.
   */
  "aria-label": co(i.string, (e10) => Array.isArray(e10.value || e10.defaultValue) && e10["aria-label"] != null ? new Error("MUI: You need to use the `getAriaLabel` prop instead of `aria-label` when using a range slider.") : null),
  /**
   * The id of the element containing a label for the slider.
   */
  "aria-labelledby": i.string,
  /**
   * A string value that provides a user-friendly name for the current value of the slider.
   */
  "aria-valuetext": co(i.string, (e10) => Array.isArray(e10.value || e10.defaultValue) && e10["aria-valuetext"] != null ? new Error("MUI: You need to use the `getAriaValueText` prop instead of `aria-valuetext` when using a range slider.") : null),
  /**
   * @ignore
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: i.shape({
    Input: i.elementType,
    Mark: i.elementType,
    MarkLabel: i.elementType,
    Rail: i.elementType,
    Root: i.elementType,
    Thumb: i.elementType,
    Track: i.elementType,
    ValueLabel: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: i.shape({
    input: i.oneOfType([i.func, i.object]),
    mark: i.oneOfType([i.func, i.object]),
    markLabel: i.oneOfType([i.func, i.object]),
    rail: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object]),
    thumb: i.oneOfType([i.func, i.object]),
    track: i.oneOfType([i.func, i.object]),
    valueLabel: i.oneOfType([i.func, i.shape({
      children: i.element,
      className: i.string,
      open: i.bool,
      style: i.object,
      value: i.number,
      valueLabelDisplay: i.oneOf(["auto", "off", "on"])
    })])
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.oneOfType([i.arrayOf(i.number), i.number]),
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, the active thumb doesn't swap when moving pointer over a thumb while dragging another thumb.
   * @default false
   */
  disableSwap: i.bool,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the thumb labels of the slider.
   * This is important for screen reader users.
   * @param {number} index The thumb label's index to format.
   * @returns {string}
   */
  getAriaLabel: i.func,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current value of the slider.
   * This is important for screen reader users.
   * @param {number} value The thumb label's value to format.
   * @param {number} index The thumb label's index to format.
   * @returns {string}
   */
  getAriaValueText: i.func,
  /**
   * Marks indicate predetermined values to which the user can move the slider.
   * If `true` the marks are spaced according the value of the `step` prop.
   * If an array, it should contain objects with `value` and an optional `label` keys.
   * @default false
   */
  marks: i.oneOfType([i.arrayOf(i.shape({
    label: i.node,
    value: i.number.isRequired
  })), i.bool]),
  /**
   * The maximum allowed value of the slider.
   * Should not be equal to min.
   * @default 100
   */
  max: i.number,
  /**
   * The minimum allowed value of the slider.
   * Should not be equal to max.
   * @default 0
   */
  min: i.number,
  /**
   * Name attribute of the hidden `input` element.
   */
  name: i.string,
  /**
   * Callback function that is fired when the slider's value changed.
   *
   * @param {Event} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * **Warning**: This is a generic event not a change event.
   * @param {number | number[]} value The new value.
   * @param {number} activeThumb Index of the currently moved thumb.
   */
  onChange: i.func,
  /**
   * Callback function that is fired when the `mouseup` is triggered.
   *
   * @param {React.SyntheticEvent | Event} event The event source of the callback. **Warning**: This is a generic event not a change event.
   * @param {number | number[]} value The new value.
   */
  onChangeCommitted: i.func,
  /**
   * The component orientation.
   * @default 'horizontal'
   */
  orientation: i.oneOf(["horizontal", "vertical"]),
  /**
   * A transformation function, to change the scale of the slider.
   * @param {any} x
   * @returns {any}
   * @default function Identity(x) {
   *   return x;
   * }
   */
  scale: i.func,
  /**
   * The granularity with which the slider can step through values when using Page Up/Page Down or Shift + Arrow Up/Arrow Down.
   * @default 10
   */
  shiftStep: i.number,
  /**
   * The size of the slider.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["small", "medium"]), i.string]),
  /**
   * The props used for each slot inside the Slider.
   * @default {}
   */
  slotProps: i.shape({
    input: i.oneOfType([i.func, i.object]),
    mark: i.oneOfType([i.func, i.object]),
    markLabel: i.oneOfType([i.func, i.object]),
    rail: i.oneOfType([i.func, i.object]),
    root: i.oneOfType([i.func, i.object]),
    thumb: i.oneOfType([i.func, i.object]),
    track: i.oneOfType([i.func, i.object]),
    valueLabel: i.oneOfType([i.func, i.shape({
      children: i.element,
      className: i.string,
      open: i.bool,
      style: i.object,
      value: i.number,
      valueLabelDisplay: i.oneOf(["auto", "off", "on"])
    })])
  }),
  /**
   * The components used for each slot inside the Slider.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: i.shape({
    input: i.elementType,
    mark: i.elementType,
    markLabel: i.elementType,
    rail: i.elementType,
    root: i.elementType,
    thumb: i.elementType,
    track: i.elementType,
    valueLabel: i.elementType
  }),
  /**
   * The granularity with which the slider can step through values. (A "discrete" slider.)
   * The `min` prop serves as the origin for the valid values.
   * We recommend (max - min) to be evenly divisible by the step.
   *
   * When step is `null`, the thumb can only be slid onto marks provided with the `marks` prop.
   * @default 1
   */
  step: i.number,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Tab index attribute of the hidden `input` element.
   */
  tabIndex: i.number,
  /**
   * The track presentation:
   *
   * - `normal` the track will render a bar representing the slider value.
   * - `inverted` the track will render a bar representing the remaining slider value.
   * - `false` the track will render without a bar.
   * @default 'normal'
   */
  track: i.oneOf(["inverted", "normal", false]),
  /**
   * The value of the slider.
   * For ranged sliders, provide an array with two values.
   */
  value: i.oneOfType([i.arrayOf(i.number), i.number]),
  /**
   * Controls when the value label is displayed:
   *
   * - `auto` the value label will display when the thumb is hovered or focused.
   * - `on` will display persistently.
   * - `off` will never display.
   * @default 'off'
   */
  valueLabelDisplay: i.oneOf(["auto", "off", "on"]),
  /**
   * The format function the value label's value.
   *
   * When a function is provided, it should have the following signature:
   *
   * - {number} value The value label's value to format
   * - {number} index The value label's index to format
   * @param {any} x
   * @returns {any}
   * @default function Identity(x) {
   *   return x;
   * }
   */
  valueLabelFormat: i.oneOfType([i.func, i.string])
};
function P$(e10) {
  return He("MuiTooltip", e10);
}
var rn = Be("MuiTooltip", ["popper", "popperInteractive", "popperArrow", "popperClose", "tooltip", "tooltipArrow", "touch", "tooltipPlacementLeft", "tooltipPlacementRight", "tooltipPlacementTop", "tooltipPlacementBottom", "arrow"]);
function A$(e10) {
  return Math.round(e10 * 1e5) / 1e5;
}
var j$ = (e10) => {
  const {
    classes: t,
    disableInteractive: n,
    arrow: o,
    touch: r,
    placement: s
  } = e10, a = {
    popper: ["popper", !n && "popperInteractive", o && "popperArrow"],
    tooltip: ["tooltip", o && "tooltipArrow", r && "touch", `tooltipPlacement${de(s.split("-")[0])}`],
    arrow: ["arrow"]
  };
  return Ue(a, P$, t);
};
var D$ = K(Gs, {
  name: "MuiTooltip",
  slot: "Popper",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.popper, !n.disableInteractive && t.popperInteractive, n.arrow && t.popperArrow, !n.open && t.popperClose];
  }
})(Ve(({
  theme: e10
}) => ({
  zIndex: (e10.vars || e10).zIndex.tooltip,
  pointerEvents: "none",
  variants: [{
    props: ({
      ownerState: t
    }) => !t.disableInteractive,
    style: {
      pointerEvents: "auto"
    }
  }, {
    props: ({
      open: t
    }) => !t,
    style: {
      pointerEvents: "none"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow,
    style: {
      [`&[data-popper-placement*="bottom"] .${rn.arrow}`]: {
        top: 0,
        marginTop: "-0.71em",
        "&::before": {
          transformOrigin: "0 100%"
        }
      },
      [`&[data-popper-placement*="top"] .${rn.arrow}`]: {
        bottom: 0,
        marginBottom: "-0.71em",
        "&::before": {
          transformOrigin: "100% 0"
        }
      },
      [`&[data-popper-placement*="right"] .${rn.arrow}`]: {
        height: "1em",
        width: "0.71em",
        "&::before": {
          transformOrigin: "100% 100%"
        }
      },
      [`&[data-popper-placement*="left"] .${rn.arrow}`]: {
        height: "1em",
        width: "0.71em",
        "&::before": {
          transformOrigin: "0 0"
        }
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !t.isRtl,
    style: {
      [`&[data-popper-placement*="right"] .${rn.arrow}`]: {
        left: 0,
        marginLeft: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !!t.isRtl,
    style: {
      [`&[data-popper-placement*="right"] .${rn.arrow}`]: {
        right: 0,
        marginRight: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !t.isRtl,
    style: {
      [`&[data-popper-placement*="left"] .${rn.arrow}`]: {
        right: 0,
        marginRight: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !!t.isRtl,
    style: {
      [`&[data-popper-placement*="left"] .${rn.arrow}`]: {
        left: 0,
        marginLeft: "-0.71em"
      }
    }
  }]
})));
var M$ = K("div", {
  name: "MuiTooltip",
  slot: "Tooltip",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.tooltip, n.touch && t.touch, n.arrow && t.tooltipArrow, t[`tooltipPlacement${de(n.placement.split("-")[0])}`]];
  }
})(Ve(({
  theme: e10
}) => ({
  backgroundColor: e10.vars ? e10.vars.palette.Tooltip.bg : We(e10.palette.grey[700], 0.92),
  borderRadius: (e10.vars || e10).shape.borderRadius,
  color: (e10.vars || e10).palette.common.white,
  fontFamily: e10.typography.fontFamily,
  padding: "4px 8px",
  fontSize: e10.typography.pxToRem(11),
  maxWidth: 300,
  margin: 2,
  wordWrap: "break-word",
  fontWeight: e10.typography.fontWeightMedium,
  [`.${rn.popper}[data-popper-placement*="left"] &`]: {
    transformOrigin: "right center"
  },
  [`.${rn.popper}[data-popper-placement*="right"] &`]: {
    transformOrigin: "left center"
  },
  [`.${rn.popper}[data-popper-placement*="top"] &`]: {
    transformOrigin: "center bottom",
    marginBottom: "14px"
  },
  [`.${rn.popper}[data-popper-placement*="bottom"] &`]: {
    transformOrigin: "center top",
    marginTop: "14px"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.arrow,
    style: {
      position: "relative",
      margin: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      padding: "8px 16px",
      fontSize: e10.typography.pxToRem(14),
      lineHeight: `${A$(16 / 14)}em`,
      fontWeight: e10.typography.fontWeightRegular
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.isRtl,
    style: {
      [`.${rn.popper}[data-popper-placement*="left"] &`]: {
        marginRight: "14px"
      },
      [`.${rn.popper}[data-popper-placement*="right"] &`]: {
        marginLeft: "14px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.isRtl && t.touch,
    style: {
      [`.${rn.popper}[data-popper-placement*="left"] &`]: {
        marginRight: "24px"
      },
      [`.${rn.popper}[data-popper-placement*="right"] &`]: {
        marginLeft: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !!t.isRtl,
    style: {
      [`.${rn.popper}[data-popper-placement*="left"] &`]: {
        marginLeft: "14px"
      },
      [`.${rn.popper}[data-popper-placement*="right"] &`]: {
        marginRight: "14px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !!t.isRtl && t.touch,
    style: {
      [`.${rn.popper}[data-popper-placement*="left"] &`]: {
        marginLeft: "24px"
      },
      [`.${rn.popper}[data-popper-placement*="right"] &`]: {
        marginRight: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      [`.${rn.popper}[data-popper-placement*="top"] &`]: {
        marginBottom: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      [`.${rn.popper}[data-popper-placement*="bottom"] &`]: {
        marginTop: "24px"
      }
    }
  }]
})));
var k$ = K("span", {
  name: "MuiTooltip",
  slot: "Arrow",
  overridesResolver: (e10, t) => t.arrow
})(Ve(({
  theme: e10
}) => ({
  overflow: "hidden",
  position: "absolute",
  width: "1em",
  height: "0.71em",
  boxSizing: "border-box",
  color: e10.vars ? e10.vars.palette.Tooltip.bg : We(e10.palette.grey[700], 0.9),
  "&::before": {
    content: '""',
    margin: "auto",
    display: "block",
    width: "100%",
    height: "100%",
    backgroundColor: "currentColor",
    transform: "rotate(45deg)"
  }
})));
var oc = false;
var Fv = new Gu();
var pa = {
  x: 0,
  y: 0
};
function rc(e10, t) {
  return (n, ...o) => {
    t && t(n, ...o), e10(n, ...o);
  };
}
var Et = S.forwardRef(function(t, n) {
  var Kt, wn, Qt;
  const o = Ye({
    props: t,
    name: "MuiTooltip"
  }), {
    arrow: r = false,
    children: s,
    classes: a,
    components: l = {},
    componentsProps: c = {},
    describeChild: u = false,
    disableFocusListener: d = false,
    disableHoverListener: p = false,
    disableInteractive: m = false,
    disableTouchListener: g = false,
    enterDelay: b = 100,
    enterNextDelay: v = 0,
    enterTouchDelay: h = 700,
    followCursor: y = false,
    id: C,
    leaveDelay: x = 0,
    leaveTouchDelay: T = 1500,
    onClose: w,
    onOpen: R,
    open: E,
    placement: O = "bottom",
    PopperComponent: I,
    PopperProps: P = {},
    slotProps: A = {},
    slots: M = {},
    title: F,
    TransitionComponent: D = Kr,
    TransitionProps: N,
    ...j
  } = o, _ = S.isValidElement(s) ? s : f.jsx("span", {
    children: s
  }), z = Sn(), $ = oi(), [k, B] = S.useState(), [Q, ee] = S.useState(null), G = S.useRef(false), H = m || y, Y = yi(), J = yi(), U = yi(), ne = yi(), [se, oe] = xr({
    controlled: E,
    default: false,
    name: "Tooltip",
    state: "open"
  });
  let W = se;
  if (true) {
    const {
      current: ot
    } = S.useRef(E !== void 0);
    S.useEffect(() => {
      k && k.disabled && !ot && F !== "" && k.tagName.toLowerCase() === "button" && console.error(["MUI: You are providing a disabled `button` child to the Tooltip component.", "A disabled element does not fire events.", "Tooltip needs to listen to the child element's events to display the title.", "", "Add a simple wrapper element, such as a `span`."].join(`
`));
    }, [F, k, ot]);
  }
  const Z = Ws(C), L = S.useRef(), ie = xn(() => {
    L.current !== void 0 && (document.body.style.WebkitUserSelect = L.current, L.current = void 0), ne.clear();
  });
  S.useEffect(() => ie, [ie]);
  const te = (ot) => {
    Fv.clear(), oc = true, oe(true), R && !W && R(ot);
  }, le = xn(
    /**
     * @param {React.SyntheticEvent | Event} event
     */
    (ot) => {
      Fv.start(800 + x, () => {
        oc = false;
      }), oe(false), w && W && w(ot), Y.start(z.transitions.duration.shortest, () => {
        G.current = false;
      });
    }
  ), ue = (ot) => {
    G.current && ot.type !== "touchstart" || (k && k.removeAttribute("title"), J.clear(), U.clear(), b || oc && v ? J.start(oc ? v : b, () => {
      te(ot);
    }) : te(ot));
  }, ve = (ot) => {
    J.clear(), U.start(x, () => {
      le(ot);
    });
  }, [, Te] = S.useState(false), Re = (ot) => {
    Es(ot.target) || (Te(false), ve(ot));
  }, re = (ot) => {
    k || B(ot.currentTarget), Es(ot.target) && (Te(true), ue(ot));
  }, X = (ot) => {
    G.current = true;
    const dn = _.props;
    dn.onTouchStart && dn.onTouchStart(ot);
  }, ae = (ot) => {
    X(ot), U.clear(), Y.clear(), ie(), L.current = document.body.style.WebkitUserSelect, document.body.style.WebkitUserSelect = "none", ne.start(h, () => {
      document.body.style.WebkitUserSelect = L.current, ue(ot);
    });
  }, ce = (ot) => {
    _.props.onTouchEnd && _.props.onTouchEnd(ot), ie(), U.start(T, () => {
      le(ot);
    });
  };
  S.useEffect(() => {
    if (!W)
      return;
    function ot(dn) {
      dn.key === "Escape" && le(dn);
    }
    return document.addEventListener("keydown", ot), () => {
      document.removeEventListener("keydown", ot);
    };
  }, [le, W]);
  const ge = Jt(Hs(_), B, n);
  !F && F !== 0 && (W = false);
  const Se = S.useRef(), ye = (ot) => {
    const dn = _.props;
    dn.onMouseMove && dn.onMouseMove(ot), pa = {
      x: ot.clientX,
      y: ot.clientY
    }, Se.current && Se.current.update();
  }, Ee = {}, Le = typeof F == "string";
  u ? (Ee.title = !W && Le && !p ? F : null, Ee["aria-describedby"] = W ? Z : null) : (Ee["aria-label"] = Le ? F : null, Ee["aria-labelledby"] = W && !Le ? Z : null);
  const Ae = {
    ...Ee,
    ...j,
    ..._.props,
    className: be(j.className, _.props.className),
    onTouchStart: X,
    ref: ge,
    ...y ? {
      onMouseMove: ye
    } : {}
  };
  Ae["data-mui-internal-clone-element"] = true, S.useEffect(() => {
    k && !k.getAttribute("data-mui-internal-clone-element") && console.error(["MUI: The `children` component of the Tooltip is not forwarding its props correctly.", "Please make sure that props are spread on the same element that the ref is applied to."].join(`
`));
  }, [k]);
  const tt = {};
  g || (Ae.onTouchStart = ae, Ae.onTouchEnd = ce), p || (Ae.onMouseOver = rc(ue, Ae.onMouseOver), Ae.onMouseLeave = rc(ve, Ae.onMouseLeave), H || (tt.onMouseOver = ue, tt.onMouseLeave = ve)), d || (Ae.onFocus = rc(re, Ae.onFocus), Ae.onBlur = rc(Re, Ae.onBlur), H || (tt.onFocus = re, tt.onBlur = Re)), _.props.title && console.error(["MUI: You have provided a `title` prop to the child of <Tooltip />.", `Remove this title prop \`${_.props.title}\` or the Tooltip component.`].join(`
`));
  const Ze = S.useMemo(() => {
    var dn;
    let ot = [{
      name: "arrow",
      enabled: !!Q,
      options: {
        element: Q,
        padding: 4
      }
    }];
    return (dn = P.popperOptions) != null && dn.modifiers && (ot = ot.concat(P.popperOptions.modifiers)), {
      ...P.popperOptions,
      modifiers: ot
    };
  }, [Q, P]), ut = {
    ...o,
    isRtl: $,
    arrow: r,
    disableInteractive: H,
    placement: O,
    PopperComponentProp: I,
    touch: G.current
  }, me = j$(ut), Oe = M.popper ?? l.Popper ?? D$, he = M.transition ?? l.Transition ?? D ?? Kr, Me = M.tooltip ?? l.Tooltip ?? M$, ke = M.arrow ?? l.Arrow ?? k$, st = ps(Oe, {
    ...P,
    ...A.popper ?? c.popper,
    className: be(me.popper, P == null ? void 0 : P.className, (Kt = A.popper ?? c.popper) == null ? void 0 : Kt.className)
  }, ut), pt = ps(he, {
    ...N,
    ...A.transition ?? c.transition
  }, ut), it = ps(Me, {
    ...A.tooltip ?? c.tooltip,
    className: be(me.tooltip, (wn = A.tooltip ?? c.tooltip) == null ? void 0 : wn.className)
  }, ut), xt = ps(ke, {
    ...A.arrow ?? c.arrow,
    className: be(me.arrow, (Qt = A.arrow ?? c.arrow) == null ? void 0 : Qt.className)
  }, ut);
  return f.jsxs(S.Fragment, {
    children: [S.cloneElement(_, Ae), f.jsx(Oe, {
      as: I ?? Gs,
      placement: O,
      anchorEl: y ? {
        getBoundingClientRect: () => ({
          top: pa.y,
          left: pa.x,
          right: pa.x,
          bottom: pa.y,
          width: 0,
          height: 0
        })
      } : k,
      popperRef: Se,
      open: k ? W : false,
      id: Z,
      transition: true,
      ...tt,
      ...st,
      popperOptions: Ze,
      children: ({
        TransitionProps: ot
      }) => f.jsx(he, {
        timeout: z.transitions.duration.shorter,
        ...ot,
        ...pt,
        children: f.jsxs(Me, {
          ...it,
          children: [F, r ? f.jsx(ke, {
            ...xt,
            ref: ee
          }) : null]
        })
      })
    })]
  });
});
Et.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, adds an arrow to the tooltip.
   * @default false
   */
  arrow: i.bool,
  /**
   * Tooltip reference element.
   */
  children: Bs.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. [How to migrate](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/).
   *
   * @default {}
   */
  components: i.shape({
    Arrow: i.elementType,
    Popper: i.elementType,
    Tooltip: i.elementType,
    Transition: i.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. [How to migrate](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/).
   *
   * @default {}
   */
  componentsProps: i.shape({
    arrow: i.object,
    popper: i.object,
    tooltip: i.object,
    transition: i.object
  }),
  /**
   * Set to `true` if the `title` acts as an accessible description.
   * By default the `title` acts as an accessible label for the child.
   * @default false
   */
  describeChild: i.bool,
  /**
   * Do not respond to focus-visible events.
   * @default false
   */
  disableFocusListener: i.bool,
  /**
   * Do not respond to hover events.
   * @default false
   */
  disableHoverListener: i.bool,
  /**
   * Makes a tooltip not interactive, i.e. it will close when the user
   * hovers over the tooltip before the `leaveDelay` is expired.
   * @default false
   */
  disableInteractive: i.bool,
  /**
   * Do not respond to long press touch events.
   * @default false
   */
  disableTouchListener: i.bool,
  /**
   * The number of milliseconds to wait before showing the tooltip.
   * This prop won't impact the enter touch delay (`enterTouchDelay`).
   * @default 100
   */
  enterDelay: i.number,
  /**
   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.
   * @default 0
   */
  enterNextDelay: i.number,
  /**
   * The number of milliseconds a user must touch the element before showing the tooltip.
   * @default 700
   */
  enterTouchDelay: i.number,
  /**
   * If `true`, the tooltip follow the cursor over the wrapped element.
   * @default false
   */
  followCursor: i.bool,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide this prop. It falls back to a randomly generated id.
   */
  id: i.string,
  /**
   * The number of milliseconds to wait before hiding the tooltip.
   * This prop won't impact the leave touch delay (`leaveTouchDelay`).
   * @default 0
   */
  leaveDelay: i.number,
  /**
   * The number of milliseconds after the user stops touching an element before hiding the tooltip.
   * @default 1500
   */
  leaveTouchDelay: i.number,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onClose: i.func,
  /**
   * Callback fired when the component requests to be open.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onOpen: i.func,
  /**
   * If `true`, the component is shown.
   */
  open: i.bool,
  /**
   * Tooltip placement.
   * @default 'bottom'
   */
  placement: i.oneOf(["bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * The component used for the popper.
   * @default Popper
   */
  PopperComponent: i.elementType,
  /**
   * Props applied to the [`Popper`](https://mui.com/material-ui/api/popper/) element.
   * @default {}
   */
  PopperProps: i.object,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: i.shape({
    arrow: i.object,
    popper: i.object,
    tooltip: i.object,
    transition: i.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: i.shape({
    arrow: i.elementType,
    popper: i.elementType,
    tooltip: i.elementType,
    transition: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Tooltip title. Zero-length titles string, undefined, null and false are never displayed.
   */
  title: i.node,
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Grow
   */
  TransitionComponent: i.elementType,
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   */
  TransitionProps: i.object
};
var Ln = PA({
  createStyledComponent: K("div", {
    name: "MuiStack",
    slot: "Root",
    overridesResolver: (e10, t) => t.root
  }),
  useThemeProps: (e10) => at({
    props: e10,
    name: "MuiStack"
  })
});
Ln.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * Defines the `flex-direction` style property.
   * It is applied for all screen sizes.
   * @default 'column'
   */
  direction: i.oneOfType([i.oneOf(["column-reverse", "column", "row-reverse", "row"]), i.arrayOf(i.oneOf(["column-reverse", "column", "row-reverse", "row"])), i.object]),
  /**
   * Add an element between each child.
   */
  divider: i.node,
  /**
   * Defines the space between immediate children.
   * @default 0
   */
  spacing: i.oneOfType([i.arrayOf(i.oneOfType([i.number, i.string])), i.number, i.object, i.string]),
  /**
   * The system prop, which allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * If `true`, the CSS flexbox `gap` is used instead of applying `margin` to children.
   *
   * While CSS `gap` removes the [known limitations](https://mui.com/joy-ui/react-stack/#limitations),
   * it is not fully supported in some browsers. We recommend checking https://caniuse.com/?search=flex%20gap before using this flag.
   *
   * To enable this flag globally, follow the [theme's default props](https://mui.com/material-ui/customization/theme-components/#default-props) configuration.
   * @default false
   */
  useFlexGap: i.bool
};
function F$(e10) {
  return He("MuiSwitch", e10);
}
var $n = Be("MuiSwitch", ["root", "edgeStart", "edgeEnd", "switchBase", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium", "checked", "disabled", "input", "thumb", "track"]);
var N$ = (e10) => {
  const {
    classes: t,
    edge: n,
    size: o,
    color: r,
    checked: s,
    disabled: a
  } = e10, l = {
    root: ["root", n && `edge${de(n)}`, `size${de(o)}`],
    switchBase: ["switchBase", `color${de(r)}`, s && "checked", a && "disabled"],
    thumb: ["thumb"],
    track: ["track"],
    input: ["input"]
  }, c = Ue(l, F$, t);
  return {
    ...t,
    // forward the disabled and checked classes to the SwitchBase
    ...c
  };
};
var $$ = K("span", {
  name: "MuiSwitch",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.root, n.edge && t[`edge${de(n.edge)}`], t[`size${de(n.size)}`]];
  }
})({
  display: "inline-flex",
  width: 34 + 12 * 2,
  height: 14 + 12 * 2,
  overflow: "hidden",
  padding: 12,
  boxSizing: "border-box",
  position: "relative",
  flexShrink: 0,
  zIndex: 0,
  // Reset the stacking context.
  verticalAlign: "middle",
  // For correct alignment with the text.
  "@media print": {
    colorAdjust: "exact"
  },
  variants: [{
    props: {
      edge: "start"
    },
    style: {
      marginLeft: -8
    }
  }, {
    props: {
      edge: "end"
    },
    style: {
      marginRight: -8
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      width: 40,
      height: 24,
      padding: 7,
      [`& .${$n.thumb}`]: {
        width: 16,
        height: 16
      },
      [`& .${$n.switchBase}`]: {
        padding: 4,
        [`&.${$n.checked}`]: {
          transform: "translateX(16px)"
        }
      }
    }
  }]
});
var V$ = K(od, {
  name: "MuiSwitch",
  slot: "SwitchBase",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.switchBase, {
      [`& .${$n.input}`]: t.input
    }, n.color !== "default" && t[`color${de(n.color)}`]];
  }
})(Ve(({
  theme: e10
}) => ({
  position: "absolute",
  top: 0,
  left: 0,
  zIndex: 1,
  // Render above the focus ripple.
  color: e10.vars ? e10.vars.palette.Switch.defaultColor : `${e10.palette.mode === "light" ? e10.palette.common.white : e10.palette.grey[300]}`,
  transition: e10.transitions.create(["left", "transform"], {
    duration: e10.transitions.duration.shortest
  }),
  [`&.${$n.checked}`]: {
    transform: "translateX(20px)"
  },
  [`&.${$n.disabled}`]: {
    color: e10.vars ? e10.vars.palette.Switch.defaultDisabledColor : `${e10.palette.mode === "light" ? e10.palette.grey[100] : e10.palette.grey[600]}`
  },
  [`&.${$n.checked} + .${$n.track}`]: {
    opacity: 0.5
  },
  [`&.${$n.disabled} + .${$n.track}`]: {
    opacity: e10.vars ? e10.vars.opacity.switchTrackDisabled : `${e10.palette.mode === "light" ? 0.12 : 0.2}`
  },
  [`& .${$n.input}`]: {
    left: "-100%",
    width: "300%"
  }
})), Ve(({
  theme: e10
}) => ({
  "&:hover": {
    backgroundColor: e10.vars ? `rgba(${e10.vars.palette.action.activeChannel} / ${e10.vars.palette.action.hoverOpacity})` : We(e10.palette.action.active, e10.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  variants: [...Object.entries(e10.palette).filter(Rt(["light"])).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${$n.checked}`]: {
        color: (e10.vars || e10).palette[t].main,
        "&:hover": {
          backgroundColor: e10.vars ? `rgba(${e10.vars.palette[t].mainChannel} / ${e10.vars.palette.action.hoverOpacity})` : We(e10.palette[t].main, e10.palette.action.hoverOpacity),
          "@media (hover: none)": {
            backgroundColor: "transparent"
          }
        },
        [`&.${$n.disabled}`]: {
          color: e10.vars ? e10.vars.palette.Switch[`${t}DisabledColor`] : `${e10.palette.mode === "light" ? Hn(e10.palette[t].main, 0.62) : lo(e10.palette[t].main, 0.55)}`
        }
      },
      [`&.${$n.checked} + .${$n.track}`]: {
        backgroundColor: (e10.vars || e10).palette[t].main
      }
    }
  }))]
})));
var _$ = K("span", {
  name: "MuiSwitch",
  slot: "Track",
  overridesResolver: (e10, t) => t.track
})(Ve(({
  theme: e10
}) => ({
  height: "100%",
  width: "100%",
  borderRadius: 14 / 2,
  zIndex: -1,
  transition: e10.transitions.create(["opacity", "background-color"], {
    duration: e10.transitions.duration.shortest
  }),
  backgroundColor: e10.vars ? e10.vars.palette.common.onBackground : `${e10.palette.mode === "light" ? e10.palette.common.black : e10.palette.common.white}`,
  opacity: e10.vars ? e10.vars.opacity.switchTrack : `${e10.palette.mode === "light" ? 0.38 : 0.3}`
})));
var L$ = K("span", {
  name: "MuiSwitch",
  slot: "Thumb",
  overridesResolver: (e10, t) => t.thumb
})(Ve(({
  theme: e10
}) => ({
  boxShadow: (e10.vars || e10).shadows[1],
  backgroundColor: "currentColor",
  width: 20,
  height: 20,
  borderRadius: "50%"
})));
var oS = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiSwitch"
  }), {
    className: r,
    color: s = "primary",
    edge: a = false,
    size: l = "medium",
    sx: c,
    ...u
  } = o, d = {
    ...o,
    color: s,
    edge: a,
    size: l
  }, p = N$(d), m = f.jsx(L$, {
    className: p.thumb,
    ownerState: d
  });
  return f.jsxs($$, {
    className: be(p.root, r),
    sx: c,
    ownerState: d,
    children: [f.jsx(V$, {
      type: "checkbox",
      icon: m,
      checkedIcon: m,
      ref: n,
      ownerState: d,
      ...u,
      classes: {
        ...p,
        root: p.switchBase
      }
    }), f.jsx(_$, {
      className: p.track,
      ownerState: d
    })]
  });
});
oS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: i.bool,
  /**
   * The icon to display when the component is checked.
   */
  checkedIcon: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: i.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: i.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: i.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: i.oneOf(["end", "start", false]),
  /**
   * The icon to display when the component is unchecked.
   */
  icon: i.node,
  /**
   * The id of the `input` element.
   */
  id: i.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: On,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: i.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: i.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense switch styling.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */
  value: i.any
};
function B$(e10) {
  return He("MuiTab", e10);
}
var go = Be("MuiTab", ["root", "labelIcon", "textColorInherit", "textColorPrimary", "textColorSecondary", "selected", "disabled", "fullWidth", "wrapped", "iconWrapper", "icon"]);
var z$ = (e10) => {
  const {
    classes: t,
    textColor: n,
    fullWidth: o,
    wrapped: r,
    icon: s,
    label: a,
    selected: l,
    disabled: c
  } = e10, u = {
    root: ["root", s && a && "labelIcon", `textColor${de(n)}`, o && "fullWidth", r && "wrapped", l && "selected", c && "disabled"],
    icon: ["iconWrapper", "icon"]
  };
  return Ue(u, B$, t);
};
var W$ = K(Ro, {
  name: "MuiTab",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.root, n.label && n.icon && t.labelIcon, t[`textColor${de(n.textColor)}`], n.fullWidth && t.fullWidth, n.wrapped && t.wrapped, {
      [`& .${go.iconWrapper}`]: t.iconWrapper
    }, {
      [`& .${go.icon}`]: t.icon
    }];
  }
})(Ve(({
  theme: e10
}) => ({
  ...e10.typography.button,
  maxWidth: 360,
  minWidth: 90,
  position: "relative",
  minHeight: 48,
  flexShrink: 0,
  padding: "12px 16px",
  overflow: "hidden",
  whiteSpace: "normal",
  textAlign: "center",
  lineHeight: 1.25,
  variants: [{
    props: ({
      ownerState: t
    }) => t.label && (t.iconPosition === "top" || t.iconPosition === "bottom"),
    style: {
      flexDirection: "column"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.label && t.iconPosition !== "top" && t.iconPosition !== "bottom",
    style: {
      flexDirection: "row"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.icon && t.label,
    style: {
      minHeight: 72,
      paddingTop: 9,
      paddingBottom: 9
    }
  }, {
    props: ({
      ownerState: t,
      iconPosition: n
    }) => t.icon && t.label && n === "top",
    style: {
      [`& > .${go.icon}`]: {
        marginBottom: 6
      }
    }
  }, {
    props: ({
      ownerState: t,
      iconPosition: n
    }) => t.icon && t.label && n === "bottom",
    style: {
      [`& > .${go.icon}`]: {
        marginTop: 6
      }
    }
  }, {
    props: ({
      ownerState: t,
      iconPosition: n
    }) => t.icon && t.label && n === "start",
    style: {
      [`& > .${go.icon}`]: {
        marginRight: e10.spacing(1)
      }
    }
  }, {
    props: ({
      ownerState: t,
      iconPosition: n
    }) => t.icon && t.label && n === "end",
    style: {
      [`& > .${go.icon}`]: {
        marginLeft: e10.spacing(1)
      }
    }
  }, {
    props: {
      textColor: "inherit"
    },
    style: {
      color: "inherit",
      opacity: 0.6,
      // same opacity as theme.palette.text.secondary
      [`&.${go.selected}`]: {
        opacity: 1
      },
      [`&.${go.disabled}`]: {
        opacity: (e10.vars || e10).palette.action.disabledOpacity
      }
    }
  }, {
    props: {
      textColor: "primary"
    },
    style: {
      color: (e10.vars || e10).palette.text.secondary,
      [`&.${go.selected}`]: {
        color: (e10.vars || e10).palette.primary.main
      },
      [`&.${go.disabled}`]: {
        color: (e10.vars || e10).palette.text.disabled
      }
    }
  }, {
    props: {
      textColor: "secondary"
    },
    style: {
      color: (e10.vars || e10).palette.text.secondary,
      [`&.${go.selected}`]: {
        color: (e10.vars || e10).palette.secondary.main
      },
      [`&.${go.disabled}`]: {
        color: (e10.vars || e10).palette.text.disabled
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      flexShrink: 1,
      flexGrow: 1,
      flexBasis: 0,
      maxWidth: "none"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.wrapped,
    style: {
      fontSize: e10.typography.pxToRem(12)
    }
  }]
})));
var $f = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiTab"
  }), {
    className: r,
    disabled: s = false,
    disableFocusRipple: a = false,
    // eslint-disable-next-line react/prop-types
    fullWidth: l,
    icon: c,
    iconPosition: u = "top",
    // eslint-disable-next-line react/prop-types
    indicator: d,
    label: p,
    onChange: m,
    onClick: g,
    onFocus: b,
    // eslint-disable-next-line react/prop-types
    selected: v,
    // eslint-disable-next-line react/prop-types
    selectionFollowsFocus: h,
    // eslint-disable-next-line react/prop-types
    textColor: y = "inherit",
    value: C,
    wrapped: x = false,
    ...T
  } = o, w = {
    ...o,
    disabled: s,
    disableFocusRipple: a,
    selected: v,
    icon: !!c,
    iconPosition: u,
    label: !!p,
    fullWidth: l,
    textColor: y,
    wrapped: x
  }, R = z$(w), E = c && p && S.isValidElement(c) ? S.cloneElement(c, {
    className: be(R.icon, c.props.className)
  }) : c, O = (P) => {
    !v && m && m(P, C), g && g(P);
  }, I = (P) => {
    h && !v && m && m(P, C), b && b(P);
  };
  return f.jsxs(W$, {
    focusRipple: !a,
    className: be(R.root, r),
    ref: n,
    role: "tab",
    "aria-selected": v,
    disabled: s,
    onClick: O,
    onFocus: I,
    ownerState: w,
    tabIndex: v ? 0 : -1,
    ...T,
    children: [u === "top" || u === "start" ? f.jsxs(S.Fragment, {
      children: [E, p]
    }) : f.jsxs(S.Fragment, {
      children: [p, E]
    }), d]
  });
});
$f.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop isn't supported.
   * Use the `component` prop if you need to change the children structure.
   */
  children: qx,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: i.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: i.bool,
  /**
   * The icon to display.
   */
  icon: i.oneOfType([i.element, i.string]),
  /**
   * The position of the icon relative to the label.
   * @default 'top'
   */
  iconPosition: i.oneOf(["bottom", "end", "start", "top"]),
  /**
   * The label element.
   */
  label: i.node,
  /**
   * @ignore
   */
  onChange: i.func,
  /**
   * @ignore
   */
  onClick: i.func,
  /**
   * @ignore
   */
  onFocus: i.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * You can provide your own value. Otherwise, we fallback to the child position index.
   */
  value: i.any,
  /**
   * Tab labels appear in a single row.
   * They can use a second line if needed.
   * @default false
   */
  wrapped: i.bool
};
var vg = S.createContext();
vg.displayName = "TableContext";
function H$(e10) {
  return He("MuiTable", e10);
}
Be("MuiTable", ["root", "stickyHeader"]);
var G$ = (e10) => {
  const {
    classes: t,
    stickyHeader: n
  } = e10;
  return Ue({
    root: ["root", n && "stickyHeader"]
  }, H$, t);
};
var U$ = K("table", {
  name: "MuiTable",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.root, n.stickyHeader && t.stickyHeader];
  }
})(Ve(({
  theme: e10
}) => ({
  display: "table",
  width: "100%",
  borderCollapse: "collapse",
  borderSpacing: 0,
  "& caption": {
    ...e10.typography.body2,
    padding: e10.spacing(2),
    color: (e10.vars || e10).palette.text.secondary,
    textAlign: "left",
    captionSide: "bottom"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.stickyHeader,
    style: {
      borderCollapse: "separate"
    }
  }]
})));
var Nv = "table";
var ld = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiTable"
  }), {
    className: r,
    component: s = Nv,
    padding: a = "normal",
    size: l = "medium",
    stickyHeader: c = false,
    ...u
  } = o, d = {
    ...o,
    component: s,
    padding: a,
    size: l,
    stickyHeader: c
  }, p = G$(d), m = S.useMemo(() => ({
    padding: a,
    size: l,
    stickyHeader: c
  }), [a, l, c]);
  return f.jsx(vg.Provider, {
    value: m,
    children: f.jsx(U$, {
      as: s,
      role: s === Nv ? null : "table",
      ref: n,
      className: be(p.root, r),
      ownerState: d,
      ...u
    })
  });
});
ld.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the table, normally `TableHead` and `TableBody`.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * Allows TableCells to inherit padding of the Table.
   * @default 'normal'
   */
  padding: i.oneOf(["checkbox", "none", "normal"]),
  /**
   * Allows TableCells to inherit size of the Table.
   * @default 'medium'
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * Set the header sticky.
   * @default false
   */
  stickyHeader: i.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
};
var Us = S.createContext();
Us.displayName = "Tablelvl2Context";
function X$(e10) {
  return He("MuiTableBody", e10);
}
Be("MuiTableBody", ["root"]);
var Y$ = (e10) => {
  const {
    classes: t
  } = e10;
  return Ue({
    root: ["root"]
  }, X$, t);
};
var Z$ = K("tbody", {
  name: "MuiTableBody",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})({
  display: "table-row-group"
});
var q$ = {
  variant: "body"
};
var $v = "tbody";
var vs = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiTableBody"
  }), {
    className: r,
    component: s = $v,
    ...a
  } = o, l = {
    ...o,
    component: s
  }, c = Y$(l);
  return f.jsx(Us.Provider, {
    value: q$,
    children: f.jsx(Z$, {
      className: be(c.root, r),
      as: s,
      ref: n,
      role: s === $v ? null : "rowgroup",
      ownerState: l,
      ...a
    })
  });
});
vs.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally `TableRow`.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
};
function J$(e10) {
  return He("MuiTableCell", e10);
}
var K$ = Be("MuiTableCell", ["root", "head", "body", "footer", "sizeSmall", "sizeMedium", "paddingCheckbox", "paddingNone", "alignLeft", "alignCenter", "alignRight", "alignJustify", "stickyHeader"]);
var Q$ = (e10) => {
  const {
    classes: t,
    variant: n,
    align: o,
    padding: r,
    size: s,
    stickyHeader: a
  } = e10, l = {
    root: ["root", n, a && "stickyHeader", o !== "inherit" && `align${de(o)}`, r !== "normal" && `padding${de(r)}`, `size${de(s)}`]
  };
  return Ue(l, J$, t);
};
var eV = K("td", {
  name: "MuiTableCell",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.root, t[n.variant], t[`size${de(n.size)}`], n.padding !== "normal" && t[`padding${de(n.padding)}`], n.align !== "inherit" && t[`align${de(n.align)}`], n.stickyHeader && t.stickyHeader];
  }
})(Ve(({
  theme: e10
}) => ({
  ...e10.typography.body2,
  display: "table-cell",
  verticalAlign: "inherit",
  // Workaround for a rendering bug with spanned columns in Chrome 62.0.
  // Removes the alpha (sets it to 1), and lightens or darkens the theme color.
  borderBottom: e10.vars ? `1px solid ${e10.vars.palette.TableCell.border}` : `1px solid
    ${e10.palette.mode === "light" ? Hn(We(e10.palette.divider, 1), 0.88) : lo(We(e10.palette.divider, 1), 0.68)}`,
  textAlign: "left",
  padding: 16,
  variants: [{
    props: {
      variant: "head"
    },
    style: {
      color: (e10.vars || e10).palette.text.primary,
      lineHeight: e10.typography.pxToRem(24),
      fontWeight: e10.typography.fontWeightMedium
    }
  }, {
    props: {
      variant: "body"
    },
    style: {
      color: (e10.vars || e10).palette.text.primary
    }
  }, {
    props: {
      variant: "footer"
    },
    style: {
      color: (e10.vars || e10).palette.text.secondary,
      lineHeight: e10.typography.pxToRem(21),
      fontSize: e10.typography.pxToRem(12)
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      padding: "6px 16px",
      [`&.${K$.paddingCheckbox}`]: {
        width: 24,
        // prevent the checkbox column from growing
        padding: "0 12px 0 16px",
        "& > *": {
          padding: 0
        }
      }
    }
  }, {
    props: {
      padding: "checkbox"
    },
    style: {
      width: 48,
      // prevent the checkbox column from growing
      padding: "0 0 0 4px"
    }
  }, {
    props: {
      padding: "none"
    },
    style: {
      padding: 0
    }
  }, {
    props: {
      align: "left"
    },
    style: {
      textAlign: "left"
    }
  }, {
    props: {
      align: "center"
    },
    style: {
      textAlign: "center"
    }
  }, {
    props: {
      align: "right"
    },
    style: {
      textAlign: "right",
      flexDirection: "row-reverse"
    }
  }, {
    props: {
      align: "justify"
    },
    style: {
      textAlign: "justify"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.stickyHeader,
    style: {
      position: "sticky",
      top: 0,
      zIndex: 2,
      backgroundColor: (e10.vars || e10).palette.background.default
    }
  }]
})));
var zt = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiTableCell"
  }), {
    align: r = "inherit",
    className: s,
    component: a,
    padding: l,
    scope: c,
    size: u,
    sortDirection: d,
    variant: p,
    ...m
  } = o, g = S.useContext(vg), b = S.useContext(Us), v = b && b.variant === "head";
  let h;
  a ? h = a : h = v ? "th" : "td";
  let y = c;
  h === "td" ? y = void 0 : !y && v && (y = "col");
  const C = p || b && b.variant, x = {
    ...o,
    align: r,
    component: h,
    padding: l || (g && g.padding ? g.padding : "normal"),
    size: u || (g && g.size ? g.size : "medium"),
    sortDirection: d,
    stickyHeader: C === "head" && g && g.stickyHeader,
    variant: C
  }, T = Q$(x);
  let w = null;
  return d && (w = d === "asc" ? "ascending" : "descending"), f.jsx(eV, {
    as: h,
    ref: n,
    className: be(T.root, s),
    "aria-sort": w,
    scope: y,
    ownerState: x,
    ...m
  });
});
zt.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Set the text-align on the table cell content.
   *
   * Monetary or generally number fields **should be right aligned** as that allows
   * you to add them up quickly in your head without having to worry about decimals.
   * @default 'inherit'
   */
  align: i.oneOf(["center", "inherit", "justify", "left", "right"]),
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * Sets the padding applied to the cell.
   * The prop defaults to the value (`'default'`) inherited from the parent Table component.
   */
  padding: i.oneOf(["checkbox", "none", "normal"]),
  /**
   * Set scope attribute.
   */
  scope: i.string,
  /**
   * Specify the size of the cell.
   * The prop defaults to the value (`'medium'`) inherited from the parent Table component.
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * Set aria-sort direction.
   */
  sortDirection: i.oneOf(["asc", "desc", false]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Specify the cell type.
   * The prop defaults to the value inherited from the parent TableHead, TableBody, or TableFooter components.
   */
  variant: i.oneOfType([i.oneOf(["body", "footer", "head"]), i.string])
};
function tV(e10) {
  return He("MuiTableContainer", e10);
}
Be("MuiTableContainer", ["root"]);
var nV = (e10) => {
  const {
    classes: t
  } = e10;
  return Ue({
    root: ["root"]
  }, tV, t);
};
var oV = K("div", {
  name: "MuiTableContainer",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})({
  width: "100%",
  overflowX: "auto"
});
var cd = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiTableContainer"
  }), {
    className: r,
    component: s = "div",
    ...a
  } = o, l = {
    ...o,
    component: s
  }, c = nV(l);
  return f.jsx(oV, {
    ref: n,
    as: s,
    className: be(c.root, r),
    ownerState: l,
    ...a
  });
});
cd.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally `Table`.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
};
function rV(e10) {
  return He("MuiTableFooter", e10);
}
Be("MuiTableFooter", ["root"]);
var iV = (e10) => {
  const {
    classes: t
  } = e10;
  return Ue({
    root: ["root"]
  }, rV, t);
};
var sV = K("tfoot", {
  name: "MuiTableFooter",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})({
  display: "table-footer-group"
});
var aV = {
  variant: "footer"
};
var Vv = "tfoot";
var rS = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiTableFooter"
  }), {
    className: r,
    component: s = Vv,
    ...a
  } = o, l = {
    ...o,
    component: s
  }, c = iV(l);
  return f.jsx(Us.Provider, {
    value: aV,
    children: f.jsx(sV, {
      as: s,
      className: be(c.root, r),
      ref: n,
      role: s === Vv ? null : "rowgroup",
      ownerState: l,
      ...a
    })
  });
});
rS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally `TableRow`.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
};
function lV(e10) {
  return He("MuiTableHead", e10);
}
Be("MuiTableHead", ["root"]);
var cV = (e10) => {
  const {
    classes: t
  } = e10;
  return Ue({
    root: ["root"]
  }, lV, t);
};
var uV = K("thead", {
  name: "MuiTableHead",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})({
  display: "table-header-group"
});
var dV = {
  variant: "head"
};
var _v = "thead";
var ud = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiTableHead"
  }), {
    className: r,
    component: s = _v,
    ...a
  } = o, l = {
    ...o,
    component: s
  }, c = cV(l);
  return f.jsx(Us.Provider, {
    value: dV,
    children: f.jsx(uV, {
      as: s,
      className: be(c.root, r),
      ref: n,
      role: s === _v ? null : "rowgroup",
      ownerState: l,
      ...a
    })
  });
});
ud.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally `TableRow`.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
};
var pV = ze(f.jsx("path", {
  d: "M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
}), "KeyboardArrowLeft");
var fV = ze(f.jsx("path", {
  d: "M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
}), "KeyboardArrowRight");
function mV(e10) {
  return He("MuiTableRow", e10);
}
var Lv = Be("MuiTableRow", ["root", "selected", "hover", "head", "footer"]);
var gV = (e10) => {
  const {
    classes: t,
    selected: n,
    hover: o,
    head: r,
    footer: s
  } = e10;
  return Ue({
    root: ["root", n && "selected", o && "hover", r && "head", s && "footer"]
  }, mV, t);
};
var hV = K("tr", {
  name: "MuiTableRow",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.root, n.head && t.head, n.footer && t.footer];
  }
})(Ve(({
  theme: e10
}) => ({
  color: "inherit",
  display: "table-row",
  verticalAlign: "middle",
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  [`&.${Lv.hover}:hover`]: {
    backgroundColor: (e10.vars || e10).palette.action.hover
  },
  [`&.${Lv.selected}`]: {
    backgroundColor: e10.vars ? `rgba(${e10.vars.palette.primary.mainChannel} / ${e10.vars.palette.action.selectedOpacity})` : We(e10.palette.primary.main, e10.palette.action.selectedOpacity),
    "&:hover": {
      backgroundColor: e10.vars ? `rgba(${e10.vars.palette.primary.mainChannel} / calc(${e10.vars.palette.action.selectedOpacity} + ${e10.vars.palette.action.hoverOpacity}))` : We(e10.palette.primary.main, e10.palette.action.selectedOpacity + e10.palette.action.hoverOpacity)
    }
  }
})));
var Bv = "tr";
var Pr = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiTableRow"
  }), {
    className: r,
    component: s = Bv,
    hover: a = false,
    selected: l = false,
    ...c
  } = o, u = S.useContext(Us), d = {
    ...o,
    component: s,
    hover: a,
    selected: l,
    head: u && u.variant === "head",
    footer: u && u.variant === "footer"
  }, p = gV(d);
  return f.jsx(hV, {
    as: s,
    ref: n,
    className: be(p.root, r),
    role: s === Bv ? null : "row",
    ownerState: d,
    ...c
  });
});
Pr.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Should be valid `<tr>` children such as `TableCell`.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If `true`, the table row will shade on hover.
   * @default false
   */
  hover: i.bool,
  /**
   * If `true`, the table row will have the selected shading.
   * @default false
   */
  selected: i.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
};
var bV = ze(f.jsx("path", {
  d: "M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
}), "ArrowDownward");
function vV(e10) {
  return He("MuiTableSortLabel", e10);
}
var wp = Be("MuiTableSortLabel", ["root", "active", "icon", "iconDirectionDesc", "iconDirectionAsc", "directionDesc", "directionAsc"]);
var yV = (e10) => {
  const {
    classes: t,
    direction: n,
    active: o
  } = e10, r = {
    root: ["root", o && "active", `direction${de(n)}`],
    icon: ["icon", `iconDirection${de(n)}`]
  };
  return Ue(r, vV, t);
};
var xV = K(Ro, {
  name: "MuiTableSortLabel",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.root, n.active && t.active];
  }
})(Ve(({
  theme: e10
}) => ({
  cursor: "pointer",
  display: "inline-flex",
  justifyContent: "flex-start",
  flexDirection: "inherit",
  alignItems: "center",
  "&:focus": {
    color: (e10.vars || e10).palette.text.secondary
  },
  "&:hover": {
    color: (e10.vars || e10).palette.text.secondary,
    [`& .${wp.icon}`]: {
      opacity: 0.5
    }
  },
  [`&.${wp.active}`]: {
    color: (e10.vars || e10).palette.text.primary,
    [`& .${wp.icon}`]: {
      opacity: 1,
      color: (e10.vars || e10).palette.text.secondary
    }
  }
})));
var CV = K("span", {
  name: "MuiTableSortLabel",
  slot: "Icon",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.icon, t[`iconDirection${de(n.direction)}`]];
  }
})(Ve(({
  theme: e10
}) => ({
  fontSize: 18,
  marginRight: 4,
  marginLeft: 4,
  opacity: 0,
  transition: e10.transitions.create(["opacity", "transform"], {
    duration: e10.transitions.duration.shorter
  }),
  userSelect: "none",
  variants: [{
    props: {
      direction: "desc"
    },
    style: {
      transform: "rotate(0deg)"
    }
  }, {
    props: {
      direction: "asc"
    },
    style: {
      transform: "rotate(180deg)"
    }
  }]
})));
var iS = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiTableSortLabel"
  }), {
    active: r = false,
    children: s,
    className: a,
    direction: l = "asc",
    hideSortIcon: c = false,
    IconComponent: u = bV,
    ...d
  } = o, p = {
    ...o,
    active: r,
    direction: l,
    hideSortIcon: c,
    IconComponent: u
  }, m = yV(p);
  return f.jsxs(xV, {
    className: be(m.root, a),
    component: "span",
    disableRipple: true,
    ownerState: p,
    ref: n,
    ...d,
    children: [s, c && !r ? null : f.jsx(CV, {
      as: u,
      className: be(m.icon),
      ownerState: p
    })]
  });
});
iS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the label will have the active styling (should be true for the sorted column).
   * @default false
   */
  active: i.bool,
  /**
   * Label contents, the arrow will be appended automatically.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The current sort direction.
   * @default 'asc'
   */
  direction: i.oneOf(["asc", "desc"]),
  /**
   * Hide sort icon when active is false.
   * @default false
   */
  hideSortIcon: i.bool,
  /**
   * Sort icon to use.
   * @default ArrowDownwardIcon
   */
  IconComponent: i.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
};
function SV(e10) {
  return (1 + Math.sin(Math.PI * e10 - Math.PI / 2)) / 2;
}
function wV(e10, t, n, o = {}, r = () => {
}) {
  const {
    ease: s = SV,
    duration: a = 300
    // standard
  } = o;
  let l = null;
  const c = t[e10];
  let u = false;
  const d = () => {
    u = true;
  }, p = (m) => {
    if (u) {
      r(new Error("Animation cancelled"));
      return;
    }
    l === null && (l = m);
    const g = Math.min(1, (m - l) / a);
    if (t[e10] = s(g) * (n - c) + c, g >= 1) {
      requestAnimationFrame(() => {
        r(null);
      });
      return;
    }
    requestAnimationFrame(p);
  };
  return c === n ? (r(new Error("Element already at target position")), d) : (requestAnimationFrame(p), d);
}
var TV = {
  width: 99,
  height: 99,
  position: "absolute",
  top: -9999,
  overflow: "scroll"
};
function sS(e10) {
  const {
    onChange: t,
    ...n
  } = e10, o = S.useRef(), r = S.useRef(null), s = () => {
    o.current = r.current.offsetHeight - r.current.clientHeight;
  };
  return ao(() => {
    const a = zs(() => {
      const c = o.current;
      s(), c !== o.current && t(o.current);
    }), l = Rr(r.current);
    return l.addEventListener("resize", a), () => {
      a.clear(), l.removeEventListener("resize", a);
    };
  }, [t]), S.useEffect(() => {
    s(), t(o.current);
  }, [t]), f.jsx("div", {
    style: TV,
    ref: r,
    ...n
  });
}
sS.propTypes = {
  onChange: i.func.isRequired
};
function IV(e10) {
  return He("MuiTabScrollButton", e10);
}
var RV = Be("MuiTabScrollButton", ["root", "vertical", "horizontal", "disabled"]);
var EV = (e10) => {
  const {
    classes: t,
    orientation: n,
    disabled: o
  } = e10;
  return Ue({
    root: ["root", n, o && "disabled"]
  }, IV, t);
};
var OV = K(Ro, {
  name: "MuiTabScrollButton",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.root, n.orientation && t[n.orientation]];
  }
})({
  width: 40,
  flexShrink: 0,
  opacity: 0.8,
  [`&.${RV.disabled}`]: {
    opacity: 0
  },
  variants: [{
    props: {
      orientation: "vertical"
    },
    style: {
      width: "100%",
      height: 40,
      "& svg": {
        transform: "var(--TabScrollButton-svgRotate)"
      }
    }
  }]
});
var aS = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiTabScrollButton"
  }), {
    className: r,
    slots: s = {},
    slotProps: a = {},
    direction: l,
    orientation: c,
    disabled: u,
    ...d
  } = o, p = oi(), m = {
    isRtl: p,
    ...o
  }, g = EV(m), b = s.StartScrollButtonIcon ?? pV, v = s.EndScrollButtonIcon ?? fV, h = In({
    elementType: b,
    externalSlotProps: a.startScrollButtonIcon,
    additionalProps: {
      fontSize: "small"
    },
    ownerState: m
  }), y = In({
    elementType: v,
    externalSlotProps: a.endScrollButtonIcon,
    additionalProps: {
      fontSize: "small"
    },
    ownerState: m
  });
  return f.jsx(OV, {
    component: "div",
    className: be(g.root, r),
    ref: n,
    role: null,
    ownerState: m,
    tabIndex: null,
    ...d,
    style: {
      ...d.style,
      ...c === "vertical" && {
        "--TabScrollButton-svgRotate": `rotate(${p ? -90 : 90}deg)`
      }
    },
    children: l === "left" ? f.jsx(b, {
      ...h
    }) : f.jsx(v, {
      ...y
    })
  });
});
aS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The direction the button should indicate.
   */
  direction: i.oneOf(["left", "right"]).isRequired,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * The component orientation (layout flow direction).
   */
  orientation: i.oneOf(["horizontal", "vertical"]).isRequired,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   * @default {}
   */
  slotProps: i.shape({
    endScrollButtonIcon: i.oneOfType([i.func, i.object]),
    startScrollButtonIcon: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    EndScrollButtonIcon: i.elementType,
    StartScrollButtonIcon: i.elementType
  }),
  /**
   * @ignore
   */
  style: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
};
function PV(e10) {
  return He("MuiTabs", e10);
}
var Nc = Be("MuiTabs", ["root", "vertical", "flexContainer", "flexContainerVertical", "centered", "scroller", "fixed", "scrollableX", "scrollableY", "hideScrollbar", "scrollButtons", "scrollButtonsHideMobile", "indicator"]);
var zv = (e10, t) => e10 === t ? e10.firstChild : t && t.nextElementSibling ? t.nextElementSibling : e10.firstChild;
var Wv = (e10, t) => e10 === t ? e10.lastChild : t && t.previousElementSibling ? t.previousElementSibling : e10.lastChild;
var ic = (e10, t, n) => {
  let o = false, r = n(e10, t);
  for (; r; ) {
    if (r === e10.firstChild) {
      if (o)
        return;
      o = true;
    }
    const s = r.disabled || r.getAttribute("aria-disabled") === "true";
    if (!r.hasAttribute("tabindex") || s)
      r = n(e10, r);
    else {
      r.focus();
      return;
    }
  }
};
var AV = (e10) => {
  const {
    vertical: t,
    fixed: n,
    hideScrollbar: o,
    scrollableX: r,
    scrollableY: s,
    centered: a,
    scrollButtonsHideMobile: l,
    classes: c
  } = e10;
  return Ue({
    root: ["root", t && "vertical"],
    scroller: ["scroller", n && "fixed", o && "hideScrollbar", r && "scrollableX", s && "scrollableY"],
    flexContainer: ["flexContainer", t && "flexContainerVertical", a && "centered"],
    indicator: ["indicator"],
    scrollButtons: ["scrollButtons", l && "scrollButtonsHideMobile"],
    scrollableX: [r && "scrollableX"],
    hideScrollbar: [o && "hideScrollbar"]
  }, PV, c);
};
var jV = K("div", {
  name: "MuiTabs",
  slot: "Root",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [{
      [`& .${Nc.scrollButtons}`]: t.scrollButtons
    }, {
      [`& .${Nc.scrollButtons}`]: n.scrollButtonsHideMobile && t.scrollButtonsHideMobile
    }, t.root, n.vertical && t.vertical];
  }
})(Ve(({
  theme: e10
}) => ({
  overflow: "hidden",
  minHeight: 48,
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch",
  display: "flex",
  variants: [{
    props: ({
      ownerState: t
    }) => t.vertical,
    style: {
      flexDirection: "column"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.scrollButtonsHideMobile,
    style: {
      [`& .${Nc.scrollButtons}`]: {
        [e10.breakpoints.down("sm")]: {
          display: "none"
        }
      }
    }
  }]
})));
var DV = K("div", {
  name: "MuiTabs",
  slot: "Scroller",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.scroller, n.fixed && t.fixed, n.hideScrollbar && t.hideScrollbar, n.scrollableX && t.scrollableX, n.scrollableY && t.scrollableY];
  }
})({
  position: "relative",
  display: "inline-block",
  flex: "1 1 auto",
  whiteSpace: "nowrap",
  variants: [{
    props: ({
      ownerState: e10
    }) => e10.fixed,
    style: {
      overflowX: "hidden",
      width: "100%"
    }
  }, {
    props: ({
      ownerState: e10
    }) => e10.hideScrollbar,
    style: {
      // Hide dimensionless scrollbar on macOS
      scrollbarWidth: "none",
      // Firefox
      "&::-webkit-scrollbar": {
        display: "none"
        // Safari + Chrome
      }
    }
  }, {
    props: ({
      ownerState: e10
    }) => e10.scrollableX,
    style: {
      overflowX: "auto",
      overflowY: "hidden"
    }
  }, {
    props: ({
      ownerState: e10
    }) => e10.scrollableY,
    style: {
      overflowY: "auto",
      overflowX: "hidden"
    }
  }]
});
var MV = K("div", {
  name: "MuiTabs",
  slot: "FlexContainer",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.flexContainer, n.vertical && t.flexContainerVertical, n.centered && t.centered];
  }
})({
  display: "flex",
  variants: [{
    props: ({
      ownerState: e10
    }) => e10.vertical,
    style: {
      flexDirection: "column"
    }
  }, {
    props: ({
      ownerState: e10
    }) => e10.centered,
    style: {
      justifyContent: "center"
    }
  }]
});
var kV = K("span", {
  name: "MuiTabs",
  slot: "Indicator",
  overridesResolver: (e10, t) => t.indicator
})(Ve(({
  theme: e10
}) => ({
  position: "absolute",
  height: 2,
  bottom: 0,
  width: "100%",
  transition: e10.transitions.create(),
  variants: [{
    props: {
      indicatorColor: "primary"
    },
    style: {
      backgroundColor: (e10.vars || e10).palette.primary.main
    }
  }, {
    props: {
      indicatorColor: "secondary"
    },
    style: {
      backgroundColor: (e10.vars || e10).palette.secondary.main
    }
  }, {
    props: ({
      ownerState: t
    }) => t.vertical,
    style: {
      height: "100%",
      width: 2,
      right: 0
    }
  }]
})));
var FV = K(sS)({
  overflowX: "auto",
  overflowY: "hidden",
  // Hide dimensionless scrollbar on macOS
  scrollbarWidth: "none",
  // Firefox
  "&::-webkit-scrollbar": {
    display: "none"
    // Safari + Chrome
  }
});
var Hv = {};
var Gv = false;
var lS = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiTabs"
  }), r = Sn(), s = oi(), {
    "aria-label": a,
    "aria-labelledby": l,
    action: c,
    centered: u = false,
    children: d,
    className: p,
    component: m = "div",
    allowScrollButtonsMobile: g = false,
    indicatorColor: b = "primary",
    onChange: v,
    orientation: h = "horizontal",
    ScrollButtonComponent: y = aS,
    scrollButtons: C = "auto",
    selectionFollowsFocus: x,
    slots: T = {},
    slotProps: w = {},
    TabIndicatorProps: R = {},
    TabScrollButtonProps: E = {},
    textColor: O = "primary",
    value: I,
    variant: P = "standard",
    visibleScrollbar: A = false,
    ...M
  } = o, F = P === "scrollable", D = h === "vertical", N = D ? "scrollTop" : "scrollLeft", j = D ? "top" : "left", _ = D ? "bottom" : "right", z = D ? "clientHeight" : "clientWidth", $ = D ? "height" : "width", k = {
    ...o,
    component: m,
    allowScrollButtonsMobile: g,
    indicatorColor: b,
    orientation: h,
    vertical: D,
    scrollButtons: C,
    textColor: O,
    variant: P,
    visibleScrollbar: A,
    fixed: !F,
    hideScrollbar: F && !A,
    scrollableX: F && !D,
    scrollableY: F && D,
    centered: u && !F,
    scrollButtonsHideMobile: !g
  }, B = AV(k), Q = In({
    elementType: T.StartScrollButtonIcon,
    externalSlotProps: w.startScrollButtonIcon,
    ownerState: k
  }), ee = In({
    elementType: T.EndScrollButtonIcon,
    externalSlotProps: w.endScrollButtonIcon,
    ownerState: k
  });
  u && F && console.error('MUI: You can not use the `centered={true}` and `variant="scrollable"` properties at the same time on a `Tabs` component.');
  const [G, H] = S.useState(false), [Y, J] = S.useState(Hv), [U, ne] = S.useState(false), [se, oe] = S.useState(false), [W, Z] = S.useState(false), [L, ie] = S.useState({
    overflow: "hidden",
    scrollbarWidth: 0
  }), te = /* @__PURE__ */ new Map(), le = S.useRef(null), ue = S.useRef(null), ve = () => {
    const me = le.current;
    let Oe;
    if (me) {
      const Me = me.getBoundingClientRect();
      Oe = {
        clientWidth: me.clientWidth,
        scrollLeft: me.scrollLeft,
        scrollTop: me.scrollTop,
        scrollWidth: me.scrollWidth,
        top: Me.top,
        bottom: Me.bottom,
        left: Me.left,
        right: Me.right
      };
    }
    let he;
    if (me && I !== false) {
      const Me = ue.current.children;
      if (Me.length > 0) {
        const ke = Me[te.get(I)];
        ke || console.error(["MUI: The `value` provided to the Tabs component is invalid.", `None of the Tabs' children match with "${I}".`, te.keys ? `You can provide one of the following values: ${Array.from(te.keys()).join(", ")}.` : null].join(`
`)), he = ke ? ke.getBoundingClientRect() : null, !Gv && he && he.width === 0 && he.height === 0 && // if the whole Tabs component is hidden, don't warn
        Oe.clientWidth !== 0 && (Oe = null, console.error(["MUI: The `value` provided to the Tabs component is invalid.", `The Tab with this \`value\` ("${I}") is not part of the document layout.`, "Make sure the tab item is present in the document or that it's not `display: none`."].join(`
`)), Gv = true);
      }
    }
    return {
      tabsMeta: Oe,
      tabMeta: he
    };
  }, Te = xn(() => {
    const {
      tabsMeta: me,
      tabMeta: Oe
    } = ve();
    let he = 0, Me;
    D ? (Me = "top", Oe && me && (he = Oe.top - me.top + me.scrollTop)) : (Me = s ? "right" : "left", Oe && me && (he = (s ? -1 : 1) * (Oe[Me] - me[Me] + me.scrollLeft)));
    const ke = {
      [Me]: he,
      // May be wrong until the font is loaded.
      [$]: Oe ? Oe[$] : 0
    };
    if (typeof Y[Me] != "number" || typeof Y[$] != "number")
      J(ke);
    else {
      const st = Math.abs(Y[Me] - ke[Me]), pt = Math.abs(Y[$] - ke[$]);
      (st >= 1 || pt >= 1) && J(ke);
    }
  }), Re = (me, {
    animation: Oe = true
  } = {}) => {
    Oe ? wV(N, le.current, me, {
      duration: r.transitions.duration.standard
    }) : le.current[N] = me;
  }, re = (me) => {
    let Oe = le.current[N];
    D ? Oe += me : Oe += me * (s ? -1 : 1), Re(Oe);
  }, X = () => {
    const me = le.current[z];
    let Oe = 0;
    const he = Array.from(ue.current.children);
    for (let Me = 0; Me < he.length; Me += 1) {
      const ke = he[Me];
      if (Oe + ke[z] > me) {
        Me === 0 && (Oe = me);
        break;
      }
      Oe += ke[z];
    }
    return Oe;
  }, ae = () => {
    re(-1 * X());
  }, ce = () => {
    re(X());
  }, ge = S.useCallback((me) => {
    ie({
      overflow: null,
      scrollbarWidth: me
    });
  }, []), Se = () => {
    const me = {};
    me.scrollbarSizeListener = F ? f.jsx(FV, {
      onChange: ge,
      className: be(B.scrollableX, B.hideScrollbar)
    }) : null;
    const he = F && (C === "auto" && (U || se) || C === true);
    return me.scrollButtonStart = he ? f.jsx(y, {
      slots: {
        StartScrollButtonIcon: T.StartScrollButtonIcon
      },
      slotProps: {
        startScrollButtonIcon: Q
      },
      orientation: h,
      direction: s ? "right" : "left",
      onClick: ae,
      disabled: !U,
      ...E,
      className: be(B.scrollButtons, E.className)
    }) : null, me.scrollButtonEnd = he ? f.jsx(y, {
      slots: {
        EndScrollButtonIcon: T.EndScrollButtonIcon
      },
      slotProps: {
        endScrollButtonIcon: ee
      },
      orientation: h,
      direction: s ? "left" : "right",
      onClick: ce,
      disabled: !se,
      ...E,
      className: be(B.scrollButtons, E.className)
    }) : null, me;
  }, ye = xn((me) => {
    const {
      tabsMeta: Oe,
      tabMeta: he
    } = ve();
    if (!(!he || !Oe)) {
      if (he[j] < Oe[j]) {
        const Me = Oe[N] + (he[j] - Oe[j]);
        Re(Me, {
          animation: me
        });
      } else if (he[_] > Oe[_]) {
        const Me = Oe[N] + (he[_] - Oe[_]);
        Re(Me, {
          animation: me
        });
      }
    }
  }), Ee = xn(() => {
    F && C !== false && Z(!W);
  });
  S.useEffect(() => {
    const me = zs(() => {
      le.current && Te();
    });
    let Oe;
    const he = (st) => {
      st.forEach((pt) => {
        pt.removedNodes.forEach((it) => {
          Oe == null || Oe.unobserve(it);
        }), pt.addedNodes.forEach((it) => {
          Oe == null || Oe.observe(it);
        });
      }), me(), Ee();
    }, Me = Rr(le.current);
    Me.addEventListener("resize", me);
    let ke;
    return typeof ResizeObserver < "u" && (Oe = new ResizeObserver(me), Array.from(ue.current.children).forEach((st) => {
      Oe.observe(st);
    })), typeof MutationObserver < "u" && (ke = new MutationObserver(he), ke.observe(ue.current, {
      childList: true
    })), () => {
      me.clear(), Me.removeEventListener("resize", me), ke == null || ke.disconnect(), Oe == null || Oe.disconnect();
    };
  }, [Te, Ee]), S.useEffect(() => {
    const me = Array.from(ue.current.children), Oe = me.length;
    if (typeof IntersectionObserver < "u" && Oe > 0 && F && C !== false) {
      const he = me[0], Me = me[Oe - 1], ke = {
        root: le.current,
        threshold: 0.99
      }, st = (Kt) => {
        ne(!Kt[0].isIntersecting);
      }, pt = new IntersectionObserver(st, ke);
      pt.observe(he);
      const it = (Kt) => {
        oe(!Kt[0].isIntersecting);
      }, xt = new IntersectionObserver(it, ke);
      return xt.observe(Me), () => {
        pt.disconnect(), xt.disconnect();
      };
    }
  }, [F, C, W, d == null ? void 0 : d.length]), S.useEffect(() => {
    H(true);
  }, []), S.useEffect(() => {
    Te();
  }), S.useEffect(() => {
    ye(Hv !== Y);
  }, [ye, Y]), S.useImperativeHandle(c, () => ({
    updateIndicator: Te,
    updateScrollButtons: Ee
  }), [Te, Ee]);
  const Le = f.jsx(kV, {
    ...R,
    className: be(B.indicator, R.className),
    ownerState: k,
    style: {
      ...Y,
      ...R.style
    }
  });
  let Ae = 0;
  const tt = S.Children.map(d, (me) => {
    if (!S.isValidElement(me))
      return null;
    Zu.isFragment(me) && console.error(["MUI: The Tabs component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`));
    const Oe = me.props.value === void 0 ? Ae : me.props.value;
    te.set(Oe, Ae);
    const he = Oe === I;
    return Ae += 1, S.cloneElement(me, {
      fullWidth: P === "fullWidth",
      indicator: he && !G && Le,
      selected: he,
      selectionFollowsFocus: x,
      onChange: v,
      textColor: O,
      value: Oe,
      ...Ae === 1 && I === false && !me.props.tabIndex ? {
        tabIndex: 0
      } : {}
    });
  }), Ze = (me) => {
    const Oe = ue.current, he = mn(Oe).activeElement;
    if (he.getAttribute("role") !== "tab")
      return;
    let ke = h === "horizontal" ? "ArrowLeft" : "ArrowUp", st = h === "horizontal" ? "ArrowRight" : "ArrowDown";
    switch (h === "horizontal" && s && (ke = "ArrowRight", st = "ArrowLeft"), me.key) {
      case ke:
        me.preventDefault(), ic(Oe, he, Wv);
        break;
      case st:
        me.preventDefault(), ic(Oe, he, zv);
        break;
      case "Home":
        me.preventDefault(), ic(Oe, null, zv);
        break;
      case "End":
        me.preventDefault(), ic(Oe, null, Wv);
        break;
    }
  }, ut = Se();
  return f.jsxs(jV, {
    className: be(B.root, p),
    ownerState: k,
    ref: n,
    as: m,
    ...M,
    children: [ut.scrollButtonStart, ut.scrollbarSizeListener, f.jsxs(DV, {
      className: B.scroller,
      ownerState: k,
      style: {
        overflow: L.overflow,
        [D ? `margin${s ? "Left" : "Right"}` : "marginBottom"]: A ? void 0 : -L.scrollbarWidth
      },
      ref: le,
      children: [f.jsx(MV, {
        "aria-label": a,
        "aria-labelledby": l,
        "aria-orientation": h === "vertical" ? "vertical" : null,
        className: B.flexContainer,
        ownerState: k,
        onKeyDown: Ze,
        ref: ue,
        role: "tablist",
        children: tt
      }), G && Le]
    }), ut.scrollButtonEnd]
  });
});
lS.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Callback fired when the component mounts.
   * This is useful when you want to trigger an action programmatically.
   * It supports two actions: `updateIndicator()` and `updateScrollButtons()`
   *
   * @param {object} actions This object contains all possible actions
   * that can be triggered programmatically.
   */
  action: On,
  /**
   * If `true`, the scroll buttons aren't forced hidden on mobile.
   * By default the scroll buttons are hidden on mobile and takes precedence over `scrollButtons`.
   * @default false
   */
  allowScrollButtonsMobile: i.bool,
  /**
   * The label for the Tabs as a string.
   */
  "aria-label": i.string,
  /**
   * An id or list of ids separated by a space that label the Tabs.
   */
  "aria-labelledby": i.string,
  /**
   * If `true`, the tabs are centered.
   * This prop is intended for large views.
   * @default false
   */
  centered: i.bool,
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * Determines the color of the indicator.
   * @default 'primary'
   */
  indicatorColor: i.oneOfType([i.oneOf(["primary", "secondary"]), i.string]),
  /**
   * Callback fired when the value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.
   * @param {any} value We default to the index of the child (number)
   */
  onChange: i.func,
  /**
   * The component orientation (layout flow direction).
   * @default 'horizontal'
   */
  orientation: i.oneOf(["horizontal", "vertical"]),
  /**
   * The component used to render the scroll buttons.
   * @default TabScrollButton
   */
  ScrollButtonComponent: i.elementType,
  /**
   * Determine behavior of scroll buttons when tabs are set to scroll:
   *
   * - `auto` will only present them when not all the items are visible.
   * - `true` will always present them.
   * - `false` will never present them.
   *
   * By default the scroll buttons are hidden on mobile.
   * This behavior can be disabled with `allowScrollButtonsMobile`.
   * @default 'auto'
   */
  scrollButtons: i.oneOf(["auto", false, true]),
  /**
   * If `true` the selected tab changes on focus. Otherwise it only
   * changes on activation.
   */
  selectionFollowsFocus: i.bool,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   * @default {}
   */
  slotProps: i.shape({
    endScrollButtonIcon: i.oneOfType([i.func, i.object]),
    startScrollButtonIcon: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    EndScrollButtonIcon: i.elementType,
    StartScrollButtonIcon: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Props applied to the tab indicator element.
   * @default  {}
   */
  TabIndicatorProps: i.object,
  /**
   * Props applied to the [`TabScrollButton`](https://mui.com/material-ui/api/tab-scroll-button/) element.
   * @default {}
   */
  TabScrollButtonProps: i.object,
  /**
   * Determines the color of the `Tab`.
   * @default 'primary'
   */
  textColor: i.oneOf(["inherit", "primary", "secondary"]),
  /**
   * The value of the currently selected `Tab`.
   * If you don't want any selected `Tab`, you can set this prop to `false`.
   */
  value: i.any,
  /**
   * Determines additional display behavior of the tabs:
   *
   *  - `scrollable` will invoke scrolling properties and allow for horizontally
   *  scrolling (or swiping) of the tab bar.
   *  - `fullWidth` will make the tabs grow to use all the available space,
   *  which should be used for small views, like on mobile.
   *  - `standard` will render the default state.
   * @default 'standard'
   */
  variant: i.oneOf(["fullWidth", "scrollable", "standard"]),
  /**
   * If `true`, the scrollbar is visible. It can be useful when displaying
   * a long vertical list of tabs.
   * @default false
   */
  visibleScrollbar: i.bool
};
function NV(e10) {
  return He("MuiTextField", e10);
}
Be("MuiTextField", ["root"]);
var $V = {
  standard: sl,
  filled: rl,
  outlined: al
};
var VV = (e10) => {
  const {
    classes: t
  } = e10;
  return Ue({
    root: ["root"]
  }, NV, t);
};
var _V = K(So, {
  name: "MuiTextField",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})({});
var _n = S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiTextField"
  }), {
    autoComplete: r,
    autoFocus: s = false,
    children: a,
    className: l,
    color: c = "primary",
    defaultValue: u,
    disabled: d = false,
    error: p = false,
    FormHelperTextProps: m,
    fullWidth: g = false,
    helperText: b,
    id: v,
    InputLabelProps: h,
    inputProps: y,
    InputProps: C,
    inputRef: x,
    label: T,
    maxRows: w,
    minRows: R,
    multiline: E = false,
    name: O,
    onBlur: I,
    onChange: P,
    onFocus: A,
    placeholder: M,
    required: F = false,
    rows: D,
    select: N = false,
    SelectProps: j,
    slots: _ = {},
    slotProps: z = {},
    type: $,
    value: k,
    variant: B = "outlined",
    ...Q
  } = o, ee = {
    ...o,
    autoFocus: s,
    color: c,
    disabled: d,
    error: p,
    fullWidth: g,
    multiline: E,
    required: F,
    select: N,
    variant: B
  }, G = VV(ee);
  N && !a && console.error("MUI: `children` must be passed when using the `TextField` component with `select`.");
  const H = Ws(v), Y = b && H ? `${H}-helper-text` : void 0, J = T && H ? `${H}-label` : void 0, U = $V[B], ne = {
    slots: _,
    slotProps: {
      input: C,
      inputLabel: h,
      htmlInput: y,
      formHelperText: m,
      select: j,
      ...z
    }
  }, se = {}, oe = ne.slotProps.inputLabel;
  B === "outlined" && (oe && typeof oe.shrink < "u" && (se.notched = oe.shrink), se.label = T), N && ((!j || !j.native) && (se.id = void 0), se["aria-describedby"] = void 0);
  const [W, Z] = sn("input", {
    elementType: U,
    externalForwardedProps: ne,
    additionalProps: se,
    ownerState: ee
  }), [L, ie] = sn("inputLabel", {
    elementType: sd,
    externalForwardedProps: ne,
    ownerState: ee
  }), [te, le] = sn("htmlInput", {
    elementType: "input",
    externalForwardedProps: ne,
    ownerState: ee
  }), [ue, ve] = sn("formHelperText", {
    elementType: id,
    externalForwardedProps: ne,
    ownerState: ee
  }), [Te, Re] = sn("select", {
    elementType: Dl,
    externalForwardedProps: ne,
    ownerState: ee
  }), re = f.jsx(W, {
    "aria-describedby": Y,
    autoComplete: r,
    autoFocus: s,
    defaultValue: u,
    fullWidth: g,
    multiline: E,
    name: O,
    rows: D,
    maxRows: w,
    minRows: R,
    type: $,
    value: k,
    id: H,
    inputRef: x,
    onBlur: I,
    onChange: P,
    onFocus: A,
    placeholder: M,
    inputProps: le,
    slots: {
      input: _.htmlInput ? te : void 0
    },
    ...Z
  });
  return f.jsxs(_V, {
    className: be(G.root, l),
    disabled: d,
    error: p,
    fullWidth: g,
    ref: n,
    required: F,
    color: c,
    variant: B,
    ownerState: ee,
    ...Q,
    children: [T != null && T !== "" && f.jsx(L, {
      htmlFor: H,
      id: J,
      ...ie,
      children: T
    }), N ? f.jsx(Te, {
      "aria-describedby": Y,
      id: H,
      labelId: J,
      value: k,
      input: re,
      ...Re,
      children: a
    }) : re, b && f.jsx(ue, {
      id: Y,
      ...ve,
      children: b
    })]
  });
});
_n.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: i.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   * @default false
   */
  autoFocus: i.bool,
  /**
   * @ignore
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * @ignore
   */
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOfType([i.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), i.string]),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.any,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: i.bool,
  /**
   * Props applied to the [`FormHelperText`](https://mui.com/material-ui/api/form-helper-text/) element.
   * @deprecated Use `slotProps.formHelperText` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  FormHelperTextProps: i.object,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The helper text content.
   */
  helperText: i.node,
  /**
   * The id of the `input` element.
   * Use this prop to make `label` and `helperText` accessible for screen readers.
   */
  id: i.string,
  /**
   * Props applied to the [`InputLabel`](https://mui.com/material-ui/api/input-label/) element.
   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.
   * @deprecated Use `slotProps.inputLabel` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  InputLabelProps: i.object,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.htmlInput` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: i.object,
  /**
   * Props applied to the Input element.
   * It will be a [`FilledInput`](https://mui.com/material-ui/api/filled-input/),
   * [`OutlinedInput`](https://mui.com/material-ui/api/outlined-input/) or [`Input`](https://mui.com/material-ui/api/input/)
   * component depending on the `variant` prop value.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  InputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: On,
  /**
   * The label content.
   */
  label: i.node,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: i.oneOf(["dense", "none", "normal"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: i.oneOfType([i.number, i.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: i.oneOfType([i.number, i.string]),
  /**
   * If `true`, a `textarea` element is rendered instead of an input.
   * @default false
   */
  multiline: i.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  /**
   * @ignore
   */
  onBlur: i.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: i.func,
  /**
   * @ignore
   */
  onFocus: i.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: i.string,
  /**
   * If `true`, the label is displayed as required and the `input` element is required.
   * @default false
   */
  required: i.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: i.oneOfType([i.number, i.string]),
  /**
   * Render a [`Select`](https://mui.com/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.
   * If this option is set you must pass the options of the select as children.
   * @default false
   */
  select: i.bool,
  /**
   * Props applied to the [`Select`](https://mui.com/material-ui/api/select/) element.
   * @deprecated Use `slotProps.select` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  SelectProps: i.object,
  /**
   * The size of the component.
   */
  size: i.oneOfType([i.oneOf(["medium", "small"]), i.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: i.shape({
    formHelperText: i.oneOfType([i.func, i.object]),
    htmlInput: i.oneOfType([i.func, i.object]),
    input: i.oneOfType([i.func, i.object]),
    inputLabel: i.oneOfType([i.func, i.object]),
    select: i.oneOfType([i.func, i.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: i.shape({
    formHelperText: i.elementType,
    htmlInput: i.elementType,
    input: i.elementType,
    inputLabel: i.elementType,
    select: i.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   */
  type: i.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: i.any,
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: i.oneOf(["filled", "outlined", "standard"])
};
var LV = function(t) {
  return BV(t) && !zV(t);
};
function BV(e10) {
  return !!e10 && typeof e10 == "object";
}
function zV(e10) {
  var t = Object.prototype.toString.call(e10);
  return t === "[object RegExp]" || t === "[object Date]" || GV(e10);
}
var WV = typeof Symbol == "function" && Symbol.for;
var HV = WV ? Symbol.for("react.element") : 60103;
function GV(e10) {
  return e10.$$typeof === HV;
}
function UV(e10) {
  return Array.isArray(e10) ? [] : {};
}
function ru(e10, t) {
  return t.clone !== false && t.isMergeableObject(e10) ? cl(UV(e10), e10, t) : e10;
}
function XV(e10, t, n) {
  return e10.concat(t).map(function(o) {
    return ru(o, n);
  });
}
function YV(e10, t, n) {
  var o = {};
  return n.isMergeableObject(e10) && Object.keys(e10).forEach(function(r) {
    o[r] = ru(e10[r], n);
  }), Object.keys(t).forEach(function(r) {
    !n.isMergeableObject(t[r]) || !e10[r] ? o[r] = ru(t[r], n) : o[r] = cl(e10[r], t[r], n);
  }), o;
}
function cl(e10, t, n) {
  n = n || {}, n.arrayMerge = n.arrayMerge || XV, n.isMergeableObject = n.isMergeableObject || LV;
  var o = Array.isArray(t), r = Array.isArray(e10), s = o === r;
  return s ? o ? n.arrayMerge(e10, t, n) : YV(e10, t, n) : ru(t, n);
}
cl.all = function(t, n) {
  if (!Array.isArray(t))
    throw new Error("first argument should be an array");
  return t.reduce(function(o, r) {
    return cl(o, r, n);
  }, {});
};
var Vf = cl;
var cS = typeof global == "object" && global && global.Object === Object && global;
var ZV = typeof self == "object" && self && self.Object === Object && self;
var cr = cS || ZV || Function("return this")();
var Qr = cr.Symbol;
var uS = Object.prototype;
var qV = uS.hasOwnProperty;
var JV = uS.toString;
var fa = Qr ? Qr.toStringTag : void 0;
function KV(e10) {
  var t = qV.call(e10, fa), n = e10[fa];
  try {
    e10[fa] = void 0;
    var o = true;
  } catch {
  }
  var r = JV.call(e10);
  return o && (t ? e10[fa] = n : delete e10[fa]), r;
}
var QV = Object.prototype;
var e_ = QV.toString;
function t_(e10) {
  return e_.call(e10);
}
var n_ = "[object Null]";
var o_ = "[object Undefined]";
var Uv = Qr ? Qr.toStringTag : void 0;
function Li(e10) {
  return e10 == null ? e10 === void 0 ? o_ : n_ : Uv && Uv in Object(e10) ? KV(e10) : t_(e10);
}
function dS(e10, t) {
  return function(n) {
    return e10(t(n));
  };
}
var yg = dS(Object.getPrototypeOf, Object);
function Bi(e10) {
  return e10 != null && typeof e10 == "object";
}
var r_ = "[object Object]";
var i_ = Function.prototype;
var s_ = Object.prototype;
var pS = i_.toString;
var a_ = s_.hasOwnProperty;
var l_ = pS.call(Object);
function Xv(e10) {
  if (!Bi(e10) || Li(e10) != r_)
    return false;
  var t = yg(e10);
  if (t === null)
    return true;
  var n = a_.call(t, "constructor") && t.constructor;
  return typeof n == "function" && n instanceof n && pS.call(n) == l_;
}
function c_() {
  this.__data__ = [], this.size = 0;
}
function fS(e10, t) {
  return e10 === t || e10 !== e10 && t !== t;
}
function dd(e10, t) {
  for (var n = e10.length; n--; )
    if (fS(e10[n][0], t))
      return n;
  return -1;
}
var u_ = Array.prototype;
var d_ = u_.splice;
function p_(e10) {
  var t = this.__data__, n = dd(t, e10);
  if (n < 0)
    return false;
  var o = t.length - 1;
  return n == o ? t.pop() : d_.call(t, n, 1), --this.size, true;
}
function f_(e10) {
  var t = this.__data__, n = dd(t, e10);
  return n < 0 ? void 0 : t[n][1];
}
function m_(e10) {
  return dd(this.__data__, e10) > -1;
}
function g_(e10, t) {
  var n = this.__data__, o = dd(n, e10);
  return o < 0 ? (++this.size, n.push([e10, t])) : n[o][1] = t, this;
}
function Dr(e10) {
  var t = -1, n = e10 == null ? 0 : e10.length;
  for (this.clear(); ++t < n; ) {
    var o = e10[t];
    this.set(o[0], o[1]);
  }
}
Dr.prototype.clear = c_;
Dr.prototype.delete = p_;
Dr.prototype.get = f_;
Dr.prototype.has = m_;
Dr.prototype.set = g_;
function h_() {
  this.__data__ = new Dr(), this.size = 0;
}
function b_(e10) {
  var t = this.__data__, n = t.delete(e10);
  return this.size = t.size, n;
}
function v_(e10) {
  return this.__data__.get(e10);
}
function y_(e10) {
  return this.__data__.has(e10);
}
function Ml(e10) {
  var t = typeof e10;
  return e10 != null && (t == "object" || t == "function");
}
var x_ = "[object AsyncFunction]";
var C_ = "[object Function]";
var S_ = "[object GeneratorFunction]";
var w_ = "[object Proxy]";
function mS(e10) {
  if (!Ml(e10))
    return false;
  var t = Li(e10);
  return t == C_ || t == S_ || t == x_ || t == w_;
}
var Tp = cr["__core-js_shared__"];
var Yv = function() {
  var e10 = /[^.]+$/.exec(Tp && Tp.keys && Tp.keys.IE_PROTO || "");
  return e10 ? "Symbol(src)_1." + e10 : "";
}();
function T_(e10) {
  return !!Yv && Yv in e10;
}
var I_ = Function.prototype;
var R_ = I_.toString;
function zi(e10) {
  if (e10 != null) {
    try {
      return R_.call(e10);
    } catch {
    }
    try {
      return e10 + "";
    } catch {
    }
  }
  return "";
}
var E_ = /[\\^$.*+?()[\]{}|]/g;
var O_ = /^\[object .+?Constructor\]$/;
var P_ = Function.prototype;
var A_ = Object.prototype;
var j_ = P_.toString;
var D_ = A_.hasOwnProperty;
var M_ = RegExp(
  "^" + j_.call(D_).replace(E_, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function k_(e10) {
  if (!Ml(e10) || T_(e10))
    return false;
  var t = mS(e10) ? M_ : O_;
  return t.test(zi(e10));
}
function F_(e10, t) {
  return e10 == null ? void 0 : e10[t];
}
function Wi(e10, t) {
  var n = F_(e10, t);
  return k_(n) ? n : void 0;
}
var ul = Wi(cr, "Map");
var dl = Wi(Object, "create");
function N_() {
  this.__data__ = dl ? dl(null) : {}, this.size = 0;
}
function $_(e10) {
  var t = this.has(e10) && delete this.__data__[e10];
  return this.size -= t ? 1 : 0, t;
}
var V_ = "__lodash_hash_undefined__";
var __ = Object.prototype;
var L_ = __.hasOwnProperty;
function B_(e10) {
  var t = this.__data__;
  if (dl) {
    var n = t[e10];
    return n === V_ ? void 0 : n;
  }
  return L_.call(t, e10) ? t[e10] : void 0;
}
var z_ = Object.prototype;
var W_ = z_.hasOwnProperty;
function H_(e10) {
  var t = this.__data__;
  return dl ? t[e10] !== void 0 : W_.call(t, e10);
}
var G_ = "__lodash_hash_undefined__";
function U_(e10, t) {
  var n = this.__data__;
  return this.size += this.has(e10) ? 0 : 1, n[e10] = dl && t === void 0 ? G_ : t, this;
}
function ji(e10) {
  var t = -1, n = e10 == null ? 0 : e10.length;
  for (this.clear(); ++t < n; ) {
    var o = e10[t];
    this.set(o[0], o[1]);
  }
}
ji.prototype.clear = N_;
ji.prototype.delete = $_;
ji.prototype.get = B_;
ji.prototype.has = H_;
ji.prototype.set = U_;
function X_() {
  this.size = 0, this.__data__ = {
    hash: new ji(),
    map: new (ul || Dr)(),
    string: new ji()
  };
}
function Y_(e10) {
  var t = typeof e10;
  return t == "string" || t == "number" || t == "symbol" || t == "boolean" ? e10 !== "__proto__" : e10 === null;
}
function pd(e10, t) {
  var n = e10.__data__;
  return Y_(t) ? n[typeof t == "string" ? "string" : "hash"] : n.map;
}
function Z_(e10) {
  var t = pd(this, e10).delete(e10);
  return this.size -= t ? 1 : 0, t;
}
function q_(e10) {
  return pd(this, e10).get(e10);
}
function J_(e10) {
  return pd(this, e10).has(e10);
}
function K_(e10, t) {
  var n = pd(this, e10), o = n.size;
  return n.set(e10, t), this.size += n.size == o ? 0 : 1, this;
}
function ai(e10) {
  var t = -1, n = e10 == null ? 0 : e10.length;
  for (this.clear(); ++t < n; ) {
    var o = e10[t];
    this.set(o[0], o[1]);
  }
}
ai.prototype.clear = X_;
ai.prototype.delete = Z_;
ai.prototype.get = q_;
ai.prototype.has = J_;
ai.prototype.set = K_;
var Q_ = 200;
function eL(e10, t) {
  var n = this.__data__;
  if (n instanceof Dr) {
    var o = n.__data__;
    if (!ul || o.length < Q_ - 1)
      return o.push([e10, t]), this.size = ++n.size, this;
    n = this.__data__ = new ai(o);
  }
  return n.set(e10, t), this.size = n.size, this;
}
function Xs(e10) {
  var t = this.__data__ = new Dr(e10);
  this.size = t.size;
}
Xs.prototype.clear = h_;
Xs.prototype.delete = b_;
Xs.prototype.get = v_;
Xs.prototype.has = y_;
Xs.prototype.set = eL;
function tL(e10, t) {
  for (var n = -1, o = e10 == null ? 0 : e10.length; ++n < o && t(e10[n], n, e10) !== false; )
    ;
  return e10;
}
var Zv = function() {
  try {
    var e10 = Wi(Object, "defineProperty");
    return e10({}, "", {}), e10;
  } catch {
  }
}();
function gS(e10, t, n) {
  t == "__proto__" && Zv ? Zv(e10, t, {
    configurable: true,
    enumerable: true,
    value: n,
    writable: true
  }) : e10[t] = n;
}
var nL = Object.prototype;
var oL = nL.hasOwnProperty;
function hS(e10, t, n) {
  var o = e10[t];
  (!(oL.call(e10, t) && fS(o, n)) || n === void 0 && !(t in e10)) && gS(e10, t, n);
}
function fd(e10, t, n, o) {
  var r = !n;
  n || (n = {});
  for (var s = -1, a = t.length; ++s < a; ) {
    var l = t[s], c = void 0;
    c === void 0 && (c = e10[l]), r ? gS(n, l, c) : hS(n, l, c);
  }
  return n;
}
function rL(e10, t) {
  for (var n = -1, o = Array(e10); ++n < e10; )
    o[n] = t(n);
  return o;
}
var iL = "[object Arguments]";
function qv(e10) {
  return Bi(e10) && Li(e10) == iL;
}
var bS = Object.prototype;
var sL = bS.hasOwnProperty;
var aL = bS.propertyIsEnumerable;
var lL = qv(/* @__PURE__ */ function() {
  return arguments;
}()) ? qv : function(e10) {
  return Bi(e10) && sL.call(e10, "callee") && !aL.call(e10, "callee");
};
var kl = Array.isArray;
function cL() {
  return false;
}
var vS = typeof exports == "object" && exports && !exports.nodeType && exports;
var Jv = vS && typeof module == "object" && module && !module.nodeType && module;
var uL = Jv && Jv.exports === vS;
var Kv = uL ? cr.Buffer : void 0;
var dL = Kv ? Kv.isBuffer : void 0;
var yS = dL || cL;
var pL = 9007199254740991;
var fL = /^(?:0|[1-9]\d*)$/;
function mL(e10, t) {
  var n = typeof e10;
  return t = t ?? pL, !!t && (n == "number" || n != "symbol" && fL.test(e10)) && e10 > -1 && e10 % 1 == 0 && e10 < t;
}
var gL = 9007199254740991;
function xS(e10) {
  return typeof e10 == "number" && e10 > -1 && e10 % 1 == 0 && e10 <= gL;
}
var hL = "[object Arguments]";
var bL = "[object Array]";
var vL = "[object Boolean]";
var yL = "[object Date]";
var xL = "[object Error]";
var CL = "[object Function]";
var SL = "[object Map]";
var wL = "[object Number]";
var TL = "[object Object]";
var IL = "[object RegExp]";
var RL = "[object Set]";
var EL = "[object String]";
var OL = "[object WeakMap]";
var PL = "[object ArrayBuffer]";
var AL = "[object DataView]";
var jL = "[object Float32Array]";
var DL = "[object Float64Array]";
var ML = "[object Int8Array]";
var kL = "[object Int16Array]";
var FL = "[object Int32Array]";
var NL = "[object Uint8Array]";
var $L = "[object Uint8ClampedArray]";
var VL = "[object Uint16Array]";
var _L = "[object Uint32Array]";
var Yt = {};
Yt[jL] = Yt[DL] = Yt[ML] = Yt[kL] = Yt[FL] = Yt[NL] = Yt[$L] = Yt[VL] = Yt[_L] = true;
Yt[hL] = Yt[bL] = Yt[PL] = Yt[vL] = Yt[AL] = Yt[yL] = Yt[xL] = Yt[CL] = Yt[SL] = Yt[wL] = Yt[TL] = Yt[IL] = Yt[RL] = Yt[EL] = Yt[OL] = false;
function LL(e10) {
  return Bi(e10) && xS(e10.length) && !!Yt[Li(e10)];
}
function xg(e10) {
  return function(t) {
    return e10(t);
  };
}
var CS = typeof exports == "object" && exports && !exports.nodeType && exports;
var Na = CS && typeof module == "object" && module && !module.nodeType && module;
var BL = Na && Na.exports === CS;
var Ip = BL && cS.process;
var ks = function() {
  try {
    var e10 = Na && Na.require && Na.require("util").types;
    return e10 || Ip && Ip.binding && Ip.binding("util");
  } catch {
  }
}();
var Qv = ks && ks.isTypedArray;
var zL = Qv ? xg(Qv) : LL;
var WL = Object.prototype;
var HL = WL.hasOwnProperty;
function SS(e10, t) {
  var n = kl(e10), o = !n && lL(e10), r = !n && !o && yS(e10), s = !n && !o && !r && zL(e10), a = n || o || r || s, l = a ? rL(e10.length, String) : [], c = l.length;
  for (var u in e10)
    (t || HL.call(e10, u)) && !(a && // Safari 9 has enumerable `arguments.length` in strict mode.
    (u == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
    r && (u == "offset" || u == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    s && (u == "buffer" || u == "byteLength" || u == "byteOffset") || // Skip index properties.
    mL(u, c))) && l.push(u);
  return l;
}
var GL = Object.prototype;
function Cg(e10) {
  var t = e10 && e10.constructor, n = typeof t == "function" && t.prototype || GL;
  return e10 === n;
}
var UL = dS(Object.keys, Object);
var XL = Object.prototype;
var YL = XL.hasOwnProperty;
function ZL(e10) {
  if (!Cg(e10))
    return UL(e10);
  var t = [];
  for (var n in Object(e10))
    YL.call(e10, n) && n != "constructor" && t.push(n);
  return t;
}
function wS(e10) {
  return e10 != null && xS(e10.length) && !mS(e10);
}
function Sg(e10) {
  return wS(e10) ? SS(e10) : ZL(e10);
}
function qL(e10, t) {
  return e10 && fd(t, Sg(t), e10);
}
function JL(e10) {
  var t = [];
  if (e10 != null)
    for (var n in Object(e10))
      t.push(n);
  return t;
}
var KL = Object.prototype;
var QL = KL.hasOwnProperty;
function eB(e10) {
  if (!Ml(e10))
    return JL(e10);
  var t = Cg(e10), n = [];
  for (var o in e10)
    o == "constructor" && (t || !QL.call(e10, o)) || n.push(o);
  return n;
}
function wg(e10) {
  return wS(e10) ? SS(e10, true) : eB(e10);
}
function tB(e10, t) {
  return e10 && fd(t, wg(t), e10);
}
var TS = typeof exports == "object" && exports && !exports.nodeType && exports;
var ey = TS && typeof module == "object" && module && !module.nodeType && module;
var nB = ey && ey.exports === TS;
var ty = nB ? cr.Buffer : void 0;
var ny = ty ? ty.allocUnsafe : void 0;
function oB(e10, t) {
  if (t)
    return e10.slice();
  var n = e10.length, o = ny ? ny(n) : new e10.constructor(n);
  return e10.copy(o), o;
}
function IS(e10, t) {
  var n = -1, o = e10.length;
  for (t || (t = Array(o)); ++n < o; )
    t[n] = e10[n];
  return t;
}
function rB(e10, t) {
  for (var n = -1, o = e10 == null ? 0 : e10.length, r = 0, s = []; ++n < o; ) {
    var a = e10[n];
    t(a, n, e10) && (s[r++] = a);
  }
  return s;
}
function RS() {
  return [];
}
var iB = Object.prototype;
var sB = iB.propertyIsEnumerable;
var oy = Object.getOwnPropertySymbols;
var Tg = oy ? function(e10) {
  return e10 == null ? [] : (e10 = Object(e10), rB(oy(e10), function(t) {
    return sB.call(e10, t);
  }));
} : RS;
function aB(e10, t) {
  return fd(e10, Tg(e10), t);
}
function ES(e10, t) {
  for (var n = -1, o = t.length, r = e10.length; ++n < o; )
    e10[r + n] = t[n];
  return e10;
}
var lB = Object.getOwnPropertySymbols;
var OS = lB ? function(e10) {
  for (var t = []; e10; )
    ES(t, Tg(e10)), e10 = yg(e10);
  return t;
} : RS;
function cB(e10, t) {
  return fd(e10, OS(e10), t);
}
function PS(e10, t, n) {
  var o = t(e10);
  return kl(e10) ? o : ES(o, n(e10));
}
function uB(e10) {
  return PS(e10, Sg, Tg);
}
function dB(e10) {
  return PS(e10, wg, OS);
}
var _f = Wi(cr, "DataView");
var Lf = Wi(cr, "Promise");
var Bf = Wi(cr, "Set");
var zf = Wi(cr, "WeakMap");
var ry = "[object Map]";
var pB = "[object Object]";
var iy = "[object Promise]";
var sy = "[object Set]";
var ay = "[object WeakMap]";
var ly = "[object DataView]";
var fB = zi(_f);
var mB = zi(ul);
var gB = zi(Lf);
var hB = zi(Bf);
var bB = zi(zf);
var br = Li;
(_f && br(new _f(new ArrayBuffer(1))) != ly || ul && br(new ul()) != ry || Lf && br(Lf.resolve()) != iy || Bf && br(new Bf()) != sy || zf && br(new zf()) != ay) && (br = function(e10) {
  var t = Li(e10), n = t == pB ? e10.constructor : void 0, o = n ? zi(n) : "";
  if (o)
    switch (o) {
      case fB:
        return ly;
      case mB:
        return ry;
      case gB:
        return iy;
      case hB:
        return sy;
      case bB:
        return ay;
    }
  return t;
});
var vB = Object.prototype;
var yB = vB.hasOwnProperty;
function xB(e10) {
  var t = e10.length, n = new e10.constructor(t);
  return t && typeof e10[0] == "string" && yB.call(e10, "index") && (n.index = e10.index, n.input = e10.input), n;
}
var cy = cr.Uint8Array;
function Ig(e10) {
  var t = new e10.constructor(e10.byteLength);
  return new cy(t).set(new cy(e10)), t;
}
function CB(e10, t) {
  var n = t ? Ig(e10.buffer) : e10.buffer;
  return new e10.constructor(n, e10.byteOffset, e10.byteLength);
}
var SB = /\w*$/;
function wB(e10) {
  var t = new e10.constructor(e10.source, SB.exec(e10));
  return t.lastIndex = e10.lastIndex, t;
}
var uy = Qr ? Qr.prototype : void 0;
var dy = uy ? uy.valueOf : void 0;
function TB(e10) {
  return dy ? Object(dy.call(e10)) : {};
}
function IB(e10, t) {
  var n = t ? Ig(e10.buffer) : e10.buffer;
  return new e10.constructor(n, e10.byteOffset, e10.length);
}
var RB = "[object Boolean]";
var EB = "[object Date]";
var OB = "[object Map]";
var PB = "[object Number]";
var AB = "[object RegExp]";
var jB = "[object Set]";
var DB = "[object String]";
var MB = "[object Symbol]";
var kB = "[object ArrayBuffer]";
var FB = "[object DataView]";
var NB = "[object Float32Array]";
var $B = "[object Float64Array]";
var VB = "[object Int8Array]";
var _B = "[object Int16Array]";
var LB = "[object Int32Array]";
var BB = "[object Uint8Array]";
var zB = "[object Uint8ClampedArray]";
var WB = "[object Uint16Array]";
var HB = "[object Uint32Array]";
function GB(e10, t, n) {
  var o = e10.constructor;
  switch (t) {
    case kB:
      return Ig(e10);
    case RB:
    case EB:
      return new o(+e10);
    case FB:
      return CB(e10, n);
    case NB:
    case $B:
    case VB:
    case _B:
    case LB:
    case BB:
    case zB:
    case WB:
    case HB:
      return IB(e10, n);
    case OB:
      return new o();
    case PB:
    case DB:
      return new o(e10);
    case AB:
      return wB(e10);
    case jB:
      return new o();
    case MB:
      return TB(e10);
  }
}
var py = Object.create;
var UB = /* @__PURE__ */ function() {
  function e10() {
  }
  return function(t) {
    if (!Ml(t))
      return {};
    if (py)
      return py(t);
    e10.prototype = t;
    var n = new e10();
    return e10.prototype = void 0, n;
  };
}();
function XB(e10) {
  return typeof e10.constructor == "function" && !Cg(e10) ? UB(yg(e10)) : {};
}
var YB = "[object Map]";
function ZB(e10) {
  return Bi(e10) && br(e10) == YB;
}
var fy = ks && ks.isMap;
var qB = fy ? xg(fy) : ZB;
var JB = "[object Set]";
function KB(e10) {
  return Bi(e10) && br(e10) == JB;
}
var my = ks && ks.isSet;
var QB = my ? xg(my) : KB;
var e5 = 1;
var t5 = 2;
var n5 = 4;
var AS = "[object Arguments]";
var o5 = "[object Array]";
var r5 = "[object Boolean]";
var i5 = "[object Date]";
var s5 = "[object Error]";
var jS = "[object Function]";
var a5 = "[object GeneratorFunction]";
var l5 = "[object Map]";
var c5 = "[object Number]";
var DS = "[object Object]";
var u5 = "[object RegExp]";
var d5 = "[object Set]";
var p5 = "[object String]";
var f5 = "[object Symbol]";
var m5 = "[object WeakMap]";
var g5 = "[object ArrayBuffer]";
var h5 = "[object DataView]";
var b5 = "[object Float32Array]";
var v5 = "[object Float64Array]";
var y5 = "[object Int8Array]";
var x5 = "[object Int16Array]";
var C5 = "[object Int32Array]";
var S5 = "[object Uint8Array]";
var w5 = "[object Uint8ClampedArray]";
var T5 = "[object Uint16Array]";
var I5 = "[object Uint32Array]";
var Xt = {};
Xt[AS] = Xt[o5] = Xt[g5] = Xt[h5] = Xt[r5] = Xt[i5] = Xt[b5] = Xt[v5] = Xt[y5] = Xt[x5] = Xt[C5] = Xt[l5] = Xt[c5] = Xt[DS] = Xt[u5] = Xt[d5] = Xt[p5] = Xt[f5] = Xt[S5] = Xt[w5] = Xt[T5] = Xt[I5] = true;
Xt[s5] = Xt[jS] = Xt[m5] = false;
function $a(e10, t, n, o, r, s) {
  var a, l = t & e5, c = t & t5, u = t & n5;
  if (a !== void 0)
    return a;
  if (!Ml(e10))
    return e10;
  var d = kl(e10);
  if (d) {
    if (a = xB(e10), !l)
      return IS(e10, a);
  } else {
    var p = br(e10), m = p == jS || p == a5;
    if (yS(e10))
      return oB(e10, l);
    if (p == DS || p == AS || m && !r) {
      if (a = c || m ? {} : XB(e10), !l)
        return c ? cB(e10, tB(a, e10)) : aB(e10, qL(a, e10));
    } else {
      if (!Xt[p])
        return r ? e10 : {};
      a = GB(e10, p, l);
    }
  }
  s || (s = new Xs());
  var g = s.get(e10);
  if (g)
    return g;
  s.set(e10, a), QB(e10) ? e10.forEach(function(h) {
    a.add($a(h, t, n, h, e10, s));
  }) : qB(e10) && e10.forEach(function(h, y) {
    a.set(y, $a(h, t, n, y, e10, s));
  });
  var b = u ? c ? dB : uB : c ? wg : Sg, v = d ? void 0 : b(e10);
  return tL(v || e10, function(h, y) {
    v && (y = h, h = e10[y]), hS(a, y, $a(h, t, n, y, e10, s));
  }), a;
}
var R5 = 1;
var E5 = 4;
function sc(e10) {
  return $a(e10, R5 | E5);
}
var gy = Array.isArray;
var hy = Object.keys;
var O5 = Object.prototype.hasOwnProperty;
var P5 = typeof Element < "u";
function Wf(e10, t) {
  if (e10 === t) return true;
  if (e10 && t && typeof e10 == "object" && typeof t == "object") {
    var n = gy(e10), o = gy(t), r, s, a;
    if (n && o) {
      if (s = e10.length, s != t.length) return false;
      for (r = s; r-- !== 0; )
        if (!Wf(e10[r], t[r])) return false;
      return true;
    }
    if (n != o) return false;
    var l = e10 instanceof Date, c = t instanceof Date;
    if (l != c) return false;
    if (l && c) return e10.getTime() == t.getTime();
    var u = e10 instanceof RegExp, d = t instanceof RegExp;
    if (u != d) return false;
    if (u && d) return e10.toString() == t.toString();
    var p = hy(e10);
    if (s = p.length, s !== hy(t).length)
      return false;
    for (r = s; r-- !== 0; )
      if (!O5.call(t, p[r])) return false;
    if (P5 && e10 instanceof Element && t instanceof Element)
      return e10 === t;
    for (r = s; r-- !== 0; )
      if (a = p[r], !(a === "_owner" && e10.$$typeof) && !Wf(e10[a], t[a]))
        return false;
    return true;
  }
  return e10 !== e10 && t !== t;
}
var A5 = function(t, n) {
  try {
    return Wf(t, n);
  } catch (o) {
    if (o.message && o.message.match(/stack|recursion/i) || o.number === -2146828260)
      return console.warn("Warning: react-fast-compare does not handle circular references.", o.name, o.message), false;
    throw o;
  }
};
var gi = Cm(A5);
var j5 = false;
function fs(e10, t) {
  if (!j5) {
    var n = "Warning: " + t;
    typeof console < "u" && console.warn(n);
    try {
      throw Error(n);
    } catch {
    }
  }
}
var D5 = 4;
function by(e10) {
  return $a(e10, D5);
}
function MS(e10, t) {
  for (var n = -1, o = e10 == null ? 0 : e10.length, r = Array(o); ++n < o; )
    r[n] = t(e10[n], n, e10);
  return r;
}
var M5 = "[object Symbol]";
function Rg(e10) {
  return typeof e10 == "symbol" || Bi(e10) && Li(e10) == M5;
}
var k5 = "Expected a function";
function Eg(e10, t) {
  if (typeof e10 != "function" || t != null && typeof t != "function")
    throw new TypeError(k5);
  var n = function() {
    var o = arguments, r = t ? t.apply(this, o) : o[0], s = n.cache;
    if (s.has(r))
      return s.get(r);
    var a = e10.apply(this, o);
    return n.cache = s.set(r, a) || s, a;
  };
  return n.cache = new (Eg.Cache || ai)(), n;
}
Eg.Cache = ai;
var F5 = 500;
function N5(e10) {
  var t = Eg(e10, function(o) {
    return n.size === F5 && n.clear(), o;
  }), n = t.cache;
  return t;
}
var $5 = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
var V5 = /\\(\\)?/g;
var _5 = N5(function(e10) {
  var t = [];
  return e10.charCodeAt(0) === 46 && t.push(""), e10.replace($5, function(n, o, r, s) {
    t.push(r ? s.replace(V5, "$1") : o || n);
  }), t;
});
var L5 = 1 / 0;
function B5(e10) {
  if (typeof e10 == "string" || Rg(e10))
    return e10;
  var t = e10 + "";
  return t == "0" && 1 / e10 == -L5 ? "-0" : t;
}
var z5 = 1 / 0;
var vy = Qr ? Qr.prototype : void 0;
var yy = vy ? vy.toString : void 0;
function kS(e10) {
  if (typeof e10 == "string")
    return e10;
  if (kl(e10))
    return MS(e10, kS) + "";
  if (Rg(e10))
    return yy ? yy.call(e10) : "";
  var t = e10 + "";
  return t == "0" && 1 / e10 == -z5 ? "-0" : t;
}
function W5(e10) {
  return e10 == null ? "" : kS(e10);
}
function FS(e10) {
  return kl(e10) ? MS(e10, B5) : Rg(e10) ? [e10] : IS(_5(W5(e10)));
}
function yn() {
  return yn = Object.assign || function(e10) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var o in n)
        Object.prototype.hasOwnProperty.call(n, o) && (e10[o] = n[o]);
    }
    return e10;
  }, yn.apply(this, arguments);
}
function NS(e10, t) {
  if (e10 == null) return {};
  var n = {}, o = Object.keys(e10), r, s;
  for (s = 0; s < o.length; s++)
    r = o[s], !(t.indexOf(r) >= 0) && (n[r] = e10[r]);
  return n;
}
var md = (0, import_react.createContext)(void 0);
md.displayName = "FormikContext";
md.Provider;
md.Consumer;
function H5() {
  var e10 = (0, import_react.useContext)(md);
  return e10 || (true ? fs(false, "Formik context is undefined, please verify you are calling useFormikContext() as child of a <Formik> component.") : fs()), e10;
}
var Mo = function(t) {
  return typeof t == "function";
};
var gd = function(t) {
  return t !== null && typeof t == "object";
};
var G5 = function(t) {
  return String(Math.floor(Number(t))) === t;
};
var Rp = function(t) {
  return Object.prototype.toString.call(t) === "[object String]";
};
var Ep = function(t) {
  return gd(t) && Mo(t.then);
};
function U5(e10) {
  if (e10 = e10 || (typeof document < "u" ? document : void 0), typeof e10 > "u")
    return null;
  try {
    return e10.activeElement || e10.body;
  } catch {
    return e10.body;
  }
}
function Kn(e10, t, n, o) {
  o === void 0 && (o = 0);
  for (var r = FS(t); e10 && o < r.length; )
    e10 = e10[r[o++]];
  return o !== r.length && !e10 || e10 === void 0 ? n : e10;
}
function Ii(e10, t, n) {
  for (var o = by(e10), r = o, s = 0, a = FS(t); s < a.length - 1; s++) {
    var l = a[s], c = Kn(e10, a.slice(0, s + 1));
    if (c && (gd(c) || Array.isArray(c)))
      r = r[l] = by(c);
    else {
      var u = a[s + 1];
      r = r[l] = G5(u) && Number(u) >= 0 ? [] : {};
    }
  }
  return (s === 0 ? e10 : r)[a[s]] === n ? e10 : (n === void 0 ? delete r[a[s]] : r[a[s]] = n, s === 0 && n === void 0 && delete o[a[s]], o);
}
function $S(e10, t, n, o) {
  n === void 0 && (n = /* @__PURE__ */ new WeakMap()), o === void 0 && (o = {});
  for (var r = 0, s = Object.keys(e10); r < s.length; r++) {
    var a = s[r], l = e10[a];
    gd(l) ? n.get(l) || (n.set(l, true), o[a] = Array.isArray(l) ? [] : {}, $S(l, t, n, o[a])) : o[a] = t;
  }
  return o;
}
function X5(e10, t) {
  switch (t.type) {
    case "SET_VALUES":
      return yn({}, e10, {
        values: t.payload
      });
    case "SET_TOUCHED":
      return yn({}, e10, {
        touched: t.payload
      });
    case "SET_ERRORS":
      return gi(e10.errors, t.payload) ? e10 : yn({}, e10, {
        errors: t.payload
      });
    case "SET_STATUS":
      return yn({}, e10, {
        status: t.payload
      });
    case "SET_ISSUBMITTING":
      return yn({}, e10, {
        isSubmitting: t.payload
      });
    case "SET_ISVALIDATING":
      return yn({}, e10, {
        isValidating: t.payload
      });
    case "SET_FIELD_VALUE":
      return yn({}, e10, {
        values: Ii(e10.values, t.payload.field, t.payload.value)
      });
    case "SET_FIELD_TOUCHED":
      return yn({}, e10, {
        touched: Ii(e10.touched, t.payload.field, t.payload.value)
      });
    case "SET_FIELD_ERROR":
      return yn({}, e10, {
        errors: Ii(e10.errors, t.payload.field, t.payload.value)
      });
    case "RESET_FORM":
      return yn({}, e10, t.payload);
    case "SET_FORMIK_STATE":
      return t.payload(e10);
    case "SUBMIT_ATTEMPT":
      return yn({}, e10, {
        touched: $S(e10.values, true),
        isSubmitting: true,
        submitCount: e10.submitCount + 1
      });
    case "SUBMIT_FAILURE":
      return yn({}, e10, {
        isSubmitting: false
      });
    case "SUBMIT_SUCCESS":
      return yn({}, e10, {
        isSubmitting: false
      });
    default:
      return e10;
  }
}
var ui = {};
var ac = {};
function Y5(e10) {
  var t = e10.validateOnChange, n = t === void 0 ? true : t, o = e10.validateOnBlur, r = o === void 0 ? true : o, s = e10.validateOnMount, a = s === void 0 ? false : s, l = e10.isInitialValid, c = e10.enableReinitialize, u = c === void 0 ? false : c, d = e10.onSubmit, p = NS(e10, ["validateOnChange", "validateOnBlur", "validateOnMount", "isInitialValid", "enableReinitialize", "onSubmit"]), m = yn({
    validateOnChange: n,
    validateOnBlur: r,
    validateOnMount: a,
    onSubmit: d
  }, p), g = (0, import_react.useRef)(m.initialValues), b = (0, import_react.useRef)(m.initialErrors || ui), v = (0, import_react.useRef)(m.initialTouched || ac), h = (0, import_react.useRef)(m.initialStatus), y = (0, import_react.useRef)(false), C = (0, import_react.useRef)({});
  (0, import_react.useEffect)(function() {
    typeof l > "u" || (true ? fs(false, "isInitialValid has been deprecated and will be removed in future versions of Formik. Please use initialErrors or validateOnMount instead.") : fs());
  }, []), (0, import_react.useEffect)(function() {
    return y.current = true, function() {
      y.current = false;
    };
  }, []);
  var x = (0, import_react.useState)(0), T = x[1], w = (0, import_react.useRef)({
    values: sc(m.initialValues),
    errors: sc(m.initialErrors) || ui,
    touched: sc(m.initialTouched) || ac,
    status: sc(m.initialStatus),
    isSubmitting: false,
    isValidating: false,
    submitCount: 0
  }), R = w.current, E = (0, import_react.useCallback)(function(re) {
    var X = w.current;
    w.current = X5(X, re), X !== w.current && T(function(ae) {
      return ae + 1;
    });
  }, []), O = (0, import_react.useCallback)(function(re, X) {
    return new Promise(function(ae, ce) {
      var ge = m.validate(re, X);
      ge == null ? ae(ui) : Ep(ge) ? ge.then(function(Se) {
        ae(Se || ui);
      }, function(Se) {
        console.warn("Warning: An unhandled error was caught during validation in <Formik validate />", Se), ce(Se);
      }) : ae(ge);
    });
  }, [m.validate]), I = (0, import_react.useCallback)(function(re, X) {
    var ae = m.validationSchema, ce = Mo(ae) ? ae(X) : ae, ge = X && ce.validateAt ? ce.validateAt(X, re) : q5(re, ce);
    return new Promise(function(Se, ye) {
      ge.then(function() {
        Se(ui);
      }, function(Ee) {
        Ee.name === "ValidationError" ? Se(Z5(Ee)) : (console.warn("Warning: An unhandled error was caught during validation in <Formik validationSchema />", Ee), ye(Ee));
      });
    });
  }, [m.validationSchema]), P = (0, import_react.useCallback)(function(re, X) {
    return new Promise(function(ae) {
      return ae(C.current[re].validate(X));
    });
  }, []), A = (0, import_react.useCallback)(function(re) {
    var X = Object.keys(C.current).filter(function(ce) {
      return Mo(C.current[ce].validate);
    }), ae = X.length > 0 ? X.map(function(ce) {
      return P(ce, Kn(re, ce));
    }) : [Promise.resolve("DO_NOT_DELETE_YOU_WILL_BE_FIRED")];
    return Promise.all(ae).then(function(ce) {
      return ce.reduce(function(ge, Se, ye) {
        return Se === "DO_NOT_DELETE_YOU_WILL_BE_FIRED" || Se && (ge = Ii(ge, X[ye], Se)), ge;
      }, {});
    });
  }, [P]), M = (0, import_react.useCallback)(function(re) {
    return Promise.all([A(re), m.validationSchema ? I(re) : {}, m.validate ? O(re) : {}]).then(function(X) {
      var ae = X[0], ce = X[1], ge = X[2], Se = Vf.all([ae, ce, ge], {
        arrayMerge: J5
      });
      return Se;
    });
  }, [m.validate, m.validationSchema, A, O, I]), F = ho(function(re) {
    return re === void 0 && (re = R.values), E({
      type: "SET_ISVALIDATING",
      payload: true
    }), M(re).then(function(X) {
      return y.current && (E({
        type: "SET_ISVALIDATING",
        payload: false
      }), E({
        type: "SET_ERRORS",
        payload: X
      })), X;
    });
  });
  (0, import_react.useEffect)(function() {
    a && y.current === true && gi(g.current, m.initialValues) && F(g.current);
  }, [a, F]);
  var D = (0, import_react.useCallback)(function(re) {
    var X = re && re.values ? re.values : g.current, ae = re && re.errors ? re.errors : b.current ? b.current : m.initialErrors || {}, ce = re && re.touched ? re.touched : v.current ? v.current : m.initialTouched || {}, ge = re && re.status ? re.status : h.current ? h.current : m.initialStatus;
    g.current = X, b.current = ae, v.current = ce, h.current = ge;
    var Se = function() {
      E({
        type: "RESET_FORM",
        payload: {
          isSubmitting: !!re && !!re.isSubmitting,
          errors: ae,
          touched: ce,
          status: ge,
          values: X,
          isValidating: !!re && !!re.isValidating,
          submitCount: re && re.submitCount && typeof re.submitCount == "number" ? re.submitCount : 0
        }
      });
    };
    if (m.onReset) {
      var ye = m.onReset(R.values, Z);
      Ep(ye) ? ye.then(Se) : Se();
    } else
      Se();
  }, [m.initialErrors, m.initialStatus, m.initialTouched, m.onReset]);
  (0, import_react.useEffect)(function() {
    y.current === true && !gi(g.current, m.initialValues) && u && (g.current = m.initialValues, D(), a && F(g.current));
  }, [u, m.initialValues, D, a, F]), (0, import_react.useEffect)(function() {
    u && y.current === true && !gi(b.current, m.initialErrors) && (b.current = m.initialErrors || ui, E({
      type: "SET_ERRORS",
      payload: m.initialErrors || ui
    }));
  }, [u, m.initialErrors]), (0, import_react.useEffect)(function() {
    u && y.current === true && !gi(v.current, m.initialTouched) && (v.current = m.initialTouched || ac, E({
      type: "SET_TOUCHED",
      payload: m.initialTouched || ac
    }));
  }, [u, m.initialTouched]), (0, import_react.useEffect)(function() {
    u && y.current === true && !gi(h.current, m.initialStatus) && (h.current = m.initialStatus, E({
      type: "SET_STATUS",
      payload: m.initialStatus
    }));
  }, [u, m.initialStatus, m.initialTouched]);
  var N = ho(function(re) {
    if (C.current[re] && Mo(C.current[re].validate)) {
      var X = Kn(R.values, re), ae = C.current[re].validate(X);
      return Ep(ae) ? (E({
        type: "SET_ISVALIDATING",
        payload: true
      }), ae.then(function(ce) {
        return ce;
      }).then(function(ce) {
        E({
          type: "SET_FIELD_ERROR",
          payload: {
            field: re,
            value: ce
          }
        }), E({
          type: "SET_ISVALIDATING",
          payload: false
        });
      })) : (E({
        type: "SET_FIELD_ERROR",
        payload: {
          field: re,
          value: ae
        }
      }), Promise.resolve(ae));
    } else if (m.validationSchema)
      return E({
        type: "SET_ISVALIDATING",
        payload: true
      }), I(R.values, re).then(function(ce) {
        return ce;
      }).then(function(ce) {
        E({
          type: "SET_FIELD_ERROR",
          payload: {
            field: re,
            value: Kn(ce, re)
          }
        }), E({
          type: "SET_ISVALIDATING",
          payload: false
        });
      });
    return Promise.resolve();
  }), j = (0, import_react.useCallback)(function(re, X) {
    var ae = X.validate;
    C.current[re] = {
      validate: ae
    };
  }, []), _ = (0, import_react.useCallback)(function(re) {
    delete C.current[re];
  }, []), z = ho(function(re, X) {
    E({
      type: "SET_TOUCHED",
      payload: re
    });
    var ae = X === void 0 ? r : X;
    return ae ? F(R.values) : Promise.resolve();
  }), $ = (0, import_react.useCallback)(function(re) {
    E({
      type: "SET_ERRORS",
      payload: re
    });
  }, []), k = ho(function(re, X) {
    var ae = Mo(re) ? re(R.values) : re;
    E({
      type: "SET_VALUES",
      payload: ae
    });
    var ce = X === void 0 ? n : X;
    return ce ? F(ae) : Promise.resolve();
  }), B = (0, import_react.useCallback)(function(re, X) {
    E({
      type: "SET_FIELD_ERROR",
      payload: {
        field: re,
        value: X
      }
    });
  }, []), Q = ho(function(re, X, ae) {
    E({
      type: "SET_FIELD_VALUE",
      payload: {
        field: re,
        value: X
      }
    });
    var ce = ae === void 0 ? n : ae;
    return ce ? F(Ii(R.values, re, X)) : Promise.resolve();
  }), ee = (0, import_react.useCallback)(function(re, X) {
    var ae = X, ce = re, ge;
    if (!Rp(re)) {
      re.persist && re.persist();
      var Se = re.target ? re.target : re.currentTarget, ye = Se.type, Ee = Se.name, Le = Se.id, Ae = Se.value, tt = Se.checked, Ze = Se.outerHTML, ut = Se.options, me = Se.multiple;
      ae = X || Ee || Le, !ae && true && xy({
        htmlContent: Ze,
        documentationAnchorLink: "handlechange-e-reactchangeeventany--void",
        handlerName: "handleChange"
      }), ce = /number|range/.test(ye) ? (ge = parseFloat(Ae), isNaN(ge) ? "" : ge) : /checkbox/.test(ye) ? Q5(Kn(R.values, ae), tt, Ae) : ut && me ? K5(ut) : Ae;
    }
    ae && Q(ae, ce);
  }, [Q, R.values]), G = ho(function(re) {
    if (Rp(re))
      return function(X) {
        return ee(X, re);
      };
    ee(re);
  }), H = ho(function(re, X, ae) {
    X === void 0 && (X = true), E({
      type: "SET_FIELD_TOUCHED",
      payload: {
        field: re,
        value: X
      }
    });
    var ce = ae === void 0 ? r : ae;
    return ce ? F(R.values) : Promise.resolve();
  }), Y = (0, import_react.useCallback)(function(re, X) {
    re.persist && re.persist();
    var ae = re.target, ce = ae.name, ge = ae.id, Se = ae.outerHTML, ye = X || ce || ge;
    !ye && true && xy({
      htmlContent: Se,
      documentationAnchorLink: "handleblur-e-any--void",
      handlerName: "handleBlur"
    }), H(ye, true);
  }, [H]), J = ho(function(re) {
    if (Rp(re))
      return function(X) {
        return Y(X, re);
      };
    Y(re);
  }), U = (0, import_react.useCallback)(function(re) {
    Mo(re) ? E({
      type: "SET_FORMIK_STATE",
      payload: re
    }) : E({
      type: "SET_FORMIK_STATE",
      payload: function() {
        return re;
      }
    });
  }, []), ne = (0, import_react.useCallback)(function(re) {
    E({
      type: "SET_STATUS",
      payload: re
    });
  }, []), se = (0, import_react.useCallback)(function(re) {
    E({
      type: "SET_ISSUBMITTING",
      payload: re
    });
  }, []), oe = ho(function() {
    return E({
      type: "SUBMIT_ATTEMPT"
    }), F().then(function(re) {
      var X = re instanceof Error, ae = !X && Object.keys(re).length === 0;
      if (ae) {
        var ce;
        try {
          if (ce = L(), ce === void 0)
            return;
        } catch (ge) {
          throw ge;
        }
        return Promise.resolve(ce).then(function(ge) {
          return y.current && E({
            type: "SUBMIT_SUCCESS"
          }), ge;
        }).catch(function(ge) {
          if (y.current)
            throw E({
              type: "SUBMIT_FAILURE"
            }), ge;
        });
      } else if (y.current && (E({
        type: "SUBMIT_FAILURE"
      }), X))
        throw re;
    });
  }), W = ho(function(re) {
    if (re && re.preventDefault && Mo(re.preventDefault) && re.preventDefault(), re && re.stopPropagation && Mo(re.stopPropagation) && re.stopPropagation(), typeof document < "u") {
      var X = U5();
      X !== null && X instanceof HTMLButtonElement && (X.attributes && X.attributes.getNamedItem("type") || (true ? fs(false, 'You submitted a Formik form using a button with an unspecified `type` attribute.  Most browsers default button elements to `type="submit"`. If this is not a submit button, please add `type="button"`.') : fs()));
    }
    oe().catch(function(ae) {
      console.warn("Warning: An unhandled error was caught from submitForm()", ae);
    });
  }), Z = {
    resetForm: D,
    validateForm: F,
    validateField: N,
    setErrors: $,
    setFieldError: B,
    setFieldTouched: H,
    setFieldValue: Q,
    setStatus: ne,
    setSubmitting: se,
    setTouched: z,
    setValues: k,
    setFormikState: U,
    submitForm: oe
  }, L = ho(function() {
    return d(R.values, Z);
  }), ie = ho(function(re) {
    re && re.preventDefault && Mo(re.preventDefault) && re.preventDefault(), re && re.stopPropagation && Mo(re.stopPropagation) && re.stopPropagation(), D();
  }), te = (0, import_react.useCallback)(function(re) {
    return {
      value: Kn(R.values, re),
      error: Kn(R.errors, re),
      touched: !!Kn(R.touched, re),
      initialValue: Kn(g.current, re),
      initialTouched: !!Kn(v.current, re),
      initialError: Kn(b.current, re)
    };
  }, [R.errors, R.touched, R.values]), le = (0, import_react.useCallback)(function(re) {
    return {
      setValue: function(ae, ce) {
        return Q(re, ae, ce);
      },
      setTouched: function(ae, ce) {
        return H(re, ae, ce);
      },
      setError: function(ae) {
        return B(re, ae);
      }
    };
  }, [Q, H, B]), ue = (0, import_react.useCallback)(function(re) {
    var X = gd(re), ae = X ? re.name : re, ce = Kn(R.values, ae), ge = {
      name: ae,
      value: ce,
      onChange: G,
      onBlur: J
    };
    if (X) {
      var Se = re.type, ye = re.value, Ee = re.as, Le = re.multiple;
      Se === "checkbox" ? ye === void 0 ? ge.checked = !!ce : (ge.checked = !!(Array.isArray(ce) && ~ce.indexOf(ye)), ge.value = ye) : Se === "radio" ? (ge.checked = ce === ye, ge.value = ye) : Ee === "select" && Le && (ge.value = ge.value || [], ge.multiple = true);
    }
    return ge;
  }, [J, G, R.values]), ve = (0, import_react.useMemo)(function() {
    return !gi(g.current, R.values);
  }, [g.current, R.values]), Te = (0, import_react.useMemo)(function() {
    return typeof l < "u" ? ve ? R.errors && Object.keys(R.errors).length === 0 : l !== false && Mo(l) ? l(m) : l : R.errors && Object.keys(R.errors).length === 0;
  }, [l, ve, R.errors, m]), Re = yn({}, R, {
    initialValues: g.current,
    initialErrors: b.current,
    initialTouched: v.current,
    initialStatus: h.current,
    handleBlur: J,
    handleChange: G,
    handleReset: ie,
    handleSubmit: W,
    resetForm: D,
    setErrors: $,
    setFormikState: U,
    setFieldTouched: H,
    setFieldValue: Q,
    setFieldError: B,
    setStatus: ne,
    setSubmitting: se,
    setTouched: z,
    setValues: k,
    submitForm: oe,
    validateForm: F,
    validateField: N,
    isValid: Te,
    dirty: ve,
    unregisterField: _,
    registerField: j,
    getFieldProps: ue,
    getFieldMeta: te,
    getFieldHelpers: le,
    validateOnBlur: r,
    validateOnChange: n,
    validateOnMount: a
  });
  return Re;
}
function xy(e10) {
  var t = e10.htmlContent, n = e10.documentationAnchorLink, o = e10.handlerName;
  console.warn("Warning: Formik called `" + o + "`, but you forgot to pass an `id` or `name` attribute to your input:\n    " + t + `
    Formik cannot determine which value to update. For more info see https://formik.org/docs/api/formik#` + n + `
  `);
}
function Z5(e10) {
  var t = {};
  if (e10.inner) {
    if (e10.inner.length === 0)
      return Ii(t, e10.path, e10.message);
    for (var r = e10.inner, n = Array.isArray(r), o = 0, r = n ? r : r[Symbol.iterator](); ; ) {
      var s;
      if (n) {
        if (o >= r.length) break;
        s = r[o++];
      } else {
        if (o = r.next(), o.done) break;
        s = o.value;
      }
      var a = s;
      Kn(t, a.path) || (t = Ii(t, a.path, a.message));
    }
  }
  return t;
}
function q5(e10, t, n, o) {
  n === void 0 && (n = false);
  var r = Hf(e10);
  return t[n ? "validateSync" : "validate"](r, {
    abortEarly: false,
    context: r
  });
}
function Hf(e10) {
  var t = Array.isArray(e10) ? [] : {};
  for (var n in e10)
    if (Object.prototype.hasOwnProperty.call(e10, n)) {
      var o = String(n);
      Array.isArray(e10[o]) === true ? t[o] = e10[o].map(function(r) {
        return Array.isArray(r) === true || Xv(r) ? Hf(r) : r !== "" ? r : void 0;
      }) : Xv(e10[o]) ? t[o] = Hf(e10[o]) : t[o] = e10[o] !== "" ? e10[o] : void 0;
    }
  return t;
}
function J5(e10, t, n) {
  var o = e10.slice();
  return t.forEach(function(s, a) {
    if (typeof o[a] > "u") {
      var l = n.clone !== false, c = l && n.isMergeableObject(s);
      o[a] = c ? Vf(Array.isArray(s) ? [] : {}, s, n) : s;
    } else n.isMergeableObject(s) ? o[a] = Vf(e10[a], s, n) : e10.indexOf(s) === -1 && o.push(s);
  }), o;
}
function K5(e10) {
  return Array.from(e10).filter(function(t) {
    return t.selected;
  }).map(function(t) {
    return t.value;
  });
}
function Q5(e10, t, n) {
  if (typeof e10 == "boolean")
    return !!t;
  var o = [], r = false, s = -1;
  if (Array.isArray(e10))
    o = e10, s = e10.indexOf(n), r = s >= 0;
  else if (!n || n == "true" || n == "false")
    return !!t;
  return t && n && !r ? o.concat(n) : r ? o.slice(0, s).concat(o.slice(s + 1)) : o;
}
var ez = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u" ? import_react.useLayoutEffect : import_react.useEffect;
function ho(e10) {
  var t = (0, import_react.useRef)(e10);
  return ez(function() {
    t.current = e10;
  }), (0, import_react.useCallback)(function() {
    for (var n = arguments.length, o = new Array(n), r = 0; r < n; r++)
      o[r] = arguments[r];
    return t.current.apply(void 0, o);
  }, []);
}
var tz = (0, import_react.forwardRef)(function(e10, t) {
  var n = e10.action, o = NS(e10, ["action"]), r = n ?? "#", s = H5(), a = s.handleReset, l = s.handleSubmit;
  return (0, import_react.createElement)("form", yn({
    onSubmit: l,
    ref: t,
    onReset: a,
    action: r
  }, o));
});
tz.displayName = "Form";
function Hi(e10) {
  this._maxSize = e10, this.clear();
}
Hi.prototype.clear = function() {
  this._size = 0, this._values = /* @__PURE__ */ Object.create(null);
};
Hi.prototype.get = function(e10) {
  return this._values[e10];
};
Hi.prototype.set = function(e10, t) {
  return this._size >= this._maxSize && this.clear(), e10 in this._values || this._size++, this._values[e10] = t;
};
var nz = /[^.^\]^[]+|(?=\[\]|\.\.)/g;
var VS = /^\d+$/;
var oz = /^\d/;
var rz = /[~`!#$%\^&*+=\-\[\]\\';,/{}|\\":<>\?]/g;
var iz = /^\s*(['"]?)(.*?)(\1)\s*$/;
var Og = 512;
var Cy = new Hi(Og);
var Sy = new Hi(Og);
var wy = new Hi(Og);
var Ri = {
  Cache: Hi,
  split: Gf,
  normalizePath: Op,
  setter: function(e10) {
    var t = Op(e10);
    return Sy.get(e10) || Sy.set(e10, function(o, r) {
      for (var s = 0, a = t.length, l = o; s < a - 1; ) {
        var c = t[s];
        if (c === "__proto__" || c === "constructor" || c === "prototype")
          return o;
        l = l[t[s++]];
      }
      l[t[s]] = r;
    });
  },
  getter: function(e10, t) {
    var n = Op(e10);
    return wy.get(e10) || wy.set(e10, function(r) {
      for (var s = 0, a = n.length; s < a; )
        if (r != null || !t) r = r[n[s++]];
        else return;
      return r;
    });
  },
  join: function(e10) {
    return e10.reduce(function(t, n) {
      return t + (Pg(n) || VS.test(n) ? "[" + n + "]" : (t ? "." : "") + n);
    }, "");
  },
  forEach: function(e10, t, n) {
    sz(Array.isArray(e10) ? e10 : Gf(e10), t, n);
  }
};
function Op(e10) {
  return Cy.get(e10) || Cy.set(
    e10,
    Gf(e10).map(function(t) {
      return t.replace(iz, "$2");
    })
  );
}
function Gf(e10) {
  return e10.match(nz) || [""];
}
function sz(e10, t, n) {
  var o = e10.length, r, s, a, l;
  for (s = 0; s < o; s++)
    r = e10[s], r && (cz(r) && (r = '"' + r + '"'), l = Pg(r), a = !l && /^\d+$/.test(r), t.call(n, r, l, a, s, e10));
}
function Pg(e10) {
  return typeof e10 == "string" && e10 && ["'", '"'].indexOf(e10.charAt(0)) !== -1;
}
function az(e10) {
  return e10.match(oz) && !e10.match(VS);
}
function lz(e10) {
  return rz.test(e10);
}
function cz(e10) {
  return !Pg(e10) && (az(e10) || lz(e10));
}
var uz = /[A-Z\xc0-\xd6\xd8-\xde]?[a-z\xdf-\xf6\xf8-\xff]+(?:['’](?:d|ll|m|re|s|t|ve))?(?=[\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000]|[A-Z\xc0-\xd6\xd8-\xde]|$)|(?:[A-Z\xc0-\xd6\xd8-\xde]|[^\ud800-\udfff\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\d+\u2700-\u27bfa-z\xdf-\xf6\xf8-\xffA-Z\xc0-\xd6\xd8-\xde])+(?:['’](?:D|LL|M|RE|S|T|VE))?(?=[\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000]|[A-Z\xc0-\xd6\xd8-\xde](?:[a-z\xdf-\xf6\xf8-\xff]|[^\ud800-\udfff\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\d+\u2700-\u27bfa-z\xdf-\xf6\xf8-\xffA-Z\xc0-\xd6\xd8-\xde])|$)|[A-Z\xc0-\xd6\xd8-\xde]?(?:[a-z\xdf-\xf6\xf8-\xff]|[^\ud800-\udfff\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\d+\u2700-\u27bfa-z\xdf-\xf6\xf8-\xffA-Z\xc0-\xd6\xd8-\xde])+(?:['’](?:d|ll|m|re|s|t|ve))?|[A-Z\xc0-\xd6\xd8-\xde]+(?:['’](?:D|LL|M|RE|S|T|VE))?|\d*(?:1ST|2ND|3RD|(?![123])\dTH)(?=\b|[a-z_])|\d*(?:1st|2nd|3rd|(?![123])\dth)(?=\b|[A-Z_])|\d+|(?:[\u2700-\u27bf]|(?:\ud83c[\udde6-\uddff]){2}|[\ud800-\udbff][\udc00-\udfff])[\ufe0e\ufe0f]?(?:[\u0300-\u036f\ufe20-\ufe2f\u20d0-\u20ff]|\ud83c[\udffb-\udfff])?(?:\u200d(?:[^\ud800-\udfff]|(?:\ud83c[\udde6-\uddff]){2}|[\ud800-\udbff][\udc00-\udfff])[\ufe0e\ufe0f]?(?:[\u0300-\u036f\ufe20-\ufe2f\u20d0-\u20ff]|\ud83c[\udffb-\udfff])?)*/g;
var hd = (e10) => e10.match(uz) || [];
var bd = (e10) => e10[0].toUpperCase() + e10.slice(1);
var Ag = (e10, t) => hd(e10).join(t).toLowerCase();
var _S = (e10) => hd(e10).reduce(
  (t, n) => `${t}${t ? n[0].toUpperCase() + n.slice(1).toLowerCase() : n.toLowerCase()}`,
  ""
);
var dz = (e10) => bd(_S(e10));
var pz = (e10) => Ag(e10, "_");
var fz = (e10) => Ag(e10, "-");
var mz = (e10) => bd(Ag(e10, " "));
var gz = (e10) => hd(e10).map(bd).join(" ");
var Pp = {
  words: hd,
  upperFirst: bd,
  camelCase: _S,
  pascalCase: dz,
  snakeCase: pz,
  kebabCase: fz,
  sentenceCase: mz,
  titleCase: gz
};
var jg = { exports: {} };
jg.exports = function(e10) {
  return LS(hz(e10), e10);
};
jg.exports.array = LS;
function LS(e10, t) {
  var n = e10.length, o = new Array(n), r = {}, s = n, a = bz(t), l = vz(e10);
  for (t.forEach(function(u) {
    if (!l.has(u[0]) || !l.has(u[1]))
      throw new Error("Unknown node. There is an unknown node in the supplied edges.");
  }); s--; )
    r[s] || c(e10[s], s, /* @__PURE__ */ new Set());
  return o;
  function c(u, d, p) {
    if (p.has(u)) {
      var m;
      try {
        m = ", node was:" + JSON.stringify(u);
      } catch {
        m = "";
      }
      throw new Error("Cyclic dependency" + m);
    }
    if (!l.has(u))
      throw new Error("Found unknown node. Make sure to provided all involved nodes. Unknown node: " + JSON.stringify(u));
    if (!r[d]) {
      r[d] = true;
      var g = a.get(u) || /* @__PURE__ */ new Set();
      if (g = Array.from(g), d = g.length) {
        p.add(u);
        do {
          var b = g[--d];
          c(b, l.get(b), p);
        } while (d);
        p.delete(u);
      }
      o[--n] = u;
    }
  }
}
function hz(e10) {
  for (var t = /* @__PURE__ */ new Set(), n = 0, o = e10.length; n < o; n++) {
    var r = e10[n];
    t.add(r[0]), t.add(r[1]);
  }
  return Array.from(t);
}
function bz(e10) {
  for (var t = /* @__PURE__ */ new Map(), n = 0, o = e10.length; n < o; n++) {
    var r = e10[n];
    t.has(r[0]) || t.set(r[0], /* @__PURE__ */ new Set()), t.has(r[1]) || t.set(r[1], /* @__PURE__ */ new Set()), t.get(r[0]).add(r[1]);
  }
  return t;
}
function vz(e10) {
  for (var t = /* @__PURE__ */ new Map(), n = 0, o = e10.length; n < o; n++)
    t.set(e10[n], n);
  return t;
}
var yz = jg.exports;
var xz = Cm(yz);
var Cz = Object.prototype.toString;
var Sz = Error.prototype.toString;
var wz = RegExp.prototype.toString;
var Tz = typeof Symbol < "u" ? Symbol.prototype.toString : () => "";
var Iz = /^Symbol\((.*)\)(.*)$/;
function Rz(e10) {
  return e10 != +e10 ? "NaN" : e10 === 0 && 1 / e10 < 0 ? "-0" : "" + e10;
}
function Ty(e10, t = false) {
  if (e10 == null || e10 === true || e10 === false) return "" + e10;
  const n = typeof e10;
  if (n === "number") return Rz(e10);
  if (n === "string") return t ? `"${e10}"` : e10;
  if (n === "function") return "[Function " + (e10.name || "anonymous") + "]";
  if (n === "symbol") return Tz.call(e10).replace(Iz, "Symbol($1)");
  const o = Cz.call(e10).slice(8, -1);
  return o === "Date" ? isNaN(e10.getTime()) ? "" + e10 : e10.toISOString(e10) : o === "Error" || e10 instanceof Error ? "[" + Sz.call(e10) + "]" : o === "RegExp" ? wz.call(e10) : null;
}
function Ur(e10, t) {
  let n = Ty(e10, t);
  return n !== null ? n : JSON.stringify(e10, function(o, r) {
    let s = Ty(this[o], t);
    return s !== null ? s : r;
  }, 2);
}
function BS(e10) {
  return e10 == null ? [] : [].concat(e10);
}
var zS;
var WS;
var HS;
var Ez = /\$\{\s*(\w+)\s*\}/g;
zS = Symbol.toStringTag;
var Iy = class {
  constructor(t, n, o, r) {
    this.name = void 0, this.message = void 0, this.value = void 0, this.path = void 0, this.type = void 0, this.params = void 0, this.errors = void 0, this.inner = void 0, this[zS] = "Error", this.name = "ValidationError", this.value = n, this.path = o, this.type = r, this.errors = [], this.inner = [], BS(t).forEach((s) => {
      if (Wn.isError(s)) {
        this.errors.push(...s.errors);
        const a = s.inner.length ? s.inner : [s];
        this.inner.push(...a);
      } else
        this.errors.push(s);
    }), this.message = this.errors.length > 1 ? `${this.errors.length} errors occurred` : this.errors[0];
  }
};
WS = Symbol.hasInstance;
HS = Symbol.toStringTag;
var Wn = class _Wn extends Error {
  static formatError(t, n) {
    const o = n.label || n.path || "this";
    return o !== n.path && (n = Object.assign({}, n, {
      path: o
    })), typeof t == "string" ? t.replace(Ez, (r, s) => Ur(n[s])) : typeof t == "function" ? t(n) : t;
  }
  static isError(t) {
    return t && t.name === "ValidationError";
  }
  constructor(t, n, o, r, s) {
    const a = new Iy(t, n, o, r);
    if (s)
      return a;
    super(), this.value = void 0, this.path = void 0, this.type = void 0, this.params = void 0, this.errors = [], this.inner = [], this[HS] = "Error", this.name = a.name, this.message = a.message, this.type = a.type, this.value = a.value, this.path = a.path, this.errors = a.errors, this.inner = a.inner, Error.captureStackTrace && Error.captureStackTrace(this, _Wn);
  }
  static [WS](t) {
    return Iy[Symbol.hasInstance](t) || super[Symbol.hasInstance](t);
  }
};
var Yo = {
  default: "${path} is invalid",
  required: "${path} is a required field",
  defined: "${path} must be defined",
  notNull: "${path} cannot be null",
  oneOf: "${path} must be one of the following values: ${values}",
  notOneOf: "${path} must not be one of the following values: ${values}",
  notType: ({
    path: e10,
    type: t,
    value: n,
    originalValue: o
  }) => {
    const r = o != null && o !== n ? ` (cast from the value \`${Ur(o, true)}\`).` : ".";
    return t !== "mixed" ? `${e10} must be a \`${t}\` type, but the final value was: \`${Ur(n, true)}\`` + r : `${e10} must match the configured type. The validated value was: \`${Ur(n, true)}\`` + r;
  }
};
var zn = {
  length: "${path} must be exactly ${length} characters",
  min: "${path} must be at least ${min} characters",
  max: "${path} must be at most ${max} characters",
  matches: '${path} must match the following: "${regex}"',
  email: "${path} must be a valid email",
  url: "${path} must be a valid URL",
  uuid: "${path} must be a valid UUID",
  datetime: "${path} must be a valid ISO date-time",
  datetime_precision: "${path} must be a valid ISO date-time with a sub-second precision of exactly ${precision} digits",
  datetime_offset: '${path} must be a valid ISO date-time with UTC "Z" timezone',
  trim: "${path} must be a trimmed string",
  lowercase: "${path} must be a lowercase string",
  uppercase: "${path} must be a upper case string"
};
var Oz = {
  min: "${path} must be greater than or equal to ${min}",
  max: "${path} must be less than or equal to ${max}",
  lessThan: "${path} must be less than ${less}",
  moreThan: "${path} must be greater than ${more}",
  positive: "${path} must be a positive number",
  negative: "${path} must be a negative number",
  integer: "${path} must be an integer"
};
var Uf = {
  min: "${path} field must be later than ${min}",
  max: "${path} field must be at earlier than ${max}"
};
var Pz = {
  isValue: "${path} field must be ${value}"
};
var Xf = {
  noUnknown: "${path} field has unspecified keys: ${unknown}"
};
var Az = {
  min: "${path} field must have at least ${min} items",
  max: "${path} field must have less than or equal to ${max} items",
  length: "${path} must have ${length} items"
};
var jz = {
  notType: (e10) => {
    const {
      path: t,
      value: n,
      spec: o
    } = e10, r = o.types.length;
    if (Array.isArray(n)) {
      if (n.length < r) return `${t} tuple value has too few items, expected a length of ${r} but got ${n.length} for value: \`${Ur(n, true)}\``;
      if (n.length > r) return `${t} tuple value has too many items, expected a length of ${r} but got ${n.length} for value: \`${Ur(n, true)}\``;
    }
    return Wn.formatError(Yo.notType, e10);
  }
};
Object.assign(/* @__PURE__ */ Object.create(null), {
  mixed: Yo,
  string: zn,
  number: Oz,
  date: Uf,
  object: Xf,
  array: Az,
  boolean: Pz,
  tuple: jz
});
var Dg = (e10) => e10 && e10.__isYupSchema__;
var iu = class _iu {
  static fromOptions(t, n) {
    if (!n.then && !n.otherwise) throw new TypeError("either `then:` or `otherwise:` is required for `when()` conditions");
    let {
      is: o,
      then: r,
      otherwise: s
    } = n, a = typeof o == "function" ? o : (...l) => l.every((c) => c === o);
    return new _iu(t, (l, c) => {
      var u;
      let d = a(...l) ? r : s;
      return (u = d == null ? void 0 : d(c)) != null ? u : c;
    });
  }
  constructor(t, n) {
    this.fn = void 0, this.refs = t, this.refs = t, this.fn = n;
  }
  resolve(t, n) {
    let o = this.refs.map((s) => (
      // TODO: ? operator here?
      s.getValue(n == null ? void 0 : n.value, n == null ? void 0 : n.parent, n == null ? void 0 : n.context)
    )), r = this.fn(o, t, n);
    if (r === void 0 || // @ts-ignore this can be base
    r === t)
      return t;
    if (!Dg(r)) throw new TypeError("conditions must return a schema object");
    return r.resolve(n);
  }
};
var lc = {
  context: "$",
  value: "."
};
var Gi = class {
  constructor(t, n = {}) {
    if (this.key = void 0, this.isContext = void 0, this.isValue = void 0, this.isSibling = void 0, this.path = void 0, this.getter = void 0, this.map = void 0, typeof t != "string") throw new TypeError("ref must be a string, got: " + t);
    if (this.key = t.trim(), t === "") throw new TypeError("ref must be a non-empty string");
    this.isContext = this.key[0] === lc.context, this.isValue = this.key[0] === lc.value, this.isSibling = !this.isContext && !this.isValue;
    let o = this.isContext ? lc.context : this.isValue ? lc.value : "";
    this.path = this.key.slice(o.length), this.getter = this.path && Ri.getter(this.path, true), this.map = n.map;
  }
  getValue(t, n, o) {
    let r = this.isContext ? o : this.isValue ? t : n;
    return this.getter && (r = this.getter(r || {})), this.map && (r = this.map(r)), r;
  }
  /**
   *
   * @param {*} value
   * @param {Object} options
   * @param {Object=} options.context
   * @param {Object=} options.parent
   */
  cast(t, n) {
    return this.getValue(t, n == null ? void 0 : n.parent, n == null ? void 0 : n.context);
  }
  resolve() {
    return this;
  }
  describe() {
    return {
      type: "ref",
      key: this.key
    };
  }
  toString() {
    return `Ref(${this.key})`;
  }
  static isRef(t) {
    return t && t.__isYupRef;
  }
};
Gi.prototype.__isYupRef = true;
var Ci = (e10) => e10 == null;
function rs(e10) {
  function t({
    value: n,
    path: o = "",
    options: r,
    originalValue: s,
    schema: a
  }, l, c) {
    const {
      name: u,
      test: d,
      params: p,
      message: m,
      skipAbsent: g
    } = e10;
    let {
      parent: b,
      context: v,
      abortEarly: h = a.spec.abortEarly,
      disableStackTrace: y = a.spec.disableStackTrace
    } = r;
    function C(A) {
      return Gi.isRef(A) ? A.getValue(n, b, v) : A;
    }
    function x(A = {}) {
      const M = Object.assign({
        value: n,
        originalValue: s,
        label: a.spec.label,
        path: A.path || o,
        spec: a.spec,
        disableStackTrace: A.disableStackTrace || y
      }, p, A.params);
      for (const D of Object.keys(M)) M[D] = C(M[D]);
      const F = new Wn(Wn.formatError(A.message || m, M), n, M.path, A.type || u, M.disableStackTrace);
      return F.params = M, F;
    }
    const T = h ? l : c;
    let w = {
      path: o,
      parent: b,
      type: u,
      from: r.from,
      createError: x,
      resolve: C,
      options: r,
      originalValue: s,
      schema: a
    };
    const R = (A) => {
      Wn.isError(A) ? T(A) : A ? c(null) : T(x());
    }, E = (A) => {
      Wn.isError(A) ? T(A) : l(A);
    };
    if (g && Ci(n))
      return R(true);
    let I;
    try {
      var P;
      if (I = d.call(w, n, w), typeof ((P = I) == null ? void 0 : P.then) == "function") {
        if (r.sync)
          throw new Error(`Validation test of type: "${w.type}" returned a Promise during a synchronous validate. This test will finish after the validate call has returned`);
        return Promise.resolve(I).then(R, E);
      }
    } catch (A) {
      E(A);
      return;
    }
    R(I);
  }
  return t.OPTIONS = e10, t;
}
function Dz(e10, t, n, o = n) {
  let r, s, a;
  return t ? (Ri.forEach(t, (l, c, u) => {
    let d = c ? l.slice(1, l.length - 1) : l;
    e10 = e10.resolve({
      context: o,
      parent: r,
      value: n
    });
    let p = e10.type === "tuple", m = u ? parseInt(d, 10) : 0;
    if (e10.innerType || p) {
      if (p && !u) throw new Error(`Yup.reach cannot implicitly index into a tuple type. the path part "${a}" must contain an index to the tuple element, e.g. "${a}[0]"`);
      if (n && m >= n.length)
        throw new Error(`Yup.reach cannot resolve an array item at index: ${l}, in the path: ${t}. because there is no value at that index. `);
      r = n, n = n && n[m], e10 = p ? e10.spec.types[m] : e10.innerType;
    }
    if (!u) {
      if (!e10.fields || !e10.fields[d]) throw new Error(`The schema does not contain the path: ${t}. (failed at: ${a} which is a type: "${e10.type}")`);
      r = n, n = n && n[d], e10 = e10.fields[d];
    }
    s = d, a = c ? "[" + l + "]" : "." + l;
  }), {
    schema: e10,
    parent: r,
    parentPath: s
  }) : {
    parent: r,
    parentPath: t,
    schema: e10
  };
}
var su = class _su extends Set {
  describe() {
    const t = [];
    for (const n of this.values())
      t.push(Gi.isRef(n) ? n.describe() : n);
    return t;
  }
  resolveAll(t) {
    let n = [];
    for (const o of this.values())
      n.push(t(o));
    return n;
  }
  clone() {
    return new _su(this.values());
  }
  merge(t, n) {
    const o = this.clone();
    return t.forEach((r) => o.add(r)), n.forEach((r) => o.delete(r)), o;
  }
};
function ms(e10, t = /* @__PURE__ */ new Map()) {
  if (Dg(e10) || !e10 || typeof e10 != "object") return e10;
  if (t.has(e10)) return t.get(e10);
  let n;
  if (e10 instanceof Date)
    n = new Date(e10.getTime()), t.set(e10, n);
  else if (e10 instanceof RegExp)
    n = new RegExp(e10), t.set(e10, n);
  else if (Array.isArray(e10)) {
    n = new Array(e10.length), t.set(e10, n);
    for (let o = 0; o < e10.length; o++) n[o] = ms(e10[o], t);
  } else if (e10 instanceof Map) {
    n = /* @__PURE__ */ new Map(), t.set(e10, n);
    for (const [o, r] of e10.entries()) n.set(o, ms(r, t));
  } else if (e10 instanceof Set) {
    n = /* @__PURE__ */ new Set(), t.set(e10, n);
    for (const o of e10) n.add(ms(o, t));
  } else if (e10 instanceof Object) {
    n = {}, t.set(e10, n);
    for (const [o, r] of Object.entries(e10)) n[o] = ms(r, t);
  } else
    throw Error(`Unable to clone ${e10}`);
  return n;
}
var ir = class {
  constructor(t) {
    this.type = void 0, this.deps = [], this.tests = void 0, this.transforms = void 0, this.conditions = [], this._mutate = void 0, this.internalTests = {}, this._whitelist = new su(), this._blacklist = new su(), this.exclusiveTests = /* @__PURE__ */ Object.create(null), this._typeCheck = void 0, this.spec = void 0, this.tests = [], this.transforms = [], this.withMutation(() => {
      this.typeError(Yo.notType);
    }), this.type = t.type, this._typeCheck = t.check, this.spec = Object.assign({
      strip: false,
      strict: false,
      abortEarly: true,
      recursive: true,
      disableStackTrace: false,
      nullable: false,
      optional: true,
      coerce: true
    }, t == null ? void 0 : t.spec), this.withMutation((n) => {
      n.nonNullable();
    });
  }
  // TODO: remove
  get _type() {
    return this.type;
  }
  clone(t) {
    if (this._mutate)
      return t && Object.assign(this.spec, t), this;
    const n = Object.create(Object.getPrototypeOf(this));
    return n.type = this.type, n._typeCheck = this._typeCheck, n._whitelist = this._whitelist.clone(), n._blacklist = this._blacklist.clone(), n.internalTests = Object.assign({}, this.internalTests), n.exclusiveTests = Object.assign({}, this.exclusiveTests), n.deps = [...this.deps], n.conditions = [...this.conditions], n.tests = [...this.tests], n.transforms = [...this.transforms], n.spec = ms(Object.assign({}, this.spec, t)), n;
  }
  label(t) {
    let n = this.clone();
    return n.spec.label = t, n;
  }
  meta(...t) {
    if (t.length === 0) return this.spec.meta;
    let n = this.clone();
    return n.spec.meta = Object.assign(n.spec.meta || {}, t[0]), n;
  }
  withMutation(t) {
    let n = this._mutate;
    this._mutate = true;
    let o = t(this);
    return this._mutate = n, o;
  }
  concat(t) {
    if (!t || t === this) return this;
    if (t.type !== this.type && this.type !== "mixed") throw new TypeError(`You cannot \`concat()\` schema's of different types: ${this.type} and ${t.type}`);
    let n = this, o = t.clone();
    const r = Object.assign({}, n.spec, o.spec);
    return o.spec = r, o.internalTests = Object.assign({}, n.internalTests, o.internalTests), o._whitelist = n._whitelist.merge(t._whitelist, t._blacklist), o._blacklist = n._blacklist.merge(t._blacklist, t._whitelist), o.tests = n.tests, o.exclusiveTests = n.exclusiveTests, o.withMutation((s) => {
      t.tests.forEach((a) => {
        s.test(a.OPTIONS);
      });
    }), o.transforms = [...n.transforms, ...o.transforms], o;
  }
  isType(t) {
    return t == null ? !!(this.spec.nullable && t === null || this.spec.optional && t === void 0) : this._typeCheck(t);
  }
  resolve(t) {
    let n = this;
    if (n.conditions.length) {
      let o = n.conditions;
      n = n.clone(), n.conditions = [], n = o.reduce((r, s) => s.resolve(r, t), n), n = n.resolve(t);
    }
    return n;
  }
  resolveOptions(t) {
    var n, o, r, s;
    return Object.assign({}, t, {
      from: t.from || [],
      strict: (n = t.strict) != null ? n : this.spec.strict,
      abortEarly: (o = t.abortEarly) != null ? o : this.spec.abortEarly,
      recursive: (r = t.recursive) != null ? r : this.spec.recursive,
      disableStackTrace: (s = t.disableStackTrace) != null ? s : this.spec.disableStackTrace
    });
  }
  /**
   * Run the configured transform pipeline over an input value.
   */
  cast(t, n = {}) {
    let o = this.resolve(Object.assign({
      value: t
    }, n)), r = n.assert === "ignore-optionality", s = o._cast(t, n);
    if (n.assert !== false && !o.isType(s)) {
      if (r && Ci(s))
        return s;
      let a = Ur(t), l = Ur(s);
      throw new TypeError(`The value of ${n.path || "field"} could not be cast to a value that satisfies the schema type: "${o.type}". 

attempted value: ${a} 
` + (l !== a ? `result of cast: ${l}` : ""));
    }
    return s;
  }
  _cast(t, n) {
    let o = t === void 0 ? t : this.transforms.reduce((r, s) => s.call(this, r, t, this), t);
    return o === void 0 && (o = this.getDefault(n)), o;
  }
  _validate(t, n = {}, o, r) {
    let {
      path: s,
      originalValue: a = t,
      strict: l = this.spec.strict
    } = n, c = t;
    l || (c = this._cast(c, Object.assign({
      assert: false
    }, n)));
    let u = [];
    for (let d of Object.values(this.internalTests))
      d && u.push(d);
    this.runTests({
      path: s,
      value: c,
      originalValue: a,
      options: n,
      tests: u
    }, o, (d) => {
      if (d.length)
        return r(d, c);
      this.runTests({
        path: s,
        value: c,
        originalValue: a,
        options: n,
        tests: this.tests
      }, o, r);
    });
  }
  /**
   * Executes a set of validations, either schema, produced Tests or a nested
   * schema validate result.
   */
  runTests(t, n, o) {
    let r = false, {
      tests: s,
      value: a,
      originalValue: l,
      path: c,
      options: u
    } = t, d = (v) => {
      r || (r = true, n(v, a));
    }, p = (v) => {
      r || (r = true, o(v, a));
    }, m = s.length, g = [];
    if (!m) return p([]);
    let b = {
      value: a,
      originalValue: l,
      path: c,
      options: u,
      schema: this
    };
    for (let v = 0; v < s.length; v++) {
      const h = s[v];
      h(b, d, function(C) {
        C && (Array.isArray(C) ? g.push(...C) : g.push(C)), --m <= 0 && p(g);
      });
    }
  }
  asNestedTest({
    key: t,
    index: n,
    parent: o,
    parentPath: r,
    originalParent: s,
    options: a
  }) {
    const l = t ?? n;
    if (l == null)
      throw TypeError("Must include `key` or `index` for nested validations");
    const c = typeof l == "number";
    let u = o[l];
    const d = Object.assign({}, a, {
      // Nested validations fields are always strict:
      //    1. parent isn't strict so the casting will also have cast inner values
      //    2. parent is strict in which case the nested values weren't cast either
      strict: true,
      parent: o,
      value: u,
      originalValue: s[l],
      // FIXME: tests depend on `index` being passed around deeply,
      //   we should not let the options.key/index bleed through
      key: void 0,
      // index: undefined,
      [c ? "index" : "key"]: l,
      path: c || l.includes(".") ? `${r || ""}[${c ? l : `"${l}"`}]` : (r ? `${r}.` : "") + t
    });
    return (p, m, g) => this.resolve(d)._validate(u, d, m, g);
  }
  validate(t, n) {
    var o;
    let r = this.resolve(Object.assign({}, n, {
      value: t
    })), s = (o = n == null ? void 0 : n.disableStackTrace) != null ? o : r.spec.disableStackTrace;
    return new Promise((a, l) => r._validate(t, n, (c, u) => {
      Wn.isError(c) && (c.value = u), l(c);
    }, (c, u) => {
      c.length ? l(new Wn(c, u, void 0, void 0, s)) : a(u);
    }));
  }
  validateSync(t, n) {
    var o;
    let r = this.resolve(Object.assign({}, n, {
      value: t
    })), s, a = (o = n == null ? void 0 : n.disableStackTrace) != null ? o : r.spec.disableStackTrace;
    return r._validate(t, Object.assign({}, n, {
      sync: true
    }), (l, c) => {
      throw Wn.isError(l) && (l.value = c), l;
    }, (l, c) => {
      if (l.length) throw new Wn(l, t, void 0, void 0, a);
      s = c;
    }), s;
  }
  isValid(t, n) {
    return this.validate(t, n).then(() => true, (o) => {
      if (Wn.isError(o)) return false;
      throw o;
    });
  }
  isValidSync(t, n) {
    try {
      return this.validateSync(t, n), true;
    } catch (o) {
      if (Wn.isError(o)) return false;
      throw o;
    }
  }
  _getDefault(t) {
    let n = this.spec.default;
    return n == null ? n : typeof n == "function" ? n.call(this, t) : ms(n);
  }
  getDefault(t) {
    return this.resolve(t || {})._getDefault(t);
  }
  default(t) {
    return arguments.length === 0 ? this._getDefault() : this.clone({
      default: t
    });
  }
  strict(t = true) {
    return this.clone({
      strict: t
    });
  }
  nullability(t, n) {
    const o = this.clone({
      nullable: t
    });
    return o.internalTests.nullable = rs({
      message: n,
      name: "nullable",
      test(r) {
        return r === null ? this.schema.spec.nullable : true;
      }
    }), o;
  }
  optionality(t, n) {
    const o = this.clone({
      optional: t
    });
    return o.internalTests.optionality = rs({
      message: n,
      name: "optionality",
      test(r) {
        return r === void 0 ? this.schema.spec.optional : true;
      }
    }), o;
  }
  optional() {
    return this.optionality(true);
  }
  defined(t = Yo.defined) {
    return this.optionality(false, t);
  }
  nullable() {
    return this.nullability(true);
  }
  nonNullable(t = Yo.notNull) {
    return this.nullability(false, t);
  }
  required(t = Yo.required) {
    return this.clone().withMutation((n) => n.nonNullable(t).defined(t));
  }
  notRequired() {
    return this.clone().withMutation((t) => t.nullable().optional());
  }
  transform(t) {
    let n = this.clone();
    return n.transforms.push(t), n;
  }
  /**
   * Adds a test function to the schema's queue of tests.
   * tests can be exclusive or non-exclusive.
   *
   * - exclusive tests, will replace any existing tests of the same name.
   * - non-exclusive: can be stacked
   *
   * If a non-exclusive test is added to a schema with an exclusive test of the same name
   * the exclusive test is removed and further tests of the same name will be stacked.
   *
   * If an exclusive test is added to a schema with non-exclusive tests of the same name
   * the previous tests are removed and further tests of the same name will replace each other.
   */
  test(...t) {
    let n;
    if (t.length === 1 ? typeof t[0] == "function" ? n = {
      test: t[0]
    } : n = t[0] : t.length === 2 ? n = {
      name: t[0],
      test: t[1]
    } : n = {
      name: t[0],
      message: t[1],
      test: t[2]
    }, n.message === void 0 && (n.message = Yo.default), typeof n.test != "function") throw new TypeError("`test` is a required parameters");
    let o = this.clone(), r = rs(n), s = n.exclusive || n.name && o.exclusiveTests[n.name] === true;
    if (n.exclusive && !n.name)
      throw new TypeError("Exclusive tests must provide a unique `name` identifying the test");
    return n.name && (o.exclusiveTests[n.name] = !!n.exclusive), o.tests = o.tests.filter((a) => !(a.OPTIONS.name === n.name && (s || a.OPTIONS.test === r.OPTIONS.test))), o.tests.push(r), o;
  }
  when(t, n) {
    !Array.isArray(t) && typeof t != "string" && (n = t, t = ".");
    let o = this.clone(), r = BS(t).map((s) => new Gi(s));
    return r.forEach((s) => {
      s.isSibling && o.deps.push(s.key);
    }), o.conditions.push(typeof n == "function" ? new iu(r, n) : iu.fromOptions(r, n)), o;
  }
  typeError(t) {
    let n = this.clone();
    return n.internalTests.typeError = rs({
      message: t,
      name: "typeError",
      skipAbsent: true,
      test(o) {
        return this.schema._typeCheck(o) ? true : this.createError({
          params: {
            type: this.schema.type
          }
        });
      }
    }), n;
  }
  oneOf(t, n = Yo.oneOf) {
    let o = this.clone();
    return t.forEach((r) => {
      o._whitelist.add(r), o._blacklist.delete(r);
    }), o.internalTests.whiteList = rs({
      message: n,
      name: "oneOf",
      skipAbsent: true,
      test(r) {
        let s = this.schema._whitelist, a = s.resolveAll(this.resolve);
        return a.includes(r) ? true : this.createError({
          params: {
            values: Array.from(s).join(", "),
            resolved: a
          }
        });
      }
    }), o;
  }
  notOneOf(t, n = Yo.notOneOf) {
    let o = this.clone();
    return t.forEach((r) => {
      o._blacklist.add(r), o._whitelist.delete(r);
    }), o.internalTests.blacklist = rs({
      message: n,
      name: "notOneOf",
      test(r) {
        let s = this.schema._blacklist, a = s.resolveAll(this.resolve);
        return a.includes(r) ? this.createError({
          params: {
            values: Array.from(s).join(", "),
            resolved: a
          }
        }) : true;
      }
    }), o;
  }
  strip(t = true) {
    let n = this.clone();
    return n.spec.strip = t, n;
  }
  /**
   * Return a serialized description of the schema including validations, flags, types etc.
   *
   * @param options Provide any needed context for resolving runtime schema alterations (lazy, when conditions, etc).
   */
  describe(t) {
    const n = (t ? this.resolve(t) : this).clone(), {
      label: o,
      meta: r,
      optional: s,
      nullable: a
    } = n.spec;
    return {
      meta: r,
      label: o,
      optional: s,
      nullable: a,
      default: n.getDefault(t),
      type: n.type,
      oneOf: n._whitelist.describe(),
      notOneOf: n._blacklist.describe(),
      tests: n.tests.map((c) => ({
        name: c.OPTIONS.name,
        params: c.OPTIONS.params
      })).filter((c, u, d) => d.findIndex((p) => p.name === c.name) === u)
    };
  }
};
ir.prototype.__isYupSchema__ = true;
for (const e10 of ["validate", "validateSync"]) ir.prototype[`${e10}At`] = function(t, n, o = {}) {
  const {
    parent: r,
    parentPath: s,
    schema: a
  } = Dz(this, t, n, o.context);
  return a[e10](r && r[s], Object.assign({}, o, {
    parent: r,
    path: t
  }));
};
for (const e10 of ["equals", "is"]) ir.prototype[e10] = ir.prototype.oneOf;
for (const e10 of ["not", "nope"]) ir.prototype[e10] = ir.prototype.notOneOf;
var Mz = /^(\d{4}|[+-]\d{6})(?:-?(\d{2})(?:-?(\d{2}))?)?(?:[ T]?(\d{2}):?(\d{2})(?::?(\d{2})(?:[,.](\d{1,}))?)?(?:(Z)|([+-])(\d{2})(?::?(\d{2}))?)?)?$/;
function kz(e10) {
  const t = Yf(e10);
  if (!t) return Date.parse ? Date.parse(e10) : Number.NaN;
  if (t.z === void 0 && t.plusMinus === void 0)
    return new Date(t.year, t.month, t.day, t.hour, t.minute, t.second, t.millisecond).valueOf();
  let n = 0;
  return t.z !== "Z" && t.plusMinus !== void 0 && (n = t.hourOffset * 60 + t.minuteOffset, t.plusMinus === "+" && (n = 0 - n)), Date.UTC(t.year, t.month, t.day, t.hour, t.minute + n, t.second, t.millisecond);
}
function Yf(e10) {
  var t, n;
  const o = Mz.exec(e10);
  return o ? {
    year: gr(o[1]),
    month: gr(o[2], 1) - 1,
    day: gr(o[3], 1),
    hour: gr(o[4]),
    minute: gr(o[5]),
    second: gr(o[6]),
    millisecond: o[7] ? (
      // allow arbitrary sub-second precision beyond milliseconds
      gr(o[7].substring(0, 3))
    ) : 0,
    precision: (t = (n = o[7]) == null ? void 0 : n.length) != null ? t : void 0,
    z: o[8] || void 0,
    plusMinus: o[9] || void 0,
    hourOffset: gr(o[10]),
    minuteOffset: gr(o[11])
  } : null;
}
function gr(e10, t = 0) {
  return Number(e10) || t;
}
var Fz = (
  // eslint-disable-next-line
  /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/
);
var Nz = (
  // eslint-disable-next-line
  /^((https?|ftp):)?\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i
);
var $z = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
var Vz = "^\\d{4}-\\d{2}-\\d{2}";
var _z = "\\d{2}:\\d{2}:\\d{2}";
var Lz = "(([+-]\\d{2}(:?\\d{2})?)|Z)";
var Bz = new RegExp(`${Vz}T${_z}(\\.\\d+)?${Lz}$`);
var zz = (e10) => Ci(e10) || e10 === e10.trim();
var Wz = {}.toString();
function Zf() {
  return new GS();
}
var GS = class extends ir {
  constructor() {
    super({
      type: "string",
      check(t) {
        return t instanceof String && (t = t.valueOf()), typeof t == "string";
      }
    }), this.withMutation(() => {
      this.transform((t, n, o) => {
        if (!o.spec.coerce || o.isType(t) || Array.isArray(t)) return t;
        const r = t != null && t.toString ? t.toString() : t;
        return r === Wz ? t : r;
      });
    });
  }
  required(t) {
    return super.required(t).withMutation((n) => n.test({
      message: t || Yo.required,
      name: "required",
      skipAbsent: true,
      test: (o) => !!o.length
    }));
  }
  notRequired() {
    return super.notRequired().withMutation((t) => (t.tests = t.tests.filter((n) => n.OPTIONS.name !== "required"), t));
  }
  length(t, n = zn.length) {
    return this.test({
      message: n,
      name: "length",
      exclusive: true,
      params: {
        length: t
      },
      skipAbsent: true,
      test(o) {
        return o.length === this.resolve(t);
      }
    });
  }
  min(t, n = zn.min) {
    return this.test({
      message: n,
      name: "min",
      exclusive: true,
      params: {
        min: t
      },
      skipAbsent: true,
      test(o) {
        return o.length >= this.resolve(t);
      }
    });
  }
  max(t, n = zn.max) {
    return this.test({
      name: "max",
      exclusive: true,
      message: n,
      params: {
        max: t
      },
      skipAbsent: true,
      test(o) {
        return o.length <= this.resolve(t);
      }
    });
  }
  matches(t, n) {
    let o = false, r, s;
    return n && (typeof n == "object" ? {
      excludeEmptyString: o = false,
      message: r,
      name: s
    } = n : r = n), this.test({
      name: s || "matches",
      message: r || zn.matches,
      params: {
        regex: t
      },
      skipAbsent: true,
      test: (a) => a === "" && o || a.search(t) !== -1
    });
  }
  email(t = zn.email) {
    return this.matches(Fz, {
      name: "email",
      message: t,
      excludeEmptyString: true
    });
  }
  url(t = zn.url) {
    return this.matches(Nz, {
      name: "url",
      message: t,
      excludeEmptyString: true
    });
  }
  uuid(t = zn.uuid) {
    return this.matches($z, {
      name: "uuid",
      message: t,
      excludeEmptyString: false
    });
  }
  datetime(t) {
    let n = "", o, r;
    return t && (typeof t == "object" ? {
      message: n = "",
      allowOffset: o = false,
      precision: r = void 0
    } = t : n = t), this.matches(Bz, {
      name: "datetime",
      message: n || zn.datetime,
      excludeEmptyString: true
    }).test({
      name: "datetime_offset",
      message: n || zn.datetime_offset,
      params: {
        allowOffset: o
      },
      skipAbsent: true,
      test: (s) => {
        if (!s || o) return true;
        const a = Yf(s);
        return a ? !!a.z : false;
      }
    }).test({
      name: "datetime_precision",
      message: n || zn.datetime_precision,
      params: {
        precision: r
      },
      skipAbsent: true,
      test: (s) => {
        if (!s || r == null) return true;
        const a = Yf(s);
        return a ? a.precision === r : false;
      }
    });
  }
  //-- transforms --
  ensure() {
    return this.default("").transform((t) => t === null ? "" : t);
  }
  trim(t = zn.trim) {
    return this.transform((n) => n != null ? n.trim() : n).test({
      message: t,
      name: "trim",
      test: zz
    });
  }
  lowercase(t = zn.lowercase) {
    return this.transform((n) => Ci(n) ? n : n.toLowerCase()).test({
      message: t,
      name: "string_case",
      exclusive: true,
      skipAbsent: true,
      test: (n) => Ci(n) || n === n.toLowerCase()
    });
  }
  uppercase(t = zn.uppercase) {
    return this.transform((n) => Ci(n) ? n : n.toUpperCase()).test({
      message: t,
      name: "string_case",
      exclusive: true,
      skipAbsent: true,
      test: (n) => Ci(n) || n === n.toUpperCase()
    });
  }
};
Zf.prototype = GS.prototype;
var Hz = /* @__PURE__ */ new Date("");
var Gz = (e10) => Object.prototype.toString.call(e10) === "[object Date]";
var vd = class _vd extends ir {
  constructor() {
    super({
      type: "date",
      check(t) {
        return Gz(t) && !isNaN(t.getTime());
      }
    }), this.withMutation(() => {
      this.transform((t, n, o) => !o.spec.coerce || o.isType(t) || t === null ? t : (t = kz(t), isNaN(t) ? _vd.INVALID_DATE : new Date(t)));
    });
  }
  prepareParam(t, n) {
    let o;
    if (Gi.isRef(t))
      o = t;
    else {
      let r = this.cast(t);
      if (!this._typeCheck(r)) throw new TypeError(`\`${n}\` must be a Date or a value that can be \`cast()\` to a Date`);
      o = r;
    }
    return o;
  }
  min(t, n = Uf.min) {
    let o = this.prepareParam(t, "min");
    return this.test({
      message: n,
      name: "min",
      exclusive: true,
      params: {
        min: t
      },
      skipAbsent: true,
      test(r) {
        return r >= this.resolve(o);
      }
    });
  }
  max(t, n = Uf.max) {
    let o = this.prepareParam(t, "max");
    return this.test({
      message: n,
      name: "max",
      exclusive: true,
      params: {
        max: t
      },
      skipAbsent: true,
      test(r) {
        return r <= this.resolve(o);
      }
    });
  }
};
vd.INVALID_DATE = Hz;
vd.prototype;
function Uz(e10, t = []) {
  let n = [], o = /* @__PURE__ */ new Set(), r = new Set(t.map(([a, l]) => `${a}-${l}`));
  function s(a, l) {
    let c = Ri.split(a)[0];
    o.add(c), r.has(`${l}-${c}`) || n.push([l, c]);
  }
  for (const a of Object.keys(e10)) {
    let l = e10[a];
    o.add(a), Gi.isRef(l) && l.isSibling ? s(l.path, a) : Dg(l) && "deps" in l && l.deps.forEach((c) => s(c, a));
  }
  return xz.array(Array.from(o), n).reverse();
}
function Ry(e10, t) {
  let n = 1 / 0;
  return e10.some((o, r) => {
    var s;
    if ((s = t.path) != null && s.includes(o))
      return n = r, true;
  }), n;
}
function US(e10) {
  return (t, n) => Ry(e10, t) - Ry(e10, n);
}
var Xz = (e10, t, n) => {
  if (typeof e10 != "string")
    return e10;
  let o = e10;
  try {
    o = JSON.parse(e10);
  } catch {
  }
  return n.isType(o) ? o : e10;
};
function $c(e10) {
  if ("fields" in e10) {
    const t = {};
    for (const [n, o] of Object.entries(e10.fields))
      t[n] = $c(o);
    return e10.setFields(t);
  }
  if (e10.type === "array") {
    const t = e10.optional();
    return t.innerType && (t.innerType = $c(t.innerType)), t;
  }
  return e10.type === "tuple" ? e10.optional().clone({
    types: e10.spec.types.map($c)
  }) : "optional" in e10 ? e10.optional() : e10;
}
var Yz = (e10, t) => {
  const n = [...Ri.normalizePath(t)];
  if (n.length === 1) return n[0] in e10;
  let o = n.pop(), r = Ri.getter(Ri.join(n), true)(e10);
  return !!(r && o in r);
};
var Ey = (e10) => Object.prototype.toString.call(e10) === "[object Object]";
function Zz(e10, t) {
  let n = Object.keys(e10.fields);
  return Object.keys(t).filter((o) => n.indexOf(o) === -1);
}
var qz = US([]);
function XS(e10) {
  return new YS(e10);
}
var YS = class extends ir {
  constructor(t) {
    super({
      type: "object",
      check(n) {
        return Ey(n) || typeof n == "function";
      }
    }), this.fields = /* @__PURE__ */ Object.create(null), this._sortErrors = qz, this._nodes = [], this._excludedEdges = [], this.withMutation(() => {
      t && this.shape(t);
    });
  }
  _cast(t, n = {}) {
    var o;
    let r = super._cast(t, n);
    if (r === void 0) return this.getDefault(n);
    if (!this._typeCheck(r)) return r;
    let s = this.fields, a = (o = n.stripUnknown) != null ? o : this.spec.noUnknown, l = [].concat(this._nodes, Object.keys(r).filter((p) => !this._nodes.includes(p))), c = {}, u = Object.assign({}, n, {
      parent: c,
      __validating: n.__validating || false
    }), d = false;
    for (const p of l) {
      let m = s[p], g = p in r;
      if (m) {
        let b, v = r[p];
        u.path = (n.path ? `${n.path}.` : "") + p, m = m.resolve({
          value: v,
          context: n.context,
          parent: c
        });
        let h = m instanceof ir ? m.spec : void 0, y = h == null ? void 0 : h.strict;
        if (h != null && h.strip) {
          d = d || p in r;
          continue;
        }
        b = !n.__validating || !y ? (
          // TODO: use _cast, this is double resolving
          m.cast(r[p], u)
        ) : r[p], b !== void 0 && (c[p] = b);
      } else g && !a && (c[p] = r[p]);
      (g !== p in c || c[p] !== r[p]) && (d = true);
    }
    return d ? c : r;
  }
  _validate(t, n = {}, o, r) {
    let {
      from: s = [],
      originalValue: a = t,
      recursive: l = this.spec.recursive
    } = n;
    n.from = [{
      schema: this,
      value: a
    }, ...s], n.__validating = true, n.originalValue = a, super._validate(t, n, o, (c, u) => {
      if (!l || !Ey(u)) {
        r(c, u);
        return;
      }
      a = a || u;
      let d = [];
      for (let p of this._nodes) {
        let m = this.fields[p];
        !m || Gi.isRef(m) || d.push(m.asNestedTest({
          options: n,
          key: p,
          parent: u,
          parentPath: n.path,
          originalParent: a
        }));
      }
      this.runTests({
        tests: d,
        value: u,
        originalValue: a,
        options: n
      }, o, (p) => {
        r(p.sort(this._sortErrors).concat(c), u);
      });
    });
  }
  clone(t) {
    const n = super.clone(t);
    return n.fields = Object.assign({}, this.fields), n._nodes = this._nodes, n._excludedEdges = this._excludedEdges, n._sortErrors = this._sortErrors, n;
  }
  concat(t) {
    let n = super.concat(t), o = n.fields;
    for (let [r, s] of Object.entries(this.fields)) {
      const a = o[r];
      o[r] = a === void 0 ? s : a;
    }
    return n.withMutation((r) => (
      // XXX: excludes here is wrong
      r.setFields(o, [...this._excludedEdges, ...t._excludedEdges])
    ));
  }
  _getDefault(t) {
    if ("default" in this.spec)
      return super._getDefault(t);
    if (!this._nodes.length)
      return;
    let n = {};
    return this._nodes.forEach((o) => {
      var r;
      const s = this.fields[o];
      let a = t;
      (r = a) != null && r.value && (a = Object.assign({}, a, {
        parent: a.value,
        value: a.value[o]
      })), n[o] = s && "getDefault" in s ? s.getDefault(a) : void 0;
    }), n;
  }
  setFields(t, n) {
    let o = this.clone();
    return o.fields = t, o._nodes = Uz(t, n), o._sortErrors = US(Object.keys(t)), n && (o._excludedEdges = n), o;
  }
  shape(t, n = []) {
    return this.clone().withMutation((o) => {
      let r = o._excludedEdges;
      return n.length && (Array.isArray(n[0]) || (n = [n]), r = [...o._excludedEdges, ...n]), o.setFields(Object.assign(o.fields, t), r);
    });
  }
  partial() {
    const t = {};
    for (const [n, o] of Object.entries(this.fields))
      t[n] = "optional" in o && o.optional instanceof Function ? o.optional() : o;
    return this.setFields(t);
  }
  deepPartial() {
    return $c(this);
  }
  pick(t) {
    const n = {};
    for (const o of t)
      this.fields[o] && (n[o] = this.fields[o]);
    return this.setFields(n, this._excludedEdges.filter(([o, r]) => t.includes(o) && t.includes(r)));
  }
  omit(t) {
    const n = [];
    for (const o of Object.keys(this.fields))
      t.includes(o) || n.push(o);
    return this.pick(n);
  }
  from(t, n, o) {
    let r = Ri.getter(t, true);
    return this.transform((s) => {
      if (!s) return s;
      let a = s;
      return Yz(s, t) && (a = Object.assign({}, s), o || delete a[t], a[n] = r(s)), a;
    });
  }
  /** Parse an input JSON string to an object */
  json() {
    return this.transform(Xz);
  }
  noUnknown(t = true, n = Xf.noUnknown) {
    typeof t != "boolean" && (n = t, t = true);
    let o = this.test({
      name: "noUnknown",
      exclusive: true,
      message: n,
      test(r) {
        if (r == null) return true;
        const s = Zz(this.schema, r);
        return !t || s.length === 0 || this.createError({
          params: {
            unknown: s.join(", ")
          }
        });
      }
    });
    return o.spec.noUnknown = t, o;
  }
  unknown(t = true, n = Xf.noUnknown) {
    return this.noUnknown(!t, n);
  }
  transformKeys(t) {
    return this.transform((n) => {
      if (!n) return n;
      const o = {};
      for (const r of Object.keys(n)) o[t(r)] = n[r];
      return o;
    });
  }
  camelCase() {
    return this.transformKeys(Pp.camelCase);
  }
  snakeCase() {
    return this.transformKeys(Pp.snakeCase);
  }
  constantCase() {
    return this.transformKeys((t) => Pp.snakeCase(t).toUpperCase());
  }
  describe(t) {
    const n = (t ? this.resolve(t) : this).clone(), o = super.describe(t);
    o.fields = {};
    for (const [s, a] of Object.entries(n.fields)) {
      var r;
      let l = t;
      (r = l) != null && r.value && (l = Object.assign({}, l, {
        parent: l.value,
        value: l.value[s]
      })), o.fields[s] = a.describe(l);
    }
    return o;
  }
};
XS.prototype = YS.prototype;
var Jz = ze(f.jsx("path", {
  d: "M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 4-8 5-8-5V6l8 5 8-5z"
}), "Email");
var Kz = ze(f.jsx("path", {
  d: "M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2m-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2m3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1s3.1 1.39 3.1 3.1z"
}), "Lock");
function Qz(e10, t) {
  return false ? () => null : function(...o) {
    return e10(...o) || t(...o);
  };
}
function ZS(e10, t) {
  const n = V({}, t);
  return Object.keys(e10).forEach((o) => {
    if (o.toString().match(/^(components|slots)$/))
      n[o] = V({}, e10[o], n[o]);
    else if (o.toString().match(/^(componentsProps|slotProps)$/)) {
      const r = e10[o] || {}, s = t[o];
      n[o] = {}, !s || !Object.keys(s) ? n[o] = r : !r || !Object.keys(r) ? n[o] = s : (n[o] = V({}, s), Object.keys(r).forEach((a) => {
        n[o][a] = ZS(r[a], s[a]);
      }));
    } else n[o] === void 0 && (n[o] = e10[o]);
  }), n;
}
var Oy = (e10) => e10;
var e4 = () => {
  let e10 = Oy;
  return {
    configure(t) {
      e10 = t;
    },
    generate(t) {
      return e10(t);
    },
    reset() {
      e10 = Oy;
    }
  };
};
var t4 = e4();
var n4 = {
  active: "active",
  checked: "checked",
  completed: "completed",
  disabled: "disabled",
  error: "error",
  expanded: "expanded",
  focused: "focused",
  focusVisible: "focusVisible",
  open: "open",
  readOnly: "readOnly",
  required: "required",
  selected: "selected"
};
function qS(e10, t, n = "Mui") {
  const o = n4[t];
  return o ? `${n}-${o}` : `${t4.generate(e10)}-${t}`;
}
function o4(e10, t, n = "Mui") {
  const o = {};
  return t.forEach((r) => {
    o[r] = qS(e10, r, n);
  }), o;
}
function r4(e10, t, n = void 0) {
  const o = {};
  return Object.keys(e10).forEach(
    // `Object.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.
    // @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208
    (r) => {
      o[r] = e10[r].reduce((s, a) => {
        if (a) {
          const l = t(a);
          l !== "" && s.push(l), n && n[a] && s.push(n[a]);
        }
        return s;
      }, []).join(" ");
    }
  ), o;
}
var i4 = Math.min;
var s4 = Math.max;
var au = Math.round;
var cc = Math.floor;
var lu = (e10) => ({
  x: e10,
  y: e10
});
function a4(e10) {
  const {
    x: t,
    y: n,
    width: o,
    height: r
  } = e10;
  return {
    width: o,
    height: r,
    top: n,
    left: t,
    right: t + o,
    bottom: n + r,
    x: t,
    y: n
  };
}
function yd() {
  return typeof window < "u";
}
function JS(e10) {
  return QS(e10) ? (e10.nodeName || "").toLowerCase() : "#document";
}
function Ar(e10) {
  var t;
  return (e10 == null || (t = e10.ownerDocument) == null ? void 0 : t.defaultView) || window;
}
function KS(e10) {
  var t;
  return (t = (QS(e10) ? e10.ownerDocument : e10.document) || window.document) == null ? void 0 : t.documentElement;
}
function QS(e10) {
  return yd() ? e10 instanceof Node || e10 instanceof Ar(e10).Node : false;
}
function l4(e10) {
  return yd() ? e10 instanceof Element || e10 instanceof Ar(e10).Element : false;
}
function Mg(e10) {
  return yd() ? e10 instanceof HTMLElement || e10 instanceof Ar(e10).HTMLElement : false;
}
function Py(e10) {
  return !yd() || typeof ShadowRoot > "u" ? false : e10 instanceof ShadowRoot || e10 instanceof Ar(e10).ShadowRoot;
}
function ew(e10) {
  const {
    overflow: t,
    overflowX: n,
    overflowY: o,
    display: r
  } = kg(e10);
  return /auto|scroll|overlay|hidden|clip/.test(t + o + n) && !["inline", "contents"].includes(r);
}
function c4() {
  return typeof CSS > "u" || !CSS.supports ? false : CSS.supports("-webkit-backdrop-filter", "none");
}
function u4(e10) {
  return ["html", "body", "#document"].includes(JS(e10));
}
function kg(e10) {
  return Ar(e10).getComputedStyle(e10);
}
function d4(e10) {
  if (JS(e10) === "html")
    return e10;
  const t = (
    // Step into the shadow DOM of the parent of a slotted node.
    e10.assignedSlot || // DOM Element detected.
    e10.parentNode || // ShadowRoot detected.
    Py(e10) && e10.host || // Fallback.
    KS(e10)
  );
  return Py(t) ? t.host : t;
}
function tw(e10) {
  const t = d4(e10);
  return u4(t) ? e10.ownerDocument ? e10.ownerDocument.body : e10.body : Mg(t) && ew(t) ? t : tw(t);
}
function cu(e10, t, n) {
  var o;
  t === void 0 && (t = []), n === void 0 && (n = true);
  const r = tw(e10), s = r === ((o = e10.ownerDocument) == null ? void 0 : o.body), a = Ar(r);
  if (s) {
    const l = qf(a);
    return t.concat(a, a.visualViewport || [], ew(r) ? r : [], l && n ? cu(l) : []);
  }
  return t.concat(r, cu(r, [], n));
}
function qf(e10) {
  return e10.parent && Object.getPrototypeOf(e10.parent) ? e10.frameElement : null;
}
function p4(e10) {
  const t = kg(e10);
  let n = parseFloat(t.width) || 0, o = parseFloat(t.height) || 0;
  const r = Mg(e10), s = r ? e10.offsetWidth : n, a = r ? e10.offsetHeight : o, l = au(n) !== s || au(o) !== a;
  return l && (n = s, o = a), {
    width: n,
    height: o,
    $: l
  };
}
function Fg(e10) {
  return l4(e10) ? e10 : e10.contextElement;
}
function Ay(e10) {
  const t = Fg(e10);
  if (!Mg(t))
    return lu(1);
  const n = t.getBoundingClientRect(), {
    width: o,
    height: r,
    $: s
  } = p4(t);
  let a = (s ? au(n.width) : n.width) / o, l = (s ? au(n.height) : n.height) / r;
  return (!a || !Number.isFinite(a)) && (a = 1), (!l || !Number.isFinite(l)) && (l = 1), {
    x: a,
    y: l
  };
}
var f4 = lu(0);
function m4(e10) {
  const t = Ar(e10);
  return !c4() || !t.visualViewport ? f4 : {
    x: t.visualViewport.offsetLeft,
    y: t.visualViewport.offsetTop
  };
}
function g4(e10, t, n) {
  return false;
}
function jy(e10, t, n, o) {
  t === void 0 && (t = false);
  const r = e10.getBoundingClientRect(), s = Fg(e10);
  let a = lu(1);
  t && (a = Ay(e10));
  const l = g4() ? m4(s) : lu(0);
  let c = (r.left + l.x) / a.x, u = (r.top + l.y) / a.y, d = r.width / a.x, p = r.height / a.y;
  if (s) {
    const m = Ar(s), g = o;
    let b = m, v = qf(b);
    for (; v && o && g !== b; ) {
      const h = Ay(v), y = v.getBoundingClientRect(), C = kg(v), x = y.left + (v.clientLeft + parseFloat(C.paddingLeft)) * h.x, T = y.top + (v.clientTop + parseFloat(C.paddingTop)) * h.y;
      c *= h.x, u *= h.y, d *= h.x, p *= h.y, c += x, u += T, b = Ar(v), v = qf(b);
    }
  }
  return a4({
    width: d,
    height: p,
    x: c,
    y: u
  });
}
function h4(e10, t) {
  let n = null, o;
  const r = KS(e10);
  function s() {
    var l;
    clearTimeout(o), (l = n) == null || l.disconnect(), n = null;
  }
  function a(l, c) {
    l === void 0 && (l = false), c === void 0 && (c = 1), s();
    const {
      left: u,
      top: d,
      width: p,
      height: m
    } = e10.getBoundingClientRect();
    if (l || t(), !p || !m)
      return;
    const g = cc(d), b = cc(r.clientWidth - (u + p)), v = cc(r.clientHeight - (d + m)), h = cc(u), C = {
      rootMargin: -g + "px " + -b + "px " + -v + "px " + -h + "px",
      threshold: s4(0, i4(1, c)) || 1
    };
    let x = true;
    function T(w) {
      const R = w[0].intersectionRatio;
      if (R !== c) {
        if (!x)
          return a();
        R ? a(false, R) : o = setTimeout(() => {
          a(false, 1e-7);
        }, 1e3);
      }
      x = false;
    }
    try {
      n = new IntersectionObserver(T, {
        ...C,
        // Handle <iframe>s
        root: r.ownerDocument
      });
    } catch {
      n = new IntersectionObserver(T, C);
    }
    n.observe(e10);
  }
  return a(true), s;
}
function b4(e10, t, n, o) {
  o === void 0 && (o = {});
  const {
    ancestorScroll: r = true,
    ancestorResize: s = true,
    elementResize: a = typeof ResizeObserver == "function",
    layoutShift: l = typeof IntersectionObserver == "function",
    animationFrame: c = false
  } = o, u = Fg(e10), d = r || s ? [...u ? cu(u) : [], ...cu(t)] : [];
  d.forEach((y) => {
    r && y.addEventListener("scroll", n, {
      passive: true
    }), s && y.addEventListener("resize", n);
  });
  const p = u && l ? h4(u, n) : null;
  let m = -1, g = null;
  a && (g = new ResizeObserver((y) => {
    let [C] = y;
    C && C.target === u && g && (g.unobserve(t), cancelAnimationFrame(m), m = requestAnimationFrame(() => {
      var x;
      (x = g) == null || x.observe(t);
    })), n();
  }), u && !c && g.observe(u), g.observe(t));
  let b, v = c ? jy(e10) : null;
  c && h();
  function h() {
    const y = jy(e10);
    v && (y.x !== v.x || y.y !== v.y || y.width !== v.width || y.height !== v.height) && n(), v = y, b = requestAnimationFrame(h);
  }
  return n(), () => {
    var y;
    d.forEach((C) => {
      r && C.removeEventListener("scroll", n), s && C.removeEventListener("resize", n);
    }), p == null || p(), (y = g) == null || y.disconnect(), g = null, c && cancelAnimationFrame(b);
  };
}
function v4(e10) {
  return qS("MuiLoadingButton", e10);
}
var hr = o4("MuiLoadingButton", ["root", "loading", "loadingIndicator", "loadingIndicatorCenter", "loadingIndicatorStart", "loadingIndicatorEnd", "endIconLoadingEnd", "startIconLoadingStart"]);
var y4 = ["children", "disabled", "id", "loading", "loadingIndicator", "loadingPosition", "variant"];
var x4 = (e10) => {
  const {
    loading: t,
    loadingPosition: n,
    classes: o
  } = e10, r = {
    root: ["root", t && "loading"],
    startIcon: [t && `startIconLoading${de(n)}`],
    endIcon: [t && `endIconLoading${de(n)}`],
    loadingIndicator: ["loadingIndicator", t && `loadingIndicator${de(n)}`]
  }, s = r4(r, v4, o);
  return V({}, o, s);
};
var C4 = (e10) => e10 !== "ownerState" && e10 !== "theme" && e10 !== "sx" && e10 !== "as" && e10 !== "classes";
var S4 = K(vt, {
  shouldForwardProp: (e10) => C4(e10) || e10 === "classes",
  name: "MuiLoadingButton",
  slot: "Root",
  overridesResolver: (e10, t) => [t.root, t.startIconLoadingStart && {
    [`& .${hr.startIconLoadingStart}`]: t.startIconLoadingStart
  }, t.endIconLoadingEnd && {
    [`& .${hr.endIconLoadingEnd}`]: t.endIconLoadingEnd
  }]
})(({
  ownerState: e10,
  theme: t
}) => V({
  [`& .${hr.startIconLoadingStart}, & .${hr.endIconLoadingEnd}`]: {
    transition: t.transitions.create(["opacity"], {
      duration: t.transitions.duration.short
    }),
    opacity: 0
  }
}, e10.loadingPosition === "center" && {
  transition: t.transitions.create(["background-color", "box-shadow", "border-color"], {
    duration: t.transitions.duration.short
  }),
  [`&.${hr.loading}`]: {
    color: "transparent"
  }
}, e10.loadingPosition === "start" && e10.fullWidth && {
  [`& .${hr.startIconLoadingStart}, & .${hr.endIconLoadingEnd}`]: {
    transition: t.transitions.create(["opacity"], {
      duration: t.transitions.duration.short
    }),
    opacity: 0,
    marginRight: -8
  }
}, e10.loadingPosition === "end" && e10.fullWidth && {
  [`& .${hr.startIconLoadingStart}, & .${hr.endIconLoadingEnd}`]: {
    transition: t.transitions.create(["opacity"], {
      duration: t.transitions.duration.short
    }),
    opacity: 0,
    marginLeft: -8
  }
}));
var w4 = K("span", {
  name: "MuiLoadingButton",
  slot: "LoadingIndicator",
  overridesResolver: (e10, t) => {
    const {
      ownerState: n
    } = e10;
    return [t.loadingIndicator, t[`loadingIndicator${de(n.loadingPosition)}`]];
  }
})(({
  theme: e10,
  ownerState: t
}) => V({
  position: "absolute",
  visibility: "visible",
  display: "flex"
}, t.loadingPosition === "start" && (t.variant === "outlined" || t.variant === "contained") && {
  left: t.size === "small" ? 10 : 14
}, t.loadingPosition === "start" && t.variant === "text" && {
  left: 6
}, t.loadingPosition === "center" && {
  left: "50%",
  transform: "translate(-50%)",
  color: (e10.vars || e10).palette.action.disabled
}, t.loadingPosition === "end" && (t.variant === "outlined" || t.variant === "contained") && {
  right: t.size === "small" ? 10 : 14
}, t.loadingPosition === "end" && t.variant === "text" && {
  right: 6
}, t.loadingPosition === "start" && t.fullWidth && {
  position: "relative",
  left: -10
}, t.loadingPosition === "end" && t.fullWidth && {
  position: "relative",
  right: -10
}));
var nw = S.forwardRef(function(t, n) {
  const o = S.useContext(rg), r = ZS(o, t), s = Ye({
    props: r,
    name: "MuiLoadingButton"
  }), {
    children: a,
    disabled: l = false,
    id: c,
    loading: u = false,
    loadingIndicator: d,
    loadingPosition: p = "center",
    variant: m = "text"
  } = s, g = Xe(s, y4), b = Ws(c), v = d ?? f.jsx(Jr, {
    "aria-labelledby": b,
    color: "inherit",
    size: 16
  }), h = V({}, s, {
    disabled: l,
    loading: u,
    loadingIndicator: v,
    loadingPosition: p,
    variant: m
  }), y = x4(h), C = u ? f.jsx(w4, {
    className: y.loadingIndicator,
    ownerState: h,
    children: v
  }) : null;
  return f.jsxs(S4, V({
    disabled: l || u,
    id: b,
    ref: n
  }, g, {
    variant: m,
    classes: y,
    ownerState: h,
    children: [h.loadingPosition === "end" ? a : C, h.loadingPosition === "end" ? C : a]
  }));
});
nw.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * @ignore
   */
  id: i.string,
  /**
   * If `true`, the loading indicator is shown and the button becomes disabled.
   * @default false
   */
  loading: i.bool,
  /**
   * Element placed before the children if the button is in loading state.
   * The node should contain an element with `role="progressbar"` with an accessible name.
   * By default we render a `CircularProgress` that is labelled by the button itself.
   * @default <CircularProgress color="inherit" size={16} />
   */
  loadingIndicator: i.node,
  /**
   * The loading indicator can be positioned on the start, end, or the center of the button.
   * @default 'center'
   */
  loadingPosition: Qz(i.oneOf(["start", "end", "center"]), (e10) => e10.loadingPosition === "start" && !e10.startIcon ? new Error('MUI: The loadingPosition="start" should be used in combination with startIcon.') : e10.loadingPosition === "end" && !e10.endIcon ? new Error('MUI: The loadingPosition="end" should be used in combination with endIcon.') : null),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The variant to use.
   * @default 'text'
   */
  variant: i.oneOfType([i.oneOf(["contained", "outlined", "text"]), i.string])
};
function ow(e10, t) {
  return function() {
    return e10.apply(t, arguments);
  };
}
var { toString: T4 } = Object.prototype;
var { getPrototypeOf: Ng } = Object;
var xd = /* @__PURE__ */ ((e10) => (t) => {
  const n = T4.call(t);
  return e10[n] || (e10[n] = n.slice(8, -1).toLowerCase());
})(/* @__PURE__ */ Object.create(null));
var Wo = (e10) => (e10 = e10.toLowerCase(), (t) => xd(t) === e10);
var Cd = (e10) => (t) => typeof t === e10;
var { isArray: Ys } = Array;
var pl = Cd("undefined");
function I4(e10) {
  return e10 !== null && !pl(e10) && e10.constructor !== null && !pl(e10.constructor) && so(e10.constructor.isBuffer) && e10.constructor.isBuffer(e10);
}
var rw = Wo("ArrayBuffer");
function R4(e10) {
  let t;
  return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? t = ArrayBuffer.isView(e10) : t = e10 && e10.buffer && rw(e10.buffer), t;
}
var E4 = Cd("string");
var so = Cd("function");
var iw = Cd("number");
var Sd = (e10) => e10 !== null && typeof e10 == "object";
var O4 = (e10) => e10 === true || e10 === false;
var Vc = (e10) => {
  if (xd(e10) !== "object")
    return false;
  const t = Ng(e10);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e10) && !(Symbol.iterator in e10);
};
var P4 = Wo("Date");
var A4 = Wo("File");
var j4 = Wo("Blob");
var D4 = Wo("FileList");
var M4 = (e10) => Sd(e10) && so(e10.pipe);
var k4 = (e10) => {
  let t;
  return e10 && (typeof FormData == "function" && e10 instanceof FormData || so(e10.append) && ((t = xd(e10)) === "formdata" || // detect form-data instance
  t === "object" && so(e10.toString) && e10.toString() === "[object FormData]"));
};
var F4 = Wo("URLSearchParams");
var [N4, $4, V4, _4] = ["ReadableStream", "Request", "Response", "Headers"].map(Wo);
var L4 = (e10) => e10.trim ? e10.trim() : e10.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
function Fl(e10, t, { allOwnKeys: n = false } = {}) {
  if (e10 === null || typeof e10 > "u")
    return;
  let o, r;
  if (typeof e10 != "object" && (e10 = [e10]), Ys(e10))
    for (o = 0, r = e10.length; o < r; o++)
      t.call(null, e10[o], o, e10);
  else {
    const s = n ? Object.getOwnPropertyNames(e10) : Object.keys(e10), a = s.length;
    let l;
    for (o = 0; o < a; o++)
      l = s[o], t.call(null, e10[l], l, e10);
  }
}
function sw(e10, t) {
  t = t.toLowerCase();
  const n = Object.keys(e10);
  let o = n.length, r;
  for (; o-- > 0; )
    if (r = n[o], t === r.toLowerCase())
      return r;
  return null;
}
var Si = typeof globalThis < "u" ? globalThis : typeof self < "u" ? self : typeof window < "u" ? window : global;
var aw = (e10) => !pl(e10) && e10 !== Si;
function Jf() {
  const { caseless: e10 } = aw(this) && this || {}, t = {}, n = (o, r) => {
    const s = e10 && sw(t, r) || r;
    Vc(t[s]) && Vc(o) ? t[s] = Jf(t[s], o) : Vc(o) ? t[s] = Jf({}, o) : Ys(o) ? t[s] = o.slice() : t[s] = o;
  };
  for (let o = 0, r = arguments.length; o < r; o++)
    arguments[o] && Fl(arguments[o], n);
  return t;
}
var B4 = (e10, t, n, { allOwnKeys: o } = {}) => (Fl(t, (r, s) => {
  n && so(r) ? e10[s] = ow(r, n) : e10[s] = r;
}, { allOwnKeys: o }), e10);
var z4 = (e10) => (e10.charCodeAt(0) === 65279 && (e10 = e10.slice(1)), e10);
var W4 = (e10, t, n, o) => {
  e10.prototype = Object.create(t.prototype, o), e10.prototype.constructor = e10, Object.defineProperty(e10, "super", {
    value: t.prototype
  }), n && Object.assign(e10.prototype, n);
};
var H4 = (e10, t, n, o) => {
  let r, s, a;
  const l = {};
  if (t = t || {}, e10 == null) return t;
  do {
    for (r = Object.getOwnPropertyNames(e10), s = r.length; s-- > 0; )
      a = r[s], (!o || o(a, e10, t)) && !l[a] && (t[a] = e10[a], l[a] = true);
    e10 = n !== false && Ng(e10);
  } while (e10 && (!n || n(e10, t)) && e10 !== Object.prototype);
  return t;
};
var G4 = (e10, t, n) => {
  e10 = String(e10), (n === void 0 || n > e10.length) && (n = e10.length), n -= t.length;
  const o = e10.indexOf(t, n);
  return o !== -1 && o === n;
};
var U4 = (e10) => {
  if (!e10) return null;
  if (Ys(e10)) return e10;
  let t = e10.length;
  if (!iw(t)) return null;
  const n = new Array(t);
  for (; t-- > 0; )
    n[t] = e10[t];
  return n;
};
var X4 = /* @__PURE__ */ ((e10) => (t) => e10 && t instanceof e10)(typeof Uint8Array < "u" && Ng(Uint8Array));
var Y4 = (e10, t) => {
  const o = (e10 && e10[Symbol.iterator]).call(e10);
  let r;
  for (; (r = o.next()) && !r.done; ) {
    const s = r.value;
    t.call(e10, s[0], s[1]);
  }
};
var Z4 = (e10, t) => {
  let n;
  const o = [];
  for (; (n = e10.exec(t)) !== null; )
    o.push(n);
  return o;
};
var q4 = Wo("HTMLFormElement");
var J4 = (e10) => e10.toLowerCase().replace(
  /[-_\s]([a-z\d])(\w*)/g,
  function(n, o, r) {
    return o.toUpperCase() + r;
  }
);
var Dy = (({ hasOwnProperty: e10 }) => (t, n) => e10.call(t, n))(Object.prototype);
var K4 = Wo("RegExp");
var lw = (e10, t) => {
  const n = Object.getOwnPropertyDescriptors(e10), o = {};
  Fl(n, (r, s) => {
    let a;
    (a = t(r, s, e10)) !== false && (o[s] = a || r);
  }), Object.defineProperties(e10, o);
};
var Q4 = (e10) => {
  lw(e10, (t, n) => {
    if (so(e10) && ["arguments", "caller", "callee"].indexOf(n) !== -1)
      return false;
    const o = e10[n];
    if (so(o)) {
      if (t.enumerable = false, "writable" in t) {
        t.writable = false;
        return;
      }
      t.set || (t.set = () => {
        throw Error("Can not rewrite read-only method '" + n + "'");
      });
    }
  });
};
var eW = (e10, t) => {
  const n = {}, o = (r) => {
    r.forEach((s) => {
      n[s] = true;
    });
  };
  return Ys(e10) ? o(e10) : o(String(e10).split(t)), n;
};
var tW = () => {
};
var nW = (e10, t) => e10 != null && Number.isFinite(e10 = +e10) ? e10 : t;
var Ap = "abcdefghijklmnopqrstuvwxyz";
var My = "0123456789";
var cw = {
  DIGIT: My,
  ALPHA: Ap,
  ALPHA_DIGIT: Ap + Ap.toUpperCase() + My
};
var oW = (e10 = 16, t = cw.ALPHA_DIGIT) => {
  let n = "";
  const { length: o } = t;
  for (; e10--; )
    n += t[Math.random() * o | 0];
  return n;
};
function rW(e10) {
  return !!(e10 && so(e10.append) && e10[Symbol.toStringTag] === "FormData" && e10[Symbol.iterator]);
}
var iW = (e10) => {
  const t = new Array(10), n = (o, r) => {
    if (Sd(o)) {
      if (t.indexOf(o) >= 0)
        return;
      if (!("toJSON" in o)) {
        t[r] = o;
        const s = Ys(o) ? [] : {};
        return Fl(o, (a, l) => {
          const c = n(a, r + 1);
          !pl(c) && (s[l] = c);
        }), t[r] = void 0, s;
      }
    }
    return o;
  };
  return n(e10, 0);
};
var sW = Wo("AsyncFunction");
var aW = (e10) => e10 && (Sd(e10) || so(e10)) && so(e10.then) && so(e10.catch);
var uw = ((e10, t) => e10 ? setImmediate : t ? ((n, o) => (Si.addEventListener("message", ({ source: r, data: s }) => {
  r === Si && s === n && o.length && o.shift()();
}, false), (r) => {
  o.push(r), Si.postMessage(n, "*");
}))(`axios@${Math.random()}`, []) : (n) => setTimeout(n))(
  typeof setImmediate == "function",
  so(Si.postMessage)
);
var lW = typeof queueMicrotask < "u" ? queueMicrotask.bind(Si) : typeof process < "u" && process.nextTick || uw;
var xe = {
  isArray: Ys,
  isArrayBuffer: rw,
  isBuffer: I4,
  isFormData: k4,
  isArrayBufferView: R4,
  isString: E4,
  isNumber: iw,
  isBoolean: O4,
  isObject: Sd,
  isPlainObject: Vc,
  isReadableStream: N4,
  isRequest: $4,
  isResponse: V4,
  isHeaders: _4,
  isUndefined: pl,
  isDate: P4,
  isFile: A4,
  isBlob: j4,
  isRegExp: K4,
  isFunction: so,
  isStream: M4,
  isURLSearchParams: F4,
  isTypedArray: X4,
  isFileList: D4,
  forEach: Fl,
  merge: Jf,
  extend: B4,
  trim: L4,
  stripBOM: z4,
  inherits: W4,
  toFlatObject: H4,
  kindOf: xd,
  kindOfTest: Wo,
  endsWith: G4,
  toArray: U4,
  forEachEntry: Y4,
  matchAll: Z4,
  isHTMLForm: q4,
  hasOwnProperty: Dy,
  hasOwnProp: Dy,
  // an alias to avoid ESLint no-prototype-builtins detection
  reduceDescriptors: lw,
  freezeMethods: Q4,
  toObjectSet: eW,
  toCamelCase: J4,
  noop: tW,
  toFiniteNumber: nW,
  findKey: sw,
  global: Si,
  isContextDefined: aw,
  ALPHABET: cw,
  generateString: oW,
  isSpecCompliantForm: rW,
  toJSONObject: iW,
  isAsyncFn: sW,
  isThenable: aW,
  setImmediate: uw,
  asap: lW
};
function dt(e10, t, n, o, r) {
  Error.call(this), Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : this.stack = new Error().stack, this.message = e10, this.name = "AxiosError", t && (this.code = t), n && (this.config = n), o && (this.request = o), r && (this.response = r, this.status = r.status ? r.status : null);
}
xe.inherits(dt, Error, {
  toJSON: function() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: xe.toJSONObject(this.config),
      code: this.code,
      status: this.status
    };
  }
});
var dw = dt.prototype;
var pw = {};
[
  "ERR_BAD_OPTION_VALUE",
  "ERR_BAD_OPTION",
  "ECONNABORTED",
  "ETIMEDOUT",
  "ERR_NETWORK",
  "ERR_FR_TOO_MANY_REDIRECTS",
  "ERR_DEPRECATED",
  "ERR_BAD_RESPONSE",
  "ERR_BAD_REQUEST",
  "ERR_CANCELED",
  "ERR_NOT_SUPPORT",
  "ERR_INVALID_URL"
  // eslint-disable-next-line func-names
].forEach((e10) => {
  pw[e10] = { value: e10 };
});
Object.defineProperties(dt, pw);
Object.defineProperty(dw, "isAxiosError", { value: true });
dt.from = (e10, t, n, o, r, s) => {
  const a = Object.create(dw);
  return xe.toFlatObject(e10, a, function(c) {
    return c !== Error.prototype;
  }, (l) => l !== "isAxiosError"), dt.call(a, e10.message, t, n, o, r), a.cause = e10, a.name = e10.name, s && Object.assign(a, s), a;
};
var cW = null;
function Kf(e10) {
  return xe.isPlainObject(e10) || xe.isArray(e10);
}
function fw(e10) {
  return xe.endsWith(e10, "[]") ? e10.slice(0, -2) : e10;
}
function ky(e10, t, n) {
  return e10 ? e10.concat(t).map(function(r, s) {
    return r = fw(r), !n && s ? "[" + r + "]" : r;
  }).join(n ? "." : "") : t;
}
function uW(e10) {
  return xe.isArray(e10) && !e10.some(Kf);
}
var dW = xe.toFlatObject(xe, {}, null, function(t) {
  return /^is[A-Z]/.test(t);
});
function wd(e10, t, n) {
  if (!xe.isObject(e10))
    throw new TypeError("target must be an object");
  t = t || new FormData(), n = xe.toFlatObject(n, {
    metaTokens: true,
    dots: false,
    indexes: false
  }, false, function(v, h) {
    return !xe.isUndefined(h[v]);
  });
  const o = n.metaTokens, r = n.visitor || d, s = n.dots, a = n.indexes, c = (n.Blob || typeof Blob < "u" && Blob) && xe.isSpecCompliantForm(t);
  if (!xe.isFunction(r))
    throw new TypeError("visitor must be a function");
  function u(b) {
    if (b === null) return "";
    if (xe.isDate(b))
      return b.toISOString();
    if (!c && xe.isBlob(b))
      throw new dt("Blob is not supported. Use a Buffer instead.");
    return xe.isArrayBuffer(b) || xe.isTypedArray(b) ? c && typeof Blob == "function" ? new Blob([b]) : Buffer.from(b) : b;
  }
  function d(b, v, h) {
    let y = b;
    if (b && !h && typeof b == "object") {
      if (xe.endsWith(v, "{}"))
        v = o ? v : v.slice(0, -2), b = JSON.stringify(b);
      else if (xe.isArray(b) && uW(b) || (xe.isFileList(b) || xe.endsWith(v, "[]")) && (y = xe.toArray(b)))
        return v = fw(v), y.forEach(function(x, T) {
          !(xe.isUndefined(x) || x === null) && t.append(
            // eslint-disable-next-line no-nested-ternary
            a === true ? ky([v], T, s) : a === null ? v : v + "[]",
            u(x)
          );
        }), false;
    }
    return Kf(b) ? true : (t.append(ky(h, v, s), u(b)), false);
  }
  const p = [], m = Object.assign(dW, {
    defaultVisitor: d,
    convertValue: u,
    isVisitable: Kf
  });
  function g(b, v) {
    if (!xe.isUndefined(b)) {
      if (p.indexOf(b) !== -1)
        throw Error("Circular reference detected in " + v.join("."));
      p.push(b), xe.forEach(b, function(y, C) {
        (!(xe.isUndefined(y) || y === null) && r.call(
          t,
          y,
          xe.isString(C) ? C.trim() : C,
          v,
          m
        )) === true && g(y, v ? v.concat(C) : [C]);
      }), p.pop();
    }
  }
  if (!xe.isObject(e10))
    throw new TypeError("data must be an object");
  return g(e10), t;
}
function Fy(e10) {
  const t = {
    "!": "%21",
    "'": "%27",
    "(": "%28",
    ")": "%29",
    "~": "%7E",
    "%20": "+",
    "%00": "\0"
  };
  return encodeURIComponent(e10).replace(/[!'()~]|%20|%00/g, function(o) {
    return t[o];
  });
}
function $g(e10, t) {
  this._pairs = [], e10 && wd(e10, this, t);
}
var mw = $g.prototype;
mw.append = function(t, n) {
  this._pairs.push([t, n]);
};
mw.toString = function(t) {
  const n = t ? function(o) {
    return t.call(this, o, Fy);
  } : Fy;
  return this._pairs.map(function(r) {
    return n(r[0]) + "=" + n(r[1]);
  }, "").join("&");
};
function pW(e10) {
  return encodeURIComponent(e10).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
}
function gw(e10, t, n) {
  if (!t)
    return e10;
  const o = n && n.encode || pW, r = n && n.serialize;
  let s;
  if (r ? s = r(t, n) : s = xe.isURLSearchParams(t) ? t.toString() : new $g(t, n).toString(o), s) {
    const a = e10.indexOf("#");
    a !== -1 && (e10 = e10.slice(0, a)), e10 += (e10.indexOf("?") === -1 ? "?" : "&") + s;
  }
  return e10;
}
var Ny = class {
  constructor() {
    this.handlers = [];
  }
  /**
   * Add a new interceptor to the stack
   *
   * @param {Function} fulfilled The function to handle `then` for a `Promise`
   * @param {Function} rejected The function to handle `reject` for a `Promise`
   *
   * @return {Number} An ID used to remove interceptor later
   */
  use(t, n, o) {
    return this.handlers.push({
      fulfilled: t,
      rejected: n,
      synchronous: o ? o.synchronous : false,
      runWhen: o ? o.runWhen : null
    }), this.handlers.length - 1;
  }
  /**
   * Remove an interceptor from the stack
   *
   * @param {Number} id The ID that was returned by `use`
   *
   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise
   */
  eject(t) {
    this.handlers[t] && (this.handlers[t] = null);
  }
  /**
   * Clear all interceptors from the stack
   *
   * @returns {void}
   */
  clear() {
    this.handlers && (this.handlers = []);
  }
  /**
   * Iterate over all the registered interceptors
   *
   * This method is particularly useful for skipping over any
   * interceptors that may have become `null` calling `eject`.
   *
   * @param {Function} fn The function to call for each interceptor
   *
   * @returns {void}
   */
  forEach(t) {
    xe.forEach(this.handlers, function(o) {
      o !== null && t(o);
    });
  }
};
var hw = {
  silentJSONParsing: true,
  forcedJSONParsing: true,
  clarifyTimeoutError: false
};
var fW = typeof URLSearchParams < "u" ? URLSearchParams : $g;
var mW = typeof FormData < "u" ? FormData : null;
var gW = typeof Blob < "u" ? Blob : null;
var hW = {
  isBrowser: true,
  classes: {
    URLSearchParams: fW,
    FormData: mW,
    Blob: gW
  },
  protocols: ["http", "https", "file", "blob", "url", "data"]
};
var Vg = typeof window < "u" && typeof document < "u";
var Qf = typeof navigator == "object" && navigator || void 0;
var bW = Vg && (!Qf || ["ReactNative", "NativeScript", "NS"].indexOf(Qf.product) < 0);
var vW = typeof WorkerGlobalScope < "u" && // eslint-disable-next-line no-undef
self instanceof WorkerGlobalScope && typeof self.importScripts == "function";
var yW = Vg && window.location.href || "http://localhost";
var xW = Object.freeze(Object.defineProperty({
  __proto__: null,
  hasBrowserEnv: Vg,
  hasStandardBrowserEnv: bW,
  hasStandardBrowserWebWorkerEnv: vW,
  navigator: Qf,
  origin: yW
}, Symbol.toStringTag, { value: "Module" }));
var Xn = {
  ...xW,
  ...hW
};
function CW(e10, t) {
  return wd(e10, new Xn.classes.URLSearchParams(), Object.assign({
    visitor: function(n, o, r, s) {
      return Xn.isNode && xe.isBuffer(n) ? (this.append(o, n.toString("base64")), false) : s.defaultVisitor.apply(this, arguments);
    }
  }, t));
}
function SW(e10) {
  return xe.matchAll(/\w+|\[(\w*)]/g, e10).map((t) => t[0] === "[]" ? "" : t[1] || t[0]);
}
function wW(e10) {
  const t = {}, n = Object.keys(e10);
  let o;
  const r = n.length;
  let s;
  for (o = 0; o < r; o++)
    s = n[o], t[s] = e10[s];
  return t;
}
function bw(e10) {
  function t(n, o, r, s) {
    let a = n[s++];
    if (a === "__proto__") return true;
    const l = Number.isFinite(+a), c = s >= n.length;
    return a = !a && xe.isArray(r) ? r.length : a, c ? (xe.hasOwnProp(r, a) ? r[a] = [r[a], o] : r[a] = o, !l) : ((!r[a] || !xe.isObject(r[a])) && (r[a] = []), t(n, o, r[a], s) && xe.isArray(r[a]) && (r[a] = wW(r[a])), !l);
  }
  if (xe.isFormData(e10) && xe.isFunction(e10.entries)) {
    const n = {};
    return xe.forEachEntry(e10, (o, r) => {
      t(SW(o), r, n, 0);
    }), n;
  }
  return null;
}
function TW(e10, t, n) {
  if (xe.isString(e10))
    try {
      return (t || JSON.parse)(e10), xe.trim(e10);
    } catch (o) {
      if (o.name !== "SyntaxError")
        throw o;
    }
  return (0, JSON.stringify)(e10);
}
var Nl = {
  transitional: hw,
  adapter: ["xhr", "http", "fetch"],
  transformRequest: [function(t, n) {
    const o = n.getContentType() || "", r = o.indexOf("application/json") > -1, s = xe.isObject(t);
    if (s && xe.isHTMLForm(t) && (t = new FormData(t)), xe.isFormData(t))
      return r ? JSON.stringify(bw(t)) : t;
    if (xe.isArrayBuffer(t) || xe.isBuffer(t) || xe.isStream(t) || xe.isFile(t) || xe.isBlob(t) || xe.isReadableStream(t))
      return t;
    if (xe.isArrayBufferView(t))
      return t.buffer;
    if (xe.isURLSearchParams(t))
      return n.setContentType("application/x-www-form-urlencoded;charset=utf-8", false), t.toString();
    let l;
    if (s) {
      if (o.indexOf("application/x-www-form-urlencoded") > -1)
        return CW(t, this.formSerializer).toString();
      if ((l = xe.isFileList(t)) || o.indexOf("multipart/form-data") > -1) {
        const c = this.env && this.env.FormData;
        return wd(
          l ? { "files[]": t } : t,
          c && new c(),
          this.formSerializer
        );
      }
    }
    return s || r ? (n.setContentType("application/json", false), TW(t)) : t;
  }],
  transformResponse: [function(t) {
    const n = this.transitional || Nl.transitional, o = n && n.forcedJSONParsing, r = this.responseType === "json";
    if (xe.isResponse(t) || xe.isReadableStream(t))
      return t;
    if (t && xe.isString(t) && (o && !this.responseType || r)) {
      const a = !(n && n.silentJSONParsing) && r;
      try {
        return JSON.parse(t);
      } catch (l) {
        if (a)
          throw l.name === "SyntaxError" ? dt.from(l, dt.ERR_BAD_RESPONSE, this, null, this.response) : l;
      }
    }
    return t;
  }],
  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,
  xsrfCookieName: "XSRF-TOKEN",
  xsrfHeaderName: "X-XSRF-TOKEN",
  maxContentLength: -1,
  maxBodyLength: -1,
  env: {
    FormData: Xn.classes.FormData,
    Blob: Xn.classes.Blob
  },
  validateStatus: function(t) {
    return t >= 200 && t < 300;
  },
  headers: {
    common: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": void 0
    }
  }
};
xe.forEach(["delete", "get", "head", "post", "put", "patch"], (e10) => {
  Nl.headers[e10] = {};
});
var IW = xe.toObjectSet([
  "age",
  "authorization",
  "content-length",
  "content-type",
  "etag",
  "expires",
  "from",
  "host",
  "if-modified-since",
  "if-unmodified-since",
  "last-modified",
  "location",
  "max-forwards",
  "proxy-authorization",
  "referer",
  "retry-after",
  "user-agent"
]);
var RW = (e10) => {
  const t = {};
  let n, o, r;
  return e10 && e10.split(`
`).forEach(function(a) {
    r = a.indexOf(":"), n = a.substring(0, r).trim().toLowerCase(), o = a.substring(r + 1).trim(), !(!n || t[n] && IW[n]) && (n === "set-cookie" ? t[n] ? t[n].push(o) : t[n] = [o] : t[n] = t[n] ? t[n] + ", " + o : o);
  }), t;
};
var $y = Symbol("internals");
function ma(e10) {
  return e10 && String(e10).trim().toLowerCase();
}
function _c(e10) {
  return e10 === false || e10 == null ? e10 : xe.isArray(e10) ? e10.map(_c) : String(e10);
}
function EW(e10) {
  const t = /* @__PURE__ */ Object.create(null), n = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
  let o;
  for (; o = n.exec(e10); )
    t[o[1]] = o[2];
  return t;
}
var OW = (e10) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e10.trim());
function jp(e10, t, n, o, r) {
  if (xe.isFunction(o))
    return o.call(this, t, n);
  if (r && (t = n), !!xe.isString(t)) {
    if (xe.isString(o))
      return t.indexOf(o) !== -1;
    if (xe.isRegExp(o))
      return o.test(t);
  }
}
function PW(e10) {
  return e10.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (t, n, o) => n.toUpperCase() + o);
}
function AW(e10, t) {
  const n = xe.toCamelCase(" " + t);
  ["get", "set", "has"].forEach((o) => {
    Object.defineProperty(e10, o + n, {
      value: function(r, s, a) {
        return this[o].call(this, t, r, s, a);
      },
      configurable: true
    });
  });
}
var Yn = class {
  constructor(t) {
    t && this.set(t);
  }
  set(t, n, o) {
    const r = this;
    function s(l, c, u) {
      const d = ma(c);
      if (!d)
        throw new Error("header name must be a non-empty string");
      const p = xe.findKey(r, d);
      (!p || r[p] === void 0 || u === true || u === void 0 && r[p] !== false) && (r[p || c] = _c(l));
    }
    const a = (l, c) => xe.forEach(l, (u, d) => s(u, d, c));
    if (xe.isPlainObject(t) || t instanceof this.constructor)
      a(t, n);
    else if (xe.isString(t) && (t = t.trim()) && !OW(t))
      a(RW(t), n);
    else if (xe.isHeaders(t))
      for (const [l, c] of t.entries())
        s(c, l, o);
    else
      t != null && s(n, t, o);
    return this;
  }
  get(t, n) {
    if (t = ma(t), t) {
      const o = xe.findKey(this, t);
      if (o) {
        const r = this[o];
        if (!n)
          return r;
        if (n === true)
          return EW(r);
        if (xe.isFunction(n))
          return n.call(this, r, o);
        if (xe.isRegExp(n))
          return n.exec(r);
        throw new TypeError("parser must be boolean|regexp|function");
      }
    }
  }
  has(t, n) {
    if (t = ma(t), t) {
      const o = xe.findKey(this, t);
      return !!(o && this[o] !== void 0 && (!n || jp(this, this[o], o, n)));
    }
    return false;
  }
  delete(t, n) {
    const o = this;
    let r = false;
    function s(a) {
      if (a = ma(a), a) {
        const l = xe.findKey(o, a);
        l && (!n || jp(o, o[l], l, n)) && (delete o[l], r = true);
      }
    }
    return xe.isArray(t) ? t.forEach(s) : s(t), r;
  }
  clear(t) {
    const n = Object.keys(this);
    let o = n.length, r = false;
    for (; o--; ) {
      const s = n[o];
      (!t || jp(this, this[s], s, t, true)) && (delete this[s], r = true);
    }
    return r;
  }
  normalize(t) {
    const n = this, o = {};
    return xe.forEach(this, (r, s) => {
      const a = xe.findKey(o, s);
      if (a) {
        n[a] = _c(r), delete n[s];
        return;
      }
      const l = t ? PW(s) : String(s).trim();
      l !== s && delete n[s], n[l] = _c(r), o[l] = true;
    }), this;
  }
  concat(...t) {
    return this.constructor.concat(this, ...t);
  }
  toJSON(t) {
    const n = /* @__PURE__ */ Object.create(null);
    return xe.forEach(this, (o, r) => {
      o != null && o !== false && (n[r] = t && xe.isArray(o) ? o.join(", ") : o);
    }), n;
  }
  [Symbol.iterator]() {
    return Object.entries(this.toJSON())[Symbol.iterator]();
  }
  toString() {
    return Object.entries(this.toJSON()).map(([t, n]) => t + ": " + n).join(`
`);
  }
  get [Symbol.toStringTag]() {
    return "AxiosHeaders";
  }
  static from(t) {
    return t instanceof this ? t : new this(t);
  }
  static concat(t, ...n) {
    const o = new this(t);
    return n.forEach((r) => o.set(r)), o;
  }
  static accessor(t) {
    const o = (this[$y] = this[$y] = {
      accessors: {}
    }).accessors, r = this.prototype;
    function s(a) {
      const l = ma(a);
      o[l] || (AW(r, a), o[l] = true);
    }
    return xe.isArray(t) ? t.forEach(s) : s(t), this;
  }
};
Yn.accessor(["Content-Type", "Content-Length", "Accept", "Accept-Encoding", "User-Agent", "Authorization"]);
xe.reduceDescriptors(Yn.prototype, ({ value: e10 }, t) => {
  let n = t[0].toUpperCase() + t.slice(1);
  return {
    get: () => e10,
    set(o) {
      this[n] = o;
    }
  };
});
xe.freezeMethods(Yn);
function Dp(e10, t) {
  const n = this || Nl, o = t || n, r = Yn.from(o.headers);
  let s = o.data;
  return xe.forEach(e10, function(l) {
    s = l.call(n, s, r.normalize(), t ? t.status : void 0);
  }), r.normalize(), s;
}
function vw(e10) {
  return !!(e10 && e10.__CANCEL__);
}
function Zs(e10, t, n) {
  dt.call(this, e10 ?? "canceled", dt.ERR_CANCELED, t, n), this.name = "CanceledError";
}
xe.inherits(Zs, dt, {
  __CANCEL__: true
});
function yw(e10, t, n) {
  const o = n.config.validateStatus;
  !n.status || !o || o(n.status) ? e10(n) : t(new dt(
    "Request failed with status code " + n.status,
    [dt.ERR_BAD_REQUEST, dt.ERR_BAD_RESPONSE][Math.floor(n.status / 100) - 4],
    n.config,
    n.request,
    n
  ));
}
function jW(e10) {
  const t = /^([-+\w]{1,25})(:?\/\/|:)/.exec(e10);
  return t && t[1] || "";
}
function DW(e10, t) {
  e10 = e10 || 10;
  const n = new Array(e10), o = new Array(e10);
  let r = 0, s = 0, a;
  return t = t !== void 0 ? t : 1e3, function(c) {
    const u = Date.now(), d = o[s];
    a || (a = u), n[r] = c, o[r] = u;
    let p = s, m = 0;
    for (; p !== r; )
      m += n[p++], p = p % e10;
    if (r = (r + 1) % e10, r === s && (s = (s + 1) % e10), u - a < t)
      return;
    const g = d && u - d;
    return g ? Math.round(m * 1e3 / g) : void 0;
  };
}
function MW(e10, t) {
  let n = 0, o = 1e3 / t, r, s;
  const a = (u, d = Date.now()) => {
    n = d, r = null, s && (clearTimeout(s), s = null), e10.apply(null, u);
  };
  return [(...u) => {
    const d = Date.now(), p = d - n;
    p >= o ? a(u, d) : (r = u, s || (s = setTimeout(() => {
      s = null, a(r);
    }, o - p)));
  }, () => r && a(r)];
}
var uu = (e10, t, n = 3) => {
  let o = 0;
  const r = DW(50, 250);
  return MW((s) => {
    const a = s.loaded, l = s.lengthComputable ? s.total : void 0, c = a - o, u = r(c), d = a <= l;
    o = a;
    const p = {
      loaded: a,
      total: l,
      progress: l ? a / l : void 0,
      bytes: c,
      rate: u || void 0,
      estimated: u && l && d ? (l - a) / u : void 0,
      event: s,
      lengthComputable: l != null,
      [t ? "download" : "upload"]: true
    };
    e10(p);
  }, n);
};
var Vy = (e10, t) => {
  const n = e10 != null;
  return [(o) => t[0]({
    lengthComputable: n,
    total: e10,
    loaded: o
  }), t[1]];
};
var _y = (e10) => (...t) => xe.asap(() => e10(...t));
var kW = Xn.hasStandardBrowserEnv ? (
  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
  function() {
    const t = Xn.navigator && /(msie|trident)/i.test(Xn.navigator.userAgent), n = document.createElement("a");
    let o;
    function r(s) {
      let a = s;
      return t && (n.setAttribute("href", a), a = n.href), n.setAttribute("href", a), {
        href: n.href,
        protocol: n.protocol ? n.protocol.replace(/:$/, "") : "",
        host: n.host,
        search: n.search ? n.search.replace(/^\?/, "") : "",
        hash: n.hash ? n.hash.replace(/^#/, "") : "",
        hostname: n.hostname,
        port: n.port,
        pathname: n.pathname.charAt(0) === "/" ? n.pathname : "/" + n.pathname
      };
    }
    return o = r(window.location.href), function(a) {
      const l = xe.isString(a) ? r(a) : a;
      return l.protocol === o.protocol && l.host === o.host;
    };
  }()
) : (
  // Non standard browser envs (web workers, react-native) lack needed support.
  /* @__PURE__ */ function() {
    return function() {
      return true;
    };
  }()
);
var FW = Xn.hasStandardBrowserEnv ? (
  // Standard browser envs support document.cookie
  {
    write(e10, t, n, o, r, s) {
      const a = [e10 + "=" + encodeURIComponent(t)];
      xe.isNumber(n) && a.push("expires=" + new Date(n).toGMTString()), xe.isString(o) && a.push("path=" + o), xe.isString(r) && a.push("domain=" + r), s === true && a.push("secure"), document.cookie = a.join("; ");
    },
    read(e10) {
      const t = document.cookie.match(new RegExp("(^|;\\s*)(" + e10 + ")=([^;]*)"));
      return t ? decodeURIComponent(t[3]) : null;
    },
    remove(e10) {
      this.write(e10, "", Date.now() - 864e5);
    }
  }
) : (
  // Non-standard browser env (web workers, react-native) lack needed support.
  {
    write() {
    },
    read() {
      return null;
    },
    remove() {
    }
  }
);
function NW(e10) {
  return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(e10);
}
function $W(e10, t) {
  return t ? e10.replace(/\/?\/$/, "") + "/" + t.replace(/^\/+/, "") : e10;
}
function xw(e10, t) {
  return e10 && !NW(t) ? $W(e10, t) : t;
}
var Ly = (e10) => e10 instanceof Yn ? { ...e10 } : e10;
function Di(e10, t) {
  t = t || {};
  const n = {};
  function o(u, d, p) {
    return xe.isPlainObject(u) && xe.isPlainObject(d) ? xe.merge.call({ caseless: p }, u, d) : xe.isPlainObject(d) ? xe.merge({}, d) : xe.isArray(d) ? d.slice() : d;
  }
  function r(u, d, p) {
    if (xe.isUndefined(d)) {
      if (!xe.isUndefined(u))
        return o(void 0, u, p);
    } else return o(u, d, p);
  }
  function s(u, d) {
    if (!xe.isUndefined(d))
      return o(void 0, d);
  }
  function a(u, d) {
    if (xe.isUndefined(d)) {
      if (!xe.isUndefined(u))
        return o(void 0, u);
    } else return o(void 0, d);
  }
  function l(u, d, p) {
    if (p in t)
      return o(u, d);
    if (p in e10)
      return o(void 0, u);
  }
  const c = {
    url: s,
    method: s,
    data: s,
    baseURL: a,
    transformRequest: a,
    transformResponse: a,
    paramsSerializer: a,
    timeout: a,
    timeoutMessage: a,
    withCredentials: a,
    withXSRFToken: a,
    adapter: a,
    responseType: a,
    xsrfCookieName: a,
    xsrfHeaderName: a,
    onUploadProgress: a,
    onDownloadProgress: a,
    decompress: a,
    maxContentLength: a,
    maxBodyLength: a,
    beforeRedirect: a,
    transport: a,
    httpAgent: a,
    httpsAgent: a,
    cancelToken: a,
    socketPath: a,
    responseEncoding: a,
    validateStatus: l,
    headers: (u, d) => r(Ly(u), Ly(d), true)
  };
  return xe.forEach(Object.keys(Object.assign({}, e10, t)), function(d) {
    const p = c[d] || r, m = p(e10[d], t[d], d);
    xe.isUndefined(m) && p !== l || (n[d] = m);
  }), n;
}
var Cw = (e10) => {
  const t = Di({}, e10);
  let { data: n, withXSRFToken: o, xsrfHeaderName: r, xsrfCookieName: s, headers: a, auth: l } = t;
  t.headers = a = Yn.from(a), t.url = gw(xw(t.baseURL, t.url), e10.params, e10.paramsSerializer), l && a.set(
    "Authorization",
    "Basic " + btoa((l.username || "") + ":" + (l.password ? unescape(encodeURIComponent(l.password)) : ""))
  );
  let c;
  if (xe.isFormData(n)) {
    if (Xn.hasStandardBrowserEnv || Xn.hasStandardBrowserWebWorkerEnv)
      a.setContentType(void 0);
    else if ((c = a.getContentType()) !== false) {
      const [u, ...d] = c ? c.split(";").map((p) => p.trim()).filter(Boolean) : [];
      a.setContentType([u || "multipart/form-data", ...d].join("; "));
    }
  }
  if (Xn.hasStandardBrowserEnv && (o && xe.isFunction(o) && (o = o(t)), o || o !== false && kW(t.url))) {
    const u = r && s && FW.read(s);
    u && a.set(r, u);
  }
  return t;
};
var VW = typeof XMLHttpRequest < "u";
var _W = VW && function(e10) {
  return new Promise(function(n, o) {
    const r = Cw(e10);
    let s = r.data;
    const a = Yn.from(r.headers).normalize();
    let { responseType: l, onUploadProgress: c, onDownloadProgress: u } = r, d, p, m, g, b;
    function v() {
      g && g(), b && b(), r.cancelToken && r.cancelToken.unsubscribe(d), r.signal && r.signal.removeEventListener("abort", d);
    }
    let h = new XMLHttpRequest();
    h.open(r.method.toUpperCase(), r.url, true), h.timeout = r.timeout;
    function y() {
      if (!h)
        return;
      const x = Yn.from(
        "getAllResponseHeaders" in h && h.getAllResponseHeaders()
      ), w = {
        data: !l || l === "text" || l === "json" ? h.responseText : h.response,
        status: h.status,
        statusText: h.statusText,
        headers: x,
        config: e10,
        request: h
      };
      yw(function(E) {
        n(E), v();
      }, function(E) {
        o(E), v();
      }, w), h = null;
    }
    "onloadend" in h ? h.onloadend = y : h.onreadystatechange = function() {
      !h || h.readyState !== 4 || h.status === 0 && !(h.responseURL && h.responseURL.indexOf("file:") === 0) || setTimeout(y);
    }, h.onabort = function() {
      h && (o(new dt("Request aborted", dt.ECONNABORTED, e10, h)), h = null);
    }, h.onerror = function() {
      o(new dt("Network Error", dt.ERR_NETWORK, e10, h)), h = null;
    }, h.ontimeout = function() {
      let T = r.timeout ? "timeout of " + r.timeout + "ms exceeded" : "timeout exceeded";
      const w = r.transitional || hw;
      r.timeoutErrorMessage && (T = r.timeoutErrorMessage), o(new dt(
        T,
        w.clarifyTimeoutError ? dt.ETIMEDOUT : dt.ECONNABORTED,
        e10,
        h
      )), h = null;
    }, s === void 0 && a.setContentType(null), "setRequestHeader" in h && xe.forEach(a.toJSON(), function(T, w) {
      h.setRequestHeader(w, T);
    }), xe.isUndefined(r.withCredentials) || (h.withCredentials = !!r.withCredentials), l && l !== "json" && (h.responseType = r.responseType), u && ([m, b] = uu(u, true), h.addEventListener("progress", m)), c && h.upload && ([p, g] = uu(c), h.upload.addEventListener("progress", p), h.upload.addEventListener("loadend", g)), (r.cancelToken || r.signal) && (d = (x) => {
      h && (o(!x || x.type ? new Zs(null, e10, h) : x), h.abort(), h = null);
    }, r.cancelToken && r.cancelToken.subscribe(d), r.signal && (r.signal.aborted ? d() : r.signal.addEventListener("abort", d)));
    const C = jW(r.url);
    if (C && Xn.protocols.indexOf(C) === -1) {
      o(new dt("Unsupported protocol " + C + ":", dt.ERR_BAD_REQUEST, e10));
      return;
    }
    h.send(s || null);
  });
};
var LW = (e10, t) => {
  const { length: n } = e10 = e10 ? e10.filter(Boolean) : [];
  if (t || n) {
    let o = new AbortController(), r;
    const s = function(u) {
      if (!r) {
        r = true, l();
        const d = u instanceof Error ? u : this.reason;
        o.abort(d instanceof dt ? d : new Zs(d instanceof Error ? d.message : d));
      }
    };
    let a = t && setTimeout(() => {
      a = null, s(new dt(`timeout ${t} of ms exceeded`, dt.ETIMEDOUT));
    }, t);
    const l = () => {
      e10 && (a && clearTimeout(a), a = null, e10.forEach((u) => {
        u.unsubscribe ? u.unsubscribe(s) : u.removeEventListener("abort", s);
      }), e10 = null);
    };
    e10.forEach((u) => u.addEventListener("abort", s));
    const { signal: c } = o;
    return c.unsubscribe = () => xe.asap(l), c;
  }
};
var BW = function* (e10, t) {
  let n = e10.byteLength;
  if (n < t) {
    yield e10;
    return;
  }
  let o = 0, r;
  for (; o < n; )
    r = o + t, yield e10.slice(o, r), o = r;
};
var zW = async function* (e10, t) {
  for await (const n of WW(e10))
    yield* BW(n, t);
};
var WW = async function* (e10) {
  if (e10[Symbol.asyncIterator]) {
    yield* e10;
    return;
  }
  const t = e10.getReader();
  try {
    for (; ; ) {
      const { done: n, value: o } = await t.read();
      if (n)
        break;
      yield o;
    }
  } finally {
    await t.cancel();
  }
};
var By = (e10, t, n, o) => {
  const r = zW(e10, t);
  let s = 0, a, l = (c) => {
    a || (a = true, o && o(c));
  };
  return new ReadableStream({
    async pull(c) {
      try {
        const { done: u, value: d } = await r.next();
        if (u) {
          l(), c.close();
          return;
        }
        let p = d.byteLength;
        if (n) {
          let m = s += p;
          n(m);
        }
        c.enqueue(new Uint8Array(d));
      } catch (u) {
        throw l(u), u;
      }
    },
    cancel(c) {
      return l(c), r.return();
    }
  }, {
    highWaterMark: 2
  });
};
var Td = typeof fetch == "function" && typeof Request == "function" && typeof Response == "function";
var Sw = Td && typeof ReadableStream == "function";
var HW = Td && (typeof TextEncoder == "function" ? /* @__PURE__ */ ((e10) => (t) => e10.encode(t))(new TextEncoder()) : async (e10) => new Uint8Array(await new Response(e10).arrayBuffer()));
var ww = (e10, ...t) => {
  try {
    return !!e10(...t);
  } catch {
    return false;
  }
};
var GW = Sw && ww(() => {
  let e10 = false;
  const t = new Request(Xn.origin, {
    body: new ReadableStream(),
    method: "POST",
    get duplex() {
      return e10 = true, "half";
    }
  }).headers.has("Content-Type");
  return e10 && !t;
});
var zy = 64 * 1024;
var em = Sw && ww(() => xe.isReadableStream(new Response("").body));
var du = {
  stream: em && ((e10) => e10.body)
};
Td && ((e10) => {
  ["text", "arrayBuffer", "blob", "formData", "stream"].forEach((t) => {
    !du[t] && (du[t] = xe.isFunction(e10[t]) ? (n) => n[t]() : (n, o) => {
      throw new dt(`Response type '${t}' is not supported`, dt.ERR_NOT_SUPPORT, o);
    });
  });
})(new Response());
var UW = async (e10) => {
  if (e10 == null)
    return 0;
  if (xe.isBlob(e10))
    return e10.size;
  if (xe.isSpecCompliantForm(e10))
    return (await new Request(Xn.origin, {
      method: "POST",
      body: e10
    }).arrayBuffer()).byteLength;
  if (xe.isArrayBufferView(e10) || xe.isArrayBuffer(e10))
    return e10.byteLength;
  if (xe.isURLSearchParams(e10) && (e10 = e10 + ""), xe.isString(e10))
    return (await HW(e10)).byteLength;
};
var XW = async (e10, t) => {
  const n = xe.toFiniteNumber(e10.getContentLength());
  return n ?? UW(t);
};
var YW = Td && (async (e10) => {
  let {
    url: t,
    method: n,
    data: o,
    signal: r,
    cancelToken: s,
    timeout: a,
    onDownloadProgress: l,
    onUploadProgress: c,
    responseType: u,
    headers: d,
    withCredentials: p = "same-origin",
    fetchOptions: m
  } = Cw(e10);
  u = u ? (u + "").toLowerCase() : "text";
  let g = LW([r, s && s.toAbortSignal()], a), b;
  const v = g && g.unsubscribe && (() => {
    g.unsubscribe();
  });
  let h;
  try {
    if (c && GW && n !== "get" && n !== "head" && (h = await XW(d, o)) !== 0) {
      let w = new Request(t, {
        method: "POST",
        body: o,
        duplex: "half"
      }), R;
      if (xe.isFormData(o) && (R = w.headers.get("content-type")) && d.setContentType(R), w.body) {
        const [E, O] = Vy(
          h,
          uu(_y(c))
        );
        o = By(w.body, zy, E, O);
      }
    }
    xe.isString(p) || (p = p ? "include" : "omit");
    const y = "credentials" in Request.prototype;
    b = new Request(t, {
      ...m,
      signal: g,
      method: n.toUpperCase(),
      headers: d.normalize().toJSON(),
      body: o,
      duplex: "half",
      credentials: y ? p : void 0
    });
    let C = await fetch(b);
    const x = em && (u === "stream" || u === "response");
    if (em && (l || x && v)) {
      const w = {};
      ["status", "statusText", "headers"].forEach((I) => {
        w[I] = C[I];
      });
      const R = xe.toFiniteNumber(C.headers.get("content-length")), [E, O] = l && Vy(
        R,
        uu(_y(l), true)
      ) || [];
      C = new Response(
        By(C.body, zy, E, () => {
          O && O(), v && v();
        }),
        w
      );
    }
    u = u || "text";
    let T = await du[xe.findKey(du, u) || "text"](C, e10);
    return !x && v && v(), await new Promise((w, R) => {
      yw(w, R, {
        data: T,
        headers: Yn.from(C.headers),
        status: C.status,
        statusText: C.statusText,
        config: e10,
        request: b
      });
    });
  } catch (y) {
    throw v && v(), y && y.name === "TypeError" && /fetch/i.test(y.message) ? Object.assign(
      new dt("Network Error", dt.ERR_NETWORK, e10, b),
      {
        cause: y.cause || y
      }
    ) : dt.from(y, y && y.code, e10, b);
  }
});
var tm = {
  http: cW,
  xhr: _W,
  fetch: YW
};
xe.forEach(tm, (e10, t) => {
  if (e10) {
    try {
      Object.defineProperty(e10, "name", { value: t });
    } catch {
    }
    Object.defineProperty(e10, "adapterName", { value: t });
  }
});
var Wy = (e10) => `- ${e10}`;
var ZW = (e10) => xe.isFunction(e10) || e10 === null || e10 === false;
var Tw = {
  getAdapter: (e10) => {
    e10 = xe.isArray(e10) ? e10 : [e10];
    const { length: t } = e10;
    let n, o;
    const r = {};
    for (let s = 0; s < t; s++) {
      n = e10[s];
      let a;
      if (o = n, !ZW(n) && (o = tm[(a = String(n)).toLowerCase()], o === void 0))
        throw new dt(`Unknown adapter '${a}'`);
      if (o)
        break;
      r[a || "#" + s] = o;
    }
    if (!o) {
      const s = Object.entries(r).map(
        ([l, c]) => `adapter ${l} ` + (c === false ? "is not supported by the environment" : "is not available in the build")
      );
      let a = t ? s.length > 1 ? `since :
` + s.map(Wy).join(`
`) : " " + Wy(s[0]) : "as no adapter specified";
      throw new dt(
        "There is no suitable adapter to dispatch the request " + a,
        "ERR_NOT_SUPPORT"
      );
    }
    return o;
  },
  adapters: tm
};
function Mp(e10) {
  if (e10.cancelToken && e10.cancelToken.throwIfRequested(), e10.signal && e10.signal.aborted)
    throw new Zs(null, e10);
}
function Hy(e10) {
  return Mp(e10), e10.headers = Yn.from(e10.headers), e10.data = Dp.call(
    e10,
    e10.transformRequest
  ), ["post", "put", "patch"].indexOf(e10.method) !== -1 && e10.headers.setContentType("application/x-www-form-urlencoded", false), Tw.getAdapter(e10.adapter || Nl.adapter)(e10).then(function(o) {
    return Mp(e10), o.data = Dp.call(
      e10,
      e10.transformResponse,
      o
    ), o.headers = Yn.from(o.headers), o;
  }, function(o) {
    return vw(o) || (Mp(e10), o && o.response && (o.response.data = Dp.call(
      e10,
      e10.transformResponse,
      o.response
    ), o.response.headers = Yn.from(o.response.headers))), Promise.reject(o);
  });
}
var Iw = "1.7.7";
var _g = {};
["object", "boolean", "number", "function", "string", "symbol"].forEach((e10, t) => {
  _g[e10] = function(o) {
    return typeof o === e10 || "a" + (t < 1 ? "n " : " ") + e10;
  };
});
var Gy = {};
_g.transitional = function(t, n, o) {
  function r(s, a) {
    return "[Axios v" + Iw + "] Transitional option '" + s + "'" + a + (o ? ". " + o : "");
  }
  return (s, a, l) => {
    if (t === false)
      throw new dt(
        r(a, " has been removed" + (n ? " in " + n : "")),
        dt.ERR_DEPRECATED
      );
    return n && !Gy[a] && (Gy[a] = true, console.warn(
      r(
        a,
        " has been deprecated since v" + n + " and will be removed in the near future"
      )
    )), t ? t(s, a, l) : true;
  };
};
function qW(e10, t, n) {
  if (typeof e10 != "object")
    throw new dt("options must be an object", dt.ERR_BAD_OPTION_VALUE);
  const o = Object.keys(e10);
  let r = o.length;
  for (; r-- > 0; ) {
    const s = o[r], a = t[s];
    if (a) {
      const l = e10[s], c = l === void 0 || a(l, s, e10);
      if (c !== true)
        throw new dt("option " + s + " must be " + c, dt.ERR_BAD_OPTION_VALUE);
      continue;
    }
    if (n !== true)
      throw new dt("Unknown option " + s, dt.ERR_BAD_OPTION);
  }
}
var nm = {
  assertOptions: qW,
  validators: _g
};
var _r = nm.validators;
var Ei = class {
  constructor(t) {
    this.defaults = t, this.interceptors = {
      request: new Ny(),
      response: new Ny()
    };
  }
  /**
   * Dispatch a request
   *
   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)
   * @param {?Object} config
   *
   * @returns {Promise} The Promise to be fulfilled
   */
  async request(t, n) {
    try {
      return await this._request(t, n);
    } catch (o) {
      if (o instanceof Error) {
        let r;
        Error.captureStackTrace ? Error.captureStackTrace(r = {}) : r = new Error();
        const s = r.stack ? r.stack.replace(/^.+\n/, "") : "";
        try {
          o.stack ? s && !String(o.stack).endsWith(s.replace(/^.+\n.+\n/, "")) && (o.stack += `
` + s) : o.stack = s;
        } catch {
        }
      }
      throw o;
    }
  }
  _request(t, n) {
    typeof t == "string" ? (n = n || {}, n.url = t) : n = t || {}, n = Di(this.defaults, n);
    const { transitional: o, paramsSerializer: r, headers: s } = n;
    o !== void 0 && nm.assertOptions(o, {
      silentJSONParsing: _r.transitional(_r.boolean),
      forcedJSONParsing: _r.transitional(_r.boolean),
      clarifyTimeoutError: _r.transitional(_r.boolean)
    }, false), r != null && (xe.isFunction(r) ? n.paramsSerializer = {
      serialize: r
    } : nm.assertOptions(r, {
      encode: _r.function,
      serialize: _r.function
    }, true)), n.method = (n.method || this.defaults.method || "get").toLowerCase();
    let a = s && xe.merge(
      s.common,
      s[n.method]
    );
    s && xe.forEach(
      ["delete", "get", "head", "post", "put", "patch", "common"],
      (b) => {
        delete s[b];
      }
    ), n.headers = Yn.concat(a, s);
    const l = [];
    let c = true;
    this.interceptors.request.forEach(function(v) {
      typeof v.runWhen == "function" && v.runWhen(n) === false || (c = c && v.synchronous, l.unshift(v.fulfilled, v.rejected));
    });
    const u = [];
    this.interceptors.response.forEach(function(v) {
      u.push(v.fulfilled, v.rejected);
    });
    let d, p = 0, m;
    if (!c) {
      const b = [Hy.bind(this), void 0];
      for (b.unshift.apply(b, l), b.push.apply(b, u), m = b.length, d = Promise.resolve(n); p < m; )
        d = d.then(b[p++], b[p++]);
      return d;
    }
    m = l.length;
    let g = n;
    for (p = 0; p < m; ) {
      const b = l[p++], v = l[p++];
      try {
        g = b(g);
      } catch (h) {
        v.call(this, h);
        break;
      }
    }
    try {
      d = Hy.call(this, g);
    } catch (b) {
      return Promise.reject(b);
    }
    for (p = 0, m = u.length; p < m; )
      d = d.then(u[p++], u[p++]);
    return d;
  }
  getUri(t) {
    t = Di(this.defaults, t);
    const n = xw(t.baseURL, t.url);
    return gw(n, t.params, t.paramsSerializer);
  }
};
xe.forEach(["delete", "get", "head", "options"], function(t) {
  Ei.prototype[t] = function(n, o) {
    return this.request(Di(o || {}, {
      method: t,
      url: n,
      data: (o || {}).data
    }));
  };
});
xe.forEach(["post", "put", "patch"], function(t) {
  function n(o) {
    return function(s, a, l) {
      return this.request(Di(l || {}, {
        method: t,
        headers: o ? {
          "Content-Type": "multipart/form-data"
        } : {},
        url: s,
        data: a
      }));
    };
  }
  Ei.prototype[t] = n(), Ei.prototype[t + "Form"] = n(true);
});
var Lg = class _Lg {
  constructor(t) {
    if (typeof t != "function")
      throw new TypeError("executor must be a function.");
    let n;
    this.promise = new Promise(function(s) {
      n = s;
    });
    const o = this;
    this.promise.then((r) => {
      if (!o._listeners) return;
      let s = o._listeners.length;
      for (; s-- > 0; )
        o._listeners[s](r);
      o._listeners = null;
    }), this.promise.then = (r) => {
      let s;
      const a = new Promise((l) => {
        o.subscribe(l), s = l;
      }).then(r);
      return a.cancel = function() {
        o.unsubscribe(s);
      }, a;
    }, t(function(s, a, l) {
      o.reason || (o.reason = new Zs(s, a, l), n(o.reason));
    });
  }
  /**
   * Throws a `CanceledError` if cancellation has been requested.
   */
  throwIfRequested() {
    if (this.reason)
      throw this.reason;
  }
  /**
   * Subscribe to the cancel signal
   */
  subscribe(t) {
    if (this.reason) {
      t(this.reason);
      return;
    }
    this._listeners ? this._listeners.push(t) : this._listeners = [t];
  }
  /**
   * Unsubscribe from the cancel signal
   */
  unsubscribe(t) {
    if (!this._listeners)
      return;
    const n = this._listeners.indexOf(t);
    n !== -1 && this._listeners.splice(n, 1);
  }
  toAbortSignal() {
    const t = new AbortController(), n = (o) => {
      t.abort(o);
    };
    return this.subscribe(n), t.signal.unsubscribe = () => this.unsubscribe(n), t.signal;
  }
  /**
   * Returns an object that contains a new `CancelToken` and a function that, when called,
   * cancels the `CancelToken`.
   */
  static source() {
    let t;
    return {
      token: new _Lg(function(r) {
        t = r;
      }),
      cancel: t
    };
  }
};
function JW(e10) {
  return function(n) {
    return e10.apply(null, n);
  };
}
function KW(e10) {
  return xe.isObject(e10) && e10.isAxiosError === true;
}
var om = {
  Continue: 100,
  SwitchingProtocols: 101,
  Processing: 102,
  EarlyHints: 103,
  Ok: 200,
  Created: 201,
  Accepted: 202,
  NonAuthoritativeInformation: 203,
  NoContent: 204,
  ResetContent: 205,
  PartialContent: 206,
  MultiStatus: 207,
  AlreadyReported: 208,
  ImUsed: 226,
  MultipleChoices: 300,
  MovedPermanently: 301,
  Found: 302,
  SeeOther: 303,
  NotModified: 304,
  UseProxy: 305,
  Unused: 306,
  TemporaryRedirect: 307,
  PermanentRedirect: 308,
  BadRequest: 400,
  Unauthorized: 401,
  PaymentRequired: 402,
  Forbidden: 403,
  NotFound: 404,
  MethodNotAllowed: 405,
  NotAcceptable: 406,
  ProxyAuthenticationRequired: 407,
  RequestTimeout: 408,
  Conflict: 409,
  Gone: 410,
  LengthRequired: 411,
  PreconditionFailed: 412,
  PayloadTooLarge: 413,
  UriTooLong: 414,
  UnsupportedMediaType: 415,
  RangeNotSatisfiable: 416,
  ExpectationFailed: 417,
  ImATeapot: 418,
  MisdirectedRequest: 421,
  UnprocessableEntity: 422,
  Locked: 423,
  FailedDependency: 424,
  TooEarly: 425,
  UpgradeRequired: 426,
  PreconditionRequired: 428,
  TooManyRequests: 429,
  RequestHeaderFieldsTooLarge: 431,
  UnavailableForLegalReasons: 451,
  InternalServerError: 500,
  NotImplemented: 501,
  BadGateway: 502,
  ServiceUnavailable: 503,
  GatewayTimeout: 504,
  HttpVersionNotSupported: 505,
  VariantAlsoNegotiates: 506,
  InsufficientStorage: 507,
  LoopDetected: 508,
  NotExtended: 510,
  NetworkAuthenticationRequired: 511
};
Object.entries(om).forEach(([e10, t]) => {
  om[t] = e10;
});
function Rw(e10) {
  const t = new Ei(e10), n = ow(Ei.prototype.request, t);
  return xe.extend(n, Ei.prototype, t, { allOwnKeys: true }), xe.extend(n, t, null, { allOwnKeys: true }), n.create = function(r) {
    return Rw(Di(e10, r));
  }, n;
}
var Mt = Rw(Nl);
Mt.Axios = Ei;
Mt.CanceledError = Zs;
Mt.CancelToken = Lg;
Mt.isCancel = vw;
Mt.VERSION = Iw;
Mt.toFormData = wd;
Mt.AxiosError = dt;
Mt.Cancel = Mt.CanceledError;
Mt.all = function(t) {
  return Promise.all(t);
};
Mt.spread = JW;
Mt.isAxiosError = KW;
Mt.mergeConfig = Di;
Mt.AxiosHeaders = Yn;
Mt.formToJSON = (e10) => bw(xe.isHTMLForm(e10) ? new FormData(e10) : e10);
Mt.getAdapter = Tw.getAdapter;
Mt.HttpStatusCode = om;
Mt.default = Mt;
var QW = "http://localhost:3001/auth";
var e9 = async (e10) => {
  try {
    return (await Mt.post(`${QW}/login`, e10)).data;
  } catch (t) {
    throw t;
  }
};
var t9 = XS().shape({
  username: Zf().required("User Name is required"),
  password: Zf().required("Password is required")
});
var n9 = () => {
  const e10 = _s(), t = Y5({
    initialValues: {
      username: "",
      password: "",
      remember: false
    },
    validationSchema: t9,
    onSubmit: async (n) => {
      const { remember: o, ...r } = n;
      try {
        const s = await e9(r);
        console.log("Login successful:", s), e10("/invoices");
      } catch (s) {
        console.error("Login failed:", s);
      }
    }
  });
  return f.jsx(Ct, { container: true, justifyContent: "center", alignItems: "center", style: { height: "100vh", backgroundColor: "#f4f4f4" }, children: f.jsxs(Ct, { item: true, xs: 12, sm: 10, md: 6, children: [
    f.jsx(Ct, { item: true, children: f.jsx(
      "img",
      {
        src: "https://www.99technologies.com/assets/images/99-tech-logo.webp",
        alt: "logo",
        style: { width: "100%", maxWidth: "350px", margin: "0 auto", display: "block", marginBottom: "20px" }
      }
    ) }),
    f.jsx(vn, { elevation: 3, style: { padding: "20px" }, children: f.jsxs(Ct, { container: true, direction: "column", spacing: 2, children: [
      f.jsx(Ct, { item: true, children: f.jsx(Fe, { variant: "h6", style: { fontWeight: "bold", textAlign: "left" }, children: "Login" }) }),
      f.jsx(Ct, { item: true, children: f.jsxs("form", { onSubmit: t.handleSubmit, children: [
        f.jsx(
          _n,
          {
            type: "text",
            name: "username",
            fullWidth: true,
            size: "small",
            label: "User Name",
            onBlur: t.handleBlur,
            InputProps: {
              startAdornment: f.jsx(Or, { position: "start", children: f.jsx(Jz, { fontSize: "small" }) })
            },
            value: t.values.username,
            error: t.touched.username && !!t.errors.username,
            helperText: t.touched.username && t.errors.username,
            onChange: t.handleChange,
            style: { margin: "20px 0" }
          }
        ),
        f.jsx(
          _n,
          {
            fullWidth: true,
            size: "small",
            type: "password",
            label: "Password",
            name: "password",
            onBlur: t.handleBlur,
            InputProps: {
              startAdornment: f.jsx(Or, { position: "start", children: f.jsx(Kz, { fontSize: "small" }) })
            },
            value: t.values.password,
            error: t.touched.password && !!t.errors.password,
            helperText: t.touched.password && t.errors.password,
            onChange: t.handleChange,
            style: { margin: "20px 0" }
          }
        ),
        f.jsxs(Ct, { container: true, alignItems: "center", children: [
          f.jsx(Ct, { item: true, children: f.jsx(
            _i,
            {
              size: "small",
              checked: t.values.remember,
              onChange: t.handleChange,
              name: "remember"
            }
          ) }),
          f.jsx(Ct, { item: true, children: f.jsx(Fe, { variant: "body2", children: "Remember" }) })
        ] }),
        f.jsx(
          nw,
          {
            type: "submit",
            disabled: t.isSubmitting,
            loading: t.isSubmitting,
            variant: "contained",
            fullWidth: true,
            children: "Sign In"
          }
        )
      ] }) }),
      f.jsx(Ct, { item: true, children: f.jsx(
        vt,
        {
          variant: "text",
          component: Cl,
          to: "/reset-password",
          size: "small",
          sx: { textTransform: "capitalize" },
          children: "Forgot Password"
        }
      ) })
    ] }) })
  ] }) });
};
var Bg = ze(f.jsx("path", {
  d: "M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z"
}), "Add");
var o9 = ze(f.jsx("path", {
  d: "m20 12-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8z"
}), "ArrowDownward");
var r9 = ze(f.jsx("path", {
  d: "m10 17 5-5-5-5z"
}), "ArrowRight");
var i9 = ze(f.jsx("path", {
  d: "M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2m5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12z"
}), "Cancel");
var s9 = ze(f.jsx("path", {
  d: "M15.41 7.41 14 6l-6 6 6 6 1.41-1.41L10.83 12z"
}), "ChevronLeft");
var a9 = ze(f.jsx("path", {
  d: "M10 6 8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
}), "ChevronRight");
var l9 = ze(f.jsx("path", {
  d: "M5 13h14v-2H5zm-2 4h14v-2H3zM7 7v2h14V7z"
}), "ClearAll");
var Id = ze(f.jsx("path", {
  d: "M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}), "Close");
var c9 = ze(f.jsx("path", {
  d: "M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2m0 16H8V7h11z"
}), "ContentCopy");
var Rd = ze(f.jsx("path", {
  d: "M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z"
}), "Delete");
var u9 = ze(f.jsx("path", {
  d: "M3 3h18v2H3zm0 16h18v2H3z"
}), "DensityLarge");
var d9 = ze(f.jsx("path", {
  d: "M3 3h18v2H3zm0 16h18v2H3zm0-8h18v2H3z"
}), "DensityMedium");
var p9 = ze(f.jsx("path", {
  d: "M3 2h18v2H3zm0 18h18v2H3zm0-6h18v2H3zm0-6h18v2H3z"
}), "DensitySmall");
var f9 = ze(f.jsx("path", {
  d: "M5 20h14v-2H5zM19 9h-4V3H9v6H5l7 7z"
}), "Download");
var m9 = ze(f.jsx("path", {
  d: "M20 9H4v2h16zM4 15h16v-2H4z"
}), "DragHandle");
var g9 = ze([f.jsx("path", {
  d: "M8 8H6v7c0 1.1.9 2 2 2h9v-2H8z"
}, "0"), f.jsx("path", {
  d: "M20 3h-8c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2m0 8h-8V7h8zM4 12H2v7c0 1.1.9 2 2 2h9v-2H4z"
}, "1")], "DynamicFeed");
var Ew = ze(f.jsx("path", {
  d: "M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.996.996 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z"
}), "Edit");
var h9 = ze(f.jsx("path", {
  d: "M10.09 15.59 11.5 17l5-5-5-5-1.41 1.41L12.67 11H3v2h9.67zM19 3H5c-1.11 0-2 .9-2 2v4h2V5h14v14H5v-4H3v4c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2"
}), "ExitToApp");
var b9 = ze(f.jsx("path", {
  d: "M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z"
}), "ExpandMore");
var v9 = ze(f.jsx("path", {
  d: "M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61"
}), "FilterAlt");
var y9 = ze(f.jsx("path", {
  d: "M10 18h4v-2h-4zM3 6v2h18V6zm3 7h12v-2H6z"
}), "FilterList");
var x9 = ze(f.jsx("path", {
  d: "M10.83 8H21V6H8.83zm5 5H18v-2h-4.17zM14 16.83V18h-4v-2h3.17l-3-3H6v-2h2.17l-3-3H3V6h.17L1.39 4.22 2.8 2.81l18.38 18.38-1.41 1.41z"
}), "FilterListOff");
var C9 = ze(f.jsx("path", {
  d: "M18.41 16.59 13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z"
}), "FirstPage");
var S9 = ze(f.jsx("path", {
  d: "M7 14H5v5h5v-2H7zm-2-4h2V7h3V5H5zm12 7h-3v2h5v-5h-2zM14 5v2h3v3h2V5z"
}), "Fullscreen");
var w9 = ze(f.jsx("path", {
  d: "M5 16h3v3h2v-5H5zm3-8H5v2h5V5H8zm6 11h2v-3h3v-2h-5zm2-11V5h-2v5h5V8z"
}), "FullscreenExit");
var T9 = ze([f.jsx("path", {
  d: "M18 6.41 16.59 5 12 9.58 7.41 5 6 6.41l6 6z"
}, "0"), f.jsx("path", {
  d: "m18 13-1.41-1.41L12 16.17l-4.59-4.58L6 13l6 6z"
}, "1")], "KeyboardDoubleArrowDown");
var I9 = ze(f.jsx("path", {
  d: "M5.59 7.41 10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z"
}), "LastPage");
var R9 = ze(f.jsx("path", {
  d: "M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2m12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2m-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2"
}), "MoreHoriz");
var E9 = ze(f.jsx("path", {
  d: "M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2m0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2m0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2"
}), "MoreVert");
var O9 = ze(f.jsx("path", {
  fillRule: "evenodd",
  d: "M16 9V4h1c.55 0 1-.45 1-1s-.45-1-1-1H7c-.55 0-1 .45-1 1s.45 1 1 1h1v5c0 1.66-1.34 3-3 3v2h5.97v7l1 1 1-1v-7H19v-2c-1.66 0-3-1.34-3-3"
}), "PushPin");
var P9 = ze(f.jsx("path", {
  d: "M12 5V2L8 6l4 4V7c3.31 0 6 2.69 6 6 0 2.97-2.17 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93 0-4.42-3.58-8-8-8m-6 8c0-1.65.67-3.15 1.76-4.24L6.34 7.34C4.9 8.79 4 10.79 4 13c0 4.08 3.05 7.44 7 7.93v-2.02c-2.83-.48-5-2.94-5-5.91"
}), "RestartAlt");
var A9 = ze(f.jsx("path", {
  d: "M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3m3-10H5V5h10z"
}), "Save");
var j9 = ze(f.jsx("path", {
  d: "M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14"
}), "Search");
var D9 = ze([f.jsx("path", {
  d: "M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3 6.08 3 3.28 5.64 3.03 9h2.02C5.3 6.75 7.18 5 9.5 5 11.99 5 14 7.01 14 9.5S11.99 14 9.5 14c-.17 0-.33-.03-.5-.05v2.02c.17.02.33.03.5.03 1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19z"
}, "0"), f.jsx("path", {
  d: "M6.47 10.82 4 13.29l-2.47-2.47-.71.71L3.29 14 .82 16.47l.71.71L4 14.71l2.47 2.47.71-.71L4.71 14l2.47-2.47z"
}, "1")], "SearchOff");
var M9 = ze(f.jsx("path", {
  d: "M3 18h6v-2H3zM3 6v2h18V6zm0 7h12v-2H3z"
}), "Sort");
var k9 = ze(f.jsx("path", {
  d: "M15 19v-2H8.41L20 5.41 18.59 4 7 15.59V9H5v10z"
}), "SouthWest");
var F9 = ze(f.jsx("path", {
  d: "m18 12 4-4-4-4v3H3v2h15zM6 12l-4 4 4 4v-3h15v-2H6z"
}), "SyncAlt");
var N9 = ze(f.jsx("path", {
  d: "M14.67 5v14H9.33V5zm1 14H21V5h-5.33zm-7.34 0V5H3v14z"
}), "ViewColumn");
var $9 = ze(f.jsx("path", {
  d: "M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3"
}), "Visibility");
var V9 = ze(f.jsx("path", {
  d: "M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7M2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2m4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3z"
}), "VisibilityOff");
var ur = "http://localhost:3000/v1";
var _9 = async (e10) => {
  try {
    return (await Mt.get(`${ur}/invoice/summary`, { params: e10 })).data;
  } catch (t) {
    throw console.error("Error fetching invoice summary:", t), t;
  }
};
var Ow = async (e10) => {
  try {
    return (await Mt.get(`${ur}/invoice`, { params: e10 })).data;
  } catch (t) {
    throw console.error("Error fetching all invoices list:", t), t;
  }
};
var L9 = async (e10) => {
  try {
    return (await Mt.post(`${ur}/invoice`, e10)).data;
  } catch (t) {
    throw console.error("Error saving invoice:", t), t;
  }
};
var B9 = async (e10) => {
  try {
    return (await Mt.patch(`${ur}/invoice`, e10)).data;
  } catch (t) {
    throw console.error("Error saving invoice:", t), t;
  }
};
var z9 = async (e10) => {
  try {
    return (await Mt.post(`${ur}/invoice/send-mail`, e10, {
      headers: {
        "Content-Type": "multipart/form-data"
        // Important for file uploads
      }
    })).data;
  } catch (t) {
    throw console.error("Error sending email:", t), t;
  }
};
var Pw = async (e10) => await Mt.get(`http://localhost:3000/v1/invoice/${e10}`);
var Aw = async (e10) => {
  try {
    return (await Mt.post(`${ur}/paymentterm`, e10)).data;
  } catch (t) {
    throw console.error("Error adding payment term:", t), t;
  }
};
var jw = async () => {
  try {
    return (await Mt.get(`${ur}/paymentterm`)).data;
  } catch (e10) {
    throw console.error("Error fetching payment terms:", e10), e10;
  }
};
var W9 = async (e10) => {
  try {
    return await Mt.get(`${ur}/invoice/download/${e10}`, {
      responseType: "blob"
      // Important for downloading files
    });
  } catch (t) {
    throw console.error("Error downloading invoice:", t), t;
  }
};
var H9 = async (e10) => {
  try {
    return (await Mt.get(`${ur}/invoice/html/${e10}`)).data;
  } catch (t) {
    throw console.error("Error fetching HTML content:", t), t;
  }
};
var Dw = async (e10) => {
  try {
    return (await Mt.delete(`${ur}/invoice/${e10}`)).data;
  } catch (t) {
    throw console.error("Error deleting invoice:", t), t;
  }
};
function Hr(e10, t) {
  return typeof e10 == "function" ? e10(t) : e10;
}
function po(e10, t) {
  return (n) => {
    t.setState((o) => ({
      ...o,
      [e10]: Hr(n, o[e10])
    }));
  };
}
function Ed(e10) {
  return e10 instanceof Function;
}
function G9(e10) {
  return Array.isArray(e10) && e10.every((t) => typeof t == "number");
}
function Mw(e10, t) {
  const n = [], o = (r) => {
    r.forEach((s) => {
      n.push(s);
      const a = t(s);
      a != null && a.length && o(a);
    });
  };
  return o(e10), n;
}
function Ke(e10, t, n) {
  let o = [], r;
  return (s) => {
    let a;
    n.key && n.debug && (a = Date.now());
    const l = e10(s);
    if (!(l.length !== o.length || l.some((d, p) => o[p] !== d)))
      return r;
    o = l;
    let u;
    if (n.key && n.debug && (u = Date.now()), r = t(...l), n == null || n.onChange == null || n.onChange(r), n.key && n.debug && n != null && n.debug()) {
      const d = Math.round((Date.now() - a) * 100) / 100, p = Math.round((Date.now() - u) * 100) / 100, m = p / 16, g = (b, v) => {
        for (b = String(b); b.length < v; )
          b = " " + b;
        return b;
      };
      console.info(`%c⏱ ${g(p, 5)} /${g(d, 5)} ms`, `
            font-size: .6rem;
            font-weight: bold;
            color: hsl(${Math.max(0, Math.min(120 - 120 * m, 120))}deg 100% 31%);`, n == null ? void 0 : n.key);
    }
    return r;
  };
}
function Qe(e10, t, n, o) {
  return {
    debug: () => {
      var r;
      return (r = e10 == null ? void 0 : e10.debugAll) != null ? r : e10[t];
    },
    key: n,
    onChange: o
  };
}
function U9(e10, t, n, o) {
  const r = () => {
    var a;
    return (a = s.getValue()) != null ? a : e10.options.renderFallbackValue;
  }, s = {
    id: `${t.id}_${n.id}`,
    row: t,
    column: n,
    getValue: () => t.getValue(o),
    renderValue: r,
    getContext: Ke(() => [e10, n, t, s], (a, l, c, u) => ({
      table: a,
      column: l,
      row: c,
      cell: u,
      getValue: u.getValue,
      renderValue: u.renderValue
    }), Qe(e10.options, "debugCells", "cell.getContext"))
  };
  return e10._features.forEach((a) => {
    a.createCell == null || a.createCell(s, n, t, e10);
  }, {}), s;
}
function X9(e10, t, n, o) {
  var r, s;
  const l = {
    ...e10._getDefaultColumnDef(),
    ...t
  }, c = l.accessorKey;
  let u = (r = (s = l.id) != null ? s : c ? typeof String.prototype.replaceAll == "function" ? c.replaceAll(".", "_") : c.replace(/\./g, "_") : void 0) != null ? r : typeof l.header == "string" ? l.header : void 0, d;
  if (l.accessorFn ? d = l.accessorFn : c && (c.includes(".") ? d = (m) => {
    let g = m;
    for (const v of c.split(".")) {
      var b;
      g = (b = g) == null ? void 0 : b[v], g === void 0 && console.warn(`"${v}" in deeply nested key "${c}" returned undefined.`);
    }
    return g;
  } : d = (m) => m[l.accessorKey]), !u)
    throw true ? new Error(l.accessorFn ? "Columns require an id when using an accessorFn" : "Columns require an id when using a non-string header") : new Error();
  let p = {
    id: `${String(u)}`,
    accessorFn: d,
    parent: o,
    depth: n,
    columnDef: l,
    columns: [],
    getFlatColumns: Ke(() => [true], () => {
      var m;
      return [p, ...(m = p.columns) == null ? void 0 : m.flatMap((g) => g.getFlatColumns())];
    }, Qe(e10.options, "debugColumns", "column.getFlatColumns")),
    getLeafColumns: Ke(() => [e10._getOrderColumnsFn()], (m) => {
      var g;
      if ((g = p.columns) != null && g.length) {
        let b = p.columns.flatMap((v) => v.getLeafColumns());
        return m(b);
      }
      return [p];
    }, Qe(e10.options, "debugColumns", "column.getLeafColumns"))
  };
  for (const m of e10._features)
    m.createColumn == null || m.createColumn(p, e10);
  return p;
}
var An = "debugHeaders";
function Uy(e10, t, n) {
  var o;
  let s = {
    id: (o = n.id) != null ? o : t.id,
    column: t,
    index: n.index,
    isPlaceholder: !!n.isPlaceholder,
    placeholderId: n.placeholderId,
    depth: n.depth,
    subHeaders: [],
    colSpan: 0,
    rowSpan: 0,
    headerGroup: null,
    getLeafHeaders: () => {
      const a = [], l = (c) => {
        c.subHeaders && c.subHeaders.length && c.subHeaders.map(l), a.push(c);
      };
      return l(s), a;
    },
    getContext: () => ({
      table: e10,
      header: s,
      column: t
    })
  };
  return e10._features.forEach((a) => {
    a.createHeader == null || a.createHeader(s, e10);
  }), s;
}
var Y9 = {
  createTable: (e10) => {
    e10.getHeaderGroups = Ke(() => [e10.getAllColumns(), e10.getVisibleLeafColumns(), e10.getState().columnPinning.left, e10.getState().columnPinning.right], (t, n, o, r) => {
      var s, a;
      const l = (s = o == null ? void 0 : o.map((p) => n.find((m) => m.id === p)).filter(Boolean)) != null ? s : [], c = (a = r == null ? void 0 : r.map((p) => n.find((m) => m.id === p)).filter(Boolean)) != null ? a : [], u = n.filter((p) => !(o != null && o.includes(p.id)) && !(r != null && r.includes(p.id)));
      return uc(t, [...l, ...u, ...c], e10);
    }, Qe(e10.options, An, "getHeaderGroups")), e10.getCenterHeaderGroups = Ke(() => [e10.getAllColumns(), e10.getVisibleLeafColumns(), e10.getState().columnPinning.left, e10.getState().columnPinning.right], (t, n, o, r) => (n = n.filter((s) => !(o != null && o.includes(s.id)) && !(r != null && r.includes(s.id))), uc(t, n, e10, "center")), Qe(e10.options, An, "getCenterHeaderGroups")), e10.getLeftHeaderGroups = Ke(() => [e10.getAllColumns(), e10.getVisibleLeafColumns(), e10.getState().columnPinning.left], (t, n, o) => {
      var r;
      const s = (r = o == null ? void 0 : o.map((a) => n.find((l) => l.id === a)).filter(Boolean)) != null ? r : [];
      return uc(t, s, e10, "left");
    }, Qe(e10.options, An, "getLeftHeaderGroups")), e10.getRightHeaderGroups = Ke(() => [e10.getAllColumns(), e10.getVisibleLeafColumns(), e10.getState().columnPinning.right], (t, n, o) => {
      var r;
      const s = (r = o == null ? void 0 : o.map((a) => n.find((l) => l.id === a)).filter(Boolean)) != null ? r : [];
      return uc(t, s, e10, "right");
    }, Qe(e10.options, An, "getRightHeaderGroups")), e10.getFooterGroups = Ke(() => [e10.getHeaderGroups()], (t) => [...t].reverse(), Qe(e10.options, An, "getFooterGroups")), e10.getLeftFooterGroups = Ke(() => [e10.getLeftHeaderGroups()], (t) => [...t].reverse(), Qe(e10.options, An, "getLeftFooterGroups")), e10.getCenterFooterGroups = Ke(() => [e10.getCenterHeaderGroups()], (t) => [...t].reverse(), Qe(e10.options, An, "getCenterFooterGroups")), e10.getRightFooterGroups = Ke(() => [e10.getRightHeaderGroups()], (t) => [...t].reverse(), Qe(e10.options, An, "getRightFooterGroups")), e10.getFlatHeaders = Ke(() => [e10.getHeaderGroups()], (t) => t.map((n) => n.headers).flat(), Qe(e10.options, An, "getFlatHeaders")), e10.getLeftFlatHeaders = Ke(() => [e10.getLeftHeaderGroups()], (t) => t.map((n) => n.headers).flat(), Qe(e10.options, An, "getLeftFlatHeaders")), e10.getCenterFlatHeaders = Ke(() => [e10.getCenterHeaderGroups()], (t) => t.map((n) => n.headers).flat(), Qe(e10.options, An, "getCenterFlatHeaders")), e10.getRightFlatHeaders = Ke(() => [e10.getRightHeaderGroups()], (t) => t.map((n) => n.headers).flat(), Qe(e10.options, An, "getRightFlatHeaders")), e10.getCenterLeafHeaders = Ke(() => [e10.getCenterFlatHeaders()], (t) => t.filter((n) => {
      var o;
      return !((o = n.subHeaders) != null && o.length);
    }), Qe(e10.options, An, "getCenterLeafHeaders")), e10.getLeftLeafHeaders = Ke(() => [e10.getLeftFlatHeaders()], (t) => t.filter((n) => {
      var o;
      return !((o = n.subHeaders) != null && o.length);
    }), Qe(e10.options, An, "getLeftLeafHeaders")), e10.getRightLeafHeaders = Ke(() => [e10.getRightFlatHeaders()], (t) => t.filter((n) => {
      var o;
      return !((o = n.subHeaders) != null && o.length);
    }), Qe(e10.options, An, "getRightLeafHeaders")), e10.getLeafHeaders = Ke(() => [e10.getLeftHeaderGroups(), e10.getCenterHeaderGroups(), e10.getRightHeaderGroups()], (t, n, o) => {
      var r, s, a, l, c, u;
      return [...(r = (s = t[0]) == null ? void 0 : s.headers) != null ? r : [], ...(a = (l = n[0]) == null ? void 0 : l.headers) != null ? a : [], ...(c = (u = o[0]) == null ? void 0 : u.headers) != null ? c : []].map((d) => d.getLeafHeaders()).flat();
    }, Qe(e10.options, An, "getLeafHeaders"));
  }
};
function uc(e10, t, n, o) {
  var r, s;
  let a = 0;
  const l = function(m, g) {
    g === void 0 && (g = 1), a = Math.max(a, g), m.filter((b) => b.getIsVisible()).forEach((b) => {
      var v;
      (v = b.columns) != null && v.length && l(b.columns, g + 1);
    }, 0);
  };
  l(e10);
  let c = [];
  const u = (m, g) => {
    const b = {
      depth: g,
      id: [o, `${g}`].filter(Boolean).join("_"),
      headers: []
    }, v = [];
    m.forEach((h) => {
      const y = [...v].reverse()[0], C = h.column.depth === b.depth;
      let x, T = false;
      if (C && h.column.parent ? x = h.column.parent : (x = h.column, T = true), y && (y == null ? void 0 : y.column) === x)
        y.subHeaders.push(h);
      else {
        const w = Uy(n, x, {
          id: [o, g, x.id, h == null ? void 0 : h.id].filter(Boolean).join("_"),
          isPlaceholder: T,
          placeholderId: T ? `${v.filter((R) => R.column === x).length}` : void 0,
          depth: g,
          index: v.length
        });
        w.subHeaders.push(h), v.push(w);
      }
      b.headers.push(h), h.headerGroup = b;
    }), c.push(b), g > 0 && u(v, g - 1);
  }, d = t.map((m, g) => Uy(n, m, {
    depth: a,
    index: g
  }));
  u(d, a - 1), c.reverse();
  const p = (m) => m.filter((b) => b.column.getIsVisible()).map((b) => {
    let v = 0, h = 0, y = [0];
    b.subHeaders && b.subHeaders.length ? (y = [], p(b.subHeaders).forEach((x) => {
      let {
        colSpan: T,
        rowSpan: w
      } = x;
      v += T, y.push(w);
    })) : v = 1;
    const C = Math.min(...y);
    return h = h + C, b.colSpan = v, b.rowSpan = h, {
      colSpan: v,
      rowSpan: h
    };
  });
  return p((r = (s = c[0]) == null ? void 0 : s.headers) != null ? r : []), c;
}
var $l = (e10, t, n, o, r, s, a) => {
  let l = {
    id: t,
    index: o,
    original: n,
    depth: r,
    parentId: a,
    _valuesCache: {},
    _uniqueValuesCache: {},
    getValue: (c) => {
      if (l._valuesCache.hasOwnProperty(c))
        return l._valuesCache[c];
      const u = e10.getColumn(c);
      if (u != null && u.accessorFn)
        return l._valuesCache[c] = u.accessorFn(l.original, o), l._valuesCache[c];
    },
    getUniqueValues: (c) => {
      if (l._uniqueValuesCache.hasOwnProperty(c))
        return l._uniqueValuesCache[c];
      const u = e10.getColumn(c);
      if (u != null && u.accessorFn)
        return u.columnDef.getUniqueValues ? (l._uniqueValuesCache[c] = u.columnDef.getUniqueValues(l.original, o), l._uniqueValuesCache[c]) : (l._uniqueValuesCache[c] = [l.getValue(c)], l._uniqueValuesCache[c]);
    },
    renderValue: (c) => {
      var u;
      return (u = l.getValue(c)) != null ? u : e10.options.renderFallbackValue;
    },
    subRows: s ?? [],
    getLeafRows: () => Mw(l.subRows, (c) => c.subRows),
    getParentRow: () => l.parentId ? e10.getRow(l.parentId, true) : void 0,
    getParentRows: () => {
      let c = [], u = l;
      for (; ; ) {
        const d = u.getParentRow();
        if (!d) break;
        c.push(d), u = d;
      }
      return c.reverse();
    },
    getAllCells: Ke(() => [e10.getAllLeafColumns()], (c) => c.map((u) => U9(e10, l, u, u.id)), Qe(e10.options, "debugRows", "getAllCells")),
    _getAllCellsByColumnId: Ke(() => [l.getAllCells()], (c) => c.reduce((u, d) => (u[d.column.id] = d, u), {}), Qe(e10.options, "debugRows", "getAllCellsByColumnId"))
  };
  for (let c = 0; c < e10._features.length; c++) {
    const u = e10._features[c];
    u == null || u.createRow == null || u.createRow(l, e10);
  }
  return l;
};
var Z9 = {
  createColumn: (e10, t) => {
    e10._getFacetedRowModel = t.options.getFacetedRowModel && t.options.getFacetedRowModel(t, e10.id), e10.getFacetedRowModel = () => e10._getFacetedRowModel ? e10._getFacetedRowModel() : t.getPreFilteredRowModel(), e10._getFacetedUniqueValues = t.options.getFacetedUniqueValues && t.options.getFacetedUniqueValues(t, e10.id), e10.getFacetedUniqueValues = () => e10._getFacetedUniqueValues ? e10._getFacetedUniqueValues() : /* @__PURE__ */ new Map(), e10._getFacetedMinMaxValues = t.options.getFacetedMinMaxValues && t.options.getFacetedMinMaxValues(t, e10.id), e10.getFacetedMinMaxValues = () => {
      if (e10._getFacetedMinMaxValues)
        return e10._getFacetedMinMaxValues();
    };
  }
};
var kw = (e10, t, n) => {
  var o, r;
  const s = n == null || (o = n.toString()) == null ? void 0 : o.toLowerCase();
  return !!(!((r = e10.getValue(t)) == null || (r = r.toString()) == null || (r = r.toLowerCase()) == null) && r.includes(s));
};
kw.autoRemove = (e10) => _o(e10);
var Fw = (e10, t, n) => {
  var o;
  return !!(!((o = e10.getValue(t)) == null || (o = o.toString()) == null) && o.includes(n));
};
Fw.autoRemove = (e10) => _o(e10);
var Nw = (e10, t, n) => {
  var o;
  return ((o = e10.getValue(t)) == null || (o = o.toString()) == null ? void 0 : o.toLowerCase()) === (n == null ? void 0 : n.toLowerCase());
};
Nw.autoRemove = (e10) => _o(e10);
var $w = (e10, t, n) => {
  var o;
  return (o = e10.getValue(t)) == null ? void 0 : o.includes(n);
};
$w.autoRemove = (e10) => _o(e10) || !(e10 != null && e10.length);
var Vw = (e10, t, n) => !n.some((o) => {
  var r;
  return !((r = e10.getValue(t)) != null && r.includes(o));
});
Vw.autoRemove = (e10) => _o(e10) || !(e10 != null && e10.length);
var _w = (e10, t, n) => n.some((o) => {
  var r;
  return (r = e10.getValue(t)) == null ? void 0 : r.includes(o);
});
_w.autoRemove = (e10) => _o(e10) || !(e10 != null && e10.length);
var Lw = (e10, t, n) => e10.getValue(t) === n;
Lw.autoRemove = (e10) => _o(e10);
var Bw = (e10, t, n) => e10.getValue(t) == n;
Bw.autoRemove = (e10) => _o(e10);
var zg = (e10, t, n) => {
  let [o, r] = n;
  const s = e10.getValue(t);
  return s >= o && s <= r;
};
zg.resolveFilterValue = (e10) => {
  let [t, n] = e10, o = typeof t != "number" ? parseFloat(t) : t, r = typeof n != "number" ? parseFloat(n) : n, s = t === null || Number.isNaN(o) ? -1 / 0 : o, a = n === null || Number.isNaN(r) ? 1 / 0 : r;
  if (s > a) {
    const l = s;
    s = a, a = l;
  }
  return [s, a];
};
zg.autoRemove = (e10) => _o(e10) || _o(e10[0]) && _o(e10[1]);
var Zo = {
  includesString: kw,
  includesStringSensitive: Fw,
  equalsString: Nw,
  arrIncludes: $w,
  arrIncludesAll: Vw,
  arrIncludesSome: _w,
  equals: Lw,
  weakEquals: Bw,
  inNumberRange: zg
};
function _o(e10) {
  return e10 == null || e10 === "";
}
var q9 = {
  getDefaultColumnDef: () => ({
    filterFn: "auto"
  }),
  getInitialState: (e10) => ({
    columnFilters: [],
    ...e10
  }),
  getDefaultOptions: (e10) => ({
    onColumnFiltersChange: po("columnFilters", e10),
    filterFromLeafRows: false,
    maxLeafRowFilterDepth: 100
  }),
  createColumn: (e10, t) => {
    e10.getAutoFilterFn = () => {
      const n = t.getCoreRowModel().flatRows[0], o = n == null ? void 0 : n.getValue(e10.id);
      return typeof o == "string" ? Zo.includesString : typeof o == "number" ? Zo.inNumberRange : typeof o == "boolean" || o !== null && typeof o == "object" ? Zo.equals : Array.isArray(o) ? Zo.arrIncludes : Zo.weakEquals;
    }, e10.getFilterFn = () => {
      var n, o;
      return Ed(e10.columnDef.filterFn) ? e10.columnDef.filterFn : e10.columnDef.filterFn === "auto" ? e10.getAutoFilterFn() : (
        // @ts-ignore
        (n = (o = t.options.filterFns) == null ? void 0 : o[e10.columnDef.filterFn]) != null ? n : Zo[e10.columnDef.filterFn]
      );
    }, e10.getCanFilter = () => {
      var n, o, r;
      return ((n = e10.columnDef.enableColumnFilter) != null ? n : true) && ((o = t.options.enableColumnFilters) != null ? o : true) && ((r = t.options.enableFilters) != null ? r : true) && !!e10.accessorFn;
    }, e10.getIsFiltered = () => e10.getFilterIndex() > -1, e10.getFilterValue = () => {
      var n;
      return (n = t.getState().columnFilters) == null || (n = n.find((o) => o.id === e10.id)) == null ? void 0 : n.value;
    }, e10.getFilterIndex = () => {
      var n, o;
      return (n = (o = t.getState().columnFilters) == null ? void 0 : o.findIndex((r) => r.id === e10.id)) != null ? n : -1;
    }, e10.setFilterValue = (n) => {
      t.setColumnFilters((o) => {
        const r = e10.getFilterFn(), s = o == null ? void 0 : o.find((d) => d.id === e10.id), a = Hr(n, s ? s.value : void 0);
        if (Xy(r, a, e10)) {
          var l;
          return (l = o == null ? void 0 : o.filter((d) => d.id !== e10.id)) != null ? l : [];
        }
        const c = {
          id: e10.id,
          value: a
        };
        if (s) {
          var u;
          return (u = o == null ? void 0 : o.map((d) => d.id === e10.id ? c : d)) != null ? u : [];
        }
        return o != null && o.length ? [...o, c] : [c];
      });
    };
  },
  createRow: (e10, t) => {
    e10.columnFilters = {}, e10.columnFiltersMeta = {};
  },
  createTable: (e10) => {
    e10.setColumnFilters = (t) => {
      const n = e10.getAllLeafColumns(), o = (r) => {
        var s;
        return (s = Hr(t, r)) == null ? void 0 : s.filter((a) => {
          const l = n.find((c) => c.id === a.id);
          if (l) {
            const c = l.getFilterFn();
            if (Xy(c, a.value, l))
              return false;
          }
          return true;
        });
      };
      e10.options.onColumnFiltersChange == null || e10.options.onColumnFiltersChange(o);
    }, e10.resetColumnFilters = (t) => {
      var n, o;
      e10.setColumnFilters(t ? [] : (n = (o = e10.initialState) == null ? void 0 : o.columnFilters) != null ? n : []);
    }, e10.getPreFilteredRowModel = () => e10.getCoreRowModel(), e10.getFilteredRowModel = () => (!e10._getFilteredRowModel && e10.options.getFilteredRowModel && (e10._getFilteredRowModel = e10.options.getFilteredRowModel(e10)), e10.options.manualFiltering || !e10._getFilteredRowModel ? e10.getPreFilteredRowModel() : e10._getFilteredRowModel());
  }
};
function Xy(e10, t, n) {
  return (e10 && e10.autoRemove ? e10.autoRemove(t, n) : false) || typeof t > "u" || typeof t == "string" && !t;
}
var J9 = (e10, t, n) => n.reduce((o, r) => {
  const s = r.getValue(e10);
  return o + (typeof s == "number" ? s : 0);
}, 0);
var K9 = (e10, t, n) => {
  let o;
  return n.forEach((r) => {
    const s = r.getValue(e10);
    s != null && (o > s || o === void 0 && s >= s) && (o = s);
  }), o;
};
var Q9 = (e10, t, n) => {
  let o;
  return n.forEach((r) => {
    const s = r.getValue(e10);
    s != null && (o < s || o === void 0 && s >= s) && (o = s);
  }), o;
};
var eH = (e10, t, n) => {
  let o, r;
  return n.forEach((s) => {
    const a = s.getValue(e10);
    a != null && (o === void 0 ? a >= a && (o = r = a) : (o > a && (o = a), r < a && (r = a)));
  }), [o, r];
};
var tH = (e10, t) => {
  let n = 0, o = 0;
  if (t.forEach((r) => {
    let s = r.getValue(e10);
    s != null && (s = +s) >= s && (++n, o += s);
  }), n) return o / n;
};
var nH = (e10, t) => {
  if (!t.length)
    return;
  const n = t.map((s) => s.getValue(e10));
  if (!G9(n))
    return;
  if (n.length === 1)
    return n[0];
  const o = Math.floor(n.length / 2), r = n.sort((s, a) => s - a);
  return n.length % 2 !== 0 ? r[o] : (r[o - 1] + r[o]) / 2;
};
var oH = (e10, t) => Array.from(new Set(t.map((n) => n.getValue(e10))).values());
var rH = (e10, t) => new Set(t.map((n) => n.getValue(e10))).size;
var iH = (e10, t) => t.length;
var Lc = {
  sum: J9,
  min: K9,
  max: Q9,
  extent: eH,
  mean: tH,
  median: nH,
  unique: oH,
  uniqueCount: rH,
  count: iH
};
var sH = {
  getDefaultColumnDef: () => ({
    aggregatedCell: (e10) => {
      var t, n;
      return (t = (n = e10.getValue()) == null || n.toString == null ? void 0 : n.toString()) != null ? t : null;
    },
    aggregationFn: "auto"
  }),
  getInitialState: (e10) => ({
    grouping: [],
    ...e10
  }),
  getDefaultOptions: (e10) => ({
    onGroupingChange: po("grouping", e10),
    groupedColumnMode: "reorder"
  }),
  createColumn: (e10, t) => {
    e10.toggleGrouping = () => {
      t.setGrouping((n) => n != null && n.includes(e10.id) ? n.filter((o) => o !== e10.id) : [...n ?? [], e10.id]);
    }, e10.getCanGroup = () => {
      var n, o;
      return ((n = e10.columnDef.enableGrouping) != null ? n : true) && ((o = t.options.enableGrouping) != null ? o : true) && (!!e10.accessorFn || !!e10.columnDef.getGroupingValue);
    }, e10.getIsGrouped = () => {
      var n;
      return (n = t.getState().grouping) == null ? void 0 : n.includes(e10.id);
    }, e10.getGroupedIndex = () => {
      var n;
      return (n = t.getState().grouping) == null ? void 0 : n.indexOf(e10.id);
    }, e10.getToggleGroupingHandler = () => {
      const n = e10.getCanGroup();
      return () => {
        n && e10.toggleGrouping();
      };
    }, e10.getAutoAggregationFn = () => {
      const n = t.getCoreRowModel().flatRows[0], o = n == null ? void 0 : n.getValue(e10.id);
      if (typeof o == "number")
        return Lc.sum;
      if (Object.prototype.toString.call(o) === "[object Date]")
        return Lc.extent;
    }, e10.getAggregationFn = () => {
      var n, o;
      if (!e10)
        throw new Error();
      return Ed(e10.columnDef.aggregationFn) ? e10.columnDef.aggregationFn : e10.columnDef.aggregationFn === "auto" ? e10.getAutoAggregationFn() : (n = (o = t.options.aggregationFns) == null ? void 0 : o[e10.columnDef.aggregationFn]) != null ? n : Lc[e10.columnDef.aggregationFn];
    };
  },
  createTable: (e10) => {
    e10.setGrouping = (t) => e10.options.onGroupingChange == null ? void 0 : e10.options.onGroupingChange(t), e10.resetGrouping = (t) => {
      var n, o;
      e10.setGrouping(t ? [] : (n = (o = e10.initialState) == null ? void 0 : o.grouping) != null ? n : []);
    }, e10.getPreGroupedRowModel = () => e10.getFilteredRowModel(), e10.getGroupedRowModel = () => (!e10._getGroupedRowModel && e10.options.getGroupedRowModel && (e10._getGroupedRowModel = e10.options.getGroupedRowModel(e10)), e10.options.manualGrouping || !e10._getGroupedRowModel ? e10.getPreGroupedRowModel() : e10._getGroupedRowModel());
  },
  createRow: (e10, t) => {
    e10.getIsGrouped = () => !!e10.groupingColumnId, e10.getGroupingValue = (n) => {
      if (e10._groupingValuesCache.hasOwnProperty(n))
        return e10._groupingValuesCache[n];
      const o = t.getColumn(n);
      return o != null && o.columnDef.getGroupingValue ? (e10._groupingValuesCache[n] = o.columnDef.getGroupingValue(e10.original), e10._groupingValuesCache[n]) : e10.getValue(n);
    }, e10._groupingValuesCache = {};
  },
  createCell: (e10, t, n, o) => {
    e10.getIsGrouped = () => t.getIsGrouped() && t.id === n.groupingColumnId, e10.getIsPlaceholder = () => !e10.getIsGrouped() && t.getIsGrouped(), e10.getIsAggregated = () => {
      var r;
      return !e10.getIsGrouped() && !e10.getIsPlaceholder() && !!((r = n.subRows) != null && r.length);
    };
  }
};
function aH(e10, t, n) {
  if (!(t != null && t.length) || !n)
    return e10;
  const o = e10.filter((s) => !t.includes(s.id));
  return n === "remove" ? o : [...t.map((s) => e10.find((a) => a.id === s)).filter(Boolean), ...o];
}
var lH = {
  getInitialState: (e10) => ({
    columnOrder: [],
    ...e10
  }),
  getDefaultOptions: (e10) => ({
    onColumnOrderChange: po("columnOrder", e10)
  }),
  createColumn: (e10, t) => {
    e10.getIndex = Ke((n) => [Va(t, n)], (n) => n.findIndex((o) => o.id === e10.id), Qe(t.options, "debugColumns", "getIndex")), e10.getIsFirstColumn = (n) => {
      var o;
      return ((o = Va(t, n)[0]) == null ? void 0 : o.id) === e10.id;
    }, e10.getIsLastColumn = (n) => {
      var o;
      const r = Va(t, n);
      return ((o = r[r.length - 1]) == null ? void 0 : o.id) === e10.id;
    };
  },
  createTable: (e10) => {
    e10.setColumnOrder = (t) => e10.options.onColumnOrderChange == null ? void 0 : e10.options.onColumnOrderChange(t), e10.resetColumnOrder = (t) => {
      var n;
      e10.setColumnOrder(t ? [] : (n = e10.initialState.columnOrder) != null ? n : []);
    }, e10._getOrderColumnsFn = Ke(() => [e10.getState().columnOrder, e10.getState().grouping, e10.options.groupedColumnMode], (t, n, o) => (r) => {
      let s = [];
      if (!(t != null && t.length))
        s = r;
      else {
        const a = [...t], l = [...r];
        for (; l.length && a.length; ) {
          const c = a.shift(), u = l.findIndex((d) => d.id === c);
          u > -1 && s.push(l.splice(u, 1)[0]);
        }
        s = [...s, ...l];
      }
      return aH(s, n, o);
    }, Qe(e10.options, "debugTable", "_getOrderColumnsFn"));
  }
};
var kp = () => ({
  left: [],
  right: []
});
var cH = {
  getInitialState: (e10) => ({
    columnPinning: kp(),
    ...e10
  }),
  getDefaultOptions: (e10) => ({
    onColumnPinningChange: po("columnPinning", e10)
  }),
  createColumn: (e10, t) => {
    e10.pin = (n) => {
      const o = e10.getLeafColumns().map((r) => r.id).filter(Boolean);
      t.setColumnPinning((r) => {
        var s, a;
        if (n === "right") {
          var l, c;
          return {
            left: ((l = r == null ? void 0 : r.left) != null ? l : []).filter((p) => !(o != null && o.includes(p))),
            right: [...((c = r == null ? void 0 : r.right) != null ? c : []).filter((p) => !(o != null && o.includes(p))), ...o]
          };
        }
        if (n === "left") {
          var u, d;
          return {
            left: [...((u = r == null ? void 0 : r.left) != null ? u : []).filter((p) => !(o != null && o.includes(p))), ...o],
            right: ((d = r == null ? void 0 : r.right) != null ? d : []).filter((p) => !(o != null && o.includes(p)))
          };
        }
        return {
          left: ((s = r == null ? void 0 : r.left) != null ? s : []).filter((p) => !(o != null && o.includes(p))),
          right: ((a = r == null ? void 0 : r.right) != null ? a : []).filter((p) => !(o != null && o.includes(p)))
        };
      });
    }, e10.getCanPin = () => e10.getLeafColumns().some((o) => {
      var r, s, a;
      return ((r = o.columnDef.enablePinning) != null ? r : true) && ((s = (a = t.options.enableColumnPinning) != null ? a : t.options.enablePinning) != null ? s : true);
    }), e10.getIsPinned = () => {
      const n = e10.getLeafColumns().map((l) => l.id), {
        left: o,
        right: r
      } = t.getState().columnPinning, s = n.some((l) => o == null ? void 0 : o.includes(l)), a = n.some((l) => r == null ? void 0 : r.includes(l));
      return s ? "left" : a ? "right" : false;
    }, e10.getPinnedIndex = () => {
      var n, o;
      const r = e10.getIsPinned();
      return r ? (n = (o = t.getState().columnPinning) == null || (o = o[r]) == null ? void 0 : o.indexOf(e10.id)) != null ? n : -1 : 0;
    };
  },
  createRow: (e10, t) => {
    e10.getCenterVisibleCells = Ke(() => [e10._getAllVisibleCells(), t.getState().columnPinning.left, t.getState().columnPinning.right], (n, o, r) => {
      const s = [...o ?? [], ...r ?? []];
      return n.filter((a) => !s.includes(a.column.id));
    }, Qe(t.options, "debugRows", "getCenterVisibleCells")), e10.getLeftVisibleCells = Ke(() => [e10._getAllVisibleCells(), t.getState().columnPinning.left], (n, o) => (o ?? []).map((s) => n.find((a) => a.column.id === s)).filter(Boolean).map((s) => ({
      ...s,
      position: "left"
    })), Qe(t.options, "debugRows", "getLeftVisibleCells")), e10.getRightVisibleCells = Ke(() => [e10._getAllVisibleCells(), t.getState().columnPinning.right], (n, o) => (o ?? []).map((s) => n.find((a) => a.column.id === s)).filter(Boolean).map((s) => ({
      ...s,
      position: "right"
    })), Qe(t.options, "debugRows", "getRightVisibleCells"));
  },
  createTable: (e10) => {
    e10.setColumnPinning = (t) => e10.options.onColumnPinningChange == null ? void 0 : e10.options.onColumnPinningChange(t), e10.resetColumnPinning = (t) => {
      var n, o;
      return e10.setColumnPinning(t ? kp() : (n = (o = e10.initialState) == null ? void 0 : o.columnPinning) != null ? n : kp());
    }, e10.getIsSomeColumnsPinned = (t) => {
      var n;
      const o = e10.getState().columnPinning;
      if (!t) {
        var r, s;
        return !!((r = o.left) != null && r.length || (s = o.right) != null && s.length);
      }
      return !!((n = o[t]) != null && n.length);
    }, e10.getLeftLeafColumns = Ke(() => [e10.getAllLeafColumns(), e10.getState().columnPinning.left], (t, n) => (n ?? []).map((o) => t.find((r) => r.id === o)).filter(Boolean), Qe(e10.options, "debugColumns", "getLeftLeafColumns")), e10.getRightLeafColumns = Ke(() => [e10.getAllLeafColumns(), e10.getState().columnPinning.right], (t, n) => (n ?? []).map((o) => t.find((r) => r.id === o)).filter(Boolean), Qe(e10.options, "debugColumns", "getRightLeafColumns")), e10.getCenterLeafColumns = Ke(() => [e10.getAllLeafColumns(), e10.getState().columnPinning.left, e10.getState().columnPinning.right], (t, n, o) => {
      const r = [...n ?? [], ...o ?? []];
      return t.filter((s) => !r.includes(s.id));
    }, Qe(e10.options, "debugColumns", "getCenterLeafColumns"));
  }
};
var dc = {
  size: 150,
  minSize: 20,
  maxSize: Number.MAX_SAFE_INTEGER
};
var Fp = () => ({
  startOffset: null,
  startSize: null,
  deltaOffset: null,
  deltaPercentage: null,
  isResizingColumn: false,
  columnSizingStart: []
});
var uH = {
  getDefaultColumnDef: () => dc,
  getInitialState: (e10) => ({
    columnSizing: {},
    columnSizingInfo: Fp(),
    ...e10
  }),
  getDefaultOptions: (e10) => ({
    columnResizeMode: "onEnd",
    columnResizeDirection: "ltr",
    onColumnSizingChange: po("columnSizing", e10),
    onColumnSizingInfoChange: po("columnSizingInfo", e10)
  }),
  createColumn: (e10, t) => {
    e10.getSize = () => {
      var n, o, r;
      const s = t.getState().columnSizing[e10.id];
      return Math.min(Math.max((n = e10.columnDef.minSize) != null ? n : dc.minSize, (o = s ?? e10.columnDef.size) != null ? o : dc.size), (r = e10.columnDef.maxSize) != null ? r : dc.maxSize);
    }, e10.getStart = Ke((n) => [n, Va(t, n), t.getState().columnSizing], (n, o) => o.slice(0, e10.getIndex(n)).reduce((r, s) => r + s.getSize(), 0), Qe(t.options, "debugColumns", "getStart")), e10.getAfter = Ke((n) => [n, Va(t, n), t.getState().columnSizing], (n, o) => o.slice(e10.getIndex(n) + 1).reduce((r, s) => r + s.getSize(), 0), Qe(t.options, "debugColumns", "getAfter")), e10.resetSize = () => {
      t.setColumnSizing((n) => {
        let {
          [e10.id]: o,
          ...r
        } = n;
        return r;
      });
    }, e10.getCanResize = () => {
      var n, o;
      return ((n = e10.columnDef.enableResizing) != null ? n : true) && ((o = t.options.enableColumnResizing) != null ? o : true);
    }, e10.getIsResizing = () => t.getState().columnSizingInfo.isResizingColumn === e10.id;
  },
  createHeader: (e10, t) => {
    e10.getSize = () => {
      let n = 0;
      const o = (r) => {
        if (r.subHeaders.length)
          r.subHeaders.forEach(o);
        else {
          var s;
          n += (s = r.column.getSize()) != null ? s : 0;
        }
      };
      return o(e10), n;
    }, e10.getStart = () => {
      if (e10.index > 0) {
        const n = e10.headerGroup.headers[e10.index - 1];
        return n.getStart() + n.getSize();
      }
      return 0;
    }, e10.getResizeHandler = (n) => {
      const o = t.getColumn(e10.column.id), r = o == null ? void 0 : o.getCanResize();
      return (s) => {
        if (!o || !r || (s.persist == null || s.persist(), Np(s) && s.touches && s.touches.length > 1))
          return;
        const a = e10.getSize(), l = e10 ? e10.getLeafHeaders().map((y) => [y.column.id, y.column.getSize()]) : [[o.id, o.getSize()]], c = Np(s) ? Math.round(s.touches[0].clientX) : s.clientX, u = {}, d = (y, C) => {
          typeof C == "number" && (t.setColumnSizingInfo((x) => {
            var T, w;
            const R = t.options.columnResizeDirection === "rtl" ? -1 : 1, E = (C - ((T = x == null ? void 0 : x.startOffset) != null ? T : 0)) * R, O = Math.max(E / ((w = x == null ? void 0 : x.startSize) != null ? w : 0), -0.999999);
            return x.columnSizingStart.forEach((I) => {
              let [P, A] = I;
              u[P] = Math.round(Math.max(A + A * O, 0) * 100) / 100;
            }), {
              ...x,
              deltaOffset: E,
              deltaPercentage: O
            };
          }), (t.options.columnResizeMode === "onChange" || y === "end") && t.setColumnSizing((x) => ({
            ...x,
            ...u
          })));
        }, p = (y) => d("move", y), m = (y) => {
          d("end", y), t.setColumnSizingInfo((C) => ({
            ...C,
            isResizingColumn: false,
            startOffset: null,
            startSize: null,
            deltaOffset: null,
            deltaPercentage: null,
            columnSizingStart: []
          }));
        }, g = n || typeof document < "u" ? document : null, b = {
          moveHandler: (y) => p(y.clientX),
          upHandler: (y) => {
            g == null || g.removeEventListener("mousemove", b.moveHandler), g == null || g.removeEventListener("mouseup", b.upHandler), m(y.clientX);
          }
        }, v = {
          moveHandler: (y) => (y.cancelable && (y.preventDefault(), y.stopPropagation()), p(y.touches[0].clientX), false),
          upHandler: (y) => {
            var C;
            g == null || g.removeEventListener("touchmove", v.moveHandler), g == null || g.removeEventListener("touchend", v.upHandler), y.cancelable && (y.preventDefault(), y.stopPropagation()), m((C = y.touches[0]) == null ? void 0 : C.clientX);
          }
        }, h = dH() ? {
          passive: false
        } : false;
        Np(s) ? (g == null || g.addEventListener("touchmove", v.moveHandler, h), g == null || g.addEventListener("touchend", v.upHandler, h)) : (g == null || g.addEventListener("mousemove", b.moveHandler, h), g == null || g.addEventListener("mouseup", b.upHandler, h)), t.setColumnSizingInfo((y) => ({
          ...y,
          startOffset: c,
          startSize: a,
          deltaOffset: 0,
          deltaPercentage: 0,
          columnSizingStart: l,
          isResizingColumn: o.id
        }));
      };
    };
  },
  createTable: (e10) => {
    e10.setColumnSizing = (t) => e10.options.onColumnSizingChange == null ? void 0 : e10.options.onColumnSizingChange(t), e10.setColumnSizingInfo = (t) => e10.options.onColumnSizingInfoChange == null ? void 0 : e10.options.onColumnSizingInfoChange(t), e10.resetColumnSizing = (t) => {
      var n;
      e10.setColumnSizing(t ? {} : (n = e10.initialState.columnSizing) != null ? n : {});
    }, e10.resetHeaderSizeInfo = (t) => {
      var n;
      e10.setColumnSizingInfo(t ? Fp() : (n = e10.initialState.columnSizingInfo) != null ? n : Fp());
    }, e10.getTotalSize = () => {
      var t, n;
      return (t = (n = e10.getHeaderGroups()[0]) == null ? void 0 : n.headers.reduce((o, r) => o + r.getSize(), 0)) != null ? t : 0;
    }, e10.getLeftTotalSize = () => {
      var t, n;
      return (t = (n = e10.getLeftHeaderGroups()[0]) == null ? void 0 : n.headers.reduce((o, r) => o + r.getSize(), 0)) != null ? t : 0;
    }, e10.getCenterTotalSize = () => {
      var t, n;
      return (t = (n = e10.getCenterHeaderGroups()[0]) == null ? void 0 : n.headers.reduce((o, r) => o + r.getSize(), 0)) != null ? t : 0;
    }, e10.getRightTotalSize = () => {
      var t, n;
      return (t = (n = e10.getRightHeaderGroups()[0]) == null ? void 0 : n.headers.reduce((o, r) => o + r.getSize(), 0)) != null ? t : 0;
    };
  }
};
var pc = null;
function dH() {
  if (typeof pc == "boolean") return pc;
  let e10 = false;
  try {
    const t = {
      get passive() {
        return e10 = true, false;
      }
    }, n = () => {
    };
    window.addEventListener("test", n, t), window.removeEventListener("test", n);
  } catch {
    e10 = false;
  }
  return pc = e10, pc;
}
function Np(e10) {
  return e10.type === "touchstart";
}
var pH = {
  getInitialState: (e10) => ({
    columnVisibility: {},
    ...e10
  }),
  getDefaultOptions: (e10) => ({
    onColumnVisibilityChange: po("columnVisibility", e10)
  }),
  createColumn: (e10, t) => {
    e10.toggleVisibility = (n) => {
      e10.getCanHide() && t.setColumnVisibility((o) => ({
        ...o,
        [e10.id]: n ?? !e10.getIsVisible()
      }));
    }, e10.getIsVisible = () => {
      var n, o;
      const r = e10.columns;
      return (n = r.length ? r.some((s) => s.getIsVisible()) : (o = t.getState().columnVisibility) == null ? void 0 : o[e10.id]) != null ? n : true;
    }, e10.getCanHide = () => {
      var n, o;
      return ((n = e10.columnDef.enableHiding) != null ? n : true) && ((o = t.options.enableHiding) != null ? o : true);
    }, e10.getToggleVisibilityHandler = () => (n) => {
      e10.toggleVisibility == null || e10.toggleVisibility(n.target.checked);
    };
  },
  createRow: (e10, t) => {
    e10._getAllVisibleCells = Ke(() => [e10.getAllCells(), t.getState().columnVisibility], (n) => n.filter((o) => o.column.getIsVisible()), Qe(t.options, "debugRows", "_getAllVisibleCells")), e10.getVisibleCells = Ke(() => [e10.getLeftVisibleCells(), e10.getCenterVisibleCells(), e10.getRightVisibleCells()], (n, o, r) => [...n, ...o, ...r], Qe(t.options, "debugRows", "getVisibleCells"));
  },
  createTable: (e10) => {
    const t = (n, o) => Ke(() => [o(), o().filter((r) => r.getIsVisible()).map((r) => r.id).join("_")], (r) => r.filter((s) => s.getIsVisible == null ? void 0 : s.getIsVisible()), Qe(e10.options, "debugColumns", n));
    e10.getVisibleFlatColumns = t("getVisibleFlatColumns", () => e10.getAllFlatColumns()), e10.getVisibleLeafColumns = t("getVisibleLeafColumns", () => e10.getAllLeafColumns()), e10.getLeftVisibleLeafColumns = t("getLeftVisibleLeafColumns", () => e10.getLeftLeafColumns()), e10.getRightVisibleLeafColumns = t("getRightVisibleLeafColumns", () => e10.getRightLeafColumns()), e10.getCenterVisibleLeafColumns = t("getCenterVisibleLeafColumns", () => e10.getCenterLeafColumns()), e10.setColumnVisibility = (n) => e10.options.onColumnVisibilityChange == null ? void 0 : e10.options.onColumnVisibilityChange(n), e10.resetColumnVisibility = (n) => {
      var o;
      e10.setColumnVisibility(n ? {} : (o = e10.initialState.columnVisibility) != null ? o : {});
    }, e10.toggleAllColumnsVisible = (n) => {
      var o;
      n = (o = n) != null ? o : !e10.getIsAllColumnsVisible(), e10.setColumnVisibility(e10.getAllLeafColumns().reduce((r, s) => ({
        ...r,
        [s.id]: n || !(s.getCanHide != null && s.getCanHide())
      }), {}));
    }, e10.getIsAllColumnsVisible = () => !e10.getAllLeafColumns().some((n) => !(n.getIsVisible != null && n.getIsVisible())), e10.getIsSomeColumnsVisible = () => e10.getAllLeafColumns().some((n) => n.getIsVisible == null ? void 0 : n.getIsVisible()), e10.getToggleAllColumnsVisibilityHandler = () => (n) => {
      var o;
      e10.toggleAllColumnsVisible((o = n.target) == null ? void 0 : o.checked);
    };
  }
};
function Va(e10, t) {
  return t ? t === "center" ? e10.getCenterVisibleLeafColumns() : t === "left" ? e10.getLeftVisibleLeafColumns() : e10.getRightVisibleLeafColumns() : e10.getVisibleLeafColumns();
}
var fH = {
  createTable: (e10) => {
    e10._getGlobalFacetedRowModel = e10.options.getFacetedRowModel && e10.options.getFacetedRowModel(e10, "__global__"), e10.getGlobalFacetedRowModel = () => e10.options.manualFiltering || !e10._getGlobalFacetedRowModel ? e10.getPreFilteredRowModel() : e10._getGlobalFacetedRowModel(), e10._getGlobalFacetedUniqueValues = e10.options.getFacetedUniqueValues && e10.options.getFacetedUniqueValues(e10, "__global__"), e10.getGlobalFacetedUniqueValues = () => e10._getGlobalFacetedUniqueValues ? e10._getGlobalFacetedUniqueValues() : /* @__PURE__ */ new Map(), e10._getGlobalFacetedMinMaxValues = e10.options.getFacetedMinMaxValues && e10.options.getFacetedMinMaxValues(e10, "__global__"), e10.getGlobalFacetedMinMaxValues = () => {
      if (e10._getGlobalFacetedMinMaxValues)
        return e10._getGlobalFacetedMinMaxValues();
    };
  }
};
var mH = {
  getInitialState: (e10) => ({
    globalFilter: void 0,
    ...e10
  }),
  getDefaultOptions: (e10) => ({
    onGlobalFilterChange: po("globalFilter", e10),
    globalFilterFn: "auto",
    getColumnCanGlobalFilter: (t) => {
      var n;
      const o = (n = e10.getCoreRowModel().flatRows[0]) == null || (n = n._getAllCellsByColumnId()[t.id]) == null ? void 0 : n.getValue();
      return typeof o == "string" || typeof o == "number";
    }
  }),
  createColumn: (e10, t) => {
    e10.getCanGlobalFilter = () => {
      var n, o, r, s;
      return ((n = e10.columnDef.enableGlobalFilter) != null ? n : true) && ((o = t.options.enableGlobalFilter) != null ? o : true) && ((r = t.options.enableFilters) != null ? r : true) && ((s = t.options.getColumnCanGlobalFilter == null ? void 0 : t.options.getColumnCanGlobalFilter(e10)) != null ? s : true) && !!e10.accessorFn;
    };
  },
  createTable: (e10) => {
    e10.getGlobalAutoFilterFn = () => Zo.includesString, e10.getGlobalFilterFn = () => {
      var t, n;
      const {
        globalFilterFn: o
      } = e10.options;
      return Ed(o) ? o : o === "auto" ? e10.getGlobalAutoFilterFn() : (t = (n = e10.options.filterFns) == null ? void 0 : n[o]) != null ? t : Zo[o];
    }, e10.setGlobalFilter = (t) => {
      e10.options.onGlobalFilterChange == null || e10.options.onGlobalFilterChange(t);
    }, e10.resetGlobalFilter = (t) => {
      e10.setGlobalFilter(t ? void 0 : e10.initialState.globalFilter);
    };
  }
};
var gH = {
  getInitialState: (e10) => ({
    expanded: {},
    ...e10
  }),
  getDefaultOptions: (e10) => ({
    onExpandedChange: po("expanded", e10),
    paginateExpandedRows: true
  }),
  createTable: (e10) => {
    let t = false, n = false;
    e10._autoResetExpanded = () => {
      var o, r;
      if (!t) {
        e10._queue(() => {
          t = true;
        });
        return;
      }
      if ((o = (r = e10.options.autoResetAll) != null ? r : e10.options.autoResetExpanded) != null ? o : !e10.options.manualExpanding) {
        if (n) return;
        n = true, e10._queue(() => {
          e10.resetExpanded(), n = false;
        });
      }
    }, e10.setExpanded = (o) => e10.options.onExpandedChange == null ? void 0 : e10.options.onExpandedChange(o), e10.toggleAllRowsExpanded = (o) => {
      o ?? !e10.getIsAllRowsExpanded() ? e10.setExpanded(true) : e10.setExpanded({});
    }, e10.resetExpanded = (o) => {
      var r, s;
      e10.setExpanded(o ? {} : (r = (s = e10.initialState) == null ? void 0 : s.expanded) != null ? r : {});
    }, e10.getCanSomeRowsExpand = () => e10.getPrePaginationRowModel().flatRows.some((o) => o.getCanExpand()), e10.getToggleAllRowsExpandedHandler = () => (o) => {
      o.persist == null || o.persist(), e10.toggleAllRowsExpanded();
    }, e10.getIsSomeRowsExpanded = () => {
      const o = e10.getState().expanded;
      return o === true || Object.values(o).some(Boolean);
    }, e10.getIsAllRowsExpanded = () => {
      const o = e10.getState().expanded;
      return typeof o == "boolean" ? o === true : !(!Object.keys(o).length || e10.getRowModel().flatRows.some((r) => !r.getIsExpanded()));
    }, e10.getExpandedDepth = () => {
      let o = 0;
      return (e10.getState().expanded === true ? Object.keys(e10.getRowModel().rowsById) : Object.keys(e10.getState().expanded)).forEach((s) => {
        const a = s.split(".");
        o = Math.max(o, a.length);
      }), o;
    }, e10.getPreExpandedRowModel = () => e10.getSortedRowModel(), e10.getExpandedRowModel = () => (!e10._getExpandedRowModel && e10.options.getExpandedRowModel && (e10._getExpandedRowModel = e10.options.getExpandedRowModel(e10)), e10.options.manualExpanding || !e10._getExpandedRowModel ? e10.getPreExpandedRowModel() : e10._getExpandedRowModel());
  },
  createRow: (e10, t) => {
    e10.toggleExpanded = (n) => {
      t.setExpanded((o) => {
        var r;
        const s = o === true ? true : !!(o != null && o[e10.id]);
        let a = {};
        if (o === true ? Object.keys(t.getRowModel().rowsById).forEach((l) => {
          a[l] = true;
        }) : a = o, n = (r = n) != null ? r : !s, !s && n)
          return {
            ...a,
            [e10.id]: true
          };
        if (s && !n) {
          const {
            [e10.id]: l,
            ...c
          } = a;
          return c;
        }
        return o;
      });
    }, e10.getIsExpanded = () => {
      var n;
      const o = t.getState().expanded;
      return !!((n = t.options.getIsRowExpanded == null ? void 0 : t.options.getIsRowExpanded(e10)) != null ? n : o === true || o != null && o[e10.id]);
    }, e10.getCanExpand = () => {
      var n, o, r;
      return (n = t.options.getRowCanExpand == null ? void 0 : t.options.getRowCanExpand(e10)) != null ? n : ((o = t.options.enableExpanding) != null ? o : true) && !!((r = e10.subRows) != null && r.length);
    }, e10.getIsAllParentsExpanded = () => {
      let n = true, o = e10;
      for (; n && o.parentId; )
        o = t.getRow(o.parentId, true), n = o.getIsExpanded();
      return n;
    }, e10.getToggleExpandedHandler = () => {
      const n = e10.getCanExpand();
      return () => {
        n && e10.toggleExpanded();
      };
    };
  }
};
var rm = 0;
var im = 10;
var $p = () => ({
  pageIndex: rm,
  pageSize: im
});
var hH = {
  getInitialState: (e10) => ({
    ...e10,
    pagination: {
      ...$p(),
      ...e10 == null ? void 0 : e10.pagination
    }
  }),
  getDefaultOptions: (e10) => ({
    onPaginationChange: po("pagination", e10)
  }),
  createTable: (e10) => {
    let t = false, n = false;
    e10._autoResetPageIndex = () => {
      var o, r;
      if (!t) {
        e10._queue(() => {
          t = true;
        });
        return;
      }
      if ((o = (r = e10.options.autoResetAll) != null ? r : e10.options.autoResetPageIndex) != null ? o : !e10.options.manualPagination) {
        if (n) return;
        n = true, e10._queue(() => {
          e10.resetPageIndex(), n = false;
        });
      }
    }, e10.setPagination = (o) => {
      const r = (s) => Hr(o, s);
      return e10.options.onPaginationChange == null ? void 0 : e10.options.onPaginationChange(r);
    }, e10.resetPagination = (o) => {
      var r;
      e10.setPagination(o ? $p() : (r = e10.initialState.pagination) != null ? r : $p());
    }, e10.setPageIndex = (o) => {
      e10.setPagination((r) => {
        let s = Hr(o, r.pageIndex);
        const a = typeof e10.options.pageCount > "u" || e10.options.pageCount === -1 ? Number.MAX_SAFE_INTEGER : e10.options.pageCount - 1;
        return s = Math.max(0, Math.min(s, a)), {
          ...r,
          pageIndex: s
        };
      });
    }, e10.resetPageIndex = (o) => {
      var r, s;
      e10.setPageIndex(o ? rm : (r = (s = e10.initialState) == null || (s = s.pagination) == null ? void 0 : s.pageIndex) != null ? r : rm);
    }, e10.resetPageSize = (o) => {
      var r, s;
      e10.setPageSize(o ? im : (r = (s = e10.initialState) == null || (s = s.pagination) == null ? void 0 : s.pageSize) != null ? r : im);
    }, e10.setPageSize = (o) => {
      e10.setPagination((r) => {
        const s = Math.max(1, Hr(o, r.pageSize)), a = r.pageSize * r.pageIndex, l = Math.floor(a / s);
        return {
          ...r,
          pageIndex: l,
          pageSize: s
        };
      });
    }, e10.setPageCount = (o) => e10.setPagination((r) => {
      var s;
      let a = Hr(o, (s = e10.options.pageCount) != null ? s : -1);
      return typeof a == "number" && (a = Math.max(-1, a)), {
        ...r,
        pageCount: a
      };
    }), e10.getPageOptions = Ke(() => [e10.getPageCount()], (o) => {
      let r = [];
      return o && o > 0 && (r = [...new Array(o)].fill(null).map((s, a) => a)), r;
    }, Qe(e10.options, "debugTable", "getPageOptions")), e10.getCanPreviousPage = () => e10.getState().pagination.pageIndex > 0, e10.getCanNextPage = () => {
      const {
        pageIndex: o
      } = e10.getState().pagination, r = e10.getPageCount();
      return r === -1 ? true : r === 0 ? false : o < r - 1;
    }, e10.previousPage = () => e10.setPageIndex((o) => o - 1), e10.nextPage = () => e10.setPageIndex((o) => o + 1), e10.firstPage = () => e10.setPageIndex(0), e10.lastPage = () => e10.setPageIndex(e10.getPageCount() - 1), e10.getPrePaginationRowModel = () => e10.getExpandedRowModel(), e10.getPaginationRowModel = () => (!e10._getPaginationRowModel && e10.options.getPaginationRowModel && (e10._getPaginationRowModel = e10.options.getPaginationRowModel(e10)), e10.options.manualPagination || !e10._getPaginationRowModel ? e10.getPrePaginationRowModel() : e10._getPaginationRowModel()), e10.getPageCount = () => {
      var o;
      return (o = e10.options.pageCount) != null ? o : Math.ceil(e10.getRowCount() / e10.getState().pagination.pageSize);
    }, e10.getRowCount = () => {
      var o;
      return (o = e10.options.rowCount) != null ? o : e10.getPrePaginationRowModel().rows.length;
    };
  }
};
var Vp = () => ({
  top: [],
  bottom: []
});
var bH = {
  getInitialState: (e10) => ({
    rowPinning: Vp(),
    ...e10
  }),
  getDefaultOptions: (e10) => ({
    onRowPinningChange: po("rowPinning", e10)
  }),
  createRow: (e10, t) => {
    e10.pin = (n, o, r) => {
      const s = o ? e10.getLeafRows().map((c) => {
        let {
          id: u
        } = c;
        return u;
      }) : [], a = r ? e10.getParentRows().map((c) => {
        let {
          id: u
        } = c;
        return u;
      }) : [], l = /* @__PURE__ */ new Set([...a, e10.id, ...s]);
      t.setRowPinning((c) => {
        var u, d;
        if (n === "bottom") {
          var p, m;
          return {
            top: ((p = c == null ? void 0 : c.top) != null ? p : []).filter((v) => !(l != null && l.has(v))),
            bottom: [...((m = c == null ? void 0 : c.bottom) != null ? m : []).filter((v) => !(l != null && l.has(v))), ...Array.from(l)]
          };
        }
        if (n === "top") {
          var g, b;
          return {
            top: [...((g = c == null ? void 0 : c.top) != null ? g : []).filter((v) => !(l != null && l.has(v))), ...Array.from(l)],
            bottom: ((b = c == null ? void 0 : c.bottom) != null ? b : []).filter((v) => !(l != null && l.has(v)))
          };
        }
        return {
          top: ((u = c == null ? void 0 : c.top) != null ? u : []).filter((v) => !(l != null && l.has(v))),
          bottom: ((d = c == null ? void 0 : c.bottom) != null ? d : []).filter((v) => !(l != null && l.has(v)))
        };
      });
    }, e10.getCanPin = () => {
      var n;
      const {
        enableRowPinning: o,
        enablePinning: r
      } = t.options;
      return typeof o == "function" ? o(e10) : (n = o ?? r) != null ? n : true;
    }, e10.getIsPinned = () => {
      const n = [e10.id], {
        top: o,
        bottom: r
      } = t.getState().rowPinning, s = n.some((l) => o == null ? void 0 : o.includes(l)), a = n.some((l) => r == null ? void 0 : r.includes(l));
      return s ? "top" : a ? "bottom" : false;
    }, e10.getPinnedIndex = () => {
      var n, o;
      const r = e10.getIsPinned();
      if (!r) return -1;
      const s = (n = r === "top" ? t.getTopRows() : t.getBottomRows()) == null ? void 0 : n.map((a) => {
        let {
          id: l
        } = a;
        return l;
      });
      return (o = s == null ? void 0 : s.indexOf(e10.id)) != null ? o : -1;
    };
  },
  createTable: (e10) => {
    e10.setRowPinning = (t) => e10.options.onRowPinningChange == null ? void 0 : e10.options.onRowPinningChange(t), e10.resetRowPinning = (t) => {
      var n, o;
      return e10.setRowPinning(t ? Vp() : (n = (o = e10.initialState) == null ? void 0 : o.rowPinning) != null ? n : Vp());
    }, e10.getIsSomeRowsPinned = (t) => {
      var n;
      const o = e10.getState().rowPinning;
      if (!t) {
        var r, s;
        return !!((r = o.top) != null && r.length || (s = o.bottom) != null && s.length);
      }
      return !!((n = o[t]) != null && n.length);
    }, e10._getPinnedRows = (t, n, o) => {
      var r;
      return ((r = e10.options.keepPinnedRows) == null || r ? (
        //get all rows that are pinned even if they would not be otherwise visible
        //account for expanded parent rows, but not pagination or filtering
        (n ?? []).map((a) => {
          const l = e10.getRow(a, true);
          return l.getIsAllParentsExpanded() ? l : null;
        })
      ) : (
        //else get only visible rows that are pinned
        (n ?? []).map((a) => t.find((l) => l.id === a))
      )).filter(Boolean).map((a) => ({
        ...a,
        position: o
      }));
    }, e10.getTopRows = Ke(() => [e10.getRowModel().rows, e10.getState().rowPinning.top], (t, n) => e10._getPinnedRows(t, n, "top"), Qe(e10.options, "debugRows", "getTopRows")), e10.getBottomRows = Ke(() => [e10.getRowModel().rows, e10.getState().rowPinning.bottom], (t, n) => e10._getPinnedRows(t, n, "bottom"), Qe(e10.options, "debugRows", "getBottomRows")), e10.getCenterRows = Ke(() => [e10.getRowModel().rows, e10.getState().rowPinning.top, e10.getState().rowPinning.bottom], (t, n, o) => {
      const r = /* @__PURE__ */ new Set([...n ?? [], ...o ?? []]);
      return t.filter((s) => !r.has(s.id));
    }, Qe(e10.options, "debugRows", "getCenterRows"));
  }
};
var vH = {
  getInitialState: (e10) => ({
    rowSelection: {},
    ...e10
  }),
  getDefaultOptions: (e10) => ({
    onRowSelectionChange: po("rowSelection", e10),
    enableRowSelection: true,
    enableMultiRowSelection: true,
    enableSubRowSelection: true
    // enableGroupingRowSelection: false,
    // isAdditiveSelectEvent: (e: unknown) => !!e.metaKey,
    // isInclusiveSelectEvent: (e: unknown) => !!e.shiftKey,
  }),
  createTable: (e10) => {
    e10.setRowSelection = (t) => e10.options.onRowSelectionChange == null ? void 0 : e10.options.onRowSelectionChange(t), e10.resetRowSelection = (t) => {
      var n;
      return e10.setRowSelection(t ? {} : (n = e10.initialState.rowSelection) != null ? n : {});
    }, e10.toggleAllRowsSelected = (t) => {
      e10.setRowSelection((n) => {
        t = typeof t < "u" ? t : !e10.getIsAllRowsSelected();
        const o = {
          ...n
        }, r = e10.getPreGroupedRowModel().flatRows;
        return t ? r.forEach((s) => {
          s.getCanSelect() && (o[s.id] = true);
        }) : r.forEach((s) => {
          delete o[s.id];
        }), o;
      });
    }, e10.toggleAllPageRowsSelected = (t) => e10.setRowSelection((n) => {
      const o = typeof t < "u" ? t : !e10.getIsAllPageRowsSelected(), r = {
        ...n
      };
      return e10.getRowModel().rows.forEach((s) => {
        sm(r, s.id, o, true, e10);
      }), r;
    }), e10.getPreSelectedRowModel = () => e10.getCoreRowModel(), e10.getSelectedRowModel = Ke(() => [e10.getState().rowSelection, e10.getCoreRowModel()], (t, n) => Object.keys(t).length ? _p(e10, n) : {
      rows: [],
      flatRows: [],
      rowsById: {}
    }, Qe(e10.options, "debugTable", "getSelectedRowModel")), e10.getFilteredSelectedRowModel = Ke(() => [e10.getState().rowSelection, e10.getFilteredRowModel()], (t, n) => Object.keys(t).length ? _p(e10, n) : {
      rows: [],
      flatRows: [],
      rowsById: {}
    }, Qe(e10.options, "debugTable", "getFilteredSelectedRowModel")), e10.getGroupedSelectedRowModel = Ke(() => [e10.getState().rowSelection, e10.getSortedRowModel()], (t, n) => Object.keys(t).length ? _p(e10, n) : {
      rows: [],
      flatRows: [],
      rowsById: {}
    }, Qe(e10.options, "debugTable", "getGroupedSelectedRowModel")), e10.getIsAllRowsSelected = () => {
      const t = e10.getFilteredRowModel().flatRows, {
        rowSelection: n
      } = e10.getState();
      let o = !!(t.length && Object.keys(n).length);
      return o && t.some((r) => r.getCanSelect() && !n[r.id]) && (o = false), o;
    }, e10.getIsAllPageRowsSelected = () => {
      const t = e10.getPaginationRowModel().flatRows.filter((r) => r.getCanSelect()), {
        rowSelection: n
      } = e10.getState();
      let o = !!t.length;
      return o && t.some((r) => !n[r.id]) && (o = false), o;
    }, e10.getIsSomeRowsSelected = () => {
      var t;
      const n = Object.keys((t = e10.getState().rowSelection) != null ? t : {}).length;
      return n > 0 && n < e10.getFilteredRowModel().flatRows.length;
    }, e10.getIsSomePageRowsSelected = () => {
      const t = e10.getPaginationRowModel().flatRows;
      return e10.getIsAllPageRowsSelected() ? false : t.filter((n) => n.getCanSelect()).some((n) => n.getIsSelected() || n.getIsSomeSelected());
    }, e10.getToggleAllRowsSelectedHandler = () => (t) => {
      e10.toggleAllRowsSelected(t.target.checked);
    }, e10.getToggleAllPageRowsSelectedHandler = () => (t) => {
      e10.toggleAllPageRowsSelected(t.target.checked);
    };
  },
  createRow: (e10, t) => {
    e10.toggleSelected = (n, o) => {
      const r = e10.getIsSelected();
      t.setRowSelection((s) => {
        var a;
        if (n = typeof n < "u" ? n : !r, e10.getCanSelect() && r === n)
          return s;
        const l = {
          ...s
        };
        return sm(l, e10.id, n, (a = o == null ? void 0 : o.selectChildren) != null ? a : true, t), l;
      });
    }, e10.getIsSelected = () => {
      const {
        rowSelection: n
      } = t.getState();
      return Wg(e10, n);
    }, e10.getIsSomeSelected = () => {
      const {
        rowSelection: n
      } = t.getState();
      return am(e10, n) === "some";
    }, e10.getIsAllSubRowsSelected = () => {
      const {
        rowSelection: n
      } = t.getState();
      return am(e10, n) === "all";
    }, e10.getCanSelect = () => {
      var n;
      return typeof t.options.enableRowSelection == "function" ? t.options.enableRowSelection(e10) : (n = t.options.enableRowSelection) != null ? n : true;
    }, e10.getCanSelectSubRows = () => {
      var n;
      return typeof t.options.enableSubRowSelection == "function" ? t.options.enableSubRowSelection(e10) : (n = t.options.enableSubRowSelection) != null ? n : true;
    }, e10.getCanMultiSelect = () => {
      var n;
      return typeof t.options.enableMultiRowSelection == "function" ? t.options.enableMultiRowSelection(e10) : (n = t.options.enableMultiRowSelection) != null ? n : true;
    }, e10.getToggleSelectedHandler = () => {
      const n = e10.getCanSelect();
      return (o) => {
        var r;
        n && e10.toggleSelected((r = o.target) == null ? void 0 : r.checked);
      };
    };
  }
};
var sm = (e10, t, n, o, r) => {
  var s;
  const a = r.getRow(t, true);
  n ? (a.getCanMultiSelect() || Object.keys(e10).forEach((l) => delete e10[l]), a.getCanSelect() && (e10[t] = true)) : delete e10[t], o && (s = a.subRows) != null && s.length && a.getCanSelectSubRows() && a.subRows.forEach((l) => sm(e10, l.id, n, o, r));
};
function _p(e10, t) {
  const n = e10.getState().rowSelection, o = [], r = {}, s = function(a, l) {
    return a.map((c) => {
      var u;
      const d = Wg(c, n);
      if (d && (o.push(c), r[c.id] = c), (u = c.subRows) != null && u.length && (c = {
        ...c,
        subRows: s(c.subRows)
      }), d)
        return c;
    }).filter(Boolean);
  };
  return {
    rows: s(t.rows),
    flatRows: o,
    rowsById: r
  };
}
function Wg(e10, t) {
  var n;
  return (n = t[e10.id]) != null ? n : false;
}
function am(e10, t, n) {
  var o;
  if (!((o = e10.subRows) != null && o.length)) return false;
  let r = true, s = false;
  return e10.subRows.forEach((a) => {
    if (!(s && !r) && (a.getCanSelect() && (Wg(a, t) ? s = true : r = false), a.subRows && a.subRows.length)) {
      const l = am(a, t);
      l === "all" ? s = true : (l === "some" && (s = true), r = false);
    }
  }), r ? "all" : s ? "some" : false;
}
var lm = /([0-9]+)/gm;
var yH = (e10, t, n) => zw(ei(e10.getValue(n)).toLowerCase(), ei(t.getValue(n)).toLowerCase());
var xH = (e10, t, n) => zw(ei(e10.getValue(n)), ei(t.getValue(n)));
var CH = (e10, t, n) => Hg(ei(e10.getValue(n)).toLowerCase(), ei(t.getValue(n)).toLowerCase());
var SH = (e10, t, n) => Hg(ei(e10.getValue(n)), ei(t.getValue(n)));
var wH = (e10, t, n) => {
  const o = e10.getValue(n), r = t.getValue(n);
  return o > r ? 1 : o < r ? -1 : 0;
};
var TH = (e10, t, n) => Hg(e10.getValue(n), t.getValue(n));
function Hg(e10, t) {
  return e10 === t ? 0 : e10 > t ? 1 : -1;
}
function ei(e10) {
  return typeof e10 == "number" ? isNaN(e10) || e10 === 1 / 0 || e10 === -1 / 0 ? "" : String(e10) : typeof e10 == "string" ? e10 : "";
}
function zw(e10, t) {
  const n = e10.split(lm).filter(Boolean), o = t.split(lm).filter(Boolean);
  for (; n.length && o.length; ) {
    const r = n.shift(), s = o.shift(), a = parseInt(r, 10), l = parseInt(s, 10), c = [a, l].sort();
    if (isNaN(c[0])) {
      if (r > s)
        return 1;
      if (s > r)
        return -1;
      continue;
    }
    if (isNaN(c[1]))
      return isNaN(a) ? -1 : 1;
    if (a > l)
      return 1;
    if (l > a)
      return -1;
  }
  return n.length - o.length;
}
var vi = {
  alphanumeric: yH,
  alphanumericCaseSensitive: xH,
  text: CH,
  textCaseSensitive: SH,
  datetime: wH,
  basic: TH
};
var IH = {
  getInitialState: (e10) => ({
    sorting: [],
    ...e10
  }),
  getDefaultColumnDef: () => ({
    sortingFn: "auto",
    sortUndefined: 1
  }),
  getDefaultOptions: (e10) => ({
    onSortingChange: po("sorting", e10),
    isMultiSortEvent: (t) => t.shiftKey
  }),
  createColumn: (e10, t) => {
    e10.getAutoSortingFn = () => {
      const n = t.getFilteredRowModel().flatRows.slice(10);
      let o = false;
      for (const r of n) {
        const s = r == null ? void 0 : r.getValue(e10.id);
        if (Object.prototype.toString.call(s) === "[object Date]")
          return vi.datetime;
        if (typeof s == "string" && (o = true, s.split(lm).length > 1))
          return vi.alphanumeric;
      }
      return o ? vi.text : vi.basic;
    }, e10.getAutoSortDir = () => {
      const n = t.getFilteredRowModel().flatRows[0];
      return typeof (n == null ? void 0 : n.getValue(e10.id)) == "string" ? "asc" : "desc";
    }, e10.getSortingFn = () => {
      var n, o;
      if (!e10)
        throw new Error();
      return Ed(e10.columnDef.sortingFn) ? e10.columnDef.sortingFn : e10.columnDef.sortingFn === "auto" ? e10.getAutoSortingFn() : (n = (o = t.options.sortingFns) == null ? void 0 : o[e10.columnDef.sortingFn]) != null ? n : vi[e10.columnDef.sortingFn];
    }, e10.toggleSorting = (n, o) => {
      const r = e10.getNextSortingOrder(), s = typeof n < "u" && n !== null;
      t.setSorting((a) => {
        const l = a == null ? void 0 : a.find((g) => g.id === e10.id), c = a == null ? void 0 : a.findIndex((g) => g.id === e10.id);
        let u = [], d, p = s ? n : r === "desc";
        if (a != null && a.length && e10.getCanMultiSort() && o ? l ? d = "toggle" : d = "add" : a != null && a.length && c !== a.length - 1 ? d = "replace" : l ? d = "toggle" : d = "replace", d === "toggle" && (s || r || (d = "remove")), d === "add") {
          var m;
          u = [...a, {
            id: e10.id,
            desc: p
          }], u.splice(0, u.length - ((m = t.options.maxMultiSortColCount) != null ? m : Number.MAX_SAFE_INTEGER));
        } else d === "toggle" ? u = a.map((g) => g.id === e10.id ? {
          ...g,
          desc: p
        } : g) : d === "remove" ? u = a.filter((g) => g.id !== e10.id) : u = [{
          id: e10.id,
          desc: p
        }];
        return u;
      });
    }, e10.getFirstSortDir = () => {
      var n, o;
      return ((n = (o = e10.columnDef.sortDescFirst) != null ? o : t.options.sortDescFirst) != null ? n : e10.getAutoSortDir() === "desc") ? "desc" : "asc";
    }, e10.getNextSortingOrder = (n) => {
      var o, r;
      const s = e10.getFirstSortDir(), a = e10.getIsSorted();
      return a ? a !== s && ((o = t.options.enableSortingRemoval) == null || o) && // If enableSortRemove, enable in general
      (!(n && (r = t.options.enableMultiRemove) != null) || r) ? false : a === "desc" ? "asc" : "desc" : s;
    }, e10.getCanSort = () => {
      var n, o;
      return ((n = e10.columnDef.enableSorting) != null ? n : true) && ((o = t.options.enableSorting) != null ? o : true) && !!e10.accessorFn;
    }, e10.getCanMultiSort = () => {
      var n, o;
      return (n = (o = e10.columnDef.enableMultiSort) != null ? o : t.options.enableMultiSort) != null ? n : !!e10.accessorFn;
    }, e10.getIsSorted = () => {
      var n;
      const o = (n = t.getState().sorting) == null ? void 0 : n.find((r) => r.id === e10.id);
      return o ? o.desc ? "desc" : "asc" : false;
    }, e10.getSortIndex = () => {
      var n, o;
      return (n = (o = t.getState().sorting) == null ? void 0 : o.findIndex((r) => r.id === e10.id)) != null ? n : -1;
    }, e10.clearSorting = () => {
      t.setSorting((n) => n != null && n.length ? n.filter((o) => o.id !== e10.id) : []);
    }, e10.getToggleSortingHandler = () => {
      const n = e10.getCanSort();
      return (o) => {
        n && (o.persist == null || o.persist(), e10.toggleSorting == null || e10.toggleSorting(void 0, e10.getCanMultiSort() ? t.options.isMultiSortEvent == null ? void 0 : t.options.isMultiSortEvent(o) : false));
      };
    };
  },
  createTable: (e10) => {
    e10.setSorting = (t) => e10.options.onSortingChange == null ? void 0 : e10.options.onSortingChange(t), e10.resetSorting = (t) => {
      var n, o;
      e10.setSorting(t ? [] : (n = (o = e10.initialState) == null ? void 0 : o.sorting) != null ? n : []);
    }, e10.getPreSortedRowModel = () => e10.getGroupedRowModel(), e10.getSortedRowModel = () => (!e10._getSortedRowModel && e10.options.getSortedRowModel && (e10._getSortedRowModel = e10.options.getSortedRowModel(e10)), e10.options.manualSorting || !e10._getSortedRowModel ? e10.getPreSortedRowModel() : e10._getSortedRowModel());
  }
};
var RH = [
  Y9,
  pH,
  lH,
  cH,
  Z9,
  q9,
  fH,
  //depends on ColumnFaceting
  mH,
  //depends on ColumnFiltering
  IH,
  sH,
  //depends on RowSorting
  gH,
  hH,
  bH,
  vH,
  uH
];
function EH(e10) {
  var t, n;
  (e10.debugAll || e10.debugTable) && console.info("Creating Table Instance...");
  const o = [...RH, ...(t = e10._features) != null ? t : []];
  let r = {
    _features: o
  };
  const s = r._features.reduce((m, g) => Object.assign(m, g.getDefaultOptions == null ? void 0 : g.getDefaultOptions(r)), {}), a = (m) => r.options.mergeOptions ? r.options.mergeOptions(s, m) : {
    ...s,
    ...m
  };
  let c = {
    ...{},
    ...(n = e10.initialState) != null ? n : {}
  };
  r._features.forEach((m) => {
    var g;
    c = (g = m.getInitialState == null ? void 0 : m.getInitialState(c)) != null ? g : c;
  });
  const u = [];
  let d = false;
  const p = {
    _features: o,
    options: {
      ...s,
      ...e10
    },
    initialState: c,
    _queue: (m) => {
      u.push(m), d || (d = true, Promise.resolve().then(() => {
        for (; u.length; )
          u.shift()();
        d = false;
      }).catch((g) => setTimeout(() => {
        throw g;
      })));
    },
    reset: () => {
      r.setState(r.initialState);
    },
    setOptions: (m) => {
      const g = Hr(m, r.options);
      r.options = a(g);
    },
    getState: () => r.options.state,
    setState: (m) => {
      r.options.onStateChange == null || r.options.onStateChange(m);
    },
    _getRowId: (m, g, b) => {
      var v;
      return (v = r.options.getRowId == null ? void 0 : r.options.getRowId(m, g, b)) != null ? v : `${b ? [b.id, g].join(".") : g}`;
    },
    getCoreRowModel: () => (r._getCoreRowModel || (r._getCoreRowModel = r.options.getCoreRowModel(r)), r._getCoreRowModel()),
    // The final calls start at the bottom of the model,
    // expanded rows, which then work their way up
    getRowModel: () => r.getPaginationRowModel(),
    //in next version, we should just pass in the row model as the optional 2nd arg
    getRow: (m, g) => {
      let b = (g ? r.getPrePaginationRowModel() : r.getRowModel()).rowsById[m];
      if (!b && (b = r.getCoreRowModel().rowsById[m], !b))
        throw true ? new Error(`getRow could not find row with ID: ${m}`) : new Error();
      return b;
    },
    _getDefaultColumnDef: Ke(() => [r.options.defaultColumn], (m) => {
      var g;
      return m = (g = m) != null ? g : {}, {
        header: (b) => {
          const v = b.header.column.columnDef;
          return v.accessorKey ? v.accessorKey : v.accessorFn ? v.id : null;
        },
        // footer: props => props.header.column.id,
        cell: (b) => {
          var v, h;
          return (v = (h = b.renderValue()) == null || h.toString == null ? void 0 : h.toString()) != null ? v : null;
        },
        ...r._features.reduce((b, v) => Object.assign(b, v.getDefaultColumnDef == null ? void 0 : v.getDefaultColumnDef()), {}),
        ...m
      };
    }, Qe(e10, "debugColumns", "_getDefaultColumnDef")),
    _getColumnDefs: () => r.options.columns,
    getAllColumns: Ke(() => [r._getColumnDefs()], (m) => {
      const g = function(b, v, h) {
        return h === void 0 && (h = 0), b.map((y) => {
          const C = X9(r, y, h, v), x = y;
          return C.columns = x.columns ? g(x.columns, C, h + 1) : [], C;
        });
      };
      return g(m);
    }, Qe(e10, "debugColumns", "getAllColumns")),
    getAllFlatColumns: Ke(() => [r.getAllColumns()], (m) => m.flatMap((g) => g.getFlatColumns()), Qe(e10, "debugColumns", "getAllFlatColumns")),
    _getAllFlatColumnsById: Ke(() => [r.getAllFlatColumns()], (m) => m.reduce((g, b) => (g[b.id] = b, g), {}), Qe(e10, "debugColumns", "getAllFlatColumnsById")),
    getAllLeafColumns: Ke(() => [r.getAllColumns(), r._getOrderColumnsFn()], (m, g) => {
      let b = m.flatMap((v) => v.getLeafColumns());
      return g(b);
    }, Qe(e10, "debugColumns", "getAllLeafColumns")),
    getColumn: (m) => {
      const g = r._getAllFlatColumnsById()[m];
      return !g && console.error(`[Table] Column with id '${m}' does not exist.`), g;
    }
  };
  Object.assign(r, p);
  for (let m = 0; m < r._features.length; m++) {
    const g = r._features[m];
    g == null || g.createTable == null || g.createTable(r);
  }
  return r;
}
function OH() {
  return (e10) => Ke(() => [e10.options.data], (t) => {
    const n = {
      rows: [],
      flatRows: [],
      rowsById: {}
    }, o = function(r, s, a) {
      s === void 0 && (s = 0);
      const l = [];
      for (let u = 0; u < r.length; u++) {
        const d = $l(e10, e10._getRowId(r[u], u, a), r[u], u, s, void 0, a == null ? void 0 : a.id);
        if (n.flatRows.push(d), n.rowsById[d.id] = d, l.push(d), e10.options.getSubRows) {
          var c;
          d.originalSubRows = e10.options.getSubRows(r[u], u), (c = d.originalSubRows) != null && c.length && (d.subRows = o(d.originalSubRows, s + 1, d));
        }
      }
      return l;
    };
    return n.rows = o(t), n;
  }, Qe(e10.options, "debugTable", "getRowModel", () => e10._autoResetPageIndex()));
}
function PH() {
  return (e10) => Ke(() => [e10.getState().expanded, e10.getPreExpandedRowModel(), e10.options.paginateExpandedRows], (t, n, o) => !n.rows.length || t !== true && !Object.keys(t ?? {}).length || !o ? n : Ww(n), Qe(e10.options, "debugTable", "getExpandedRowModel"));
}
function Ww(e10) {
  const t = [], n = (o) => {
    var r;
    t.push(o), (r = o.subRows) != null && r.length && o.getIsExpanded() && o.subRows.forEach(n);
  };
  return e10.rows.forEach(n), {
    rows: t,
    flatRows: e10.flatRows,
    rowsById: e10.rowsById
  };
}
function AH() {
  return (e10, t) => Ke(() => {
    var n;
    return [(n = e10.getColumn(t)) == null ? void 0 : n.getFacetedRowModel()];
  }, (n) => {
    if (!n) return;
    const o = n.flatRows.flatMap((a) => {
      var l;
      return (l = a.getUniqueValues(t)) != null ? l : [];
    }).map(Number).filter((a) => !Number.isNaN(a));
    if (!o.length) return;
    let r = o[0], s = o[o.length - 1];
    for (const a of o)
      a < r ? r = a : a > s && (s = a);
    return [r, s];
  }, Qe(e10.options, "debugTable", "getFacetedMinMaxValues"));
}
function Hw(e10, t, n) {
  return n.options.filterFromLeafRows ? jH(e10, t, n) : DH(e10, t, n);
}
function jH(e10, t, n) {
  var o;
  const r = [], s = {}, a = (o = n.options.maxLeafRowFilterDepth) != null ? o : 100, l = function(c, u) {
    u === void 0 && (u = 0);
    const d = [];
    for (let m = 0; m < c.length; m++) {
      var p;
      let g = c[m];
      const b = $l(n, g.id, g.original, g.index, g.depth, void 0, g.parentId);
      if (b.columnFilters = g.columnFilters, (p = g.subRows) != null && p.length && u < a) {
        if (b.subRows = l(g.subRows, u + 1), g = b, t(g) && !b.subRows.length) {
          d.push(g), s[g.id] = g, r.push(g);
          continue;
        }
        if (t(g) || b.subRows.length) {
          d.push(g), s[g.id] = g, r.push(g);
          continue;
        }
      } else
        g = b, t(g) && (d.push(g), s[g.id] = g, r.push(g));
    }
    return d;
  };
  return {
    rows: l(e10),
    flatRows: r,
    rowsById: s
  };
}
function DH(e10, t, n) {
  var o;
  const r = [], s = {}, a = (o = n.options.maxLeafRowFilterDepth) != null ? o : 100, l = function(c, u) {
    u === void 0 && (u = 0);
    const d = [];
    for (let m = 0; m < c.length; m++) {
      let g = c[m];
      if (t(g)) {
        var p;
        if ((p = g.subRows) != null && p.length && u < a) {
          const v = $l(n, g.id, g.original, g.index, g.depth, void 0, g.parentId);
          v.subRows = l(g.subRows, u + 1), g = v;
        }
        d.push(g), r.push(g), s[g.id] = g;
      }
    }
    return d;
  };
  return {
    rows: l(e10),
    flatRows: r,
    rowsById: s
  };
}
function MH() {
  return (e10, t) => Ke(() => [e10.getPreFilteredRowModel(), e10.getState().columnFilters, e10.getState().globalFilter, e10.getFilteredRowModel()], (n, o, r) => {
    if (!n.rows.length || !(o != null && o.length) && !r)
      return n;
    const s = [...o.map((l) => l.id).filter((l) => l !== t), r ? "__global__" : void 0].filter(Boolean), a = (l) => {
      for (let c = 0; c < s.length; c++)
        if (l.columnFilters[s[c]] === false)
          return false;
      return true;
    };
    return Hw(n.rows, a, e10);
  }, Qe(e10.options, "debugTable", "getFacetedRowModel"));
}
function kH() {
  return (e10, t) => Ke(() => {
    var n;
    return [(n = e10.getColumn(t)) == null ? void 0 : n.getFacetedRowModel()];
  }, (n) => {
    if (!n) return /* @__PURE__ */ new Map();
    let o = /* @__PURE__ */ new Map();
    for (let s = 0; s < n.flatRows.length; s++) {
      const a = n.flatRows[s].getUniqueValues(t);
      for (let l = 0; l < a.length; l++) {
        const c = a[l];
        if (o.has(c)) {
          var r;
          o.set(c, ((r = o.get(c)) != null ? r : 0) + 1);
        } else
          o.set(c, 1);
      }
    }
    return o;
  }, Qe(e10.options, "debugTable", `getFacetedUniqueValues_${t}`));
}
function FH() {
  return (e10) => Ke(() => [e10.getPreFilteredRowModel(), e10.getState().columnFilters, e10.getState().globalFilter], (t, n, o) => {
    if (!t.rows.length || !(n != null && n.length) && !o) {
      for (let m = 0; m < t.flatRows.length; m++)
        t.flatRows[m].columnFilters = {}, t.flatRows[m].columnFiltersMeta = {};
      return t;
    }
    const r = [], s = [];
    (n ?? []).forEach((m) => {
      var g;
      const b = e10.getColumn(m.id);
      if (!b)
        return;
      const v = b.getFilterFn();
      if (!v) {
        console.warn(`Could not find a valid 'column.filterFn' for column with the ID: ${b.id}.`);
        return;
      }
      r.push({
        id: m.id,
        filterFn: v,
        resolvedValue: (g = v.resolveFilterValue == null ? void 0 : v.resolveFilterValue(m.value)) != null ? g : m.value
      });
    });
    const a = (n ?? []).map((m) => m.id), l = e10.getGlobalFilterFn(), c = e10.getAllLeafColumns().filter((m) => m.getCanGlobalFilter());
    o && l && c.length && (a.push("__global__"), c.forEach((m) => {
      var g;
      s.push({
        id: m.id,
        filterFn: l,
        resolvedValue: (g = l.resolveFilterValue == null ? void 0 : l.resolveFilterValue(o)) != null ? g : o
      });
    }));
    let u, d;
    for (let m = 0; m < t.flatRows.length; m++) {
      const g = t.flatRows[m];
      if (g.columnFilters = {}, r.length)
        for (let b = 0; b < r.length; b++) {
          u = r[b];
          const v = u.id;
          g.columnFilters[v] = u.filterFn(g, v, u.resolvedValue, (h) => {
            g.columnFiltersMeta[v] = h;
          });
        }
      if (s.length) {
        for (let b = 0; b < s.length; b++) {
          d = s[b];
          const v = d.id;
          if (d.filterFn(g, v, d.resolvedValue, (h) => {
            g.columnFiltersMeta[v] = h;
          })) {
            g.columnFilters.__global__ = true;
            break;
          }
        }
        g.columnFilters.__global__ !== true && (g.columnFilters.__global__ = false);
      }
    }
    const p = (m) => {
      for (let g = 0; g < a.length; g++)
        if (m.columnFilters[a[g]] === false)
          return false;
      return true;
    };
    return Hw(t.rows, p, e10);
  }, Qe(e10.options, "debugTable", "getFilteredRowModel", () => e10._autoResetPageIndex()));
}
function NH() {
  return (e10) => Ke(() => [e10.getState().grouping, e10.getPreGroupedRowModel()], (t, n) => {
    if (!n.rows.length || !t.length)
      return n.rows.forEach((c) => {
        c.depth = 0, c.parentId = void 0;
      }), n;
    const o = t.filter((c) => e10.getColumn(c)), r = [], s = {}, a = function(c, u, d) {
      if (u === void 0 && (u = 0), u >= o.length)
        return c.map((b) => (b.depth = u, r.push(b), s[b.id] = b, b.subRows && (b.subRows = a(b.subRows, u + 1, b.id)), b));
      const p = o[u], m = $H(c, p);
      return Array.from(m.entries()).map((b, v) => {
        let [h, y] = b, C = `${p}:${h}`;
        C = d ? `${d}>${C}` : C;
        const x = a(y, u + 1, C);
        x.forEach((R) => {
          R.parentId = C;
        });
        const T = u ? Mw(y, (R) => R.subRows) : y, w = $l(e10, C, T[0].original, v, u, void 0, d);
        return Object.assign(w, {
          groupingColumnId: p,
          groupingValue: h,
          subRows: x,
          leafRows: T,
          getValue: (R) => {
            if (o.includes(R)) {
              if (w._valuesCache.hasOwnProperty(R))
                return w._valuesCache[R];
              if (y[0]) {
                var E;
                w._valuesCache[R] = (E = y[0].getValue(R)) != null ? E : void 0;
              }
              return w._valuesCache[R];
            }
            if (w._groupingValuesCache.hasOwnProperty(R))
              return w._groupingValuesCache[R];
            const O = e10.getColumn(R), I = O == null ? void 0 : O.getAggregationFn();
            if (I)
              return w._groupingValuesCache[R] = I(R, T, y), w._groupingValuesCache[R];
          }
        }), x.forEach((R) => {
          r.push(R), s[R.id] = R;
        }), w;
      });
    }, l = a(n.rows, 0);
    return l.forEach((c) => {
      r.push(c), s[c.id] = c;
    }), {
      rows: l,
      flatRows: r,
      rowsById: s
    };
  }, Qe(e10.options, "debugTable", "getGroupedRowModel", () => {
    e10._queue(() => {
      e10._autoResetExpanded(), e10._autoResetPageIndex();
    });
  }));
}
function $H(e10, t) {
  const n = /* @__PURE__ */ new Map();
  return e10.reduce((o, r) => {
    const s = `${r.getGroupingValue(t)}`, a = o.get(s);
    return a ? a.push(r) : o.set(s, [r]), o;
  }, n);
}
function VH(e10) {
  return (t) => Ke(() => [t.getState().pagination, t.getPrePaginationRowModel(), t.options.paginateExpandedRows ? void 0 : t.getState().expanded], (n, o) => {
    if (!o.rows.length)
      return o;
    const {
      pageSize: r,
      pageIndex: s
    } = n;
    let {
      rows: a,
      flatRows: l,
      rowsById: c
    } = o;
    const u = r * s, d = u + r;
    a = a.slice(u, d);
    let p;
    t.options.paginateExpandedRows ? p = {
      rows: a,
      flatRows: l,
      rowsById: c
    } : p = Ww({
      rows: a,
      flatRows: l,
      rowsById: c
    }), p.flatRows = [];
    const m = (g) => {
      p.flatRows.push(g), g.subRows.length && g.subRows.forEach(m);
    };
    return p.rows.forEach(m), p;
  }, Qe(t.options, "debugTable", "getPaginationRowModel"));
}
function _H() {
  return (e10) => Ke(() => [e10.getState().sorting, e10.getPreSortedRowModel()], (t, n) => {
    if (!n.rows.length || !(t != null && t.length))
      return n;
    const o = e10.getState().sorting, r = [], s = o.filter((c) => {
      var u;
      return (u = e10.getColumn(c.id)) == null ? void 0 : u.getCanSort();
    }), a = {};
    s.forEach((c) => {
      const u = e10.getColumn(c.id);
      u && (a[c.id] = {
        sortUndefined: u.columnDef.sortUndefined,
        invertSorting: u.columnDef.invertSorting,
        sortingFn: u.getSortingFn()
      });
    });
    const l = (c) => {
      const u = c.map((d) => ({
        ...d
      }));
      return u.sort((d, p) => {
        for (let g = 0; g < s.length; g += 1) {
          var m;
          const b = s[g], v = a[b.id], h = v.sortUndefined, y = (m = b == null ? void 0 : b.desc) != null ? m : false;
          let C = 0;
          if (h) {
            const x = d.getValue(b.id), T = p.getValue(b.id), w = x === void 0, R = T === void 0;
            if (w || R) {
              if (h === "first") return w ? -1 : 1;
              if (h === "last") return w ? 1 : -1;
              C = w && R ? 0 : w ? h : -h;
            }
          }
          if (C === 0 && (C = v.sortingFn(d, p, b.id)), C !== 0)
            return y && (C *= -1), v.invertSorting && (C *= -1), C;
        }
        return d.index - p.index;
      }), u.forEach((d) => {
        var p;
        r.push(d), (p = d.subRows) != null && p.length && (d.subRows = l(d.subRows));
      }), u;
    };
    return {
      rows: l(n.rows),
      flatRows: r,
      rowsById: n.rowsById
    };
  }, Qe(e10.options, "debugTable", "getSortedRowModel", () => e10._autoResetPageIndex()));
}
function LH(e10) {
  const t = {
    state: {},
    // Dummy state
    onStateChange: () => {
    },
    // noop
    renderFallbackValue: null,
    ...e10
  }, [n] = S.useState(() => ({
    current: EH(t)
  })), [o, r] = S.useState(() => n.current.initialState);
  return n.current.setOptions((s) => ({
    ...s,
    ...e10,
    state: {
      ...o,
      ...e10.state
    },
    // Similarly, we'll maintain both our internal state and any user-provided
    // state.
    onStateChange: (a) => {
      r(a), e10.onStateChange == null || e10.onStateChange(a);
    }
  })), n.current;
}
var Gw = {
  À: "A",
  Á: "A",
  Â: "A",
  Ã: "A",
  Ä: "A",
  Å: "A",
  Ấ: "A",
  Ắ: "A",
  Ẳ: "A",
  Ẵ: "A",
  Ặ: "A",
  Æ: "AE",
  Ầ: "A",
  Ằ: "A",
  Ȃ: "A",
  Ç: "C",
  Ḉ: "C",
  È: "E",
  É: "E",
  Ê: "E",
  Ë: "E",
  Ế: "E",
  Ḗ: "E",
  Ề: "E",
  Ḕ: "E",
  Ḝ: "E",
  Ȇ: "E",
  Ì: "I",
  Í: "I",
  Î: "I",
  Ï: "I",
  Ḯ: "I",
  Ȋ: "I",
  Ð: "D",
  Ñ: "N",
  Ò: "O",
  Ó: "O",
  Ô: "O",
  Õ: "O",
  Ö: "O",
  Ø: "O",
  Ố: "O",
  Ṍ: "O",
  Ṓ: "O",
  Ȏ: "O",
  Ù: "U",
  Ú: "U",
  Û: "U",
  Ü: "U",
  Ý: "Y",
  à: "a",
  á: "a",
  â: "a",
  ã: "a",
  ä: "a",
  å: "a",
  ấ: "a",
  ắ: "a",
  ẳ: "a",
  ẵ: "a",
  ặ: "a",
  æ: "ae",
  ầ: "a",
  ằ: "a",
  ȃ: "a",
  ç: "c",
  ḉ: "c",
  è: "e",
  é: "e",
  ê: "e",
  ë: "e",
  ế: "e",
  ḗ: "e",
  ề: "e",
  ḕ: "e",
  ḝ: "e",
  ȇ: "e",
  ì: "i",
  í: "i",
  î: "i",
  ï: "i",
  ḯ: "i",
  ȋ: "i",
  ð: "d",
  ñ: "n",
  ò: "o",
  ó: "o",
  ô: "o",
  õ: "o",
  ö: "o",
  ø: "o",
  ố: "o",
  ṍ: "o",
  ṓ: "o",
  ȏ: "o",
  ù: "u",
  ú: "u",
  û: "u",
  ü: "u",
  ý: "y",
  ÿ: "y",
  Ā: "A",
  ā: "a",
  Ă: "A",
  ă: "a",
  Ą: "A",
  ą: "a",
  Ć: "C",
  ć: "c",
  Ĉ: "C",
  ĉ: "c",
  Ċ: "C",
  ċ: "c",
  Č: "C",
  č: "c",
  C̆: "C",
  c̆: "c",
  Ď: "D",
  ď: "d",
  Đ: "D",
  đ: "d",
  Ē: "E",
  ē: "e",
  Ĕ: "E",
  ĕ: "e",
  Ė: "E",
  ė: "e",
  Ę: "E",
  ę: "e",
  Ě: "E",
  ě: "e",
  Ĝ: "G",
  Ǵ: "G",
  ĝ: "g",
  ǵ: "g",
  Ğ: "G",
  ğ: "g",
  Ġ: "G",
  ġ: "g",
  Ģ: "G",
  ģ: "g",
  Ĥ: "H",
  ĥ: "h",
  Ħ: "H",
  ħ: "h",
  Ḫ: "H",
  ḫ: "h",
  Ĩ: "I",
  ĩ: "i",
  Ī: "I",
  ī: "i",
  Ĭ: "I",
  ĭ: "i",
  Į: "I",
  į: "i",
  İ: "I",
  ı: "i",
  Ĳ: "IJ",
  ĳ: "ij",
  Ĵ: "J",
  ĵ: "j",
  Ķ: "K",
  ķ: "k",
  Ḱ: "K",
  ḱ: "k",
  K̆: "K",
  k̆: "k",
  Ĺ: "L",
  ĺ: "l",
  Ļ: "L",
  ļ: "l",
  Ľ: "L",
  ľ: "l",
  Ŀ: "L",
  ŀ: "l",
  Ł: "l",
  ł: "l",
  Ḿ: "M",
  ḿ: "m",
  M̆: "M",
  m̆: "m",
  Ń: "N",
  ń: "n",
  Ņ: "N",
  ņ: "n",
  Ň: "N",
  ň: "n",
  ŉ: "n",
  N̆: "N",
  n̆: "n",
  Ō: "O",
  ō: "o",
  Ŏ: "O",
  ŏ: "o",
  Ő: "O",
  ő: "o",
  Œ: "OE",
  œ: "oe",
  P̆: "P",
  p̆: "p",
  Ŕ: "R",
  ŕ: "r",
  Ŗ: "R",
  ŗ: "r",
  Ř: "R",
  ř: "r",
  R̆: "R",
  r̆: "r",
  Ȓ: "R",
  ȓ: "r",
  Ś: "S",
  ś: "s",
  Ŝ: "S",
  ŝ: "s",
  Ş: "S",
  Ș: "S",
  ș: "s",
  ş: "s",
  Š: "S",
  š: "s",
  Ţ: "T",
  ţ: "t",
  ț: "t",
  Ț: "T",
  Ť: "T",
  ť: "t",
  Ŧ: "T",
  ŧ: "t",
  T̆: "T",
  t̆: "t",
  Ũ: "U",
  ũ: "u",
  Ū: "U",
  ū: "u",
  Ŭ: "U",
  ŭ: "u",
  Ů: "U",
  ů: "u",
  Ű: "U",
  ű: "u",
  Ų: "U",
  ų: "u",
  Ȗ: "U",
  ȗ: "u",
  V̆: "V",
  v̆: "v",
  Ŵ: "W",
  ŵ: "w",
  Ẃ: "W",
  ẃ: "w",
  X̆: "X",
  x̆: "x",
  Ŷ: "Y",
  ŷ: "y",
  Ÿ: "Y",
  Y̆: "Y",
  y̆: "y",
  Ź: "Z",
  ź: "z",
  Ż: "Z",
  ż: "z",
  Ž: "Z",
  ž: "z",
  ſ: "s",
  ƒ: "f",
  Ơ: "O",
  ơ: "o",
  Ư: "U",
  ư: "u",
  Ǎ: "A",
  ǎ: "a",
  Ǐ: "I",
  ǐ: "i",
  Ǒ: "O",
  ǒ: "o",
  Ǔ: "U",
  ǔ: "u",
  Ǖ: "U",
  ǖ: "u",
  Ǘ: "U",
  ǘ: "u",
  Ǚ: "U",
  ǚ: "u",
  Ǜ: "U",
  ǜ: "u",
  Ứ: "U",
  ứ: "u",
  Ṹ: "U",
  ṹ: "u",
  Ǻ: "A",
  ǻ: "a",
  Ǽ: "AE",
  ǽ: "ae",
  Ǿ: "O",
  ǿ: "o",
  Þ: "TH",
  þ: "th",
  Ṕ: "P",
  ṕ: "p",
  Ṥ: "S",
  ṥ: "s",
  X́: "X",
  x́: "x",
  Ѓ: "Г",
  ѓ: "г",
  Ќ: "К",
  ќ: "к",
  A̋: "A",
  a̋: "a",
  E̋: "E",
  e̋: "e",
  I̋: "I",
  i̋: "i",
  Ǹ: "N",
  ǹ: "n",
  Ồ: "O",
  ồ: "o",
  Ṑ: "O",
  ṑ: "o",
  Ừ: "U",
  ừ: "u",
  Ẁ: "W",
  ẁ: "w",
  Ỳ: "Y",
  ỳ: "y",
  Ȁ: "A",
  ȁ: "a",
  Ȅ: "E",
  ȅ: "e",
  Ȉ: "I",
  ȉ: "i",
  Ȍ: "O",
  ȍ: "o",
  Ȑ: "R",
  ȑ: "r",
  Ȕ: "U",
  ȕ: "u",
  B̌: "B",
  b̌: "b",
  Č̣: "C",
  č̣: "c",
  Ê̌: "E",
  ê̌: "e",
  F̌: "F",
  f̌: "f",
  Ǧ: "G",
  ǧ: "g",
  Ȟ: "H",
  ȟ: "h",
  J̌: "J",
  ǰ: "j",
  Ǩ: "K",
  ǩ: "k",
  M̌: "M",
  m̌: "m",
  P̌: "P",
  p̌: "p",
  Q̌: "Q",
  q̌: "q",
  Ř̩: "R",
  ř̩: "r",
  Ṧ: "S",
  ṧ: "s",
  V̌: "V",
  v̌: "v",
  W̌: "W",
  w̌: "w",
  X̌: "X",
  x̌: "x",
  Y̌: "Y",
  y̌: "y",
  A̧: "A",
  a̧: "a",
  B̧: "B",
  b̧: "b",
  Ḑ: "D",
  ḑ: "d",
  Ȩ: "E",
  ȩ: "e",
  Ɛ̧: "E",
  ɛ̧: "e",
  Ḩ: "H",
  ḩ: "h",
  I̧: "I",
  i̧: "i",
  Ɨ̧: "I",
  ɨ̧: "i",
  M̧: "M",
  m̧: "m",
  O̧: "O",
  o̧: "o",
  Q̧: "Q",
  q̧: "q",
  U̧: "U",
  u̧: "u",
  X̧: "X",
  x̧: "x",
  Z̧: "Z",
  z̧: "z"
};
var BH = Object.keys(Gw).join("|");
var zH = new RegExp(BH, "g");
function WH(e10) {
  return e10.replace(zH, (t) => Gw[t]);
}
var Vn = {
  CASE_SENSITIVE_EQUAL: 7,
  EQUAL: 6,
  STARTS_WITH: 5,
  WORD_STARTS_WITH: 4,
  CONTAINS: 3,
  ACRONYM: 2,
  MATCHES: 1,
  NO_MATCH: 0
};
function HH(e10, t, n) {
  var o;
  if (n = n || {}, n.threshold = (o = n.threshold) != null ? o : Vn.MATCHES, !n.accessors) {
    const a = Yy(e10, t, n);
    return {
      // ends up being duplicate of 'item' in matches but consistent
      rankedValue: e10,
      rank: a,
      accessorIndex: -1,
      accessorThreshold: n.threshold,
      passed: a >= n.threshold
    };
  }
  const r = ZH(e10, n.accessors), s = {
    rankedValue: e10,
    rank: Vn.NO_MATCH,
    accessorIndex: -1,
    accessorThreshold: n.threshold,
    passed: false
  };
  for (let a = 0; a < r.length; a++) {
    const l = r[a];
    let c = Yy(l.itemValue, t, n);
    const {
      minRanking: u,
      maxRanking: d,
      threshold: p = n.threshold
    } = l.attributes;
    c < u && c >= Vn.MATCHES ? c = u : c > d && (c = d), c = Math.min(c, d), c >= p && c > s.rank && (s.rank = c, s.passed = true, s.accessorIndex = a, s.accessorThreshold = p, s.rankedValue = l.itemValue);
  }
  return s;
}
function Yy(e10, t, n) {
  return e10 = Zy(e10, n), t = Zy(t, n), t.length > e10.length ? Vn.NO_MATCH : e10 === t ? Vn.CASE_SENSITIVE_EQUAL : (e10 = e10.toLowerCase(), t = t.toLowerCase(), e10 === t ? Vn.EQUAL : e10.startsWith(t) ? Vn.STARTS_WITH : e10.includes(` ${t}`) ? Vn.WORD_STARTS_WITH : e10.includes(t) ? Vn.CONTAINS : t.length === 1 ? Vn.NO_MATCH : GH(e10).includes(t) ? Vn.ACRONYM : UH(e10, t));
}
function GH(e10) {
  let t = "";
  return e10.split(" ").forEach((o) => {
    o.split("-").forEach((s) => {
      t += s.substr(0, 1);
    });
  }), t;
}
function UH(e10, t) {
  let n = 0, o = 0;
  function r(c, u, d) {
    for (let p = d, m = u.length; p < m; p++)
      if (u[p] === c)
        return n += 1, p + 1;
    return -1;
  }
  function s(c) {
    const u = 1 / c, d = n / t.length;
    return Vn.MATCHES + d * u;
  }
  const a = r(t[0], e10, 0);
  if (a < 0)
    return Vn.NO_MATCH;
  o = a;
  for (let c = 1, u = t.length; c < u; c++) {
    const d = t[c];
    if (o = r(d, e10, o), !(o > -1))
      return Vn.NO_MATCH;
  }
  const l = o - a;
  return s(l);
}
function XH(e10, t) {
  return e10.rank === t.rank ? 0 : e10.rank > t.rank ? -1 : 1;
}
function Zy(e10, t) {
  let {
    keepDiacritics: n
  } = t;
  return e10 = `${e10}`, n || (e10 = WH(e10)), e10;
}
function YH(e10, t) {
  let n = t;
  typeof t == "object" && (n = t.accessor);
  const o = n(e10);
  return o == null ? [] : Array.isArray(o) ? o : [String(o)];
}
function ZH(e10, t) {
  const n = [];
  for (let o = 0, r = t.length; o < r; o++) {
    const s = t[o], a = qH(s), l = YH(e10, s);
    for (let c = 0, u = l.length; c < u; c++)
      n.push({
        itemValue: l[c],
        attributes: a
      });
  }
  return n;
}
var qy = {
  maxRanking: 1 / 0,
  minRanking: -1 / 0
};
function qH(e10) {
  return typeof e10 == "function" ? qy : {
    ...qy,
    ...e10
  };
}
function is(e10, t, n) {
  let o = n.initialDeps ?? [], r;
  return () => {
    var s, a, l, c;
    let u;
    n.key && ((s = n.debug) != null && s.call(n)) && (u = Date.now());
    const d = e10();
    if (!(d.length !== o.length || d.some((g, b) => o[b] !== g)))
      return r;
    o = d;
    let m;
    if (n.key && ((a = n.debug) != null && a.call(n)) && (m = Date.now()), r = t(...d), n.key && ((l = n.debug) != null && l.call(n))) {
      const g = Math.round((Date.now() - u) * 100) / 100, b = Math.round((Date.now() - m) * 100) / 100, v = b / 16, h = (y, C) => {
        for (y = String(y); y.length < C; )
          y = " " + y;
        return y;
      };
      console.info(
        `%c⏱ ${h(b, 5)} /${h(g, 5)} ms`,
        `
            font-size: .6rem;
            font-weight: bold;
            color: hsl(${Math.max(
          0,
          Math.min(120 - 120 * v, 120)
        )}deg 100% 31%);`,
        n == null ? void 0 : n.key
      );
    }
    return (c = n == null ? void 0 : n.onChange) == null || c.call(n, r), r;
  };
}
function Lp(e10, t) {
  if (e10 === void 0)
    throw new Error("Unexpected undefined");
  return e10;
}
var JH = (e10, t) => Math.abs(e10 - t) < 1;
var KH = (e10, t, n) => {
  let o;
  return function(...r) {
    e10.clearTimeout(o), o = e10.setTimeout(() => t.apply(this, r), n);
  };
};
var QH = (e10) => e10;
var Uw = (e10) => {
  const t = Math.max(e10.startIndex - e10.overscan, 0), n = Math.min(e10.endIndex + e10.overscan, e10.count - 1), o = [];
  for (let r = t; r <= n; r++)
    o.push(r);
  return o;
};
var e3 = (e10, t) => {
  const n = e10.scrollElement;
  if (!n)
    return;
  const o = e10.targetWindow;
  if (!o)
    return;
  const r = (a) => {
    const { width: l, height: c } = a;
    t({ width: Math.round(l), height: Math.round(c) });
  };
  if (r(n.getBoundingClientRect()), !o.ResizeObserver)
    return () => {
    };
  const s = new o.ResizeObserver((a) => {
    const l = a[0];
    if (l != null && l.borderBoxSize) {
      const c = l.borderBoxSize[0];
      if (c) {
        r({ width: c.inlineSize, height: c.blockSize });
        return;
      }
    }
    r(n.getBoundingClientRect());
  });
  return s.observe(n, { box: "border-box" }), () => {
    s.unobserve(n);
  };
};
var Jy = {
  passive: true
};
var t3 = typeof window > "u" ? true : "onscrollend" in window;
var n3 = (e10, t) => {
  const n = e10.scrollElement;
  if (!n)
    return;
  const o = e10.targetWindow;
  if (!o)
    return;
  let r = 0;
  const s = t3 ? () => {
  } : KH(
    o,
    () => {
      t(r, false);
    },
    e10.options.isScrollingResetDelay
  ), a = (u) => () => {
    const { horizontal: d, isRtl: p } = e10.options;
    r = d ? n.scrollLeft * (p && -1 || 1) : n.scrollTop, s(), t(r, u);
  }, l = a(true), c = a(false);
  return c(), n.addEventListener("scroll", l, Jy), n.addEventListener("scrollend", c, Jy), () => {
    n.removeEventListener("scroll", l), n.removeEventListener("scrollend", c);
  };
};
var o3 = (e10, t, n) => {
  if (t != null && t.borderBoxSize) {
    const o = t.borderBoxSize[0];
    if (o)
      return Math.round(
        o[n.options.horizontal ? "inlineSize" : "blockSize"]
      );
  }
  return Math.round(
    e10.getBoundingClientRect()[n.options.horizontal ? "width" : "height"]
  );
};
var r3 = (e10, {
  adjustments: t = 0,
  behavior: n
}, o) => {
  var r, s;
  const a = e10 + t;
  (s = (r = o.scrollElement) == null ? void 0 : r.scrollTo) == null || s.call(r, {
    [o.options.horizontal ? "left" : "top"]: a,
    behavior: n
  });
};
var i3 = class {
  constructor(t) {
    this.unsubs = [], this.scrollElement = null, this.targetWindow = null, this.isScrolling = false, this.scrollToIndexTimeoutId = null, this.measurementsCache = [], this.itemSizeCache = /* @__PURE__ */ new Map(), this.pendingMeasuredCacheIndexes = [], this.scrollRect = null, this.scrollOffset = null, this.scrollDirection = null, this.scrollAdjustments = 0, this.elementsCache = /* @__PURE__ */ new Map(), this.observer = /* @__PURE__ */ (() => {
      let n = null;
      const o = () => n || (!this.targetWindow || !this.targetWindow.ResizeObserver ? null : n = new this.targetWindow.ResizeObserver((r) => {
        r.forEach((s) => {
          this._measureElement(s.target, s);
        });
      }));
      return {
        disconnect: () => {
          var r;
          return (r = o()) == null ? void 0 : r.disconnect();
        },
        observe: (r) => {
          var s;
          return (s = o()) == null ? void 0 : s.observe(r, { box: "border-box" });
        },
        unobserve: (r) => {
          var s;
          return (s = o()) == null ? void 0 : s.unobserve(r);
        }
      };
    })(), this.range = null, this.setOptions = (n) => {
      Object.entries(n).forEach(([o, r]) => {
        typeof r > "u" && delete n[o];
      }), this.options = {
        debug: false,
        initialOffset: 0,
        overscan: 1,
        paddingStart: 0,
        paddingEnd: 0,
        scrollPaddingStart: 0,
        scrollPaddingEnd: 0,
        horizontal: false,
        getItemKey: QH,
        rangeExtractor: Uw,
        onChange: () => {
        },
        measureElement: o3,
        initialRect: { width: 0, height: 0 },
        scrollMargin: 0,
        gap: 0,
        indexAttribute: "data-index",
        initialMeasurementsCache: [],
        lanes: 1,
        isScrollingResetDelay: 150,
        enabled: true,
        isRtl: false,
        ...n
      };
    }, this.notify = (n) => {
      var o, r;
      (r = (o = this.options).onChange) == null || r.call(o, this, n);
    }, this.maybeNotify = is(
      () => (this.calculateRange(), [
        this.isScrolling,
        this.range ? this.range.startIndex : null,
        this.range ? this.range.endIndex : null
      ]),
      (n) => {
        this.notify(n);
      },
      {
        key: "maybeNotify",
        debug: () => this.options.debug,
        initialDeps: [
          this.isScrolling,
          this.range ? this.range.startIndex : null,
          this.range ? this.range.endIndex : null
        ]
      }
    ), this.cleanup = () => {
      this.unsubs.filter(Boolean).forEach((n) => n()), this.unsubs = [], this.scrollElement = null, this.targetWindow = null, this.observer.disconnect(), this.elementsCache.clear();
    }, this._didMount = () => () => {
      this.cleanup();
    }, this._willUpdate = () => {
      var n;
      const o = this.options.enabled ? this.options.getScrollElement() : null;
      if (this.scrollElement !== o) {
        if (this.cleanup(), !o) {
          this.maybeNotify();
          return;
        }
        this.scrollElement = o, this.scrollElement && "ownerDocument" in this.scrollElement ? this.targetWindow = this.scrollElement.ownerDocument.defaultView : this.targetWindow = ((n = this.scrollElement) == null ? void 0 : n.window) ?? null, this._scrollToOffset(this.getScrollOffset(), {
          adjustments: void 0,
          behavior: void 0
        }), this.unsubs.push(
          this.options.observeElementRect(this, (r) => {
            this.scrollRect = r, this.maybeNotify();
          })
        ), this.unsubs.push(
          this.options.observeElementOffset(this, (r, s) => {
            this.scrollAdjustments = 0, this.scrollDirection = s ? this.getScrollOffset() < r ? "forward" : "backward" : null, this.scrollOffset = r, this.isScrolling = s, this.maybeNotify();
          })
        );
      }
    }, this.getSize = () => this.options.enabled ? (this.scrollRect = this.scrollRect ?? this.options.initialRect, this.scrollRect[this.options.horizontal ? "width" : "height"]) : (this.scrollRect = null, 0), this.getScrollOffset = () => this.options.enabled ? (this.scrollOffset = this.scrollOffset ?? (typeof this.options.initialOffset == "function" ? this.options.initialOffset() : this.options.initialOffset), this.scrollOffset) : (this.scrollOffset = null, 0), this.getFurthestMeasurement = (n, o) => {
      const r = /* @__PURE__ */ new Map(), s = /* @__PURE__ */ new Map();
      for (let a = o - 1; a >= 0; a--) {
        const l = n[a];
        if (r.has(l.lane))
          continue;
        const c = s.get(
          l.lane
        );
        if (c == null || l.end > c.end ? s.set(l.lane, l) : l.end < c.end && r.set(l.lane, true), r.size === this.options.lanes)
          break;
      }
      return s.size === this.options.lanes ? Array.from(s.values()).sort((a, l) => a.end === l.end ? a.index - l.index : a.end - l.end)[0] : void 0;
    }, this.getMeasurementOptions = is(
      () => [
        this.options.count,
        this.options.paddingStart,
        this.options.scrollMargin,
        this.options.getItemKey,
        this.options.enabled
      ],
      (n, o, r, s, a) => (this.pendingMeasuredCacheIndexes = [], {
        count: n,
        paddingStart: o,
        scrollMargin: r,
        getItemKey: s,
        enabled: a
      }),
      {
        key: false
      }
    ), this.getMeasurements = is(
      () => [this.getMeasurementOptions(), this.itemSizeCache],
      ({ count: n, paddingStart: o, scrollMargin: r, getItemKey: s, enabled: a }, l) => {
        if (!a)
          return this.measurementsCache = [], this.itemSizeCache.clear(), [];
        this.measurementsCache.length === 0 && (this.measurementsCache = this.options.initialMeasurementsCache, this.measurementsCache.forEach((d) => {
          this.itemSizeCache.set(d.key, d.size);
        }));
        const c = this.pendingMeasuredCacheIndexes.length > 0 ? Math.min(...this.pendingMeasuredCacheIndexes) : 0;
        this.pendingMeasuredCacheIndexes = [];
        const u = this.measurementsCache.slice(0, c);
        for (let d = c; d < n; d++) {
          const p = s(d), m = this.options.lanes === 1 ? u[d - 1] : this.getFurthestMeasurement(u, d), g = m ? m.end + this.options.gap : o + r, b = l.get(p), v = typeof b == "number" ? b : this.options.estimateSize(d), h = g + v, y = m ? m.lane : d % this.options.lanes;
          u[d] = {
            index: d,
            start: g,
            size: v,
            end: h,
            key: p,
            lane: y
          };
        }
        return this.measurementsCache = u, u;
      },
      {
        key: "getMeasurements",
        debug: () => this.options.debug
      }
    ), this.calculateRange = is(
      () => [this.getMeasurements(), this.getSize(), this.getScrollOffset()],
      (n, o, r) => this.range = n.length > 0 && o > 0 ? s3({
        measurements: n,
        outerSize: o,
        scrollOffset: r
      }) : null,
      {
        key: "calculateRange",
        debug: () => this.options.debug
      }
    ), this.getIndexes = is(
      () => [
        this.options.rangeExtractor,
        this.calculateRange(),
        this.options.overscan,
        this.options.count
      ],
      (n, o, r, s) => o === null ? [] : n({
        startIndex: o.startIndex,
        endIndex: o.endIndex,
        overscan: r,
        count: s
      }),
      {
        key: "getIndexes",
        debug: () => this.options.debug
      }
    ), this.indexFromElement = (n) => {
      const o = this.options.indexAttribute, r = n.getAttribute(o);
      return r ? parseInt(r, 10) : (console.warn(
        `Missing attribute name '${o}={index}' on measured element.`
      ), -1);
    }, this._measureElement = (n, o) => {
      const r = this.indexFromElement(n), s = this.measurementsCache[r];
      if (!s)
        return;
      const a = s.key, l = this.elementsCache.get(a);
      l !== n && (l && this.observer.unobserve(l), this.observer.observe(n), this.elementsCache.set(a, n)), n.isConnected && this.resizeItem(r, this.options.measureElement(n, o, this));
    }, this.resizeItem = (n, o) => {
      const r = this.measurementsCache[n];
      if (!r)
        return;
      const s = this.itemSizeCache.get(r.key) ?? r.size, a = o - s;
      a !== 0 && ((this.shouldAdjustScrollPositionOnItemSizeChange !== void 0 ? this.shouldAdjustScrollPositionOnItemSizeChange(r, a, this) : r.start < this.getScrollOffset() + this.scrollAdjustments) && (this.options.debug && console.info("correction", a), this._scrollToOffset(this.getScrollOffset(), {
        adjustments: this.scrollAdjustments += a,
        behavior: void 0
      })), this.pendingMeasuredCacheIndexes.push(r.index), this.itemSizeCache = new Map(this.itemSizeCache.set(r.key, o)), this.notify(false));
    }, this.measureElement = (n) => {
      if (!n) {
        this.elementsCache.forEach((o, r) => {
          o.isConnected || (this.observer.unobserve(o), this.elementsCache.delete(r));
        });
        return;
      }
      this._measureElement(n, void 0);
    }, this.getVirtualItems = is(
      () => [this.getIndexes(), this.getMeasurements()],
      (n, o) => {
        const r = [];
        for (let s = 0, a = n.length; s < a; s++) {
          const l = n[s], c = o[l];
          r.push(c);
        }
        return r;
      },
      {
        key: "getVirtualItems",
        debug: () => this.options.debug
      }
    ), this.getVirtualItemForOffset = (n) => {
      const o = this.getMeasurements();
      if (o.length !== 0)
        return Lp(
          o[Xw(
            0,
            o.length - 1,
            (r) => Lp(o[r]).start,
            n
          )]
        );
    }, this.getOffsetForAlignment = (n, o) => {
      const r = this.getSize(), s = this.getScrollOffset();
      o === "auto" && (n <= s ? o = "start" : n >= s + r ? o = "end" : o = "start"), o === "start" ? n = n : o === "end" ? n = n - r : o === "center" && (n = n - r / 2);
      const a = this.options.horizontal ? "scrollWidth" : "scrollHeight", c = (this.scrollElement ? "document" in this.scrollElement ? this.scrollElement.document.documentElement[a] : this.scrollElement[a] : 0) - r;
      return Math.max(Math.min(c, n), 0);
    }, this.getOffsetForIndex = (n, o = "auto") => {
      n = Math.max(0, Math.min(n, this.options.count - 1));
      const r = this.measurementsCache[n];
      if (!r)
        return;
      const s = this.getSize(), a = this.getScrollOffset();
      if (o === "auto")
        if (r.end >= a + s - this.options.scrollPaddingEnd)
          o = "end";
        else if (r.start <= a + this.options.scrollPaddingStart)
          o = "start";
        else
          return [a, o];
      const l = o === "end" ? r.end + this.options.scrollPaddingEnd : r.start - this.options.scrollPaddingStart;
      return [this.getOffsetForAlignment(l, o), o];
    }, this.isDynamicMode = () => this.elementsCache.size > 0, this.cancelScrollToIndex = () => {
      this.scrollToIndexTimeoutId !== null && this.targetWindow && (this.targetWindow.clearTimeout(this.scrollToIndexTimeoutId), this.scrollToIndexTimeoutId = null);
    }, this.scrollToOffset = (n, { align: o = "start", behavior: r } = {}) => {
      this.cancelScrollToIndex(), r === "smooth" && this.isDynamicMode() && console.warn(
        "The `smooth` scroll behavior is not fully supported with dynamic size."
      ), this._scrollToOffset(this.getOffsetForAlignment(n, o), {
        adjustments: void 0,
        behavior: r
      });
    }, this.scrollToIndex = (n, { align: o = "auto", behavior: r } = {}) => {
      n = Math.max(0, Math.min(n, this.options.count - 1)), this.cancelScrollToIndex(), r === "smooth" && this.isDynamicMode() && console.warn(
        "The `smooth` scroll behavior is not fully supported with dynamic size."
      );
      const s = this.getOffsetForIndex(n, o);
      if (!s) return;
      const [a, l] = s;
      this._scrollToOffset(a, { adjustments: void 0, behavior: r }), r !== "smooth" && this.isDynamicMode() && this.targetWindow && (this.scrollToIndexTimeoutId = this.targetWindow.setTimeout(() => {
        if (this.scrollToIndexTimeoutId = null, this.elementsCache.has(
          this.options.getItemKey(n)
        )) {
          const [u] = Lp(
            this.getOffsetForIndex(n, l)
          );
          JH(u, this.getScrollOffset()) || this.scrollToIndex(n, { align: l, behavior: r });
        } else
          this.scrollToIndex(n, { align: l, behavior: r });
      }));
    }, this.scrollBy = (n, { behavior: o } = {}) => {
      this.cancelScrollToIndex(), o === "smooth" && this.isDynamicMode() && console.warn(
        "The `smooth` scroll behavior is not fully supported with dynamic size."
      ), this._scrollToOffset(this.getScrollOffset() + n, {
        adjustments: void 0,
        behavior: o
      });
    }, this.getTotalSize = () => {
      var n;
      const o = this.getMeasurements();
      let r;
      return o.length === 0 ? r = this.options.paddingStart : r = this.options.lanes === 1 ? ((n = o[o.length - 1]) == null ? void 0 : n.end) ?? 0 : Math.max(
        ...o.slice(-this.options.lanes).map((s) => s.end)
      ), r - this.options.scrollMargin + this.options.paddingEnd;
    }, this._scrollToOffset = (n, {
      adjustments: o,
      behavior: r
    }) => {
      this.options.scrollToFn(n, { behavior: r, adjustments: o }, this);
    }, this.measure = () => {
      this.itemSizeCache = /* @__PURE__ */ new Map(), this.notify(false);
    }, this.setOptions(t);
  }
};
var Xw = (e10, t, n, o) => {
  for (; e10 <= t; ) {
    const r = (e10 + t) / 2 | 0, s = n(r);
    if (s < o)
      e10 = r + 1;
    else if (s > o)
      t = r - 1;
    else
      return r;
  }
  return e10 > 0 ? e10 - 1 : 0;
};
function s3({
  measurements: e10,
  outerSize: t,
  scrollOffset: n
}) {
  const o = e10.length - 1, s = Xw(0, o, (l) => e10[l].start, n);
  let a = s;
  for (; a < o && e10[a].end < n + t; )
    a++;
  return { startIndex: s, endIndex: a };
}
var a3 = typeof document < "u" ? S.useLayoutEffect : S.useEffect;
function l3(e10) {
  const t = S.useReducer(() => ({}), {})[1], n = {
    ...e10,
    onChange: (r, s) => {
      var a;
      s ? (0, import_react_dom.flushSync)(t) : t(), (a = e10.onChange) == null || a.call(e10, r, s);
    }
  }, [o] = S.useState(
    () => new i3(n)
  );
  return o.setOptions(n), S.useEffect(() => o._didMount(), []), a3(() => o._willUpdate()), o;
}
function Yw(e10) {
  return l3({
    observeElementRect: e3,
    observeElementOffset: n3,
    scrollToFn: r3,
    ...e10
  });
}
var Ky = 36;
var Zw = "";
for (; Ky--; )
  Zw += Ky.toString(36);
function Qy(e10 = 11) {
  let t = "", n = e10;
  for (; n--; )
    t += Zw[Math.random() * 36 | 0];
  return t;
}
var c3 = (e10) => e10.replace(/[|\\{}()[\]^$+*?.-]/g, (t) => `\\${t}`);
var u3 = (e10) => e10.replace(/\s{2,}/g, " ").split(" ").join("|");
var d3 = ({
  terms: e10,
  matchExactly: t = false
}) => {
  if (typeof e10 != "string")
    throw new TypeError("Expected a string");
  const n = c3(e10.trim());
  return `(${t ? n : u3(n)})`;
};
var p3 = ({
  terms: e10,
  matchExactly: t = false
}) => {
  try {
    const n = /^([/~@;%#'])(.*?)\1([gimsuy]*)$/.exec(e10);
    return n ? new RegExp(n[2], n[3]) : new RegExp(d3({ terms: e10, matchExactly: t }), "ig");
  } catch {
    throw new TypeError("Expected terms to be either a string or a RegExp!");
  }
};
var f3 = (e10) => (t) => t !== null && typeof t == "object" && e10 in t;
var fc = f3("match");
var mc = (e10) => typeof e10 < "u";
function m3({
  curr: e10,
  next: t,
  prev: n,
  clipBy: o = 3
}) {
  const r = e10.text.split(" "), s = r.length;
  if (e10.match || o >= s)
    return e10.text;
  const a = "...";
  return mc(t) && mc(n) && fc(n) && fc(t) ? s > o * 2 ? [
    ...r.slice(0, o),
    a,
    ...r.slice(-o)
  ].join(" ") : e10.text : mc(t) && fc(t) ? [a, ...r.slice(-o)].join(" ") : mc(n) && fc(n) ? [...r.slice(0, o), a].join(" ") : e10.text;
}
var g3 = Object.defineProperty;
var h3 = Object.defineProperties;
var b3 = Object.getOwnPropertyDescriptors;
var e0 = Object.getOwnPropertySymbols;
var v3 = Object.prototype.hasOwnProperty;
var y3 = Object.prototype.propertyIsEnumerable;
var t0 = (e10, t, n) => t in e10 ? g3(e10, t, { enumerable: true, configurable: true, writable: true, value: n }) : e10[t] = n;
var gc = (e10, t) => {
  for (var n in t || (t = {}))
    v3.call(t, n) && t0(e10, n, t[n]);
  if (e0)
    for (var n of e0(t))
      y3.call(t, n) && t0(e10, n, t[n]);
  return e10;
};
var x3 = (e10, t) => h3(e10, b3(t));
var C3 = (e10) => e10.length > 0;
var Bp = ({
  text: e10,
  query: t,
  clipBy: n,
  matchExactly: o = false
}) => {
  const r = typeof t == "string" ? t.trim() : t;
  if (r === "")
    return [
      {
        key: Qy(),
        text: e10,
        match: false
      }
    ];
  const s = p3({ terms: t, matchExactly: o });
  return e10.split(s).filter(C3).map((a) => ({
    // Compose the object for a match
    key: Qy(),
    text: a,
    match: o ? a.toLowerCase() === r.toLowerCase() : s.test(a)
  })).map((a, l, c) => gc(gc({}, a), typeof n == "number" && {
    // We only overwrite the text if there is a clip
    text: m3(x3(gc(gc({
      curr: a
    }, l < c.length - 1 && { next: c[l + 1] }), l > 0 && { prev: c[l - 1] }), {
      // If this wasn't the first chunk, set the previous chunk
      clipBy: n
    }))
  }));
};
var Pn = i.oneOfType([i.func, i.object]);
function w3(e10) {
  if (typeof e10 != "string")
    throw new Error(true ? "MUI: `capitalize(string)` expects a string argument." : S3(7));
  return e10.charAt(0).toUpperCase() + e10.slice(1);
}
function zp(e10) {
  return e10 && e10.ownerDocument || document;
}
function T3(e10, t) {
  typeof e10 == "function" ? e10(t) : e10 && (e10.current = t);
}
var sr = typeof window < "u" ? S.useLayoutEffect : S.useEffect;
var n0 = 0;
function I3(e10) {
  const [t, n] = S.useState(e10), o = e10 || t;
  return S.useEffect(() => {
    t == null && (n0 += 1, n(`mui-${n0}`));
  }, [t]), o;
}
var o0 = S.useId;
function qs(e10) {
  if (o0 !== void 0) {
    const t = o0();
    return e10 ?? t;
  }
  return I3(e10);
}
function Mi({
  controlled: e10,
  default: t,
  name: n,
  state: o = "value"
}) {
  const {
    current: r
  } = S.useRef(e10 !== void 0), [s, a] = S.useState(t), l = r ? e10 : s;
  if (true) {
    S.useEffect(() => {
      r !== (e10 !== void 0) && console.error([`MUI: A component is changing the ${r ? "" : "un"}controlled ${o} state of ${n} to be ${r ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", `Decide between using a controlled or uncontrolled ${n} element for the lifetime of the component.`, "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join(`
`));
    }, [o, n, e10]);
    const {
      current: u
    } = S.useRef(t);
    S.useEffect(() => {
      !r && !Object.is(u, t) && console.error([`MUI: A component is changing the default ${o} state of an uncontrolled ${n} after being initialized. To suppress this warning opt to use a controlled ${n}.`].join(`
`));
    }, [JSON.stringify(t)]);
  }
  const c = S.useCallback((u) => {
    r || a(u);
  }, []);
  return [l, c];
}
function Ge(e10) {
  const t = S.useRef(e10);
  return sr(() => {
    t.current = e10;
  }), S.useRef((...n) => (
    // @ts-expect-error hide `this`
    (0, t.current)(...n)
  )).current;
}
function Bn(...e10) {
  return S.useMemo(() => e10.every((t) => t == null) ? null : (t) => {
    e10.forEach((n) => {
      T3(n, t);
    });
  }, e10);
}
var R3 = {
  border: 0,
  clip: "rect(0 0 0 0)",
  height: "1px",
  margin: "-1px",
  overflow: "hidden",
  padding: 0,
  position: "absolute",
  whiteSpace: "nowrap",
  width: "1px"
};
function Tt(e10, t, n = void 0) {
  const o = {};
  return Object.keys(e10).forEach(
    // `Object.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.
    // @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208
    (r) => {
      o[r] = e10[r].reduce((s, a) => {
        if (a) {
          const l = t(a);
          l !== "" && s.push(l), n && n[a] && s.push(n[a]);
        }
        return s;
      }, []).join(" ");
    }
  ), o;
}
var r0 = (e10) => e10;
var E3 = () => {
  let e10 = r0;
  return {
    configure(t) {
      e10 = t;
    },
    generate(t) {
      return e10(t);
    },
    reset() {
      e10 = r0;
    }
  };
};
var O3 = E3();
var P3 = {
  active: "active",
  checked: "checked",
  completed: "completed",
  disabled: "disabled",
  error: "error",
  expanded: "expanded",
  focused: "focused",
  focusVisible: "focusVisible",
  open: "open",
  readOnly: "readOnly",
  required: "required",
  selected: "selected"
};
function Ot(e10, t, n = "Mui") {
  const o = P3[t];
  return o ? `${n}-${o}` : `${O3.generate(e10)}-${t}`;
}
function At(e10, t, n = "Mui") {
  const o = {};
  return t.forEach((r) => {
    o[r] = Ot(e10, r, n);
  }), o;
}
function A3(e10) {
  return typeof e10 == "string";
}
function j3(e10, t, n) {
  return e10 === void 0 || A3(e10) ? t : V({}, t, {
    ownerState: V({}, t.ownerState, n)
  });
}
function D3(e10, t = []) {
  if (e10 === void 0)
    return {};
  const n = {};
  return Object.keys(e10).filter((o) => o.match(/^on[A-Z]/) && typeof e10[o] == "function" && !t.includes(o)).forEach((o) => {
    n[o] = e10[o];
  }), n;
}
function i0(e10) {
  if (e10 === void 0)
    return {};
  const t = {};
  return Object.keys(e10).filter((n) => !(n.match(/^on[A-Z]/) && typeof e10[n] == "function")).forEach((n) => {
    t[n] = e10[n];
  }), t;
}
function M3(e10) {
  const {
    getSlotProps: t,
    additionalProps: n,
    externalSlotProps: o,
    externalForwardedProps: r,
    className: s
  } = e10;
  if (!t) {
    const g = be(n == null ? void 0 : n.className, s, r == null ? void 0 : r.className, o == null ? void 0 : o.className), b = V({}, n == null ? void 0 : n.style, r == null ? void 0 : r.style, o == null ? void 0 : o.style), v = V({}, n, r, o);
    return g.length > 0 && (v.className = g), Object.keys(b).length > 0 && (v.style = b), {
      props: v,
      internalRef: void 0
    };
  }
  const a = D3(V({}, r, o)), l = i0(o), c = i0(r), u = t(a), d = be(u == null ? void 0 : u.className, n == null ? void 0 : n.className, s, r == null ? void 0 : r.className, o == null ? void 0 : o.className), p = V({}, u == null ? void 0 : u.style, n == null ? void 0 : n.style, r == null ? void 0 : r.style, o == null ? void 0 : o.style), m = V({}, u, n, c, l);
  return d.length > 0 && (m.className = d), Object.keys(p).length > 0 && (m.style = p), {
    props: m,
    internalRef: u.ref
  };
}
function ti(e10, t, n) {
  return typeof e10 == "function" ? e10(t, n) : e10;
}
var k3 = ["elementType", "externalSlotProps", "ownerState", "skipResolvingSlotProps"];
function Pt(e10) {
  var t;
  const {
    elementType: n,
    externalSlotProps: o,
    ownerState: r,
    skipResolvingSlotProps: s = false
  } = e10, a = Xe(e10, k3), l = s ? {} : ti(o, r), {
    props: c,
    internalRef: u
  } = M3(V({}, a, {
    externalSlotProps: l
  })), d = Bn(u, l == null ? void 0 : l.ref, (t = e10.additionalProps) == null ? void 0 : t.ref);
  return j3(n, V({}, c, {
    ref: d
  }), r);
}
var Qo = (e10, t) => e10.length !== t.length ? false : t.every((n) => e10.includes(n));
var Gg = ({
  openTo: e10,
  defaultOpenTo: t,
  views: n,
  defaultViews: o
}) => {
  const r = n ?? o;
  let s;
  if (e10 != null)
    s = e10;
  else if (r.includes(t))
    s = t;
  else if (r.length > 0)
    s = r[0];
  else
    throw new Error("MUI X: The `views` prop must contain at least one view.");
  return {
    views: r,
    openTo: s
  };
};
var pu = (e10, t, n) => {
  let o = t;
  return o = e10.setHours(o, e10.getHours(n)), o = e10.setMinutes(o, e10.getMinutes(n)), o = e10.setSeconds(o, e10.getSeconds(n)), o = e10.setMilliseconds(o, e10.getMilliseconds(n)), o;
};
var _a = ({
  date: e10,
  disableFuture: t,
  disablePast: n,
  maxDate: o,
  minDate: r,
  isDateDisabled: s,
  utils: a,
  timezone: l
}) => {
  const c = pu(a, a.date(void 0, l), e10);
  n && a.isBefore(r, c) && (r = c), t && a.isAfter(o, c) && (o = c);
  let u = e10, d = e10;
  for (a.isBefore(e10, r) && (u = r, d = null), a.isAfter(e10, o) && (d && (d = o), u = null); u || d; ) {
    if (u && a.isAfter(u, o) && (u = null), d && a.isBefore(d, r) && (d = null), u) {
      if (!s(u))
        return u;
      u = a.addDays(u, 1);
    }
    if (d) {
      if (!s(d))
        return d;
      d = a.addDays(d, -1);
    }
  }
  return null;
};
var F3 = (e10, t) => t == null || !e10.isValid(t) ? null : t;
var kn = (e10, t, n) => t == null || !e10.isValid(t) ? n : t;
var N3 = (e10, t, n) => !e10.isValid(t) && t != null && !e10.isValid(n) && n != null ? true : e10.isEqual(t, n);
var Ug = (e10, t) => {
  const o = [e10.startOfYear(t)];
  for (; o.length < 12; ) {
    const r = o[o.length - 1];
    o.push(e10.addMonths(r, 1));
  }
  return o;
};
var Xg = (e10, t, n) => n === "date" ? e10.startOfDay(e10.date(void 0, t)) : e10.date(void 0, t);
var No = (e10, t) => {
  const n = e10.setHours(e10.date(), t === "am" ? 2 : 14);
  return e10.format(n, "meridiem");
};
var $3 = ["year", "month", "day"];
var Fs = (e10) => $3.includes(e10);
var fl = (e10, {
  format: t,
  views: n
}, o) => {
  if (t != null)
    return t;
  const r = e10.formats;
  return Qo(n, ["year"]) ? r.year : Qo(n, ["month"]) ? r.month : Qo(n, ["day"]) ? r.dayOfMonth : Qo(n, ["month", "year"]) ? `${r.month} ${r.year}` : Qo(n, ["day", "month"]) ? `${r.month} ${r.dayOfMonth}` : o ? /en/.test(e10.getCurrentLocaleCode()) ? r.normalDateWithWeekday : r.normalDate : r.keyboardDate;
};
var V3 = (e10, t) => {
  const n = e10.startOfWeek(t);
  return [0, 1, 2, 3, 4, 5, 6].map((o) => e10.addDays(n, o));
};
var qw = ["hours", "minutes", "seconds"];
var Ns = (e10) => qw.includes(e10);
var Ia = (e10) => qw.includes(e10) || e10 === "meridiem";
var _3 = (e10, t) => e10 ? t.getHours(e10) >= 12 ? "pm" : "am" : null;
var ml = (e10, t, n) => n && (e10 >= 12 ? "pm" : "am") !== t ? t === "am" ? e10 - 12 : e10 + 12 : e10;
var L3 = (e10, t, n, o) => {
  const r = ml(o.getHours(e10), t, n);
  return o.setHours(e10, r);
};
var s0 = (e10, t) => t.getHours(e10) * 3600 + t.getMinutes(e10) * 60 + t.getSeconds(e10);
var Vl = (e10, t) => (n, o) => e10 ? t.isAfter(n, o) : s0(n, t) > s0(o, t);
var fu = (e10, {
  format: t,
  views: n,
  ampm: o
}) => {
  if (t != null)
    return t;
  const r = e10.formats;
  return Qo(n, ["hours"]) ? o ? `${r.hours12h} ${r.meridiem}` : r.hours24h : Qo(n, ["minutes"]) ? r.minutes : Qo(n, ["seconds"]) ? r.seconds : Qo(n, ["minutes", "seconds"]) ? `${r.minutes}:${r.seconds}` : Qo(n, ["hours", "minutes", "seconds"]) ? o ? `${r.hours12h}:${r.minutes}:${r.seconds} ${r.meridiem}` : `${r.hours24h}:${r.minutes}:${r.seconds}` : o ? `${r.hours12h}:${r.minutes} ${r.meridiem}` : `${r.hours24h}:${r.minutes}`;
};
var Fo = {
  year: 1,
  month: 2,
  day: 3,
  hours: 4,
  minutes: 5,
  seconds: 6,
  milliseconds: 7
};
var B3 = (e10) => Math.max(...e10.map((t) => Fo[t.type] ?? 1));
var ga = (e10, t, n) => {
  if (t === Fo.year)
    return e10.startOfYear(n);
  if (t === Fo.month)
    return e10.startOfMonth(n);
  if (t === Fo.day)
    return e10.startOfDay(n);
  let o = n;
  return t < Fo.minutes && (o = e10.setMinutes(o, 0)), t < Fo.seconds && (o = e10.setSeconds(o, 0)), t < Fo.milliseconds && (o = e10.setMilliseconds(o, 0)), o;
};
var z3 = ({
  props: e10,
  utils: t,
  granularity: n,
  timezone: o,
  getTodayDate: r
}) => {
  let s = r ? r() : ga(t, n, Xg(t, o));
  e10.minDate != null && t.isAfterDay(e10.minDate, s) && (s = ga(t, n, e10.minDate)), e10.maxDate != null && t.isBeforeDay(e10.maxDate, s) && (s = ga(t, n, e10.maxDate));
  const a = Vl(e10.disableIgnoringDatePartForTimeValidation ?? false, t);
  return e10.minTime != null && a(e10.minTime, s) && (s = ga(t, n, e10.disableIgnoringDatePartForTimeValidation ? e10.minTime : pu(t, s, e10.minTime))), e10.maxTime != null && a(s, e10.maxTime) && (s = ga(t, n, e10.disableIgnoringDatePartForTimeValidation ? e10.maxTime : pu(t, s, e10.maxTime))), s;
};
var Yg = (e10, t) => {
  const n = e10.formatTokenMap[t];
  if (n == null)
    throw new Error([`MUI X: The token "${t}" is not supported by the Date and Time Pickers.`, "Please try using another token or open an issue on https://github.com/mui/mui-x/issues/new/choose if you think it should be supported."].join(`
`));
  return typeof n == "string" ? {
    type: n,
    contentType: n === "meridiem" ? "letter" : "digit",
    maxLength: void 0
  } : {
    type: n.sectionType,
    contentType: n.contentType,
    maxLength: n.maxLength
  };
};
var W3 = (e10) => {
  switch (e10) {
    case "ArrowUp":
      return 1;
    case "ArrowDown":
      return -1;
    case "PageUp":
      return 5;
    case "PageDown":
      return -5;
    default:
      return 0;
  }
};
var Od = (e10, t, n) => {
  const o = [], r = e10.date(void 0, t), s = e10.startOfWeek(r), a = e10.endOfWeek(r);
  let l = s;
  for (; e10.isBefore(l, a); )
    o.push(l), l = e10.addDays(l, 1);
  return o.map((c) => e10.formatByString(c, n));
};
var Jw = (e10, t, n, o) => {
  switch (n) {
    case "month":
      return Ug(e10, e10.date(void 0, t)).map((r) => e10.formatByString(r, o));
    case "weekDay":
      return Od(e10, t, o);
    case "meridiem": {
      const r = e10.date(void 0, t);
      return [e10.startOfDay(r), e10.endOfDay(r)].map((s) => e10.formatByString(s, o));
    }
    default:
      return [];
  }
};
var a0 = "s";
var H3 = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"];
var G3 = (e10) => {
  const t = e10.date(void 0);
  return e10.formatByString(e10.setSeconds(t, 0), a0) === "0" ? H3 : Array.from({
    length: 10
  }).map((o, r) => e10.formatByString(e10.setSeconds(t, r), a0));
};
var ki = (e10, t) => {
  if (t[0] === "0")
    return e10;
  const n = [];
  let o = "";
  for (let r = 0; r < e10.length; r += 1) {
    o += e10[r];
    const s = t.indexOf(o);
    s > -1 && (n.push(s.toString()), o = "");
  }
  return n.join("");
};
var Zg = (e10, t) => t[0] === "0" ? e10 : e10.split("").map((n) => t[Number(n)]).join("");
var l0 = (e10, t) => {
  const n = ki(e10, t);
  return n !== " " && !Number.isNaN(Number(n));
};
var Kw = (e10, t) => {
  let n = e10;
  for (n = Number(n).toString(); n.length < t; )
    n = `0${n}`;
  return n;
};
var Qw = (e10, t, n, o, r) => {
  if (r.type !== "day" && r.contentType === "digit-with-letter")
    throw new Error([`MUI X: The token "${r.format}" is a digit format with letter in it.'
             This type of format is only supported for 'day' sections`].join(`
`));
  if (r.type === "day" && r.contentType === "digit-with-letter") {
    const a = e10.setDate(n.longestMonth, t);
    return e10.formatByString(a, r.format);
  }
  let s = t.toString();
  return r.hasLeadingZerosInInput && (s = Kw(s, r.maxLength)), Zg(s, o);
};
var U3 = (e10, t, n, o, r, s, a, l) => {
  const c = W3(o), u = o === "Home", d = o === "End", p = n.value === "" || u || d, m = () => {
    const b = r[n.type]({
      currentDate: a,
      format: n.format,
      contentType: n.contentType
    }), v = (x) => Qw(e10, x, b, s, n), h = n.type === "minutes" && (l != null && l.minutesStep) ? l.minutesStep : 1;
    let C = parseInt(ki(n.value, s), 10) + c * h;
    if (p) {
      if (n.type === "year" && !d && !u)
        return e10.formatByString(e10.date(void 0, t), n.format);
      c > 0 || u ? C = b.minimum : C = b.maximum;
    }
    return C % h !== 0 && ((c < 0 || u) && (C += h - (h + C) % h), (c > 0 || d) && (C -= C % h)), C > b.maximum ? v(b.minimum + (C - b.maximum - 1) % (b.maximum - b.minimum + 1)) : C < b.minimum ? v(b.maximum - (b.minimum - C - 1) % (b.maximum - b.minimum + 1)) : v(C);
  }, g = () => {
    const b = Jw(e10, t, n.type, n.format);
    if (b.length === 0)
      return n.value;
    if (p)
      return c > 0 || u ? b[0] : b[b.length - 1];
    const y = ((b.indexOf(n.value) + c) % b.length + b.length) % b.length;
    return b[y];
  };
  return n.contentType === "digit" || n.contentType === "digit-with-letter" ? m() : g();
};
var qg = (e10, t, n) => {
  let o = e10.value || e10.placeholder;
  const r = t === "non-input" ? e10.hasLeadingZerosInFormat : e10.hasLeadingZerosInInput;
  return t === "non-input" && e10.hasLeadingZerosInInput && !e10.hasLeadingZerosInFormat && (o = Number(ki(o, n)).toString()), ["input-rtl", "input-ltr"].includes(t) && e10.contentType === "digit" && !r && o.length === 1 && (o = `${o}‎`), t === "input-rtl" && (o = `⁨${o}⁩`), o;
};
var c0 = (e10, t, n, o) => {
  if (Yg(e10, n).type === "weekDay")
    throw new Error("changeSectionValueFormat doesn't support week day formats");
  return e10.formatByString(e10.parse(t, n), o);
};
var e1 = (e10, t, n) => e10.formatByString(e10.date(void 0, t), n).length === 4;
var t1 = (e10, t, n, o, r) => {
  if (n !== "digit")
    return false;
  const s = e10.date(void 0, t);
  switch (o) {
    case "year":
      return e1(e10, t, r) ? e10.formatByString(e10.setYear(s, 1), r) === "0001" : e10.formatByString(e10.setYear(s, 2001), r) === "01";
    case "month":
      return e10.formatByString(e10.startOfYear(s), r).length > 1;
    case "day":
      return e10.formatByString(e10.startOfMonth(s), r).length > 1;
    case "weekDay":
      return e10.formatByString(e10.startOfWeek(s), r).length > 1;
    case "hours":
      return e10.formatByString(e10.setHours(s, 1), r).length > 1;
    case "minutes":
      return e10.formatByString(e10.setMinutes(s, 1), r).length > 1;
    case "seconds":
      return e10.formatByString(e10.setSeconds(s, 1), r).length > 1;
    default:
      throw new Error("Invalid section type");
  }
};
var X3 = (e10, t, n) => {
  const o = t.some((c) => c.type === "day"), r = [], s = [];
  for (let c = 0; c < t.length; c += 1) {
    const u = t[c];
    o && u.type === "weekDay" || (r.push(u.format), s.push(qg(u, "non-input", n)));
  }
  const a = r.join(" "), l = s.join(" ");
  return e10.parse(l, a);
};
var Y3 = (e10) => e10.map((t) => `${t.startSeparator}${t.value || t.placeholder}${t.endSeparator}`).join("");
var Z3 = (e10, t, n) => {
  const r = e10.map((s) => {
    const a = qg(s, n ? "input-rtl" : "input-ltr", t);
    return `${s.startSeparator}${a}${s.endSeparator}`;
  }).join("");
  return n ? `⁦${r}⁩` : r;
};
var q3 = (e10, t, n) => {
  const o = e10.date(void 0, n), r = e10.endOfYear(o), s = e10.endOfDay(o), {
    maxDaysInMonth: a,
    longestMonth: l
  } = Ug(e10, o).reduce((c, u) => {
    const d = e10.getDaysInMonth(u);
    return d > c.maxDaysInMonth ? {
      maxDaysInMonth: d,
      longestMonth: u
    } : c;
  }, {
    maxDaysInMonth: 0,
    longestMonth: null
  });
  return {
    year: ({
      format: c
    }) => ({
      minimum: 0,
      maximum: e1(e10, n, c) ? 9999 : 99
    }),
    month: () => ({
      minimum: 1,
      // Assumption: All years have the same amount of months
      maximum: e10.getMonth(r) + 1
    }),
    day: ({
      currentDate: c
    }) => ({
      minimum: 1,
      maximum: c != null && e10.isValid(c) ? e10.getDaysInMonth(c) : a,
      longestMonth: l
    }),
    weekDay: ({
      format: c,
      contentType: u
    }) => {
      if (u === "digit") {
        const d = Od(e10, n, c).map(Number);
        return {
          minimum: Math.min(...d),
          maximum: Math.max(...d)
        };
      }
      return {
        minimum: 1,
        maximum: 7
      };
    },
    hours: ({
      format: c
    }) => {
      const u = e10.getHours(s);
      return ki(e10.formatByString(e10.endOfDay(o), c), t) !== u.toString() ? {
        minimum: 1,
        maximum: Number(ki(e10.formatByString(e10.startOfDay(o), c), t))
      } : {
        minimum: 0,
        maximum: u
      };
    },
    minutes: () => ({
      minimum: 0,
      // Assumption: All years have the same amount of minutes
      maximum: e10.getMinutes(s)
    }),
    seconds: () => ({
      minimum: 0,
      // Assumption: All years have the same amount of seconds
      maximum: e10.getSeconds(s)
    }),
    meridiem: () => ({
      minimum: 0,
      maximum: 1
    }),
    empty: () => ({
      minimum: 0,
      maximum: 0
    })
  };
};
var u0 = false;
var d0 = (e10, t) => {
  if (!u0) {
    const n = ["empty"];
    ["date", "date-time"].includes(t) && n.push("weekDay", "day", "month", "year"), ["time", "date-time"].includes(t) && n.push("hours", "minutes", "seconds", "meridiem");
    const o = e10.find((r) => !n.includes(r.type));
    o && (console.warn(`MUI X: The field component you are using is not compatible with the "${o.type}" date section.`, `The supported date sections are ["${n.join('", "')}"]\`.`), u0 = true);
  }
};
var J3 = (e10, t, n, o, r) => {
  switch (n.type) {
    case "year":
      return e10.setYear(r, e10.getYear(o));
    case "month":
      return e10.setMonth(r, e10.getMonth(o));
    case "weekDay": {
      const s = Od(e10, t, n.format), a = e10.formatByString(o, n.format), l = s.indexOf(a), u = s.indexOf(n.value) - l;
      return e10.addDays(o, u);
    }
    case "day":
      return e10.setDate(r, e10.getDate(o));
    case "meridiem": {
      const s = e10.getHours(o) < 12, a = e10.getHours(r);
      return s && a >= 12 ? e10.addHours(r, -12) : !s && a < 12 ? e10.addHours(r, 12) : r;
    }
    case "hours":
      return e10.setHours(r, e10.getHours(o));
    case "minutes":
      return e10.setMinutes(r, e10.getMinutes(o));
    case "seconds":
      return e10.setSeconds(r, e10.getSeconds(o));
    default:
      return r;
  }
};
var p0 = {
  year: 1,
  month: 2,
  day: 3,
  weekDay: 4,
  hours: 5,
  minutes: 6,
  seconds: 7,
  meridiem: 8,
  empty: 9
};
var f0 = (e10, t, n, o, r, s) => (
  // cloning sections before sort to avoid mutating it
  [...o].sort((a, l) => p0[a.type] - p0[l.type]).reduce((a, l) => !s || l.modified ? J3(e10, t, l, n, a) : a, r)
);
var K3 = () => navigator.userAgent.toLowerCase().includes("android");
var Q3 = (e10, t) => {
  const n = {};
  if (!t)
    return e10.forEach((c, u) => {
      const d = u === 0 ? null : u - 1, p = u === e10.length - 1 ? null : u + 1;
      n[u] = {
        leftIndex: d,
        rightIndex: p
      };
    }), {
      neighbors: n,
      startIndex: 0,
      endIndex: e10.length - 1
    };
  const o = {}, r = {};
  let s = 0, a = 0, l = e10.length - 1;
  for (; l >= 0; ) {
    a = e10.findIndex(
      // eslint-disable-next-line @typescript-eslint/no-loop-func
      (c, u) => {
        var d;
        return u >= s && ((d = c.endSeparator) == null ? void 0 : d.includes(" ")) && // Special case where the spaces were not there in the initial input
        c.endSeparator !== " / ";
      }
    ), a === -1 && (a = e10.length - 1);
    for (let c = a; c >= s; c -= 1)
      r[c] = l, o[l] = c, l -= 1;
    s = a + 1;
  }
  return e10.forEach((c, u) => {
    const d = r[u], p = d === 0 ? null : o[d - 1], m = d === e10.length - 1 ? null : o[d + 1];
    n[u] = {
      leftIndex: p,
      rightIndex: m
    };
  }), {
    neighbors: n,
    startIndex: o[0],
    endIndex: o[e10.length - 1]
  };
};
var cm = (e10, t) => e10 == null ? null : e10 === "all" ? "all" : typeof e10 == "string" ? t.findIndex((n) => n.type === e10) : e10;
var eG = (e10, t) => {
  if (e10.value)
    switch (e10.type) {
      case "month": {
        if (e10.contentType === "digit")
          return t.format(t.setMonth(t.date(), Number(e10.value) - 1), "month");
        const n = t.parse(e10.value, e10.format);
        return n ? t.format(n, "month") : void 0;
      }
      case "day":
        return e10.contentType === "digit" ? t.format(t.setDate(t.startOfYear(t.date()), Number(e10.value)), "dayOfMonthFull") : e10.value;
      case "weekDay":
        return;
      default:
        return;
    }
};
var tG = (e10, t) => {
  if (e10.value)
    switch (e10.type) {
      case "weekDay":
        return e10.contentType === "letter" ? void 0 : Number(e10.value);
      case "meridiem": {
        const n = t.parse(`01:00 ${e10.value}`, `${t.formats.hours12h}:${t.formats.minutes} ${e10.format}`);
        return n ? t.getHours(n) >= 12 ? 1 : 0 : void 0;
      }
      case "day":
        return e10.contentType === "digit-with-letter" ? parseInt(e10.value, 10) : Number(e10.value);
      case "month": {
        if (e10.contentType === "digit")
          return Number(e10.value);
        const n = t.parse(e10.value, e10.format);
        return n ? t.getMonth(n) + 1 : void 0;
      }
      default:
        return e10.contentType !== "letter" ? Number(e10.value) : void 0;
    }
};
var nG = ["value", "referenceDate"];
var ln = {
  emptyValue: null,
  getTodayValue: Xg,
  getInitialReferenceValue: (e10) => {
    let {
      value: t,
      referenceDate: n
    } = e10, o = Xe(e10, nG);
    return t != null && o.utils.isValid(t) ? t : n ?? z3(o);
  },
  cleanValue: F3,
  areValuesEqual: N3,
  isSameError: (e10, t) => e10 === t,
  hasError: (e10) => e10 != null,
  defaultErrorState: null,
  getTimezone: (e10, t) => t == null || !e10.isValid(t) ? null : e10.getTimezone(t),
  setTimezone: (e10, t, n) => n == null ? null : e10.setTimezone(n, t)
};
var Jg = {
  updateReferenceValue: (e10, t, n) => t == null || !e10.isValid(t) ? n : t,
  getSectionsFromValue: (e10, t, n, o) => !e10.isValid(t) && !!n ? n : o(t),
  getV7HiddenInputValueFromSections: Y3,
  getV6InputValueFromSections: Z3,
  getActiveDateManager: (e10, t) => ({
    date: t.value,
    referenceDate: t.referenceValue,
    getSections: (n) => n,
    getNewValuesFromNewActiveDate: (n) => ({
      value: n,
      referenceValue: n == null || !e10.isValid(n) ? t.referenceValue : n
    })
  }),
  parseValueStr: (e10, t, n) => n(e10.trim(), t)
};
var oG = ["localeText"];
var mu = S.createContext(null);
mu.displayName = "MuiPickersAdapterContext";
var Kg = function(t) {
  const {
    localeText: n
  } = t, o = Xe(t, oG), {
    utils: r,
    localeText: s
  } = S.useContext(mu) ?? {
    utils: void 0,
    localeText: void 0
  }, a = at({
    // We don't want to pass the `localeText` prop to the theme, that way it will always return the theme value,
    // We will then merge this theme value with our value manually
    props: o,
    name: "MuiLocalizationProvider"
  }), {
    children: l,
    dateAdapter: c,
    dateFormats: u,
    dateLibInstance: d,
    adapterLocale: p,
    localeText: m
  } = a, g = S.useMemo(() => V({}, m, s, n), [m, s, n]), b = S.useMemo(() => {
    if (!c)
      return r || null;
    const y = new c({
      locale: p,
      formats: u,
      instance: d
    });
    if (!y.isMUIAdapter)
      throw new Error(["MUI X: The date adapter should be imported from `@mui/x-date-pickers` or `@mui/x-date-pickers-pro`, not from `@date-io`", "For example, `import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'` instead of `import AdapterDayjs from '@date-io/dayjs'`", "More information on the installation documentation: https://mui.com/x/react-date-pickers/getting-started/#installation"].join(`
`));
    return y;
  }, [c, p, u, d, r]), v = S.useMemo(() => b ? {
    minDate: b.date("1900-01-01T00:00:00.000"),
    maxDate: b.date("2099-12-31T00:00:00.000")
  } : null, [b]), h = S.useMemo(() => ({
    utils: b,
    defaultDates: v,
    localeText: g
  }), [v, b, g]);
  return f.jsx(mu.Provider, {
    value: h,
    children: l
  });
};
Kg.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Locale for the date library you are using
   */
  adapterLocale: i.any,
  children: i.node,
  /**
   * Date library adapter class function.
   * @see See the localization provider {@link https://mui.com/x/react-date-pickers/getting-started/#setup-your-date-library-adapter date adapter setup section} for more details.
   */
  dateAdapter: i.func,
  /**
   * Formats that are used for any child pickers
   */
  dateFormats: i.shape({
    dayOfMonth: i.string,
    dayOfMonthFull: i.string,
    fullDate: i.string,
    fullTime: i.string,
    fullTime12h: i.string,
    fullTime24h: i.string,
    hours12h: i.string,
    hours24h: i.string,
    keyboardDate: i.string,
    keyboardDateTime: i.string,
    keyboardDateTime12h: i.string,
    keyboardDateTime24h: i.string,
    meridiem: i.string,
    minutes: i.string,
    month: i.string,
    monthShort: i.string,
    normalDate: i.string,
    normalDateWithWeekday: i.string,
    seconds: i.string,
    shortDate: i.string,
    weekday: i.string,
    weekdayShort: i.string,
    year: i.string
  }),
  /**
   * Date library instance you are using, if it has some global overrides
   * ```jsx
   * dateLibInstance={momentTimeZone}
   * ```
   */
  dateLibInstance: i.any,
  /**
   * Locale for components texts
   */
  localeText: i.object
};
var rG = (e10) => ({
  components: {
    MuiLocalizationProvider: {
      defaultProps: {
        localeText: V({}, e10)
      }
    }
  }
});
var Js = (e10) => {
  const {
    utils: t,
    formatKey: n,
    contextTranslation: o,
    propsTranslation: r
  } = e10;
  return (s) => {
    const a = s !== null && t.isValid(s) ? t.format(s, n) : null;
    return (r ?? o)(s, t, a);
  };
};
var n1 = {
  // Calendar navigation
  previousMonth: "Previous month",
  nextMonth: "Next month",
  // View navigation
  openPreviousView: "Open previous view",
  openNextView: "Open next view",
  calendarViewSwitchingButtonAriaLabel: (e10) => e10 === "year" ? "year view is open, switch to calendar view" : "calendar view is open, switch to year view",
  // DateRange labels
  start: "Start",
  end: "End",
  startDate: "Start date",
  startTime: "Start time",
  endDate: "End date",
  endTime: "End time",
  // Action bar
  cancelButtonLabel: "Cancel",
  clearButtonLabel: "Clear",
  okButtonLabel: "OK",
  todayButtonLabel: "Today",
  // Toolbar titles
  datePickerToolbarTitle: "Select date",
  dateTimePickerToolbarTitle: "Select date & time",
  timePickerToolbarTitle: "Select time",
  dateRangePickerToolbarTitle: "Select date range",
  // Clock labels
  clockLabelText: (e10, t, n, o) => `Select ${e10}. ${!o && (t === null || !n.isValid(t)) ? "No time selected" : `Selected time is ${o ?? n.format(t, "fullTime")}`}`,
  hoursClockNumberText: (e10) => `${e10} hours`,
  minutesClockNumberText: (e10) => `${e10} minutes`,
  secondsClockNumberText: (e10) => `${e10} seconds`,
  // Digital clock labels
  selectViewText: (e10) => `Select ${e10}`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "Week number",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e10) => `Week ${e10}`,
  calendarWeekNumberText: (e10) => `${e10}`,
  // Open picker labels
  openDatePickerDialogue: (e10, t, n) => n || e10 !== null && t.isValid(e10) ? `Choose date, selected date is ${n ?? t.format(e10, "fullDate")}` : "Choose date",
  openTimePickerDialogue: (e10, t, n) => n || e10 !== null && t.isValid(e10) ? `Choose time, selected time is ${n ?? t.format(e10, "fullTime")}` : "Choose time",
  fieldClearLabel: "Clear",
  // Table labels
  timeTableLabel: "pick time",
  dateTableLabel: "pick date",
  // Field section placeholders
  fieldYearPlaceholder: (e10) => "Y".repeat(e10.digitAmount),
  fieldMonthPlaceholder: (e10) => e10.contentType === "letter" ? "MMMM" : "MM",
  fieldDayPlaceholder: () => "DD",
  fieldWeekDayPlaceholder: (e10) => e10.contentType === "letter" ? "EEEE" : "EE",
  fieldHoursPlaceholder: () => "hh",
  fieldMinutesPlaceholder: () => "mm",
  fieldSecondsPlaceholder: () => "ss",
  fieldMeridiemPlaceholder: () => "aa",
  // View names
  year: "Year",
  month: "Month",
  day: "Day",
  weekDay: "Week day",
  hours: "Hours",
  minutes: "Minutes",
  seconds: "Seconds",
  meridiem: "Meridiem",
  // Common
  empty: "Empty"
};
var iG = n1;
rG(n1);
var Ui = () => {
  const e10 = S.useContext(mu);
  if (e10 === null)
    throw new Error(["MUI X: Can not find the date and time pickers localization context.", "It looks like you forgot to wrap your component in LocalizationProvider.", "This can also happen if you are bundling multiple versions of the `@mui/x-date-pickers` package"].join(`
`));
  if (e10.utils === null)
    throw new Error(["MUI X: Can not find the date and time pickers adapter from its localization context.", "It looks like you forgot to pass a `dateAdapter` to your LocalizationProvider."].join(`
`));
  const t = S.useMemo(() => V({}, iG, e10.localeText), [e10.localeText]);
  return S.useMemo(() => V({}, e10, {
    localeText: t
  }), [e10, t]);
};
var gt = () => Ui().utils;
var Xi = () => Ui().defaultDates;
var Yi = (e10) => {
  const t = gt(), n = S.useRef();
  return n.current === void 0 && (n.current = t.date(void 0, e10)), n.current;
};
function o1(e10) {
  return Ot("MuiPickersToolbar", e10);
}
var sG = At("MuiPickersToolbar", ["root", "content"]);
var aG = ["children", "className", "toolbarTitle", "hidden", "titleId", "isLandscape", "classes", "landscapeDirection"];
var lG = (e10) => {
  const {
    classes: t,
    isLandscape: n
  } = e10;
  return Tt({
    root: ["root"],
    content: ["content"],
    penIconButton: ["penIconButton", n && "penIconButtonLandscape"]
  }, o1, t);
};
var cG = K("div", {
  name: "MuiPickersToolbar",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})(({
  theme: e10
}) => ({
  display: "flex",
  flexDirection: "column",
  alignItems: "flex-start",
  justifyContent: "space-between",
  padding: e10.spacing(2, 3),
  variants: [{
    props: {
      isLandscape: true
    },
    style: {
      height: "auto",
      maxWidth: 160,
      padding: 16,
      justifyContent: "flex-start",
      flexWrap: "wrap"
    }
  }]
}));
var uG = K("div", {
  name: "MuiPickersToolbar",
  slot: "Content",
  overridesResolver: (e10, t) => t.content
})({
  display: "flex",
  flexWrap: "wrap",
  width: "100%",
  flex: 1,
  justifyContent: "space-between",
  alignItems: "center",
  flexDirection: "row",
  variants: [{
    props: {
      isLandscape: true
    },
    style: {
      justifyContent: "flex-start",
      alignItems: "flex-start",
      flexDirection: "column"
    }
  }, {
    props: {
      isLandscape: true,
      landscapeDirection: "row"
    },
    style: {
      flexDirection: "row"
    }
  }]
});
var Qg = S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiPickersToolbar"
  }), {
    children: r,
    className: s,
    toolbarTitle: a,
    hidden: l,
    titleId: c
  } = o, u = Xe(o, aG), d = o, p = lG(d);
  return l ? null : f.jsxs(cG, V({
    ref: n,
    className: be(p.root, s),
    ownerState: d
  }, u, {
    children: [f.jsx(Fe, {
      color: "text.secondary",
      variant: "overline",
      id: c,
      children: a
    }), f.jsx(uG, {
      className: p.content,
      ownerState: d,
      children: r
    })]
  }));
});
var gn = () => Ui().localeText;
function dG(e10) {
  return Ot("MuiDatePickerToolbar", e10);
}
At("MuiDatePickerToolbar", ["root", "title"]);
var pG = ["value", "isLandscape", "onChange", "toolbarFormat", "toolbarPlaceholder", "views", "className", "onViewChange", "view"];
var fG = (e10) => {
  const {
    classes: t
  } = e10;
  return Tt({
    root: ["root"],
    title: ["title"]
  }, dG, t);
};
var mG = K(Qg, {
  name: "MuiDatePickerToolbar",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})({});
var gG = K(Fe, {
  name: "MuiDatePickerToolbar",
  slot: "Title",
  overridesResolver: (e10, t) => t.title
})({
  variants: [{
    props: {
      isLandscape: true
    },
    style: {
      margin: "auto 16px auto auto"
    }
  }]
});
var r1 = S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiDatePickerToolbar"
  }), {
    value: r,
    isLandscape: s,
    toolbarFormat: a,
    toolbarPlaceholder: l = "––",
    views: c,
    className: u
  } = o, d = Xe(o, pG), p = gt(), m = gn(), g = fG(o), b = S.useMemo(() => {
    if (!r)
      return l;
    const h = fl(p, {
      format: a,
      views: c
    }, true);
    return p.formatByString(r, h);
  }, [r, a, l, p, c]), v = o;
  return f.jsx(mG, V({
    ref: n,
    toolbarTitle: m.datePickerToolbarTitle,
    isLandscape: s,
    className: be(g.root, u)
  }, d, {
    children: f.jsx(gG, {
      variant: "h4",
      align: s ? "left" : "center",
      ownerState: v,
      className: g.title,
      children: b
    })
  }));
});
r1.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  className: i.string,
  disabled: i.bool,
  /**
   * If `true`, show the toolbar even in desktop mode.
   * @default `true` for Desktop, `false` for Mobile.
   */
  hidden: i.bool,
  isLandscape: i.bool.isRequired,
  onChange: i.func.isRequired,
  /**
   * Callback called when a toolbar is clicked
   * @template TView
   * @param {TView} view The view to open
   */
  onViewChange: i.func.isRequired,
  readOnly: i.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  titleId: i.string,
  /**
   * Toolbar date format.
   */
  toolbarFormat: i.string,
  /**
   * Toolbar value placeholder—it is displayed when the value is empty.
   * @default "––"
   */
  toolbarPlaceholder: i.node,
  value: i.object,
  /**
   * Currently visible picker view.
   */
  view: i.oneOf(["day", "month", "year"]).isRequired,
  /**
   * Available views.
   */
  views: i.arrayOf(i.oneOf(["day", "month", "year"]).isRequired).isRequired
};
function i1(e10, t) {
  const n = gt(), o = Xi(), r = at({
    props: e10,
    name: t
  }), s = S.useMemo(() => {
    var a;
    return ((a = r.localeText) == null ? void 0 : a.toolbarTitle) == null ? r.localeText : V({}, r.localeText, {
      datePickerToolbarTitle: r.localeText.toolbarTitle
    });
  }, [r.localeText]);
  return V({}, r, {
    localeText: s
  }, Gg({
    views: r.views,
    openTo: r.openTo,
    defaultViews: ["year", "day"],
    defaultOpenTo: "day"
  }), {
    disableFuture: r.disableFuture ?? false,
    disablePast: r.disablePast ?? false,
    minDate: kn(n, r.minDate, o.minDate),
    maxDate: kn(n, r.maxDate, o.maxDate),
    slots: V({
      toolbar: r1
    }, r.slots)
  });
}
var Ks = ({
  props: e10,
  value: t,
  timezone: n,
  adapter: o
}) => {
  if (t === null)
    return null;
  const {
    shouldDisableDate: r,
    shouldDisableMonth: s,
    shouldDisableYear: a,
    disablePast: l,
    disableFuture: c
  } = e10, u = o.utils.date(void 0, n), d = kn(o.utils, e10.minDate, o.defaultDates.minDate), p = kn(o.utils, e10.maxDate, o.defaultDates.maxDate);
  switch (true) {
    case !o.utils.isValid(t):
      return "invalidDate";
    case !!(r && r(t)):
      return "shouldDisableDate";
    case !!(s && s(t)):
      return "shouldDisableMonth";
    case !!(a && a(t)):
      return "shouldDisableYear";
    case !!(c && o.utils.isAfterDay(t, u)):
      return "disableFuture";
    case !!(l && o.utils.isBeforeDay(t, u)):
      return "disablePast";
    case !!(d && o.utils.isBeforeDay(t, d)):
      return "minDate";
    case !!(p && o.utils.isAfterDay(t, p)):
      return "maxDate";
    default:
      return null;
  }
};
Ks.valueManager = ln;
var _l = ({
  adapter: e10,
  value: t,
  timezone: n,
  props: o
}) => {
  if (t === null)
    return null;
  const {
    minTime: r,
    maxTime: s,
    minutesStep: a,
    shouldDisableTime: l,
    disableIgnoringDatePartForTimeValidation: c = false,
    disablePast: u,
    disableFuture: d
  } = o, p = e10.utils.date(void 0, n), m = Vl(c, e10.utils);
  switch (true) {
    case !e10.utils.isValid(t):
      return "invalidDate";
    case !!(r && m(r, t)):
      return "minTime";
    case !!(s && m(t, s)):
      return "maxTime";
    case !!(d && e10.utils.isAfter(t, p)):
      return "disableFuture";
    case !!(u && e10.utils.isBefore(t, p)):
      return "disablePast";
    case !!(l && l(t, "hours")):
      return "shouldDisableTime-hours";
    case !!(l && l(t, "minutes")):
      return "shouldDisableTime-minutes";
    case !!(l && l(t, "seconds")):
      return "shouldDisableTime-seconds";
    case !!(a && e10.utils.getMinutes(t) % a !== 0):
      return "minutesStep";
    default:
      return null;
  }
};
_l.valueManager = ln;
var Pd = ({
  adapter: e10,
  value: t,
  timezone: n,
  props: o
}) => {
  const r = Ks({
    adapter: e10,
    value: t,
    timezone: n,
    props: o
  });
  return r !== null ? r : _l({
    adapter: e10,
    value: t,
    timezone: n,
    props: o
  });
};
Pd.valueManager = ln;
var um = ["disablePast", "disableFuture", "minDate", "maxDate", "shouldDisableDate", "shouldDisableMonth", "shouldDisableYear"];
var dm = ["disablePast", "disableFuture", "minTime", "maxTime", "shouldDisableTime", "minutesStep", "ampm", "disableIgnoringDatePartForTimeValidation"];
var s1 = ["minDateTime", "maxDateTime"];
var hG = [...um, ...dm, ...s1];
var Qs = (e10) => hG.reduce((t, n) => (e10.hasOwnProperty(n) && (t[n] = e10[n]), t), {});
function a1(e10) {
  const {
    props: t,
    validator: n,
    value: o,
    timezone: r,
    onError: s
  } = e10, a = Ui(), l = S.useRef(n.valueManager.defaultErrorState), c = n({
    adapter: a,
    value: o,
    timezone: r,
    props: t
  }), u = n.valueManager.hasError(c);
  S.useEffect(() => {
    s && !n.valueManager.isSameError(c, l.current) && s(c, o), l.current = c;
  }, [n, s, c, o]);
  const d = Ge((p) => n({
    adapter: a,
    value: p,
    timezone: r,
    props: t
  }));
  return {
    validationError: c,
    hasValidationError: u,
    getValidationErrorForNewValue: d
  };
}
function bG(e10) {
  return Ot("MuiPickersPopper", e10);
}
At("MuiPickersPopper", ["root", "paper"]);
function us(e10, t) {
  return Array.isArray(t) ? t.every((n) => e10.indexOf(n) !== -1) : e10.indexOf(t) !== -1;
}
var vG = (e10, t) => (n) => {
  (n.key === "Enter" || n.key === " ") && (e10(n), n.preventDefault(), n.stopPropagation());
};
var no = (e10 = document) => {
  const t = e10.activeElement;
  return t ? t.shadowRoot ? no(t.shadowRoot) : t : null;
};
var eh = "@media (pointer: fine)";
var yG = "@media (prefers-reduced-motion: reduce)";
var ys = typeof navigator < "u" && navigator.userAgent.match(/android\s(\d+)|OS\s(\d+)/i);
var m0 = ys && ys[1] ? parseInt(ys[1], 10) : null;
var g0 = ys && ys[2] ? parseInt(ys[2], 10) : null;
var xG = m0 && m0 < 10 || g0 && g0 < 13 || false;
var l1 = () => Yr(yG, {
  defaultMatches: false
}) || xG;
var CG = ["PaperComponent", "popperPlacement", "ownerState", "children", "paperSlotProps", "paperClasses", "onPaperClick", "onPaperTouchStart"];
var SG = (e10) => {
  const {
    classes: t
  } = e10;
  return Tt({
    root: ["root"],
    paper: ["paper"]
  }, bG, t);
};
var wG = K(Gs, {
  name: "MuiPickersPopper",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})(({
  theme: e10
}) => ({
  zIndex: e10.zIndex.modal
}));
var TG = K(vn, {
  name: "MuiPickersPopper",
  slot: "Paper",
  overridesResolver: (e10, t) => t.paper
})({
  outline: 0,
  transformOrigin: "top center",
  variants: [{
    props: ({
      placement: e10
    }) => ["top", "top-start", "top-end"].includes(e10),
    style: {
      transformOrigin: "bottom center"
    }
  }]
});
function IG(e10, t) {
  return t.documentElement.clientWidth < e10.clientX || t.documentElement.clientHeight < e10.clientY;
}
function RG(e10, t) {
  const n = S.useRef(false), o = S.useRef(false), r = S.useRef(null), s = S.useRef(false);
  S.useEffect(() => {
    if (!e10)
      return;
    function c() {
      s.current = true;
    }
    return document.addEventListener("mousedown", c, true), document.addEventListener("touchstart", c, true), () => {
      document.removeEventListener("mousedown", c, true), document.removeEventListener("touchstart", c, true), s.current = false;
    };
  }, [e10]);
  const a = Ge((c) => {
    if (!s.current)
      return;
    const u = o.current;
    o.current = false;
    const d = zp(r.current);
    if (!r.current || // is a TouchEvent?
    "clientX" in c && IG(c, d))
      return;
    if (n.current) {
      n.current = false;
      return;
    }
    let p;
    c.composedPath ? p = c.composedPath().indexOf(r.current) > -1 : p = !d.documentElement.contains(c.target) || r.current.contains(c.target), !p && !u && t(c);
  }), l = () => {
    o.current = true;
  };
  return S.useEffect(() => {
    if (e10) {
      const c = zp(r.current), u = () => {
        n.current = true;
      };
      return c.addEventListener("touchstart", a), c.addEventListener("touchmove", u), () => {
        c.removeEventListener("touchstart", a), c.removeEventListener("touchmove", u);
      };
    }
  }, [e10, a]), S.useEffect(() => {
    if (e10) {
      const c = zp(r.current);
      return c.addEventListener("click", a), () => {
        c.removeEventListener("click", a), o.current = false;
      };
    }
  }, [e10, a]), [r, l, l];
}
var EG = S.forwardRef((e10, t) => {
  const {
    PaperComponent: n,
    popperPlacement: o,
    ownerState: r,
    children: s,
    paperSlotProps: a,
    paperClasses: l,
    onPaperClick: c,
    onPaperTouchStart: u
    // picks up the style props provided by `Transition`
    // https://mui.com/material-ui/transitions/#child-requirement
  } = e10, d = Xe(e10, CG), p = V({}, r, {
    placement: o
  }), m = Pt({
    elementType: n,
    externalSlotProps: a,
    additionalProps: {
      tabIndex: -1,
      elevation: 8,
      ref: t
    },
    className: l,
    ownerState: p
  });
  return f.jsx(n, V({}, d, m, {
    onClick: (g) => {
      var b;
      c(g), (b = m.onClick) == null || b.call(m, g);
    },
    onTouchStart: (g) => {
      var b;
      u(g), (b = m.onTouchStart) == null || b.call(m, g);
    },
    ownerState: p,
    children: s
  }));
});
function OG(e10) {
  const t = at({
    props: e10,
    name: "MuiPickersPopper"
  }), {
    anchorEl: n,
    children: o,
    containerRef: r = null,
    shouldRestoreFocus: s,
    onBlur: a,
    onDismiss: l,
    open: c,
    role: u,
    placement: d,
    slots: p,
    slotProps: m,
    reduceAnimations: g
  } = t;
  S.useEffect(() => {
    function N(j) {
      c && j.key === "Escape" && l();
    }
    return document.addEventListener("keydown", N), () => {
      document.removeEventListener("keydown", N);
    };
  }, [l, c]);
  const b = S.useRef(null);
  S.useEffect(() => {
    u === "tooltip" || s && !s() || (c ? b.current = no(document) : b.current && b.current instanceof HTMLElement && setTimeout(() => {
      b.current instanceof HTMLElement && b.current.focus();
    }));
  }, [c, u, s]);
  const [v, h, y] = RG(c, a ?? l), C = S.useRef(null), x = Bn(C, r), T = Bn(x, v), w = t, R = SG(w), E = l1(), O = g ?? E, I = (N) => {
    N.key === "Escape" && (N.stopPropagation(), l());
  }, P = (p == null ? void 0 : p.desktopTransition) ?? O ? ii : Kr, A = (p == null ? void 0 : p.desktopTrapFocus) ?? ol, M = (p == null ? void 0 : p.desktopPaper) ?? TG, F = (p == null ? void 0 : p.popper) ?? wG, D = Pt({
    elementType: F,
    externalSlotProps: m == null ? void 0 : m.popper,
    additionalProps: {
      transition: true,
      role: u,
      open: c,
      anchorEl: n,
      placement: d,
      onKeyDown: I
    },
    className: R.root,
    ownerState: t
  });
  return f.jsx(F, V({}, D, {
    children: ({
      TransitionProps: N,
      placement: j
    }) => f.jsx(A, V({
      open: c,
      disableAutoFocus: true,
      disableRestoreFocus: true,
      disableEnforceFocus: u === "tooltip",
      isEnabled: () => true
    }, m == null ? void 0 : m.desktopTrapFocus, {
      children: f.jsx(P, V({}, N, m == null ? void 0 : m.desktopTransition, {
        children: f.jsx(EG, {
          PaperComponent: M,
          ownerState: w,
          popperPlacement: j,
          ref: T,
          onPaperClick: h,
          onPaperTouchStart: y,
          paperClasses: R.paper,
          paperSlotProps: m == null ? void 0 : m.desktopPaper,
          children: o
        })
      }))
    }))
  }));
}
var h0 = /* @__PURE__ */ new Set();
function PG(e10, t = "warning") {
  if (false)
    return;
  const n = Array.isArray(e10) ? e10.join(`
`) : e10;
  h0.has(n) || (h0.add(n), t === "error" ? console.error(n) : console.warn(n));
}
var AG = ({
  open: e10,
  onOpen: t,
  onClose: n
}) => {
  const o = S.useRef(typeof e10 == "boolean").current, [r, s] = S.useState(false);
  S.useEffect(() => {
    if (o) {
      if (typeof e10 != "boolean")
        throw new Error("You must not mix controlling and uncontrolled mode for `open` prop");
      s(e10);
    }
  }, [o, e10]);
  const a = S.useCallback((l) => {
    o || s(l), l && t && t(), !l && n && n();
  }, [o, t, n]);
  return {
    isOpen: r,
    setIsOpen: a
  };
};
var th = ({
  timezone: e10,
  value: t,
  defaultValue: n,
  onChange: o,
  valueManager: r
}) => {
  const s = gt(), a = S.useRef(n), l = t ?? a.current ?? r.emptyValue, c = S.useMemo(() => r.getTimezone(s, l), [s, r, l]), u = Ge((g) => c == null ? g : r.setTimezone(s, c, g)), d = e10 ?? c ?? "default", p = S.useMemo(() => r.setTimezone(s, d, l), [r, s, d, l]), m = Ge((g, ...b) => {
    const v = u(g);
    o == null || o(v, ...b);
  });
  return {
    value: p,
    handleValueChange: m,
    timezone: d
  };
};
var ea = ({
  name: e10,
  timezone: t,
  value: n,
  defaultValue: o,
  onChange: r,
  valueManager: s
}) => {
  const [a, l] = Mi({
    name: e10,
    state: "value",
    controlled: n,
    default: o ?? s.emptyValue
  }), c = Ge((u, ...d) => {
    l(u), r == null || r(u, ...d);
  });
  return th({
    timezone: t,
    value: a,
    defaultValue: void 0,
    onChange: c,
    valueManager: s
  });
};
var jG = (e10) => {
  const {
    action: t,
    hasChanged: n,
    dateState: o,
    isControlled: r
  } = e10, s = !r && !o.hasBeenModifiedSinceMount;
  return t.name === "setValueFromField" ? true : t.name === "setValueFromAction" ? s && ["accept", "today", "clear"].includes(t.pickerAction) ? true : n(o.lastPublishedValue) : t.name === "setValueFromView" && t.selectionState !== "shallow" || t.name === "setValueFromShortcut" ? s ? true : n(o.lastPublishedValue) : false;
};
var DG = (e10) => {
  const {
    action: t,
    hasChanged: n,
    dateState: o,
    isControlled: r,
    closeOnSelect: s
  } = e10, a = !r && !o.hasBeenModifiedSinceMount;
  return t.name === "setValueFromAction" ? a && ["accept", "today", "clear"].includes(t.pickerAction) ? true : n(o.lastCommittedValue) : t.name === "setValueFromView" && t.selectionState === "finish" && s ? a ? true : n(o.lastCommittedValue) : t.name === "setValueFromShortcut" ? t.changeImportance === "accept" && n(o.lastCommittedValue) : false;
};
var MG = (e10) => {
  const {
    action: t,
    closeOnSelect: n
  } = e10;
  return t.name === "setValueFromAction" ? true : t.name === "setValueFromView" ? t.selectionState === "finish" && n : t.name === "setValueFromShortcut" ? t.changeImportance === "accept" : false;
};
var kG = ({
  props: e10,
  valueManager: t,
  valueType: n,
  wrapperVariant: o,
  validator: r
}) => {
  const {
    onAccept: s,
    onChange: a,
    value: l,
    defaultValue: c,
    closeOnSelect: u = o === "desktop",
    timezone: d
  } = e10, {
    current: p
  } = S.useRef(c), {
    current: m
  } = S.useRef(l !== void 0);
  S.useEffect(() => {
    m !== (l !== void 0) && console.error([`MUI X: A component is changing the ${m ? "" : "un"}controlled value of a picker to be ${m ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", "Decide between using a controlled or uncontrolled valuefor the lifetime of the component.", "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join(`
`));
  }, [l]), S.useEffect(() => {
    !m && p !== c && console.error(["MUI X: A component is changing the defaultValue of an uncontrolled picker after being initialized. To suppress this warning opt to use a controlled value."].join(`
`));
  }, [JSON.stringify(p)]);
  const g = gt(), b = Ui(), {
    isOpen: v,
    setIsOpen: h
  } = AG(e10), {
    timezone: y,
    value: C,
    handleValueChange: x
  } = th({
    timezone: d,
    value: l,
    defaultValue: p,
    onChange: a,
    valueManager: t
  }), [T, w] = S.useState(() => {
    let G;
    return C !== void 0 ? G = C : p !== void 0 ? G = p : G = t.emptyValue, {
      draft: G,
      lastPublishedValue: G,
      lastCommittedValue: G,
      lastControlledValue: C,
      hasBeenModifiedSinceMount: false
    };
  }), {
    getValidationErrorForNewValue: R
  } = a1({
    props: e10,
    validator: r,
    timezone: y,
    value: T.draft,
    onError: e10.onError
  }), E = Ge((G) => {
    const H = {
      action: G,
      dateState: T,
      hasChanged: (oe) => !t.areValuesEqual(g, G.value, oe),
      isControlled: m,
      closeOnSelect: u
    }, Y = jG(H), J = DG(H), U = MG(H);
    w((oe) => V({}, oe, {
      draft: G.value,
      lastPublishedValue: Y ? G.value : oe.lastPublishedValue,
      lastCommittedValue: J ? G.value : oe.lastCommittedValue,
      hasBeenModifiedSinceMount: true
    }));
    let ne = null;
    const se = () => (ne || (ne = {
      validationError: G.name === "setValueFromField" ? G.context.validationError : R(G.value)
    }, G.name === "setValueFromShortcut" && (ne.shortcut = G.shortcut)), ne);
    Y && x(G.value, se()), J && s && s(G.value, se()), U && h(false);
  });
  if (C !== void 0 && (T.lastControlledValue === void 0 || !t.areValuesEqual(g, T.lastControlledValue, C))) {
    const G = t.areValuesEqual(g, T.draft, C);
    w((H) => V({}, H, {
      lastControlledValue: C
    }, G ? {} : {
      lastCommittedValue: C,
      lastPublishedValue: C,
      draft: C,
      hasBeenModifiedSinceMount: true
    }));
  }
  const O = Ge(() => {
    E({
      value: t.emptyValue,
      name: "setValueFromAction",
      pickerAction: "clear"
    });
  }), I = Ge(() => {
    E({
      value: T.lastPublishedValue,
      name: "setValueFromAction",
      pickerAction: "accept"
    });
  }), P = Ge(() => {
    E({
      value: T.lastPublishedValue,
      name: "setValueFromAction",
      pickerAction: "dismiss"
    });
  }), A = Ge(() => {
    E({
      value: T.lastCommittedValue,
      name: "setValueFromAction",
      pickerAction: "cancel"
    });
  }), M = Ge(() => {
    E({
      value: t.getTodayValue(g, y, n),
      name: "setValueFromAction",
      pickerAction: "today"
    });
  }), F = Ge((G) => {
    G.preventDefault(), h(true);
  }), D = Ge((G) => {
    G == null || G.preventDefault(), h(false);
  }), N = Ge((G, H = "partial") => E({
    name: "setValueFromView",
    value: G,
    selectionState: H
  })), j = Ge((G, H, Y) => E({
    name: "setValueFromShortcut",
    value: G,
    changeImportance: H,
    shortcut: Y
  })), _ = Ge((G, H) => E({
    name: "setValueFromField",
    value: G,
    context: H
  })), z = {
    onClear: O,
    onAccept: I,
    onDismiss: P,
    onCancel: A,
    onSetToday: M,
    onOpen: F,
    onClose: D
  }, $ = {
    value: T.draft,
    onChange: _
  }, k = S.useMemo(() => t.cleanValue(g, T.draft), [g, t, T.draft]), B = {
    value: k,
    onChange: N,
    onClose: D,
    open: v
  }, ee = V({}, z, {
    value: k,
    onChange: N,
    onSelectShortcut: j,
    isValid: (G) => {
      const H = r({
        adapter: b,
        value: G,
        timezone: y,
        props: e10
      });
      return !t.hasError(H);
    }
  });
  return {
    open: v,
    fieldProps: $,
    viewProps: B,
    layoutProps: ee,
    actions: z
  };
};
var Wp = false;
function Ll({
  onChange: e10,
  onViewChange: t,
  openTo: n,
  view: o,
  views: r,
  autoFocus: s,
  focusedView: a,
  onFocusedViewChange: l
}) {
  Wp || (o != null && !r.includes(o) && (console.warn(`MUI X: \`view="${o}"\` is not a valid prop.`, `It must be an element of \`views=["${r.join('", "')}"]\`.`), Wp = true), o == null && n != null && !r.includes(n) && (console.warn(`MUI X: \`openTo="${n}"\` is not a valid prop.`, `It must be an element of \`views=["${r.join('", "')}"]\`.`), Wp = true));
  const c = S.useRef(n), u = S.useRef(r), d = S.useRef(r.includes(n) ? n : r[0]), [p, m] = Mi({
    name: "useViews",
    state: "view",
    controlled: o,
    default: d.current
  }), g = S.useRef(s ? p : null), [b, v] = Mi({
    name: "useViews",
    state: "focusedView",
    controlled: a,
    default: g.current
  });
  S.useEffect(() => {
    (c.current && c.current !== n || u.current && u.current.some((E) => !r.includes(E))) && (m(r.includes(n) ? n : r[0]), u.current = r, c.current = n);
  }, [n, m, p, r]);
  const h = r.indexOf(p), y = r[h - 1] ?? null, C = r[h + 1] ?? null, x = Ge((E, O) => {
    v(O ? E : (I) => E === I ? null : I), l == null || l(E, O);
  }), T = Ge((E) => {
    x(E, true), E !== p && (m(E), t && t(E));
  }), w = Ge(() => {
    C && T(C);
  }), R = Ge((E, O, I) => {
    const P = O === "finish", A = I ? (
      // handles case like `DateTimePicker`, where a view might return a `finish` selection state
      // but when it's not the final view given all `views` -> overall selection state should be `partial`.
      r.indexOf(I) < r.length - 1
    ) : !!C;
    if (e10(E, P && A ? "partial" : O, I), I && I !== p) {
      const F = r[r.indexOf(I) + 1];
      F && T(F);
    } else P && w();
  });
  return {
    view: p,
    setView: T,
    focusedView: b,
    setFocusedView: x,
    nextView: C,
    previousView: y,
    // Always return up-to-date default view instead of the initial one (i.e. defaultView.current)
    defaultView: r.includes(n) ? n : r[0],
    goToNextView: w,
    setValueAndGoToNextView: R
  };
}
var FG = ["className", "sx"];
var NG = ({
  props: e10,
  propsFromPickerValue: t,
  additionalViewProps: n,
  autoFocusView: o,
  rendererInterceptor: r,
  fieldRef: s
}) => {
  const {
    onChange: a,
    open: l,
    onClose: c
  } = t, {
    view: u,
    views: d,
    openTo: p,
    onViewChange: m,
    viewRenderers: g,
    timezone: b
  } = e10, v = Xe(e10, FG), {
    view: h,
    setView: y,
    defaultView: C,
    focusedView: x,
    setFocusedView: T,
    setValueAndGoToNextView: w
  } = Ll({
    view: u,
    views: d,
    openTo: p,
    onChange: a,
    onViewChange: m,
    autoFocus: o
  }), {
    hasUIView: R,
    viewModeLookup: E
  } = S.useMemo(() => d.reduce((D, N) => {
    let j;
    return g[N] != null ? j = "UI" : j = "field", D.viewModeLookup[N] = j, j === "UI" && (D.hasUIView = true), D;
  }, {
    hasUIView: false,
    viewModeLookup: {}
  }), [g, d]), O = S.useMemo(() => d.reduce((D, N) => g[N] != null && Ns(N) ? D + 1 : D, 0), [g, d]), I = E[h], P = Ge(() => I === "UI"), [A, M] = S.useState(I === "UI" ? h : null);
  return A !== h && E[h] === "UI" && M(h), sr(() => {
    I === "field" && l && (c(), setTimeout(() => {
      var D, N;
      (D = s == null ? void 0 : s.current) == null || D.setSelectedSections(h), (N = s == null ? void 0 : s.current) == null || N.focusField(h);
    }));
  }, [h]), sr(() => {
    if (!l)
      return;
    let D = h;
    I === "field" && A != null && (D = A), D !== C && E[D] === "UI" && E[C] === "UI" && (D = C), D !== h && y(D), T(D, true);
  }, [l]), {
    hasUIView: R,
    shouldRestoreFocus: P,
    layoutProps: {
      views: d,
      view: A,
      onViewChange: y
    },
    renderCurrentView: () => {
      if (A == null)
        return null;
      const D = g[A];
      if (D == null)
        return null;
      const N = V({}, v, n, t, {
        views: d,
        timezone: b,
        onChange: w,
        view: A,
        onViewChange: y,
        focusedView: x,
        onFocusedViewChange: T,
        showViewSwitcher: O > 1,
        timeViewsCount: O
      });
      return r ? r(g, A, N) : D(N);
    }
  };
};
var $G = S.createContext();
i.node, i.bool;
var mo = () => {
  const e10 = S.useContext($G);
  return e10 ?? false;
};
function b0() {
  return typeof window > "u" ? "portrait" : window.screen && window.screen.orientation && window.screen.orientation.angle ? Math.abs(window.screen.orientation.angle) === 90 ? "landscape" : "portrait" : window.orientation && Math.abs(Number(window.orientation)) === 90 ? "landscape" : "portrait";
}
var VG = (e10, t) => {
  const [n, o] = S.useState(b0);
  return sr(() => {
    const s = () => {
      o(b0());
    };
    return window.addEventListener("orientationchange", s), () => {
      window.removeEventListener("orientationchange", s);
    };
  }, []), us(e10, ["hours", "minutes", "seconds"]) ? false : (t || n) === "landscape";
};
var _G = ({
  props: e10,
  propsFromPickerValue: t,
  propsFromPickerViews: n,
  wrapperVariant: o
}) => {
  const {
    orientation: r
  } = e10, s = VG(n.views, r), a = mo();
  return {
    layoutProps: V({}, n, t, {
      isLandscape: s,
      isRtl: a,
      wrapperVariant: o,
      disabled: e10.disabled,
      readOnly: e10.readOnly
    })
  };
};
var c1 = ({
  props: e10,
  valueManager: t,
  valueType: n,
  wrapperVariant: o,
  additionalViewProps: r,
  validator: s,
  autoFocusView: a,
  rendererInterceptor: l,
  fieldRef: c
}) => {
  e10.renderInput != null && PG(["MUI X: The `renderInput` prop has been removed in version 6.0 of the Date and Time Pickers.", "You can replace it with the `textField` component slot in most cases.", "For more information, please have a look at the migration guide (https://mui.com/x/migration/migration-pickers-v5/#input-renderer-required-in-v5)."]);
  const u = kG({
    props: e10,
    valueManager: t,
    valueType: n,
    wrapperVariant: o,
    validator: s
  }), d = NG({
    props: e10,
    additionalViewProps: r,
    autoFocusView: a,
    fieldRef: c,
    propsFromPickerValue: u.viewProps,
    rendererInterceptor: l
  }), p = _G({
    props: e10,
    wrapperVariant: o,
    propsFromPickerValue: u.layoutProps,
    propsFromPickerViews: d.layoutProps
  });
  return {
    // Picker value
    open: u.open,
    actions: u.actions,
    fieldProps: u.fieldProps,
    // Picker views
    renderCurrentView: d.renderCurrentView,
    hasUIView: d.hasUIView,
    shouldRestoreFocus: d.shouldRestoreFocus,
    // Picker layout
    layoutProps: p.layoutProps
  };
};
function u1(e10) {
  return Ot("MuiPickersLayout", e10);
}
var ko = At("MuiPickersLayout", ["root", "landscape", "contentWrapper", "toolbar", "actionBar", "tabs", "shortcuts"]);
var LG = ["onAccept", "onClear", "onCancel", "onSetToday", "actions"];
function d1(e10) {
  const {
    onAccept: t,
    onClear: n,
    onCancel: o,
    onSetToday: r,
    actions: s
  } = e10, a = Xe(e10, LG), l = gn();
  if (s == null || s.length === 0)
    return null;
  const c = s == null ? void 0 : s.map((u) => {
    switch (u) {
      case "clear":
        return f.jsx(vt, {
          onClick: n,
          children: l.clearButtonLabel
        }, u);
      case "cancel":
        return f.jsx(vt, {
          onClick: o,
          children: l.cancelButtonLabel
        }, u);
      case "accept":
        return f.jsx(vt, {
          onClick: t,
          children: l.okButtonLabel
        }, u);
      case "today":
        return f.jsx(vt, {
          onClick: r,
          children: l.todayButtonLabel
        }, u);
      default:
        return null;
    }
  });
  return f.jsx(ag, V({}, a, {
    children: c
  }));
}
d1.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Ordered array of actions to display.
   * If empty, does not display that action bar.
   * @default `['cancel', 'accept']` for mobile and `[]` for desktop
   */
  actions: i.arrayOf(i.oneOf(["accept", "cancel", "clear", "today"]).isRequired),
  /**
   * If `true`, the actions do not have additional margin.
   * @default false
   */
  disableSpacing: i.bool,
  onAccept: i.func.isRequired,
  onCancel: i.func.isRequired,
  onClear: i.func.isRequired,
  onSetToday: i.func.isRequired,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
};
var gl = 36;
var Ad = 2;
var jd = 320;
var BG = 280;
var Dd = 336;
var p1 = 232;
var Ra = 48;
var zG = ["items", "changeImportance", "isLandscape", "onChange", "isValid"];
var WG = ["getValue"];
function f1(e10) {
  const {
    items: t,
    changeImportance: n = "accept",
    onChange: o,
    isValid: r
  } = e10, s = Xe(e10, zG);
  if (t == null || t.length === 0)
    return null;
  const a = t.map((l) => {
    let {
      getValue: c
    } = l, u = Xe(l, WG);
    const d = c({
      isValid: r
    });
    return V({}, u, {
      label: u.label,
      onClick: () => {
        o(d, n, u);
      },
      disabled: !r(d)
    });
  });
  return f.jsx(ug, V({
    dense: true,
    sx: [{
      maxHeight: Dd,
      maxWidth: 200,
      overflow: "auto"
    }, ...Array.isArray(s.sx) ? s.sx : [s.sx]]
  }, s, {
    children: a.map((l) => f.jsx(zC, {
      children: f.jsx(Ms, V({}, l))
    }, l.id ?? l.label))
  }));
}
f1.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Importance of the change when picking a shortcut:
   * - "accept": fires `onChange`, fires `onAccept` and closes the picker.
   * - "set": fires `onChange` but do not fire `onAccept` and does not close the picker.
   * @default "accept"
   */
  changeImportance: i.oneOf(["accept", "set"]),
  className: i.string,
  component: i.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used for
   * the list and list items.
   * The prop is available to descendant components as the `dense` context.
   * @default false
   */
  dense: i.bool,
  /**
   * If `true`, vertical padding is removed from the list.
   * @default false
   */
  disablePadding: i.bool,
  isLandscape: i.bool.isRequired,
  isValid: i.func.isRequired,
  /**
   * Ordered array of shortcuts to display.
   * If empty, does not display the shortcuts.
   * @default []
   */
  items: i.arrayOf(i.shape({
    getValue: i.func.isRequired,
    id: i.string,
    label: i.string.isRequired
  })),
  onChange: i.func.isRequired,
  style: i.object,
  /**
   * The content of the subheader, normally `ListSubheader`.
   */
  subheader: i.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object])
};
function HG(e10) {
  return e10.view !== null;
}
var GG = (e10) => {
  const {
    classes: t,
    isLandscape: n
  } = e10;
  return Tt({
    root: ["root", n && "landscape"],
    contentWrapper: ["contentWrapper"],
    toolbar: ["toolbar"],
    actionBar: ["actionBar"],
    tabs: ["tabs"],
    landscape: ["landscape"],
    shortcuts: ["shortcuts"]
  }, u1, t);
};
var m1 = (e10) => {
  const {
    wrapperVariant: t,
    onAccept: n,
    onClear: o,
    onCancel: r,
    onSetToday: s,
    view: a,
    views: l,
    onViewChange: c,
    value: u,
    onChange: d,
    onSelectShortcut: p,
    isValid: m,
    isLandscape: g,
    disabled: b,
    readOnly: v,
    children: h,
    slots: y,
    slotProps: C
    // TODO: Remove this "as" hack. It get introduced to mark `value` prop in PickersLayoutProps as not required.
    // The true type should be
    // - For pickers value: TDate | null
    // - For range pickers value: [TDate | null, TDate | null]
  } = e10, x = GG(e10), T = (y == null ? void 0 : y.actionBar) ?? d1, w = Pt({
    elementType: T,
    externalSlotProps: C == null ? void 0 : C.actionBar,
    additionalProps: {
      onAccept: n,
      onClear: o,
      onCancel: r,
      onSetToday: s,
      actions: t === "desktop" ? [] : ["cancel", "accept"]
    },
    className: x.actionBar,
    ownerState: V({}, e10, {
      wrapperVariant: t
    })
  }), R = f.jsx(T, V({}, w)), E = y == null ? void 0 : y.toolbar, O = Pt({
    elementType: E,
    externalSlotProps: C == null ? void 0 : C.toolbar,
    additionalProps: {
      isLandscape: g,
      onChange: d,
      value: u,
      view: a,
      onViewChange: c,
      views: l,
      disabled: b,
      readOnly: v
    },
    className: x.toolbar,
    ownerState: V({}, e10, {
      wrapperVariant: t
    })
  }), I = HG(O) && E ? f.jsx(E, V({}, O)) : null, P = h, A = y == null ? void 0 : y.tabs, M = a && A ? f.jsx(A, V({
    view: a,
    onViewChange: c,
    className: x.tabs
  }, C == null ? void 0 : C.tabs)) : null, F = (y == null ? void 0 : y.shortcuts) ?? f1, D = Pt({
    elementType: F,
    externalSlotProps: C == null ? void 0 : C.shortcuts,
    additionalProps: {
      isValid: m,
      isLandscape: g,
      onChange: p
    },
    className: x.shortcuts,
    ownerState: {
      isValid: m,
      isLandscape: g,
      onChange: p,
      wrapperVariant: t
    }
  }), N = a && F ? f.jsx(F, V({}, D)) : null;
  return {
    toolbar: I,
    content: P,
    tabs: M,
    actionBar: R,
    shortcuts: N
  };
};
var UG = (e10) => {
  const {
    isLandscape: t,
    classes: n
  } = e10;
  return Tt({
    root: ["root", t && "landscape"],
    contentWrapper: ["contentWrapper"]
  }, u1, n);
};
var g1 = K("div", {
  name: "MuiPickersLayout",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})({
  display: "grid",
  gridAutoColumns: "max-content auto max-content",
  gridAutoRows: "max-content auto max-content",
  [`& .${ko.actionBar}`]: {
    gridColumn: "1 / 4",
    gridRow: 3
  },
  variants: [{
    props: {
      isLandscape: true
    },
    style: {
      [`& .${ko.toolbar}`]: {
        gridColumn: 1,
        gridRow: "2 / 3"
      },
      [`.${ko.shortcuts}`]: {
        gridColumn: "2 / 4",
        gridRow: 1
      }
    }
  }, {
    props: {
      isLandscape: true,
      isRtl: true
    },
    style: {
      [`& .${ko.toolbar}`]: {
        gridColumn: 3
      }
    }
  }, {
    props: {
      isLandscape: false
    },
    style: {
      [`& .${ko.toolbar}`]: {
        gridColumn: "2 / 4",
        gridRow: 1
      },
      [`& .${ko.shortcuts}`]: {
        gridColumn: 1,
        gridRow: "2 / 3"
      }
    }
  }, {
    props: {
      isLandscape: false,
      isRtl: true
    },
    style: {
      [`& .${ko.shortcuts}`]: {
        gridColumn: 3
      }
    }
  }]
});
var h1 = K("div", {
  name: "MuiPickersLayout",
  slot: "ContentWrapper",
  overridesResolver: (e10, t) => t.contentWrapper
})({
  gridColumn: 2,
  gridRow: 2,
  display: "flex",
  flexDirection: "column"
});
var nh = S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiPickersLayout"
  }), {
    toolbar: r,
    content: s,
    tabs: a,
    actionBar: l,
    shortcuts: c
  } = m1(o), {
    sx: u,
    className: d,
    isLandscape: p,
    wrapperVariant: m
  } = o, g = UG(o);
  return f.jsxs(g1, {
    ref: n,
    sx: u,
    className: be(d, g.root),
    ownerState: o,
    children: [p ? c : r, p ? r : c, f.jsx(h1, {
      className: g.contentWrapper,
      children: m === "desktop" ? f.jsxs(S.Fragment, {
        children: [s, a]
      }) : f.jsxs(S.Fragment, {
        children: [a, s]
      })
    }), l]
  });
});
nh.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  className: i.string,
  disabled: i.bool,
  isLandscape: i.bool.isRequired,
  /**
   * `true` if the application is in right-to-left direction.
   */
  isRtl: i.bool.isRequired,
  isValid: i.func.isRequired,
  onAccept: i.func.isRequired,
  onCancel: i.func.isRequired,
  onChange: i.func.isRequired,
  onClear: i.func.isRequired,
  onClose: i.func.isRequired,
  onDismiss: i.func.isRequired,
  onOpen: i.func.isRequired,
  onSelectShortcut: i.func.isRequired,
  onSetToday: i.func.isRequired,
  onViewChange: i.func.isRequired,
  /**
   * Force rendering in particular orientation.
   */
  orientation: i.oneOf(["landscape", "portrait"]),
  readOnly: i.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: i.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  value: i.any,
  view: i.oneOf(["day", "hours", "meridiem", "minutes", "month", "seconds", "year"]),
  views: i.arrayOf(i.oneOf(["day", "hours", "meridiem", "minutes", "month", "seconds", "year"]).isRequired).isRequired,
  wrapperVariant: i.oneOf(["desktop", "mobile"])
};
var XG = ["props", "getOpenDialogAriaText"];
var YG = ["ownerState"];
var ZG = ["ownerState"];
var oh = (e10) => {
  var L;
  let {
    props: t,
    getOpenDialogAriaText: n
  } = e10, o = Xe(e10, XG);
  const {
    slots: r,
    slotProps: s,
    className: a,
    sx: l,
    format: c,
    formatDensity: u,
    enableAccessibleFieldDOMStructure: d,
    selectedSections: p,
    onSelectedSectionsChange: m,
    timezone: g,
    name: b,
    label: v,
    inputRef: h,
    readOnly: y,
    disabled: C,
    autoFocus: x,
    localeText: T,
    reduceAnimations: w
  } = t, R = S.useRef(null), E = S.useRef(null), O = qs(), I = ((L = s == null ? void 0 : s.toolbar) == null ? void 0 : L.hidden) ?? false, {
    open: P,
    actions: A,
    hasUIView: M,
    layoutProps: F,
    renderCurrentView: D,
    shouldRestoreFocus: N,
    fieldProps: j
  } = c1(V({}, o, {
    props: t,
    fieldRef: E,
    autoFocusView: true,
    additionalViewProps: {},
    wrapperVariant: "desktop"
  })), _ = {
    open: P
  }, z = r.inputAdornment ?? Or, $ = Pt({
    elementType: z,
    externalSlotProps: s == null ? void 0 : s.inputAdornment,
    additionalProps: {
      position: "end"
    },
    ownerState: t
  }), k = Xe($, YG), B = r.openPickerButton ?? lt, Q = Pt({
    elementType: B,
    externalSlotProps: s == null ? void 0 : s.openPickerButton,
    additionalProps: {
      disabled: C || y,
      onClick: P ? A.onClose : A.onOpen,
      "aria-label": n(j.value),
      edge: k.position
    },
    ownerState: t
  }), ee = Xe(Q, ZG), G = r.openPickerIcon, H = Pt({
    elementType: G,
    externalSlotProps: s == null ? void 0 : s.openPickerIcon,
    ownerState: _
  }), Y = r.field, J = Pt({
    elementType: Y,
    externalSlotProps: s == null ? void 0 : s.field,
    additionalProps: V({}, j, I && {
      id: O
    }, {
      readOnly: y,
      disabled: C,
      className: a,
      sx: l,
      format: c,
      formatDensity: u,
      enableAccessibleFieldDOMStructure: d,
      selectedSections: p,
      onSelectedSectionsChange: m,
      timezone: g,
      label: v,
      name: b,
      autoFocus: x && !t.open,
      focused: P ? true : void 0
    }, h ? {
      inputRef: h
    } : {}),
    ownerState: t
  });
  M && (J.InputProps = V({}, J.InputProps, {
    ref: R
  }, !t.disableOpenPicker && {
    [`${k.position}Adornment`]: f.jsx(z, V({}, k, {
      children: f.jsx(B, V({}, ee, {
        children: f.jsx(G, V({}, H))
      }))
    }))
  }));
  const U = V({
    textField: r.textField,
    clearIcon: r.clearIcon,
    clearButton: r.clearButton
  }, J.slots), ne = r.layout ?? nh;
  let se = O;
  I && (v ? se = `${O}-label` : se = void 0);
  const oe = V({}, s, {
    toolbar: V({}, s == null ? void 0 : s.toolbar, {
      titleId: O
    }),
    popper: V({
      "aria-labelledby": se
    }, s == null ? void 0 : s.popper)
  }), W = Bn(E, J.unstableFieldRef);
  return {
    renderPicker: () => f.jsxs(Kg, {
      localeText: T,
      children: [f.jsx(Y, V({}, J, {
        slots: U,
        slotProps: oe,
        unstableFieldRef: W
      })), f.jsx(OG, V({
        role: "dialog",
        placement: "bottom-start",
        anchorEl: R.current
      }, A, {
        open: P,
        slots: r,
        slotProps: oe,
        shouldRestoreFocus: N,
        reduceAnimations: w,
        children: f.jsx(ne, V({}, F, oe == null ? void 0 : oe.layout, {
          slots: r,
          slotProps: oe,
          children: D()
        }))
      }))]
    })
  };
};
var qG = ze(f.jsx("path", {
  d: "M7 10l5 5 5-5z"
}), "ArrowDropDown");
var JG = ze(f.jsx("path", {
  d: "M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z"
}), "ArrowLeft");
var KG = ze(f.jsx("path", {
  d: "M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"
}), "ArrowRight");
var b1 = ze(f.jsx("path", {
  d: "M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z"
}), "Calendar");
var QG = ze(f.jsxs(S.Fragment, {
  children: [f.jsx("path", {
    d: "M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
  }), f.jsx("path", {
    d: "M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z"
  })]
}), "Clock");
var eU = ze(f.jsx("path", {
  d: "M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z"
}), "DateRange");
var tU = ze(f.jsxs(S.Fragment, {
  children: [f.jsx("path", {
    d: "M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
  }), f.jsx("path", {
    d: "M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z"
  })]
}), "Time");
var nU = ze(f.jsx("path", {
  d: "M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}), "Clear");
var oU = ({
  utils: e10,
  format: t
}) => {
  let n = 10, o = t, r = e10.expandFormat(t);
  for (; r !== o; )
    if (o = r, r = e10.expandFormat(o), n -= 1, n < 0)
      throw new Error("MUI X: The format expansion seems to be in an infinite loop. Please open an issue with the format passed to the picker component.");
  return r;
};
var rU = ({
  utils: e10,
  expandedFormat: t
}) => {
  const n = [], {
    start: o,
    end: r
  } = e10.escapedCharacters, s = new RegExp(`(\\${o}[^\\${r}]*\\${r})+`, "g");
  let a = null;
  for (; a = s.exec(t); )
    n.push({
      start: a.index,
      end: s.lastIndex - 1
    });
  return n;
};
var iU = (e10, t, n, o, r) => {
  switch (o.type) {
    case "year":
      return n.fieldYearPlaceholder({
        digitAmount: e10.formatByString(e10.date(void 0, t), r).length,
        format: r
      });
    case "month":
      return n.fieldMonthPlaceholder({
        contentType: o.contentType,
        format: r
      });
    case "day":
      return n.fieldDayPlaceholder({
        format: r
      });
    case "weekDay":
      return n.fieldWeekDayPlaceholder({
        contentType: o.contentType,
        format: r
      });
    case "hours":
      return n.fieldHoursPlaceholder({
        format: r
      });
    case "minutes":
      return n.fieldMinutesPlaceholder({
        format: r
      });
    case "seconds":
      return n.fieldSecondsPlaceholder({
        format: r
      });
    case "meridiem":
      return n.fieldMeridiemPlaceholder({
        format: r
      });
    default:
      return r;
  }
};
var sU = ({
  utils: e10,
  timezone: t,
  date: n,
  shouldRespectLeadingZeros: o,
  localeText: r,
  localizedDigits: s,
  now: a,
  token: l,
  startSeparator: c
}) => {
  if (l === "")
    throw new Error("MUI X: Should not call `commitToken` with an empty token");
  const u = Yg(e10, l), d = t1(e10, t, u.contentType, u.type, l), p = o ? d : u.contentType === "digit", m = n != null && e10.isValid(n);
  let g = m ? e10.formatByString(n, l) : "", b = null;
  if (p)
    if (d)
      b = g === "" ? e10.formatByString(a, l).length : g.length;
    else {
      if (u.maxLength == null)
        throw new Error(`MUI X: The token ${l} should have a 'maxDigitNumber' property on it's adapter`);
      b = u.maxLength, m && (g = Zg(Kw(ki(g, s), b), s));
    }
  return V({}, u, {
    format: l,
    maxLength: b,
    value: g,
    placeholder: iU(e10, t, r, u, l),
    hasLeadingZerosInFormat: d,
    hasLeadingZerosInInput: p,
    startSeparator: c,
    endSeparator: "",
    modified: false
  });
};
var aU = (e10) => {
  var g;
  const {
    utils: t,
    expandedFormat: n,
    escapedParts: o
  } = e10, r = t.date(void 0), s = [];
  let a = "";
  const l = Object.keys(t.formatTokenMap).sort((b, v) => v.length - b.length), c = /^([a-zA-Z]+)/, u = new RegExp(`^(${l.join("|")})*$`), d = new RegExp(`^(${l.join("|")})`), p = (b) => o.find((v) => v.start <= b && v.end >= b);
  let m = 0;
  for (; m < n.length; ) {
    const b = p(m), v = b != null, h = (g = c.exec(n.slice(m))) == null ? void 0 : g[1];
    if (!v && h != null && u.test(h)) {
      let y = h;
      for (; y.length > 0; ) {
        const C = d.exec(y)[1];
        y = y.slice(C.length), s.push(sU(V({}, e10, {
          now: r,
          token: C,
          startSeparator: a
        }))), a = "";
      }
      m += h.length;
    } else {
      const y = n[m];
      v && (b == null ? void 0 : b.start) === m || (b == null ? void 0 : b.end) === m || (s.length === 0 ? a += y : s[s.length - 1].endSeparator += y), m += 1;
    }
  }
  return s.length === 0 && a.length > 0 && s.push({
    type: "empty",
    contentType: "letter",
    maxLength: null,
    format: "",
    value: "",
    placeholder: "",
    hasLeadingZerosInFormat: false,
    hasLeadingZerosInInput: false,
    startSeparator: a,
    endSeparator: "",
    modified: false
  }), s;
};
var lU = ({
  isRtl: e10,
  formatDensity: t,
  sections: n
}) => n.map((o) => {
  const r = (s) => {
    let a = s;
    return e10 && a !== null && a.includes(" ") && (a = `⁩${a}⁦`), t === "spacious" && ["/", ".", "-"].includes(a) && (a = ` ${a} `), a;
  };
  return o.startSeparator = r(o.startSeparator), o.endSeparator = r(o.endSeparator), o;
});
var v0 = (e10) => {
  let t = oU(e10);
  e10.isRtl && e10.enableAccessibleFieldDOMStructure && (t = t.split(" ").reverse().join(" "));
  const n = rU(V({}, e10, {
    expandedFormat: t
  })), o = aU(V({}, e10, {
    expandedFormat: t,
    escapedParts: n
  }));
  return lU(V({}, e10, {
    sections: o
  }));
};
var cU = (e10) => {
  const t = gt(), n = gn(), o = Ui(), r = mo(), {
    valueManager: s,
    fieldValueManager: a,
    valueType: l,
    validator: c,
    internalProps: u,
    internalProps: {
      value: d,
      defaultValue: p,
      referenceDate: m,
      onChange: g,
      format: b,
      formatDensity: v = "dense",
      selectedSections: h,
      onSelectedSectionsChange: y,
      shouldRespectLeadingZeros: C = false,
      timezone: x,
      enableAccessibleFieldDOMStructure: T = false
    }
  } = e10, {
    timezone: w,
    value: R,
    handleValueChange: E
  } = th({
    timezone: x,
    value: d,
    defaultValue: p,
    onChange: g,
    valueManager: s
  }), O = S.useMemo(() => G3(t), [t]), I = S.useMemo(() => q3(t, O, w), [t, O, w]), P = S.useCallback((H, Y = null) => a.getSectionsFromValue(t, H, Y, (J) => v0({
    utils: t,
    timezone: w,
    localeText: n,
    localizedDigits: O,
    format: b,
    date: J,
    formatDensity: v,
    shouldRespectLeadingZeros: C,
    enableAccessibleFieldDOMStructure: T,
    isRtl: r
  })), [a, b, n, O, r, C, t, v, w, T]), [A, M] = S.useState(() => {
    const H = P(R);
    d0(H, l);
    const Y = {
      sections: H,
      value: R,
      referenceValue: s.emptyValue,
      tempValueStrAndroid: null
    }, J = B3(H), U = s.getInitialReferenceValue({
      referenceDate: m,
      value: R,
      utils: t,
      props: u,
      granularity: J,
      timezone: w
    });
    return V({}, Y, {
      referenceValue: U
    });
  }), [F, D] = Mi({
    controlled: h,
    default: null,
    name: "useField",
    state: "selectedSections"
  }), N = (H) => {
    D(H), y == null || y(H);
  }, j = S.useMemo(() => cm(F, A.sections), [F, A.sections]), _ = j === "all" ? 0 : j, z = ({
    value: H,
    referenceValue: Y,
    sections: J
  }) => {
    if (M((ne) => V({}, ne, {
      sections: J,
      value: H,
      referenceValue: Y,
      tempValueStrAndroid: null
    })), s.areValuesEqual(t, A.value, H))
      return;
    const U = {
      validationError: c({
        adapter: o,
        value: H,
        timezone: w,
        props: u
      })
    };
    E(H, U);
  }, $ = (H, Y) => {
    const J = [...A.sections];
    return J[H] = V({}, J[H], {
      value: Y,
      modified: true
    }), J;
  }, k = () => {
    z({
      value: s.emptyValue,
      referenceValue: A.referenceValue,
      sections: P(s.emptyValue)
    });
  }, B = () => {
    if (_ == null)
      return;
    const H = A.sections[_], Y = a.getActiveDateManager(t, A, H), U = Y.getSections(A.sections).filter((W) => W.value !== "").length === (H.value === "" ? 0 : 1), ne = $(_, ""), se = U ? null : t.getInvalidDate(), oe = Y.getNewValuesFromNewActiveDate(se);
    z(V({}, oe, {
      sections: ne
    }));
  }, Q = (H) => {
    const Y = (ne, se) => {
      const oe = t.parse(ne, b);
      if (oe == null || !t.isValid(oe))
        return null;
      const W = v0({
        utils: t,
        timezone: w,
        localeText: n,
        localizedDigits: O,
        format: b,
        date: oe,
        formatDensity: v,
        shouldRespectLeadingZeros: C,
        enableAccessibleFieldDOMStructure: T,
        isRtl: r
      });
      return f0(t, w, oe, W, se, false);
    }, J = a.parseValueStr(H, A.referenceValue, Y), U = a.updateReferenceValue(t, J, A.referenceValue);
    z({
      value: J,
      referenceValue: U,
      sections: P(J, A.sections)
    });
  }, ee = ({
    activeSection: H,
    newSectionValue: Y,
    shouldGoToNextSection: J
  }) => {
    J && _ < A.sections.length - 1 && N(_ + 1);
    const U = a.getActiveDateManager(t, A, H), ne = $(_, Y), se = U.getSections(ne), oe = X3(t, se, O);
    let W, Z;
    if (oe != null && t.isValid(oe)) {
      const L = f0(t, w, oe, se, U.referenceDate, true);
      W = U.getNewValuesFromNewActiveDate(L), Z = true;
    } else
      W = U.getNewValuesFromNewActiveDate(oe), Z = (oe != null && !t.isValid(oe)) != (U.date != null && !t.isValid(U.date));
    return Z ? z(V({}, W, {
      sections: ne
    })) : M((L) => V({}, L, W, {
      sections: ne,
      tempValueStrAndroid: null
    }));
  }, G = (H) => M((Y) => V({}, Y, {
    tempValueStrAndroid: H
  }));
  return S.useEffect(() => {
    const H = P(A.value);
    d0(H, l), M((Y) => V({}, Y, {
      sections: H
    }));
  }, [b, t.locale, r]), S.useEffect(() => {
    let H;
    s.areValuesEqual(t, A.value, R) ? H = s.getTimezone(t, A.value) !== s.getTimezone(t, R) : H = true, H && M((Y) => V({}, Y, {
      value: R,
      referenceValue: a.updateReferenceValue(t, R, Y.referenceValue),
      sections: P(R)
    }));
  }, [R]), {
    state: A,
    activeSectionIndex: _,
    parsedSelectedSections: j,
    setSelectedSections: N,
    clearValue: k,
    clearActiveSection: B,
    updateSectionValue: ee,
    updateValueFromValueStr: Q,
    setTempAndroidValueStr: G,
    getSectionsFromValue: P,
    sectionsValueBoundaries: I,
    localizedDigits: O,
    timezone: w
  };
};
var uU = 5e3;
var ss = (e10) => e10.saveQuery != null;
var dU = ({
  sections: e10,
  updateSectionValue: t,
  sectionsValueBoundaries: n,
  localizedDigits: o,
  setTempAndroidValueStr: r,
  timezone: s
}) => {
  const a = gt(), [l, c] = S.useState(null), u = Ge(() => c(null));
  S.useEffect(() => {
    var b;
    l != null && ((b = e10[l.sectionIndex]) == null ? void 0 : b.type) !== l.sectionType && u();
  }, [e10, l, u]), S.useEffect(() => {
    if (l != null) {
      const b = setTimeout(() => u(), uU);
      return () => {
        clearTimeout(b);
      };
    }
    return () => {
    };
  }, [l, u]);
  const d = ({
    keyPressed: b,
    sectionIndex: v
  }, h, y) => {
    const C = b.toLowerCase(), x = e10[v];
    if (l != null && (!y || y(l.value)) && l.sectionIndex === v) {
      const w = `${l.value}${C}`, R = h(w, x);
      if (!ss(R))
        return c({
          sectionIndex: v,
          value: w,
          sectionType: x.type
        }), R;
    }
    const T = h(C, x);
    return ss(T) && !T.saveQuery ? (u(), null) : (c({
      sectionIndex: v,
      value: C,
      sectionType: x.type
    }), ss(T) ? null : T);
  }, p = (b) => {
    const v = (C, x, T) => {
      const w = x.filter((R) => R.toLowerCase().startsWith(T));
      return w.length === 0 ? {
        saveQuery: false
      } : {
        sectionValue: w[0],
        shouldGoToNextSection: w.length === 1
      };
    }, h = (C, x, T, w) => {
      const R = (E) => Jw(a, s, x.type, E);
      if (x.contentType === "letter")
        return v(x.format, R(x.format), C);
      if (T && w != null && Yg(a, T).contentType === "letter") {
        const E = R(T), O = v(T, E, C);
        return ss(O) ? {
          saveQuery: false
        } : V({}, O, {
          sectionValue: w(O.sectionValue, E)
        });
      }
      return {
        saveQuery: false
      };
    };
    return d(b, (C, x) => {
      switch (x.type) {
        case "month": {
          const T = (w) => c0(a, w, a.formats.month, x.format);
          return h(C, x, a.formats.month, T);
        }
        case "weekDay": {
          const T = (w, R) => R.indexOf(w).toString();
          return h(C, x, a.formats.weekday, T);
        }
        case "meridiem":
          return h(C, x);
        default:
          return {
            saveQuery: false
          };
      }
    });
  }, m = (b) => {
    const v = (y, C) => {
      const x = ki(y, o), T = Number(x), w = n[C.type]({
        currentDate: null,
        format: C.format,
        contentType: C.contentType
      });
      if (T > w.maximum)
        return {
          saveQuery: false
        };
      if (T < w.minimum)
        return {
          saveQuery: true
        };
      const R = T * 10 > w.maximum || x.length === w.maximum.toString().length;
      return {
        sectionValue: Qw(a, T, w, o, C),
        shouldGoToNextSection: R
      };
    };
    return d(b, (y, C) => {
      if (C.contentType === "digit" || C.contentType === "digit-with-letter")
        return v(y, C);
      if (C.type === "month") {
        const x = t1(a, s, "digit", "month", "MM"), T = v(y, {
          type: C.type,
          format: "MM",
          hasLeadingZerosInFormat: x,
          hasLeadingZerosInInput: true,
          contentType: "digit",
          maxLength: 2
        });
        if (ss(T))
          return T;
        const w = c0(a, T.sectionValue, "MM", C.format);
        return V({}, T, {
          sectionValue: w
        });
      }
      if (C.type === "weekDay") {
        const x = v(y, C);
        if (ss(x))
          return x;
        const T = Od(a, s, C.format)[Number(x.sectionValue) - 1];
        return V({}, x, {
          sectionValue: T
        });
      }
      return {
        saveQuery: false
      };
    }, (y) => l0(y, o));
  };
  return {
    applyCharacterEditing: Ge((b) => {
      const v = e10[b.sectionIndex], y = l0(b.keyPressed, o) ? m(V({}, b, {
        keyPressed: Zg(b.keyPressed, o)
      })) : p(b);
      if (y == null) {
        r(null);
        return;
      }
      t({
        activeSection: v,
        newSectionValue: y.sectionValue,
        shouldGoToNextSection: y.shouldGoToNextSection
      });
    }),
    resetCharacterQuery: u
  };
};
var pU = (e10) => {
  const {
    internalProps: {
      disabled: t,
      readOnly: n = false
    },
    forwardedProps: {
      sectionListRef: o,
      onBlur: r,
      onClick: s,
      onFocus: a,
      onInput: l,
      onPaste: c,
      focused: u,
      autoFocus: d = false
    },
    fieldValueManager: p,
    applyCharacterEditing: m,
    resetCharacterQuery: g,
    setSelectedSections: b,
    parsedSelectedSections: v,
    state: h,
    clearActiveSection: y,
    clearValue: C,
    updateSectionValue: x,
    updateValueFromValueStr: T,
    sectionOrder: w,
    areAllSectionsEmpty: R,
    sectionsValueBoundaries: E
  } = e10, O = S.useRef(null), I = Bn(o, O), P = gn(), A = gt(), M = qs(), [F, D] = S.useState(false), N = S.useMemo(() => ({
    syncSelectionToDOM: () => {
      if (!O.current)
        return;
      const Z = document.getSelection();
      if (!Z)
        return;
      if (v == null) {
        Z.rangeCount > 0 && O.current.getRoot().contains(Z.getRangeAt(0).startContainer) && Z.removeAllRanges(), F && O.current.getRoot().blur();
        return;
      }
      if (!O.current.getRoot().contains(no(document)))
        return;
      const L = new window.Range();
      let ie;
      v === "all" ? ie = O.current.getRoot() : h.sections[v].type === "empty" ? ie = O.current.getSectionContainer(v) : ie = O.current.getSectionContent(v), L.selectNodeContents(ie), ie.focus(), Z.removeAllRanges(), Z.addRange(L);
    },
    getActiveSectionIndexFromDOM: () => {
      const Z = no(document);
      return !Z || !O.current || !O.current.getRoot().contains(Z) ? null : O.current.getSectionIndexFromDOMElement(Z);
    },
    focusField: (Z = 0) => {
      if (!O.current)
        return;
      const L = cm(Z, h.sections);
      D(true), O.current.getSectionContent(L).focus();
    },
    setSelectedSections: (Z) => {
      if (!O.current)
        return;
      const L = cm(Z, h.sections);
      D((L === "all" ? 0 : L) !== null), b(Z);
    },
    isFieldFocused: () => {
      const Z = no(document);
      return !!O.current && O.current.getRoot().contains(Z);
    }
  }), [v, b, h.sections, F]), j = Ge((Z) => {
    if (!O.current)
      return;
    const L = h.sections[Z];
    O.current.getSectionContent(Z).innerHTML = L.value || L.placeholder, N.syncSelectionToDOM();
  }), _ = Ge((Z, ...L) => {
    Z.isDefaultPrevented() || !O.current || (D(true), s == null || s(Z, ...L), v === "all" ? setTimeout(() => {
      const ie = document.getSelection().getRangeAt(0).startOffset;
      if (ie === 0) {
        b(w.startIndex);
        return;
      }
      let te = 0, le = 0;
      for (; le < ie && te < h.sections.length; ) {
        const ue = h.sections[te];
        te += 1, le += `${ue.startSeparator}${ue.value || ue.placeholder}${ue.endSeparator}`.length;
      }
      b(te - 1);
    }) : F ? O.current.getRoot().contains(Z.target) || b(w.startIndex) : (D(true), b(w.startIndex)));
  }), z = Ge((Z) => {
    if (l == null || l(Z), !O.current || v !== "all")
      return;
    const ie = Z.target.textContent ?? "";
    O.current.getRoot().innerHTML = h.sections.map((te) => `${te.startSeparator}${te.value || te.placeholder}${te.endSeparator}`).join(""), N.syncSelectionToDOM(), ie.length === 0 || ie.charCodeAt(0) === 10 ? (g(), C(), b("all")) : ie.length > 1 ? T(ie) : m({
      keyPressed: ie,
      sectionIndex: 0
    });
  }), $ = Ge((Z) => {
    if (c == null || c(Z), n || v !== "all") {
      Z.preventDefault();
      return;
    }
    const L = Z.clipboardData.getData("text");
    Z.preventDefault(), g(), T(L);
  }), k = Ge((...Z) => {
    if (a == null || a(...Z), F || !O.current)
      return;
    D(true), O.current.getSectionIndexFromDOMElement(no(document)) != null || b(w.startIndex);
  }), B = Ge((...Z) => {
    r == null || r(...Z), setTimeout(() => {
      if (!O.current)
        return;
      const L = no(document);
      !O.current.getRoot().contains(L) && (D(false), b(null));
    });
  }), Q = Ge((Z) => (L) => {
    L.isDefaultPrevented() || b(Z);
  }), ee = Ge((Z) => {
    Z.preventDefault();
  }), G = Ge((Z) => () => {
    b(Z);
  }), H = Ge((Z) => {
    if (Z.preventDefault(), n || t || typeof v != "number")
      return;
    const L = h.sections[v], ie = Z.clipboardData.getData("text"), te = /^[a-zA-Z]+$/.test(ie), le = /^[0-9]+$/.test(ie), ue = /^(([a-zA-Z]+)|)([0-9]+)(([a-zA-Z]+)|)$/.test(ie);
    L.contentType === "letter" && te || L.contentType === "digit" && le || L.contentType === "digit-with-letter" && ue ? (g(), x({
      activeSection: L,
      newSectionValue: ie,
      shouldGoToNextSection: true
    })) : !te && !le && (g(), T(ie));
  }), Y = Ge((Z) => {
    Z.preventDefault(), Z.dataTransfer.dropEffect = "none";
  }), J = Ge((Z) => {
    if (!O.current)
      return;
    const L = Z.target, ie = L.textContent ?? "", te = O.current.getSectionIndexFromDOMElement(L), le = h.sections[te];
    if (n || !O.current) {
      j(te);
      return;
    }
    if (ie.length === 0) {
      if (le.value === "") {
        j(te);
        return;
      }
      const ue = Z.nativeEvent.inputType;
      if (ue === "insertParagraph" || ue === "insertLineBreak") {
        j(te);
        return;
      }
      g(), y();
      return;
    }
    m({
      keyPressed: ie,
      sectionIndex: te
    }), j(te);
  });
  sr(() => {
    if (!(!F || !O.current)) {
      if (v === "all")
        O.current.getRoot().focus();
      else if (typeof v == "number") {
        const Z = O.current.getSectionContent(v);
        Z && Z.focus();
      }
    }
  }, [v, F]);
  const U = S.useMemo(() => h.sections.reduce((Z, L) => (Z[L.type] = E[L.type]({
    currentDate: null,
    contentType: L.contentType,
    format: L.format
  }), Z), {}), [E, h.sections]), ne = v === "all", se = S.useMemo(() => h.sections.map((Z, L) => {
    const ie = !ne && !t && !n;
    return {
      container: {
        "data-sectionindex": L,
        onClick: Q(L)
      },
      content: {
        tabIndex: ne || L > 0 ? -1 : 0,
        contentEditable: !ne && !t && !n,
        role: "spinbutton",
        id: `${M}-${Z.type}`,
        "aria-labelledby": `${M}-${Z.type}`,
        "aria-readonly": n,
        "aria-valuenow": tG(Z, A),
        "aria-valuemin": U[Z.type].minimum,
        "aria-valuemax": U[Z.type].maximum,
        "aria-valuetext": Z.value ? eG(Z, A) : P.empty,
        "aria-label": P[Z.type],
        "aria-disabled": t,
        spellCheck: ie ? false : void 0,
        autoCapitalize: ie ? "off" : void 0,
        autoCorrect: ie ? "off" : void 0,
        [parseInt(S.version, 10) >= 17 ? "enterKeyHint" : "enterkeyhint"]: ie ? "next" : void 0,
        children: Z.value || Z.placeholder,
        onInput: J,
        onPaste: H,
        onFocus: G(L),
        onDragOver: Y,
        onMouseUp: ee,
        inputMode: Z.contentType === "letter" ? "text" : "numeric"
      },
      before: {
        children: Z.startSeparator
      },
      after: {
        children: Z.endSeparator
      }
    };
  }), [h.sections, G, H, Y, J, Q, ee, t, n, ne, P, A, U, M]), oe = Ge((Z) => {
    T(Z.target.value);
  }), W = S.useMemo(() => R ? "" : p.getV7HiddenInputValueFromSections(h.sections), [R, h.sections, p]);
  return S.useEffect(() => {
    if (O.current == null)
      throw new Error(["MUI X: The `sectionListRef` prop has not been initialized by `PickersSectionList`", "You probably tried to pass a component to the `textField` slot that contains an `<input />` element instead of a `PickersSectionList`.", "", "If you want to keep using an `<input />` HTML element for the editing, please remove the `enableAccessibleFieldDOMStructure` prop from your picker or field component:", "", "<DatePicker slots={{ textField: MyCustomTextField }} />", "", "Learn more about the field accessible DOM structure on the MUI documentation: https://mui.com/x/react-date-pickers/fields/#fields-to-edit-a-single-element"].join(`
`));
    d && O.current && O.current.getSectionContent(w.startIndex).focus();
  }, []), {
    interactions: N,
    returnedValue: {
      // Forwarded
      autoFocus: d,
      readOnly: n,
      focused: u ?? F,
      sectionListRef: I,
      onBlur: B,
      onClick: _,
      onFocus: k,
      onInput: z,
      onPaste: $,
      // Additional
      enableAccessibleFieldDOMStructure: true,
      elements: se,
      // TODO v7: Try to set to undefined when there is a section selected.
      tabIndex: v === 0 ? -1 : 0,
      contentEditable: ne,
      value: W,
      onChange: oe,
      areAllSectionsEmpty: R
    }
  };
};
var gs = (e10) => e10.replace(/[\u2066\u2067\u2068\u2069]/g, "");
var fU = (e10, t, n) => {
  let o = 0, r = n ? 1 : 0;
  const s = [];
  for (let a = 0; a < e10.length; a += 1) {
    const l = e10[a], c = qg(l, n ? "input-rtl" : "input-ltr", t), u = `${l.startSeparator}${c}${l.endSeparator}`, d = gs(u).length, p = u.length, m = gs(c), g = r + (m === "" ? 0 : c.indexOf(m[0])) + l.startSeparator.length, b = g + m.length;
    s.push(V({}, l, {
      start: o,
      end: o + d,
      startInInput: g,
      endInInput: b
    })), o += d, r += p;
  }
  return s;
};
var mU = (e10) => {
  const t = mo(), n = S.useRef(), o = S.useRef(), {
    forwardedProps: {
      onFocus: r,
      onClick: s,
      onPaste: a,
      onBlur: l,
      inputRef: c,
      placeholder: u
    },
    internalProps: {
      readOnly: d = false,
      disabled: p = false
    },
    parsedSelectedSections: m,
    activeSectionIndex: g,
    state: b,
    fieldValueManager: v,
    valueManager: h,
    applyCharacterEditing: y,
    resetCharacterQuery: C,
    updateSectionValue: x,
    updateValueFromValueStr: T,
    clearActiveSection: w,
    clearValue: R,
    setTempAndroidValueStr: E,
    setSelectedSections: O,
    getSectionsFromValue: I,
    areAllSectionsEmpty: P,
    localizedDigits: A
  } = e10, M = S.useRef(null), F = Bn(c, M), D = S.useMemo(() => fU(b.sections, A, t), [b.sections, A, t]), N = S.useMemo(() => ({
    syncSelectionToDOM: () => {
      if (!M.current)
        return;
      if (m == null) {
        M.current.scrollLeft && (M.current.scrollLeft = 0);
        return;
      }
      if (M.current !== no(document))
        return;
      const J = M.current.scrollTop;
      if (m === "all")
        M.current.select();
      else {
        const U = D[m], ne = U.type === "empty" ? U.startInInput - U.startSeparator.length : U.startInInput, se = U.type === "empty" ? U.endInInput + U.endSeparator.length : U.endInInput;
        (ne !== M.current.selectionStart || se !== M.current.selectionEnd) && M.current === no(document) && M.current.setSelectionRange(ne, se), clearTimeout(o.current), o.current = setTimeout(() => {
          M.current && M.current === no(document) && // The section might loose all selection, where `selectionStart === selectionEnd`
          // https://github.com/mui/mui-x/pull/13652
          M.current.selectionStart === M.current.selectionEnd && (M.current.selectionStart !== ne || M.current.selectionEnd !== se) && N.syncSelectionToDOM();
        });
      }
      M.current.scrollTop = J;
    },
    getActiveSectionIndexFromDOM: () => {
      const J = M.current.selectionStart ?? 0, U = M.current.selectionEnd ?? 0;
      if (J === 0 && U === 0)
        return null;
      const ne = J <= D[0].startInInput ? 1 : D.findIndex((se) => se.startInInput - se.startSeparator.length > J);
      return ne === -1 ? D.length - 1 : ne - 1;
    },
    focusField: (J = 0) => {
      var U;
      (U = M.current) == null || U.focus(), O(J);
    },
    setSelectedSections: (J) => O(J),
    isFieldFocused: () => M.current === no(document)
  }), [M, m, D, O]), j = () => {
    const J = M.current.selectionStart ?? 0;
    let U;
    J <= D[0].startInInput || J >= D[D.length - 1].endInInput ? U = 1 : U = D.findIndex((se) => se.startInInput - se.startSeparator.length > J);
    const ne = U === -1 ? D.length - 1 : U - 1;
    O(ne);
  }, _ = Ge((...J) => {
    r == null || r(...J);
    const U = M.current;
    clearTimeout(n.current), n.current = setTimeout(() => {
      !U || U !== M.current || g == null && // avoid selecting all sections when focusing empty field without value
      (U.value.length && Number(U.selectionEnd) - Number(U.selectionStart) === U.value.length ? O("all") : j());
    });
  }), z = Ge((J, ...U) => {
    J.isDefaultPrevented() || (s == null || s(J, ...U), j());
  }), $ = Ge((J) => {
    if (a == null || a(J), J.preventDefault(), d || p)
      return;
    const U = J.clipboardData.getData("text");
    if (typeof m == "number") {
      const ne = b.sections[m], se = /^[a-zA-Z]+$/.test(U), oe = /^[0-9]+$/.test(U), W = /^(([a-zA-Z]+)|)([0-9]+)(([a-zA-Z]+)|)$/.test(U);
      if (ne.contentType === "letter" && se || ne.contentType === "digit" && oe || ne.contentType === "digit-with-letter" && W) {
        C(), x({
          activeSection: ne,
          newSectionValue: U,
          shouldGoToNextSection: true
        });
        return;
      }
      if (se || oe)
        return;
    }
    C(), T(U);
  }), k = Ge((...J) => {
    l == null || l(...J), O(null);
  }), B = Ge((J) => {
    if (d)
      return;
    const U = J.target.value;
    if (U === "") {
      C(), R();
      return;
    }
    const ne = J.nativeEvent.data, se = ne && ne.length > 1, oe = se ? ne : U, W = gs(oe);
    if (g == null || se) {
      T(se ? ne : W);
      return;
    }
    let Z;
    if (m === "all" && W.length === 1)
      Z = W;
    else {
      const L = gs(v.getV6InputValueFromSections(D, A, t));
      let ie = -1, te = -1;
      for (let Te = 0; Te < L.length; Te += 1)
        ie === -1 && L[Te] !== W[Te] && (ie = Te), te === -1 && L[L.length - Te - 1] !== W[W.length - Te - 1] && (te = Te);
      const le = D[g];
      if (ie < le.start || L.length - te - 1 > le.end)
        return;
      const ve = W.length - L.length + le.end - gs(le.endSeparator || "").length;
      Z = W.slice(le.start + gs(le.startSeparator || "").length, ve);
    }
    if (Z.length === 0) {
      K3() && E(oe), C(), w();
      return;
    }
    y({
      keyPressed: Z,
      sectionIndex: g
    });
  }), Q = S.useMemo(() => u !== void 0 ? u : v.getV6InputValueFromSections(I(h.emptyValue), A, t), [u, v, I, h.emptyValue, A, t]), ee = S.useMemo(() => b.tempValueStrAndroid ?? v.getV6InputValueFromSections(b.sections, A, t), [b.sections, v, b.tempValueStrAndroid, A, t]);
  S.useEffect(() => (M.current && M.current === no(document) && O("all"), () => {
    clearTimeout(n.current), clearTimeout(o.current);
  }), []);
  const G = S.useMemo(() => g == null || b.sections[g].contentType === "letter" ? "text" : "numeric", [g, b.sections]), Y = !(M.current && M.current === no(document)) && P;
  return {
    interactions: N,
    returnedValue: {
      // Forwarded
      readOnly: d,
      onBlur: k,
      onClick: z,
      onFocus: _,
      onPaste: $,
      inputRef: F,
      // Additional
      enableAccessibleFieldDOMStructure: false,
      placeholder: Q,
      inputMode: G,
      autoComplete: "off",
      value: Y ? "" : ee,
      onChange: B
    }
  };
};
var rh = (e10) => {
  const t = gt(), {
    internalProps: n,
    internalProps: {
      unstableFieldRef: o,
      minutesStep: r,
      enableAccessibleFieldDOMStructure: s = false,
      disabled: a = false,
      readOnly: l = false
    },
    forwardedProps: {
      onKeyDown: c,
      error: u,
      clearable: d,
      onClear: p
    },
    fieldValueManager: m,
    valueManager: g,
    validator: b
  } = e10, v = mo(), h = cU(e10), {
    state: y,
    activeSectionIndex: C,
    parsedSelectedSections: x,
    setSelectedSections: T,
    clearValue: w,
    clearActiveSection: R,
    updateSectionValue: E,
    setTempAndroidValueStr: O,
    sectionsValueBoundaries: I,
    localizedDigits: P,
    timezone: A
  } = h, M = dU({
    sections: y.sections,
    updateSectionValue: E,
    sectionsValueBoundaries: I,
    localizedDigits: P,
    setTempAndroidValueStr: O,
    timezone: A
  }), {
    resetCharacterQuery: F
  } = M, D = g.areValuesEqual(t, y.value, g.emptyValue), N = s ? pU : mU, j = S.useMemo(() => Q3(y.sections, v && !s), [y.sections, v, s]), {
    returnedValue: _,
    interactions: z
  } = N(V({}, e10, h, M, {
    areAllSectionsEmpty: D,
    sectionOrder: j
  })), $ = Ge((H) => {
    if (c == null || c(H), !a)
      switch (true) {
        case ((H.ctrlKey || H.metaKey) && H.key.toLowerCase() === "a" && !H.shiftKey && !H.altKey): {
          H.preventDefault(), T("all");
          break;
        }
        case H.key === "ArrowRight": {
          if (H.preventDefault(), x == null)
            T(j.startIndex);
          else if (x === "all")
            T(j.endIndex);
          else {
            const Y = j.neighbors[x].rightIndex;
            Y !== null && T(Y);
          }
          break;
        }
        case H.key === "ArrowLeft": {
          if (H.preventDefault(), x == null)
            T(j.endIndex);
          else if (x === "all")
            T(j.startIndex);
          else {
            const Y = j.neighbors[x].leftIndex;
            Y !== null && T(Y);
          }
          break;
        }
        case H.key === "Delete": {
          if (H.preventDefault(), l)
            break;
          x == null || x === "all" ? w() : R(), F();
          break;
        }
        case ["ArrowUp", "ArrowDown", "Home", "End", "PageUp", "PageDown"].includes(H.key): {
          if (H.preventDefault(), l || C == null)
            break;
          const Y = y.sections[C], J = m.getActiveDateManager(t, y, Y), U = U3(t, A, Y, H.key, I, P, J.date, {
            minutesStep: r
          });
          E({
            activeSection: Y,
            newSectionValue: U,
            shouldGoToNextSection: false
          });
          break;
        }
      }
  });
  sr(() => {
    z.syncSelectionToDOM();
  });
  const {
    hasValidationError: k
  } = a1({
    props: n,
    validator: b,
    timezone: A,
    value: y.value,
    onError: n.onError
  }), B = S.useMemo(() => u !== void 0 ? u : k, [k, u]);
  S.useEffect(() => {
    !B && C == null && F();
  }, [y.referenceValue, C, B]), S.useEffect(() => {
    y.tempValueStrAndroid != null && C != null && (F(), R());
  }, [y.sections]), S.useImperativeHandle(o, () => ({
    getSections: () => y.sections,
    getActiveSectionIndex: z.getActiveSectionIndexFromDOM,
    setSelectedSections: z.setSelectedSections,
    focusField: z.focusField,
    isFieldFocused: z.isFieldFocused
  }));
  const Q = Ge((H, ...Y) => {
    H.preventDefault(), p == null || p(H, ...Y), w(), z.isFieldFocused() ? T(j.startIndex) : z.focusField(0);
  }), ee = {
    onKeyDown: $,
    onClear: Q,
    error: B,
    clearable: !!(d && !D && !l && !a)
  }, G = {
    disabled: a,
    readOnly: l
  };
  return V({}, e10.forwardedProps, ee, G, _);
};
var gU = ["clearable", "onClear", "InputProps", "sx", "slots", "slotProps"];
var hU = ["ownerState"];
var ih = (e10) => {
  const t = gn(), {
    clearable: n,
    onClear: o,
    InputProps: r,
    sx: s,
    slots: a,
    slotProps: l
  } = e10, c = Xe(e10, gU), u = (a == null ? void 0 : a.clearButton) ?? lt, d = Pt({
    elementType: u,
    externalSlotProps: l == null ? void 0 : l.clearButton,
    ownerState: {},
    className: "clearButton",
    additionalProps: {
      title: t.fieldClearLabel
    }
  }), p = Xe(d, hU), m = (a == null ? void 0 : a.clearIcon) ?? nU, g = Pt({
    elementType: m,
    externalSlotProps: l == null ? void 0 : l.clearIcon,
    ownerState: {}
  });
  return V({}, c, {
    InputProps: V({}, r, {
      endAdornment: f.jsxs(S.Fragment, {
        children: [n && f.jsx(Or, {
          position: "end",
          sx: {
            marginRight: r != null && r.endAdornment ? -1 : -1.5
          },
          children: f.jsx(u, V({}, p, {
            onClick: o,
            children: f.jsx(m, V({
              fontSize: "small"
            }, g))
          }))
        }), r == null ? void 0 : r.endAdornment]
      })
    }),
    sx: [{
      "& .clearButton": {
        opacity: 1
      },
      "@media (pointer: fine)": {
        "& .clearButton": {
          opacity: 0
        },
        "&:hover, &:focus-within": {
          ".clearButton": {
            opacity: 1
          }
        }
      }
    }, ...Array.isArray(s) ? s : [s]]
  });
};
var bU = ["value", "defaultValue", "referenceDate", "format", "formatDensity", "onChange", "timezone", "onError", "shouldRespectLeadingZeros", "selectedSections", "onSelectedSectionsChange", "unstableFieldRef", "enableAccessibleFieldDOMStructure", "disabled", "readOnly", "dateSeparator"];
var sh = (e10, t) => S.useMemo(() => {
  const n = V({}, e10), o = {}, r = (s) => {
    n.hasOwnProperty(s) && (o[s] = n[s], delete n[s]);
  };
  return bU.forEach(r), t === "date" ? um.forEach(r) : t === "time" ? dm.forEach(r) : t === "date-time" && (um.forEach(r), dm.forEach(r), s1.forEach(r)), {
    forwardedProps: n,
    internalProps: o
  };
}, [e10, t]);
var vU = (e10) => {
  const t = gt(), n = Xi();
  return V({}, e10, {
    disablePast: e10.disablePast ?? false,
    disableFuture: e10.disableFuture ?? false,
    format: e10.format ?? t.formats.keyboardDate,
    minDate: kn(t, e10.minDate, n.minDate),
    maxDate: kn(t, e10.maxDate, n.maxDate)
  });
};
var yU = (e10) => {
  const t = gt(), o = e10.ampm ?? t.is12HourCycleInCurrentLocale() ? t.formats.fullTime12h : t.formats.fullTime24h;
  return V({}, e10, {
    disablePast: e10.disablePast ?? false,
    disableFuture: e10.disableFuture ?? false,
    format: e10.format ?? o
  });
};
var xU = (e10) => {
  const t = gt(), n = Xi(), r = e10.ampm ?? t.is12HourCycleInCurrentLocale() ? t.formats.keyboardDateTime12h : t.formats.keyboardDateTime24h;
  return V({}, e10, {
    disablePast: e10.disablePast ?? false,
    disableFuture: e10.disableFuture ?? false,
    format: e10.format ?? r,
    disableIgnoringDatePartForTimeValidation: !!(e10.minDateTime || e10.maxDateTime),
    minDate: kn(t, e10.minDateTime ?? e10.minDate, n.minDate),
    maxDate: kn(t, e10.maxDateTime ?? e10.maxDate, n.maxDate),
    minTime: e10.minDateTime ?? e10.minTime,
    maxTime: e10.maxDateTime ?? e10.maxTime
  });
};
var CU = (e10) => {
  const t = vU(e10), {
    forwardedProps: n,
    internalProps: o
  } = sh(t, "date");
  return rh({
    forwardedProps: n,
    internalProps: o,
    valueManager: ln,
    fieldValueManager: Jg,
    validator: Ks,
    valueType: "date"
  });
};
function SU(e10) {
  return Ot("MuiPickersTextField", e10);
}
At("MuiPickersTextField", ["root", "focused", "disabled", "error", "required"]);
function wU(e10) {
  return Ot("MuiPickersInputBase", e10);
}
var xs = At("MuiPickersInputBase", ["root", "focused", "disabled", "error", "notchedOutline", "sectionContent", "sectionBefore", "sectionAfter", "adornedStart", "adornedEnd", "input"]);
function TU(e10) {
  return Ot("MuiPickersSectionList", e10);
}
var ha = At("MuiPickersSectionList", ["root", "section", "sectionContent"]);
var IU = ["slots", "slotProps", "elements", "sectionListRef"];
var v1 = K("div", {
  name: "MuiPickersSectionList",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})({
  direction: "ltr /*! @noflip */",
  outline: "none"
});
var y1 = K("span", {
  name: "MuiPickersSectionList",
  slot: "Section",
  overridesResolver: (e10, t) => t.section
})({});
var x1 = K("span", {
  name: "MuiPickersSectionList",
  slot: "SectionSeparator",
  overridesResolver: (e10, t) => t.sectionSeparator
})({
  whiteSpace: "pre"
});
var C1 = K("span", {
  name: "MuiPickersSectionList",
  slot: "SectionContent",
  overridesResolver: (e10, t) => t.sectionContent
})({
  outline: "none"
});
var RU = (e10) => {
  const {
    classes: t
  } = e10;
  return Tt({
    root: ["root"],
    section: ["section"],
    sectionContent: ["sectionContent"]
  }, TU, t);
};
function EU(e10) {
  const {
    slots: t,
    slotProps: n,
    element: o,
    classes: r
  } = e10, s = (t == null ? void 0 : t.section) ?? y1, a = Pt({
    elementType: s,
    externalSlotProps: n == null ? void 0 : n.section,
    externalForwardedProps: o.container,
    className: r.section,
    ownerState: {}
  }), l = (t == null ? void 0 : t.sectionContent) ?? C1, c = Pt({
    elementType: l,
    externalSlotProps: n == null ? void 0 : n.sectionContent,
    externalForwardedProps: o.content,
    additionalProps: {
      suppressContentEditableWarning: true
    },
    className: r.sectionContent,
    ownerState: {}
  }), u = (t == null ? void 0 : t.sectionSeparator) ?? x1, d = Pt({
    elementType: u,
    externalSlotProps: n == null ? void 0 : n.sectionSeparator,
    externalForwardedProps: o.before,
    ownerState: {
      position: "before"
    }
  }), p = Pt({
    elementType: u,
    externalSlotProps: n == null ? void 0 : n.sectionSeparator,
    externalForwardedProps: o.after,
    ownerState: {
      position: "after"
    }
  });
  return f.jsxs(s, V({}, a, {
    children: [f.jsx(u, V({}, d)), f.jsx(l, V({}, c)), f.jsx(u, V({}, p))]
  }));
}
var S1 = S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiPickersSectionList"
  }), {
    slots: r,
    slotProps: s,
    elements: a,
    sectionListRef: l
  } = o, c = Xe(o, IU), u = RU(o), d = S.useRef(null), p = Bn(n, d), m = (v) => {
    if (!d.current)
      throw new Error(`MUI X: Cannot call sectionListRef.${v} before the mount of the component.`);
    return d.current;
  };
  S.useImperativeHandle(l, () => ({
    getRoot() {
      return m("getRoot");
    },
    getSectionContainer(v) {
      return m("getSectionContainer").querySelector(`.${ha.section}[data-sectionindex="${v}"]`);
    },
    getSectionContent(v) {
      return m("getSectionContent").querySelector(`.${ha.section}[data-sectionindex="${v}"] .${ha.sectionContent}`);
    },
    getSectionIndexFromDOMElement(v) {
      const h = m("getSectionIndexFromDOMElement");
      if (v == null || !h.contains(v))
        return null;
      let y = null;
      return v.classList.contains(ha.section) ? y = v : v.classList.contains(ha.sectionContent) && (y = v.parentElement), y == null ? null : Number(y.dataset.sectionindex);
    }
  }));
  const g = (r == null ? void 0 : r.root) ?? v1, b = Pt({
    elementType: g,
    externalSlotProps: s == null ? void 0 : s.root,
    externalForwardedProps: c,
    additionalProps: {
      ref: p,
      suppressContentEditableWarning: true
    },
    className: u.root,
    ownerState: {}
  });
  return f.jsx(g, V({}, b, {
    children: b.contentEditable ? a.map(({
      content: v,
      before: h,
      after: y
    }) => `${h.children}${v.children}${y.children}`).join("") : f.jsx(S.Fragment, {
      children: a.map((v, h) => f.jsx(EU, {
        slots: r,
        slotProps: s,
        element: v,
        classes: u
      }, h))
    })
  }));
});
S1.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  /**
   * If true, the whole element is editable.
   * Useful when all the sections are selected.
   */
  contentEditable: i.bool.isRequired,
  /**
   * The elements to render.
   * Each element contains the prop to edit a section of the value.
   */
  elements: i.arrayOf(i.shape({
    after: i.object.isRequired,
    before: i.object.isRequired,
    container: i.object.isRequired,
    content: i.object.isRequired
  })).isRequired,
  sectionListRef: i.oneOfType([i.func, i.shape({
    current: i.shape({
      getRoot: i.func.isRequired,
      getSectionContainer: i.func.isRequired,
      getSectionContent: i.func.isRequired,
      getSectionIndexFromDOMElement: i.func.isRequired
    })
  })]),
  /**
   * The props used for each component slot.
   */
  slotProps: i.object,
  /**
   * Overridable component slots.
   */
  slots: i.object
};
var OU = ["elements", "areAllSectionsEmpty", "defaultValue", "label", "value", "onChange", "id", "autoFocus", "endAdornment", "startAdornment", "renderSuffix", "slots", "slotProps", "contentEditable", "tabIndex", "onInput", "onPaste", "onKeyDown", "fullWidth", "name", "readOnly", "inputProps", "inputRef", "sectionListRef"];
var PU = (e10) => Math.round(e10 * 1e5) / 1e5;
var Md = K("div", {
  name: "MuiPickersInputBase",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})(({
  theme: e10
}) => V({}, e10.typography.body1, {
  color: (e10.vars || e10).palette.text.primary,
  cursor: "text",
  padding: 0,
  display: "flex",
  justifyContent: "flex-start",
  alignItems: "center",
  position: "relative",
  boxSizing: "border-box",
  // Prevent padding issue with fullWidth.
  letterSpacing: `${PU(0.15 / 16)}em`,
  variants: [{
    props: {
      fullWidth: true
    },
    style: {
      width: "100%"
    }
  }]
}));
var ah = K(v1, {
  name: "MuiPickersInputBase",
  slot: "SectionsContainer",
  overridesResolver: (e10, t) => t.sectionsContainer
})(({
  theme: e10
}) => ({
  padding: "4px 0 5px",
  fontFamily: e10.typography.fontFamily,
  fontSize: "inherit",
  lineHeight: "1.4375em",
  // 23px
  flexGrow: 1,
  outline: "none",
  display: "flex",
  flexWrap: "nowrap",
  overflow: "hidden",
  letterSpacing: "inherit",
  // Baseline behavior
  width: "182px",
  variants: [{
    props: {
      isRtl: true
    },
    style: {
      textAlign: "right /*! @noflip */"
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      paddingTop: 1
    }
  }, {
    props: {
      adornedStart: false,
      focused: false,
      filled: false
    },
    style: {
      color: "currentColor",
      opacity: 0
    }
  }, {
    // Can't use the object notation because label can be null or undefined
    props: ({
      adornedStart: t,
      focused: n,
      filled: o,
      label: r
    }) => !t && !n && !o && r == null,
    style: e10.vars ? {
      opacity: e10.vars.opacity.inputPlaceholder
    } : {
      opacity: e10.palette.mode === "light" ? 0.42 : 0.5
    }
  }]
}));
var AU = K(y1, {
  name: "MuiPickersInputBase",
  slot: "Section",
  overridesResolver: (e10, t) => t.section
})(({
  theme: e10
}) => ({
  fontFamily: e10.typography.fontFamily,
  fontSize: "inherit",
  letterSpacing: "inherit",
  lineHeight: "1.4375em",
  // 23px
  display: "flex"
}));
var jU = K(C1, {
  name: "MuiPickersInputBase",
  slot: "SectionContent",
  overridesResolver: (e10, t) => t.content
})(({
  theme: e10
}) => ({
  fontFamily: e10.typography.fontFamily,
  lineHeight: "1.4375em",
  // 23px
  letterSpacing: "inherit",
  width: "fit-content",
  outline: "none"
}));
var DU = K(x1, {
  name: "MuiPickersInputBase",
  slot: "Separator",
  overridesResolver: (e10, t) => t.separator
})(() => ({
  whiteSpace: "pre",
  letterSpacing: "inherit"
}));
var MU = K("input", {
  name: "MuiPickersInputBase",
  slot: "Input",
  overridesResolver: (e10, t) => t.hiddenInput
})(V({}, R3));
var kU = (e10) => {
  const {
    focused: t,
    disabled: n,
    error: o,
    classes: r,
    fullWidth: s,
    readOnly: a,
    color: l,
    size: c,
    endAdornment: u,
    startAdornment: d
  } = e10, p = {
    root: ["root", t && !n && "focused", n && "disabled", a && "readOnly", o && "error", s && "fullWidth", `color${w3(l)}`, c === "small" && "inputSizeSmall", !!d && "adornedStart", !!u && "adornedEnd"],
    notchedOutline: ["notchedOutline"],
    input: ["input"],
    sectionsContainer: ["sectionsContainer"],
    sectionContent: ["sectionContent"],
    sectionBefore: ["sectionBefore"],
    sectionAfter: ["sectionAfter"]
  };
  return Tt(p, wU, r);
};
var kd = S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiPickersInputBase"
  }), {
    elements: r,
    areAllSectionsEmpty: s,
    value: a,
    onChange: l,
    id: c,
    endAdornment: u,
    startAdornment: d,
    renderSuffix: p,
    slots: m,
    slotProps: g,
    contentEditable: b,
    tabIndex: v,
    onInput: h,
    onPaste: y,
    onKeyDown: C,
    name: x,
    readOnly: T,
    inputProps: w,
    inputRef: R,
    sectionListRef: E
  } = o, O = Xe(o, OU), I = S.useRef(null), P = Bn(n, I), A = Bn(w == null ? void 0 : w.ref, R), M = mo(), F = Jn();
  if (!F)
    throw new Error("MUI X: PickersInputBase should always be used inside a PickersTextField component");
  const D = (k) => {
    var B;
    if (F.disabled) {
      k.stopPropagation();
      return;
    }
    (B = F.onFocus) == null || B.call(F, k);
  };
  S.useEffect(() => {
    F && F.setAdornedStart(!!d);
  }, [F, d]), S.useEffect(() => {
    F && (s ? F.onEmpty() : F.onFilled());
  }, [F, s]);
  const N = V({}, o, F, {
    isRtl: M
  }), j = kU(N), _ = (m == null ? void 0 : m.root) || Md, z = Pt({
    elementType: _,
    externalSlotProps: g == null ? void 0 : g.root,
    externalForwardedProps: O,
    additionalProps: {
      "aria-invalid": F.error,
      ref: P
    },
    className: j.root,
    ownerState: N
  }), $ = (m == null ? void 0 : m.input) || ah;
  return f.jsxs(_, V({}, z, {
    children: [d, f.jsx(S1, {
      sectionListRef: E,
      elements: r,
      contentEditable: b,
      tabIndex: v,
      className: j.sectionsContainer,
      onFocus: D,
      onBlur: F.onBlur,
      onInput: h,
      onPaste: y,
      onKeyDown: C,
      slots: {
        root: $,
        section: AU,
        sectionContent: jU,
        sectionSeparator: DU
      },
      slotProps: {
        root: {
          ownerState: N
        },
        sectionContent: {
          className: xs.sectionContent
        },
        sectionSeparator: ({
          position: k
        }) => ({
          className: k === "before" ? xs.sectionBefore : xs.sectionAfter
        })
      }
    }), u, p ? p(V({}, F)) : null, f.jsx(MU, V({
      name: x,
      className: j.input,
      value: a,
      onChange: l,
      id: c,
      "aria-hidden": "true",
      tabIndex: -1,
      readOnly: T,
      required: F.required,
      disabled: F.disabled
    }, w, {
      ref: A
    }))]
  }));
});
kd.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Is `true` if the current values equals the empty value.
   * For a single item value, it means that `value === null`
   * For a range value, it means that `value === [null, null]`
   */
  areAllSectionsEmpty: i.bool.isRequired,
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If true, the whole element is editable.
   * Useful when all the sections are selected.
   */
  contentEditable: i.bool.isRequired,
  /**
   * The elements to render.
   * Each element contains the prop to edit a section of the value.
   */
  elements: i.arrayOf(i.shape({
    after: i.object.isRequired,
    before: i.object.isRequired,
    container: i.object.isRequired,
    content: i.object.isRequired
  })).isRequired,
  endAdornment: i.node,
  fullWidth: i.bool,
  id: i.string,
  inputProps: i.object,
  inputRef: Pn,
  label: i.node,
  margin: i.oneOf(["dense", "none", "normal"]),
  name: i.string,
  onChange: i.func.isRequired,
  onClick: i.func.isRequired,
  onInput: i.func.isRequired,
  onKeyDown: i.func.isRequired,
  onPaste: i.func.isRequired,
  ownerState: i.any,
  readOnly: i.bool,
  renderSuffix: i.func,
  sectionListRef: i.oneOfType([i.func, i.shape({
    current: i.shape({
      getRoot: i.func.isRequired,
      getSectionContainer: i.func.isRequired,
      getSectionContent: i.func.isRequired,
      getSectionIndexFromDOMElement: i.func.isRequired
    })
  })]),
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: i.object,
  /**
   * The components used for each slot inside.
   *
   * @default {}
   */
  slots: i.object,
  startAdornment: i.node,
  style: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  value: i.string.isRequired
};
function FU(e10) {
  return Ot("MuiPickersOutlinedInput", e10);
}
var Do = V({}, xs, At("MuiPickersOutlinedInput", ["root", "notchedOutline", "input"]));
var NU = ["children", "className", "label", "notched", "shrink"];
var $U = K("fieldset", {
  name: "MuiPickersOutlinedInput",
  slot: "NotchedOutline",
  overridesResolver: (e10, t) => t.notchedOutline
})(({
  theme: e10
}) => {
  const t = e10.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    textAlign: "left",
    position: "absolute",
    bottom: 0,
    right: 0,
    top: -5,
    left: 0,
    margin: 0,
    padding: "0 8px",
    pointerEvents: "none",
    borderRadius: "inherit",
    borderStyle: "solid",
    borderWidth: 1,
    overflow: "hidden",
    minWidth: "0%",
    borderColor: e10.vars ? `rgba(${e10.vars.palette.common.onBackgroundChannel} / 0.23)` : t
  };
});
var y0 = K("span")(({
  theme: e10
}) => ({
  fontFamily: e10.typography.fontFamily,
  fontSize: "inherit"
}));
var VU = K("legend")(({
  theme: e10
}) => ({
  float: "unset",
  // Fix conflict with bootstrap
  width: "auto",
  // Fix conflict with bootstrap
  overflow: "hidden",
  // Fix Horizontal scroll when label too long
  variants: [{
    props: {
      withLabel: false
    },
    style: {
      padding: 0,
      lineHeight: "11px",
      // sync with `height` in `legend` styles
      transition: e10.transitions.create("width", {
        duration: 150,
        easing: e10.transitions.easing.easeOut
      })
    }
  }, {
    props: {
      withLabel: true
    },
    style: {
      display: "block",
      // Fix conflict with normalize.css and sanitize.css
      padding: 0,
      height: 11,
      // sync with `lineHeight` in `legend` styles
      fontSize: "0.75em",
      visibility: "hidden",
      maxWidth: 0.01,
      transition: e10.transitions.create("max-width", {
        duration: 50,
        easing: e10.transitions.easing.easeOut
      }),
      whiteSpace: "nowrap",
      "& > span": {
        paddingLeft: 5,
        paddingRight: 5,
        display: "inline-block",
        opacity: 0,
        visibility: "visible"
      }
    }
  }, {
    props: {
      withLabel: true,
      notched: true
    },
    style: {
      maxWidth: "100%",
      transition: e10.transitions.create("max-width", {
        duration: 100,
        easing: e10.transitions.easing.easeOut,
        delay: 50
      })
    }
  }]
}));
function _U(e10) {
  const {
    className: t,
    label: n
  } = e10, o = Xe(e10, NU), r = n != null && n !== "", s = V({}, e10, {
    withLabel: r
  });
  return f.jsx($U, V({
    "aria-hidden": true,
    className: t
  }, o, {
    ownerState: s,
    children: f.jsx(VU, {
      ownerState: s,
      children: r ? f.jsx(y0, {
        children: n
      }) : (
        // notranslate needed while Google Translate will not fix zero-width space issue
        f.jsx(y0, {
          className: "notranslate",
          children: "​"
        })
      )
    })
  }));
}
var LU = ["label", "autoFocus", "ownerState", "notched"];
var BU = K(Md, {
  name: "MuiPickersOutlinedInput",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})(({
  theme: e10
}) => {
  const t = e10.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    padding: "0 14px",
    borderRadius: (e10.vars || e10).shape.borderRadius,
    [`&:hover .${Do.notchedOutline}`]: {
      borderColor: (e10.vars || e10).palette.text.primary
    },
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      [`&:hover .${Do.notchedOutline}`]: {
        borderColor: e10.vars ? `rgba(${e10.vars.palette.common.onBackgroundChannel} / 0.23)` : t
      }
    },
    [`&.${Do.focused} .${Do.notchedOutline}`]: {
      borderStyle: "solid",
      borderWidth: 2
    },
    [`&.${Do.disabled}`]: {
      [`& .${Do.notchedOutline}`]: {
        borderColor: (e10.vars || e10).palette.action.disabled
      },
      "*": {
        color: (e10.vars || e10).palette.action.disabled
      }
    },
    [`&.${Do.error} .${Do.notchedOutline}`]: {
      borderColor: (e10.vars || e10).palette.error.main
    },
    variants: Object.keys((e10.vars ?? e10).palette).filter((n) => {
      var o;
      return ((o = (e10.vars ?? e10).palette[n]) == null ? void 0 : o.main) ?? false;
    }).map((n) => ({
      props: {
        color: n
      },
      style: {
        [`&.${Do.focused}:not(.${Do.error}) .${Do.notchedOutline}`]: {
          // @ts-ignore
          borderColor: (e10.vars || e10).palette[n].main
        }
      }
    }))
  };
});
var zU = K(ah, {
  name: "MuiPickersOutlinedInput",
  slot: "SectionsContainer",
  overridesResolver: (e10, t) => t.sectionsContainer
})({
  padding: "16.5px 0",
  variants: [{
    props: {
      size: "small"
    },
    style: {
      padding: "8.5px 0"
    }
  }]
});
var WU = (e10) => {
  const {
    classes: t
  } = e10, o = Tt({
    root: ["root"],
    notchedOutline: ["notchedOutline"],
    input: ["input"]
  }, FU, t);
  return V({}, t, o);
};
var lh = S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiPickersOutlinedInput"
  }), {
    label: r,
    ownerState: s,
    notched: a
  } = o, l = Xe(o, LU), c = Jn(), u = V({}, o, s, c, {
    color: (c == null ? void 0 : c.color) || "primary"
  }), d = WU(u);
  return f.jsx(kd, V({
    slots: {
      root: BU,
      input: zU
    },
    renderSuffix: (p) => f.jsx(_U, {
      shrink: !!(a || p.adornedStart || p.focused || p.filled),
      notched: !!(a || p.adornedStart || p.focused || p.filled),
      className: d.notchedOutline,
      label: r != null && r !== "" && (c != null && c.required) ? f.jsxs(S.Fragment, {
        children: [r, " ", "*"]
      }) : r,
      ownerState: u
    })
  }, l, {
    label: r,
    classes: d,
    ref: n
  }));
});
lh.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Is `true` if the current values equals the empty value.
   * For a single item value, it means that `value === null`
   * For a range value, it means that `value === [null, null]`
   */
  areAllSectionsEmpty: i.bool.isRequired,
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If true, the whole element is editable.
   * Useful when all the sections are selected.
   */
  contentEditable: i.bool.isRequired,
  /**
   * The elements to render.
   * Each element contains the prop to edit a section of the value.
   */
  elements: i.arrayOf(i.shape({
    after: i.object.isRequired,
    before: i.object.isRequired,
    container: i.object.isRequired,
    content: i.object.isRequired
  })).isRequired,
  endAdornment: i.node,
  fullWidth: i.bool,
  id: i.string,
  inputProps: i.object,
  inputRef: Pn,
  label: i.node,
  margin: i.oneOf(["dense", "none", "normal"]),
  name: i.string,
  notched: i.bool,
  onChange: i.func.isRequired,
  onClick: i.func.isRequired,
  onInput: i.func.isRequired,
  onKeyDown: i.func.isRequired,
  onPaste: i.func.isRequired,
  ownerState: i.any,
  readOnly: i.bool,
  renderSuffix: i.func,
  sectionListRef: i.oneOfType([i.func, i.shape({
    current: i.shape({
      getRoot: i.func.isRequired,
      getSectionContainer: i.func.isRequired,
      getSectionContent: i.func.isRequired,
      getSectionIndexFromDOMElement: i.func.isRequired
    })
  })]),
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: i.object,
  /**
   * The components used for each slot inside.
   *
   * @default {}
   */
  slots: i.object,
  startAdornment: i.node,
  style: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  value: i.string.isRequired
};
lh.muiName = "Input";
function ds(e10) {
  if (typeof e10 != "object" || e10 === null)
    return false;
  const t = Object.getPrototypeOf(e10);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e10) && !(Symbol.iterator in e10);
}
function w1(e10) {
  if (!ds(e10))
    return e10;
  const t = {};
  return Object.keys(e10).forEach((n) => {
    t[n] = w1(e10[n]);
  }), t;
}
function gu(e10, t, n = {
  clone: true
}) {
  const o = n.clone ? V({}, e10) : e10;
  return ds(e10) && ds(t) && Object.keys(t).forEach((r) => {
    ds(t[r]) && // Avoid prototype pollution
    Object.prototype.hasOwnProperty.call(e10, r) && ds(e10[r]) ? o[r] = gu(e10[r], t[r], n) : n.clone ? o[r] = ds(t[r]) ? w1(t[r]) : t[r] : o[r] = t[r];
  }), o;
}
var GU = ["values", "unit", "step"];
var UU = (e10) => {
  const t = Object.keys(e10).map((n) => ({
    key: n,
    val: e10[n]
  })) || [];
  return t.sort((n, o) => n.val - o.val), t.reduce((n, o) => V({}, n, {
    [o.key]: o.val
  }), {});
};
function XU(e10) {
  const {
    // The breakpoint **start** at this value.
    // For instance with the first breakpoint xs: [xs, sm).
    values: t = {
      xs: 0,
      // phone
      sm: 600,
      // tablet
      md: 900,
      // small laptop
      lg: 1200,
      // desktop
      xl: 1536
      // large screen
    },
    unit: n = "px",
    step: o = 5
  } = e10, r = Xe(e10, GU), s = UU(t), a = Object.keys(s);
  function l(m) {
    return `@media (min-width:${typeof t[m] == "number" ? t[m] : m}${n})`;
  }
  function c(m) {
    return `@media (max-width:${(typeof t[m] == "number" ? t[m] : m) - o / 100}${n})`;
  }
  function u(m, g) {
    const b = a.indexOf(g);
    return `@media (min-width:${typeof t[m] == "number" ? t[m] : m}${n}) and (max-width:${(b !== -1 && typeof t[a[b]] == "number" ? t[a[b]] : g) - o / 100}${n})`;
  }
  function d(m) {
    return a.indexOf(m) + 1 < a.length ? u(m, a[a.indexOf(m) + 1]) : l(m);
  }
  function p(m) {
    const g = a.indexOf(m);
    return g === 0 ? l(a[1]) : g === a.length - 1 ? c(a[g]) : u(m, a[a.indexOf(m) + 1]).replace("@media", "@media not all and");
  }
  return V({
    keys: a,
    values: s,
    up: l,
    down: c,
    between: u,
    only: d,
    not: p,
    unit: n
  }, r);
}
var YU = {
  borderRadius: 4
};
var li = true ? i.oneOfType([i.number, i.string, i.object, i.array]) : {};
function La(e10, t) {
  return t ? gu(e10, t, {
    clone: false
    // No need to clone deep, it's way faster.
  }) : e10;
}
var ch = {
  xs: 0,
  // phone
  sm: 600,
  // tablet
  md: 900,
  // small laptop
  lg: 1200,
  // desktop
  xl: 1536
  // large screen
};
var x0 = {
  // Sorted ASC by size. That's important.
  // It can't be configured as it's used statically for propTypes.
  keys: ["xs", "sm", "md", "lg", "xl"],
  up: (e10) => `@media (min-width:${ch[e10]}px)`
};
function jr(e10, t, n) {
  const o = e10.theme || {};
  if (Array.isArray(t)) {
    const s = o.breakpoints || x0;
    return t.reduce((a, l, c) => (a[s.up(s.keys[c])] = n(t[c]), a), {});
  }
  if (typeof t == "object") {
    const s = o.breakpoints || x0;
    return Object.keys(t).reduce((a, l) => {
      if (Object.keys(s.values || ch).indexOf(l) !== -1) {
        const c = s.up(l);
        a[c] = n(t[l], l);
      } else {
        const c = l;
        a[c] = t[c];
      }
      return a;
    }, {});
  }
  return n(t);
}
function ZU(e10 = {}) {
  var t;
  return ((t = e10.keys) == null ? void 0 : t.reduce((o, r) => {
    const s = e10.up(r);
    return o[s] = {}, o;
  }, {})) || {};
}
function qU(e10, t) {
  return e10.reduce((n, o) => {
    const r = n[o];
    return (!r || Object.keys(r).length === 0) && delete n[o], n;
  }, t);
}
function T1(e10) {
  if (typeof e10 != "string")
    throw new Error(true ? "MUI: `capitalize(string)` expects a string argument." : HU(7));
  return e10.charAt(0).toUpperCase() + e10.slice(1);
}
function Fd(e10, t, n = true) {
  if (!t || typeof t != "string")
    return null;
  if (e10 && e10.vars && n) {
    const o = `vars.${t}`.split(".").reduce((r, s) => r && r[s] ? r[s] : null, e10);
    if (o != null)
      return o;
  }
  return t.split(".").reduce((o, r) => o && o[r] != null ? o[r] : null, e10);
}
function hu(e10, t, n, o = n) {
  let r;
  return typeof e10 == "function" ? r = e10(n) : Array.isArray(e10) ? r = e10[n] || o : r = Fd(e10, n) || o, t && (r = t(r, o, e10)), r;
}
function un(e10) {
  const {
    prop: t,
    cssProperty: n = e10.prop,
    themeKey: o,
    transform: r
  } = e10, s = (a) => {
    if (a[t] == null)
      return null;
    const l = a[t], c = a.theme, u = Fd(c, o) || {};
    return jr(a, l, (p) => {
      let m = hu(u, r, p);
      return p === m && typeof p == "string" && (m = hu(u, r, `${t}${p === "default" ? "" : T1(p)}`, p)), n === false ? m : {
        [n]: m
      };
    });
  };
  return s.propTypes = true ? {
    [t]: li
  } : {}, s.filterProps = [t], s;
}
function JU(e10) {
  const t = {};
  return (n) => (t[n] === void 0 && (t[n] = e10(n)), t[n]);
}
var KU = {
  m: "margin",
  p: "padding"
};
var QU = {
  t: "Top",
  r: "Right",
  b: "Bottom",
  l: "Left",
  x: ["Left", "Right"],
  y: ["Top", "Bottom"]
};
var C0 = {
  marginX: "mx",
  marginY: "my",
  paddingX: "px",
  paddingY: "py"
};
var e6 = JU((e10) => {
  if (e10.length > 2)
    if (C0[e10])
      e10 = C0[e10];
    else
      return [e10];
  const [t, n] = e10.split(""), o = KU[t], r = QU[n] || "";
  return Array.isArray(r) ? r.map((s) => o + s) : [o + r];
});
var Nd = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"];
var $d = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"];
var t6 = [...Nd, ...$d];
function Bl(e10, t, n, o) {
  var r;
  const s = (r = Fd(e10, t, false)) != null ? r : n;
  return typeof s == "number" ? (a) => typeof a == "string" ? a : (typeof a != "number" && console.error(`MUI: Expected ${o} argument to be a number or a string, got ${a}.`), s * a) : Array.isArray(s) ? (a) => typeof a == "string" ? a : (Number.isInteger(a) ? a > s.length - 1 && console.error([`MUI: The value provided (${a}) overflows.`, `The supported values are: ${JSON.stringify(s)}.`, `${a} > ${s.length - 1}, you need to add the missing values.`].join(`
`)) : console.error([`MUI: The \`theme.${t}\` array type cannot be combined with non integer values.You should either use an integer value that can be used as index, or define the \`theme.${t}\` as a number.`].join(`
`)), s[a]) : typeof s == "function" ? s : (console.error([`MUI: The \`theme.${t}\` value (${s}) is invalid.`, "It should be a number, an array or a function."].join(`
`)), () => {
  });
}
function I1(e10) {
  return Bl(e10, "spacing", 8, "spacing");
}
function zl(e10, t) {
  if (typeof t == "string" || t == null)
    return t;
  const n = Math.abs(t), o = e10(n);
  return t >= 0 ? o : typeof o == "number" ? -o : `-${o}`;
}
function n6(e10, t) {
  return (n) => e10.reduce((o, r) => (o[r] = zl(t, n), o), {});
}
function o6(e10, t, n, o) {
  if (t.indexOf(n) === -1)
    return null;
  const r = e6(n), s = n6(r, o), a = e10[n];
  return jr(e10, a, s);
}
function R1(e10, t) {
  const n = I1(e10.theme);
  return Object.keys(e10).map((o) => o6(e10, t, o, n)).reduce(La, {});
}
function nn(e10) {
  return R1(e10, Nd);
}
nn.propTypes = true ? Nd.reduce((e10, t) => (e10[t] = li, e10), {}) : {};
nn.filterProps = Nd;
function on(e10) {
  return R1(e10, $d);
}
on.propTypes = true ? $d.reduce((e10, t) => (e10[t] = li, e10), {}) : {};
on.filterProps = $d;
t6.reduce((e10, t) => (e10[t] = li, e10), {});
function r6(e10 = 8) {
  if (e10.mui)
    return e10;
  const t = I1({
    spacing: e10
  }), n = (...o) => (o.length <= 4 || console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${o.length}`), (o.length === 0 ? [1] : o).map((s) => {
    const a = t(s);
    return typeof a == "number" ? `${a}px` : a;
  }).join(" "));
  return n.mui = true, n;
}
function Vd(...e10) {
  const t = e10.reduce((o, r) => (r.filterProps.forEach((s) => {
    o[s] = r;
  }), o), {}), n = (o) => Object.keys(o).reduce((r, s) => t[s] ? La(r, t[s](o)) : r, {});
  return n.propTypes = true ? e10.reduce((o, r) => Object.assign(o, r.propTypes), {}) : {}, n.filterProps = e10.reduce((o, r) => o.concat(r.filterProps), []), n;
}
function Co(e10) {
  return typeof e10 != "number" ? e10 : `${e10}px solid`;
}
function Ao(e10, t) {
  return un({
    prop: e10,
    themeKey: "borders",
    transform: t
  });
}
var i6 = Ao("border", Co);
var s6 = Ao("borderTop", Co);
var a6 = Ao("borderRight", Co);
var l6 = Ao("borderBottom", Co);
var c6 = Ao("borderLeft", Co);
var u6 = Ao("borderColor");
var d6 = Ao("borderTopColor");
var p6 = Ao("borderRightColor");
var f6 = Ao("borderBottomColor");
var m6 = Ao("borderLeftColor");
var g6 = Ao("outline", Co);
var h6 = Ao("outlineColor");
var _d = (e10) => {
  if (e10.borderRadius !== void 0 && e10.borderRadius !== null) {
    const t = Bl(e10.theme, "shape.borderRadius", 4, "borderRadius"), n = (o) => ({
      borderRadius: zl(t, o)
    });
    return jr(e10, e10.borderRadius, n);
  }
  return null;
};
_d.propTypes = true ? {
  borderRadius: li
} : {};
_d.filterProps = ["borderRadius"];
Vd(i6, s6, a6, l6, c6, u6, d6, p6, f6, m6, _d, g6, h6);
var Ld = (e10) => {
  if (e10.gap !== void 0 && e10.gap !== null) {
    const t = Bl(e10.theme, "spacing", 8, "gap"), n = (o) => ({
      gap: zl(t, o)
    });
    return jr(e10, e10.gap, n);
  }
  return null;
};
Ld.propTypes = true ? {
  gap: li
} : {};
Ld.filterProps = ["gap"];
var Bd = (e10) => {
  if (e10.columnGap !== void 0 && e10.columnGap !== null) {
    const t = Bl(e10.theme, "spacing", 8, "columnGap"), n = (o) => ({
      columnGap: zl(t, o)
    });
    return jr(e10, e10.columnGap, n);
  }
  return null;
};
Bd.propTypes = true ? {
  columnGap: li
} : {};
Bd.filterProps = ["columnGap"];
var zd = (e10) => {
  if (e10.rowGap !== void 0 && e10.rowGap !== null) {
    const t = Bl(e10.theme, "spacing", 8, "rowGap"), n = (o) => ({
      rowGap: zl(t, o)
    });
    return jr(e10, e10.rowGap, n);
  }
  return null;
};
zd.propTypes = true ? {
  rowGap: li
} : {};
zd.filterProps = ["rowGap"];
var b6 = un({
  prop: "gridColumn"
});
var v6 = un({
  prop: "gridRow"
});
var y6 = un({
  prop: "gridAutoFlow"
});
var x6 = un({
  prop: "gridAutoColumns"
});
var C6 = un({
  prop: "gridAutoRows"
});
var S6 = un({
  prop: "gridTemplateColumns"
});
var w6 = un({
  prop: "gridTemplateRows"
});
var T6 = un({
  prop: "gridTemplateAreas"
});
var I6 = un({
  prop: "gridArea"
});
Vd(Ld, Bd, zd, b6, v6, y6, x6, C6, S6, w6, T6, I6);
function Cs(e10, t) {
  return t === "grey" ? t : e10;
}
var R6 = un({
  prop: "color",
  themeKey: "palette",
  transform: Cs
});
var E6 = un({
  prop: "bgcolor",
  cssProperty: "backgroundColor",
  themeKey: "palette",
  transform: Cs
});
var O6 = un({
  prop: "backgroundColor",
  themeKey: "palette",
  transform: Cs
});
Vd(R6, E6, O6);
function ro(e10) {
  return e10 <= 1 && e10 !== 0 ? `${e10 * 100}%` : e10;
}
var P6 = un({
  prop: "width",
  transform: ro
});
var uh = (e10) => {
  if (e10.maxWidth !== void 0 && e10.maxWidth !== null) {
    const t = (n) => {
      var o, r;
      const s = ((o = e10.theme) == null || (o = o.breakpoints) == null || (o = o.values) == null ? void 0 : o[n]) || ch[n];
      return s ? ((r = e10.theme) == null || (r = r.breakpoints) == null ? void 0 : r.unit) !== "px" ? {
        maxWidth: `${s}${e10.theme.breakpoints.unit}`
      } : {
        maxWidth: s
      } : {
        maxWidth: ro(n)
      };
    };
    return jr(e10, e10.maxWidth, t);
  }
  return null;
};
uh.filterProps = ["maxWidth"];
var A6 = un({
  prop: "minWidth",
  transform: ro
});
var j6 = un({
  prop: "height",
  transform: ro
});
var D6 = un({
  prop: "maxHeight",
  transform: ro
});
var M6 = un({
  prop: "minHeight",
  transform: ro
});
un({
  prop: "size",
  cssProperty: "width",
  transform: ro
});
un({
  prop: "size",
  cssProperty: "height",
  transform: ro
});
var k6 = un({
  prop: "boxSizing"
});
Vd(P6, uh, A6, j6, D6, M6, k6);
var E1 = {
  // borders
  border: {
    themeKey: "borders",
    transform: Co
  },
  borderTop: {
    themeKey: "borders",
    transform: Co
  },
  borderRight: {
    themeKey: "borders",
    transform: Co
  },
  borderBottom: {
    themeKey: "borders",
    transform: Co
  },
  borderLeft: {
    themeKey: "borders",
    transform: Co
  },
  borderColor: {
    themeKey: "palette"
  },
  borderTopColor: {
    themeKey: "palette"
  },
  borderRightColor: {
    themeKey: "palette"
  },
  borderBottomColor: {
    themeKey: "palette"
  },
  borderLeftColor: {
    themeKey: "palette"
  },
  outline: {
    themeKey: "borders",
    transform: Co
  },
  outlineColor: {
    themeKey: "palette"
  },
  borderRadius: {
    themeKey: "shape.borderRadius",
    style: _d
  },
  // palette
  color: {
    themeKey: "palette",
    transform: Cs
  },
  bgcolor: {
    themeKey: "palette",
    cssProperty: "backgroundColor",
    transform: Cs
  },
  backgroundColor: {
    themeKey: "palette",
    transform: Cs
  },
  // spacing
  p: {
    style: on
  },
  pt: {
    style: on
  },
  pr: {
    style: on
  },
  pb: {
    style: on
  },
  pl: {
    style: on
  },
  px: {
    style: on
  },
  py: {
    style: on
  },
  padding: {
    style: on
  },
  paddingTop: {
    style: on
  },
  paddingRight: {
    style: on
  },
  paddingBottom: {
    style: on
  },
  paddingLeft: {
    style: on
  },
  paddingX: {
    style: on
  },
  paddingY: {
    style: on
  },
  paddingInline: {
    style: on
  },
  paddingInlineStart: {
    style: on
  },
  paddingInlineEnd: {
    style: on
  },
  paddingBlock: {
    style: on
  },
  paddingBlockStart: {
    style: on
  },
  paddingBlockEnd: {
    style: on
  },
  m: {
    style: nn
  },
  mt: {
    style: nn
  },
  mr: {
    style: nn
  },
  mb: {
    style: nn
  },
  ml: {
    style: nn
  },
  mx: {
    style: nn
  },
  my: {
    style: nn
  },
  margin: {
    style: nn
  },
  marginTop: {
    style: nn
  },
  marginRight: {
    style: nn
  },
  marginBottom: {
    style: nn
  },
  marginLeft: {
    style: nn
  },
  marginX: {
    style: nn
  },
  marginY: {
    style: nn
  },
  marginInline: {
    style: nn
  },
  marginInlineStart: {
    style: nn
  },
  marginInlineEnd: {
    style: nn
  },
  marginBlock: {
    style: nn
  },
  marginBlockStart: {
    style: nn
  },
  marginBlockEnd: {
    style: nn
  },
  // display
  displayPrint: {
    cssProperty: false,
    transform: (e10) => ({
      "@media print": {
        display: e10
      }
    })
  },
  display: {},
  overflow: {},
  textOverflow: {},
  visibility: {},
  whiteSpace: {},
  // flexbox
  flexBasis: {},
  flexDirection: {},
  flexWrap: {},
  justifyContent: {},
  alignItems: {},
  alignContent: {},
  order: {},
  flex: {},
  flexGrow: {},
  flexShrink: {},
  alignSelf: {},
  justifyItems: {},
  justifySelf: {},
  // grid
  gap: {
    style: Ld
  },
  rowGap: {
    style: zd
  },
  columnGap: {
    style: Bd
  },
  gridColumn: {},
  gridRow: {},
  gridAutoFlow: {},
  gridAutoColumns: {},
  gridAutoRows: {},
  gridTemplateColumns: {},
  gridTemplateRows: {},
  gridTemplateAreas: {},
  gridArea: {},
  // positions
  position: {},
  zIndex: {
    themeKey: "zIndex"
  },
  top: {},
  right: {},
  bottom: {},
  left: {},
  // shadows
  boxShadow: {
    themeKey: "shadows"
  },
  // sizing
  width: {
    transform: ro
  },
  maxWidth: {
    style: uh
  },
  minWidth: {
    transform: ro
  },
  height: {
    transform: ro
  },
  maxHeight: {
    transform: ro
  },
  minHeight: {
    transform: ro
  },
  boxSizing: {},
  // typography
  fontFamily: {
    themeKey: "typography"
  },
  fontSize: {
    themeKey: "typography"
  },
  fontStyle: {
    themeKey: "typography"
  },
  fontWeight: {
    themeKey: "typography"
  },
  letterSpacing: {},
  textTransform: {},
  lineHeight: {},
  textAlign: {},
  typography: {
    cssProperty: false,
    themeKey: "typography"
  }
};
function F6(...e10) {
  const t = e10.reduce((o, r) => o.concat(Object.keys(r)), []), n = new Set(t);
  return e10.every((o) => n.size === Object.keys(o).length);
}
function N6(e10, t) {
  return typeof e10 == "function" ? e10(t) : e10;
}
function $6() {
  function e10(n, o, r, s) {
    const a = {
      [n]: o,
      theme: r
    }, l = s[n];
    if (!l)
      return {
        [n]: o
      };
    const {
      cssProperty: c = n,
      themeKey: u,
      transform: d,
      style: p
    } = l;
    if (o == null)
      return null;
    if (u === "typography" && o === "inherit")
      return {
        [n]: o
      };
    const m = Fd(r, u) || {};
    return p ? p(a) : jr(a, o, (b) => {
      let v = hu(m, d, b);
      return b === v && typeof b == "string" && (v = hu(m, d, `${n}${b === "default" ? "" : T1(b)}`, b)), c === false ? v : {
        [c]: v
      };
    });
  }
  function t(n) {
    var o;
    const {
      sx: r,
      theme: s = {}
    } = n || {};
    if (!r)
      return null;
    const a = (o = s.unstable_sxConfig) != null ? o : E1;
    function l(c) {
      let u = c;
      if (typeof c == "function")
        u = c(s);
      else if (typeof c != "object")
        return c;
      if (!u)
        return null;
      const d = ZU(s.breakpoints), p = Object.keys(d);
      let m = d;
      return Object.keys(u).forEach((g) => {
        const b = N6(u[g], s);
        if (b != null)
          if (typeof b == "object")
            if (a[g])
              m = La(m, e10(g, b, s, a));
            else {
              const v = jr({
                theme: s
              }, b, (h) => ({
                [g]: h
              }));
              F6(v, b) ? m[g] = t({
                sx: b,
                theme: s
              }) : m = La(m, v);
            }
          else
            m = La(m, e10(g, b, s, a));
      }), qU(p, m);
    }
    return Array.isArray(r) ? r.map(l) : l(r);
  }
  return t;
}
var O1 = $6();
O1.filterProps = ["sx"];
function V6(e10, t) {
  const n = this;
  return n.vars && typeof n.getColorSchemeSelector == "function" ? {
    [n.getColorSchemeSelector(e10).replace(/(\[[^\]]+\])/, "*:where($1)")]: t
  } : n.palette.mode === e10 ? t : {};
}
var _6 = ["breakpoints", "palette", "spacing", "shape"];
function L6(e10 = {}, ...t) {
  const {
    breakpoints: n = {},
    palette: o = {},
    spacing: r,
    shape: s = {}
  } = e10, a = Xe(e10, _6), l = XU(n), c = r6(r);
  let u = gu({
    breakpoints: l,
    direction: "ltr",
    components: {},
    // Inject component definitions.
    palette: V({
      mode: "light"
    }, o),
    spacing: c,
    shape: V({}, YU, s)
  }, a);
  return u.applyStyles = V6, u = t.reduce((d, p) => gu(d, p), u), u.unstable_sxConfig = V({}, E1, a == null ? void 0 : a.unstable_sxConfig), u.unstable_sx = function(p) {
    return O1({
      sx: p,
      theme: this
    });
  }, u;
}
function B6(e10) {
  return e10 !== "ownerState" && e10 !== "theme" && e10 !== "sx" && e10 !== "as";
}
L6();
function Fi(e10) {
  "@babel/helpers - typeof";
  return Fi = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
    return typeof t;
  } : function(t) {
    return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
  }, Fi(e10);
}
function z6(e10, t) {
  if (Fi(e10) != "object" || !e10) return e10;
  var n = e10[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(e10, t || "default");
    if (Fi(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (t === "string" ? String : Number)(e10);
}
function P1(e10) {
  var t = z6(e10, "string");
  return Fi(t) == "symbol" ? t : t + "";
}
function W6(e10) {
  return Ot("MuiPickersFilledInput", e10);
}
var di = V({}, xs, At("MuiPickersFilledInput", ["root", "underline", "input"]));
var H6 = ["label", "autoFocus", "disableUnderline", "ownerState"];
var G6 = K(Md, {
  name: "MuiPickersFilledInput",
  slot: "Root",
  overridesResolver: (e10, t) => t.root,
  shouldForwardProp: (e10) => B6(e10) && e10 !== "disableUnderline"
})(({
  theme: e10
}) => {
  const t = e10.palette.mode === "light", n = t ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)", o = t ? "rgba(0, 0, 0, 0.06)" : "rgba(255, 255, 255, 0.09)", r = t ? "rgba(0, 0, 0, 0.09)" : "rgba(255, 255, 255, 0.13)", s = t ? "rgba(0, 0, 0, 0.12)" : "rgba(255, 255, 255, 0.12)";
  return {
    backgroundColor: e10.vars ? e10.vars.palette.FilledInput.bg : o,
    borderTopLeftRadius: (e10.vars || e10).shape.borderRadius,
    borderTopRightRadius: (e10.vars || e10).shape.borderRadius,
    transition: e10.transitions.create("background-color", {
      duration: e10.transitions.duration.shorter,
      easing: e10.transitions.easing.easeOut
    }),
    "&:hover": {
      backgroundColor: e10.vars ? e10.vars.palette.FilledInput.hoverBg : r,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: e10.vars ? e10.vars.palette.FilledInput.bg : o
      }
    },
    [`&.${di.focused}`]: {
      backgroundColor: e10.vars ? e10.vars.palette.FilledInput.bg : o
    },
    [`&.${di.disabled}`]: {
      backgroundColor: e10.vars ? e10.vars.palette.FilledInput.disabledBg : s
    },
    variants: [...Object.keys((e10.vars ?? e10).palette).filter((a) => (e10.vars ?? e10).palette[a].main).map((a) => {
      var l;
      return {
        props: {
          color: a,
          disableUnderline: false
        },
        style: {
          "&::after": {
            // @ts-ignore
            borderBottom: `2px solid ${(l = (e10.vars || e10).palette[a]) == null ? void 0 : l.main}`
          }
        }
      };
    }), {
      props: {
        disableUnderline: false
      },
      style: {
        "&::after": {
          left: 0,
          bottom: 0,
          // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e10.transitions.create("transform", {
            duration: e10.transitions.duration.shorter,
            easing: e10.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${di.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${di.error}`]: {
          "&:before, &:after": {
            borderBottomColor: (e10.vars || e10).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${e10.vars ? `rgba(${e10.vars.palette.common.onBackgroundChannel} / ${e10.vars.opacity.inputUnderline})` : n}`,
          left: 0,
          bottom: 0,
          // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e10.transitions.create("border-bottom-color", {
            duration: e10.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${di.disabled}, .${di.error}):before`]: {
          borderBottom: `1px solid ${(e10.vars || e10).palette.text.primary}`
        },
        [`&.${di.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }, {
      props: ({
        startAdornment: a
      }) => !!a,
      style: {
        paddingLeft: 12
      }
    }, {
      props: ({
        endAdornment: a
      }) => !!a,
      style: {
        paddingRight: 12
      }
    }]
  };
});
var U6 = K(ah, {
  name: "MuiPickersFilledInput",
  slot: "sectionsContainer",
  overridesResolver: (e10, t) => t.sectionsContainer
})({
  paddingTop: 25,
  paddingRight: 12,
  paddingBottom: 8,
  paddingLeft: 12,
  variants: [{
    props: {
      size: "small"
    },
    style: {
      paddingTop: 21,
      paddingBottom: 4
    }
  }, {
    props: ({
      startAdornment: e10
    }) => !!e10,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      endAdornment: e10
    }) => !!e10,
    style: {
      paddingRight: 0
    }
  }, {
    props: {
      hiddenLabel: true
    },
    style: {
      paddingTop: 16,
      paddingBottom: 17
    }
  }, {
    props: {
      hiddenLabel: true,
      size: "small"
    },
    style: {
      paddingTop: 8,
      paddingBottom: 9
    }
  }]
});
var X6 = (e10) => {
  const {
    classes: t,
    disableUnderline: n
  } = e10, r = Tt({
    root: ["root", !n && "underline"],
    input: ["input"]
  }, W6, t);
  return V({}, t, r);
};
var dh = S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiPickersFilledInput"
  }), {
    label: r,
    disableUnderline: s = false,
    ownerState: a
  } = o, l = Xe(o, H6), c = Jn(), u = V({}, o, a, c, {
    color: (c == null ? void 0 : c.color) || "primary"
  }), d = X6(u);
  return f.jsx(kd, V({
    slots: {
      root: G6,
      input: U6
    },
    slotProps: {
      root: {
        disableUnderline: s
      }
    }
  }, l, {
    label: r,
    classes: d,
    ref: n
  }));
});
dh.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Is `true` if the current values equals the empty value.
   * For a single item value, it means that `value === null`
   * For a range value, it means that `value === [null, null]`
   */
  areAllSectionsEmpty: i.bool.isRequired,
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If true, the whole element is editable.
   * Useful when all the sections are selected.
   */
  contentEditable: i.bool.isRequired,
  disableUnderline: i.bool,
  /**
   * The elements to render.
   * Each element contains the prop to edit a section of the value.
   */
  elements: i.arrayOf(i.shape({
    after: i.object.isRequired,
    before: i.object.isRequired,
    container: i.object.isRequired,
    content: i.object.isRequired
  })).isRequired,
  endAdornment: i.node,
  fullWidth: i.bool,
  hiddenLabel: i.bool,
  id: i.string,
  inputProps: i.object,
  inputRef: Pn,
  label: i.node,
  margin: i.oneOf(["dense", "none", "normal"]),
  name: i.string,
  onChange: i.func.isRequired,
  onClick: i.func.isRequired,
  onInput: i.func.isRequired,
  onKeyDown: i.func.isRequired,
  onPaste: i.func.isRequired,
  ownerState: i.any,
  readOnly: i.bool,
  renderSuffix: i.func,
  sectionListRef: i.oneOfType([i.func, i.shape({
    current: i.shape({
      getRoot: i.func.isRequired,
      getSectionContainer: i.func.isRequired,
      getSectionContent: i.func.isRequired,
      getSectionIndexFromDOMElement: i.func.isRequired
    })
  })]),
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: i.object,
  /**
   * The components used for each slot inside.
   *
   * @default {}
   */
  slots: i.object,
  startAdornment: i.node,
  style: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  value: i.string.isRequired
};
dh.muiName = "Input";
function Y6(e10) {
  return Ot("MuiPickersFilledInput", e10);
}
var ba = V({}, xs, At("MuiPickersInput", ["root", "input"]));
var Z6 = ["label", "autoFocus", "disableUnderline", "ownerState"];
var q6 = K(Md, {
  name: "MuiPickersInput",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})(({
  theme: e10
}) => {
  let n = e10.palette.mode === "light" ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)";
  return e10.vars && (n = `rgba(${e10.vars.palette.common.onBackgroundChannel} / ${e10.vars.opacity.inputUnderline})`), {
    "label + &": {
      marginTop: 16
    },
    variants: [...Object.keys((e10.vars ?? e10).palette).filter((o) => (e10.vars ?? e10).palette[o].main).map((o) => ({
      props: {
        color: o
      },
      style: {
        "&::after": {
          // @ts-ignore
          borderBottom: `2px solid ${(e10.vars || e10).palette[o].main}`
        }
      }
    })), {
      props: {
        disableUnderline: false
      },
      style: {
        "&::after": {
          background: "red",
          left: 0,
          bottom: 0,
          // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e10.transitions.create("transform", {
            duration: e10.transitions.duration.shorter,
            easing: e10.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${ba.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${ba.error}`]: {
          "&:before, &:after": {
            borderBottomColor: (e10.vars || e10).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${n}`,
          left: 0,
          bottom: 0,
          // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e10.transitions.create("border-bottom-color", {
            duration: e10.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${ba.disabled}, .${ba.error}):before`]: {
          borderBottom: `2px solid ${(e10.vars || e10).palette.text.primary}`,
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            borderBottom: `1px solid ${n}`
          }
        },
        [`&.${ba.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }]
  };
});
var J6 = (e10) => {
  const {
    classes: t,
    disableUnderline: n
  } = e10, r = Tt({
    root: ["root", !n && "underline"],
    input: ["input"]
  }, Y6, t);
  return V({}, t, r);
};
var ph = S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiPickersInput"
  }), {
    label: r,
    disableUnderline: s = false,
    ownerState: a
  } = o, l = Xe(o, Z6), c = Jn(), u = V({}, o, a, c, {
    disableUnderline: s,
    color: (c == null ? void 0 : c.color) || "primary"
  }), d = J6(u);
  return f.jsx(kd, V({
    slots: {
      root: q6
    }
  }, l, {
    label: r,
    classes: d,
    ref: n
  }));
});
ph.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Is `true` if the current values equals the empty value.
   * For a single item value, it means that `value === null`
   * For a range value, it means that `value === [null, null]`
   */
  areAllSectionsEmpty: i.bool.isRequired,
  className: i.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: i.elementType,
  /**
   * If true, the whole element is editable.
   * Useful when all the sections are selected.
   */
  contentEditable: i.bool.isRequired,
  disableUnderline: i.bool,
  /**
   * The elements to render.
   * Each element contains the prop to edit a section of the value.
   */
  elements: i.arrayOf(i.shape({
    after: i.object.isRequired,
    before: i.object.isRequired,
    container: i.object.isRequired,
    content: i.object.isRequired
  })).isRequired,
  endAdornment: i.node,
  fullWidth: i.bool,
  id: i.string,
  inputProps: i.object,
  inputRef: Pn,
  label: i.node,
  margin: i.oneOf(["dense", "none", "normal"]),
  name: i.string,
  onChange: i.func.isRequired,
  onClick: i.func.isRequired,
  onInput: i.func.isRequired,
  onKeyDown: i.func.isRequired,
  onPaste: i.func.isRequired,
  ownerState: i.any,
  readOnly: i.bool,
  renderSuffix: i.func,
  sectionListRef: i.oneOfType([i.func, i.shape({
    current: i.shape({
      getRoot: i.func.isRequired,
      getSectionContainer: i.func.isRequired,
      getSectionContent: i.func.isRequired,
      getSectionIndexFromDOMElement: i.func.isRequired
    })
  })]),
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: i.object,
  /**
   * The components used for each slot inside.
   *
   * @default {}
   */
  slots: i.object,
  startAdornment: i.node,
  style: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  value: i.string.isRequired
};
ph.muiName = "Input";
var K6 = ["onFocus", "onBlur", "className", "color", "disabled", "error", "variant", "required", "InputProps", "inputProps", "inputRef", "sectionListRef", "elements", "areAllSectionsEmpty", "onClick", "onKeyDown", "onKeyUp", "onPaste", "onInput", "endAdornment", "startAdornment", "tabIndex", "contentEditable", "focused", "value", "onChange", "fullWidth", "id", "name", "helperText", "FormHelperTextProps", "label", "InputLabelProps"];
var Q6 = {
  standard: ph,
  filled: dh,
  outlined: lh
};
var e7 = K(So, {
  name: "MuiPickersTextField",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})({});
var t7 = (e10) => {
  const {
    focused: t,
    disabled: n,
    classes: o,
    required: r
  } = e10;
  return Tt({
    root: ["root", t && !n && "focused", n && "disabled", r && "required"]
  }, SU, o);
};
var Wd = S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiPickersTextField"
  }), {
    // Props used by FormControl
    onFocus: r,
    onBlur: s,
    className: a,
    color: l = "primary",
    disabled: c = false,
    error: u = false,
    variant: d = "outlined",
    required: p = false,
    // Props used by PickersInput
    InputProps: m,
    inputProps: g,
    inputRef: b,
    sectionListRef: v,
    elements: h,
    areAllSectionsEmpty: y,
    onClick: C,
    onKeyDown: x,
    onKeyUp: T,
    onPaste: w,
    onInput: R,
    endAdornment: E,
    startAdornment: O,
    tabIndex: I,
    contentEditable: P,
    focused: A,
    value: M,
    onChange: F,
    fullWidth: D,
    id: N,
    name: j,
    // Props used by FormHelperText
    helperText: _,
    FormHelperTextProps: z,
    // Props used by InputLabel
    label: $,
    InputLabelProps: k
  } = o, B = Xe(o, K6), Q = S.useRef(null), ee = Bn(n, Q), G = qs(N), H = _ && G ? `${G}-helper-text` : void 0, Y = $ && G ? `${G}-label` : void 0, J = V({}, o, {
    color: l,
    disabled: c,
    error: u,
    focused: A,
    required: p,
    variant: d
  }), U = t7(J), ne = Q6[d];
  return f.jsxs(e7, V({
    className: be(U.root, a),
    ref: ee,
    focused: A,
    onFocus: r,
    onBlur: s,
    disabled: c,
    variant: d,
    error: u,
    color: l,
    fullWidth: D,
    required: p,
    ownerState: J
  }, B, {
    children: [f.jsx(sd, V({
      htmlFor: G,
      id: Y
    }, k, {
      children: $
    })), f.jsx(ne, V({
      elements: h,
      areAllSectionsEmpty: y,
      onClick: C,
      onKeyDown: x,
      onKeyUp: T,
      onInput: R,
      onPaste: w,
      endAdornment: E,
      startAdornment: O,
      tabIndex: I,
      contentEditable: P,
      value: M,
      onChange: F,
      id: G,
      fullWidth: D,
      inputProps: g,
      inputRef: b,
      sectionListRef: v,
      label: $,
      name: j,
      role: "group",
      "aria-labelledby": Y
    }, m)), _ && f.jsx(id, V({
      id: H
    }, z, {
      children: _
    }))]
  }));
});
Wd.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Is `true` if the current values equals the empty value.
   * For a single item value, it means that `value === null`
   * For a range value, it means that `value === [null, null]`
   */
  areAllSectionsEmpty: i.bool.isRequired,
  className: i.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOf(["error", "info", "primary", "secondary", "success", "warning"]),
  component: i.elementType,
  /**
   * If true, the whole element is editable.
   * Useful when all the sections are selected.
   */
  contentEditable: i.bool.isRequired,
  disabled: i.bool.isRequired,
  /**
   * The elements to render.
   * Each element contains the prop to edit a section of the value.
   */
  elements: i.arrayOf(i.shape({
    after: i.object.isRequired,
    before: i.object.isRequired,
    container: i.object.isRequired,
    content: i.object.isRequired
  })).isRequired,
  endAdornment: i.node,
  error: i.bool.isRequired,
  /**
   * If `true`, the component is displayed in focused state.
   */
  focused: i.bool,
  FormHelperTextProps: i.object,
  fullWidth: i.bool,
  /**
   * The helper text content.
   */
  helperText: i.node,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: i.bool,
  id: i.string,
  InputLabelProps: i.object,
  inputProps: i.object,
  /**
   * Props applied to the Input element.
   * It will be a [`FilledInput`](/material-ui/api/filled-input/),
   * [`OutlinedInput`](/material-ui/api/outlined-input/) or [`Input`](/material-ui/api/input/)
   * component depending on the `variant` prop value.
   */
  InputProps: i.object,
  inputRef: Pn,
  label: i.node,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: i.oneOf(["dense", "none", "normal"]),
  name: i.string,
  onBlur: i.func.isRequired,
  onChange: i.func.isRequired,
  onClick: i.func.isRequired,
  onFocus: i.func.isRequired,
  onInput: i.func.isRequired,
  onKeyDown: i.func.isRequired,
  onPaste: i.func.isRequired,
  readOnly: i.bool,
  /**
   * If `true`, the label will indicate that the `input` is required.
   * @default false
   */
  required: i.bool,
  sectionListRef: i.oneOfType([i.func, i.shape({
    current: i.shape({
      getRoot: i.func.isRequired,
      getSectionContainer: i.func.isRequired,
      getSectionContent: i.func.isRequired,
      getSectionIndexFromDOMElement: i.func.isRequired
    })
  })]),
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: i.oneOf(["medium", "small"]),
  startAdornment: i.node,
  style: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  value: i.string.isRequired,
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: i.oneOf(["filled", "outlined", "standard"])
};
var n7 = ["enableAccessibleFieldDOMStructure"];
var o7 = ["InputProps", "readOnly"];
var r7 = ["onPaste", "onKeyDown", "inputMode", "readOnly", "InputProps", "inputProps", "inputRef"];
var fh = (e10) => {
  let {
    enableAccessibleFieldDOMStructure: t
  } = e10, n = Xe(e10, n7);
  if (t) {
    const {
      InputProps: p,
      readOnly: m
    } = n, g = Xe(n, o7);
    return V({}, g, {
      InputProps: V({}, p ?? {}, {
        readOnly: m
      })
    });
  }
  const {
    onPaste: o,
    onKeyDown: r,
    inputMode: s,
    readOnly: a,
    InputProps: l,
    inputProps: c,
    inputRef: u
  } = n, d = Xe(n, r7);
  return V({}, d, {
    InputProps: V({}, l ?? {}, {
      readOnly: a
    }),
    inputProps: V({}, c ?? {}, {
      inputMode: s,
      onPaste: o,
      onKeyDown: r,
      ref: u
    })
  });
};
var i7 = ["slots", "slotProps", "InputProps", "inputProps"];
var mh = S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiDateField"
  }), {
    slots: r,
    slotProps: s,
    InputProps: a,
    inputProps: l
  } = o, c = Xe(o, i7), u = o, d = (r == null ? void 0 : r.textField) ?? (t.enableAccessibleFieldDOMStructure ? Wd : _n), p = Pt({
    elementType: d,
    externalSlotProps: s == null ? void 0 : s.textField,
    externalForwardedProps: c,
    additionalProps: {
      ref: n
    },
    ownerState: u
  });
  p.inputProps = V({}, l, p.inputProps), p.InputProps = V({}, a, p.InputProps);
  const m = CU(p), g = fh(m), b = ih(V({}, g, {
    slots: r,
    slotProps: s
  }));
  return f.jsx(d, V({}, b));
});
mh.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the `input` element is focused during the first mount.
   * @default false
   */
  autoFocus: i.bool,
  className: i.string,
  /**
   * If `true`, a clear button will be shown in the field allowing value clearing.
   * @default false
   */
  clearable: i.bool,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOf(["error", "info", "primary", "secondary", "success", "warning"]),
  component: i.elementType,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.object,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: i.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: i.bool,
  /**
   * @default false
   */
  enableAccessibleFieldDOMStructure: i.bool,
  /**
   * If `true`, the component is displayed in focused state.
   */
  focused: i.bool,
  /**
   * Format of the date when rendered in the input(s).
   */
  format: i.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: i.oneOf(["dense", "spacious"]),
  /**
   * Props applied to the [`FormHelperText`](/material-ui/api/form-helper-text/) element.
   */
  FormHelperTextProps: i.object,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The helper text content.
   */
  helperText: i.node,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: i.bool,
  /**
   * The id of the `input` element.
   * Use this prop to make `label` and `helperText` accessible for screen readers.
   */
  id: i.string,
  /**
   * Props applied to the [`InputLabel`](/material-ui/api/input-label/) element.
   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.
   */
  InputLabelProps: i.object,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: i.object,
  /**
   * Props applied to the Input element.
   * It will be a [`FilledInput`](/material-ui/api/filled-input/),
   * [`OutlinedInput`](/material-ui/api/outlined-input/) or [`Input`](/material-ui/api/input/)
   * component depending on the `variant` prop value.
   */
  InputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Pn,
  /**
   * The label content.
   */
  label: i.node,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: i.oneOf(["dense", "none", "normal"]),
  /**
   * Maximal selectable date.
   * @default 2099-12-31
   */
  maxDate: i.object,
  /**
   * Minimal selectable date.
   * @default 1900-01-01
   */
  minDate: i.object,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  onBlur: i.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: i.func,
  /**
   * Callback fired when the clear button is clicked.
   */
  onClear: i.func,
  /**
   * Callback fired when the error associated with the current value changes.
   * When a validation error is detected, the `error` parameter contains a non-null value.
   * This can be used to render an appropriate form error.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @param {TError} error The reason why the current value is not valid.
   * @param {TValue} value The value associated with the error.
   */
  onError: i.func,
  onFocus: i.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: i.func,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   * @default false
   */
  readOnly: i.bool,
  /**
   * The date used to generate a part of the new value that is not present in the format when both `value` and `defaultValue` are empty.
   * For example, on time fields it will be used to determine the date to set.
   * @default The closest valid date using the validation props, except callbacks such as `shouldDisableDate`. Value is rounded to the most granular section used.
   */
  referenceDate: i.object,
  /**
   * If `true`, the label is displayed as required and the `input` element is required.
   * @default false
   */
  required: i.bool,
  /**
   * The currently selected sections.
   * This prop accepts four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 3. If `"all"` is provided, all the sections will be selected.
   * 4. If `null` is provided, no section will be selected.
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: i.oneOfType([i.oneOf(["all", "day", "empty", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), i.number]),
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (for example when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: i.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: i.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: i.func,
  /**
   * If `true`, the format will respect the leading zeroes (e.g: on dayjs, the format `M/D/YYYY` will render `8/16/2018`)
   * If `false`, the format will always add leading zeroes (e.g: on dayjs, the format `M/D/YYYY` will render `08/16/2018`)
   *
   * Warning n°1: Luxon is not able to respect the leading zeroes when using macro tokens (e.g: "DD"), so `shouldRespectLeadingZeros={true}` might lead to inconsistencies when using `AdapterLuxon`.
   *
   * Warning n°2: When `shouldRespectLeadingZeros={true}`, the field will add an invisible character on the sections containing a single digit to make sure `onChange` is fired.
   * If you need to get the clean value from the input, you can remove this character using `input.value.replace(/\u200e/g, '')`.
   *
   * Warning n°3: When used in strict mode, dayjs and moment require to respect the leading zeros.
   * This mean that when using `shouldRespectLeadingZeros={false}`, if you retrieve the value directly from the input (not listening to `onChange`) and your format contains tokens without leading zeros, the value will not be parsed by your library.
   *
   * @default false
   */
  shouldRespectLeadingZeros: i.bool,
  /**
   * The size of the component.
   */
  size: i.oneOf(["medium", "small"]),
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: i.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: i.object,
  style: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: i.string,
  /**
   * The ref object used to imperatively interact with the field.
   */
  unstableFieldRef: i.oneOfType([i.func, i.object]),
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: i.object,
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: i.oneOf(["filled", "outlined", "standard"])
};
var A1 = ({
  shouldDisableDate: e10,
  shouldDisableMonth: t,
  shouldDisableYear: n,
  minDate: o,
  maxDate: r,
  disableFuture: s,
  disablePast: a,
  timezone: l
}) => {
  const c = Ui();
  return S.useCallback((u) => Ks({
    adapter: c,
    value: u,
    timezone: l,
    props: {
      shouldDisableDate: e10,
      shouldDisableMonth: t,
      shouldDisableYear: n,
      minDate: o,
      maxDate: r,
      disableFuture: s,
      disablePast: a
    }
  }) !== null, [c, e10, t, n, o, r, s, a, l]);
};
var s7 = (e10, t, n) => (o, r) => {
  switch (r.type) {
    case "changeMonth":
      return V({}, o, {
        slideDirection: r.direction,
        currentMonth: r.newMonth,
        isMonthSwitchingAnimating: !e10
      });
    case "finishMonthSwitchingAnimation":
      return V({}, o, {
        isMonthSwitchingAnimating: false
      });
    case "changeFocusedDay": {
      if (o.focusedDay != null && r.focusedDay != null && n.isSameDay(r.focusedDay, o.focusedDay))
        return o;
      const s = r.focusedDay != null && !t && !n.isSameMonth(o.currentMonth, r.focusedDay);
      return V({}, o, {
        focusedDay: r.focusedDay,
        isMonthSwitchingAnimating: s && !e10 && !r.withoutMonthSwitchingAnimation,
        currentMonth: s ? n.startOfMonth(r.focusedDay) : o.currentMonth,
        slideDirection: r.focusedDay != null && n.isAfterDay(r.focusedDay, o.currentMonth) ? "left" : "right"
      });
    }
    default:
      throw new Error("missing support");
  }
};
var a7 = (e10) => {
  const {
    value: t,
    referenceDate: n,
    disableFuture: o,
    disablePast: r,
    disableSwitchToMonthOnDayFocus: s = false,
    maxDate: a,
    minDate: l,
    onMonthChange: c,
    reduceAnimations: u,
    shouldDisableDate: d,
    timezone: p
  } = e10, m = gt(), g = S.useRef(s7(!!u, s, m)).current, b = S.useMemo(
    () => ln.getInitialReferenceValue({
      value: t,
      utils: m,
      timezone: p,
      props: e10,
      referenceDate: n,
      granularity: Fo.day
    }),
    []
    // eslint-disable-line react-hooks/exhaustive-deps
  ), [v, h] = S.useReducer(g, {
    isMonthSwitchingAnimating: false,
    focusedDay: b,
    currentMonth: m.startOfMonth(b),
    slideDirection: "left"
  }), y = S.useCallback((R) => {
    h(V({
      type: "changeMonth"
    }, R)), c && c(R.newMonth);
  }, [c]), C = S.useCallback((R) => {
    const E = R;
    m.isSameMonth(E, v.currentMonth) || y({
      newMonth: m.startOfMonth(E),
      direction: m.isAfterDay(E, v.currentMonth) ? "left" : "right"
    });
  }, [v.currentMonth, y, m]), x = A1({
    shouldDisableDate: d,
    minDate: l,
    maxDate: a,
    disableFuture: o,
    disablePast: r,
    timezone: p
  }), T = S.useCallback(() => {
    h({
      type: "finishMonthSwitchingAnimation"
    });
  }, []), w = Ge((R, E) => {
    x(R) || h({
      type: "changeFocusedDay",
      focusedDay: R,
      withoutMonthSwitchingAnimation: E
    });
  });
  return {
    referenceDate: b,
    calendarState: v,
    changeMonth: C,
    changeFocusedDay: w,
    isDateDisabled: x,
    onMonthSwitchingAnimationEnd: T,
    handleChangeMonth: y
  };
};
var l7 = (e10) => Ot("MuiPickersFadeTransitionGroup", e10);
At("MuiPickersFadeTransitionGroup", ["root"]);
var c7 = (e10) => {
  const {
    classes: t
  } = e10;
  return Tt({
    root: ["root"]
  }, l7, t);
};
var u7 = K(El, {
  name: "MuiPickersFadeTransitionGroup",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})({
  display: "block",
  position: "relative"
});
function j1(e10) {
  const t = at({
    props: e10,
    name: "MuiPickersFadeTransitionGroup"
  }), {
    children: n,
    className: o,
    reduceAnimations: r,
    transKey: s
  } = t, a = c7(t), l = Sn();
  return r ? n : f.jsx(u7, {
    className: be(a.root, o),
    children: f.jsx(ii, {
      appear: false,
      mountOnEnter: true,
      unmountOnExit: true,
      timeout: {
        appear: l.transitions.duration.enteringScreen,
        enter: l.transitions.duration.enteringScreen,
        exit: 0
      },
      children: n
    }, s)
  });
}
function d7(e10) {
  return Ot("MuiPickersDay", e10);
}
var pi = At("MuiPickersDay", ["root", "dayWithMargin", "dayOutsideMonth", "hiddenDaySpacingFiller", "today", "selected", "disabled"]);
var p7 = ["autoFocus", "className", "day", "disabled", "disableHighlightToday", "disableMargin", "hidden", "isAnimating", "onClick", "onDaySelect", "onFocus", "onBlur", "onKeyDown", "onMouseDown", "onMouseEnter", "outsideCurrentMonth", "selected", "showDaysOutsideCurrentMonth", "children", "today", "isFirstVisibleCell", "isLastVisibleCell"];
var f7 = (e10) => {
  const {
    selected: t,
    disableMargin: n,
    disableHighlightToday: o,
    today: r,
    disabled: s,
    outsideCurrentMonth: a,
    showDaysOutsideCurrentMonth: l,
    classes: c
  } = e10, u = a && !l;
  return Tt({
    root: ["root", t && !u && "selected", s && "disabled", !n && "dayWithMargin", !o && r && "today", a && l && "dayOutsideMonth", u && "hiddenDaySpacingFiller"],
    hiddenDaySpacingFiller: ["hiddenDaySpacingFiller"]
  }, d7, c);
};
var D1 = ({
  theme: e10
}) => V({}, e10.typography.caption, {
  width: gl,
  height: gl,
  borderRadius: "50%",
  padding: 0,
  // explicitly setting to `transparent` to avoid potentially getting impacted by change from the overridden component
  backgroundColor: "transparent",
  transition: e10.transitions.create("background-color", {
    duration: e10.transitions.duration.short
  }),
  color: (e10.vars || e10).palette.text.primary,
  "@media (pointer: fine)": {
    "&:hover": {
      backgroundColor: e10.vars ? `rgba(${e10.vars.palette.primary.mainChannel} / ${e10.vars.palette.action.hoverOpacity})` : We(e10.palette.primary.main, e10.palette.action.hoverOpacity)
    }
  },
  "&:focus": {
    backgroundColor: e10.vars ? `rgba(${e10.vars.palette.primary.mainChannel} / ${e10.vars.palette.action.focusOpacity})` : We(e10.palette.primary.main, e10.palette.action.focusOpacity),
    [`&.${pi.selected}`]: {
      willChange: "background-color",
      backgroundColor: (e10.vars || e10).palette.primary.dark
    }
  },
  [`&.${pi.selected}`]: {
    color: (e10.vars || e10).palette.primary.contrastText,
    backgroundColor: (e10.vars || e10).palette.primary.main,
    fontWeight: e10.typography.fontWeightMedium,
    "&:hover": {
      willChange: "background-color",
      backgroundColor: (e10.vars || e10).palette.primary.dark
    }
  },
  [`&.${pi.disabled}:not(.${pi.selected})`]: {
    color: (e10.vars || e10).palette.text.disabled
  },
  [`&.${pi.disabled}&.${pi.selected}`]: {
    opacity: 0.6
  },
  variants: [{
    props: {
      disableMargin: false
    },
    style: {
      margin: `0 ${Ad}px`
    }
  }, {
    props: {
      outsideCurrentMonth: true,
      showDaysOutsideCurrentMonth: true
    },
    style: {
      color: (e10.vars || e10).palette.text.secondary
    }
  }, {
    props: {
      disableHighlightToday: false,
      today: true
    },
    style: {
      [`&:not(.${pi.selected})`]: {
        border: `1px solid ${(e10.vars || e10).palette.text.secondary}`
      }
    }
  }]
});
var M1 = (e10, t) => {
  const {
    ownerState: n
  } = e10;
  return [t.root, !n.disableMargin && t.dayWithMargin, !n.disableHighlightToday && n.today && t.today, !n.outsideCurrentMonth && n.showDaysOutsideCurrentMonth && t.dayOutsideMonth, n.outsideCurrentMonth && !n.showDaysOutsideCurrentMonth && t.hiddenDaySpacingFiller];
};
var m7 = K(Ro, {
  name: "MuiPickersDay",
  slot: "Root",
  overridesResolver: M1
})(D1);
var g7 = K("div", {
  name: "MuiPickersDay",
  slot: "Root",
  overridesResolver: M1
})(({
  theme: e10
}) => V({}, D1({
  theme: e10
}), {
  // visibility: 'hidden' does not work here as it hides the element from screen readers as well
  opacity: 0,
  pointerEvents: "none"
}));
var va = () => {
};
var k1 = S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiPickersDay"
  }), {
    autoFocus: r = false,
    className: s,
    day: a,
    disabled: l = false,
    disableHighlightToday: c = false,
    disableMargin: u = false,
    isAnimating: d,
    onClick: p,
    onDaySelect: m,
    onFocus: g = va,
    onBlur: b = va,
    onKeyDown: v = va,
    onMouseDown: h = va,
    onMouseEnter: y = va,
    outsideCurrentMonth: C,
    selected: x = false,
    showDaysOutsideCurrentMonth: T = false,
    children: w,
    today: R = false
  } = o, E = Xe(o, p7), O = V({}, o, {
    autoFocus: r,
    disabled: l,
    disableHighlightToday: c,
    disableMargin: u,
    selected: x,
    showDaysOutsideCurrentMonth: T,
    today: R
  }), I = f7(O), P = gt(), A = S.useRef(null), M = Bn(A, n);
  sr(() => {
    r && !l && !d && !C && A.current.focus();
  }, [r, l, d, C]);
  const F = (N) => {
    h(N), C && N.preventDefault();
  }, D = (N) => {
    l || m(a), C && N.currentTarget.focus(), p && p(N);
  };
  return C && !T ? f.jsx(g7, {
    className: be(I.root, I.hiddenDaySpacingFiller, s),
    ownerState: O,
    role: E.role
  }) : f.jsx(m7, V({
    className: be(I.root, s),
    ref: M,
    centerRipple: true,
    disabled: l,
    tabIndex: x ? 0 : -1,
    onKeyDown: (N) => v(N, a),
    onFocus: (N) => g(N, a),
    onBlur: (N) => b(N, a),
    onMouseEnter: (N) => y(N, a),
    onClick: D,
    onMouseDown: F
  }, E, {
    ownerState: O,
    children: w || P.format(a, "dayOfMonth")
  }));
});
k1.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * A ref for imperative actions.
   * It currently only supports `focusVisible()` action.
   */
  action: i.oneOfType([i.func, i.shape({
    current: i.shape({
      focusVisible: i.func.isRequired
    })
  })]),
  /**
   * If `true`, the ripples are centered.
   * They won't start at the cursor interaction position.
   * @default false
   */
  centerRipple: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  className: i.string,
  component: i.elementType,
  /**
   * The date to show.
   */
  day: i.object.isRequired,
  /**
   * If `true`, renders as disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: i.bool,
  /**
   * If `true`, days are rendering without margin. Useful for displaying linked range of days.
   * @default false
   */
  disableMargin: i.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: i.bool,
  /**
   * If `true`, the touch ripple effect is disabled.
   * @default false
   */
  disableTouchRipple: i.bool,
  /**
   * If `true`, the base button will have a keyboard focus ripple.
   * @default false
   */
  focusRipple: i.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: i.string,
  isAnimating: i.bool,
  /**
   * If `true`, day is the first visible cell of the month.
   * Either the first day of the month or the first day of the week depending on `showDaysOutsideCurrentMonth`.
   */
  isFirstVisibleCell: i.bool.isRequired,
  /**
   * If `true`, day is the last visible cell of the month.
   * Either the last day of the month or the last day of the week depending on `showDaysOutsideCurrentMonth`.
   */
  isLastVisibleCell: i.bool.isRequired,
  onBlur: i.func,
  onDaySelect: i.func.isRequired,
  onFocus: i.func,
  /**
   * Callback fired when the component is focused with a keyboard.
   * We trigger a `onFocus` callback too.
   */
  onFocusVisible: i.func,
  onKeyDown: i.func,
  onMouseEnter: i.func,
  /**
   * If `true`, day is outside of month and will be hidden.
   */
  outsideCurrentMonth: i.bool.isRequired,
  /**
   * If `true`, renders as selected.
   * @default false
   */
  selected: i.bool,
  /**
   * If `true`, days outside the current month are rendered:
   *
   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.
   *
   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.
   *
   * - ignored if `calendars` equals more than `1` on range pickers.
   * @default false
   */
  showDaysOutsideCurrentMonth: i.bool,
  style: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * @default 0
   */
  tabIndex: i.number,
  /**
   * If `true`, renders as today date.
   * @default false
   */
  today: i.bool,
  /**
   * Props applied to the `TouchRipple` element.
   */
  TouchRippleProps: i.object,
  /**
   * A ref that points to the `TouchRipple` element.
   */
  touchRippleRef: i.oneOfType([i.func, i.shape({
    current: i.shape({
      pulsate: i.func.isRequired,
      start: i.func.isRequired,
      stop: i.func.isRequired
    })
  })])
};
var h7 = S.memo(k1);
var b7 = (e10) => Ot("MuiPickersSlideTransition", e10);
var bo = At("MuiPickersSlideTransition", ["root", "slideEnter-left", "slideEnter-right", "slideEnterActive", "slideExit", "slideExitActiveLeft-left", "slideExitActiveLeft-right"]);
var v7 = ["children", "className", "reduceAnimations", "slideDirection", "transKey", "classes"];
var y7 = (e10) => {
  const {
    classes: t,
    slideDirection: n
  } = e10, o = {
    root: ["root"],
    exit: ["slideExit"],
    enterActive: ["slideEnterActive"],
    enter: [`slideEnter-${n}`],
    exitActive: [`slideExitActiveLeft-${n}`]
  };
  return Tt(o, b7, t);
};
var x7 = K(El, {
  name: "MuiPickersSlideTransition",
  slot: "Root",
  overridesResolver: (e10, t) => [t.root, {
    [`.${bo["slideEnter-left"]}`]: t["slideEnter-left"]
  }, {
    [`.${bo["slideEnter-right"]}`]: t["slideEnter-right"]
  }, {
    [`.${bo.slideEnterActive}`]: t.slideEnterActive
  }, {
    [`.${bo.slideExit}`]: t.slideExit
  }, {
    [`.${bo["slideExitActiveLeft-left"]}`]: t["slideExitActiveLeft-left"]
  }, {
    [`.${bo["slideExitActiveLeft-right"]}`]: t["slideExitActiveLeft-right"]
  }]
})(({
  theme: e10
}) => {
  const t = e10.transitions.create("transform", {
    duration: e10.transitions.duration.complex,
    easing: "cubic-bezier(0.35, 0.8, 0.4, 1)"
  });
  return {
    display: "block",
    position: "relative",
    overflowX: "hidden",
    "& > *": {
      position: "absolute",
      top: 0,
      right: 0,
      left: 0
    },
    [`& .${bo["slideEnter-left"]}`]: {
      willChange: "transform",
      transform: "translate(100%)",
      zIndex: 1
    },
    [`& .${bo["slideEnter-right"]}`]: {
      willChange: "transform",
      transform: "translate(-100%)",
      zIndex: 1
    },
    [`& .${bo.slideEnterActive}`]: {
      transform: "translate(0%)",
      transition: t
    },
    [`& .${bo.slideExit}`]: {
      transform: "translate(0%)"
    },
    [`& .${bo["slideExitActiveLeft-left"]}`]: {
      willChange: "transform",
      transform: "translate(-100%)",
      transition: t,
      zIndex: 0
    },
    [`& .${bo["slideExitActiveLeft-right"]}`]: {
      willChange: "transform",
      transform: "translate(100%)",
      transition: t,
      zIndex: 0
    }
  };
});
function C7(e10) {
  const t = at({
    props: e10,
    name: "MuiPickersSlideTransition"
  }), {
    children: n,
    className: o,
    reduceAnimations: r,
    transKey: s
    // extracting `classes` from `other`
  } = t, a = Xe(t, v7), l = y7(t), c = Sn();
  if (r)
    return f.jsx("div", {
      className: be(l.root, o),
      children: n
    });
  const u = {
    exit: l.exit,
    enterActive: l.enterActive,
    enter: l.enter,
    exitActive: l.exitActive
  };
  return f.jsx(x7, {
    className: be(l.root, o),
    childFactory: (d) => S.cloneElement(d, {
      classNames: u
    }),
    role: "presentation",
    children: f.jsx(Xm, V({
      mountOnEnter: true,
      unmountOnExit: true,
      timeout: c.transitions.duration.complex,
      classNames: u
    }, a, {
      children: n
    }), s)
  });
}
var S7 = (e10) => Ot("MuiDayCalendar", e10);
At("MuiDayCalendar", ["root", "header", "weekDayLabel", "loadingContainer", "slideTransition", "monthContainer", "weekContainer", "weekNumberLabel", "weekNumber"]);
var w7 = ["parentProps", "day", "focusableDay", "selectedDays", "isDateDisabled", "currentMonthNumber", "isViewFocused"];
var T7 = ["ownerState"];
var I7 = (e10) => {
  const {
    classes: t
  } = e10;
  return Tt({
    root: ["root"],
    header: ["header"],
    weekDayLabel: ["weekDayLabel"],
    loadingContainer: ["loadingContainer"],
    slideTransition: ["slideTransition"],
    monthContainer: ["monthContainer"],
    weekContainer: ["weekContainer"],
    weekNumberLabel: ["weekNumberLabel"],
    weekNumber: ["weekNumber"]
  }, S7, t);
};
var F1 = (gl + Ad * 2) * 6;
var R7 = K("div", {
  name: "MuiDayCalendar",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})({});
var E7 = K("div", {
  name: "MuiDayCalendar",
  slot: "Header",
  overridesResolver: (e10, t) => t.header
})({
  display: "flex",
  justifyContent: "center",
  alignItems: "center"
});
var O7 = K(Fe, {
  name: "MuiDayCalendar",
  slot: "WeekDayLabel",
  overridesResolver: (e10, t) => t.weekDayLabel
})(({
  theme: e10
}) => ({
  width: 36,
  height: 40,
  margin: "0 2px",
  textAlign: "center",
  display: "flex",
  justifyContent: "center",
  alignItems: "center",
  color: (e10.vars || e10).palette.text.secondary
}));
var P7 = K(Fe, {
  name: "MuiDayCalendar",
  slot: "WeekNumberLabel",
  overridesResolver: (e10, t) => t.weekNumberLabel
})(({
  theme: e10
}) => ({
  width: 36,
  height: 40,
  margin: "0 2px",
  textAlign: "center",
  display: "flex",
  justifyContent: "center",
  alignItems: "center",
  color: e10.palette.text.disabled
}));
var A7 = K(Fe, {
  name: "MuiDayCalendar",
  slot: "WeekNumber",
  overridesResolver: (e10, t) => t.weekNumber
})(({
  theme: e10
}) => V({}, e10.typography.caption, {
  width: gl,
  height: gl,
  padding: 0,
  margin: `0 ${Ad}px`,
  color: e10.palette.text.disabled,
  fontSize: "0.75rem",
  alignItems: "center",
  justifyContent: "center",
  display: "inline-flex"
}));
var j7 = K("div", {
  name: "MuiDayCalendar",
  slot: "LoadingContainer",
  overridesResolver: (e10, t) => t.loadingContainer
})({
  display: "flex",
  justifyContent: "center",
  alignItems: "center",
  minHeight: F1
});
var D7 = K(C7, {
  name: "MuiDayCalendar",
  slot: "SlideTransition",
  overridesResolver: (e10, t) => t.slideTransition
})({
  minHeight: F1
});
var M7 = K("div", {
  name: "MuiDayCalendar",
  slot: "MonthContainer",
  overridesResolver: (e10, t) => t.monthContainer
})({
  overflow: "hidden"
});
var k7 = K("div", {
  name: "MuiDayCalendar",
  slot: "WeekContainer",
  overridesResolver: (e10, t) => t.weekContainer
})({
  margin: `${Ad}px 0`,
  display: "flex",
  justifyContent: "center"
});
function F7(e10) {
  let {
    parentProps: t,
    day: n,
    focusableDay: o,
    selectedDays: r,
    isDateDisabled: s,
    currentMonthNumber: a,
    isViewFocused: l
  } = e10, c = Xe(e10, w7);
  const {
    disabled: u,
    disableHighlightToday: d,
    isMonthSwitchingAnimating: p,
    showDaysOutsideCurrentMonth: m,
    slots: g,
    slotProps: b,
    timezone: v
  } = t, h = gt(), y = Yi(v), C = o !== null && h.isSameDay(n, o), x = r.some((M) => h.isSameDay(M, n)), T = h.isSameDay(n, y), w = (g == null ? void 0 : g.day) ?? h7, R = Pt({
    elementType: w,
    externalSlotProps: b == null ? void 0 : b.day,
    additionalProps: V({
      disableHighlightToday: d,
      showDaysOutsideCurrentMonth: m,
      role: "gridcell",
      isAnimating: p,
      // it is used in date range dragging logic by accessing `dataset.timestamp`
      "data-timestamp": h.toJsDate(n).valueOf()
    }, c),
    ownerState: V({}, t, {
      day: n,
      selected: x
    })
  }), E = Xe(R, T7), O = S.useMemo(() => u || s(n), [u, s, n]), I = S.useMemo(() => h.getMonth(n) !== a, [h, n, a]), P = S.useMemo(() => {
    const M = h.startOfMonth(h.setMonth(n, a));
    return m ? h.isSameDay(n, h.startOfWeek(M)) : h.isSameDay(n, M);
  }, [a, n, m, h]), A = S.useMemo(() => {
    const M = h.endOfMonth(h.setMonth(n, a));
    return m ? h.isSameDay(n, h.endOfWeek(M)) : h.isSameDay(n, M);
  }, [a, n, m, h]);
  return f.jsx(w, V({}, E, {
    day: n,
    disabled: O,
    autoFocus: l && C,
    today: T,
    outsideCurrentMonth: I,
    isFirstVisibleCell: P,
    isLastVisibleCell: A,
    selected: x,
    tabIndex: C ? 0 : -1,
    "aria-selected": x,
    "aria-current": T ? "date" : void 0
  }));
}
function N7(e10) {
  const t = at({
    props: e10,
    name: "MuiDayCalendar"
  }), n = gt(), {
    onFocusedDayChange: o,
    className: r,
    currentMonth: s,
    selectedDays: a,
    focusedDay: l,
    loading: c,
    onSelectedDaysChange: u,
    onMonthSwitchingAnimationEnd: d,
    readOnly: p,
    reduceAnimations: m,
    renderLoading: g = () => f.jsx("span", {
      children: "..."
    }),
    slideDirection: b,
    TransitionProps: v,
    disablePast: h,
    disableFuture: y,
    minDate: C,
    maxDate: x,
    shouldDisableDate: T,
    shouldDisableMonth: w,
    shouldDisableYear: R,
    dayOfWeekFormatter: E = (te) => n.format(te, "weekdayShort").charAt(0).toUpperCase(),
    hasFocus: O,
    onFocusedViewChange: I,
    gridLabelId: P,
    displayWeekNumber: A,
    fixedWeekNumber: M,
    autoFocus: F,
    timezone: D
  } = t, N = Yi(D), j = I7(t), _ = mo(), z = A1({
    shouldDisableDate: T,
    shouldDisableMonth: w,
    shouldDisableYear: R,
    minDate: C,
    maxDate: x,
    disablePast: h,
    disableFuture: y,
    timezone: D
  }), $ = gn(), [k, B] = Mi({
    name: "DayCalendar",
    state: "hasFocus",
    controlled: O,
    default: F ?? false
  }), [Q, ee] = S.useState(() => l || N), G = Ge((te) => {
    p || u(te);
  }), H = (te) => {
    z(te) || (o(te), ee(te), I == null || I(true), B(true));
  }, Y = Ge((te, le) => {
    switch (te.key) {
      case "ArrowUp":
        H(n.addDays(le, -7)), te.preventDefault();
        break;
      case "ArrowDown":
        H(n.addDays(le, 7)), te.preventDefault();
        break;
      case "ArrowLeft": {
        const ue = n.addDays(le, _ ? 1 : -1), ve = n.addMonths(le, _ ? 1 : -1), Te = _a({
          utils: n,
          date: ue,
          minDate: _ ? ue : n.startOfMonth(ve),
          maxDate: _ ? n.endOfMonth(ve) : ue,
          isDateDisabled: z,
          timezone: D
        });
        H(Te || ue), te.preventDefault();
        break;
      }
      case "ArrowRight": {
        const ue = n.addDays(le, _ ? -1 : 1), ve = n.addMonths(le, _ ? -1 : 1), Te = _a({
          utils: n,
          date: ue,
          minDate: _ ? n.startOfMonth(ve) : ue,
          maxDate: _ ? ue : n.endOfMonth(ve),
          isDateDisabled: z,
          timezone: D
        });
        H(Te || ue), te.preventDefault();
        break;
      }
      case "Home":
        H(n.startOfWeek(le)), te.preventDefault();
        break;
      case "End":
        H(n.endOfWeek(le)), te.preventDefault();
        break;
      case "PageUp":
        H(n.addMonths(le, 1)), te.preventDefault();
        break;
      case "PageDown":
        H(n.addMonths(le, -1)), te.preventDefault();
        break;
    }
  }), J = Ge((te, le) => H(le)), U = Ge((te, le) => {
    k && n.isSameDay(Q, le) && (I == null || I(false));
  }), ne = n.getMonth(s), se = n.getYear(s), oe = S.useMemo(() => a.filter((te) => !!te).map((te) => n.startOfDay(te)), [n, a]), W = `${se}-${ne}`, Z = S.useMemo(() => S.createRef(), [W]), L = S.useMemo(() => {
    const te = n.startOfMonth(s), le = n.endOfMonth(s);
    return z(Q) || n.isAfterDay(Q, le) || n.isBeforeDay(Q, te) ? _a({
      utils: n,
      date: Q,
      minDate: te,
      maxDate: le,
      disablePast: h,
      disableFuture: y,
      isDateDisabled: z,
      timezone: D
    }) : Q;
  }, [s, y, h, Q, z, n, D]), ie = S.useMemo(() => {
    const te = n.setTimezone(s, D), le = n.getWeekArray(te);
    let ue = n.addMonths(te, 1);
    for (; M && le.length < M; ) {
      const ve = n.getWeekArray(ue), Te = n.isSameDay(le[le.length - 1][0], ve[0][0]);
      ve.slice(Te ? 1 : 0).forEach((Re) => {
        le.length < M && le.push(Re);
      }), ue = n.addMonths(ue, 1);
    }
    return le;
  }, [s, M, n, D]);
  return f.jsxs(R7, {
    role: "grid",
    "aria-labelledby": P,
    className: j.root,
    children: [f.jsxs(E7, {
      role: "row",
      className: j.header,
      children: [A && f.jsx(P7, {
        variant: "caption",
        role: "columnheader",
        "aria-label": $.calendarWeekNumberHeaderLabel,
        className: j.weekNumberLabel,
        children: $.calendarWeekNumberHeaderText
      }), V3(n, N).map((te, le) => f.jsx(O7, {
        variant: "caption",
        role: "columnheader",
        "aria-label": n.format(te, "weekday"),
        className: j.weekDayLabel,
        children: E(te)
      }, le.toString()))]
    }), c ? f.jsx(j7, {
      className: j.loadingContainer,
      children: g()
    }) : f.jsx(D7, V({
      transKey: W,
      onExited: d,
      reduceAnimations: m,
      slideDirection: b,
      className: be(r, j.slideTransition)
    }, v, {
      nodeRef: Z,
      children: f.jsx(M7, {
        ref: Z,
        role: "rowgroup",
        className: j.monthContainer,
        children: ie.map((te, le) => f.jsxs(k7, {
          role: "row",
          className: j.weekContainer,
          "aria-rowindex": le + 1,
          children: [A && f.jsx(A7, {
            className: j.weekNumber,
            role: "rowheader",
            "aria-label": $.calendarWeekNumberAriaLabelText(n.getWeekNumber(te[0])),
            children: $.calendarWeekNumberText(n.getWeekNumber(te[0]))
          }), te.map((ue, ve) => f.jsx(F7, {
            parentProps: t,
            day: ue,
            selectedDays: oe,
            focusableDay: L,
            onKeyDown: Y,
            onFocus: J,
            onBlur: U,
            onDaySelect: G,
            isDateDisabled: z,
            currentMonthNumber: ne,
            isViewFocused: k,
            "aria-colindex": ve + 1
          }, ue.toString()))]
        }, `week-${te[0]}`))
      })
    }))]
  });
}
function $7(e10) {
  return Ot("MuiPickersMonth", e10);
}
var hc = At("MuiPickersMonth", ["root", "monthButton", "disabled", "selected"]);
var V7 = ["autoFocus", "className", "children", "disabled", "selected", "value", "tabIndex", "onClick", "onKeyDown", "onFocus", "onBlur", "aria-current", "aria-label", "monthsPerRow", "slots", "slotProps"];
var _7 = (e10) => {
  const {
    disabled: t,
    selected: n,
    classes: o
  } = e10;
  return Tt({
    root: ["root"],
    monthButton: ["monthButton", t && "disabled", n && "selected"]
  }, $7, o);
};
var L7 = K("div", {
  name: "MuiPickersMonth",
  slot: "Root",
  overridesResolver: (e10, t) => [t.root]
})({
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  flexBasis: "33.3%",
  variants: [{
    props: {
      monthsPerRow: 4
    },
    style: {
      flexBasis: "25%"
    }
  }]
});
var B7 = K("button", {
  name: "MuiPickersMonth",
  slot: "MonthButton",
  overridesResolver: (e10, t) => [t.monthButton, {
    [`&.${hc.disabled}`]: t.disabled
  }, {
    [`&.${hc.selected}`]: t.selected
  }]
})(({
  theme: e10
}) => V({
  color: "unset",
  backgroundColor: "transparent",
  border: 0,
  outline: 0
}, e10.typography.subtitle1, {
  margin: "8px 0",
  height: 36,
  width: 72,
  borderRadius: 18,
  cursor: "pointer",
  "&:focus": {
    backgroundColor: e10.vars ? `rgba(${e10.vars.palette.action.activeChannel} / ${e10.vars.palette.action.hoverOpacity})` : We(e10.palette.action.active, e10.palette.action.hoverOpacity)
  },
  "&:hover": {
    backgroundColor: e10.vars ? `rgba(${e10.vars.palette.action.activeChannel} / ${e10.vars.palette.action.hoverOpacity})` : We(e10.palette.action.active, e10.palette.action.hoverOpacity)
  },
  "&:disabled": {
    cursor: "auto",
    pointerEvents: "none"
  },
  [`&.${hc.disabled}`]: {
    color: (e10.vars || e10).palette.text.secondary
  },
  [`&.${hc.selected}`]: {
    color: (e10.vars || e10).palette.primary.contrastText,
    backgroundColor: (e10.vars || e10).palette.primary.main,
    "&:focus, &:hover": {
      backgroundColor: (e10.vars || e10).palette.primary.dark
    }
  }
}));
var z7 = S.memo(function(t) {
  const n = at({
    props: t,
    name: "MuiPickersMonth"
  }), {
    autoFocus: o,
    className: r,
    children: s,
    disabled: a,
    selected: l,
    value: c,
    tabIndex: u,
    onClick: d,
    onKeyDown: p,
    onFocus: m,
    onBlur: g,
    "aria-current": b,
    "aria-label": v,
    slots: h,
    slotProps: y
  } = n, C = Xe(n, V7), x = S.useRef(null), T = _7(n);
  sr(() => {
    var E;
    o && ((E = x.current) == null || E.focus());
  }, [o]);
  const w = (h == null ? void 0 : h.monthButton) ?? B7, R = Pt({
    elementType: w,
    externalSlotProps: y == null ? void 0 : y.monthButton,
    additionalProps: {
      children: s,
      disabled: a,
      tabIndex: u,
      ref: x,
      type: "button",
      role: "radio",
      "aria-current": b,
      "aria-checked": l,
      "aria-label": v,
      onClick: (E) => d(E, c),
      onKeyDown: (E) => p(E, c),
      onFocus: (E) => m(E, c),
      onBlur: (E) => g(E, c)
    },
    ownerState: n,
    className: T.monthButton
  });
  return f.jsx(L7, V({
    className: be(T.root, r),
    ownerState: n
  }, C, {
    children: f.jsx(w, V({}, R))
  }));
});
function W7(e10) {
  return Ot("MuiMonthCalendar", e10);
}
At("MuiMonthCalendar", ["root"]);
var H7 = ["className", "value", "defaultValue", "referenceDate", "disabled", "disableFuture", "disablePast", "maxDate", "minDate", "onChange", "shouldDisableMonth", "readOnly", "disableHighlightToday", "autoFocus", "onMonthFocus", "hasFocus", "onFocusedViewChange", "monthsPerRow", "timezone", "gridLabelId", "slots", "slotProps"];
var G7 = (e10) => {
  const {
    classes: t
  } = e10;
  return Tt({
    root: ["root"]
  }, W7, t);
};
function U7(e10, t) {
  const n = gt(), o = Xi(), r = at({
    props: e10,
    name: t
  });
  return V({
    disableFuture: false,
    disablePast: false
  }, r, {
    minDate: kn(n, r.minDate, o.minDate),
    maxDate: kn(n, r.maxDate, o.maxDate)
  });
}
var X7 = K("div", {
  name: "MuiMonthCalendar",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})({
  display: "flex",
  flexWrap: "wrap",
  alignContent: "stretch",
  padding: "0 4px",
  width: jd,
  // avoid padding increasing width over defined
  boxSizing: "border-box"
});
var N1 = S.forwardRef(function(t, n) {
  const o = U7(t, "MuiMonthCalendar"), {
    className: r,
    value: s,
    defaultValue: a,
    referenceDate: l,
    disabled: c,
    disableFuture: u,
    disablePast: d,
    maxDate: p,
    minDate: m,
    onChange: g,
    shouldDisableMonth: b,
    readOnly: v,
    autoFocus: h = false,
    onMonthFocus: y,
    hasFocus: C,
    onFocusedViewChange: x,
    monthsPerRow: T = 3,
    timezone: w,
    gridLabelId: R,
    slots: E,
    slotProps: O
  } = o, I = Xe(o, H7), {
    value: P,
    handleValueChange: A,
    timezone: M
  } = ea({
    name: "MonthCalendar",
    timezone: w,
    value: s,
    defaultValue: a,
    onChange: g,
    valueManager: ln
  }), F = Yi(M), D = mo(), N = gt(), j = S.useMemo(
    () => ln.getInitialReferenceValue({
      value: P,
      utils: N,
      props: o,
      timezone: M,
      referenceDate: l,
      granularity: Fo.month
    }),
    []
    // eslint-disable-line react-hooks/exhaustive-deps
  ), _ = o, z = G7(_), $ = S.useMemo(() => N.getMonth(F), [N, F]), k = S.useMemo(() => P != null ? N.getMonth(P) : null, [P, N]), [B, Q] = S.useState(() => k || N.getMonth(j)), [ee, G] = Mi({
    name: "MonthCalendar",
    state: "hasFocus",
    controlled: C,
    default: h ?? false
  }), H = Ge((W) => {
    G(W), x && x(W);
  }), Y = S.useCallback((W) => {
    const Z = N.startOfMonth(d && N.isAfter(F, m) ? F : m), L = N.startOfMonth(u && N.isBefore(F, p) ? F : p), ie = N.startOfMonth(W);
    return N.isBefore(ie, Z) || N.isAfter(ie, L) ? true : b ? b(ie) : false;
  }, [u, d, p, m, F, b, N]), J = Ge((W, Z) => {
    if (v)
      return;
    const L = N.setMonth(P ?? j, Z);
    A(L);
  }), U = Ge((W) => {
    Y(N.setMonth(P ?? j, W)) || (Q(W), H(true), y && y(W));
  });
  S.useEffect(() => {
    Q((W) => k !== null && W !== k ? k : W);
  }, [k]);
  const ne = Ge((W, Z) => {
    switch (W.key) {
      case "ArrowUp":
        U((12 + Z - 3) % 12), W.preventDefault();
        break;
      case "ArrowDown":
        U((12 + Z + 3) % 12), W.preventDefault();
        break;
      case "ArrowLeft":
        U((12 + Z + (D ? 1 : -1)) % 12), W.preventDefault();
        break;
      case "ArrowRight":
        U((12 + Z + (D ? -1 : 1)) % 12), W.preventDefault();
        break;
    }
  }), se = Ge((W, Z) => {
    U(Z);
  }), oe = Ge((W, Z) => {
    B === Z && H(false);
  });
  return f.jsx(X7, V({
    ref: n,
    className: be(z.root, r),
    ownerState: _,
    role: "radiogroup",
    "aria-labelledby": R
  }, I, {
    children: Ug(N, P ?? j).map((W) => {
      const Z = N.getMonth(W), L = N.format(W, "monthShort"), ie = N.format(W, "month"), te = Z === k, le = c || Y(W);
      return f.jsx(z7, {
        selected: te,
        value: Z,
        onClick: J,
        onKeyDown: ne,
        autoFocus: ee && Z === B,
        disabled: le,
        tabIndex: Z === B && !le ? 0 : -1,
        onFocus: se,
        onBlur: oe,
        "aria-current": $ === Z ? "date" : void 0,
        "aria-label": ie,
        monthsPerRow: T,
        slots: E,
        slotProps: O,
        children: L
      }, L);
    })
  }));
});
N1.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  className: i.string,
  /**
   * The default selected value.
   * Used when the component is not controlled.
   */
  defaultValue: i.object,
  /**
   * If `true` picker is disabled
   */
  disabled: i.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: i.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: i.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: i.bool,
  gridLabelId: i.string,
  hasFocus: i.bool,
  /**
   * Maximal selectable date.
   * @default 2099-12-31
   */
  maxDate: i.object,
  /**
   * Minimal selectable date.
   * @default 1900-01-01
   */
  minDate: i.object,
  /**
   * Months rendered per row.
   * @default 3
   */
  monthsPerRow: i.oneOf([3, 4]),
  /**
   * Callback fired when the value changes.
   * @template TDate
   * @param {TDate} value The new value.
   */
  onChange: i.func,
  onFocusedViewChange: i.func,
  onMonthFocus: i.func,
  /**
   * If `true` picker is readonly
   */
  readOnly: i.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid month using the validation props, except callbacks such as `shouldDisableMonth`.
   */
  referenceDate: i.object,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: i.func,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: i.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: i.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: i.object
};
function Y7(e10) {
  return Ot("MuiPickersYear", e10);
}
var bc = At("MuiPickersYear", ["root", "yearButton", "selected", "disabled"]);
var Z7 = ["autoFocus", "className", "children", "disabled", "selected", "value", "tabIndex", "onClick", "onKeyDown", "onFocus", "onBlur", "aria-current", "yearsPerRow", "slots", "slotProps"];
var q7 = (e10) => {
  const {
    disabled: t,
    selected: n,
    classes: o
  } = e10;
  return Tt({
    root: ["root"],
    yearButton: ["yearButton", t && "disabled", n && "selected"]
  }, Y7, o);
};
var J7 = K("div", {
  name: "MuiPickersYear",
  slot: "Root",
  overridesResolver: (e10, t) => [t.root]
})({
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  flexBasis: "33.3%",
  variants: [{
    props: {
      yearsPerRow: 4
    },
    style: {
      flexBasis: "25%"
    }
  }]
});
var K7 = K("button", {
  name: "MuiPickersYear",
  slot: "YearButton",
  overridesResolver: (e10, t) => [t.yearButton, {
    [`&.${bc.disabled}`]: t.disabled
  }, {
    [`&.${bc.selected}`]: t.selected
  }]
})(({
  theme: e10
}) => V({
  color: "unset",
  backgroundColor: "transparent",
  border: 0,
  outline: 0
}, e10.typography.subtitle1, {
  margin: "6px 0",
  height: 36,
  width: 72,
  borderRadius: 18,
  cursor: "pointer",
  "&:focus": {
    backgroundColor: e10.vars ? `rgba(${e10.vars.palette.action.activeChannel} / ${e10.vars.palette.action.focusOpacity})` : We(e10.palette.action.active, e10.palette.action.focusOpacity)
  },
  "&:hover": {
    backgroundColor: e10.vars ? `rgba(${e10.vars.palette.action.activeChannel} / ${e10.vars.palette.action.hoverOpacity})` : We(e10.palette.action.active, e10.palette.action.hoverOpacity)
  },
  "&:disabled": {
    cursor: "auto",
    pointerEvents: "none"
  },
  [`&.${bc.disabled}`]: {
    color: (e10.vars || e10).palette.text.secondary
  },
  [`&.${bc.selected}`]: {
    color: (e10.vars || e10).palette.primary.contrastText,
    backgroundColor: (e10.vars || e10).palette.primary.main,
    "&:focus, &:hover": {
      backgroundColor: (e10.vars || e10).palette.primary.dark
    }
  }
}));
var Q7 = S.memo(function(t) {
  const n = at({
    props: t,
    name: "MuiPickersYear"
  }), {
    autoFocus: o,
    className: r,
    children: s,
    disabled: a,
    selected: l,
    value: c,
    tabIndex: u,
    onClick: d,
    onKeyDown: p,
    onFocus: m,
    onBlur: g,
    "aria-current": b,
    slots: v,
    slotProps: h
  } = n, y = Xe(n, Z7), C = S.useRef(null), x = q7(n);
  sr(() => {
    var R;
    o && ((R = C.current) == null || R.focus());
  }, [o]);
  const T = (v == null ? void 0 : v.yearButton) ?? K7, w = Pt({
    elementType: T,
    externalSlotProps: h == null ? void 0 : h.yearButton,
    additionalProps: {
      children: s,
      disabled: a,
      tabIndex: u,
      ref: C,
      type: "button",
      role: "radio",
      "aria-current": b,
      "aria-checked": l,
      onClick: (R) => d(R, c),
      onKeyDown: (R) => p(R, c),
      onFocus: (R) => m(R, c),
      onBlur: (R) => g(R, c)
    },
    ownerState: n,
    className: x.yearButton
  });
  return f.jsx(J7, V({
    className: be(x.root, r),
    ownerState: n
  }, y, {
    children: f.jsx(T, V({}, w))
  }));
});
function eX(e10) {
  return Ot("MuiYearCalendar", e10);
}
At("MuiYearCalendar", ["root"]);
var tX = ["autoFocus", "className", "value", "defaultValue", "referenceDate", "disabled", "disableFuture", "disablePast", "maxDate", "minDate", "onChange", "readOnly", "shouldDisableYear", "disableHighlightToday", "onYearFocus", "hasFocus", "onFocusedViewChange", "yearsOrder", "yearsPerRow", "timezone", "gridLabelId", "slots", "slotProps"];
var nX = (e10) => {
  const {
    classes: t
  } = e10;
  return Tt({
    root: ["root"]
  }, eX, t);
};
function oX(e10, t) {
  const n = gt(), o = Xi(), r = at({
    props: e10,
    name: t
  });
  return V({
    disablePast: false,
    disableFuture: false
  }, r, {
    yearsPerRow: r.yearsPerRow ?? 3,
    minDate: kn(n, r.minDate, o.minDate),
    maxDate: kn(n, r.maxDate, o.maxDate)
  });
}
var rX = K("div", {
  name: "MuiYearCalendar",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})({
  display: "flex",
  flexDirection: "row",
  flexWrap: "wrap",
  overflowY: "auto",
  height: "100%",
  padding: "0 4px",
  width: jd,
  maxHeight: BG,
  // avoid padding increasing width over defined
  boxSizing: "border-box",
  position: "relative"
});
var $1 = S.forwardRef(function(t, n) {
  const o = oX(t, "MuiYearCalendar"), {
    autoFocus: r,
    className: s,
    value: a,
    defaultValue: l,
    referenceDate: c,
    disabled: u,
    disableFuture: d,
    disablePast: p,
    maxDate: m,
    minDate: g,
    onChange: b,
    readOnly: v,
    shouldDisableYear: h,
    onYearFocus: y,
    hasFocus: C,
    onFocusedViewChange: x,
    yearsOrder: T = "asc",
    yearsPerRow: w,
    timezone: R,
    gridLabelId: E,
    slots: O,
    slotProps: I
  } = o, P = Xe(o, tX), {
    value: A,
    handleValueChange: M,
    timezone: F
  } = ea({
    name: "YearCalendar",
    timezone: R,
    value: a,
    defaultValue: l,
    onChange: b,
    valueManager: ln
  }), D = Yi(F), N = mo(), j = gt(), _ = S.useMemo(
    () => ln.getInitialReferenceValue({
      value: A,
      utils: j,
      props: o,
      timezone: F,
      referenceDate: c,
      granularity: Fo.year
    }),
    []
    // eslint-disable-line react-hooks/exhaustive-deps
  ), z = o, $ = nX(z), k = S.useMemo(() => j.getYear(D), [j, D]), B = S.useMemo(() => A != null ? j.getYear(A) : null, [A, j]), [Q, ee] = S.useState(() => B || j.getYear(_)), [G, H] = Mi({
    name: "YearCalendar",
    state: "hasFocus",
    controlled: C,
    default: r ?? false
  }), Y = Ge((ue) => {
    H(ue), x && x(ue);
  }), J = S.useCallback((ue) => {
    if (p && j.isBeforeYear(ue, D) || d && j.isAfterYear(ue, D) || g && j.isBeforeYear(ue, g) || m && j.isAfterYear(ue, m))
      return true;
    if (!h)
      return false;
    const ve = j.startOfYear(ue);
    return h(ve);
  }, [d, p, m, g, D, h, j]), U = Ge((ue, ve) => {
    if (v)
      return;
    const Te = j.setYear(A ?? _, ve);
    M(Te);
  }), ne = Ge((ue) => {
    J(j.setYear(A ?? _, ue)) || (ee(ue), Y(true), y == null || y(ue));
  });
  S.useEffect(() => {
    ee((ue) => B !== null && ue !== B ? B : ue);
  }, [B]);
  const se = T !== "desc" ? w * 1 : w * -1, oe = N || T === "desc" ? -1 : 1, W = Ge((ue, ve) => {
    switch (ue.key) {
      case "ArrowUp":
        ne(ve - se), ue.preventDefault();
        break;
      case "ArrowDown":
        ne(ve + se), ue.preventDefault();
        break;
      case "ArrowLeft":
        ne(ve - oe), ue.preventDefault();
        break;
      case "ArrowRight":
        ne(ve + oe), ue.preventDefault();
        break;
    }
  }), Z = Ge((ue, ve) => {
    ne(ve);
  }), L = Ge((ue, ve) => {
    Q === ve && Y(false);
  }), ie = S.useRef(null), te = Bn(n, ie);
  S.useEffect(() => {
    if (r || ie.current === null)
      return;
    const ue = ie.current.querySelector('[tabindex="0"]');
    if (!ue)
      return;
    const ve = ue.offsetHeight, Te = ue.offsetTop, Re = ie.current.clientHeight, re = ie.current.scrollTop, X = Te + ve;
    ve > Re || Te < re || (ie.current.scrollTop = X - Re / 2 - ve / 2);
  }, [r]);
  const le = j.getYearRange([g, m]);
  return T === "desc" && le.reverse(), f.jsx(rX, V({
    ref: te,
    className: be($.root, s),
    ownerState: z,
    role: "radiogroup",
    "aria-labelledby": E
  }, P, {
    children: le.map((ue) => {
      const ve = j.getYear(ue), Te = ve === B, Re = u || J(ue);
      return f.jsx(Q7, {
        selected: Te,
        value: ve,
        onClick: U,
        onKeyDown: W,
        autoFocus: G && ve === Q,
        disabled: Re,
        tabIndex: ve === Q && !Re ? 0 : -1,
        onFocus: Z,
        onBlur: L,
        "aria-current": k === ve ? "date" : void 0,
        yearsPerRow: w,
        slots: O,
        slotProps: I,
        children: j.format(ue, "year")
      }, j.format(ue, "year"));
    })
  }));
});
$1.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  className: i.string,
  /**
   * The default selected value.
   * Used when the component is not controlled.
   */
  defaultValue: i.object,
  /**
   * If `true` picker is disabled
   */
  disabled: i.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: i.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: i.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: i.bool,
  gridLabelId: i.string,
  hasFocus: i.bool,
  /**
   * Maximal selectable date.
   * @default 2099-12-31
   */
  maxDate: i.object,
  /**
   * Minimal selectable date.
   * @default 1900-01-01
   */
  minDate: i.object,
  /**
   * Callback fired when the value changes.
   * @template TDate
   * @param {TDate} value The new value.
   */
  onChange: i.func,
  onFocusedViewChange: i.func,
  onYearFocus: i.func,
  /**
   * If `true` picker is readonly
   */
  readOnly: i.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid year using the validation props, except callbacks such as `shouldDisableYear`.
   */
  referenceDate: i.object,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: i.func,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: i.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: i.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: i.object,
  /**
   * Years are displayed in ascending (chronological) order by default.
   * If `desc`, years are displayed in descending order.
   * @default 'asc'
   */
  yearsOrder: i.oneOf(["asc", "desc"]),
  /**
   * Years rendered per row.
   * @default 3
   */
  yearsPerRow: i.oneOf([3, 4])
};
var iX = (e10) => Ot("MuiPickersCalendarHeader", e10);
var sX = At("MuiPickersCalendarHeader", ["root", "labelContainer", "label", "switchViewButton", "switchViewIcon"]);
function aX(e10) {
  return Ot("MuiPickersArrowSwitcher", e10);
}
At("MuiPickersArrowSwitcher", ["root", "spacer", "button", "previousIconButton", "nextIconButton", "leftArrowIcon", "rightArrowIcon"]);
var lX = ["children", "className", "slots", "slotProps", "isNextDisabled", "isNextHidden", "onGoToNext", "nextLabel", "isPreviousDisabled", "isPreviousHidden", "onGoToPrevious", "previousLabel", "labelId"];
var cX = ["ownerState"];
var uX = ["ownerState"];
var dX = K("div", {
  name: "MuiPickersArrowSwitcher",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})({
  display: "flex"
});
var pX = K("div", {
  name: "MuiPickersArrowSwitcher",
  slot: "Spacer",
  overridesResolver: (e10, t) => t.spacer
})(({
  theme: e10
}) => ({
  width: e10.spacing(3)
}));
var S0 = K(lt, {
  name: "MuiPickersArrowSwitcher",
  slot: "Button",
  overridesResolver: (e10, t) => t.button
})({
  variants: [{
    props: {
      hidden: true
    },
    style: {
      visibility: "hidden"
    }
  }]
});
var fX = (e10) => {
  const {
    classes: t
  } = e10;
  return Tt({
    root: ["root"],
    spacer: ["spacer"],
    button: ["button"],
    previousIconButton: ["previousIconButton"],
    nextIconButton: ["nextIconButton"],
    leftArrowIcon: ["leftArrowIcon"],
    rightArrowIcon: ["rightArrowIcon"]
  }, aX, t);
};
var V1 = S.forwardRef(function(t, n) {
  const o = mo(), r = at({
    props: t,
    name: "MuiPickersArrowSwitcher"
  }), {
    children: s,
    className: a,
    slots: l,
    slotProps: c,
    isNextDisabled: u,
    isNextHidden: d,
    onGoToNext: p,
    nextLabel: m,
    isPreviousDisabled: g,
    isPreviousHidden: b,
    onGoToPrevious: v,
    previousLabel: h,
    labelId: y
  } = r, C = Xe(r, lX), x = r, T = fX(x), w = {
    isDisabled: u,
    isHidden: d,
    goTo: p,
    label: m
  }, R = {
    isDisabled: g,
    isHidden: b,
    goTo: v,
    label: h
  }, E = (l == null ? void 0 : l.previousIconButton) ?? S0, O = Pt({
    elementType: E,
    externalSlotProps: c == null ? void 0 : c.previousIconButton,
    additionalProps: {
      size: "medium",
      title: R.label,
      "aria-label": R.label,
      disabled: R.isDisabled,
      edge: "end",
      onClick: R.goTo
    },
    ownerState: V({}, x, {
      hidden: R.isHidden
    }),
    className: be(T.button, T.previousIconButton)
  }), I = (l == null ? void 0 : l.nextIconButton) ?? S0, P = Pt({
    elementType: I,
    externalSlotProps: c == null ? void 0 : c.nextIconButton,
    additionalProps: {
      size: "medium",
      title: w.label,
      "aria-label": w.label,
      disabled: w.isDisabled,
      edge: "start",
      onClick: w.goTo
    },
    ownerState: V({}, x, {
      hidden: w.isHidden
    }),
    className: be(T.button, T.nextIconButton)
  }), A = (l == null ? void 0 : l.leftArrowIcon) ?? JG, M = Pt({
    elementType: A,
    externalSlotProps: c == null ? void 0 : c.leftArrowIcon,
    additionalProps: {
      fontSize: "inherit"
    },
    ownerState: x,
    className: T.leftArrowIcon
  }), F = Xe(M, cX), D = (l == null ? void 0 : l.rightArrowIcon) ?? KG, N = Pt({
    elementType: D,
    externalSlotProps: c == null ? void 0 : c.rightArrowIcon,
    additionalProps: {
      fontSize: "inherit"
    },
    ownerState: x,
    className: T.rightArrowIcon
  }), j = Xe(N, uX);
  return f.jsxs(dX, V({
    ref: n,
    className: be(T.root, a),
    ownerState: x
  }, C, {
    children: [f.jsx(E, V({}, O, {
      children: o ? f.jsx(D, V({}, j)) : f.jsx(A, V({}, F))
    })), s ? f.jsx(Fe, {
      variant: "subtitle1",
      component: "span",
      id: y,
      children: s
    }) : f.jsx(pX, {
      className: T.spacer,
      ownerState: x
    }), f.jsx(I, V({}, P, {
      children: o ? f.jsx(A, V({}, F)) : f.jsx(D, V({}, j))
    }))]
  }));
});
function mX(e10, {
  disableFuture: t,
  maxDate: n,
  timezone: o
}) {
  const r = gt();
  return S.useMemo(() => {
    const s = r.date(void 0, o), a = r.startOfMonth(t && r.isBefore(s, n) ? s : n);
    return !r.isAfter(a, e10);
  }, [t, n, e10, r, o]);
}
function gX(e10, {
  disablePast: t,
  minDate: n,
  timezone: o
}) {
  const r = gt();
  return S.useMemo(() => {
    const s = r.date(void 0, o), a = r.startOfMonth(t && r.isAfter(s, n) ? s : n);
    return !r.isBefore(a, e10);
  }, [t, n, e10, r, o]);
}
function Hd(e10, t, n, o) {
  const r = gt(), s = _3(e10, r), a = S.useCallback((l) => {
    const c = e10 == null ? null : L3(e10, l, !!t, r);
    n(c, o ?? "partial");
  }, [t, e10, n, o, r]);
  return {
    meridiemMode: s,
    handleMeridiemChange: a
  };
}
var hX = ["slots", "slotProps", "currentMonth", "disabled", "disableFuture", "disablePast", "maxDate", "minDate", "onMonthChange", "onViewChange", "view", "reduceAnimations", "views", "labelId", "className", "timezone", "format"];
var bX = ["ownerState"];
var vX = (e10) => {
  const {
    classes: t
  } = e10;
  return Tt({
    root: ["root"],
    labelContainer: ["labelContainer"],
    label: ["label"],
    switchViewButton: ["switchViewButton"],
    switchViewIcon: ["switchViewIcon"]
  }, iX, t);
};
var yX = K("div", {
  name: "MuiPickersCalendarHeader",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})({
  display: "flex",
  alignItems: "center",
  marginTop: 12,
  marginBottom: 4,
  paddingLeft: 24,
  paddingRight: 12,
  // prevent jumping in safari
  maxHeight: 40,
  minHeight: 40
});
var xX = K("div", {
  name: "MuiPickersCalendarHeader",
  slot: "LabelContainer",
  overridesResolver: (e10, t) => t.labelContainer
})(({
  theme: e10
}) => V({
  display: "flex",
  overflow: "hidden",
  alignItems: "center",
  cursor: "pointer",
  marginRight: "auto"
}, e10.typography.body1, {
  fontWeight: e10.typography.fontWeightMedium
}));
var CX = K("div", {
  name: "MuiPickersCalendarHeader",
  slot: "Label",
  overridesResolver: (e10, t) => t.label
})({
  marginRight: 6
});
var SX = K(lt, {
  name: "MuiPickersCalendarHeader",
  slot: "SwitchViewButton",
  overridesResolver: (e10, t) => t.switchViewButton
})({
  marginRight: "auto",
  variants: [{
    props: {
      view: "year"
    },
    style: {
      [`.${sX.switchViewIcon}`]: {
        transform: "rotate(180deg)"
      }
    }
  }]
});
var wX = K(qG, {
  name: "MuiPickersCalendarHeader",
  slot: "SwitchViewIcon",
  overridesResolver: (e10, t) => t.switchViewIcon
})(({
  theme: e10
}) => ({
  willChange: "transform",
  transition: e10.transitions.create("transform"),
  transform: "rotate(0deg)"
}));
var _1 = S.forwardRef(function(t, n) {
  const o = gn(), r = gt(), s = at({
    props: t,
    name: "MuiPickersCalendarHeader"
  }), {
    slots: a,
    slotProps: l,
    currentMonth: c,
    disabled: u,
    disableFuture: d,
    disablePast: p,
    maxDate: m,
    minDate: g,
    onMonthChange: b,
    onViewChange: v,
    view: h,
    reduceAnimations: y,
    views: C,
    labelId: x,
    className: T,
    timezone: w,
    format: R = `${r.formats.month} ${r.formats.year}`
  } = s, E = Xe(s, hX), O = s, I = vX(s), P = (a == null ? void 0 : a.switchViewButton) ?? SX, A = Pt({
    elementType: P,
    externalSlotProps: l == null ? void 0 : l.switchViewButton,
    additionalProps: {
      size: "small",
      "aria-label": o.calendarViewSwitchingButtonAriaLabel(h)
    },
    ownerState: O,
    className: I.switchViewButton
  }), M = (a == null ? void 0 : a.switchViewIcon) ?? wX, F = Pt({
    elementType: M,
    externalSlotProps: l == null ? void 0 : l.switchViewIcon,
    ownerState: O,
    className: I.switchViewIcon
  }), D = Xe(F, bX), N = () => b(r.addMonths(c, 1), "left"), j = () => b(r.addMonths(c, -1), "right"), _ = mX(c, {
    disableFuture: d,
    maxDate: m,
    timezone: w
  }), z = gX(c, {
    disablePast: p,
    minDate: g,
    timezone: w
  }), $ = () => {
    if (!(C.length === 1 || !v || u))
      if (C.length === 2)
        v(C.find((B) => B !== h) || C[0]);
      else {
        const B = C.indexOf(h) !== 0 ? 0 : 1;
        v(C[B]);
      }
  };
  if (C.length === 1 && C[0] === "year")
    return null;
  const k = r.formatByString(c, R);
  return f.jsxs(yX, V({}, E, {
    ownerState: O,
    className: be(T, I.root),
    ref: n,
    children: [f.jsxs(xX, {
      role: "presentation",
      onClick: $,
      ownerState: O,
      "aria-live": "polite",
      className: I.labelContainer,
      children: [f.jsx(j1, {
        reduceAnimations: y,
        transKey: k,
        children: f.jsx(CX, {
          id: x,
          ownerState: O,
          className: I.label,
          children: k
        })
      }), C.length > 1 && !u && f.jsx(P, V({}, A, {
        children: f.jsx(M, V({}, D))
      }))]
    }), f.jsx(ii, {
      in: h === "day",
      children: f.jsx(V1, {
        slots: a,
        slotProps: l,
        onGoToPrevious: j,
        isPreviousDisabled: z,
        previousLabel: o.previousMonth,
        onGoToNext: N,
        isNextDisabled: _,
        nextLabel: o.nextMonth
      })
    })]
  }));
});
_1.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  className: i.string,
  currentMonth: i.object.isRequired,
  disabled: i.bool,
  disableFuture: i.bool,
  disablePast: i.bool,
  /**
   * Format used to display the date.
   * @default `${adapter.formats.month} ${adapter.formats.year}`
   */
  format: i.string,
  /**
   * Id of the calendar text element.
   * It is used to establish an `aria-labelledby` relationship with the calendar `grid` element.
   */
  labelId: i.string,
  maxDate: i.object.isRequired,
  minDate: i.object.isRequired,
  onMonthChange: i.func.isRequired,
  onViewChange: i.func,
  reduceAnimations: i.bool.isRequired,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: i.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  timezone: i.string.isRequired,
  view: i.oneOf(["day", "month", "year"]).isRequired,
  views: i.arrayOf(i.oneOf(["day", "month", "year"]).isRequired).isRequired
};
var Gd = K("div")({
  overflow: "hidden",
  width: jd,
  maxHeight: Dd,
  display: "flex",
  flexDirection: "column",
  margin: "0 auto"
});
var TX = (e10) => Ot("MuiDateCalendar", e10);
At("MuiDateCalendar", ["root", "viewTransitionContainer"]);
var IX = ["autoFocus", "onViewChange", "value", "defaultValue", "referenceDate", "disableFuture", "disablePast", "onChange", "onYearChange", "onMonthChange", "reduceAnimations", "shouldDisableDate", "shouldDisableMonth", "shouldDisableYear", "view", "views", "openTo", "className", "disabled", "readOnly", "minDate", "maxDate", "disableHighlightToday", "focusedView", "onFocusedViewChange", "showDaysOutsideCurrentMonth", "fixedWeekNumber", "dayOfWeekFormatter", "slots", "slotProps", "loading", "renderLoading", "displayWeekNumber", "yearsOrder", "yearsPerRow", "monthsPerRow", "timezone"];
var RX = (e10) => {
  const {
    classes: t
  } = e10;
  return Tt({
    root: ["root"],
    viewTransitionContainer: ["viewTransitionContainer"]
  }, TX, t);
};
function EX(e10, t) {
  const n = gt(), o = Xi(), r = l1(), s = at({
    props: e10,
    name: t
  });
  return V({}, s, {
    loading: s.loading ?? false,
    disablePast: s.disablePast ?? false,
    disableFuture: s.disableFuture ?? false,
    openTo: s.openTo ?? "day",
    views: s.views ?? ["year", "day"],
    reduceAnimations: s.reduceAnimations ?? r,
    renderLoading: s.renderLoading ?? (() => f.jsx("span", {
      children: "..."
    })),
    minDate: kn(n, s.minDate, o.minDate),
    maxDate: kn(n, s.maxDate, o.maxDate)
  });
}
var OX = K(Gd, {
  name: "MuiDateCalendar",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})({
  display: "flex",
  flexDirection: "column",
  height: Dd
});
var PX = K(j1, {
  name: "MuiDateCalendar",
  slot: "ViewTransitionContainer",
  overridesResolver: (e10, t) => t.viewTransitionContainer
})({});
var L1 = S.forwardRef(function(t, n) {
  const o = gt(), r = qs(), s = EX(t, "MuiDateCalendar"), {
    autoFocus: a,
    onViewChange: l,
    value: c,
    defaultValue: u,
    referenceDate: d,
    disableFuture: p,
    disablePast: m,
    onChange: g,
    onYearChange: b,
    onMonthChange: v,
    reduceAnimations: h,
    shouldDisableDate: y,
    shouldDisableMonth: C,
    shouldDisableYear: x,
    view: T,
    views: w,
    openTo: R,
    className: E,
    disabled: O,
    readOnly: I,
    minDate: P,
    maxDate: A,
    disableHighlightToday: M,
    focusedView: F,
    onFocusedViewChange: D,
    showDaysOutsideCurrentMonth: N,
    fixedWeekNumber: j,
    dayOfWeekFormatter: _,
    slots: z,
    slotProps: $,
    loading: k,
    renderLoading: B,
    displayWeekNumber: Q,
    yearsOrder: ee,
    yearsPerRow: G,
    monthsPerRow: H,
    timezone: Y
  } = s, J = Xe(s, IX), {
    value: U,
    handleValueChange: ne,
    timezone: se
  } = ea({
    name: "DateCalendar",
    timezone: Y,
    value: c,
    defaultValue: u,
    onChange: g,
    valueManager: ln
  }), {
    view: oe,
    setView: W,
    focusedView: Z,
    setFocusedView: L,
    goToNextView: ie,
    setValueAndGoToNextView: te
  } = Ll({
    view: T,
    views: w,
    openTo: R,
    onChange: ne,
    onViewChange: l,
    autoFocus: a,
    focusedView: F,
    onFocusedViewChange: D
  }), {
    referenceDate: le,
    calendarState: ue,
    changeFocusedDay: ve,
    changeMonth: Te,
    handleChangeMonth: Re,
    isDateDisabled: re,
    onMonthSwitchingAnimationEnd: X
  } = a7({
    value: U,
    referenceDate: d,
    reduceAnimations: h,
    onMonthChange: v,
    minDate: P,
    maxDate: A,
    shouldDisableDate: y,
    disablePast: m,
    disableFuture: p,
    timezone: se
  }), ae = O && U || P, ce = O && U || A, ge = `${r}-grid-label`, Se = Z !== null, ye = (z == null ? void 0 : z.calendarHeader) ?? _1, Ee = Pt({
    elementType: ye,
    externalSlotProps: $ == null ? void 0 : $.calendarHeader,
    additionalProps: {
      views: w,
      view: oe,
      currentMonth: ue.currentMonth,
      onViewChange: W,
      onMonthChange: (ke, st) => Re({
        newMonth: ke,
        direction: st
      }),
      minDate: ae,
      maxDate: ce,
      disabled: O,
      disablePast: m,
      disableFuture: p,
      reduceAnimations: h,
      timezone: se,
      labelId: ge
    },
    ownerState: s
  }), Le = Ge((ke) => {
    const st = o.startOfMonth(ke), pt = o.endOfMonth(ke), it = re(ke) ? _a({
      utils: o,
      date: ke,
      minDate: o.isBefore(P, st) ? st : P,
      maxDate: o.isAfter(A, pt) ? pt : A,
      disablePast: m,
      disableFuture: p,
      isDateDisabled: re,
      timezone: se
    }) : ke;
    it ? (te(it, "finish"), v == null || v(st)) : (ie(), Te(st)), ve(it, true);
  }), Ae = Ge((ke) => {
    const st = o.startOfYear(ke), pt = o.endOfYear(ke), it = re(ke) ? _a({
      utils: o,
      date: ke,
      minDate: o.isBefore(P, st) ? st : P,
      maxDate: o.isAfter(A, pt) ? pt : A,
      disablePast: m,
      disableFuture: p,
      isDateDisabled: re,
      timezone: se
    }) : ke;
    it ? (te(it, "finish"), b == null || b(it)) : (ie(), Te(st)), ve(it, true);
  }), tt = Ge((ke) => ne(ke && pu(o, ke, U ?? le), "finish", oe));
  S.useEffect(() => {
    U != null && o.isValid(U) && Te(U);
  }, [U]);
  const Ze = s, ut = RX(Ze), me = {
    disablePast: m,
    disableFuture: p,
    maxDate: A,
    minDate: P
  }, Oe = {
    disableHighlightToday: M,
    readOnly: I,
    disabled: O,
    timezone: se,
    gridLabelId: ge,
    slots: z,
    slotProps: $
  }, he = S.useRef(oe);
  S.useEffect(() => {
    he.current !== oe && (Z === he.current && L(oe, true), he.current = oe);
  }, [Z, L, oe]);
  const Me = S.useMemo(() => [U], [U]);
  return f.jsxs(OX, V({
    ref: n,
    className: be(ut.root, E),
    ownerState: Ze
  }, J, {
    children: [f.jsx(ye, V({}, Ee, {
      slots: z,
      slotProps: $
    })), f.jsx(PX, {
      reduceAnimations: h,
      className: ut.viewTransitionContainer,
      transKey: oe,
      ownerState: Ze,
      children: f.jsxs("div", {
        children: [oe === "year" && f.jsx($1, V({}, me, Oe, {
          value: U,
          onChange: Ae,
          shouldDisableYear: x,
          hasFocus: Se,
          onFocusedViewChange: (ke) => L("year", ke),
          yearsOrder: ee,
          yearsPerRow: G,
          referenceDate: le
        })), oe === "month" && f.jsx(N1, V({}, me, Oe, {
          hasFocus: Se,
          className: E,
          value: U,
          onChange: Le,
          shouldDisableMonth: C,
          onFocusedViewChange: (ke) => L("month", ke),
          monthsPerRow: H,
          referenceDate: le
        })), oe === "day" && f.jsx(N7, V({}, ue, me, Oe, {
          onMonthSwitchingAnimationEnd: X,
          onFocusedDayChange: ve,
          reduceAnimations: h,
          selectedDays: Me,
          onSelectedDaysChange: tt,
          shouldDisableDate: y,
          shouldDisableMonth: C,
          shouldDisableYear: x,
          hasFocus: Se,
          onFocusedViewChange: (ke) => L("day", ke),
          showDaysOutsideCurrentMonth: N,
          fixedWeekNumber: j,
          dayOfWeekFormatter: _,
          displayWeekNumber: Q,
          loading: k,
          renderLoading: B
        }))]
      })
    })]
  }));
});
L1.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  className: i.string,
  /**
   * Formats the day of week displayed in the calendar header.
   * @param {TDate} date The date of the day of week provided by the adapter.
   * @returns {string} The name to display.
   * @default (date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()
   */
  dayOfWeekFormatter: i.func,
  /**
   * The default selected value.
   * Used when the component is not controlled.
   */
  defaultValue: i.object,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: i.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: i.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: i.bool,
  /**
   * If `true`, the week number will be display in the calendar.
   */
  displayWeekNumber: i.bool,
  /**
   * The day view will show as many weeks as needed after the end of the current month to match this value.
   * Put it to 6 to have a fixed number of weeks in Gregorian calendars
   */
  fixedWeekNumber: i.number,
  /**
   * Controlled focused view.
   */
  focusedView: i.oneOf(["day", "month", "year"]),
  /**
   * If `true`, calls `renderLoading` instead of rendering the day calendar.
   * Can be used to preload information and show it in calendar.
   * @default false
   */
  loading: i.bool,
  /**
   * Maximal selectable date.
   * @default 2099-12-31
   */
  maxDate: i.object,
  /**
   * Minimal selectable date.
   * @default 1900-01-01
   */
  minDate: i.object,
  /**
   * Months rendered per row.
   * @default 3
   */
  monthsPerRow: i.oneOf([3, 4]),
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TView The view type. Will be one of date or time views.
   * @param {TValue} value The new value.
   * @param {PickerSelectionState | undefined} selectionState Indicates if the date selection is complete.
   * @param {TView | undefined} selectedView Indicates the view in which the selection has been made.
   */
  onChange: i.func,
  /**
   * Callback fired on focused view change.
   * @template TView
   * @param {TView} view The new view to focus or not.
   * @param {boolean} hasFocus `true` if the view should be focused.
   */
  onFocusedViewChange: i.func,
  /**
   * Callback fired on month change.
   * @template TDate
   * @param {TDate} month The new month.
   */
  onMonthChange: i.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: i.func,
  /**
   * Callback fired on year change.
   * @template TDate
   * @param {TDate} year The new year.
   */
  onYearChange: i.func,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: i.oneOf(["day", "month", "year"]),
  /**
   * Make picker read only.
   * @default false
   */
  readOnly: i.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: i.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date using the validation props, except callbacks such as `shouldDisableDate`.
   */
  referenceDate: i.object,
  /**
   * Component displaying when passed `loading` true.
   * @returns {React.ReactNode} The node to render when loading.
   * @default () => <span data-mui-test="loading-progress">...</span>
   */
  renderLoading: i.func,
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (for example when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: i.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: i.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: i.func,
  /**
   * If `true`, days outside the current month are rendered:
   *
   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.
   *
   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.
   *
   * - ignored if `calendars` equals more than `1` on range pickers.
   * @default false
   */
  showDaysOutsideCurrentMonth: i.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: i.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: i.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: i.object,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: i.oneOf(["day", "month", "year"]),
  /**
   * Available views.
   */
  views: i.arrayOf(i.oneOf(["day", "month", "year"]).isRequired),
  /**
   * Years are displayed in ascending (chronological) order by default.
   * If `desc`, years are displayed in descending order.
   * @default 'asc'
   */
  yearsOrder: i.oneOf(["asc", "desc"]),
  /**
   * Years rendered per row.
   * @default 3
   */
  yearsPerRow: i.oneOf([3, 4])
};
var Io = ({
  view: e10,
  onViewChange: t,
  views: n,
  focusedView: o,
  onFocusedViewChange: r,
  value: s,
  defaultValue: a,
  referenceDate: l,
  onChange: c,
  className: u,
  classes: d,
  disableFuture: p,
  disablePast: m,
  minDate: g,
  maxDate: b,
  shouldDisableDate: v,
  shouldDisableMonth: h,
  shouldDisableYear: y,
  reduceAnimations: C,
  onMonthChange: x,
  monthsPerRow: T,
  onYearChange: w,
  yearsOrder: R,
  yearsPerRow: E,
  slots: O,
  slotProps: I,
  loading: P,
  renderLoading: A,
  disableHighlightToday: M,
  readOnly: F,
  disabled: D,
  showDaysOutsideCurrentMonth: N,
  dayOfWeekFormatter: j,
  sx: _,
  autoFocus: z,
  fixedWeekNumber: $,
  displayWeekNumber: k,
  timezone: B
}) => f.jsx(L1, {
  view: e10,
  onViewChange: t,
  views: n.filter(Fs),
  focusedView: o && Fs(o) ? o : null,
  onFocusedViewChange: r,
  value: s,
  defaultValue: a,
  referenceDate: l,
  onChange: c,
  className: u,
  classes: d,
  disableFuture: p,
  disablePast: m,
  minDate: g,
  maxDate: b,
  shouldDisableDate: v,
  shouldDisableMonth: h,
  shouldDisableYear: y,
  reduceAnimations: C,
  onMonthChange: x,
  monthsPerRow: T,
  onYearChange: w,
  yearsOrder: R,
  yearsPerRow: E,
  slots: O,
  slotProps: I,
  loading: P,
  renderLoading: A,
  disableHighlightToday: M,
  readOnly: F,
  disabled: D,
  showDaysOutsideCurrentMonth: N,
  dayOfWeekFormatter: j,
  sx: _,
  autoFocus: z,
  fixedWeekNumber: $,
  displayWeekNumber: k,
  timezone: B
});
var B1 = S.forwardRef(function(t, n) {
  var u, d;
  const o = gn(), r = gt(), s = i1(t, "MuiDesktopDatePicker"), a = V({
    day: Io,
    month: Io,
    year: Io
  }, s.viewRenderers), l = V({}, s, {
    viewRenderers: a,
    format: fl(r, s, false),
    yearsPerRow: s.yearsPerRow ?? 4,
    slots: V({
      openPickerIcon: b1,
      field: mh
    }, s.slots),
    slotProps: V({}, s.slotProps, {
      field: (p) => {
        var m;
        return V({}, ti((m = s.slotProps) == null ? void 0 : m.field, p), Qs(s), {
          ref: n
        });
      },
      toolbar: V({
        hidden: true
      }, (u = s.slotProps) == null ? void 0 : u.toolbar)
    })
  }), {
    renderPicker: c
  } = oh({
    props: l,
    valueManager: ln,
    valueType: "date",
    getOpenDialogAriaText: Js({
      utils: r,
      formatKey: "fullDate",
      contextTranslation: o.openDatePickerDialogue,
      propsTranslation: (d = l.localeText) == null ? void 0 : d.openDatePickerDialogue
    }),
    validator: Ks
  });
  return c();
});
B1.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: i.bool,
  className: i.string,
  /**
   * If `true`, the popover or modal will close after submitting the full date.
   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).
   */
  closeOnSelect: i.bool,
  /**
   * Formats the day of week displayed in the calendar header.
   * @param {TDate} date The date of the day of week provided by the adapter.
   * @returns {string} The name to display.
   * @default (date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()
   */
  dayOfWeekFormatter: i.func,
  /**
   * The default value.
   * Used when the component is not controlled.
   */
  defaultValue: i.object,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: i.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: i.bool,
  /**
   * If `true`, the open picker button will not be rendered (renders only the field).
   * @default false
   */
  disableOpenPicker: i.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: i.bool,
  /**
   * If `true`, the week number will be display in the calendar.
   */
  displayWeekNumber: i.bool,
  /**
   * @default false
   */
  enableAccessibleFieldDOMStructure: i.any,
  /**
   * The day view will show as many weeks as needed after the end of the current month to match this value.
   * Put it to 6 to have a fixed number of weeks in Gregorian calendars
   */
  fixedWeekNumber: i.number,
  /**
   * Format of the date when rendered in the input(s).
   * Defaults to localized format based on the used `views`.
   */
  format: i.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: i.oneOf(["dense", "spacious"]),
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Pn,
  /**
   * The label content.
   */
  label: i.node,
  /**
   * If `true`, calls `renderLoading` instead of rendering the day calendar.
   * Can be used to preload information and show it in calendar.
   * @default false
   */
  loading: i.bool,
  /**
   * Locale for components texts.
   * Allows overriding texts coming from `LocalizationProvider` and `theme`.
   */
  localeText: i.object,
  /**
   * Maximal selectable date.
   * @default 2099-12-31
   */
  maxDate: i.object,
  /**
   * Minimal selectable date.
   * @default 1900-01-01
   */
  minDate: i.object,
  /**
   * Months rendered per row.
   * @default 3
   */
  monthsPerRow: i.oneOf([3, 4]),
  /**
   * Name attribute used by the `input` element in the Field.
   */
  name: i.string,
  /**
   * Callback fired when the value is accepted.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The value that was just accepted.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onAccept: i.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: i.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see `open`).
   */
  onClose: i.func,
  /**
   * Callback fired when the error associated with the current value changes.
   * When a validation error is detected, the `error` parameter contains a non-null value.
   * This can be used to render an appropriate form error.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @param {TError} error The reason why the current value is not valid.
   * @param {TValue} value The value associated with the error.
   */
  onError: i.func,
  /**
   * Callback fired on month change.
   * @template TDate
   * @param {TDate} month The new month.
   */
  onMonthChange: i.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see `open`).
   */
  onOpen: i.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: i.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: i.func,
  /**
   * Callback fired on year change.
   * @template TDate
   * @param {TDate} year The new year.
   */
  onYearChange: i.func,
  /**
   * Control the popup or dialog open state.
   * @default false
   */
  open: i.bool,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: i.oneOf(["day", "month", "year"]),
  /**
   * Force rendering in particular orientation.
   */
  orientation: i.oneOf(["landscape", "portrait"]),
  readOnly: i.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: i.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.
   */
  referenceDate: i.object,
  /**
   * Component displaying when passed `loading` true.
   * @returns {React.ReactNode} The node to render when loading.
   * @default () => <span data-mui-test="loading-progress">...</span>
   */
  renderLoading: i.func,
  /**
   * The currently selected sections.
   * This prop accepts four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 3. If `"all"` is provided, all the sections will be selected.
   * 4. If `null` is provided, no section will be selected.
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: i.oneOfType([i.oneOf(["all", "day", "empty", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), i.number]),
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (for example when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: i.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: i.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: i.func,
  /**
   * If `true`, days outside the current month are rendered:
   *
   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.
   *
   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.
   *
   * - ignored if `calendars` equals more than `1` on range pickers.
   * @default false
   */
  showDaysOutsideCurrentMonth: i.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: i.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: i.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: i.object,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: i.oneOf(["day", "month", "year"]),
  /**
   * Define custom view renderers for each section.
   * If `null`, the section will only have field editing.
   * If `undefined`, internally defined view will be used.
   */
  viewRenderers: i.shape({
    day: i.func,
    month: i.func,
    year: i.func
  }),
  /**
   * Available views.
   */
  views: i.arrayOf(i.oneOf(["day", "month", "year"]).isRequired),
  /**
   * Years are displayed in ascending (chronological) order by default.
   * If `desc`, years are displayed in descending order.
   * @default 'asc'
   */
  yearsOrder: i.oneOf(["asc", "desc"]),
  /**
   * Years rendered per row.
   * @default 4
   */
  yearsPerRow: i.oneOf([3, 4])
};
var AX = K(sg)({
  [`& .${ka.container}`]: {
    outline: 0
  },
  [`& .${ka.paper}`]: {
    outline: 0,
    minWidth: jd
  }
});
var jX = K(lg)({
  "&:first-of-type": {
    padding: 0
  }
});
function DX(e10) {
  const {
    children: t,
    onDismiss: n,
    open: o,
    slots: r,
    slotProps: s
  } = e10, a = (r == null ? void 0 : r.dialog) ?? AX, l = (r == null ? void 0 : r.mobileTransition) ?? ii;
  return f.jsx(a, V({
    open: o,
    onClose: n
  }, s == null ? void 0 : s.dialog, {
    TransitionComponent: l,
    TransitionProps: s == null ? void 0 : s.mobileTransition,
    PaperComponent: r == null ? void 0 : r.mobilePaper,
    PaperProps: s == null ? void 0 : s.mobilePaper,
    children: f.jsx(jX, {
      children: t
    })
  }));
}
var MX = ["props", "getOpenDialogAriaText"];
var gh = (e10) => {
  var k;
  let {
    props: t,
    getOpenDialogAriaText: n
  } = e10, o = Xe(e10, MX);
  const {
    slots: r,
    slotProps: s,
    className: a,
    sx: l,
    format: c,
    formatDensity: u,
    enableAccessibleFieldDOMStructure: d,
    selectedSections: p,
    onSelectedSectionsChange: m,
    timezone: g,
    name: b,
    label: v,
    inputRef: h,
    readOnly: y,
    disabled: C,
    localeText: x
  } = t, T = S.useRef(null), w = qs(), R = ((k = s == null ? void 0 : s.toolbar) == null ? void 0 : k.hidden) ?? false, {
    open: E,
    actions: O,
    layoutProps: I,
    renderCurrentView: P,
    fieldProps: A
  } = c1(V({}, o, {
    props: t,
    fieldRef: T,
    autoFocusView: true,
    additionalViewProps: {},
    wrapperVariant: "mobile"
  })), M = r.field, F = Pt({
    elementType: M,
    externalSlotProps: s == null ? void 0 : s.field,
    additionalProps: V({}, A, R && {
      id: w
    }, !(C || y) && {
      onClick: O.onOpen,
      onKeyDown: vG(O.onOpen)
    }, {
      readOnly: y ?? true,
      disabled: C,
      className: a,
      sx: l,
      format: c,
      formatDensity: u,
      enableAccessibleFieldDOMStructure: d,
      selectedSections: p,
      onSelectedSectionsChange: m,
      timezone: g,
      label: v,
      name: b
    }, h ? {
      inputRef: h
    } : {}),
    ownerState: t
  });
  F.inputProps = V({}, F.inputProps, {
    "aria-label": n(A.value)
  });
  const D = V({
    textField: r.textField
  }, F.slots), N = r.layout ?? nh;
  let j = w;
  R && (v ? j = `${w}-label` : j = void 0);
  const _ = V({}, s, {
    toolbar: V({}, s == null ? void 0 : s.toolbar, {
      titleId: w
    }),
    mobilePaper: V({
      "aria-labelledby": j
    }, s == null ? void 0 : s.mobilePaper)
  }), z = Bn(T, F.unstableFieldRef);
  return {
    renderPicker: () => f.jsxs(Kg, {
      localeText: x,
      children: [f.jsx(M, V({}, F, {
        slots: D,
        slotProps: _,
        unstableFieldRef: z
      })), f.jsx(DX, V({}, O, {
        open: E,
        slots: r,
        slotProps: _,
        children: f.jsx(N, V({}, I, _ == null ? void 0 : _.layout, {
          slots: r,
          slotProps: _,
          children: P()
        }))
      }))]
    })
  };
};
var z1 = S.forwardRef(function(t, n) {
  var u, d;
  const o = gn(), r = gt(), s = i1(t, "MuiMobileDatePicker"), a = V({
    day: Io,
    month: Io,
    year: Io
  }, s.viewRenderers), l = V({}, s, {
    viewRenderers: a,
    format: fl(r, s, false),
    slots: V({
      field: mh
    }, s.slots),
    slotProps: V({}, s.slotProps, {
      field: (p) => {
        var m;
        return V({}, ti((m = s.slotProps) == null ? void 0 : m.field, p), Qs(s), {
          ref: n
        });
      },
      toolbar: V({
        hidden: false
      }, (u = s.slotProps) == null ? void 0 : u.toolbar)
    })
  }), {
    renderPicker: c
  } = gh({
    props: l,
    valueManager: ln,
    valueType: "date",
    getOpenDialogAriaText: Js({
      utils: r,
      formatKey: "fullDate",
      contextTranslation: o.openDatePickerDialogue,
      propsTranslation: (d = l.localeText) == null ? void 0 : d.openDatePickerDialogue
    }),
    validator: Ks
  });
  return c();
});
z1.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: i.bool,
  className: i.string,
  /**
   * If `true`, the popover or modal will close after submitting the full date.
   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).
   */
  closeOnSelect: i.bool,
  /**
   * Formats the day of week displayed in the calendar header.
   * @param {TDate} date The date of the day of week provided by the adapter.
   * @returns {string} The name to display.
   * @default (date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()
   */
  dayOfWeekFormatter: i.func,
  /**
   * The default value.
   * Used when the component is not controlled.
   */
  defaultValue: i.object,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: i.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: i.bool,
  /**
   * If `true`, the open picker button will not be rendered (renders only the field).
   * @default false
   */
  disableOpenPicker: i.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: i.bool,
  /**
   * If `true`, the week number will be display in the calendar.
   */
  displayWeekNumber: i.bool,
  /**
   * @default false
   */
  enableAccessibleFieldDOMStructure: i.any,
  /**
   * The day view will show as many weeks as needed after the end of the current month to match this value.
   * Put it to 6 to have a fixed number of weeks in Gregorian calendars
   */
  fixedWeekNumber: i.number,
  /**
   * Format of the date when rendered in the input(s).
   * Defaults to localized format based on the used `views`.
   */
  format: i.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: i.oneOf(["dense", "spacious"]),
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Pn,
  /**
   * The label content.
   */
  label: i.node,
  /**
   * If `true`, calls `renderLoading` instead of rendering the day calendar.
   * Can be used to preload information and show it in calendar.
   * @default false
   */
  loading: i.bool,
  /**
   * Locale for components texts.
   * Allows overriding texts coming from `LocalizationProvider` and `theme`.
   */
  localeText: i.object,
  /**
   * Maximal selectable date.
   * @default 2099-12-31
   */
  maxDate: i.object,
  /**
   * Minimal selectable date.
   * @default 1900-01-01
   */
  minDate: i.object,
  /**
   * Months rendered per row.
   * @default 3
   */
  monthsPerRow: i.oneOf([3, 4]),
  /**
   * Name attribute used by the `input` element in the Field.
   */
  name: i.string,
  /**
   * Callback fired when the value is accepted.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The value that was just accepted.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onAccept: i.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: i.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see `open`).
   */
  onClose: i.func,
  /**
   * Callback fired when the error associated with the current value changes.
   * When a validation error is detected, the `error` parameter contains a non-null value.
   * This can be used to render an appropriate form error.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @param {TError} error The reason why the current value is not valid.
   * @param {TValue} value The value associated with the error.
   */
  onError: i.func,
  /**
   * Callback fired on month change.
   * @template TDate
   * @param {TDate} month The new month.
   */
  onMonthChange: i.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see `open`).
   */
  onOpen: i.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: i.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: i.func,
  /**
   * Callback fired on year change.
   * @template TDate
   * @param {TDate} year The new year.
   */
  onYearChange: i.func,
  /**
   * Control the popup or dialog open state.
   * @default false
   */
  open: i.bool,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: i.oneOf(["day", "month", "year"]),
  /**
   * Force rendering in particular orientation.
   */
  orientation: i.oneOf(["landscape", "portrait"]),
  readOnly: i.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: i.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.
   */
  referenceDate: i.object,
  /**
   * Component displaying when passed `loading` true.
   * @returns {React.ReactNode} The node to render when loading.
   * @default () => <span data-mui-test="loading-progress">...</span>
   */
  renderLoading: i.func,
  /**
   * The currently selected sections.
   * This prop accepts four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 3. If `"all"` is provided, all the sections will be selected.
   * 4. If `null` is provided, no section will be selected.
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: i.oneOfType([i.oneOf(["all", "day", "empty", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), i.number]),
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (for example when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: i.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: i.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: i.func,
  /**
   * If `true`, days outside the current month are rendered:
   *
   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.
   *
   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.
   *
   * - ignored if `calendars` equals more than `1` on range pickers.
   * @default false
   */
  showDaysOutsideCurrentMonth: i.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: i.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: i.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: i.object,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: i.oneOf(["day", "month", "year"]),
  /**
   * Define custom view renderers for each section.
   * If `null`, the section will only have field editing.
   * If `undefined`, internally defined view will be used.
   */
  viewRenderers: i.shape({
    day: i.func,
    month: i.func,
    year: i.func
  }),
  /**
   * Available views.
   */
  views: i.arrayOf(i.oneOf(["day", "month", "year"]).isRequired),
  /**
   * Years are displayed in ascending (chronological) order by default.
   * If `desc`, years are displayed in descending order.
   * @default 'asc'
   */
  yearsOrder: i.oneOf(["asc", "desc"]),
  /**
   * Years rendered per row.
   * @default 3
   */
  yearsPerRow: i.oneOf([3, 4])
};
var kX = ["desktopModeMediaQuery"];
var W1 = S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiDatePicker"
  }), {
    desktopModeMediaQuery: r = eh
  } = o, s = Xe(o, kX);
  return Yr(r, {
    defaultMatches: true
  }) ? f.jsx(B1, V({
    ref: n
  }, s)) : f.jsx(z1, V({
    ref: n
  }, s));
});
W1.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: i.bool,
  className: i.string,
  /**
   * If `true`, the popover or modal will close after submitting the full date.
   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).
   */
  closeOnSelect: i.bool,
  /**
   * Formats the day of week displayed in the calendar header.
   * @param {TDate} date The date of the day of week provided by the adapter.
   * @returns {string} The name to display.
   * @default (date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()
   */
  dayOfWeekFormatter: i.func,
  /**
   * The default value.
   * Used when the component is not controlled.
   */
  defaultValue: i.object,
  /**
   * CSS media query when `Mobile` mode will be changed to `Desktop`.
   * @default '@media (pointer: fine)'
   * @example '@media (min-width: 720px)' or theme.breakpoints.up("sm")
   */
  desktopModeMediaQuery: i.string,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: i.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: i.bool,
  /**
   * If `true`, the open picker button will not be rendered (renders only the field).
   * @default false
   */
  disableOpenPicker: i.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: i.bool,
  /**
   * If `true`, the week number will be display in the calendar.
   */
  displayWeekNumber: i.bool,
  /**
   * @default false
   */
  enableAccessibleFieldDOMStructure: i.any,
  /**
   * The day view will show as many weeks as needed after the end of the current month to match this value.
   * Put it to 6 to have a fixed number of weeks in Gregorian calendars
   */
  fixedWeekNumber: i.number,
  /**
   * Format of the date when rendered in the input(s).
   * Defaults to localized format based on the used `views`.
   */
  format: i.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: i.oneOf(["dense", "spacious"]),
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Pn,
  /**
   * The label content.
   */
  label: i.node,
  /**
   * If `true`, calls `renderLoading` instead of rendering the day calendar.
   * Can be used to preload information and show it in calendar.
   * @default false
   */
  loading: i.bool,
  /**
   * Locale for components texts.
   * Allows overriding texts coming from `LocalizationProvider` and `theme`.
   */
  localeText: i.object,
  /**
   * Maximal selectable date.
   * @default 2099-12-31
   */
  maxDate: i.object,
  /**
   * Minimal selectable date.
   * @default 1900-01-01
   */
  minDate: i.object,
  /**
   * Months rendered per row.
   * @default 3
   */
  monthsPerRow: i.oneOf([3, 4]),
  /**
   * Name attribute used by the `input` element in the Field.
   */
  name: i.string,
  /**
   * Callback fired when the value is accepted.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The value that was just accepted.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onAccept: i.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: i.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see `open`).
   */
  onClose: i.func,
  /**
   * Callback fired when the error associated with the current value changes.
   * When a validation error is detected, the `error` parameter contains a non-null value.
   * This can be used to render an appropriate form error.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @param {TError} error The reason why the current value is not valid.
   * @param {TValue} value The value associated with the error.
   */
  onError: i.func,
  /**
   * Callback fired on month change.
   * @template TDate
   * @param {TDate} month The new month.
   */
  onMonthChange: i.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see `open`).
   */
  onOpen: i.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: i.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: i.func,
  /**
   * Callback fired on year change.
   * @template TDate
   * @param {TDate} year The new year.
   */
  onYearChange: i.func,
  /**
   * Control the popup or dialog open state.
   * @default false
   */
  open: i.bool,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: i.oneOf(["day", "month", "year"]),
  /**
   * Force rendering in particular orientation.
   */
  orientation: i.oneOf(["landscape", "portrait"]),
  readOnly: i.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: i.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.
   */
  referenceDate: i.object,
  /**
   * Component displaying when passed `loading` true.
   * @returns {React.ReactNode} The node to render when loading.
   * @default () => <span data-mui-test="loading-progress">...</span>
   */
  renderLoading: i.func,
  /**
   * The currently selected sections.
   * This prop accepts four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 3. If `"all"` is provided, all the sections will be selected.
   * 4. If `null` is provided, no section will be selected.
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: i.oneOfType([i.oneOf(["all", "day", "empty", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), i.number]),
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (for example when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: i.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: i.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: i.func,
  /**
   * If `true`, days outside the current month are rendered:
   *
   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.
   *
   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.
   *
   * - ignored if `calendars` equals more than `1` on range pickers.
   * @default false
   */
  showDaysOutsideCurrentMonth: i.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: i.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: i.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: i.object,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: i.oneOf(["day", "month", "year"]),
  /**
   * Define custom view renderers for each section.
   * If `null`, the section will only have field editing.
   * If `undefined`, internally defined view will be used.
   */
  viewRenderers: i.shape({
    day: i.func,
    month: i.func,
    year: i.func
  }),
  /**
   * Available views.
   */
  views: i.arrayOf(i.oneOf(["day", "month", "year"]).isRequired),
  /**
   * Years are displayed in ascending (chronological) order by default.
   * If `desc`, years are displayed in descending order.
   * @default 'asc'
   */
  yearsOrder: i.oneOf(["asc", "desc"]),
  /**
   * Years rendered per row.
   * @default 4 on desktop, 3 on mobile
   */
  yearsPerRow: i.oneOf([3, 4])
};
var FX = (e10) => {
  const t = xU(e10), {
    forwardedProps: n,
    internalProps: o
  } = sh(t, "date-time");
  return rh({
    forwardedProps: n,
    internalProps: o,
    valueManager: ln,
    fieldValueManager: Jg,
    validator: Pd,
    valueType: "date-time"
  });
};
var NX = ["slots", "slotProps", "InputProps", "inputProps"];
var hh = S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiDateTimeField"
  }), {
    slots: r,
    slotProps: s,
    InputProps: a,
    inputProps: l
  } = o, c = Xe(o, NX), u = o, d = (r == null ? void 0 : r.textField) ?? (t.enableAccessibleFieldDOMStructure ? Wd : _n), p = Pt({
    elementType: d,
    externalSlotProps: s == null ? void 0 : s.textField,
    externalForwardedProps: c,
    ownerState: u,
    additionalProps: {
      ref: n
    }
  });
  p.inputProps = V({}, l, p.inputProps), p.InputProps = V({}, a, p.InputProps);
  const m = FX(p), g = fh(m), b = ih(V({}, g, {
    slots: r,
    slotProps: s
  }));
  return f.jsx(d, V({}, b));
});
hh.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default utils.is12HourCycleInCurrentLocale()
   */
  ampm: i.bool,
  /**
   * If `true`, the `input` element is focused during the first mount.
   * @default false
   */
  autoFocus: i.bool,
  className: i.string,
  /**
   * If `true`, a clear button will be shown in the field allowing value clearing.
   * @default false
   */
  clearable: i.bool,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOf(["error", "info", "primary", "secondary", "success", "warning"]),
  component: i.elementType,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.object,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: i.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: i.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: i.bool,
  /**
   * @default false
   */
  enableAccessibleFieldDOMStructure: i.bool,
  /**
   * If `true`, the component is displayed in focused state.
   */
  focused: i.bool,
  /**
   * Format of the date when rendered in the input(s).
   */
  format: i.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: i.oneOf(["dense", "spacious"]),
  /**
   * Props applied to the [`FormHelperText`](/material-ui/api/form-helper-text/) element.
   */
  FormHelperTextProps: i.object,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The helper text content.
   */
  helperText: i.node,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: i.bool,
  /**
   * The id of the `input` element.
   * Use this prop to make `label` and `helperText` accessible for screen readers.
   */
  id: i.string,
  /**
   * Props applied to the [`InputLabel`](/material-ui/api/input-label/) element.
   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.
   */
  InputLabelProps: i.object,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: i.object,
  /**
   * Props applied to the Input element.
   * It will be a [`FilledInput`](/material-ui/api/filled-input/),
   * [`OutlinedInput`](/material-ui/api/outlined-input/) or [`Input`](/material-ui/api/input/)
   * component depending on the `variant` prop value.
   */
  InputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Pn,
  /**
   * The label content.
   */
  label: i.node,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: i.oneOf(["dense", "none", "normal"]),
  /**
   * Maximal selectable date.
   * @default 2099-12-31
   */
  maxDate: i.object,
  /**
   * Maximal selectable moment of time with binding to date, to set max time in each day use `maxTime`.
   */
  maxDateTime: i.object,
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: i.object,
  /**
   * Minimal selectable date.
   * @default 1900-01-01
   */
  minDate: i.object,
  /**
   * Minimal selectable moment of time with binding to date, to set min time in each day use `minTime`.
   */
  minDateTime: i.object,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: i.object,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: i.number,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  onBlur: i.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: i.func,
  /**
   * Callback fired when the clear button is clicked.
   */
  onClear: i.func,
  /**
   * Callback fired when the error associated with the current value changes.
   * When a validation error is detected, the `error` parameter contains a non-null value.
   * This can be used to render an appropriate form error.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @param {TError} error The reason why the current value is not valid.
   * @param {TValue} value The value associated with the error.
   */
  onError: i.func,
  onFocus: i.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: i.func,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   * @default false
   */
  readOnly: i.bool,
  /**
   * The date used to generate a part of the new value that is not present in the format when both `value` and `defaultValue` are empty.
   * For example, on time fields it will be used to determine the date to set.
   * @default The closest valid date using the validation props, except callbacks such as `shouldDisableDate`. Value is rounded to the most granular section used.
   */
  referenceDate: i.object,
  /**
   * If `true`, the label is displayed as required and the `input` element is required.
   * @default false
   */
  required: i.bool,
  /**
   * The currently selected sections.
   * This prop accepts four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 3. If `"all"` is provided, all the sections will be selected.
   * 4. If `null` is provided, no section will be selected.
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: i.oneOfType([i.oneOf(["all", "day", "empty", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), i.number]),
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (for example when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: i.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: i.func,
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: i.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: i.func,
  /**
   * If `true`, the format will respect the leading zeroes (e.g: on dayjs, the format `M/D/YYYY` will render `8/16/2018`)
   * If `false`, the format will always add leading zeroes (e.g: on dayjs, the format `M/D/YYYY` will render `08/16/2018`)
   *
   * Warning n°1: Luxon is not able to respect the leading zeroes when using macro tokens (e.g: "DD"), so `shouldRespectLeadingZeros={true}` might lead to inconsistencies when using `AdapterLuxon`.
   *
   * Warning n°2: When `shouldRespectLeadingZeros={true}`, the field will add an invisible character on the sections containing a single digit to make sure `onChange` is fired.
   * If you need to get the clean value from the input, you can remove this character using `input.value.replace(/\u200e/g, '')`.
   *
   * Warning n°3: When used in strict mode, dayjs and moment require to respect the leading zeros.
   * This mean that when using `shouldRespectLeadingZeros={false}`, if you retrieve the value directly from the input (not listening to `onChange`) and your format contains tokens without leading zeros, the value will not be parsed by your library.
   *
   * @default false
   */
  shouldRespectLeadingZeros: i.bool,
  /**
   * The size of the component.
   */
  size: i.oneOf(["medium", "small"]),
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: i.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: i.object,
  style: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: i.string,
  /**
   * The ref object used to imperatively interact with the field.
   */
  unstableFieldRef: i.oneOfType([i.func, i.object]),
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: i.object,
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: i.oneOf(["filled", "outlined", "standard"])
};
function $X(e10) {
  return Ot("MuiDateTimePickerTabs", e10);
}
At("MuiDateTimePickerTabs", ["root"]);
var VX = (e10) => Fs(e10) ? "date" : "time";
var _X = (e10) => e10 === "date" ? "day" : "hours";
var LX = (e10) => {
  const {
    classes: t
  } = e10;
  return Tt({
    root: ["root"]
  }, $X, t);
};
var BX = K(lS, {
  name: "MuiDateTimePickerTabs",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})(({
  theme: e10
}) => ({
  boxShadow: `0 -1px 0 0 inset ${(e10.vars || e10).palette.divider}`,
  "&:last-child": {
    boxShadow: `0 1px 0 0 inset ${(e10.vars || e10).palette.divider}`,
    [`& .${Nc.indicator}`]: {
      bottom: "auto",
      top: 0
    }
  }
}));
var H1 = function(t) {
  const n = at({
    props: t,
    name: "MuiDateTimePickerTabs"
  }), {
    dateIcon: o = f.jsx(eU, {}),
    onViewChange: r,
    timeIcon: s = f.jsx(tU, {}),
    view: a,
    hidden: l = typeof window > "u" || window.innerHeight < 667,
    className: c,
    sx: u
  } = n, d = gn(), p = LX(n), m = (g, b) => {
    r(_X(b));
  };
  return l ? null : f.jsxs(BX, {
    ownerState: n,
    variant: "fullWidth",
    value: VX(a),
    onChange: m,
    className: be(c, p.root),
    sx: u,
    children: [f.jsx($f, {
      value: "date",
      "aria-label": d.dateTableLabel,
      icon: f.jsx(S.Fragment, {
        children: o
      })
    }), f.jsx($f, {
      value: "time",
      "aria-label": d.timeTableLabel,
      icon: f.jsx(S.Fragment, {
        children: s
      })
    })]
  });
};
H1.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  className: i.string,
  /**
   * Date tab icon.
   * @default DateRange
   */
  dateIcon: i.node,
  /**
   * Toggles visibility of the tabs allowing view switching.
   * @default `window.innerHeight < 667` for `DesktopDateTimePicker` and `MobileDateTimePicker`, `displayStaticWrapperAs === 'desktop'` for `StaticDateTimePicker`
   */
  hidden: i.bool,
  /**
   * Callback called when a tab is clicked.
   * @template TView
   * @param {TView} view The view to open
   */
  onViewChange: i.func.isRequired,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Time tab icon.
   * @default Time
   */
  timeIcon: i.node,
  /**
   * Currently visible picker view.
   */
  view: i.oneOf(["day", "hours", "meridiem", "minutes", "month", "seconds", "year"]).isRequired
};
function zX(e10) {
  return Ot("MuiPickersToolbarText", e10);
}
var pm = At("MuiPickersToolbarText", ["root", "selected"]);
var WX = ["className", "selected", "value"];
var HX = (e10) => {
  const {
    classes: t,
    selected: n
  } = e10;
  return Tt({
    root: ["root", n && "selected"]
  }, zX, t);
};
var GX = K(Fe, {
  name: "MuiPickersToolbarText",
  slot: "Root",
  overridesResolver: (e10, t) => [t.root, {
    [`&.${pm.selected}`]: t.selected
  }]
})(({
  theme: e10
}) => ({
  transition: e10.transitions.create("color"),
  color: (e10.vars || e10).palette.text.secondary,
  [`&.${pm.selected}`]: {
    color: (e10.vars || e10).palette.text.primary
  }
}));
var bh = S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiPickersToolbarText"
  }), {
    className: r,
    value: s
  } = o, a = Xe(o, WX), l = HX(o);
  return f.jsx(GX, V({
    ref: n,
    className: be(r, l.root),
    component: "span"
  }, a, {
    children: s
  }));
});
var UX = ["align", "className", "selected", "typographyClassName", "value", "variant", "width"];
var XX = (e10) => {
  const {
    classes: t
  } = e10;
  return Tt({
    root: ["root"]
  }, o1, t);
};
var YX = K(vt, {
  name: "MuiPickersToolbarButton",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})({
  padding: 0,
  minWidth: 16,
  textTransform: "none"
});
var Qn = S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiPickersToolbarButton"
  }), {
    align: r,
    className: s,
    selected: a,
    typographyClassName: l,
    value: c,
    variant: u,
    width: d
  } = o, p = Xe(o, UX), m = XX(o);
  return f.jsx(YX, V({
    variant: "text",
    ref: n,
    className: be(s, m.root)
  }, d ? {
    sx: {
      width: d
    }
  } : {}, p, {
    children: f.jsx(bh, {
      align: r,
      className: l,
      variant: u,
      value: c,
      selected: a
    })
  }));
});
function ZX(e10) {
  return Ot("MuiDateTimePickerToolbar", e10);
}
var Hp = At("MuiDateTimePickerToolbar", ["root", "dateContainer", "timeContainer", "timeDigitsContainer", "separator", "timeLabelReverse", "ampmSelection", "ampmLandscape", "ampmLabel"]);
var qX = ["ampm", "ampmInClock", "value", "onChange", "view", "isLandscape", "onViewChange", "toolbarFormat", "toolbarPlaceholder", "views", "disabled", "readOnly", "toolbarVariant", "toolbarTitle", "className"];
var JX = (e10) => {
  const {
    classes: t,
    isLandscape: n,
    isRtl: o
  } = e10;
  return Tt({
    root: ["root"],
    dateContainer: ["dateContainer"],
    timeContainer: ["timeContainer", o && "timeLabelReverse"],
    timeDigitsContainer: ["timeDigitsContainer", o && "timeLabelReverse"],
    separator: ["separator"],
    ampmSelection: ["ampmSelection", n && "ampmLandscape"],
    ampmLabel: ["ampmLabel"]
  }, ZX, t);
};
var KX = K(Qg, {
  name: "MuiDateTimePickerToolbar",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})(({
  theme: e10
}) => ({
  paddingLeft: 16,
  paddingRight: 16,
  justifyContent: "space-around",
  position: "relative",
  variants: [{
    props: {
      toolbarVariant: "desktop"
    },
    style: {
      borderBottom: `1px solid ${(e10.vars || e10).palette.divider}`,
      [`& .${sG.content} .${pm.selected}`]: {
        color: (e10.vars || e10).palette.primary.main,
        fontWeight: e10.typography.fontWeightBold
      }
    }
  }, {
    props: {
      toolbarVariant: "desktop",
      isLandscape: true
    },
    style: {
      borderRight: `1px solid ${(e10.vars || e10).palette.divider}`
    }
  }, {
    props: {
      toolbarVariant: "desktop",
      isLandscape: false
    },
    style: {
      paddingLeft: 24,
      paddingRight: 0
    }
  }]
}));
var QX = K("div", {
  name: "MuiDateTimePickerToolbar",
  slot: "DateContainer",
  overridesResolver: (e10, t) => t.dateContainer
})({
  display: "flex",
  flexDirection: "column",
  alignItems: "flex-start"
});
var e8 = K("div", {
  name: "MuiDateTimePickerToolbar",
  slot: "TimeContainer",
  overridesResolver: (e10, t) => t.timeContainer
})({
  display: "flex",
  flexDirection: "row",
  variants: [{
    props: {
      isRtl: true
    },
    style: {
      flexDirection: "row-reverse"
    }
  }, {
    props: {
      toolbarVariant: "desktop",
      isLandscape: false
    },
    style: {
      gap: 9,
      marginRight: 4,
      alignSelf: "flex-end"
    }
  }, {
    props: ({
      isLandscape: e10,
      toolbarVariant: t
    }) => e10 && t !== "desktop",
    style: {
      flexDirection: "column"
    }
  }, {
    props: ({
      isLandscape: e10,
      toolbarVariant: t,
      isRtl: n
    }) => e10 && t !== "desktop" && n,
    style: {
      flexDirection: "column-reverse"
    }
  }]
});
var t8 = K("div", {
  name: "MuiDateTimePickerToolbar",
  slot: "TimeDigitsContainer",
  overridesResolver: (e10, t) => t.timeDigitsContainer
})({
  display: "flex",
  variants: [{
    props: {
      isRtl: true
    },
    style: {
      flexDirection: "row-reverse"
    }
  }, {
    props: {
      toolbarVariant: "desktop"
    },
    style: {
      gap: 1.5
    }
  }]
});
var w0 = K(bh, {
  name: "MuiDateTimePickerToolbar",
  slot: "Separator",
  overridesResolver: (e10, t) => t.separator
})({
  margin: "0 4px 0 2px",
  cursor: "default",
  variants: [{
    props: {
      toolbarVariant: "desktop"
    },
    style: {
      margin: 0
    }
  }]
});
var n8 = K("div", {
  name: "MuiDateTimePickerToolbar",
  slot: "AmPmSelection",
  overridesResolver: (e10, t) => [{
    [`.${Hp.ampmLabel}`]: t.ampmLabel
  }, {
    [`&.${Hp.ampmLandscape}`]: t.ampmLandscape
  }, t.ampmSelection]
})({
  display: "flex",
  flexDirection: "column",
  marginRight: "auto",
  marginLeft: 12,
  [`& .${Hp.ampmLabel}`]: {
    fontSize: 17
  },
  variants: [{
    props: {
      isLandscape: true
    },
    style: {
      margin: "4px 0 auto",
      flexDirection: "row",
      justifyContent: "space-around",
      width: "100%"
    }
  }]
});
function G1(e10) {
  const t = at({
    props: e10,
    name: "MuiDateTimePickerToolbar"
  }), {
    ampm: n,
    ampmInClock: o,
    value: r,
    onChange: s,
    view: a,
    isLandscape: l,
    onViewChange: c,
    toolbarFormat: u,
    toolbarPlaceholder: d = "––",
    views: p,
    disabled: m,
    readOnly: g,
    toolbarVariant: b = "mobile",
    toolbarTitle: v,
    className: h
  } = t, y = Xe(t, qX), C = mo(), x = V({}, t, {
    isRtl: C
  }), T = gt(), {
    meridiemMode: w,
    handleMeridiemChange: R
  } = Hd(r, n, s), E = !!(n && !o), O = b === "desktop", I = gn(), P = JX(x), A = v ?? I.dateTimePickerToolbarTitle, M = (D) => n ? T.format(D, "hours12h") : T.format(D, "hours24h"), F = S.useMemo(() => r ? u ? T.formatByString(r, u) : T.format(r, "shortDate") : d, [r, u, d, T]);
  return f.jsxs(KX, V({
    isLandscape: l,
    className: be(P.root, h),
    toolbarTitle: A
  }, y, {
    ownerState: x,
    children: [f.jsxs(QX, {
      className: P.dateContainer,
      ownerState: x,
      children: [p.includes("year") && f.jsx(Qn, {
        tabIndex: -1,
        variant: "subtitle1",
        onClick: () => c("year"),
        selected: a === "year",
        value: r ? T.format(r, "year") : "–"
      }), p.includes("day") && f.jsx(Qn, {
        tabIndex: -1,
        variant: O ? "h5" : "h4",
        onClick: () => c("day"),
        selected: a === "day",
        value: F
      })]
    }), f.jsxs(e8, {
      className: P.timeContainer,
      ownerState: x,
      children: [f.jsxs(t8, {
        className: P.timeDigitsContainer,
        ownerState: x,
        children: [p.includes("hours") && f.jsxs(S.Fragment, {
          children: [f.jsx(Qn, {
            variant: O ? "h5" : "h3",
            width: O && !l ? Ra : void 0,
            onClick: () => c("hours"),
            selected: a === "hours",
            value: r ? M(r) : "--"
          }), f.jsx(w0, {
            variant: O ? "h5" : "h3",
            value: ":",
            className: P.separator,
            ownerState: x
          }), f.jsx(Qn, {
            variant: O ? "h5" : "h3",
            width: O && !l ? Ra : void 0,
            onClick: () => c("minutes"),
            selected: a === "minutes" || !p.includes("minutes") && a === "hours",
            value: r ? T.format(r, "minutes") : "--",
            disabled: !p.includes("minutes")
          })]
        }), p.includes("seconds") && f.jsxs(S.Fragment, {
          children: [f.jsx(w0, {
            variant: O ? "h5" : "h3",
            value: ":",
            className: P.separator,
            ownerState: x
          }), f.jsx(Qn, {
            variant: O ? "h5" : "h3",
            width: O && !l ? Ra : void 0,
            onClick: () => c("seconds"),
            selected: a === "seconds",
            value: r ? T.format(r, "seconds") : "--"
          })]
        })]
      }), E && !O && f.jsxs(n8, {
        className: P.ampmSelection,
        ownerState: x,
        children: [f.jsx(Qn, {
          variant: "subtitle2",
          selected: w === "am",
          typographyClassName: P.ampmLabel,
          value: No(T, "am"),
          onClick: g ? void 0 : () => R("am"),
          disabled: m
        }), f.jsx(Qn, {
          variant: "subtitle2",
          selected: w === "pm",
          typographyClassName: P.ampmLabel,
          value: No(T, "pm"),
          onClick: g ? void 0 : () => R("pm"),
          disabled: m
        })]
      }), n && O && f.jsx(Qn, {
        variant: "h5",
        onClick: () => c("meridiem"),
        selected: a === "meridiem",
        value: r && w ? No(T, w) : "--",
        width: Ra
      })]
    })]
  }));
}
G1.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  ampm: i.bool,
  ampmInClock: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  className: i.string,
  disabled: i.bool,
  /**
   * If `true`, show the toolbar even in desktop mode.
   * @default `true` for Desktop, `false` for Mobile.
   */
  hidden: i.bool,
  isLandscape: i.bool.isRequired,
  onChange: i.func.isRequired,
  /**
   * Callback called when a toolbar is clicked
   * @template TView
   * @param {TView} view The view to open
   */
  onViewChange: i.func.isRequired,
  readOnly: i.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  titleId: i.string,
  /**
   * Toolbar date format.
   */
  toolbarFormat: i.string,
  /**
   * Toolbar value placeholder—it is displayed when the value is empty.
   * @default "––"
   */
  toolbarPlaceholder: i.node,
  /**
   * If provided, it will be used instead of `dateTimePickerToolbarTitle` from localization.
   */
  toolbarTitle: i.node,
  toolbarVariant: i.oneOf(["desktop", "mobile"]),
  value: i.object,
  /**
   * Currently visible picker view.
   */
  view: i.oneOf(["day", "hours", "meridiem", "minutes", "month", "seconds", "year"]),
  /**
   * Available views.
   */
  views: i.arrayOf(i.oneOf(["day", "hours", "meridiem", "minutes", "month", "seconds", "year"]).isRequired).isRequired
};
function U1(e10, t) {
  var l;
  const n = gt(), o = Xi(), r = at({
    props: e10,
    name: t
  }), s = r.ampm ?? n.is12HourCycleInCurrentLocale(), a = S.useMemo(() => {
    var c;
    return ((c = r.localeText) == null ? void 0 : c.toolbarTitle) == null ? r.localeText : V({}, r.localeText, {
      dateTimePickerToolbarTitle: r.localeText.toolbarTitle
    });
  }, [r.localeText]);
  return V({}, r, Gg({
    views: r.views,
    openTo: r.openTo,
    defaultViews: ["year", "day", "hours", "minutes"],
    defaultOpenTo: "day"
  }), {
    ampm: s,
    localeText: a,
    orientation: r.orientation ?? "portrait",
    // TODO: Remove from public API
    disableIgnoringDatePartForTimeValidation: r.disableIgnoringDatePartForTimeValidation ?? !!(r.minDateTime || r.maxDateTime || // allow time clock to correctly check time validity: https://github.com/mui/mui-x/issues/8520
    r.disablePast || r.disableFuture),
    disableFuture: r.disableFuture ?? false,
    disablePast: r.disablePast ?? false,
    minDate: kn(n, r.minDateTime ?? r.minDate, o.minDate),
    maxDate: kn(n, r.maxDateTime ?? r.maxDate, o.maxDate),
    minTime: r.minDateTime ?? r.minTime,
    maxTime: r.maxDateTime ?? r.maxTime,
    slots: V({
      toolbar: G1,
      tabs: H1
    }, r.slots),
    slotProps: V({}, r.slotProps, {
      toolbar: V({
        ampm: s
      }, (l = r.slotProps) == null ? void 0 : l.toolbar)
    })
  });
}
var o8 = ["views", "format"];
var X1 = (e10, t, n) => {
  let {
    views: o,
    format: r
  } = t, s = Xe(t, o8);
  if (r)
    return r;
  const a = [], l = [];
  if (o.forEach((d) => {
    Ns(d) ? l.push(d) : Fs(d) && a.push(d);
  }), l.length === 0)
    return fl(e10, V({
      views: a
    }, s), false);
  if (a.length === 0)
    return fu(e10, V({
      views: l
    }, s));
  const c = fu(e10, V({
    views: l
  }, s));
  return `${fl(e10, V({
    views: a
  }, s), false)} ${c}`;
};
var r8 = (e10, t, n) => n ? t.filter((o) => !Ia(o) || o === "hours") : e10 ? [...t, "meridiem"] : t;
var i8 = (e10, t) => 24 * 60 / ((e10.hours ?? 1) * (e10.minutes ?? 5)) <= t;
function Y1({
  thresholdToRenderTimeInASingleColumn: e10,
  ampm: t,
  timeSteps: n,
  views: o
}) {
  const r = e10 ?? 24, s = V({
    hours: 1,
    minutes: 5,
    seconds: 5
  }, n), a = i8(s, r);
  return {
    thresholdToRenderTimeInASingleColumn: r,
    timeSteps: s,
    shouldRenderTimeInASingleColumn: a,
    views: r8(t, o, a)
  };
}
function s8(e10) {
  return Ot("MuiTimeClock", e10);
}
At("MuiTimeClock", ["root", "arrowSwitcher"]);
var $s = 220;
var wr = 36;
var hl = {
  x: $s / 2,
  y: $s / 2
};
var Z1 = {
  x: hl.x,
  y: 0
};
var a8 = Z1.x - hl.x;
var l8 = Z1.y - hl.y;
var c8 = (e10) => e10 * (180 / Math.PI);
var q1 = (e10, t, n) => {
  const o = t - hl.x, r = n - hl.y, s = Math.atan2(a8, l8) - Math.atan2(o, r);
  let a = c8(s);
  a = Math.round(a / e10) * e10, a %= 360;
  const l = Math.floor(a / e10) || 0, c = o ** 2 + r ** 2, u = Math.sqrt(c);
  return {
    value: l,
    distance: u
  };
};
var u8 = (e10, t, n = 1) => {
  const o = n * 6;
  let {
    value: r
  } = q1(o, e10, t);
  return r = r * n % 60, r;
};
var d8 = (e10, t, n) => {
  const {
    value: o,
    distance: r
  } = q1(30, e10, t);
  let s = o || 12;
  return n ? s %= 12 : r < $s / 2 - wr && (s += 12, s %= 24), s;
};
function p8(e10) {
  return Ot("MuiClockPointer", e10);
}
At("MuiClockPointer", ["root", "thumb"]);
var f8 = ["className", "hasSelected", "isInner", "type", "viewValue"];
var m8 = (e10) => {
  const {
    classes: t
  } = e10;
  return Tt({
    root: ["root"],
    thumb: ["thumb"]
  }, p8, t);
};
var g8 = K("div", {
  name: "MuiClockPointer",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})(({
  theme: e10
}) => ({
  width: 2,
  backgroundColor: (e10.vars || e10).palette.primary.main,
  position: "absolute",
  left: "calc(50% - 1px)",
  bottom: "50%",
  transformOrigin: "center bottom 0px",
  variants: [{
    props: {
      shouldAnimate: true
    },
    style: {
      transition: e10.transitions.create(["transform", "height"])
    }
  }]
}));
var h8 = K("div", {
  name: "MuiClockPointer",
  slot: "Thumb",
  overridesResolver: (e10, t) => t.thumb
})(({
  theme: e10
}) => ({
  width: 4,
  height: 4,
  backgroundColor: (e10.vars || e10).palette.primary.contrastText,
  borderRadius: "50%",
  position: "absolute",
  top: -21,
  left: `calc(50% - ${wr / 2}px)`,
  border: `${(wr - 4) / 2}px solid ${(e10.vars || e10).palette.primary.main}`,
  boxSizing: "content-box",
  variants: [{
    props: {
      hasSelected: true
    },
    style: {
      backgroundColor: (e10.vars || e10).palette.primary.main
    }
  }]
}));
function b8(e10) {
  const t = at({
    props: e10,
    name: "MuiClockPointer"
  }), {
    className: n,
    isInner: o,
    type: r,
    viewValue: s
  } = t, a = Xe(t, f8), l = S.useRef(r);
  S.useEffect(() => {
    l.current = r;
  }, [r]);
  const c = V({}, t, {
    shouldAnimate: l.current !== r
  }), u = m8(c), d = () => {
    let m = 360 / (r === "hours" ? 12 : 60) * s;
    return r === "hours" && s > 12 && (m -= 360), {
      height: Math.round((o ? 0.26 : 0.4) * $s),
      transform: `rotateZ(${m}deg)`
    };
  };
  return f.jsx(g8, V({
    style: d(),
    className: be(n, u.root),
    ownerState: c
  }, a, {
    children: f.jsx(h8, {
      ownerState: c,
      className: u.thumb
    })
  }));
}
function v8(e10) {
  return Ot("MuiClock", e10);
}
At("MuiClock", ["root", "clock", "wrapper", "squareMask", "pin", "amButton", "pmButton", "meridiemText", "selected"]);
var y8 = (e10) => {
  const {
    classes: t,
    meridiemMode: n
  } = e10;
  return Tt({
    root: ["root"],
    clock: ["clock"],
    wrapper: ["wrapper"],
    squareMask: ["squareMask"],
    pin: ["pin"],
    amButton: ["amButton", n === "am" && "selected"],
    pmButton: ["pmButton", n === "pm" && "selected"],
    meridiemText: ["meridiemText"]
  }, v8, t);
};
var x8 = K("div", {
  name: "MuiClock",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})(({
  theme: e10
}) => ({
  display: "flex",
  justifyContent: "center",
  alignItems: "center",
  margin: e10.spacing(2)
}));
var C8 = K("div", {
  name: "MuiClock",
  slot: "Clock",
  overridesResolver: (e10, t) => t.clock
})({
  backgroundColor: "rgba(0,0,0,.07)",
  borderRadius: "50%",
  height: 220,
  width: 220,
  flexShrink: 0,
  position: "relative",
  pointerEvents: "none"
});
var S8 = K("div", {
  name: "MuiClock",
  slot: "Wrapper",
  overridesResolver: (e10, t) => t.wrapper
})({
  "&:focus": {
    outline: "none"
  }
});
var w8 = K("div", {
  name: "MuiClock",
  slot: "SquareMask",
  overridesResolver: (e10, t) => t.squareMask
})({
  width: "100%",
  height: "100%",
  position: "absolute",
  pointerEvents: "auto",
  outline: 0,
  // Disable scroll capabilities.
  touchAction: "none",
  userSelect: "none",
  variants: [{
    props: {
      disabled: false
    },
    style: {
      "@media (pointer: fine)": {
        cursor: "pointer",
        borderRadius: "50%"
      },
      "&:active": {
        cursor: "move"
      }
    }
  }]
});
var T8 = K("div", {
  name: "MuiClock",
  slot: "Pin",
  overridesResolver: (e10, t) => t.pin
})(({
  theme: e10
}) => ({
  width: 6,
  height: 6,
  borderRadius: "50%",
  backgroundColor: (e10.vars || e10).palette.primary.main,
  position: "absolute",
  top: "50%",
  left: "50%",
  transform: "translate(-50%, -50%)"
}));
var J1 = (e10, t) => ({
  zIndex: 1,
  bottom: 8,
  paddingLeft: 4,
  paddingRight: 4,
  width: wr,
  variants: [{
    props: {
      meridiemMode: t
    },
    style: {
      backgroundColor: (e10.vars || e10).palette.primary.main,
      color: (e10.vars || e10).palette.primary.contrastText,
      "&:hover": {
        backgroundColor: (e10.vars || e10).palette.primary.light
      }
    }
  }]
});
var I8 = K(lt, {
  name: "MuiClock",
  slot: "AmButton",
  overridesResolver: (e10, t) => t.amButton
})(({
  theme: e10
}) => V({}, J1(e10, "am"), {
  // keeping it here to make TS happy
  position: "absolute",
  left: 8
}));
var R8 = K(lt, {
  name: "MuiClock",
  slot: "PmButton",
  overridesResolver: (e10, t) => t.pmButton
})(({
  theme: e10
}) => V({}, J1(e10, "pm"), {
  // keeping it here to make TS happy
  position: "absolute",
  right: 8
}));
var T0 = K(Fe, {
  name: "MuiClock",
  slot: "meridiemText",
  overridesResolver: (e10, t) => t.meridiemText
})({
  overflow: "hidden",
  whiteSpace: "nowrap",
  textOverflow: "ellipsis"
});
function E8(e10) {
  const t = at({
    props: e10,
    name: "MuiClock"
  }), {
    ampm: n,
    ampmInClock: o,
    autoFocus: r,
    children: s,
    value: a,
    handleMeridiemChange: l,
    isTimeDisabled: c,
    meridiemMode: u,
    minutesStep: d = 1,
    onChange: p,
    selectedId: m,
    type: g,
    viewValue: b,
    disabled: v = false,
    readOnly: h,
    className: y
  } = t, C = t, x = gt(), T = gn(), w = S.useRef(false), R = y8(C), E = c(b, g), O = !n && g === "hours" && (b < 1 || b > 12), I = ($, k) => {
    v || h || c($, g) || p($, k);
  }, P = ($, k) => {
    let {
      offsetX: B,
      offsetY: Q
    } = $;
    if (B === void 0) {
      const G = $.target.getBoundingClientRect();
      B = $.changedTouches[0].clientX - G.left, Q = $.changedTouches[0].clientY - G.top;
    }
    const ee = g === "seconds" || g === "minutes" ? u8(B, Q, d) : d8(B, Q, !!n);
    I(ee, k);
  }, A = ($) => {
    w.current = true, P($, "shallow");
  }, M = ($) => {
    w.current && (P($, "finish"), w.current = false);
  }, F = ($) => {
    $.buttons > 0 && P($.nativeEvent, "shallow");
  }, D = ($) => {
    w.current && (w.current = false), P($.nativeEvent, "finish");
  }, N = S.useMemo(() => g === "hours" ? true : b % 5 === 0, [g, b]), j = g === "minutes" ? d : 1, _ = S.useRef(null);
  sr(() => {
    r && _.current.focus();
  }, [r]);
  const z = ($) => {
    if (!w.current)
      switch ($.key) {
        case "Home":
          I(0, "partial"), $.preventDefault();
          break;
        case "End":
          I(g === "minutes" ? 59 : 23, "partial"), $.preventDefault();
          break;
        case "ArrowUp":
          I(b + j, "partial"), $.preventDefault();
          break;
        case "ArrowDown":
          I(b - j, "partial"), $.preventDefault();
          break;
        case "Enter":
        case " ":
          I(b, "finish"), $.preventDefault();
          break;
      }
  };
  return f.jsxs(x8, {
    className: be(y, R.root),
    children: [f.jsxs(C8, {
      className: R.clock,
      children: [f.jsx(w8, {
        onTouchMove: A,
        onTouchStart: A,
        onTouchEnd: M,
        onMouseUp: D,
        onMouseMove: F,
        ownerState: {
          disabled: v
        },
        className: R.squareMask
      }), !E && f.jsxs(S.Fragment, {
        children: [f.jsx(T8, {
          className: R.pin
        }), a != null && f.jsx(b8, {
          type: g,
          viewValue: b,
          isInner: O,
          hasSelected: N
        })]
      }), f.jsx(S8, {
        "aria-activedescendant": m,
        "aria-label": T.clockLabelText(g, a, x, a == null ? null : x.format(a, "fullTime")),
        ref: _,
        role: "listbox",
        onKeyDown: z,
        tabIndex: 0,
        className: R.wrapper,
        children: s
      })]
    }), n && o && f.jsxs(S.Fragment, {
      children: [f.jsx(I8, {
        onClick: h ? void 0 : () => l("am"),
        disabled: v || u === null,
        ownerState: C,
        className: R.amButton,
        title: No(x, "am"),
        children: f.jsx(T0, {
          variant: "caption",
          className: R.meridiemText,
          children: No(x, "am")
        })
      }), f.jsx(R8, {
        disabled: v || u === null,
        onClick: h ? void 0 : () => l("pm"),
        ownerState: C,
        className: R.pmButton,
        title: No(x, "pm"),
        children: f.jsx(T0, {
          variant: "caption",
          className: R.meridiemText,
          children: No(x, "pm")
        })
      })]
    })]
  });
}
function O8(e10) {
  return Ot("MuiClockNumber", e10);
}
var vc = At("MuiClockNumber", ["root", "selected", "disabled"]);
var P8 = ["className", "disabled", "index", "inner", "label", "selected"];
var A8 = (e10) => {
  const {
    classes: t,
    selected: n,
    disabled: o
  } = e10;
  return Tt({
    root: ["root", n && "selected", o && "disabled"]
  }, O8, t);
};
var j8 = K("span", {
  name: "MuiClockNumber",
  slot: "Root",
  overridesResolver: (e10, t) => [t.root, {
    [`&.${vc.disabled}`]: t.disabled
  }, {
    [`&.${vc.selected}`]: t.selected
  }]
})(({
  theme: e10
}) => ({
  height: wr,
  width: wr,
  position: "absolute",
  left: `calc((100% - ${wr}px) / 2)`,
  display: "inline-flex",
  justifyContent: "center",
  alignItems: "center",
  borderRadius: "50%",
  color: (e10.vars || e10).palette.text.primary,
  fontFamily: e10.typography.fontFamily,
  "&:focused": {
    backgroundColor: (e10.vars || e10).palette.background.paper
  },
  [`&.${vc.selected}`]: {
    color: (e10.vars || e10).palette.primary.contrastText
  },
  [`&.${vc.disabled}`]: {
    pointerEvents: "none",
    color: (e10.vars || e10).palette.text.disabled
  },
  variants: [{
    props: {
      inner: true
    },
    style: V({}, e10.typography.body2, {
      color: (e10.vars || e10).palette.text.secondary
    })
  }]
}));
function K1(e10) {
  const t = at({
    props: e10,
    name: "MuiClockNumber"
  }), {
    className: n,
    disabled: o,
    index: r,
    inner: s,
    label: a,
    selected: l
  } = t, c = Xe(t, P8), u = t, d = A8(u), p = r % 12 / 12 * Math.PI * 2 - Math.PI / 2, m = ($s - wr - 2) / 2 * (s ? 0.65 : 1), g = Math.round(Math.cos(p) * m), b = Math.round(Math.sin(p) * m);
  return f.jsx(j8, V({
    className: be(n, d.root),
    "aria-disabled": o ? true : void 0,
    "aria-selected": l ? true : void 0,
    role: "option",
    style: {
      transform: `translate(${g}px, ${b + ($s - wr) / 2}px`
    },
    ownerState: u
  }, c, {
    children: a
  }));
}
var D8 = ({
  ampm: e10,
  value: t,
  getClockNumberText: n,
  isDisabled: o,
  selectedId: r,
  utils: s
}) => {
  const a = t ? s.getHours(t) : null, l = [], c = e10 ? 1 : 0, u = e10 ? 12 : 23, d = (p) => a === null ? false : e10 ? p === 12 ? a === 12 || a === 0 : a === p || a - 12 === p : a === p;
  for (let p = c; p <= u; p += 1) {
    let m = p.toString();
    p === 0 && (m = "00");
    const g = !e10 && (p === 0 || p > 12);
    m = s.formatNumber(m);
    const b = d(p);
    l.push(f.jsx(K1, {
      id: b ? r : void 0,
      index: p,
      inner: g,
      selected: b,
      disabled: o(p),
      label: m,
      "aria-label": n(m)
    }, p));
  }
  return l;
};
var I0 = ({
  utils: e10,
  value: t,
  isDisabled: n,
  getClockNumberText: o,
  selectedId: r
}) => {
  const s = e10.formatNumber;
  return [[5, s("05")], [10, s("10")], [15, s("15")], [20, s("20")], [25, s("25")], [30, s("30")], [35, s("35")], [40, s("40")], [45, s("45")], [50, s("50")], [55, s("55")], [0, s("00")]].map(([a, l], c) => {
    const u = a === t;
    return f.jsx(K1, {
      label: l,
      id: u ? r : void 0,
      index: c + 1,
      inner: false,
      disabled: n(a),
      selected: u,
      "aria-label": o(l)
    }, a);
  });
};
var vh = ({
  value: e10,
  referenceDate: t,
  utils: n,
  props: o,
  timezone: r
}) => {
  const s = S.useMemo(
    () => ln.getInitialReferenceValue({
      value: e10,
      utils: n,
      props: o,
      referenceDate: t,
      granularity: Fo.day,
      timezone: r,
      getTodayDate: () => Xg(n, r, "date")
    }),
    // We only want to compute the reference date on mount.
    []
    // eslint-disable-line react-hooks/exhaustive-deps
  );
  return e10 ?? s;
};
var M8 = ["ampm", "ampmInClock", "autoFocus", "slots", "slotProps", "value", "defaultValue", "referenceDate", "disableIgnoringDatePartForTimeValidation", "maxTime", "minTime", "disableFuture", "disablePast", "minutesStep", "shouldDisableTime", "showViewSwitcher", "onChange", "view", "views", "openTo", "onViewChange", "focusedView", "onFocusedViewChange", "className", "disabled", "readOnly", "timezone"];
var k8 = (e10) => {
  const {
    classes: t
  } = e10;
  return Tt({
    root: ["root"],
    arrowSwitcher: ["arrowSwitcher"]
  }, s8, t);
};
var F8 = K(Gd, {
  name: "MuiTimeClock",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})({
  display: "flex",
  flexDirection: "column",
  position: "relative"
});
var N8 = K(V1, {
  name: "MuiTimeClock",
  slot: "ArrowSwitcher",
  overridesResolver: (e10, t) => t.arrowSwitcher
})({
  position: "absolute",
  right: 12,
  top: 15
});
var $8 = ["hours", "minutes"];
var Q1 = S.forwardRef(function(t, n) {
  const o = gt(), r = at({
    props: t,
    name: "MuiTimeClock"
  }), {
    ampm: s = o.is12HourCycleInCurrentLocale(),
    ampmInClock: a = false,
    autoFocus: l,
    slots: c,
    slotProps: u,
    value: d,
    defaultValue: p,
    referenceDate: m,
    disableIgnoringDatePartForTimeValidation: g = false,
    maxTime: b,
    minTime: v,
    disableFuture: h,
    disablePast: y,
    minutesStep: C = 1,
    shouldDisableTime: x,
    showViewSwitcher: T,
    onChange: w,
    view: R,
    views: E = $8,
    openTo: O,
    onViewChange: I,
    focusedView: P,
    onFocusedViewChange: A,
    className: M,
    disabled: F,
    readOnly: D,
    timezone: N
  } = r, j = Xe(r, M8), {
    value: _,
    handleValueChange: z,
    timezone: $
  } = ea({
    name: "TimeClock",
    timezone: N,
    value: d,
    defaultValue: p,
    onChange: w,
    valueManager: ln
  }), k = vh({
    value: _,
    referenceDate: m,
    utils: o,
    props: r,
    timezone: $
  }), B = gn(), Q = Yi($), {
    view: ee,
    setView: G,
    previousView: H,
    nextView: Y,
    setValueAndGoToNextView: J
  } = Ll({
    view: R,
    views: E,
    openTo: O,
    onViewChange: I,
    onChange: z,
    focusedView: P,
    onFocusedViewChange: A
  }), {
    meridiemMode: U,
    handleMeridiemChange: ne
  } = Hd(k, s, J), se = S.useCallback((ie, te) => {
    const le = Vl(g, o), ue = te === "hours" || te === "minutes" && E.includes("seconds"), ve = ({
      start: Re,
      end: re
    }) => !(v && le(v, re) || b && le(Re, b) || h && le(Re, Q) || y && le(Q, ue ? re : Re)), Te = (Re, re = 1) => {
      if (Re % re !== 0)
        return false;
      if (x)
        switch (te) {
          case "hours":
            return !x(o.setHours(k, Re), "hours");
          case "minutes":
            return !x(o.setMinutes(k, Re), "minutes");
          case "seconds":
            return !x(o.setSeconds(k, Re), "seconds");
          default:
            return false;
        }
      return true;
    };
    switch (te) {
      case "hours": {
        const Re = ml(ie, U, s), re = o.setHours(k, Re), X = o.setSeconds(o.setMinutes(re, 0), 0), ae = o.setSeconds(o.setMinutes(re, 59), 59);
        return !ve({
          start: X,
          end: ae
        }) || !Te(Re);
      }
      case "minutes": {
        const Re = o.setMinutes(k, ie), re = o.setSeconds(Re, 0), X = o.setSeconds(Re, 59);
        return !ve({
          start: re,
          end: X
        }) || !Te(ie, C);
      }
      case "seconds": {
        const Re = o.setSeconds(k, ie);
        return !ve({
          start: Re,
          end: Re
        }) || !Te(ie);
      }
      default:
        throw new Error("not supported");
    }
  }, [s, k, g, b, U, v, C, x, o, h, y, Q, E]), oe = qs(), W = S.useMemo(() => {
    switch (ee) {
      case "hours": {
        const ie = (te, le) => {
          const ue = ml(te, U, s);
          J(o.setHours(k, ue), le, "hours");
        };
        return {
          onChange: ie,
          viewValue: o.getHours(k),
          children: D8({
            value: _,
            utils: o,
            ampm: s,
            onChange: ie,
            getClockNumberText: B.hoursClockNumberText,
            isDisabled: (te) => F || se(te, "hours"),
            selectedId: oe
          })
        };
      }
      case "minutes": {
        const ie = o.getMinutes(k), te = (le, ue) => {
          J(o.setMinutes(k, le), ue, "minutes");
        };
        return {
          viewValue: ie,
          onChange: te,
          children: I0({
            utils: o,
            value: ie,
            onChange: te,
            getClockNumberText: B.minutesClockNumberText,
            isDisabled: (le) => F || se(le, "minutes"),
            selectedId: oe
          })
        };
      }
      case "seconds": {
        const ie = o.getSeconds(k), te = (le, ue) => {
          J(o.setSeconds(k, le), ue, "seconds");
        };
        return {
          viewValue: ie,
          onChange: te,
          children: I0({
            utils: o,
            value: ie,
            onChange: te,
            getClockNumberText: B.secondsClockNumberText,
            isDisabled: (le) => F || se(le, "seconds"),
            selectedId: oe
          })
        };
      }
      default:
        throw new Error("You must provide the type for ClockView");
    }
  }, [ee, o, _, s, B.hoursClockNumberText, B.minutesClockNumberText, B.secondsClockNumberText, U, J, k, se, oe, F]), Z = r, L = k8(Z);
  return f.jsxs(F8, V({
    ref: n,
    className: be(L.root, M),
    ownerState: Z
  }, j, {
    children: [f.jsx(E8, V({
      autoFocus: l ?? !!P,
      ampmInClock: a && E.includes("hours"),
      value: _,
      type: ee,
      ampm: s,
      minutesStep: C,
      isTimeDisabled: se,
      meridiemMode: U,
      handleMeridiemChange: ne,
      selectedId: oe,
      disabled: F,
      readOnly: D
    }, W)), T && f.jsx(N8, {
      className: L.arrowSwitcher,
      slots: c,
      slotProps: u,
      onGoToPrevious: () => G(H),
      isPreviousDisabled: !H,
      previousLabel: B.openPreviousView,
      onGoToNext: () => G(Y),
      isNextDisabled: !Y,
      nextLabel: B.openNextView,
      ownerState: Z
    })]
  }));
});
Q1.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default utils.is12HourCycleInCurrentLocale()
   */
  ampm: i.bool,
  /**
   * Display ampm controls under the clock (instead of in the toolbar).
   * @default false
   */
  ampmInClock: i.bool,
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  className: i.string,
  /**
   * The default selected value.
   * Used when the component is not controlled.
   */
  defaultValue: i.object,
  /**
   * If `true`, the picker views and text field are disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: i.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: i.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: i.bool,
  /**
   * Controlled focused view.
   */
  focusedView: i.oneOf(["hours", "minutes", "seconds"]),
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: i.object,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: i.object,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: i.number,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TView The view type. Will be one of date or time views.
   * @param {TValue} value The new value.
   * @param {PickerSelectionState | undefined} selectionState Indicates if the date selection is complete.
   * @param {TView | undefined} selectedView Indicates the view in which the selection has been made.
   */
  onChange: i.func,
  /**
   * Callback fired on focused view change.
   * @template TView
   * @param {TView} view The new view to focus or not.
   * @param {boolean} hasFocus `true` if the view should be focused.
   */
  onFocusedViewChange: i.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: i.func,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: i.oneOf(["hours", "minutes", "seconds"]),
  /**
   * If `true`, the picker views and text field are read-only.
   * @default false
   */
  readOnly: i.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid time using the validation props, except callbacks such as `shouldDisableTime`.
   */
  referenceDate: i.object,
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: i.func,
  showViewSwitcher: i.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: i.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: i.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: i.object,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: i.oneOf(["hours", "minutes", "seconds"]),
  /**
   * Available views.
   * @default ['hours', 'minutes']
   */
  views: i.arrayOf(i.oneOf(["hours", "minutes", "seconds"]).isRequired)
};
function V8(e10) {
  return Ot("MuiDigitalClock", e10);
}
var _8 = At("MuiDigitalClock", ["root", "list", "item"]);
var L8 = ["ampm", "timeStep", "autoFocus", "slots", "slotProps", "value", "defaultValue", "referenceDate", "disableIgnoringDatePartForTimeValidation", "maxTime", "minTime", "disableFuture", "disablePast", "minutesStep", "shouldDisableTime", "onChange", "view", "openTo", "onViewChange", "focusedView", "onFocusedViewChange", "className", "disabled", "readOnly", "views", "skipDisabled", "timezone"];
var B8 = (e10) => {
  const {
    classes: t
  } = e10;
  return Tt({
    root: ["root"],
    list: ["list"],
    item: ["item"]
  }, V8, t);
};
var z8 = K(Gd, {
  name: "MuiDigitalClock",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})({
  overflowY: "auto",
  width: "100%",
  "@media (prefers-reduced-motion: no-preference)": {
    scrollBehavior: "auto"
  },
  maxHeight: p1,
  variants: [{
    props: {
      alreadyRendered: true
    },
    style: {
      "@media (prefers-reduced-motion: no-preference)": {
        scrollBehavior: "smooth"
      }
    }
  }]
});
var W8 = K(ad, {
  name: "MuiDigitalClock",
  slot: "List",
  overridesResolver: (e10, t) => t.list
})({
  padding: 0
});
var H8 = K(Lo, {
  name: "MuiDigitalClock",
  slot: "Item",
  overridesResolver: (e10, t) => t.item
})(({
  theme: e10
}) => ({
  padding: "8px 16px",
  margin: "2px 4px",
  "&:first-of-type": {
    marginTop: 4
  },
  "&:hover": {
    backgroundColor: e10.vars ? `rgba(${e10.vars.palette.primary.mainChannel} / ${e10.vars.palette.action.hoverOpacity})` : We(e10.palette.primary.main, e10.palette.action.hoverOpacity)
  },
  "&.Mui-selected": {
    backgroundColor: (e10.vars || e10).palette.primary.main,
    color: (e10.vars || e10).palette.primary.contrastText,
    "&:focus-visible, &:hover": {
      backgroundColor: (e10.vars || e10).palette.primary.dark
    }
  },
  "&.Mui-focusVisible": {
    backgroundColor: e10.vars ? `rgba(${e10.vars.palette.primary.mainChannel} / ${e10.vars.palette.action.focusOpacity})` : We(e10.palette.primary.main, e10.palette.action.focusOpacity)
  }
}));
var eT = S.forwardRef(function(t, n) {
  const o = gt(), r = S.useRef(null), s = Bn(n, r), a = at({
    props: t,
    name: "MuiDigitalClock"
  }), {
    ampm: l = o.is12HourCycleInCurrentLocale(),
    timeStep: c = 30,
    autoFocus: u,
    slots: d,
    slotProps: p,
    value: m,
    defaultValue: g,
    referenceDate: b,
    disableIgnoringDatePartForTimeValidation: v = false,
    maxTime: h,
    minTime: y,
    disableFuture: C,
    disablePast: x,
    minutesStep: T = 1,
    shouldDisableTime: w,
    onChange: R,
    view: E,
    openTo: O,
    onViewChange: I,
    focusedView: P,
    onFocusedViewChange: A,
    className: M,
    disabled: F,
    readOnly: D,
    views: N = ["hours"],
    skipDisabled: j = false,
    timezone: _
  } = a, z = Xe(a, L8), {
    value: $,
    handleValueChange: k,
    timezone: B
  } = ea({
    name: "DigitalClock",
    timezone: _,
    value: m,
    defaultValue: g,
    onChange: R,
    valueManager: ln
  }), Q = gn(), ee = Yi(B), G = S.useMemo(() => V({}, a, {
    alreadyRendered: !!r.current
  }), [a]), H = B8(G), Y = (d == null ? void 0 : d.digitalClockItem) ?? H8, J = Pt({
    elementType: Y,
    externalSlotProps: p == null ? void 0 : p.digitalClockItem,
    ownerState: {},
    className: H.item
  }), U = vh({
    value: $,
    referenceDate: b,
    utils: o,
    props: a,
    timezone: B
  }), ne = Ge((ie) => k(ie, "finish", "hours")), {
    setValueAndGoToNextView: se
  } = Ll({
    view: E,
    views: N,
    openTo: O,
    onViewChange: I,
    onChange: ne,
    focusedView: P,
    onFocusedViewChange: A
  }), oe = Ge((ie) => {
    se(ie, "finish");
  });
  S.useEffect(() => {
    if (r.current === null)
      return;
    const ie = r.current.querySelector('[role="listbox"] [role="option"][tabindex="0"], [role="listbox"] [role="option"][aria-selected="true"]');
    if (!ie)
      return;
    const te = ie.offsetTop;
    (u || P) && ie.focus(), r.current.scrollTop = te - 4;
  });
  const W = S.useCallback((ie) => {
    const te = Vl(v, o), le = () => !(y && te(y, ie) || h && te(ie, h) || C && te(ie, ee) || x && te(ee, ie)), ue = () => o.getMinutes(ie) % T !== 0 ? false : w ? !w(ie, "hours") : true;
    return !le() || !ue();
  }, [v, o, y, h, C, ee, x, T, w]), Z = S.useMemo(() => {
    const ie = o.startOfDay(U);
    return [ie, ...Array.from({
      length: Math.ceil(24 * 60 / c) - 1
    }, (te, le) => o.addMinutes(ie, c * (le + 1)))];
  }, [U, c, o]), L = Z.findIndex((ie) => o.isEqual(ie, U));
  return f.jsx(z8, V({
    ref: s,
    className: be(H.root, M),
    ownerState: G
  }, z, {
    children: f.jsx(W8, {
      role: "listbox",
      "aria-label": Q.timePickerToolbarTitle,
      className: H.list,
      children: Z.map((ie, te) => {
        if (j && W(ie))
          return null;
        const le = o.isEqual(ie, $), ue = o.format(ie, l ? "fullTime12h" : "fullTime24h"), ve = L === te || L === -1 && te === 0 ? 0 : -1;
        return f.jsx(Y, V({
          onClick: () => !D && oe(ie),
          selected: le,
          disabled: F || W(ie),
          disableRipple: D,
          role: "option",
          "aria-disabled": D,
          "aria-selected": le,
          tabIndex: ve
        }, J, {
          children: ue
        }), ue);
      })
    })
  }));
});
eT.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default utils.is12HourCycleInCurrentLocale()
   */
  ampm: i.bool,
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  className: i.string,
  /**
   * The default selected value.
   * Used when the component is not controlled.
   */
  defaultValue: i.object,
  /**
   * If `true`, the picker views and text field are disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: i.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: i.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: i.bool,
  /**
   * Controlled focused view.
   */
  focusedView: i.oneOf(["hours"]),
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: i.object,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: i.object,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: i.number,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TView The view type. Will be one of date or time views.
   * @param {TValue} value The new value.
   * @param {PickerSelectionState | undefined} selectionState Indicates if the date selection is complete.
   * @param {TView | undefined} selectedView Indicates the view in which the selection has been made.
   */
  onChange: i.func,
  /**
   * Callback fired on focused view change.
   * @template TView
   * @param {TView} view The new view to focus or not.
   * @param {boolean} hasFocus `true` if the view should be focused.
   */
  onFocusedViewChange: i.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: i.func,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: i.oneOf(["hours"]),
  /**
   * If `true`, the picker views and text field are read-only.
   * @default false
   */
  readOnly: i.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid time using the validation props, except callbacks such as `shouldDisableTime`.
   */
  referenceDate: i.object,
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: i.func,
  /**
   * If `true`, disabled digital clock items will not be rendered.
   * @default false
   */
  skipDisabled: i.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: i.object,
  /**
   * Overrideable component slots.
   * @default {}
   */
  slots: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The time steps between two time options.
   * For example, if `timeStep = 45`, then the available time options will be `[00:00, 00:45, 01:30, 02:15, 03:00, etc.]`.
   * @default 30
   */
  timeStep: i.number,
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: i.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: i.object,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: i.oneOf(["hours"]),
  /**
   * Available views.
   * @default ['hours']
   */
  views: i.arrayOf(i.oneOf(["hours"]))
};
function G8(e10) {
  return Ot("MuiMultiSectionDigitalClock", e10);
}
var R0 = At("MuiMultiSectionDigitalClock", ["root"]);
function U8(e10) {
  return Ot("MuiMultiSectionDigitalClockSection", e10);
}
var X8 = At("MuiMultiSectionDigitalClockSection", ["root", "item"]);
var Y8 = ["autoFocus", "onChange", "className", "disabled", "readOnly", "items", "active", "slots", "slotProps", "skipDisabled"];
var Z8 = (e10) => {
  const {
    classes: t
  } = e10;
  return Tt({
    root: ["root"],
    item: ["item"]
  }, U8, t);
};
var q8 = K(ad, {
  name: "MuiMultiSectionDigitalClockSection",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})(({
  theme: e10
}) => ({
  maxHeight: p1,
  width: 56,
  padding: 0,
  overflow: "hidden",
  "@media (prefers-reduced-motion: no-preference)": {
    scrollBehavior: "auto"
  },
  "@media (pointer: fine)": {
    "&:hover": {
      overflowY: "auto"
    }
  },
  "@media (pointer: none), (pointer: coarse)": {
    overflowY: "auto"
  },
  "&:not(:first-of-type)": {
    borderLeft: `1px solid ${(e10.vars || e10).palette.divider}`
  },
  "&::after": {
    display: "block",
    content: '""',
    // subtracting the height of one item, extra margin and borders to make sure the max height is correct
    height: "calc(100% - 40px - 6px)"
  },
  variants: [{
    props: {
      alreadyRendered: true
    },
    style: {
      "@media (prefers-reduced-motion: no-preference)": {
        scrollBehavior: "smooth"
      }
    }
  }]
}));
var J8 = K(Lo, {
  name: "MuiMultiSectionDigitalClockSection",
  slot: "Item",
  overridesResolver: (e10, t) => t.item
})(({
  theme: e10
}) => ({
  padding: 8,
  margin: "2px 4px",
  width: Ra,
  justifyContent: "center",
  "&:first-of-type": {
    marginTop: 4
  },
  "&:hover": {
    backgroundColor: e10.vars ? `rgba(${e10.vars.palette.primary.mainChannel} / ${e10.vars.palette.action.hoverOpacity})` : We(e10.palette.primary.main, e10.palette.action.hoverOpacity)
  },
  "&.Mui-selected": {
    backgroundColor: (e10.vars || e10).palette.primary.main,
    color: (e10.vars || e10).palette.primary.contrastText,
    "&:focus-visible, &:hover": {
      backgroundColor: (e10.vars || e10).palette.primary.dark
    }
  },
  "&.Mui-focusVisible": {
    backgroundColor: e10.vars ? `rgba(${e10.vars.palette.primary.mainChannel} / ${e10.vars.palette.action.focusOpacity})` : We(e10.palette.primary.main, e10.palette.action.focusOpacity)
  }
}));
var K8 = S.forwardRef(function(t, n) {
  const o = S.useRef(null), r = Bn(n, o), s = S.useRef(null), a = at({
    props: t,
    name: "MuiMultiSectionDigitalClockSection"
  }), {
    autoFocus: l,
    onChange: c,
    className: u,
    disabled: d,
    readOnly: p,
    items: m,
    active: g,
    slots: b,
    slotProps: v,
    skipDisabled: h
  } = a, y = Xe(a, Y8), C = S.useMemo(() => V({}, a, {
    alreadyRendered: !!o.current
  }), [a]), x = Z8(C), T = (b == null ? void 0 : b.digitalClockSectionItem) ?? J8;
  S.useEffect(() => {
    if (o.current === null)
      return;
    const R = o.current.querySelector('[role="option"][tabindex="0"], [role="option"][aria-selected="true"]');
    if (g && l && R && R.focus(), !R || s.current === R)
      return;
    s.current = R;
    const E = R.offsetTop;
    o.current.scrollTop = E - 4;
  });
  const w = m.findIndex((R) => R.isFocused(R.value));
  return f.jsx(q8, V({
    ref: r,
    className: be(x.root, u),
    ownerState: C,
    autoFocusItem: l && g,
    role: "listbox"
  }, y, {
    children: m.map((R, E) => {
      var M;
      const O = (M = R.isDisabled) == null ? void 0 : M.call(R, R.value), I = d || O;
      if (h && I)
        return null;
      const P = R.isSelected(R.value), A = w === E || w === -1 && E === 0 ? 0 : -1;
      return f.jsx(T, V({
        onClick: () => !p && c(R.value),
        selected: P,
        disabled: I,
        disableRipple: p,
        role: "option",
        "aria-disabled": p || I || void 0,
        "aria-label": R.ariaLabel,
        "aria-selected": P,
        tabIndex: A,
        className: x.item
      }, v == null ? void 0 : v.digitalClockSectionItem, {
        children: R.label
      }), R.label);
    })
  }));
});
var Q8 = ({
  now: e10,
  value: t,
  utils: n,
  ampm: o,
  isDisabled: r,
  resolveAriaLabel: s,
  timeStep: a,
  valueOrReferenceDate: l
}) => {
  const c = t ? n.getHours(t) : null, u = [], d = (g, b) => {
    const v = b ?? c;
    return v === null ? false : o ? g === 12 ? v === 12 || v === 0 : v === g || v - 12 === g : v === g;
  }, p = (g) => d(g, n.getHours(l)), m = o ? 11 : 23;
  for (let g = 0; g <= m; g += a) {
    let b = n.format(n.setHours(e10, g), o ? "hours12h" : "hours24h");
    const v = s(parseInt(b, 10).toString());
    b = n.formatNumber(b), u.push({
      value: g,
      label: b,
      isSelected: d,
      isDisabled: r,
      isFocused: p,
      ariaLabel: v
    });
  }
  return u;
};
var E0 = ({
  value: e10,
  utils: t,
  isDisabled: n,
  timeStep: o,
  resolveLabel: r,
  resolveAriaLabel: s,
  hasValue: a = true
}) => {
  const l = (u) => e10 === null ? false : a && e10 === u, c = (u) => e10 === u;
  return [...Array.from({
    length: Math.ceil(60 / o)
  }, (u, d) => {
    const p = o * d;
    return {
      value: p,
      label: t.formatNumber(r(p)),
      isDisabled: n,
      isSelected: l,
      isFocused: c,
      ariaLabel: s(p.toString())
    };
  })];
};
var eY = ["ampm", "timeSteps", "autoFocus", "slots", "slotProps", "value", "defaultValue", "referenceDate", "disableIgnoringDatePartForTimeValidation", "maxTime", "minTime", "disableFuture", "disablePast", "minutesStep", "shouldDisableTime", "onChange", "view", "views", "openTo", "onViewChange", "focusedView", "onFocusedViewChange", "className", "disabled", "readOnly", "skipDisabled", "timezone"];
var tY = (e10) => {
  const {
    classes: t
  } = e10;
  return Tt({
    root: ["root"]
  }, G8, t);
};
var nY = K(Gd, {
  name: "MuiMultiSectionDigitalClock",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})(({
  theme: e10
}) => ({
  display: "flex",
  flexDirection: "row",
  width: "100%",
  borderBottom: `1px solid ${(e10.vars || e10).palette.divider}`
}));
var tT = S.forwardRef(function(t, n) {
  const o = gt(), r = mo(), s = at({
    props: t,
    name: "MuiMultiSectionDigitalClock"
  }), {
    ampm: a = o.is12HourCycleInCurrentLocale(),
    timeSteps: l,
    autoFocus: c,
    slots: u,
    slotProps: d,
    value: p,
    defaultValue: m,
    referenceDate: g,
    disableIgnoringDatePartForTimeValidation: b = false,
    maxTime: v,
    minTime: h,
    disableFuture: y,
    disablePast: C,
    minutesStep: x = 1,
    shouldDisableTime: T,
    onChange: w,
    view: R,
    views: E = ["hours", "minutes"],
    openTo: O,
    onViewChange: I,
    focusedView: P,
    onFocusedViewChange: A,
    className: M,
    disabled: F,
    readOnly: D,
    skipDisabled: N = false,
    timezone: j
  } = s, _ = Xe(s, eY), {
    value: z,
    handleValueChange: $,
    timezone: k
  } = ea({
    name: "MultiSectionDigitalClock",
    timezone: j,
    value: p,
    defaultValue: m,
    onChange: w,
    valueManager: ln
  }), B = gn(), Q = Yi(k), ee = S.useMemo(() => V({
    hours: 1,
    minutes: 5,
    seconds: 5
  }, l), [l]), G = vh({
    value: z,
    referenceDate: g,
    utils: o,
    props: s,
    timezone: k
  }), H = Ge((ve, Te, Re) => $(ve, Te, Re)), Y = S.useMemo(() => !a || !E.includes("hours") || E.includes("meridiem") ? E : [...E, "meridiem"], [a, E]), {
    view: J,
    setValueAndGoToNextView: U,
    focusedView: ne
  } = Ll({
    view: R,
    views: Y,
    openTo: O,
    onViewChange: I,
    onChange: H,
    focusedView: P,
    onFocusedViewChange: A
  }), se = Ge((ve) => {
    U(ve, "finish", "meridiem");
  }), {
    meridiemMode: oe,
    handleMeridiemChange: W
  } = Hd(G, a, se, "finish"), Z = S.useCallback((ve, Te) => {
    const Re = Vl(b, o), re = Te === "hours" || Te === "minutes" && Y.includes("seconds"), X = ({
      start: ce,
      end: ge
    }) => !(h && Re(h, ge) || v && Re(ce, v) || y && Re(ce, Q) || C && Re(Q, re ? ge : ce)), ae = (ce, ge = 1) => {
      if (ce % ge !== 0)
        return false;
      if (T)
        switch (Te) {
          case "hours":
            return !T(o.setHours(G, ce), "hours");
          case "minutes":
            return !T(o.setMinutes(G, ce), "minutes");
          case "seconds":
            return !T(o.setSeconds(G, ce), "seconds");
          default:
            return false;
        }
      return true;
    };
    switch (Te) {
      case "hours": {
        const ce = ml(ve, oe, a), ge = o.setHours(G, ce), Se = o.setSeconds(o.setMinutes(ge, 0), 0), ye = o.setSeconds(o.setMinutes(ge, 59), 59);
        return !X({
          start: Se,
          end: ye
        }) || !ae(ce);
      }
      case "minutes": {
        const ce = o.setMinutes(G, ve), ge = o.setSeconds(ce, 0), Se = o.setSeconds(ce, 59);
        return !X({
          start: ge,
          end: Se
        }) || !ae(ve, x);
      }
      case "seconds": {
        const ce = o.setSeconds(G, ve);
        return !X({
          start: ce,
          end: ce
        }) || !ae(ve);
      }
      default:
        throw new Error("not supported");
    }
  }, [a, G, b, v, oe, h, x, T, o, y, C, Q, Y]), L = S.useCallback((ve) => {
    switch (ve) {
      case "hours":
        return {
          onChange: (Te) => {
            const Re = ml(Te, oe, a);
            U(o.setHours(G, Re), "finish", "hours");
          },
          items: Q8({
            now: Q,
            value: z,
            ampm: a,
            utils: o,
            isDisabled: (Te) => Z(Te, "hours"),
            timeStep: ee.hours,
            resolveAriaLabel: B.hoursClockNumberText,
            valueOrReferenceDate: G
          })
        };
      case "minutes":
        return {
          onChange: (Te) => {
            U(o.setMinutes(G, Te), "finish", "minutes");
          },
          items: E0({
            value: o.getMinutes(G),
            utils: o,
            isDisabled: (Te) => Z(Te, "minutes"),
            resolveLabel: (Te) => o.format(o.setMinutes(Q, Te), "minutes"),
            timeStep: ee.minutes,
            hasValue: !!z,
            resolveAriaLabel: B.minutesClockNumberText
          })
        };
      case "seconds":
        return {
          onChange: (Te) => {
            U(o.setSeconds(G, Te), "finish", "seconds");
          },
          items: E0({
            value: o.getSeconds(G),
            utils: o,
            isDisabled: (Te) => Z(Te, "seconds"),
            resolveLabel: (Te) => o.format(o.setSeconds(Q, Te), "seconds"),
            timeStep: ee.seconds,
            hasValue: !!z,
            resolveAriaLabel: B.secondsClockNumberText
          })
        };
      case "meridiem": {
        const Te = No(o, "am"), Re = No(o, "pm");
        return {
          onChange: W,
          items: [{
            value: "am",
            label: Te,
            isSelected: () => !!z && oe === "am",
            isFocused: () => !!G && oe === "am",
            ariaLabel: Te
          }, {
            value: "pm",
            label: Re,
            isSelected: () => !!z && oe === "pm",
            isFocused: () => !!G && oe === "pm",
            ariaLabel: Re
          }]
        };
      }
      default:
        throw new Error(`Unknown view: ${ve} found.`);
    }
  }, [Q, z, a, o, ee.hours, ee.minutes, ee.seconds, B.hoursClockNumberText, B.minutesClockNumberText, B.secondsClockNumberText, oe, U, G, Z, W]), ie = S.useMemo(() => {
    if (!r)
      return Y;
    const ve = Y.filter((Te) => Te !== "meridiem");
    return ve.reverse(), Y.includes("meridiem") && ve.push("meridiem"), ve;
  }, [r, Y]), te = S.useMemo(() => Y.reduce((ve, Te) => V({}, ve, {
    [Te]: L(Te)
  }), {}), [Y, L]), le = s, ue = tY(le);
  return f.jsx(nY, V({
    ref: n,
    className: be(ue.root, M),
    ownerState: le,
    role: "group"
  }, _, {
    children: ie.map((ve) => f.jsx(K8, {
      items: te[ve].items,
      onChange: te[ve].onChange,
      active: J === ve,
      autoFocus: c ?? ne === ve,
      disabled: F,
      readOnly: D,
      slots: u,
      slotProps: d,
      skipDisabled: N,
      "aria-label": B.selectViewText(ve)
    }, ve))
  }));
});
tT.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default utils.is12HourCycleInCurrentLocale()
   */
  ampm: i.bool,
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  className: i.string,
  /**
   * The default selected value.
   * Used when the component is not controlled.
   */
  defaultValue: i.object,
  /**
   * If `true`, the picker views and text field are disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: i.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: i.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: i.bool,
  /**
   * Controlled focused view.
   */
  focusedView: i.oneOf(["hours", "meridiem", "minutes", "seconds"]),
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: i.object,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: i.object,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: i.number,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TView The view type. Will be one of date or time views.
   * @param {TValue} value The new value.
   * @param {PickerSelectionState | undefined} selectionState Indicates if the date selection is complete.
   * @param {TView | undefined} selectedView Indicates the view in which the selection has been made.
   */
  onChange: i.func,
  /**
   * Callback fired on focused view change.
   * @template TView
   * @param {TView} view The new view to focus or not.
   * @param {boolean} hasFocus `true` if the view should be focused.
   */
  onFocusedViewChange: i.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: i.func,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: i.oneOf(["hours", "meridiem", "minutes", "seconds"]),
  /**
   * If `true`, the picker views and text field are read-only.
   * @default false
   */
  readOnly: i.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid time using the validation props, except callbacks such as `shouldDisableTime`.
   */
  referenceDate: i.object,
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: i.func,
  /**
   * If `true`, disabled digital clock items will not be rendered.
   * @default false
   */
  skipDisabled: i.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: i.object,
  /**
   * Overrideable component slots.
   * @default {}
   */
  slots: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * The time steps between two time unit options.
   * For example, if `timeStep.minutes = 8`, then the available minute options will be `[0, 8, 16, 24, 32, 40, 48, 56]`.
   * @default{ hours: 1, minutes: 5, seconds: 5 }
   */
  timeSteps: i.shape({
    hours: i.number,
    minutes: i.number,
    seconds: i.number
  }),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: i.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: i.object,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: i.oneOf(["hours", "meridiem", "minutes", "seconds"]),
  /**
   * Available views.
   * @default ['hours', 'minutes']
   */
  views: i.arrayOf(i.oneOf(["hours", "meridiem", "minutes", "seconds"]).isRequired)
};
var Ss = ({
  view: e10,
  onViewChange: t,
  focusedView: n,
  onFocusedViewChange: o,
  views: r,
  value: s,
  defaultValue: a,
  referenceDate: l,
  onChange: c,
  className: u,
  classes: d,
  disableFuture: p,
  disablePast: m,
  minTime: g,
  maxTime: b,
  shouldDisableTime: v,
  minutesStep: h,
  ampm: y,
  ampmInClock: C,
  slots: x,
  slotProps: T,
  readOnly: w,
  disabled: R,
  sx: E,
  autoFocus: O,
  showViewSwitcher: I,
  disableIgnoringDatePartForTimeValidation: P,
  timezone: A
}) => f.jsx(Q1, {
  view: e10,
  onViewChange: t,
  focusedView: n && Ns(n) ? n : null,
  onFocusedViewChange: o,
  views: r.filter(Ns),
  value: s,
  defaultValue: a,
  referenceDate: l,
  onChange: c,
  className: u,
  classes: d,
  disableFuture: p,
  disablePast: m,
  minTime: g,
  maxTime: b,
  shouldDisableTime: v,
  minutesStep: h,
  ampm: y,
  ampmInClock: C,
  slots: x,
  slotProps: T,
  readOnly: w,
  disabled: R,
  sx: E,
  autoFocus: O,
  showViewSwitcher: I,
  disableIgnoringDatePartForTimeValidation: P,
  timezone: A
});
var nT = ({
  view: e10,
  onViewChange: t,
  focusedView: n,
  onFocusedViewChange: o,
  views: r,
  value: s,
  defaultValue: a,
  referenceDate: l,
  onChange: c,
  className: u,
  classes: d,
  disableFuture: p,
  disablePast: m,
  minTime: g,
  maxTime: b,
  shouldDisableTime: v,
  minutesStep: h,
  ampm: y,
  slots: C,
  slotProps: x,
  readOnly: T,
  disabled: w,
  sx: R,
  autoFocus: E,
  disableIgnoringDatePartForTimeValidation: O,
  timeSteps: I,
  skipDisabled: P,
  timezone: A
}) => f.jsx(eT, {
  view: e10,
  onViewChange: t,
  focusedView: n,
  onFocusedViewChange: o,
  views: r.filter(Ns),
  value: s,
  defaultValue: a,
  referenceDate: l,
  onChange: c,
  className: u,
  classes: d,
  disableFuture: p,
  disablePast: m,
  minTime: g,
  maxTime: b,
  shouldDisableTime: v,
  minutesStep: h,
  ampm: y,
  slots: C,
  slotProps: x,
  readOnly: T,
  disabled: w,
  sx: R,
  autoFocus: E,
  disableIgnoringDatePartForTimeValidation: O,
  timeStep: I == null ? void 0 : I.minutes,
  skipDisabled: P,
  timezone: A
});
var bu = ({
  view: e10,
  onViewChange: t,
  focusedView: n,
  onFocusedViewChange: o,
  views: r,
  value: s,
  defaultValue: a,
  referenceDate: l,
  onChange: c,
  className: u,
  classes: d,
  disableFuture: p,
  disablePast: m,
  minTime: g,
  maxTime: b,
  shouldDisableTime: v,
  minutesStep: h,
  ampm: y,
  slots: C,
  slotProps: x,
  readOnly: T,
  disabled: w,
  sx: R,
  autoFocus: E,
  disableIgnoringDatePartForTimeValidation: O,
  timeSteps: I,
  skipDisabled: P,
  timezone: A
}) => f.jsx(tT, {
  view: e10,
  onViewChange: t,
  focusedView: n,
  onFocusedViewChange: o,
  views: r.filter(Ns),
  value: s,
  defaultValue: a,
  referenceDate: l,
  onChange: c,
  className: u,
  classes: d,
  disableFuture: p,
  disablePast: m,
  minTime: g,
  maxTime: b,
  shouldDisableTime: v,
  minutesStep: h,
  ampm: y,
  slots: C,
  slotProps: x,
  readOnly: T,
  disabled: w,
  sx: R,
  autoFocus: E,
  disableIgnoringDatePartForTimeValidation: O,
  timeSteps: I,
  skipDisabled: P,
  timezone: A
});
var oT = S.forwardRef(function(t, n) {
  var v;
  const o = mo(), {
    toolbar: r,
    tabs: s,
    content: a,
    actionBar: l,
    shortcuts: c
  } = m1(t), {
    sx: u,
    className: d,
    isLandscape: p,
    classes: m
  } = t, g = l && (((v = l.props.actions) == null ? void 0 : v.length) ?? 0) > 0, b = V({}, t, {
    isRtl: o
  });
  return f.jsxs(g1, {
    ref: n,
    className: be(d, ko.root, m == null ? void 0 : m.root),
    sx: [{
      [`& .${ko.tabs}`]: {
        gridRow: 4,
        gridColumn: "1 / 4"
      },
      [`& .${ko.actionBar}`]: {
        gridRow: 5
      }
    }, ...Array.isArray(u) ? u : [u]],
    ownerState: b,
    children: [p ? c : r, p ? r : c, f.jsxs(h1, {
      className: be(ko.contentWrapper, m == null ? void 0 : m.contentWrapper),
      sx: {
        display: "grid"
      },
      children: [a, s, g && f.jsx(Vo, {
        sx: {
          gridRow: 3,
          gridColumn: "1 / 4"
        }
      })]
    }), l]
  });
});
oT.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  children: i.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  className: i.string,
  disabled: i.bool,
  isLandscape: i.bool.isRequired,
  /**
   * `true` if the application is in right-to-left direction.
   */
  isRtl: i.bool.isRequired,
  isValid: i.func.isRequired,
  onAccept: i.func.isRequired,
  onCancel: i.func.isRequired,
  onChange: i.func.isRequired,
  onClear: i.func.isRequired,
  onClose: i.func.isRequired,
  onDismiss: i.func.isRequired,
  onOpen: i.func.isRequired,
  onSelectShortcut: i.func.isRequired,
  onSetToday: i.func.isRequired,
  onViewChange: i.func.isRequired,
  /**
   * Force rendering in particular orientation.
   */
  orientation: i.oneOf(["landscape", "portrait"]),
  readOnly: i.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: i.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  value: i.any,
  view: i.oneOf(["day", "hours", "meridiem", "minutes", "month", "seconds", "year"]),
  views: i.arrayOf(i.oneOf(["day", "hours", "meridiem", "minutes", "month", "seconds", "year"]).isRequired).isRequired,
  wrapperVariant: i.oneOf(["desktop", "mobile"])
};
var oY = ["openTo", "focusedView", "timeViewsCount"];
var rY = function(t, n, o) {
  var d, p;
  const {
    openTo: r,
    focusedView: s,
    timeViewsCount: a
  } = o, l = Xe(o, oY), c = V({}, l, {
    focusedView: null,
    sx: [{
      [`&.${R0.root}`]: {
        borderBottom: 0
      },
      [`&.${R0.root}, .${X8.root}, &.${_8.root}`]: {
        maxHeight: Dd
      }
    }]
  }), u = Ia(n);
  return f.jsxs(S.Fragment, {
    children: [(d = t[u ? "day" : n]) == null ? void 0 : d.call(t, V({}, o, {
      view: u ? "day" : n,
      focusedView: s && Fs(s) ? s : null,
      views: o.views.filter(Fs),
      sx: [{
        gridColumn: 1
      }, ...c.sx]
    })), a > 0 && f.jsxs(S.Fragment, {
      children: [f.jsx(Vo, {
        orientation: "vertical",
        sx: {
          gridColumn: 2
        }
      }), (p = t[u ? n : "hours"]) == null ? void 0 : p.call(t, V({}, c, {
        view: u ? n : "hours",
        focusedView: s && Ia(s) ? s : null,
        openTo: Ia(r) ? r : "hours",
        views: o.views.filter(Ia),
        sx: [{
          gridColumn: 3
        }, ...c.sx]
      }))]
    })]
  });
};
var rT = S.forwardRef(function(t, n) {
  var C, x, T, w;
  const o = gn(), r = gt(), s = U1(t, "MuiDesktopDateTimePicker"), {
    shouldRenderTimeInASingleColumn: a,
    thresholdToRenderTimeInASingleColumn: l,
    views: c,
    timeSteps: u
  } = Y1(s), d = a ? nT : bu, p = V({
    day: Io,
    month: Io,
    year: Io,
    hours: d,
    minutes: d,
    seconds: d,
    meridiem: d
  }, s.viewRenderers), m = s.ampmInClock ?? true, b = ((C = p.hours) == null ? void 0 : C.name) === bu.name ? c : c.filter((R) => R !== "meridiem"), v = a ? [] : ["accept"], h = V({}, s, {
    viewRenderers: p,
    format: X1(r, s),
    views: b,
    yearsPerRow: s.yearsPerRow ?? 4,
    ampmInClock: m,
    timeSteps: u,
    thresholdToRenderTimeInASingleColumn: l,
    shouldRenderTimeInASingleColumn: a,
    slots: V({
      field: hh,
      layout: oT,
      openPickerIcon: b1
    }, s.slots),
    slotProps: V({}, s.slotProps, {
      field: (R) => {
        var E;
        return V({}, ti((E = s.slotProps) == null ? void 0 : E.field, R), Qs(s), {
          ref: n
        });
      },
      toolbar: V({
        hidden: true,
        ampmInClock: m,
        toolbarVariant: "desktop"
      }, (x = s.slotProps) == null ? void 0 : x.toolbar),
      tabs: V({
        hidden: true
      }, (T = s.slotProps) == null ? void 0 : T.tabs),
      actionBar: (R) => {
        var E;
        return V({
          actions: v
        }, ti((E = s.slotProps) == null ? void 0 : E.actionBar, R));
      }
    })
  }), {
    renderPicker: y
  } = oh({
    props: h,
    valueManager: ln,
    valueType: "date-time",
    getOpenDialogAriaText: Js({
      utils: r,
      formatKey: "fullDate",
      contextTranslation: o.openDatePickerDialogue,
      propsTranslation: (w = h.localeText) == null ? void 0 : w.openDatePickerDialogue
    }),
    validator: Pd,
    rendererInterceptor: rY
  });
  return y();
});
rT.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default utils.is12HourCycleInCurrentLocale()
   */
  ampm: i.bool,
  /**
   * Display ampm controls under the clock (instead of in the toolbar).
   * @default true on desktop, false on mobile
   */
  ampmInClock: i.bool,
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: i.bool,
  className: i.string,
  /**
   * If `true`, the popover or modal will close after submitting the full date.
   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).
   */
  closeOnSelect: i.bool,
  /**
   * Formats the day of week displayed in the calendar header.
   * @param {TDate} date The date of the day of week provided by the adapter.
   * @returns {string} The name to display.
   * @default (date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()
   */
  dayOfWeekFormatter: i.func,
  /**
   * The default value.
   * Used when the component is not controlled.
   */
  defaultValue: i.object,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: i.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: i.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: i.bool,
  /**
   * If `true`, the open picker button will not be rendered (renders only the field).
   * @default false
   */
  disableOpenPicker: i.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: i.bool,
  /**
   * If `true`, the week number will be display in the calendar.
   */
  displayWeekNumber: i.bool,
  /**
   * @default false
   */
  enableAccessibleFieldDOMStructure: i.any,
  /**
   * The day view will show as many weeks as needed after the end of the current month to match this value.
   * Put it to 6 to have a fixed number of weeks in Gregorian calendars
   */
  fixedWeekNumber: i.number,
  /**
   * Format of the date when rendered in the input(s).
   * Defaults to localized format based on the used `views`.
   */
  format: i.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: i.oneOf(["dense", "spacious"]),
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Pn,
  /**
   * The label content.
   */
  label: i.node,
  /**
   * If `true`, calls `renderLoading` instead of rendering the day calendar.
   * Can be used to preload information and show it in calendar.
   * @default false
   */
  loading: i.bool,
  /**
   * Locale for components texts.
   * Allows overriding texts coming from `LocalizationProvider` and `theme`.
   */
  localeText: i.object,
  /**
   * Maximal selectable date.
   * @default 2099-12-31
   */
  maxDate: i.object,
  /**
   * Maximal selectable moment of time with binding to date, to set max time in each day use `maxTime`.
   */
  maxDateTime: i.object,
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: i.object,
  /**
   * Minimal selectable date.
   * @default 1900-01-01
   */
  minDate: i.object,
  /**
   * Minimal selectable moment of time with binding to date, to set min time in each day use `minTime`.
   */
  minDateTime: i.object,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: i.object,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: i.number,
  /**
   * Months rendered per row.
   * @default 3
   */
  monthsPerRow: i.oneOf([3, 4]),
  /**
   * Name attribute used by the `input` element in the Field.
   */
  name: i.string,
  /**
   * Callback fired when the value is accepted.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The value that was just accepted.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onAccept: i.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: i.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see `open`).
   */
  onClose: i.func,
  /**
   * Callback fired when the error associated with the current value changes.
   * When a validation error is detected, the `error` parameter contains a non-null value.
   * This can be used to render an appropriate form error.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @param {TError} error The reason why the current value is not valid.
   * @param {TValue} value The value associated with the error.
   */
  onError: i.func,
  /**
   * Callback fired on month change.
   * @template TDate
   * @param {TDate} month The new month.
   */
  onMonthChange: i.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see `open`).
   */
  onOpen: i.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: i.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: i.func,
  /**
   * Callback fired on year change.
   * @template TDate
   * @param {TDate} year The new year.
   */
  onYearChange: i.func,
  /**
   * Control the popup or dialog open state.
   * @default false
   */
  open: i.bool,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: i.oneOf(["day", "hours", "meridiem", "minutes", "month", "seconds", "year"]),
  /**
   * Force rendering in particular orientation.
   */
  orientation: i.oneOf(["landscape", "portrait"]),
  readOnly: i.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: i.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.
   */
  referenceDate: i.object,
  /**
   * Component displaying when passed `loading` true.
   * @returns {React.ReactNode} The node to render when loading.
   * @default () => <span data-mui-test="loading-progress">...</span>
   */
  renderLoading: i.func,
  /**
   * The currently selected sections.
   * This prop accepts four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 3. If `"all"` is provided, all the sections will be selected.
   * 4. If `null` is provided, no section will be selected.
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: i.oneOfType([i.oneOf(["all", "day", "empty", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), i.number]),
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (for example when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: i.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: i.func,
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: i.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: i.func,
  /**
   * If `true`, days outside the current month are rendered:
   *
   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.
   *
   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.
   *
   * - ignored if `calendars` equals more than `1` on range pickers.
   * @default false
   */
  showDaysOutsideCurrentMonth: i.bool,
  /**
   * If `true`, disabled digital clock items will not be rendered.
   * @default false
   */
  skipDisabled: i.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: i.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Amount of time options below or at which the single column time renderer is used.
   * @default 24
   */
  thresholdToRenderTimeInASingleColumn: i.number,
  /**
   * The time steps between two time unit options.
   * For example, if `timeStep.minutes = 8`, then the available minute options will be `[0, 8, 16, 24, 32, 40, 48, 56]`.
   * When single column time renderer is used, only `timeStep.minutes` will be used.
   * @default{ hours: 1, minutes: 5, seconds: 5 }
   */
  timeSteps: i.shape({
    hours: i.number,
    minutes: i.number,
    seconds: i.number
  }),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: i.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: i.object,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: i.oneOf(["day", "hours", "meridiem", "minutes", "month", "seconds", "year"]),
  /**
   * Define custom view renderers for each section.
   * If `null`, the section will only have field editing.
   * If `undefined`, internally defined view will be used.
   */
  viewRenderers: i.shape({
    day: i.func,
    hours: i.func,
    meridiem: i.func,
    minutes: i.func,
    month: i.func,
    seconds: i.func,
    year: i.func
  }),
  /**
   * Available views.
   */
  views: i.arrayOf(i.oneOf(["day", "hours", "minutes", "month", "seconds", "year"]).isRequired),
  /**
   * Years are displayed in ascending (chronological) order by default.
   * If `desc`, years are displayed in descending order.
   * @default 'asc'
   */
  yearsOrder: i.oneOf(["asc", "desc"]),
  /**
   * Years rendered per row.
   * @default 4
   */
  yearsPerRow: i.oneOf([3, 4])
};
var iT = S.forwardRef(function(t, n) {
  var d, p, m;
  const o = gn(), r = gt(), s = U1(t, "MuiMobileDateTimePicker"), a = V({
    day: Io,
    month: Io,
    year: Io,
    hours: Ss,
    minutes: Ss,
    seconds: Ss
  }, s.viewRenderers), l = s.ampmInClock ?? false, c = V({}, s, {
    viewRenderers: a,
    format: X1(r, s),
    ampmInClock: l,
    slots: V({
      field: hh
    }, s.slots),
    slotProps: V({}, s.slotProps, {
      field: (g) => {
        var b;
        return V({}, ti((b = s.slotProps) == null ? void 0 : b.field, g), Qs(s), {
          ref: n
        });
      },
      toolbar: V({
        hidden: false,
        ampmInClock: l
      }, (d = s.slotProps) == null ? void 0 : d.toolbar),
      tabs: V({
        hidden: false
      }, (p = s.slotProps) == null ? void 0 : p.tabs)
    })
  }), {
    renderPicker: u
  } = gh({
    props: c,
    valueManager: ln,
    valueType: "date-time",
    getOpenDialogAriaText: Js({
      utils: r,
      formatKey: "fullDate",
      contextTranslation: o.openDatePickerDialogue,
      propsTranslation: (m = c.localeText) == null ? void 0 : m.openDatePickerDialogue
    }),
    validator: Pd
  });
  return u();
});
iT.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default utils.is12HourCycleInCurrentLocale()
   */
  ampm: i.bool,
  /**
   * Display ampm controls under the clock (instead of in the toolbar).
   * @default true on desktop, false on mobile
   */
  ampmInClock: i.bool,
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: i.bool,
  className: i.string,
  /**
   * If `true`, the popover or modal will close after submitting the full date.
   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).
   */
  closeOnSelect: i.bool,
  /**
   * Formats the day of week displayed in the calendar header.
   * @param {TDate} date The date of the day of week provided by the adapter.
   * @returns {string} The name to display.
   * @default (date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()
   */
  dayOfWeekFormatter: i.func,
  /**
   * The default value.
   * Used when the component is not controlled.
   */
  defaultValue: i.object,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: i.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: i.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: i.bool,
  /**
   * If `true`, the open picker button will not be rendered (renders only the field).
   * @default false
   */
  disableOpenPicker: i.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: i.bool,
  /**
   * If `true`, the week number will be display in the calendar.
   */
  displayWeekNumber: i.bool,
  /**
   * @default false
   */
  enableAccessibleFieldDOMStructure: i.any,
  /**
   * The day view will show as many weeks as needed after the end of the current month to match this value.
   * Put it to 6 to have a fixed number of weeks in Gregorian calendars
   */
  fixedWeekNumber: i.number,
  /**
   * Format of the date when rendered in the input(s).
   * Defaults to localized format based on the used `views`.
   */
  format: i.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: i.oneOf(["dense", "spacious"]),
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Pn,
  /**
   * The label content.
   */
  label: i.node,
  /**
   * If `true`, calls `renderLoading` instead of rendering the day calendar.
   * Can be used to preload information and show it in calendar.
   * @default false
   */
  loading: i.bool,
  /**
   * Locale for components texts.
   * Allows overriding texts coming from `LocalizationProvider` and `theme`.
   */
  localeText: i.object,
  /**
   * Maximal selectable date.
   * @default 2099-12-31
   */
  maxDate: i.object,
  /**
   * Maximal selectable moment of time with binding to date, to set max time in each day use `maxTime`.
   */
  maxDateTime: i.object,
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: i.object,
  /**
   * Minimal selectable date.
   * @default 1900-01-01
   */
  minDate: i.object,
  /**
   * Minimal selectable moment of time with binding to date, to set min time in each day use `minTime`.
   */
  minDateTime: i.object,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: i.object,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: i.number,
  /**
   * Months rendered per row.
   * @default 3
   */
  monthsPerRow: i.oneOf([3, 4]),
  /**
   * Name attribute used by the `input` element in the Field.
   */
  name: i.string,
  /**
   * Callback fired when the value is accepted.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The value that was just accepted.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onAccept: i.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: i.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see `open`).
   */
  onClose: i.func,
  /**
   * Callback fired when the error associated with the current value changes.
   * When a validation error is detected, the `error` parameter contains a non-null value.
   * This can be used to render an appropriate form error.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @param {TError} error The reason why the current value is not valid.
   * @param {TValue} value The value associated with the error.
   */
  onError: i.func,
  /**
   * Callback fired on month change.
   * @template TDate
   * @param {TDate} month The new month.
   */
  onMonthChange: i.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see `open`).
   */
  onOpen: i.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: i.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: i.func,
  /**
   * Callback fired on year change.
   * @template TDate
   * @param {TDate} year The new year.
   */
  onYearChange: i.func,
  /**
   * Control the popup or dialog open state.
   * @default false
   */
  open: i.bool,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: i.oneOf(["day", "hours", "minutes", "month", "seconds", "year"]),
  /**
   * Force rendering in particular orientation.
   */
  orientation: i.oneOf(["landscape", "portrait"]),
  readOnly: i.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: i.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.
   */
  referenceDate: i.object,
  /**
   * Component displaying when passed `loading` true.
   * @returns {React.ReactNode} The node to render when loading.
   * @default () => <span data-mui-test="loading-progress">...</span>
   */
  renderLoading: i.func,
  /**
   * The currently selected sections.
   * This prop accepts four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 3. If `"all"` is provided, all the sections will be selected.
   * 4. If `null` is provided, no section will be selected.
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: i.oneOfType([i.oneOf(["all", "day", "empty", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), i.number]),
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (for example when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: i.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: i.func,
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: i.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: i.func,
  /**
   * If `true`, days outside the current month are rendered:
   *
   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.
   *
   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.
   *
   * - ignored if `calendars` equals more than `1` on range pickers.
   * @default false
   */
  showDaysOutsideCurrentMonth: i.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: i.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: i.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: i.object,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: i.oneOf(["day", "hours", "minutes", "month", "seconds", "year"]),
  /**
   * Define custom view renderers for each section.
   * If `null`, the section will only have field editing.
   * If `undefined`, internally defined view will be used.
   */
  viewRenderers: i.shape({
    day: i.func,
    hours: i.func,
    minutes: i.func,
    month: i.func,
    seconds: i.func,
    year: i.func
  }),
  /**
   * Available views.
   */
  views: i.arrayOf(i.oneOf(["day", "hours", "minutes", "month", "seconds", "year"]).isRequired),
  /**
   * Years are displayed in ascending (chronological) order by default.
   * If `desc`, years are displayed in descending order.
   * @default 'asc'
   */
  yearsOrder: i.oneOf(["asc", "desc"]),
  /**
   * Years rendered per row.
   * @default 3
   */
  yearsPerRow: i.oneOf([3, 4])
};
var iY = ["desktopModeMediaQuery"];
var sT = S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiDateTimePicker"
  }), {
    desktopModeMediaQuery: r = eh
  } = o, s = Xe(o, iY);
  return Yr(r, {
    defaultMatches: true
  }) ? f.jsx(rT, V({
    ref: n
  }, s)) : f.jsx(iT, V({
    ref: n
  }, s));
});
sT.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default utils.is12HourCycleInCurrentLocale()
   */
  ampm: i.bool,
  /**
   * Display ampm controls under the clock (instead of in the toolbar).
   * @default true on desktop, false on mobile
   */
  ampmInClock: i.bool,
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: i.bool,
  className: i.string,
  /**
   * If `true`, the popover or modal will close after submitting the full date.
   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).
   */
  closeOnSelect: i.bool,
  /**
   * Formats the day of week displayed in the calendar header.
   * @param {TDate} date The date of the day of week provided by the adapter.
   * @returns {string} The name to display.
   * @default (date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()
   */
  dayOfWeekFormatter: i.func,
  /**
   * The default value.
   * Used when the component is not controlled.
   */
  defaultValue: i.object,
  /**
   * CSS media query when `Mobile` mode will be changed to `Desktop`.
   * @default '@media (pointer: fine)'
   * @example '@media (min-width: 720px)' or theme.breakpoints.up("sm")
   */
  desktopModeMediaQuery: i.string,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: i.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: i.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: i.bool,
  /**
   * If `true`, the open picker button will not be rendered (renders only the field).
   * @default false
   */
  disableOpenPicker: i.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: i.bool,
  /**
   * If `true`, the week number will be display in the calendar.
   */
  displayWeekNumber: i.bool,
  /**
   * @default false
   */
  enableAccessibleFieldDOMStructure: i.any,
  /**
   * The day view will show as many weeks as needed after the end of the current month to match this value.
   * Put it to 6 to have a fixed number of weeks in Gregorian calendars
   */
  fixedWeekNumber: i.number,
  /**
   * Format of the date when rendered in the input(s).
   * Defaults to localized format based on the used `views`.
   */
  format: i.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: i.oneOf(["dense", "spacious"]),
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Pn,
  /**
   * The label content.
   */
  label: i.node,
  /**
   * If `true`, calls `renderLoading` instead of rendering the day calendar.
   * Can be used to preload information and show it in calendar.
   * @default false
   */
  loading: i.bool,
  /**
   * Locale for components texts.
   * Allows overriding texts coming from `LocalizationProvider` and `theme`.
   */
  localeText: i.object,
  /**
   * Maximal selectable date.
   * @default 2099-12-31
   */
  maxDate: i.object,
  /**
   * Maximal selectable moment of time with binding to date, to set max time in each day use `maxTime`.
   */
  maxDateTime: i.object,
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: i.object,
  /**
   * Minimal selectable date.
   * @default 1900-01-01
   */
  minDate: i.object,
  /**
   * Minimal selectable moment of time with binding to date, to set min time in each day use `minTime`.
   */
  minDateTime: i.object,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: i.object,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: i.number,
  /**
   * Months rendered per row.
   * @default 3
   */
  monthsPerRow: i.oneOf([3, 4]),
  /**
   * Name attribute used by the `input` element in the Field.
   */
  name: i.string,
  /**
   * Callback fired when the value is accepted.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The value that was just accepted.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onAccept: i.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: i.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see `open`).
   */
  onClose: i.func,
  /**
   * Callback fired when the error associated with the current value changes.
   * When a validation error is detected, the `error` parameter contains a non-null value.
   * This can be used to render an appropriate form error.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @param {TError} error The reason why the current value is not valid.
   * @param {TValue} value The value associated with the error.
   */
  onError: i.func,
  /**
   * Callback fired on month change.
   * @template TDate
   * @param {TDate} month The new month.
   */
  onMonthChange: i.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see `open`).
   */
  onOpen: i.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: i.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: i.func,
  /**
   * Callback fired on year change.
   * @template TDate
   * @param {TDate} year The new year.
   */
  onYearChange: i.func,
  /**
   * Control the popup or dialog open state.
   * @default false
   */
  open: i.bool,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: i.oneOf(["day", "hours", "meridiem", "minutes", "month", "seconds", "year"]),
  /**
   * Force rendering in particular orientation.
   */
  orientation: i.oneOf(["landscape", "portrait"]),
  readOnly: i.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: i.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.
   */
  referenceDate: i.object,
  /**
   * Component displaying when passed `loading` true.
   * @returns {React.ReactNode} The node to render when loading.
   * @default () => <span data-mui-test="loading-progress">...</span>
   */
  renderLoading: i.func,
  /**
   * The currently selected sections.
   * This prop accepts four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 3. If `"all"` is provided, all the sections will be selected.
   * 4. If `null` is provided, no section will be selected.
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: i.oneOfType([i.oneOf(["all", "day", "empty", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), i.number]),
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (for example when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: i.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: i.func,
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: i.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: i.func,
  /**
   * If `true`, days outside the current month are rendered:
   *
   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.
   *
   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.
   *
   * - ignored if `calendars` equals more than `1` on range pickers.
   * @default false
   */
  showDaysOutsideCurrentMonth: i.bool,
  /**
   * If `true`, disabled digital clock items will not be rendered.
   * @default false
   */
  skipDisabled: i.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: i.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Amount of time options below or at which the single column time renderer is used.
   * @default 24
   */
  thresholdToRenderTimeInASingleColumn: i.number,
  /**
   * The time steps between two time unit options.
   * For example, if `timeStep.minutes = 8`, then the available minute options will be `[0, 8, 16, 24, 32, 40, 48, 56]`.
   * When single column time renderer is used, only `timeStep.minutes` will be used.
   * @default{ hours: 1, minutes: 5, seconds: 5 }
   */
  timeSteps: i.shape({
    hours: i.number,
    minutes: i.number,
    seconds: i.number
  }),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: i.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: i.object,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: i.oneOf(["day", "hours", "meridiem", "minutes", "month", "seconds", "year"]),
  /**
   * Define custom view renderers for each section.
   * If `null`, the section will only have field editing.
   * If `undefined`, internally defined view will be used.
   */
  viewRenderers: i.shape({
    day: i.func,
    hours: i.func,
    meridiem: i.func,
    minutes: i.func,
    month: i.func,
    seconds: i.func,
    year: i.func
  }),
  /**
   * Available views.
   */
  views: i.arrayOf(i.oneOf(["day", "hours", "minutes", "month", "seconds", "year"]).isRequired),
  /**
   * Years are displayed in ascending (chronological) order by default.
   * If `desc`, years are displayed in descending order.
   * @default 'asc'
   */
  yearsOrder: i.oneOf(["asc", "desc"]),
  /**
   * Years rendered per row.
   * @default 4 on desktop, 3 on mobile
   */
  yearsPerRow: i.oneOf([3, 4])
};
var sY = (e10) => {
  const t = yU(e10), {
    forwardedProps: n,
    internalProps: o
  } = sh(t, "time");
  return rh({
    forwardedProps: n,
    internalProps: o,
    valueManager: ln,
    fieldValueManager: Jg,
    validator: _l,
    valueType: "time"
  });
};
var aY = ["slots", "slotProps", "InputProps", "inputProps"];
var yh = S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiTimeField"
  }), {
    slots: r,
    slotProps: s,
    InputProps: a,
    inputProps: l
  } = o, c = Xe(o, aY), u = o, d = (r == null ? void 0 : r.textField) ?? (t.enableAccessibleFieldDOMStructure ? Wd : _n), p = Pt({
    elementType: d,
    externalSlotProps: s == null ? void 0 : s.textField,
    externalForwardedProps: c,
    ownerState: u,
    additionalProps: {
      ref: n
    }
  });
  p.inputProps = V({}, l, p.inputProps), p.InputProps = V({}, a, p.InputProps);
  const m = sY(p), g = fh(m), b = ih(V({}, g, {
    slots: r,
    slotProps: s
  }));
  return f.jsx(d, V({}, b));
});
yh.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default utils.is12HourCycleInCurrentLocale()
   */
  ampm: i.bool,
  /**
   * If `true`, the `input` element is focused during the first mount.
   * @default false
   */
  autoFocus: i.bool,
  className: i.string,
  /**
   * If `true`, a clear button will be shown in the field allowing value clearing.
   * @default false
   */
  clearable: i.bool,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: i.oneOf(["error", "info", "primary", "secondary", "success", "warning"]),
  component: i.elementType,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: i.object,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: i.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: i.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: i.bool,
  /**
   * @default false
   */
  enableAccessibleFieldDOMStructure: i.bool,
  /**
   * If `true`, the component is displayed in focused state.
   */
  focused: i.bool,
  /**
   * Format of the date when rendered in the input(s).
   */
  format: i.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: i.oneOf(["dense", "spacious"]),
  /**
   * Props applied to the [`FormHelperText`](/material-ui/api/form-helper-text/) element.
   */
  FormHelperTextProps: i.object,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: i.bool,
  /**
   * The helper text content.
   */
  helperText: i.node,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: i.bool,
  /**
   * The id of the `input` element.
   * Use this prop to make `label` and `helperText` accessible for screen readers.
   */
  id: i.string,
  /**
   * Props applied to the [`InputLabel`](/material-ui/api/input-label/) element.
   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.
   */
  InputLabelProps: i.object,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: i.object,
  /**
   * Props applied to the Input element.
   * It will be a [`FilledInput`](/material-ui/api/filled-input/),
   * [`OutlinedInput`](/material-ui/api/outlined-input/) or [`Input`](/material-ui/api/input/)
   * component depending on the `variant` prop value.
   */
  InputProps: i.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Pn,
  /**
   * The label content.
   */
  label: i.node,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: i.oneOf(["dense", "none", "normal"]),
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: i.object,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: i.object,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: i.number,
  /**
   * Name attribute of the `input` element.
   */
  name: i.string,
  onBlur: i.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: i.func,
  /**
   * Callback fired when the clear button is clicked.
   */
  onClear: i.func,
  /**
   * Callback fired when the error associated with the current value changes.
   * When a validation error is detected, the `error` parameter contains a non-null value.
   * This can be used to render an appropriate form error.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @param {TError} error The reason why the current value is not valid.
   * @param {TValue} value The value associated with the error.
   */
  onError: i.func,
  onFocus: i.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: i.func,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   * @default false
   */
  readOnly: i.bool,
  /**
   * The date used to generate a part of the new value that is not present in the format when both `value` and `defaultValue` are empty.
   * For example, on time fields it will be used to determine the date to set.
   * @default The closest valid date using the validation props, except callbacks such as `shouldDisableDate`. Value is rounded to the most granular section used.
   */
  referenceDate: i.object,
  /**
   * If `true`, the label is displayed as required and the `input` element is required.
   * @default false
   */
  required: i.bool,
  /**
   * The currently selected sections.
   * This prop accepts four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 3. If `"all"` is provided, all the sections will be selected.
   * 4. If `null` is provided, no section will be selected.
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: i.oneOfType([i.oneOf(["all", "day", "empty", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), i.number]),
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: i.func,
  /**
   * If `true`, the format will respect the leading zeroes (e.g: on dayjs, the format `M/D/YYYY` will render `8/16/2018`)
   * If `false`, the format will always add leading zeroes (e.g: on dayjs, the format `M/D/YYYY` will render `08/16/2018`)
   *
   * Warning n°1: Luxon is not able to respect the leading zeroes when using macro tokens (e.g: "DD"), so `shouldRespectLeadingZeros={true}` might lead to inconsistencies when using `AdapterLuxon`.
   *
   * Warning n°2: When `shouldRespectLeadingZeros={true}`, the field will add an invisible character on the sections containing a single digit to make sure `onChange` is fired.
   * If you need to get the clean value from the input, you can remove this character using `input.value.replace(/\u200e/g, '')`.
   *
   * Warning n°3: When used in strict mode, dayjs and moment require to respect the leading zeros.
   * This mean that when using `shouldRespectLeadingZeros={false}`, if you retrieve the value directly from the input (not listening to `onChange`) and your format contains tokens without leading zeros, the value will not be parsed by your library.
   *
   * @default false
   */
  shouldRespectLeadingZeros: i.bool,
  /**
   * The size of the component.
   */
  size: i.oneOf(["medium", "small"]),
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: i.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: i.object,
  style: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: i.string,
  /**
   * The ref object used to imperatively interact with the field.
   */
  unstableFieldRef: i.oneOfType([i.func, i.object]),
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: i.object,
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: i.oneOf(["filled", "outlined", "standard"])
};
function lY(e10) {
  return Ot("MuiTimePickerToolbar", e10);
}
var Ba = At("MuiTimePickerToolbar", ["root", "separator", "hourMinuteLabel", "hourMinuteLabelLandscape", "hourMinuteLabelReverse", "ampmSelection", "ampmLandscape", "ampmLabel"]);
var cY = ["ampm", "ampmInClock", "value", "isLandscape", "onChange", "view", "onViewChange", "views", "disabled", "readOnly", "className"];
var uY = (e10) => {
  const {
    isLandscape: t,
    classes: n,
    isRtl: o
  } = e10;
  return Tt({
    root: ["root"],
    separator: ["separator"],
    hourMinuteLabel: ["hourMinuteLabel", t && "hourMinuteLabelLandscape", o && "hourMinuteLabelReverse"],
    ampmSelection: ["ampmSelection", t && "ampmLandscape"],
    ampmLabel: ["ampmLabel"]
  }, lY, n);
};
var dY = K(Qg, {
  name: "MuiTimePickerToolbar",
  slot: "Root",
  overridesResolver: (e10, t) => t.root
})({});
var pY = K(bh, {
  name: "MuiTimePickerToolbar",
  slot: "Separator",
  overridesResolver: (e10, t) => t.separator
})({
  outline: 0,
  margin: "0 4px 0 2px",
  cursor: "default"
});
var fY = K("div", {
  name: "MuiTimePickerToolbar",
  slot: "HourMinuteLabel",
  overridesResolver: (e10, t) => [{
    [`&.${Ba.hourMinuteLabelLandscape}`]: t.hourMinuteLabelLandscape,
    [`&.${Ba.hourMinuteLabelReverse}`]: t.hourMinuteLabelReverse
  }, t.hourMinuteLabel]
})({
  display: "flex",
  justifyContent: "flex-end",
  alignItems: "flex-end",
  variants: [{
    props: {
      isRtl: true
    },
    style: {
      flexDirection: "row-reverse"
    }
  }, {
    props: {
      isLandscape: true
    },
    style: {
      marginTop: "auto"
    }
  }]
});
var mY = K("div", {
  name: "MuiTimePickerToolbar",
  slot: "AmPmSelection",
  overridesResolver: (e10, t) => [{
    [`.${Ba.ampmLabel}`]: t.ampmLabel
  }, {
    [`&.${Ba.ampmLandscape}`]: t.ampmLandscape
  }, t.ampmSelection]
})({
  display: "flex",
  flexDirection: "column",
  marginRight: "auto",
  marginLeft: 12,
  [`& .${Ba.ampmLabel}`]: {
    fontSize: 17
  },
  variants: [{
    props: {
      isLandscape: true
    },
    style: {
      margin: "4px 0 auto",
      flexDirection: "row",
      justifyContent: "space-around",
      flexBasis: "100%"
    }
  }]
});
function aT(e10) {
  const t = at({
    props: e10,
    name: "MuiTimePickerToolbar"
  }), {
    ampm: n,
    ampmInClock: o,
    value: r,
    isLandscape: s,
    onChange: a,
    view: l,
    onViewChange: c,
    views: u,
    disabled: d,
    readOnly: p,
    className: m
  } = t, g = Xe(t, cY), b = gt(), v = gn(), h = mo(), y = !!(n && !o && u.includes("hours")), {
    meridiemMode: C,
    handleMeridiemChange: x
  } = Hd(r, n, a), T = (O) => n ? b.format(O, "hours12h") : b.format(O, "hours24h"), w = V({}, t, {
    isRtl: h
  }), R = uY(w), E = f.jsx(pY, {
    tabIndex: -1,
    value: ":",
    variant: "h3",
    selected: false,
    className: R.separator
  });
  return f.jsxs(dY, V({
    landscapeDirection: "row",
    toolbarTitle: v.timePickerToolbarTitle,
    isLandscape: s,
    ownerState: w,
    className: be(R.root, m)
  }, g, {
    children: [f.jsxs(fY, {
      className: R.hourMinuteLabel,
      ownerState: w,
      children: [us(u, "hours") && f.jsx(Qn, {
        tabIndex: -1,
        variant: "h3",
        onClick: () => c("hours"),
        selected: l === "hours",
        value: r ? T(r) : "--"
      }), us(u, ["hours", "minutes"]) && E, us(u, "minutes") && f.jsx(Qn, {
        tabIndex: -1,
        variant: "h3",
        onClick: () => c("minutes"),
        selected: l === "minutes",
        value: r ? b.format(r, "minutes") : "--"
      }), us(u, ["minutes", "seconds"]) && E, us(u, "seconds") && f.jsx(Qn, {
        variant: "h3",
        onClick: () => c("seconds"),
        selected: l === "seconds",
        value: r ? b.format(r, "seconds") : "--"
      })]
    }), y && f.jsxs(mY, {
      className: R.ampmSelection,
      ownerState: w,
      children: [f.jsx(Qn, {
        disableRipple: true,
        variant: "subtitle2",
        selected: C === "am",
        typographyClassName: R.ampmLabel,
        value: No(b, "am"),
        onClick: p ? void 0 : () => x("am"),
        disabled: d
      }), f.jsx(Qn, {
        disableRipple: true,
        variant: "subtitle2",
        selected: C === "pm",
        typographyClassName: R.ampmLabel,
        value: No(b, "pm"),
        onClick: p ? void 0 : () => x("pm"),
        disabled: d
      })]
    })]
  }));
}
aT.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  ampm: i.bool,
  ampmInClock: i.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: i.object,
  className: i.string,
  disabled: i.bool,
  /**
   * If `true`, show the toolbar even in desktop mode.
   * @default `true` for Desktop, `false` for Mobile.
   */
  hidden: i.bool,
  isLandscape: i.bool.isRequired,
  onChange: i.func.isRequired,
  /**
   * Callback called when a toolbar is clicked
   * @template TView
   * @param {TView} view The view to open
   */
  onViewChange: i.func.isRequired,
  readOnly: i.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  titleId: i.string,
  /**
   * Toolbar date format.
   */
  toolbarFormat: i.string,
  /**
   * Toolbar value placeholder—it is displayed when the value is empty.
   * @default "––"
   */
  toolbarPlaceholder: i.node,
  value: i.object,
  /**
   * Currently visible picker view.
   */
  view: i.oneOf(["hours", "meridiem", "minutes", "seconds"]).isRequired,
  /**
   * Available views.
   */
  views: i.arrayOf(i.oneOf(["hours", "meridiem", "minutes", "seconds"]).isRequired).isRequired
};
function lT(e10, t) {
  var a;
  const n = gt(), o = at({
    props: e10,
    name: t
  }), r = o.ampm ?? n.is12HourCycleInCurrentLocale(), s = S.useMemo(() => {
    var l;
    return ((l = o.localeText) == null ? void 0 : l.toolbarTitle) == null ? o.localeText : V({}, o.localeText, {
      timePickerToolbarTitle: o.localeText.toolbarTitle
    });
  }, [o.localeText]);
  return V({}, o, {
    ampm: r,
    localeText: s
  }, Gg({
    views: o.views,
    openTo: o.openTo,
    defaultViews: ["hours", "minutes"],
    defaultOpenTo: "hours"
  }), {
    disableFuture: o.disableFuture ?? false,
    disablePast: o.disablePast ?? false,
    slots: V({
      toolbar: aT
    }, o.slots),
    slotProps: V({}, o.slotProps, {
      toolbar: V({
        ampm: r,
        ampmInClock: o.ampmInClock
      }, (a = o.slotProps) == null ? void 0 : a.toolbar)
    })
  });
}
var cT = S.forwardRef(function(t, n) {
  var y, C, x, T;
  const o = gn(), r = gt(), s = lT(t, "MuiDesktopTimePicker"), {
    shouldRenderTimeInASingleColumn: a,
    views: l,
    timeSteps: c
  } = Y1(s), u = a ? nT : bu, d = V({
    hours: u,
    minutes: u,
    seconds: u,
    meridiem: u
  }, s.viewRenderers), p = s.ampmInClock ?? true, m = a ? [] : ["accept"], b = ((y = d.hours) == null ? void 0 : y.name) === bu.name ? l : l.filter((w) => w !== "meridiem"), v = V({}, s, {
    ampmInClock: p,
    timeSteps: c,
    viewRenderers: d,
    format: fu(r, s),
    // Setting only `hours` time view in case of single column time picker
    // Allows for easy view lifecycle management
    views: a ? ["hours"] : b,
    slots: V({
      field: yh,
      openPickerIcon: QG
    }, s.slots),
    slotProps: V({}, s.slotProps, {
      field: (w) => {
        var R;
        return V({}, ti((R = s.slotProps) == null ? void 0 : R.field, w), Qs(s), {
          ref: n
        });
      },
      toolbar: V({
        hidden: true,
        ampmInClock: p
      }, (C = s.slotProps) == null ? void 0 : C.toolbar),
      actionBar: V({
        actions: m
      }, (x = s.slotProps) == null ? void 0 : x.actionBar)
    })
  }), {
    renderPicker: h
  } = oh({
    props: v,
    valueManager: ln,
    valueType: "time",
    getOpenDialogAriaText: Js({
      utils: r,
      formatKey: "fullTime",
      contextTranslation: o.openTimePickerDialogue,
      propsTranslation: (T = v.localeText) == null ? void 0 : T.openTimePickerDialogue
    }),
    validator: _l
  });
  return h();
});
cT.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default utils.is12HourCycleInCurrentLocale()
   */
  ampm: i.bool,
  /**
   * Display ampm controls under the clock (instead of in the toolbar).
   * @default true on desktop, false on mobile
   */
  ampmInClock: i.bool,
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: i.bool,
  className: i.string,
  /**
   * If `true`, the popover or modal will close after submitting the full date.
   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).
   */
  closeOnSelect: i.bool,
  /**
   * The default value.
   * Used when the component is not controlled.
   */
  defaultValue: i.object,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: i.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: i.bool,
  /**
   * If `true`, the open picker button will not be rendered (renders only the field).
   * @default false
   */
  disableOpenPicker: i.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: i.bool,
  /**
   * @default false
   */
  enableAccessibleFieldDOMStructure: i.any,
  /**
   * Format of the date when rendered in the input(s).
   * Defaults to localized format based on the used `views`.
   */
  format: i.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: i.oneOf(["dense", "spacious"]),
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Pn,
  /**
   * The label content.
   */
  label: i.node,
  /**
   * Locale for components texts.
   * Allows overriding texts coming from `LocalizationProvider` and `theme`.
   */
  localeText: i.object,
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: i.object,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: i.object,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: i.number,
  /**
   * Name attribute used by the `input` element in the Field.
   */
  name: i.string,
  /**
   * Callback fired when the value is accepted.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The value that was just accepted.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onAccept: i.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: i.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see `open`).
   */
  onClose: i.func,
  /**
   * Callback fired when the error associated with the current value changes.
   * When a validation error is detected, the `error` parameter contains a non-null value.
   * This can be used to render an appropriate form error.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @param {TError} error The reason why the current value is not valid.
   * @param {TValue} value The value associated with the error.
   */
  onError: i.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see `open`).
   */
  onOpen: i.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: i.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: i.func,
  /**
   * Control the popup or dialog open state.
   * @default false
   */
  open: i.bool,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: i.oneOf(["hours", "meridiem", "minutes", "seconds"]),
  /**
   * Force rendering in particular orientation.
   */
  orientation: i.oneOf(["landscape", "portrait"]),
  readOnly: i.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: i.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.
   */
  referenceDate: i.object,
  /**
   * The currently selected sections.
   * This prop accepts four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 3. If `"all"` is provided, all the sections will be selected.
   * 4. If `null` is provided, no section will be selected.
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: i.oneOfType([i.oneOf(["all", "day", "empty", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), i.number]),
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: i.func,
  /**
   * If `true`, disabled digital clock items will not be rendered.
   * @default false
   */
  skipDisabled: i.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: i.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Amount of time options below or at which the single column time renderer is used.
   * @default 24
   */
  thresholdToRenderTimeInASingleColumn: i.number,
  /**
   * The time steps between two time unit options.
   * For example, if `timeStep.minutes = 8`, then the available minute options will be `[0, 8, 16, 24, 32, 40, 48, 56]`.
   * When single column time renderer is used, only `timeStep.minutes` will be used.
   * @default{ hours: 1, minutes: 5, seconds: 5 }
   */
  timeSteps: i.shape({
    hours: i.number,
    minutes: i.number,
    seconds: i.number
  }),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: i.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: i.object,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: i.oneOf(["hours", "meridiem", "minutes", "seconds"]),
  /**
   * Define custom view renderers for each section.
   * If `null`, the section will only have field editing.
   * If `undefined`, internally defined view will be used.
   */
  viewRenderers: i.shape({
    hours: i.func,
    meridiem: i.func,
    minutes: i.func,
    seconds: i.func
  }),
  /**
   * Available views.
   */
  views: i.arrayOf(i.oneOf(["hours", "minutes", "seconds"]).isRequired)
};
var uT = S.forwardRef(function(t, n) {
  var d, p;
  const o = gn(), r = gt(), s = lT(t, "MuiMobileTimePicker"), a = V({
    hours: Ss,
    minutes: Ss,
    seconds: Ss
  }, s.viewRenderers), l = s.ampmInClock ?? false, c = V({}, s, {
    ampmInClock: l,
    viewRenderers: a,
    format: fu(r, s),
    slots: V({
      field: yh
    }, s.slots),
    slotProps: V({}, s.slotProps, {
      field: (m) => {
        var g;
        return V({}, ti((g = s.slotProps) == null ? void 0 : g.field, m), Qs(s), {
          ref: n
        });
      },
      toolbar: V({
        hidden: false,
        ampmInClock: l
      }, (d = s.slotProps) == null ? void 0 : d.toolbar)
    })
  }), {
    renderPicker: u
  } = gh({
    props: c,
    valueManager: ln,
    valueType: "time",
    getOpenDialogAriaText: Js({
      utils: r,
      formatKey: "fullTime",
      contextTranslation: o.openTimePickerDialogue,
      propsTranslation: (p = c.localeText) == null ? void 0 : p.openTimePickerDialogue
    }),
    validator: _l
  });
  return u();
});
uT.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default utils.is12HourCycleInCurrentLocale()
   */
  ampm: i.bool,
  /**
   * Display ampm controls under the clock (instead of in the toolbar).
   * @default true on desktop, false on mobile
   */
  ampmInClock: i.bool,
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: i.bool,
  className: i.string,
  /**
   * If `true`, the popover or modal will close after submitting the full date.
   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).
   */
  closeOnSelect: i.bool,
  /**
   * The default value.
   * Used when the component is not controlled.
   */
  defaultValue: i.object,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: i.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: i.bool,
  /**
   * If `true`, the open picker button will not be rendered (renders only the field).
   * @default false
   */
  disableOpenPicker: i.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: i.bool,
  /**
   * @default false
   */
  enableAccessibleFieldDOMStructure: i.any,
  /**
   * Format of the date when rendered in the input(s).
   * Defaults to localized format based on the used `views`.
   */
  format: i.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: i.oneOf(["dense", "spacious"]),
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Pn,
  /**
   * The label content.
   */
  label: i.node,
  /**
   * Locale for components texts.
   * Allows overriding texts coming from `LocalizationProvider` and `theme`.
   */
  localeText: i.object,
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: i.object,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: i.object,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: i.number,
  /**
   * Name attribute used by the `input` element in the Field.
   */
  name: i.string,
  /**
   * Callback fired when the value is accepted.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The value that was just accepted.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onAccept: i.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: i.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see `open`).
   */
  onClose: i.func,
  /**
   * Callback fired when the error associated with the current value changes.
   * When a validation error is detected, the `error` parameter contains a non-null value.
   * This can be used to render an appropriate form error.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @param {TError} error The reason why the current value is not valid.
   * @param {TValue} value The value associated with the error.
   */
  onError: i.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see `open`).
   */
  onOpen: i.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: i.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: i.func,
  /**
   * Control the popup or dialog open state.
   * @default false
   */
  open: i.bool,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: i.oneOf(["hours", "minutes", "seconds"]),
  /**
   * Force rendering in particular orientation.
   */
  orientation: i.oneOf(["landscape", "portrait"]),
  readOnly: i.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: i.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.
   */
  referenceDate: i.object,
  /**
   * The currently selected sections.
   * This prop accepts four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 3. If `"all"` is provided, all the sections will be selected.
   * 4. If `null` is provided, no section will be selected.
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: i.oneOfType([i.oneOf(["all", "day", "empty", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), i.number]),
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: i.func,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: i.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: i.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: i.object,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: i.oneOf(["hours", "minutes", "seconds"]),
  /**
   * Define custom view renderers for each section.
   * If `null`, the section will only have field editing.
   * If `undefined`, internally defined view will be used.
   */
  viewRenderers: i.shape({
    hours: i.func,
    minutes: i.func,
    seconds: i.func
  }),
  /**
   * Available views.
   */
  views: i.arrayOf(i.oneOf(["hours", "minutes", "seconds"]).isRequired)
};
var gY = ["desktopModeMediaQuery"];
var dT = S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiTimePicker"
  }), {
    desktopModeMediaQuery: r = eh
  } = o, s = Xe(o, gY);
  return Yr(r, {
    defaultMatches: true
  }) ? f.jsx(cT, V({
    ref: n
  }, s)) : f.jsx(uT, V({
    ref: n
  }, s));
});
dT.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default utils.is12HourCycleInCurrentLocale()
   */
  ampm: i.bool,
  /**
   * Display ampm controls under the clock (instead of in the toolbar).
   * @default true on desktop, false on mobile
   */
  ampmInClock: i.bool,
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: i.bool,
  className: i.string,
  /**
   * If `true`, the popover or modal will close after submitting the full date.
   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).
   */
  closeOnSelect: i.bool,
  /**
   * The default value.
   * Used when the component is not controlled.
   */
  defaultValue: i.object,
  /**
   * CSS media query when `Mobile` mode will be changed to `Desktop`.
   * @default '@media (pointer: fine)'
   * @example '@media (min-width: 720px)' or theme.breakpoints.up("sm")
   */
  desktopModeMediaQuery: i.string,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: i.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: i.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: i.bool,
  /**
   * If `true`, the open picker button will not be rendered (renders only the field).
   * @default false
   */
  disableOpenPicker: i.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: i.bool,
  /**
   * @default false
   */
  enableAccessibleFieldDOMStructure: i.any,
  /**
   * Format of the date when rendered in the input(s).
   * Defaults to localized format based on the used `views`.
   */
  format: i.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: i.oneOf(["dense", "spacious"]),
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Pn,
  /**
   * The label content.
   */
  label: i.node,
  /**
   * Locale for components texts.
   * Allows overriding texts coming from `LocalizationProvider` and `theme`.
   */
  localeText: i.object,
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: i.object,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: i.object,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: i.number,
  /**
   * Name attribute used by the `input` element in the Field.
   */
  name: i.string,
  /**
   * Callback fired when the value is accepted.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The value that was just accepted.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onAccept: i.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: i.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see `open`).
   */
  onClose: i.func,
  /**
   * Callback fired when the error associated with the current value changes.
   * When a validation error is detected, the `error` parameter contains a non-null value.
   * This can be used to render an appropriate form error.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @param {TError} error The reason why the current value is not valid.
   * @param {TValue} value The value associated with the error.
   */
  onError: i.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see `open`).
   */
  onOpen: i.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: i.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: i.func,
  /**
   * Control the popup or dialog open state.
   * @default false
   */
  open: i.bool,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: i.oneOf(["hours", "meridiem", "minutes", "seconds"]),
  /**
   * Force rendering in particular orientation.
   */
  orientation: i.oneOf(["landscape", "portrait"]),
  readOnly: i.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: i.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.
   */
  referenceDate: i.object,
  /**
   * The currently selected sections.
   * This prop accepts four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 3. If `"all"` is provided, all the sections will be selected.
   * 4. If `null` is provided, no section will be selected.
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: i.oneOfType([i.oneOf(["all", "day", "empty", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), i.number]),
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: i.func,
  /**
   * If `true`, disabled digital clock items will not be rendered.
   * @default false
   */
  skipDisabled: i.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: i.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: i.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: i.oneOfType([i.arrayOf(i.oneOfType([i.func, i.object, i.bool])), i.func, i.object]),
  /**
   * Amount of time options below or at which the single column time renderer is used.
   * @default 24
   */
  thresholdToRenderTimeInASingleColumn: i.number,
  /**
   * The time steps between two time unit options.
   * For example, if `timeStep.minutes = 8`, then the available minute options will be `[0, 8, 16, 24, 32, 40, 48, 56]`.
   * When single column time renderer is used, only `timeStep.minutes` will be used.
   * @default{ hours: 1, minutes: 5, seconds: 5 }
   */
  timeSteps: i.shape({
    hours: i.number,
    minutes: i.number,
    seconds: i.number
  }),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: i.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: i.object,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: i.oneOf(["hours", "meridiem", "minutes", "seconds"]),
  /**
   * Define custom view renderers for each section.
   * If `null`, the section will only have field editing.
   * If `undefined`, internally defined view will be used.
   */
  viewRenderers: i.shape({
    hours: i.func,
    meridiem: i.func,
    minutes: i.func,
    seconds: i.func
  }),
  /**
   * Available views.
   */
  views: i.arrayOf(i.oneOf(["hours", "minutes", "seconds"]).isRequired)
};
var ws = (e10) => {
  var t, n, o, r;
  return (r = (t = e10.id) !== null && t !== void 0 ? t : (o = (n = e10.accessorKey) === null || n === void 0 ? void 0 : n.toString) === null || o === void 0 ? void 0 : o.call(n)) !== null && r !== void 0 ? r : e10.header;
};
var vu = (e10) => {
  const t = [], n = (o) => {
    o.forEach((r) => {
      r.columns ? n(r.columns) : t.push(r);
    });
  };
  return n(e10), t;
};
var pT = ({ columnDefs: e10, tableOptions: t }) => {
  const { aggregationFns: n = {}, defaultDisplayColumn: o, filterFns: r = {}, sortingFns: s = {}, state: { columnFilterFns: a = {} } = {} } = t;
  return e10.map((l) => {
    var c, u;
    if (l.id || (l.id = ws(l)), l.columnDefType || (l.columnDefType = "data"), !((c = l.columns) === null || c === void 0) && c.length)
      l.columnDefType = "group", l.columns = pT({
        columnDefs: l.columns,
        tableOptions: t
      });
    else if (l.columnDefType === "data") {
      if (Array.isArray(l.aggregationFn)) {
        const d = l.aggregationFn;
        l.aggregationFn = (p, m, g) => d.map((b) => {
          var v;
          return (v = n[b]) === null || v === void 0 ? void 0 : v.call(n, p, m, g);
        });
      }
      Object.keys(r).includes(a[l.id]) && (l.filterFn = (u = r[a[l.id]]) !== null && u !== void 0 ? u : r.fuzzy, l._filterFn = a[l.id]), Object.keys(s).includes(l.sortingFn) && (l.sortingFn = s[l.sortingFn]);
    } else l.columnDefType === "display" && (l = Object.assign(Object.assign({}, o), l));
    return l;
  });
};
var fT = (e10, t, n) => {
  e10.getCanPin() && e10.pin(t.getIsPinned());
  const o = [...n];
  return o.splice(o.indexOf(t.id), 0, o.splice(o.indexOf(e10.id), 1)[0]), o;
};
var hY = (e10) => {
  const { filterVariant: t } = e10;
  return t === "multi-select" ? "arrIncludesSome" : t != null && t.includes("range") ? "betweenInclusive" : t === "select" || t === "checkbox" ? "equals" : "fuzzy";
};
var Ud = ({ header: e10, table: t }) => {
  var n;
  const { options: { columnFilterModeOptions: o } } = t, { column: r } = e10, { columnDef: s } = r, { filterVariant: a } = s, l = !!(a != null && a.startsWith("date") || a != null && a.startsWith("time")), c = a === "autocomplete", u = (a == null ? void 0 : a.includes("range")) || ["between", "betweenInclusive", "inNumberRange"].includes(s._filterFn), d = a === "select", p = a === "multi-select", m = ["autocomplete", "text"].includes(a) || !d && !p, g = s._filterFn, b = (n = s == null ? void 0 : s.columnFilterModeOptions) !== null && n !== void 0 ? n : o, v = r.getFacetedUniqueValues();
  return {
    allowedColumnFilterOptions: b,
    currentFilterOption: g,
    facetedUniqueValues: v,
    isAutocompleteFilter: c,
    isDateFilter: l,
    isMultiSelectFilter: p,
    isRangeFilter: u,
    isSelectFilter: d,
    isTextboxFilter: m
  };
};
var mT = ({ header: e10, table: t }) => {
  const { column: n } = e10, { columnDef: o } = n, { facetedUniqueValues: r, isAutocompleteFilter: s, isMultiSelectFilter: a, isSelectFilter: l } = Ud({ header: e10, table: t });
  return (0, import_react.useMemo)(() => {
    var c;
    return (c = o.filterSelectOptions) !== null && c !== void 0 ? c : (l || a || s) && r ? Array.from(r.keys()).filter((u) => u != null).sort((u, d) => u.localeCompare(d)) : void 0;
  }, [
    o.filterSelectOptions,
    r,
    a,
    l
  ]);
};
var bY = (e10, t, n = -1, o = 0, r, s) => $l(e10, "mrt-row-create", Object.assign({}, ...vu(e10.options.columns).map((a) => ({
  [ws(a)]: ""
}))), n, o, r, s);
var vY = (e10, t, n) => {
  let o = 0;
  return e10.columnFiltersMeta[n] && (o = XH(e10.columnFiltersMeta[n], t.columnFiltersMeta[n])), o === 0 ? vi.alphanumeric(e10, t, n) : o;
};
var yY = Object.assign(Object.assign({}, vi), { fuzzy: vY });
var xY = (e10, t) => Math.max(...Object.values(t.columnFiltersMeta).map((n) => n.rank)) - Math.max(...Object.values(e10.columnFiltersMeta).map((n) => n.rank));
var Ie = (e10, t) => e10 instanceof Function ? e10(t) : e10;
var vr = (e10) => {
  var t, n;
  let o = "", r = "";
  return e10 && (typeof e10 != "object" ? (o = e10, r = e10) : (o = (t = e10.label) !== null && t !== void 0 ? t : e10.value, r = (n = e10.value) !== null && n !== void 0 ? n : o)), { label: o, value: r };
};
var gT = (e10, t) => {
  const { getCenterRows: n, getPrePaginationRowModel: o, getRowModel: r, getState: s, getTopRows: a, options: { createDisplayMode: l, enablePagination: c, enableRowPinning: u, manualPagination: d, positionCreatingRow: p, rowPinningDisplayMode: m } } = e10, { creatingRow: g, pagination: b } = s(), v = CY(e10);
  let h = [];
  if (!v)
    h = !u || m != null && m.includes("sticky") ? t ? o().rows : r().rows : n();
  else {
    if (h = o().rows.sort((y, C) => xY(y, C)), c && !d && !t) {
      const y = b.pageIndex * b.pageSize;
      h = h.slice(y, y + b.pageSize);
    }
    u && !(m != null && m.includes("sticky")) && (h = h.filter((y) => !y.getIsPinned()));
  }
  if (u && (m != null && m.includes("sticky"))) {
    const y = h.filter((C) => C.getIsPinned()).map((C) => C.id);
    h = [
      ...a().filter((C) => !y.includes(C.id)),
      ...h
    ];
  }
  if (p !== void 0 && g && l === "row") {
    const y = isNaN(+p) ? p === "top" ? 0 : h.length : +p;
    h = [
      ...h.slice(0, y),
      g,
      ...h.slice(y)
    ];
  }
  return h;
};
var hT = (e10) => {
  const { getState: t, options: { enableGlobalFilterRankedResults: n, manualExpanding: o, manualFiltering: r, manualGrouping: s, manualSorting: a } } = e10, { expanded: l, globalFilterFn: c } = t();
  return !o && !r && !s && !a && n && c === "fuzzy" && l !== true && !Object.values(l).some(Boolean);
};
var CY = (e10) => {
  const { globalFilter: t, sorting: n } = e10.getState();
  return hT(e10) && t && !Object.values(n).some(Boolean);
};
var yu = ({ row: e10, table: t }) => {
  const { options: { enableRowSelection: n } } = t;
  return e10.getIsSelected() || Ie(n, e10) && e10.getCanSelectSubRows() && e10.getIsAllSubRowsSelected();
};
var bT = ({ row: e10, staticRowIndex: t = 0, table: n }) => (o, r) => {
  var s;
  const { getState: a, options: { enableBatchRowSelection: l, enableMultiRowSelection: c, enableRowPinning: u, manualPagination: d, rowPinningDisplayMode: p }, refs: { lastSelectedRowId: m } } = n, { pagination: { pageIndex: g, pageSize: b } } = a(), v = d ? 0 : b * g, h = yu({ row: e10, table: n });
  e10.toggleSelected(r ?? !h);
  const y = /* @__PURE__ */ new Set([e10.id]);
  if (l && c && o.nativeEvent.shiftKey && m.current !== null) {
    const C = gT(n, true), x = C.findIndex((T) => T.id === m.current);
    if (x !== -1) {
      const T = yu({
        row: C == null ? void 0 : C[x],
        table: n
      }), w = t + v, [R, E] = x < w ? [x, w] : [w, x];
      if (h !== T)
        for (let O = R; O <= E; O++)
          C[O].toggleSelected(!h), y.add(C[O].id);
    }
  }
  m.current = e10.id, e10.getCanSelectSubRows() && e10.getIsAllSubRowsSelected() && ((s = e10.subRows) === null || s === void 0 || s.forEach((C) => C.toggleSelected(false))), u && (p != null && p.includes("select")) && y.forEach((C) => {
    n.getRow(C).pin(h ? false : p != null && p.includes("bottom") ? "bottom" : "top");
  });
};
var xh = ({ table: e10 }) => (t, n, o) => {
  const { options: { enableRowPinning: r, rowPinningDisplayMode: s, selectAllMode: a }, refs: { lastSelectedRowId: l } } = e10;
  a === "all" || o ? e10.toggleAllRowsSelected(n ?? t.target.checked) : e10.toggleAllPageRowsSelected(n ?? t.target.checked), r && (s != null && s.includes("select")) && e10.setRowPinning({ bottom: [], top: [] }), l.current = null;
};
var yc = (e10) => e10.ctrlKey && navigator.platform.toLowerCase().includes("win") || e10.metaKey && navigator.platform.toLowerCase().includes("mac");
var vT = ({ cell: e10, table: t }) => {
  const { enableEditing: n } = t.options, { column: { columnDef: o }, row: r } = e10;
  return !e10.getIsPlaceholder() && Ie(n, r) && Ie(o.enableEditing, r) !== false;
};
var yT = ({ cell: e10, table: t }) => {
  const { options: { editDisplayMode: n }, refs: { editInputRefs: o } } = t, { column: r } = e10;
  vT({ cell: e10, table: t }) && n === "cell" && (t.setEditingCell(e10), queueMicrotask(() => {
    var s;
    const a = o.current[r.id];
    a && (a.focus(), (s = a.select) === null || s === void 0 || s.call(a));
  }));
};
var Ch = ({ cell: e10, cellElements: t, cellValue: n, containerElement: o, event: r, header: s, parentElement: a, table: l }) => {
  var c, u, d, p, m, g, b, v;
  if (!l.options.enableKeyboardShortcuts)
    return;
  const h = r.currentTarget;
  if (n && yc(r) && r.key === "c")
    navigator.clipboard.writeText(n);
  else if (["Enter", " "].includes(r.key))
    if (((c = e10 == null ? void 0 : e10.column) === null || c === void 0 ? void 0 : c.id) === "mrt-row-select")
      r.preventDefault(), bT({
        row: e10.row,
        table: l,
        //@ts-ignore
        staticRowIndex: +r.target.getAttribute("data-index")
      })(r);
    else if (((u = s == null ? void 0 : s.column) === null || u === void 0 ? void 0 : u.id) === "mrt-row-select" && l.options.enableSelectAll)
      r.preventDefault(), xh({
        table: l
      })(r);
    else if (((d = e10 == null ? void 0 : e10.column) === null || d === void 0 ? void 0 : d.id) === "mrt-row-expand" && (e10.row.getCanExpand() || !((m = (p = l.options).renderDetailPanel) === null || m === void 0) && m.call(p, { row: e10.row, table: l })))
      r.preventDefault(), e10.row.toggleExpanded();
    else if (((g = s == null ? void 0 : s.column) === null || g === void 0 ? void 0 : g.id) === "mrt-row-expand" && l.options.enableExpandAll)
      r.preventDefault(), l.toggleAllRowsExpanded();
    else if ((e10 == null ? void 0 : e10.column.id) === "mrt-row-pin")
      r.preventDefault(), e10.row.getIsPinned() ? e10.row.pin(false) : e10.row.pin(!((b = l.options.rowPinningDisplayMode) === null || b === void 0) && b.includes("bottom") ? "bottom" : "top");
    else if (s && yc(r)) {
      const y = h.querySelector(`button[aria-label="${l.options.localization.columnActions}"]`);
      y && y.click();
    } else !((v = s == null ? void 0 : s.column) === null || v === void 0) && v.getCanSort() && (r.preventDefault(), s.column.toggleSorting());
  else if ([
    "ArrowRight",
    "ArrowLeft",
    "ArrowUp",
    "ArrowDown",
    "Home",
    "End",
    "PageUp",
    "PageDown"
  ].includes(r.key)) {
    r.preventDefault();
    const y = a || h.closest("tr"), C = o || h.closest("table"), x = t || Array.from((C == null ? void 0 : C.querySelectorAll("th, td")) || []), T = x.indexOf(h), w = parseInt(h.getAttribute("data-index") || "0");
    let R;
    const E = (P, A) => {
      var M;
      const F = P === "c" ? y : P === "f" ? C == null ? void 0 : C.querySelector("tr") : (M = C == null ? void 0 : C.lastElementChild) === null || M === void 0 ? void 0 : M.lastElementChild, D = Array.from((F == null ? void 0 : F.children) || []);
      return A === "f" ? D[0] : D[D.length - 1];
    }, O = (P, A) => {
      var M;
      const F = A === "t" ? C == null ? void 0 : C.querySelector("tr") : (M = C == null ? void 0 : C.lastElementChild) === null || M === void 0 ? void 0 : M.lastElementChild;
      return Array.from((F == null ? void 0 : F.children) || [])[P];
    }, I = (P, A) => (A === "f" ? x.slice(T + 1) : x.slice(0, T).reverse()).find((F) => F.matches(`[data-index="${P}"]`));
    switch (r.key) {
      case "ArrowRight":
        R = I(w + 1, "f");
        break;
      case "ArrowLeft":
        R = I(w - 1, "b");
        break;
      case "ArrowUp":
        R = I(w, "b");
        break;
      case "ArrowDown":
        R = I(w, "f");
        break;
      case "Home":
        R = E(yc(r) ? "f" : "c", "f");
        break;
      case "End":
        R = E(yc(r) ? "l" : "c", "l");
        break;
      case "PageUp":
        R = O(w, "t");
        break;
      case "PageDown":
        R = O(w, "b");
        break;
    }
    R && R.focus();
  }
};
function Zi({ header: e10, id: t, size: n, tableOptions: o }) {
  const { defaultDisplayColumn: r, displayColumnDefOptions: s, localization: a } = o;
  return Object.assign(Object.assign(Object.assign(Object.assign({}, r), { header: e10 ? a[e10] : "", size: n }), s == null ? void 0 : s[t]), { id: t });
}
var xT = (e10) => {
  const { enableRowPinning: t, rowPinningDisplayMode: n } = e10;
  return !!(t && !(n != null && n.startsWith("select")));
};
var CT = (e10) => {
  const { enableRowDragging: t, enableRowOrdering: n } = e10;
  return !!(t || n);
};
var Sh = (e10) => {
  const { enableExpanding: t, enableGrouping: n, renderDetailPanel: o, state: { grouping: r } } = e10;
  return !!(t || n && (r != null && r.length) || o);
};
var wh = (e10) => {
  const { createDisplayMode: t, editDisplayMode: n, enableEditing: o, enableRowActions: r, state: { creatingRow: s } } = e10;
  return !!(r || s && t === "row" || o && ["modal", "row"].includes(n ?? ""));
};
var ST = (e10) => !!e10.enableRowSelection;
var wT = (e10) => !!e10.enableRowNumbers;
var TT = (e10) => e10.layoutMode === "grid-no-grow";
var SY = (e10) => [
  xT(e10) && "mrt-row-pin",
  CT(e10) && "mrt-row-drag",
  e10.positionActionsColumn === "first" && wh(e10) && "mrt-row-actions",
  e10.positionExpandColumn === "first" && Sh(e10) && "mrt-row-expand",
  ST(e10) && "mrt-row-select",
  wT(e10) && "mrt-row-numbers"
].filter(Boolean);
var wY = (e10) => [
  e10.positionActionsColumn === "last" && wh(e10) && "mrt-row-actions",
  e10.positionExpandColumn === "last" && Sh(e10) && "mrt-row-expand",
  TT(e10) && "mrt-row-spacer"
].filter(Boolean);
var Th = (e10, t = false) => {
  const { state: { columnOrder: n = [] } } = e10, o = SY(e10), r = wY(e10), s = vu(e10.columns).map((l) => ws(l));
  let a = t ? s : Array.from(/* @__PURE__ */ new Set([...n, ...s]));
  return a = a.filter((l) => !o.includes(l) && !r.includes(l)), [
    ...o,
    ...a,
    ...r
  ];
};
var TY = Object.assign({}, Lc);
var IT = (e10, t, n, o) => {
  const r = HH(e10.getValue(t), n, {
    threshold: Vn.MATCHES
  });
  return o(r), r.passed;
};
IT.autoRemove = (e10) => !e10;
var RT = (e10, t, n) => {
  var o;
  return !!(!((o = e10.getValue(t)) === null || o === void 0) && o.toString().toLowerCase().trim().includes(n.toString().toLowerCase().trim()));
};
RT.autoRemove = (e10) => !e10;
var ET = (e10, t, n) => {
  var o;
  return !!(!((o = e10.getValue(t)) === null || o === void 0) && o.toString().toLowerCase().trim().startsWith(n.toString().toLowerCase().trim()));
};
ET.autoRemove = (e10) => !e10;
var OT = (e10, t, n) => {
  var o;
  return !!(!((o = e10.getValue(t)) === null || o === void 0) && o.toString().toLowerCase().trim().endsWith(n.toString().toLowerCase().trim()));
};
OT.autoRemove = (e10) => !e10;
var Xd = (e10, t, n) => {
  var o;
  return ((o = e10.getValue(t)) === null || o === void 0 ? void 0 : o.toString().toLowerCase().trim()) === n.toString().toLowerCase().trim();
};
Xd.autoRemove = (e10) => !e10;
var PT = (e10, t, n) => {
  var o;
  return ((o = e10.getValue(t)) === null || o === void 0 ? void 0 : o.toString().toLowerCase().trim()) !== n.toString().toLowerCase().trim();
};
PT.autoRemove = (e10) => !e10;
var Yd = (e10, t, n) => {
  var o, r, s;
  return !isNaN(+n) && !isNaN(+e10.getValue(t)) ? +((o = e10.getValue(t)) !== null && o !== void 0 ? o : 0) > +n : ((s = (r = e10.getValue(t)) !== null && r !== void 0 ? r : "") === null || s === void 0 ? void 0 : s.toString().toLowerCase().trim()) > n.toString().toLowerCase().trim();
};
Yd.autoRemove = (e10) => !e10;
var Ih = (e10, t, n) => Xd(e10, t, n) || Yd(e10, t, n);
Ih.autoRemove = (e10) => !e10;
var Zd = (e10, t, n) => {
  var o, r, s;
  return !isNaN(+n) && !isNaN(+e10.getValue(t)) ? +((o = e10.getValue(t)) !== null && o !== void 0 ? o : 0) < +n : ((s = (r = e10.getValue(t)) !== null && r !== void 0 ? r : "") === null || s === void 0 ? void 0 : s.toString().toLowerCase().trim()) < n.toString().toLowerCase().trim();
};
Zd.autoRemove = (e10) => !e10;
var Rh = (e10, t, n) => Xd(e10, t, n) || Zd(e10, t, n);
Rh.autoRemove = (e10) => !e10;
var AT = (e10, t, n) => (["", void 0].includes(n[0]) || Yd(e10, t, n[0])) && (!isNaN(+n[0]) && !isNaN(+n[1]) && +n[0] > +n[1] || ["", void 0].includes(n[1]) || Zd(e10, t, n[1]));
AT.autoRemove = (e10) => !e10;
var jT = (e10, t, n) => (["", void 0].includes(n[0]) || Ih(e10, t, n[0])) && (!isNaN(+n[0]) && !isNaN(+n[1]) && +n[0] > +n[1] || ["", void 0].includes(n[1]) || Rh(e10, t, n[1]));
jT.autoRemove = (e10) => !e10;
var DT = (e10, t, n) => {
  var o;
  return !(!((o = e10.getValue(t)) === null || o === void 0) && o.toString().trim());
};
DT.autoRemove = (e10) => !e10;
var MT = (e10, t, n) => {
  var o;
  return !!(!((o = e10.getValue(t)) === null || o === void 0) && o.toString().trim());
};
MT.autoRemove = (e10) => !e10;
var IY = Object.assign(Object.assign({}, Zo), {
  between: AT,
  betweenInclusive: jT,
  contains: RT,
  empty: DT,
  endsWith: OT,
  equals: Xd,
  fuzzy: IT,
  greaterThan: Yd,
  greaterThanOrEqualTo: Ih,
  lessThan: Zd,
  lessThanOrEqualTo: Rh,
  notEmpty: MT,
  notEquals: PT,
  startsWith: ET
});
function Je(e10, t) {
  var n = {};
  for (var o in e10) Object.prototype.hasOwnProperty.call(e10, o) && t.indexOf(o) < 0 && (n[o] = e10[o]);
  if (e10 != null && typeof Object.getOwnPropertySymbols == "function")
    for (var r = 0, o = Object.getOwnPropertySymbols(e10); r < o.length; r++)
      t.indexOf(o[r]) < 0 && Object.prototype.propertyIsEnumerable.call(e10, o[r]) && (n[o[r]] = e10[o[r]]);
  return n;
}
var kT = (e10) => {
  var { row: t, table: n, variant: o = "icon" } = e10, r = Je(e10, ["row", "table", "variant"]);
  const { getState: s, options: { icons: { CancelIcon: a, SaveIcon: l }, localization: c, onCreatingRowCancel: u, onCreatingRowSave: d, onEditingRowCancel: p, onEditingRowSave: m }, refs: { editInputRefs: g }, setCreatingRow: b, setEditingRow: v } = n, { creatingRow: h, editingRow: y, isSaving: C } = s(), x = (h == null ? void 0 : h.id) === t.id, T = (y == null ? void 0 : y.id) === t.id, w = () => {
    x ? (u == null || u({ row: t, table: n }), b(null)) : T && (p == null || p({ row: t, table: n }), v(null)), t._valuesCache = {};
  }, R = () => {
    var E;
    (E = Object.values(g == null ? void 0 : g.current).filter((O) => {
      var I, P;
      return t.id === ((P = (I = O == null ? void 0 : O.name) === null || I === void 0 ? void 0 : I.split("_")) === null || P === void 0 ? void 0 : P[0]);
    })) === null || E === void 0 || E.forEach((O) => {
      O.value !== void 0 && Object.hasOwn(t == null ? void 0 : t._valuesCache, O.name) && (t._valuesCache[O.name] = O.value);
    }), x ? d == null || d({
      exitCreatingMode: () => b(null),
      row: t,
      table: n,
      values: t._valuesCache
    }) : T && (m == null || m({
      exitEditingMode: () => v(null),
      row: t,
      table: n,
      values: t == null ? void 0 : t._valuesCache
    }));
  };
  return f.jsx(De, { onClick: (E) => E.stopPropagation(), sx: (E) => Object.assign({ display: "flex", gap: "0.75rem" }, Ie(r == null ? void 0 : r.sx, E)), children: o === "icon" ? f.jsxs(f.Fragment, { children: [f.jsx(Et, { title: c.cancel, children: f.jsx(lt, { "aria-label": c.cancel, onClick: w, children: f.jsx(a, {}) }) }), (x && d || T && m) && f.jsx(Et, { title: c.save, children: f.jsx(lt, { "aria-label": c.save, color: "info", disabled: C, onClick: R, children: C ? f.jsx(Jr, { size: 18 }) : f.jsx(l, {}) }) })] }) : f.jsxs(f.Fragment, { children: [f.jsx(vt, { onClick: w, sx: { minWidth: "100px" }, children: c.cancel }), f.jsxs(vt, { disabled: C, onClick: R, sx: { minWidth: "100px" }, variant: "contained", children: [C && f.jsx(Jr, { color: "inherit", size: 18 }), c.save] })] }) });
};
var za = (e10) => e10.replace(/[^a-zA-Z0-9]/g, "_");
var RY = (e10, t) => {
  var n;
  const o = Ie(e10, t), r = (n = o == null ? void 0 : o.baseBackgroundColor) !== null && n !== void 0 ? n : t.palette.mode === "dark" ? Hn(t.palette.background.default, 0.05) : t.palette.background.default;
  return Object.assign({ baseBackgroundColor: r, cellNavigationOutlineColor: t.palette.primary.main, draggingBorderColor: t.palette.primary.main, matchHighlightColor: t.palette.mode === "dark" ? lo(t.palette.warning.dark, 0.25) : Hn(t.palette.warning.light, 0.5), menuBackgroundColor: Hn(r, 0.07), pinnedRowBackgroundColor: We(t.palette.primary.main, 0.1), selectedRowBackgroundColor: We(t.palette.primary.main, 0.2) }, o);
};
var fm = {
  content: '""',
  height: "100%",
  left: 0,
  position: "absolute",
  top: 0,
  width: "100%",
  zIndex: -1
};
var FT = ({ column: e10, table: t, theme: n }) => {
  const { baseBackgroundColor: o } = t.options.mrtTheme, r = e10 == null ? void 0 : e10.getIsPinned();
  return {
    '&[data-pinned="true"]': {
      "&:before": Object.assign({ backgroundColor: We(lo(o, n.palette.mode === "dark" ? 0.05 : 0.01), 0.97), boxShadow: e10 ? r === "left" && e10.getIsLastColumn(r) ? `-4px 0 4px -4px ${We(n.palette.grey[700], 0.5)} inset` : r === "right" && e10.getIsFirstColumn(r) ? `4px 0 4px -4px ${We(n.palette.grey[700], 0.5)} inset` : void 0 : void 0 }, fm)
    }
  };
};
var Eh = ({ column: e10, header: t, table: n, tableCellProps: o, theme: r }) => {
  var s, a, l, c, u, d;
  const { getState: p, options: { enableColumnVirtualization: m, layoutMode: g } } = n, { draggingColumn: b } = p(), { columnDef: v } = e10, { columnDefType: h } = v, y = v.columnDefType !== "group" && e10.getIsPinned(), C = {
    minWidth: `max(calc(var(--${t ? "header" : "col"}-${za((s = t == null ? void 0 : t.id) !== null && s !== void 0 ? s : e10.id)}-size) * 1px), ${(a = v.minSize) !== null && a !== void 0 ? a : 30}px)`,
    width: `calc(var(--${t ? "header" : "col"}-${za((l = t == null ? void 0 : t.id) !== null && l !== void 0 ? l : e10.id)}-size) * 1px)`
  };
  g === "grid" ? C.flex = `${[0, false].includes(v.grow) ? 0 : `var(--${t ? "header" : "col"}-${za((c = t == null ? void 0 : t.id) !== null && c !== void 0 ? c : e10.id)}-size)`} 0 auto` : g === "grid-no-grow" && (C.flex = `${+(v.grow || 0)} 0 auto`);
  const x = y ? Object.assign(Object.assign({}, FT({ column: e10, table: n, theme: r })), { left: y === "left" ? `${e10.getStart("left")}px` : void 0, opacity: 0.97, position: "sticky", right: y === "right" ? `${e10.getAfter("right")}px` : void 0 }) : {};
  return Object.assign(Object.assign(Object.assign({ backgroundColor: "inherit", backgroundImage: "inherit", display: g != null && g.startsWith("grid") ? "flex" : void 0, justifyContent: h === "group" ? "center" : g != null && g.startsWith("grid") ? o.align : void 0, opacity: ((u = n.getState().draggingColumn) === null || u === void 0 ? void 0 : u.id) === e10.id || ((d = n.getState().hoveredColumn) === null || d === void 0 ? void 0 : d.id) === e10.id ? 0.5 : 1, position: "relative", transition: m ? "none" : "padding 150ms ease-in-out", zIndex: e10.getIsResizing() || (b == null ? void 0 : b.id) === e10.id ? 2 : h !== "group" && y ? 1 : 0, "&:focus-visible": {
    outline: `2px solid ${n.options.mrtTheme.cellNavigationOutlineColor}`,
    outlineOffset: "-2px"
  } }, x), C), Ie(o == null ? void 0 : o.sx, r));
};
var NT = ({ table: e10 }) => ({
  alignItems: "flex-start",
  backgroundColor: e10.options.mrtTheme.baseBackgroundColor,
  display: "grid",
  flexWrap: "wrap-reverse",
  minHeight: "3.5rem",
  overflow: "hidden",
  position: "relative",
  transition: "all 150ms ease-in-out",
  zIndex: 1
});
var xc = (e10) => e10.direction === "rtl" ? { style: { transform: "scaleX(-1)" } } : void 0;
var jo = (e10) => ({
  disableInteractive: true,
  enterDelay: 1e3,
  enterNextDelay: 1e3,
  placement: e10
});
var Dn = (e10) => {
  var { icon: t, label: n, onOpenSubMenu: o, table: r } = e10, s = Je(e10, ["icon", "label", "onOpenSubMenu", "table"]);
  const { options: { icons: { ArrowRightIcon: a } } } = r;
  return f.jsxs(Lo, Object.assign({ sx: {
    alignItems: "center",
    justifyContent: "space-between",
    minWidth: "120px",
    my: 0,
    py: "6px"
  }, tabIndex: 0 }, s, { children: [f.jsxs(De, { sx: {
    alignItems: "center",
    display: "flex"
  }, children: [f.jsx(WC, { children: t }), n] }), o && f.jsx(lt, { onClick: o, onMouseEnter: o, size: "small", sx: { p: 0 }, children: f.jsx(a, {}) })] }));
};
var EY = (e10) => {
  var { anchorEl: t, handleEdit: n, row: o, setAnchorEl: r, staticRowIndex: s, table: a } = e10, l = Je(e10, ["anchorEl", "handleEdit", "row", "setAnchorEl", "staticRowIndex", "table"]);
  const { getState: c, options: { editDisplayMode: u, enableEditing: d, icons: { EditIcon: p }, localization: m, mrtTheme: { menuBackgroundColor: g }, renderRowActionMenuItems: b } } = a, { density: v } = c(), h = (0, import_react.useMemo)(() => {
    const y = [], C = Ie(d, o) && ["modal", "row"].includes(u) && f.jsx(Dn, { icon: f.jsx(p, {}), label: m.edit, onClick: n, table: a });
    C && y.push(C);
    const x = b == null ? void 0 : b({
      closeMenu: () => r(null),
      row: o,
      staticRowIndex: s,
      table: a
    });
    return x != null && x.length && y.push(...x), y;
  }, [b, o, s, a]);
  return h.length ? f.jsx(si, Object.assign({ MenuListProps: {
    dense: v === "compact",
    sx: {
      backgroundColor: g
    }
  }, anchorEl: t, disableScrollLock: true, onClick: (y) => y.stopPropagation(), onClose: () => r(null), open: !!t }, l, { children: h })) : null;
};
var O0 = {
  "&:hover": {
    opacity: 1
  },
  height: "2rem",
  ml: "10px",
  opacity: 0.5,
  transition: "opacity 150ms",
  width: "2rem"
};
var OY = (e10) => {
  var t, { cell: n, row: o, staticRowIndex: r, table: s } = e10, a = Je(e10, ["cell", "row", "staticRowIndex", "table"]);
  const { getState: l, options: { createDisplayMode: c, editDisplayMode: u, enableEditing: d, icons: { EditIcon: p, MoreHorizIcon: m }, localization: g, renderRowActionMenuItems: b, renderRowActions: v }, setEditingRow: h } = s, { creatingRow: y, editingRow: C } = l(), x = (y == null ? void 0 : y.id) === o.id, T = (C == null ? void 0 : C.id) === o.id, w = x && c === "row" || T && u === "row", [R, E] = (0, import_react.useState)(null), O = (P) => {
    P.stopPropagation(), P.preventDefault(), E(P.currentTarget);
  }, I = (P) => {
    P.stopPropagation(), h(Object.assign({}, o)), E(null);
  };
  return f.jsx(f.Fragment, { children: v && !w ? v({ cell: n, row: o, staticRowIndex: r, table: s }) : w ? f.jsx(kT, { row: o, table: s }) : !b && Ie(d, o) && ["modal", "row"].includes(u) ? f.jsx(Et, { placement: "right", title: g.edit, children: f.jsx(lt, Object.assign({ "aria-label": g.edit, onClick: I, sx: O0 }, a, { children: f.jsx(p, {}) })) }) : !((t = b == null ? void 0 : b({
    row: o,
    staticRowIndex: r,
    table: s
  })) === null || t === void 0) && t.length ? f.jsxs(f.Fragment, { children: [f.jsx(Et, Object.assign({}, jo(), { title: g.rowActions, children: f.jsx(lt, Object.assign({ "aria-label": g.rowActions, onClick: O, size: "small", sx: O0 }, a, { children: f.jsx(m, {}) })) })), f.jsx(EY, { anchorEl: R, handleEdit: I, row: o, setAnchorEl: E, staticRowIndex: r, table: s })] }) : null });
};
var PY = (e10) => Object.assign({ Cell: ({ cell: t, row: n, staticRowIndex: o, table: r }) => f.jsx(OY, { cell: t, row: n, staticRowIndex: o, table: r }) }, Zi({
  header: "actions",
  id: "mrt-row-actions",
  size: 70,
  tableOptions: e10
}));
var Oh = (e10) => {
  var t, n, { location: o, table: r } = e10, s = Je(e10, ["location", "table"]);
  const { options: { icons: { DragHandleIcon: a }, localization: l } } = r;
  return f.jsx(Et, Object.assign({}, jo("top"), { title: (t = s == null ? void 0 : s.title) !== null && t !== void 0 ? t : l.move, children: f.jsx(lt, Object.assign({ "aria-label": (n = s.title) !== null && n !== void 0 ? n : l.move, disableRipple: true, draggable: "true", size: "small" }, s, { onClick: (c) => {
    var u;
    c.stopPropagation(), (u = s == null ? void 0 : s.onClick) === null || u === void 0 || u.call(s, c);
  }, sx: (c) => Object.assign({ "&:active": {
    cursor: "grabbing"
  }, "&:hover": {
    backgroundColor: "transparent",
    opacity: 1
  }, cursor: "grab", m: "0 -0.1rem", opacity: o === "row" ? 1 : 0.5, p: "2px", transition: "all 150ms ease-in-out" }, Ie(s == null ? void 0 : s.sx, c)), title: void 0, children: f.jsx(a, {}) })) }));
};
var AY = (e10) => {
  var { row: t, rowRef: n, table: o } = e10, r = Je(e10, ["row", "rowRef", "table"]);
  const { options: { muiRowDragHandleProps: s } } = o, a = Object.assign(Object.assign({}, Ie(s, {
    row: t,
    table: o
  })), r), l = (u) => {
    var d;
    (d = a == null ? void 0 : a.onDragStart) === null || d === void 0 || d.call(a, u);
    try {
      u.dataTransfer.setDragImage(n.current, 0, 0);
    } catch (p) {
      console.error(p);
    }
    o.setDraggingRow(t);
  }, c = (u) => {
    var d;
    (d = a == null ? void 0 : a.onDragEnd) === null || d === void 0 || d.call(a, u), o.setDraggingRow(null), o.setHoveredRow(null);
  };
  return f.jsx(Oh, Object.assign({}, a, { location: "row", onDragEnd: c, onDragStart: l, table: o }));
};
var jY = (e10) => Object.assign({ Cell: ({ row: t, rowRef: n, table: o }) => f.jsx(AY, { row: t, rowRef: n, table: o }), grow: false }, Zi({
  header: "move",
  id: "mrt-row-drag",
  size: 60,
  tableOptions: e10
}));
var DY = (e10) => {
  var t, n, { table: o } = e10, r = Je(e10, ["table"]);
  const { getCanSomeRowsExpand: s, getIsAllRowsExpanded: a, getIsSomeRowsExpanded: l, getState: c, options: { icons: { KeyboardDoubleArrowDownIcon: u }, localization: d, muiExpandAllButtonProps: p, renderDetailPanel: m }, toggleAllRowsExpanded: g } = o, { density: b, isLoading: v } = c(), h = Object.assign(Object.assign({}, Ie(p, {
    table: o
  })), r), y = a();
  return f.jsx(Et, Object.assign({}, jo(), { title: (t = h == null ? void 0 : h.title) !== null && t !== void 0 ? t : y ? d.collapseAll : d.expandAll, children: f.jsx("span", { children: f.jsx(lt, Object.assign({ "aria-label": d.expandAll, disabled: v || !m && !s(), onClick: () => g(!y) }, h, { sx: (C) => Object.assign({ height: b === "compact" ? "1.75rem" : "2.25rem", mt: b !== "compact" ? "-0.25rem" : void 0, width: b === "compact" ? "1.75rem" : "2.25rem" }, Ie(h == null ? void 0 : h.sx, C)), title: void 0, children: (n = h == null ? void 0 : h.children) !== null && n !== void 0 ? n : f.jsx(u, { style: {
    transform: `rotate(${y ? -180 : l() ? -90 : 0}deg)`,
    transition: "transform 150ms"
  } }) })) }) }));
};
var P0 = ({ row: e10, staticRowIndex: t, table: n }) => {
  var o, r;
  const s = Sn(), { getState: a, options: { icons: { ExpandMoreIcon: l }, localization: c, muiExpandButtonProps: u, positionExpandColumn: d, renderDetailPanel: p } } = n, { density: m } = a(), g = Ie(u, {
    row: e10,
    staticRowIndex: t,
    table: n
  }), b = e10.getCanExpand(), v = e10.getIsExpanded(), h = (C) => {
    var x;
    C.stopPropagation(), e10.toggleExpanded(), (x = g == null ? void 0 : g.onClick) === null || x === void 0 || x.call(g, C);
  }, y = !!(p != null && p({ row: e10, table: n }));
  return f.jsx(Et, Object.assign({ disableHoverListener: !b && !y }, jo(), { title: (o = g == null ? void 0 : g.title) !== null && o !== void 0 ? o : v ? c.collapse : c.expand, children: f.jsx("span", { children: f.jsx(lt, Object.assign({ "aria-label": c.expand, disabled: !b && !y }, g, { onClick: h, sx: (C) => Object.assign({ height: m === "compact" ? "1.75rem" : "2.25rem", opacity: !b && !y ? 0.3 : 1, [C.direction === "rtl" || d === "last" ? "mr" : "ml"]: `${e10.depth * 16}px`, width: m === "compact" ? "1.75rem" : "2.25rem" }, Ie(g == null ? void 0 : g.sx, C)), title: void 0, children: (r = g == null ? void 0 : g.children) !== null && r !== void 0 ? r : f.jsx(l, { style: {
    transform: `rotate(${!b && !p ? d === "last" || s.direction === "rtl" ? 90 : -90 : v ? -180 : 0}deg)`,
    transition: "transform 150ms"
  } }) })) }) }));
};
var MY = (e10) => {
  var t;
  const { defaultColumn: n, enableExpandAll: o, groupedColumnMode: r, positionExpandColumn: s, renderDetailPanel: a, state: { grouping: l } } = e10, c = s === "last" ? {
    align: "right"
  } : void 0;
  return Object.assign({ Cell: ({ cell: u, column: d, row: p, staticRowIndex: m, table: g }) => {
    var b, v, h;
    const y = { row: p, staticRowIndex: m, table: g }, C = (b = p.subRows) === null || b === void 0 ? void 0 : b.length;
    return r === "remove" && p.groupingColumnId ? f.jsxs(Ln, { alignItems: "center", flexDirection: "row", gap: "0.25rem", children: [f.jsx(P0, Object.assign({}, y)), f.jsx(Et, Object.assign({}, jo("right"), { title: g.getColumn(p.groupingColumnId).columnDef.header, children: f.jsx("span", { children: p.groupingValue }) })), !!C && f.jsxs("span", { children: ["(", C, ")"] })] }) : f.jsxs(f.Fragment, { children: [f.jsx(P0, Object.assign({}, y)), (h = (v = d.columnDef).GroupedCell) === null || h === void 0 ? void 0 : h.call(v, { cell: u, column: d, row: p, table: g })] });
  }, Header: o ? ({ table: u }) => {
    var d;
    return f.jsxs(f.Fragment, { children: [f.jsx(DY, { table: u }), r === "remove" && ((d = l == null ? void 0 : l.map((p) => u.getColumn(p).columnDef.header)) === null || d === void 0 ? void 0 : d.join(", "))] });
  } : void 0, muiTableBodyCellProps: c, muiTableHeadCellProps: c }, Zi({
    header: "expand",
    id: "mrt-row-expand",
    size: r === "remove" ? (t = n == null ? void 0 : n.size) !== null && t !== void 0 ? t : 180 : a ? o ? 60 : 70 : 100,
    tableOptions: e10
  }));
};
var kY = (e10) => {
  const { localization: t, rowNumberDisplayMode: n } = e10, { pagination: { pageIndex: o, pageSize: r } } = e10.state;
  return Object.assign({ Cell: ({ row: s, staticRowIndex: a }) => {
    var l;
    return ((l = n === "static" ? (a || 0) + (r || 0) * (o || 0) : s.index) !== null && l !== void 0 ? l : 0) + 1;
  }, Header: () => t.rowNumber, grow: false }, Zi({
    header: "rowNumbers",
    id: "mrt-row-numbers",
    size: 50,
    tableOptions: e10
  }));
};
var Gp = (e10) => {
  var { pinningPosition: t, row: n, table: o } = e10, r = Je(e10, ["pinningPosition", "row", "table"]);
  const { options: { icons: { CloseIcon: s, PushPinIcon: a }, localization: l, rowPinningDisplayMode: c } } = o, u = n.getIsPinned(), [d, p] = (0, import_react.useState)(false), m = (g) => {
    p(false), g.stopPropagation(), n.pin(u ? false : t);
  };
  return f.jsx(Et, Object.assign({}, jo(), { open: d, title: u ? l.unpin : l.pin, children: f.jsx(lt, Object.assign({ "aria-label": l.pin, onBlur: () => p(false), onClick: m, onFocus: () => p(true), onMouseEnter: () => p(true), onMouseLeave: () => p(false), size: "small" }, r, { sx: (g) => Object.assign({ height: "24px", width: "24px" }, Ie(r == null ? void 0 : r.sx, g)), children: u ? f.jsx(s, {}) : f.jsx(a, { fontSize: "small", style: {
    transform: `rotate(${c === "sticky" ? 135 : t === "top" ? 180 : 0}deg)`
  } }) })) }));
};
var FY = (e10) => {
  var { row: t, table: n } = e10, o = Je(e10, ["row", "table"]);
  const { getState: r, options: { enableRowPinning: s, rowPinningDisplayMode: a } } = n, { density: l } = r();
  if (!Ie(s, t))
    return null;
  const u = Object.assign({
    row: t,
    table: n
  }, o);
  return a === "top-and-bottom" && !t.getIsPinned() ? f.jsxs(De, { sx: {
    display: "flex",
    flexDirection: l === "compact" ? "row" : "column"
  }, children: [f.jsx(Gp, Object.assign({ pinningPosition: "top" }, u)), f.jsx(Gp, Object.assign({ pinningPosition: "bottom" }, u))] }) : f.jsx(Gp, Object.assign({ pinningPosition: a === "bottom" ? "bottom" : "top" }, u));
};
var NY = (e10) => Object.assign({ Cell: ({ row: t, table: n }) => f.jsx(FY, { row: t, table: n }), grow: false }, Zi({
  header: "pin",
  id: "mrt-row-pin",
  size: 60,
  tableOptions: e10
}));
var mm = (e10) => {
  var t, { row: n, staticRowIndex: o, table: r } = e10, s = Je(e10, ["row", "staticRowIndex", "table"]);
  const { getState: a, options: { enableMultiRowSelection: l, localization: c, muiSelectAllCheckboxProps: u, muiSelectCheckboxProps: d, selectAllMode: p } } = r, { density: m, isLoading: g } = a(), b = !n, v = b ? p === "page" ? r.getIsAllPageRowsSelected() : r.getIsAllRowsSelected() : void 0, h = b ? v : yu({ row: n, table: r }), y = Object.assign(Object.assign({}, b ? Ie(u, { table: r }) : Ie(d, {
    row: n,
    staticRowIndex: o,
    table: r
  })), s), C = n ? bT({
    row: n,
    staticRowIndex: o,
    table: r
  }) : void 0, x = xh({ table: r }), T = Object.assign(Object.assign({ "aria-label": b ? c.toggleSelectAll : c.toggleSelectRow, checked: h, disabled: g || n && !n.getCanSelect() || (n == null ? void 0 : n.id) === "mrt-row-create", inputProps: {
    "aria-label": b ? c.toggleSelectAll : c.toggleSelectRow
  }, onChange: (w) => {
    w.stopPropagation(), b ? x(w) : C(w);
  }, size: m === "compact" ? "small" : "medium" }, y), { onClick: (w) => {
    var R;
    w.stopPropagation(), (R = y == null ? void 0 : y.onClick) === null || R === void 0 || R.call(y, w);
  }, sx: (w) => Object.assign({ height: m === "compact" ? "1.75rem" : "2.5rem", m: m !== "compact" ? "-0.4rem" : void 0, width: m === "compact" ? "1.75rem" : "2.5rem", zIndex: 0 }, Ie(y == null ? void 0 : y.sx, w)), title: void 0 });
  return f.jsx(Et, Object.assign({}, jo(), { title: (t = y == null ? void 0 : y.title) !== null && t !== void 0 ? t : b ? c.toggleSelectAll : c.toggleSelectRow, children: l === false ? f.jsx(KC, Object.assign({}, T)) : f.jsx(_i, Object.assign({ indeterminate: !h && b ? r.getIsSomeRowsSelected() : (n == null ? void 0 : n.getIsSomeSelected()) && n.getCanSelectSubRows() }, T)) }));
};
var $Y = (e10) => {
  const { enableMultiRowSelection: t, enableSelectAll: n } = e10;
  return Object.assign({ Cell: ({ row: o, staticRowIndex: r, table: s }) => f.jsx(mm, { row: o, staticRowIndex: r, table: s }), Header: n && t ? ({ table: o }) => f.jsx(mm, { table: o }) : void 0, grow: false }, Zi({
    header: "select",
    id: "mrt-row-select",
    size: n ? 60 : 70,
    tableOptions: e10
  }));
};
var VY = {
  ArrowDownwardIcon: o9,
  ArrowRightIcon: r9,
  CancelIcon: i9,
  ChevronLeftIcon: s9,
  ChevronRightIcon: a9,
  ClearAllIcon: l9,
  CloseIcon: Id,
  ContentCopy: c9,
  DensityLargeIcon: u9,
  DensityMediumIcon: d9,
  DensitySmallIcon: p9,
  DragHandleIcon: m9,
  DynamicFeedIcon: g9,
  EditIcon: Ew,
  ExpandMoreIcon: b9,
  FilterAltIcon: v9,
  FilterListIcon: y9,
  FilterListOffIcon: x9,
  FirstPageIcon: C9,
  FullscreenExitIcon: w9,
  FullscreenIcon: S9,
  KeyboardDoubleArrowDownIcon: T9,
  LastPageIcon: I9,
  MoreHorizIcon: R9,
  MoreVertIcon: E9,
  PushPinIcon: O9,
  RestartAltIcon: P9,
  SaveIcon: A9,
  SearchIcon: j9,
  SearchOffIcon: D9,
  SortIcon: M9,
  SyncAltIcon: F9,
  ViewColumnIcon: N9,
  VisibilityOffIcon: V9
};
var _Y = {
  actions: "Actions",
  and: "and",
  cancel: "Cancel",
  changeFilterMode: "Change filter mode",
  changeSearchMode: "Change search mode",
  clearFilter: "Clear filter",
  clearSearch: "Clear search",
  clearSelection: "Clear selection",
  clearSort: "Clear sort",
  clickToCopy: "Click to copy",
  copy: "Copy",
  collapse: "Collapse",
  collapseAll: "Collapse all",
  columnActions: "Column Actions",
  copiedToClipboard: "Copied to clipboard",
  dropToGroupBy: "Drop to group by {column}",
  edit: "Edit",
  expand: "Expand",
  expandAll: "Expand all",
  filterArrIncludes: "Includes",
  filterArrIncludesAll: "Includes all",
  filterArrIncludesSome: "Includes",
  filterBetween: "Between",
  filterBetweenInclusive: "Between Inclusive",
  filterByColumn: "Filter by {column}",
  filterContains: "Contains",
  filterEmpty: "Empty",
  filterEndsWith: "Ends With",
  filterEquals: "Equals",
  filterEqualsString: "Equals",
  filterFuzzy: "Fuzzy",
  filterGreaterThan: "Greater Than",
  filterGreaterThanOrEqualTo: "Greater Than Or Equal To",
  filterInNumberRange: "Between",
  filterIncludesString: "Contains",
  filterIncludesStringSensitive: "Contains",
  filterLessThan: "Less Than",
  filterLessThanOrEqualTo: "Less Than Or Equal To",
  filterMode: "Filter Mode: {filterType}",
  filterNotEmpty: "Not Empty",
  filterNotEquals: "Not Equals",
  filterStartsWith: "Starts With",
  filterWeakEquals: "Equals",
  filteringByColumn: "Filtering by {column} - {filterType} {filterValue}",
  goToFirstPage: "Go to first page",
  goToLastPage: "Go to last page",
  goToNextPage: "Go to next page",
  goToPreviousPage: "Go to previous page",
  grab: "Grab",
  groupByColumn: "Group by {column}",
  groupedBy: "Grouped by ",
  hideAll: "Hide all",
  hideColumn: "Hide {column} column",
  max: "Max",
  min: "Min",
  move: "Move",
  noRecordsToDisplay: "No records to display",
  noResultsFound: "No results found",
  of: "of",
  or: "or",
  pin: "Pin",
  pinToLeft: "Pin to left",
  pinToRight: "Pin to right",
  resetColumnSize: "Reset column size",
  resetOrder: "Reset order",
  rowActions: "Row Actions",
  rowNumber: "#",
  rowNumbers: "Row Numbers",
  rowsPerPage: "Rows per page",
  save: "Save",
  search: "Search",
  selectedCountOfRowCountRowsSelected: "{selectedCount} of {rowCount} row(s) selected",
  select: "Select",
  showAll: "Show all",
  showAllColumns: "Show all columns",
  showHideColumns: "Show/Hide columns",
  showHideFilters: "Show/Hide filters",
  showHideSearch: "Show/Hide search",
  sortByColumnAsc: "Sort by {column} ascending",
  sortByColumnDesc: "Sort by {column} descending",
  sortedByColumnAsc: "Sorted by {column} ascending",
  sortedByColumnDesc: "Sorted by {column} descending",
  thenBy: ", then by ",
  toggleDensity: "Toggle density",
  toggleFullScreen: "Toggle full screen",
  toggleSelectAll: "Toggle select all",
  toggleSelectRow: "Toggle select row",
  toggleVisibility: "Toggle visibility",
  ungroupByColumn: "Ungroup by {column}",
  unpin: "Unpin",
  unpinAll: "Unpin all"
};
var LY = {
  filterVariant: "text",
  maxSize: 1e3,
  minSize: 40,
  size: 180
};
var $T = {
  columnDefType: "display",
  enableClickToCopy: false,
  enableColumnActions: false,
  enableColumnDragging: false,
  enableColumnFilter: false,
  enableColumnOrdering: false,
  enableEditing: false,
  enableGlobalFilter: false,
  enableGrouping: false,
  enableHiding: false,
  enableResizing: false,
  enableSorting: false
};
var BY = (e10) => {
  var t, { aggregationFns: n, autoResetExpanded: o = false, columnFilterDisplayMode: r = "subheader", columnResizeDirection: s, columnResizeMode: a = "onChange", createDisplayMode: l = "modal", defaultColumn: c, defaultDisplayColumn: u, editDisplayMode: d = "modal", enableBatchRowSelection: p = true, enableBottomToolbar: m = true, enableColumnActions: g = true, enableColumnFilters: b = true, enableColumnOrdering: v = false, enableColumnPinning: h = false, enableColumnResizing: y = false, enableColumnVirtualization: C, enableDensityToggle: x = true, enableExpandAll: T = true, enableExpanding: w, enableFacetedValues: R = false, enableFilterMatchHighlighting: E = true, enableFilters: O = true, enableFullScreenToggle: I = true, enableGlobalFilter: P = true, enableGlobalFilterRankedResults: A = true, enableGrouping: M = false, enableHiding: F = true, enableKeyboardShortcuts: D = true, enableMultiRowSelection: N = true, enableMultiSort: j = true, enablePagination: _ = true, enableRowPinning: z = false, enableRowSelection: $ = false, enableRowVirtualization: k, enableSelectAll: B = true, enableSorting: Q = true, enableStickyHeader: ee = false, enableTableFooter: G = true, enableTableHead: H = true, enableToolbarInternalActions: Y = true, enableTopToolbar: J = true, filterFns: U, icons: ne, id: se = (0, import_react.useId)(), layoutMode: oe, localization: W, manualFiltering: Z, manualGrouping: L, manualPagination: ie, manualSorting: te, mrtTheme: le, paginationDisplayMode: ue = "default", positionActionsColumn: ve = "first", positionCreatingRow: Te = "top", positionExpandColumn: Re = "first", positionGlobalFilter: re = "right", positionPagination: X = "bottom", positionToolbarAlertBanner: ae = "top", positionToolbarDropZone: ce = "top", rowNumberDisplayMode: ge = "static", rowPinningDisplayMode: Se = "sticky", selectAllMode: ye = "page", sortingFns: Ee } = e10, Le = Je(e10, ["aggregationFns", "autoResetExpanded", "columnFilterDisplayMode", "columnResizeDirection", "columnResizeMode", "createDisplayMode", "defaultColumn", "defaultDisplayColumn", "editDisplayMode", "enableBatchRowSelection", "enableBottomToolbar", "enableColumnActions", "enableColumnFilters", "enableColumnOrdering", "enableColumnPinning", "enableColumnResizing", "enableColumnVirtualization", "enableDensityToggle", "enableExpandAll", "enableExpanding", "enableFacetedValues", "enableFilterMatchHighlighting", "enableFilters", "enableFullScreenToggle", "enableGlobalFilter", "enableGlobalFilterRankedResults", "enableGrouping", "enableHiding", "enableKeyboardShortcuts", "enableMultiRowSelection", "enableMultiSort", "enablePagination", "enableRowPinning", "enableRowSelection", "enableRowVirtualization", "enableSelectAll", "enableSorting", "enableStickyHeader", "enableTableFooter", "enableTableHead", "enableToolbarInternalActions", "enableTopToolbar", "filterFns", "icons", "id", "layoutMode", "localization", "manualFiltering", "manualGrouping", "manualPagination", "manualSorting", "mrtTheme", "paginationDisplayMode", "positionActionsColumn", "positionCreatingRow", "positionExpandColumn", "positionGlobalFilter", "positionPagination", "positionToolbarAlertBanner", "positionToolbarDropZone", "rowNumberDisplayMode", "rowPinningDisplayMode", "selectAllMode", "sortingFns"]);
  const Ae = Sn();
  return ne = (0, import_react.useMemo)(() => Object.assign(Object.assign({}, VY), ne), [ne]), W = (0, import_react.useMemo)(() => Object.assign(Object.assign({}, _Y), W), [W]), le = (0, import_react.useMemo)(() => RY(le, Ae), [le, Ae]), n = (0, import_react.useMemo)(() => Object.assign(Object.assign({}, TY), n), []), U = (0, import_react.useMemo)(() => Object.assign(Object.assign({}, IY), U), []), Ee = (0, import_react.useMemo)(() => Object.assign(Object.assign({}, yY), Ee), []), c = (0, import_react.useMemo)(() => Object.assign(Object.assign({}, LY), c), [c]), u = (0, import_react.useMemo)(() => Object.assign(Object.assign({}, $T), u), [u]), [C, k] = (0, import_react.useMemo)(() => [C, k], []), s || (s = Ae.direction || "ltr"), oe = oe || (y ? "grid-no-grow" : "semantic"), oe === "semantic" && (k || C) && (oe = "grid"), k && (ee = true), _ === false && ie === void 0 && (ie = true), !((t = Le.data) === null || t === void 0) && t.length || (Z = true, L = true, ie = true, te = true), Object.assign({
    aggregationFns: n,
    autoResetExpanded: o,
    columnFilterDisplayMode: r,
    columnResizeDirection: s,
    columnResizeMode: a,
    createDisplayMode: l,
    defaultColumn: c,
    defaultDisplayColumn: u,
    editDisplayMode: d,
    enableBatchRowSelection: p,
    enableBottomToolbar: m,
    enableColumnActions: g,
    enableColumnFilters: b,
    enableColumnOrdering: v,
    enableColumnPinning: h,
    enableColumnResizing: y,
    enableColumnVirtualization: C,
    enableDensityToggle: x,
    enableExpandAll: T,
    enableExpanding: w,
    enableFacetedValues: R,
    enableFilterMatchHighlighting: E,
    enableFilters: O,
    enableFullScreenToggle: I,
    enableGlobalFilter: P,
    enableGlobalFilterRankedResults: A,
    enableGrouping: M,
    enableHiding: F,
    enableKeyboardShortcuts: D,
    enableMultiRowSelection: N,
    enableMultiSort: j,
    enablePagination: _,
    enableRowPinning: z,
    enableRowSelection: $,
    enableRowVirtualization: k,
    enableSelectAll: B,
    enableSorting: Q,
    enableStickyHeader: ee,
    enableTableFooter: G,
    enableTableHead: H,
    enableToolbarInternalActions: Y,
    enableTopToolbar: J,
    filterFns: U,
    getCoreRowModel: OH(),
    getExpandedRowModel: w || M ? PH() : void 0,
    getFacetedMinMaxValues: R ? AH() : void 0,
    getFacetedRowModel: R ? MH() : void 0,
    getFacetedUniqueValues: R ? kH() : void 0,
    getFilteredRowModel: (b || P || O) && !Z ? FH() : void 0,
    getGroupedRowModel: M && !L ? NH() : void 0,
    getPaginationRowModel: _ && !ie ? VH() : void 0,
    getSortedRowModel: Q && !te ? _H() : void 0,
    getSubRows: (tt) => tt == null ? void 0 : tt.subRows,
    icons: ne,
    id: se,
    layoutMode: oe,
    localization: W,
    manualFiltering: Z,
    manualGrouping: L,
    manualPagination: ie,
    manualSorting: te,
    mrtTheme: le,
    paginationDisplayMode: ue,
    positionActionsColumn: ve,
    positionCreatingRow: Te,
    positionExpandColumn: Re,
    positionGlobalFilter: re,
    positionPagination: X,
    positionToolbarAlertBanner: ae,
    positionToolbarDropZone: ce,
    rowNumberDisplayMode: ge,
    rowPinningDisplayMode: Se,
    selectAllMode: ye,
    sortingFns: Ee
  }, Le);
};
var Up = {
  children: null,
  sx: {
    minWidth: 0,
    p: 0,
    width: 0
  }
};
var zY = (e10) => Object.assign(Object.assign(Object.assign(Object.assign({}, Zi({
  id: "mrt-row-spacer",
  size: 0,
  tableOptions: e10
})), { grow: true }), $T), { muiTableBodyCellProps: Up, muiTableFooterCellProps: Up, muiTableHeadCellProps: Up });
var WY = (e10) => {
  const { getIsSomeRowsPinned: t, getPrePaginationRowModel: n, getState: o, options: { enablePagination: r, enableRowPinning: s, rowCount: a } } = e10, { columnOrder: l, density: c, globalFilter: u, isFullScreen: d, isLoading: p, pagination: m, showSkeletons: g, sorting: b } = o(), v = e10.options.columns.length, h = a ?? n().rows.length, y = (0, import_react.useReducer)(() => ({}), {})[1], C = (0, import_react.useRef)(), x = (0, import_react.useRef)();
  (0, import_react.useEffect)(() => {
    typeof window < "u" && (C.current = document.body.style.height);
  }, []), (0, import_react.useEffect)(() => {
    if (typeof window < "u")
      if (d)
        x.current = document.body.getBoundingClientRect().top, document.body.style.height = "100dvh";
      else {
        if (document.body.style.height = C.current, !x.current)
          return;
        window.scrollTo({
          behavior: "instant",
          top: -1 * x.current
        });
      }
  }, [d]), (0, import_react.useEffect)(() => {
    v !== l.length && e10.setColumnOrder(Th(e10.options));
  }, [v]), (0, import_react.useEffect)(() => {
    if (!r || p || g)
      return;
    const { pageIndex: w, pageSize: R } = m;
    w * R >= h && e10.setPageIndex(Math.ceil(h / R) - 1);
  }, [h]);
  const T = (0, import_react.useRef)(b);
  (0, import_react.useEffect)(() => {
    b.length && (T.current = b);
  }, [b]), (0, import_react.useEffect)(() => {
    hT(e10) && (u ? e10.setSorting([]) : e10.setSorting(() => T.current || []));
  }, [u]), (0, import_react.useEffect)(() => {
    s && t() && setTimeout(() => {
      y();
    }, 150);
  }, [c]);
};
var HY = (e10) => {
  var t, n, o, r, s, a, l, c, u, d, p, m, g, b, v, h, y, C, x, T, w, R, E, O, I, P, A, M, F, D, N, j, _, z, $;
  const k = (0, import_react.useRef)(null), B = (0, import_react.useRef)(null), Q = (0, import_react.useRef)(null), ee = (0, import_react.useRef)({}), G = (0, import_react.useRef)({}), H = (0, import_react.useRef)(null), Y = (0, import_react.useRef)(null), J = (0, import_react.useRef)({}), U = (0, import_react.useRef)(null), ne = (0, import_react.useRef)(null), se = (0, import_react.useRef)(null), oe = (0, import_react.useRef)(null), W = (0, import_react.useMemo)(() => {
    var pn, hn, q;
    const Ce = (pn = e10.initialState) !== null && pn !== void 0 ? pn : {};
    return Ce.columnOrder = (hn = Ce.columnOrder) !== null && hn !== void 0 ? hn : Th(Object.assign(Object.assign({}, e10), { state: Object.assign(Object.assign({}, e10.initialState), e10.state) })), Ce.globalFilterFn = (q = e10.globalFilterFn) !== null && q !== void 0 ? q : "fuzzy", Ce;
  }, []);
  e10.initialState = W;
  const [Z, L] = (0, import_react.useState)((t = W.actionCell) !== null && t !== void 0 ? t : null), [ie, te] = (0, import_react.useState)((n = W.creatingRow) !== null && n !== void 0 ? n : null), [le, ue] = (0, import_react.useState)(() => Object.assign({}, ...vu(e10.columns).map((pn) => {
    var hn, q, Ce, Ne;
    return {
      [ws(pn)]: pn.filterFn instanceof Function ? (hn = pn.filterFn.name) !== null && hn !== void 0 ? hn : "custom" : (Ne = (q = pn.filterFn) !== null && q !== void 0 ? q : (Ce = W == null ? void 0 : W.columnFilterFns) === null || Ce === void 0 ? void 0 : Ce[ws(pn)]) !== null && Ne !== void 0 ? Ne : hY(pn)
    };
  }))), [ve, Te] = (0, import_react.useState)((o = W.columnOrder) !== null && o !== void 0 ? o : []), [Re, re] = (0, import_react.useState)((r = W.columnSizingInfo) !== null && r !== void 0 ? r : {}), [X, ae] = (0, import_react.useState)((s = W == null ? void 0 : W.density) !== null && s !== void 0 ? s : "comfortable"), [ce, ge] = (0, import_react.useState)((a = W.draggingColumn) !== null && a !== void 0 ? a : null), [Se, ye] = (0, import_react.useState)((l = W.draggingRow) !== null && l !== void 0 ? l : null), [Ee, Le] = (0, import_react.useState)((c = W.editingCell) !== null && c !== void 0 ? c : null), [Ae, tt] = (0, import_react.useState)((u = W.editingRow) !== null && u !== void 0 ? u : null), [Ze, ut] = (0, import_react.useState)((d = W.globalFilterFn) !== null && d !== void 0 ? d : "fuzzy"), [me, Oe] = (0, import_react.useState)((p = W.grouping) !== null && p !== void 0 ? p : []), [he, Me] = (0, import_react.useState)((m = W.hoveredColumn) !== null && m !== void 0 ? m : null), [ke, st] = (0, import_react.useState)((g = W.hoveredRow) !== null && g !== void 0 ? g : null), [pt, it] = (0, import_react.useState)((b = W == null ? void 0 : W.isFullScreen) !== null && b !== void 0 ? b : false), [xt, Kt] = (0, import_react.useState)((v = W == null ? void 0 : W.pagination) !== null && v !== void 0 ? v : { pageIndex: 0, pageSize: 10 }), [wn, Qt] = (0, import_react.useState)((h = W == null ? void 0 : W.showAlertBanner) !== null && h !== void 0 ? h : false), [ot, dn] = (0, import_react.useState)((y = W == null ? void 0 : W.showColumnFilters) !== null && y !== void 0 ? y : false), [dr, Ho] = (0, import_react.useState)((C = W == null ? void 0 : W.showGlobalFilter) !== null && C !== void 0 ? C : false), [pr, Go] = (0, import_react.useState)((x = W == null ? void 0 : W.showToolbarDropZone) !== null && x !== void 0 ? x : false);
  e10.state = Object.assign({
    actionCell: Z,
    columnFilterFns: le,
    columnOrder: ve,
    columnSizingInfo: Re,
    creatingRow: ie,
    density: X,
    draggingColumn: ce,
    draggingRow: Se,
    editingCell: Ee,
    editingRow: Ae,
    globalFilterFn: Ze,
    grouping: me,
    hoveredColumn: he,
    hoveredRow: ke,
    isFullScreen: pt,
    pagination: xt,
    showAlertBanner: wn,
    showColumnFilters: ot,
    showGlobalFilter: dr,
    showToolbarDropZone: pr
  }, e10.state);
  const qe = e10, kr = (0, import_react.useRef)([]);
  qe.columns = qe.state.columnSizingInfo.isResizingColumn || qe.state.draggingColumn || qe.state.draggingRow ? kr.current : pT({
    columnDefs: [
      ...[
        xT(qe) && NY(qe),
        CT(qe) && jY(qe),
        wh(qe) && PY(qe),
        Sh(qe) && MY(qe),
        ST(qe) && $Y(qe),
        wT(qe) && kY(qe)
      ].filter(Boolean),
      ...qe.columns,
      ...[
        TT(qe) && zY(qe)
      ].filter(Boolean)
    ],
    tableOptions: qe
  }), kr.current = qe.columns, qe.data = (0, import_react.useMemo)(() => (qe.state.isLoading || qe.state.showSkeletons) && !qe.data.length ? [
    ...Array(Math.min(qe.state.pagination.pageSize, 20)).fill(null)
  ].map(() => Object.assign({}, ...vu(qe.columns).map((pn) => ({
    [ws(pn)]: null
  })))) : qe.data, [
    qe.data,
    qe.state.isLoading,
    qe.state.showSkeletons
  ]);
  const Ht = LH(Object.assign(Object.assign({
    onColumnOrderChange: Te,
    onColumnSizingInfoChange: re,
    onGroupingChange: Oe,
    onPaginationChange: Kt
  }, qe), { globalFilterFn: (T = qe.filterFns) === null || T === void 0 ? void 0 : T[Ze ?? "fuzzy"] }));
  return Ht.refs = {
    actionCellRef: B,
    bottomToolbarRef: Q,
    editInputRefs: ee,
    filterInputRefs: G,
    lastSelectedRowId: k,
    searchInputRef: H,
    tableContainerRef: Y,
    tableFooterRef: oe,
    tableHeadCellRefs: J,
    tableHeadRef: se,
    tablePaperRef: U,
    topToolbarRef: ne
  }, Ht.setActionCell = (w = qe.onActionCellChange) !== null && w !== void 0 ? w : L, Ht.setCreatingRow = (pn) => {
    var hn, q;
    let Ce = pn;
    pn === true && (Ce = bY(Ht)), (q = (hn = qe == null ? void 0 : qe.onCreatingRowChange) === null || hn === void 0 ? void 0 : hn.call(qe, Ce)) !== null && q !== void 0 || te(Ce);
  }, Ht.setColumnFilterFns = (R = qe.onColumnFilterFnsChange) !== null && R !== void 0 ? R : ue, Ht.setDensity = (E = qe.onDensityChange) !== null && E !== void 0 ? E : ae, Ht.setDraggingColumn = (O = qe.onDraggingColumnChange) !== null && O !== void 0 ? O : ge, Ht.setDraggingRow = (I = qe.onDraggingRowChange) !== null && I !== void 0 ? I : ye, Ht.setEditingCell = (P = qe.onEditingCellChange) !== null && P !== void 0 ? P : Le, Ht.setEditingRow = (A = qe.onEditingRowChange) !== null && A !== void 0 ? A : tt, Ht.setGlobalFilterFn = (M = qe.onGlobalFilterFnChange) !== null && M !== void 0 ? M : ut, Ht.setHoveredColumn = (F = qe.onHoveredColumnChange) !== null && F !== void 0 ? F : Me, Ht.setHoveredRow = (D = qe.onHoveredRowChange) !== null && D !== void 0 ? D : st, Ht.setIsFullScreen = (N = qe.onIsFullScreenChange) !== null && N !== void 0 ? N : it, Ht.setShowAlertBanner = (j = qe.onShowAlertBannerChange) !== null && j !== void 0 ? j : Qt, Ht.setShowColumnFilters = (_ = qe.onShowColumnFiltersChange) !== null && _ !== void 0 ? _ : dn, Ht.setShowGlobalFilter = (z = qe.onShowGlobalFilterChange) !== null && z !== void 0 ? z : Ho, Ht.setShowToolbarDropZone = ($ = qe.onShowToolbarDropZoneChange) !== null && $ !== void 0 ? $ : Go, WY(Ht), Ht;
};
var VT = (e10) => HY(BY(e10));
var _T = (e10, t) => {
  const n = Uw(e10);
  return t === void 0 || (t >= 0 && t < Math.max(e10.startIndex - e10.overscan, 0) && n.unshift(t), t >= 0 && t > e10.endIndex + e10.overscan && n.push(t)), n;
};
var GY = (e10) => {
  var t, n, o, r;
  const { getState: s, options: { columnVirtualizerInstanceRef: a, columnVirtualizerOptions: l, enableColumnPinning: c, enableColumnVirtualization: u }, refs: { tableContainerRef: d } } = e10, { columnPinning: p, columnVisibility: m, draggingColumn: g } = s();
  if (!u)
    return;
  const b = Ie(l, {
    table: e10
  }), v = e10.getVisibleLeafColumns(), [h, y] = (0, import_react.useMemo)(() => c ? [
    e10.getLeftVisibleLeafColumns().map((O) => O.getPinnedIndex()),
    e10.getRightVisibleLeafColumns().map((O) => v.length - O.getPinnedIndex() - 1).sort((O, I) => O - I)
  ] : [[], []], [p, m, c]), C = h.length, x = y.length, T = (0, import_react.useMemo)(() => g != null && g.id ? v.findIndex((O) => O.id === (g == null ? void 0 : g.id)) : void 0, [g == null ? void 0 : g.id]), w = Yw(Object.assign({ count: v.length, estimateSize: (O) => v[O].getSize(), getScrollElement: () => d.current, horizontal: true, overscan: 3, rangeExtractor: (0, import_react.useCallback)((O) => {
    const I = _T(O, T);
    return !C && !x ? I : [
      .../* @__PURE__ */ new Set([
        ...h,
        ...I,
        ...y
      ])
    ];
  }, [h, y, T]) }, b)), R = w.getVirtualItems();
  w.virtualColumns = R;
  const E = R.length;
  if (E) {
    const O = w.getTotalSize(), I = ((t = R[C]) === null || t === void 0 ? void 0 : t.start) || 0, P = ((n = R[h.length - 1]) === null || n === void 0 ? void 0 : n.end) || 0, A = ((o = R[E - x]) === null || o === void 0 ? void 0 : o.start) || 0, M = ((r = R[E - x - 1]) === null || r === void 0 ? void 0 : r.end) || 0;
    w.virtualPaddingLeft = I - P, w.virtualPaddingRight = O - M - (x ? O - A : 0);
  }
  return a && (a.current = w), w;
};
var UY = (e10, t) => {
  var n;
  const { getRowModel: o, getState: r, options: { enableRowVirtualization: s, renderDetailPanel: a, rowVirtualizerInstanceRef: l, rowVirtualizerOptions: c }, refs: { tableContainerRef: u } } = e10, { density: d, draggingRow: p, expanded: m } = r();
  if (!s)
    return;
  const g = Ie(c, {
    table: e10
  }), b = (n = t == null ? void 0 : t.length) !== null && n !== void 0 ? n : o().rows.length, v = d === "compact" ? 37 : d === "comfortable" ? 58 : 73, h = Yw(Object.assign({ count: a ? b * 2 : b, estimateSize: (y) => a && y % 2 === 1 ? m === true ? 100 : 0 : v, getScrollElement: () => u.current, measureElement: typeof window < "u" && navigator.userAgent.indexOf("Firefox") === -1 ? (y) => y == null ? void 0 : y.getBoundingClientRect().height : void 0, overscan: 4, rangeExtractor: (0, import_react.useCallback)((y) => {
    var C;
    return _T(y, (C = p == null ? void 0 : p.index) !== null && C !== void 0 ? C : 0);
  }, [p]) }, g));
  return h.virtualRows = h.getVirtualItems(), l && (l.current = h), h;
};
var XY = (e10) => {
  const { getRowModel: t, getState: n, options: { data: o, enableGlobalFilterRankedResults: r, positionCreatingRow: s } } = e10, { creatingRow: a, expanded: l, globalFilter: c, pagination: u, rowPinning: d, sorting: p } = n();
  return (0, import_react.useMemo)(() => gT(e10), [
    a,
    o,
    r,
    l,
    t().rows,
    c,
    u.pageIndex,
    u.pageSize,
    s,
    d,
    p
  ]);
};
var Xp = ["string", "number"];
var A0 = ({ cell: e10, rowRef: t, staticColumnIndex: n, staticRowIndex: o, table: r }) => {
  var s, a, l;
  const { getState: c, options: { enableFilterMatchHighlighting: u, mrtTheme: { matchHighlightColor: d } } } = r, { column: p, row: m } = e10, { columnDef: g } = p, { globalFilter: b, globalFilterFn: v } = c(), h = p.getFilterValue();
  let y = e10.getIsAggregated() && g.AggregatedCell ? g.AggregatedCell({
    cell: e10,
    column: p,
    row: m,
    table: r,
    staticColumnIndex: n,
    staticRowIndex: o
  }) : m.getIsGrouped() && !e10.getIsGrouped() ? null : e10.getIsGrouped() && g.GroupedCell ? g.GroupedCell({
    cell: e10,
    column: p,
    row: m,
    table: r,
    staticColumnIndex: n,
    staticRowIndex: o
  }) : void 0;
  const C = y !== void 0;
  if (C || (y = e10.renderValue()), u && g.enableFilterMatchHighlighting !== false && String(y) && Xp.includes(typeof y) && (h && Xp.includes(typeof h) && ["autocomplete", "text"].includes(g.filterVariant) || b && Xp.includes(typeof b) && p.getCanGlobalFilter())) {
    const x = Bp == null ? void 0 : Bp({
      matchExactly: (h ? g._filterFn : v) !== "fuzzy",
      query: ((s = h ?? b) !== null && s !== void 0 ? s : "").toString(),
      text: y == null ? void 0 : y.toString()
    });
    ((x == null ? void 0 : x.length) > 1 || !((a = x == null ? void 0 : x[0]) === null || a === void 0) && a.match) && (y = f.jsx("span", { "aria-label": y, role: "note", children: (l = x == null ? void 0 : x.map(({ key: T, match: w, text: R }) => f.jsx(De, { "aria-hidden": "true", component: "span", sx: w ? {
      backgroundColor: d,
      borderRadius: "2px",
      color: (E) => E.palette.mode === "dark" ? E.palette.common.white : E.palette.common.black,
      padding: "2px 1px"
    } : void 0, children: R }, T))) !== null && l !== void 0 ? l : y }));
  }
  return g.Cell && !C && (y = g.Cell({
    cell: e10,
    column: p,
    renderedCellValue: y,
    row: m,
    rowRef: t,
    staticColumnIndex: n,
    staticRowIndex: o,
    table: r
  })), y;
};
var YY = (e10) => {
  var t, { cell: n, table: o } = e10, r = Je(e10, ["cell", "table"]);
  const { options: { localization: s, muiCopyButtonProps: a } } = o, { column: l, row: c } = n, { columnDef: u } = l, [d, p] = (0, import_react.useState)(false), m = (b, v) => {
    b.stopPropagation(), navigator.clipboard.writeText(v), p(true), setTimeout(() => p(false), 4e3);
  }, g = Object.assign(Object.assign(Object.assign({}, Ie(a, {
    cell: n,
    column: l,
    row: c,
    table: o
  })), Ie(u.muiCopyButtonProps, {
    cell: n,
    column: l,
    row: c,
    table: o
  })), r);
  return f.jsx(Et, Object.assign({}, jo("top"), { title: (t = g == null ? void 0 : g.title) !== null && t !== void 0 ? t : d ? s.copiedToClipboard : s.clickToCopy, children: f.jsx(vt, Object.assign({ onClick: (b) => m(b, n.getValue()), size: "small", type: "button", variant: "text" }, g, { sx: (b) => Object.assign({ backgroundColor: "transparent", border: "none", color: "inherit", cursor: "copy", fontFamily: "inherit", fontSize: "inherit", letterSpacing: "inherit", m: "-0.25rem", minWidth: "unset", py: 0, textAlign: "inherit", textTransform: "inherit" }, Ie(g == null ? void 0 : g.sx, b)), title: void 0 })) }));
};
var LT = (e10) => {
  var t, n, { cell: o, table: r } = e10, s = Je(e10, ["cell", "table"]);
  const { getState: a, options: { createDisplayMode: l, editDisplayMode: c, muiEditTextFieldProps: u }, refs: { editInputRefs: d }, setCreatingRow: p, setEditingCell: m, setEditingRow: g } = r, { column: b, row: v } = o, { columnDef: h } = b, { creatingRow: y, editingRow: C } = a(), { editSelectOptions: x, editVariant: T } = h, w = (y == null ? void 0 : y.id) === v.id, R = (C == null ? void 0 : C.id) === v.id, [E, O] = (0, import_react.useState)(() => o.getValue()), [I, P] = (0, import_react.useState)(true), A = Object.assign(Object.assign(Object.assign({}, Ie(u, {
    cell: o,
    column: b,
    row: v,
    table: r
  })), Ie(h.muiEditTextFieldProps, {
    cell: o,
    column: b,
    row: v,
    table: r
  })), s), M = Ie(x, {
    cell: o,
    column: b,
    row: v,
    table: r
  }), F = T === "select" || (A == null ? void 0 : A.select), D = (z) => {
    v._valuesCache[b.id] = z, w ? p(v) : R && g(v);
  }, N = (z) => {
    var $;
    ($ = A.onChange) === null || $ === void 0 || $.call(A, z), O(z.target.value), F && D(z.target.value);
  }, j = (z) => {
    var $;
    ($ = A.onBlur) === null || $ === void 0 || $.call(A, z), D(E), m(null);
  }, _ = (z) => {
    var $, k;
    ($ = A.onKeyDown) === null || $ === void 0 || $.call(A, z), z.key === "Enter" && !z.shiftKey && I && ((k = d.current[b.id]) === null || k === void 0 || k.blur());
  };
  return h.Edit ? f.jsx(f.Fragment, { children: (t = h.Edit) === null || t === void 0 ? void 0 : t.call(h, { cell: o, column: b, row: v, table: r }) }) : f.jsx(_n, Object.assign({ disabled: Ie(h.enableEditing, v) === false, fullWidth: true, inputRef: (z) => {
    z && (d.current[b.id] = z, A.inputRef && (A.inputRef = z));
  }, label: ["custom", "modal"].includes(w ? l : c) ? h.header : void 0, margin: "none", name: b.id, placeholder: ["custom", "modal"].includes(w ? l : c) ? void 0 : h.header, select: F, size: "small", value: E ?? "", variant: "standard" }, A, { InputProps: Object.assign(Object.assign(Object.assign({}, A.variant !== "outlined" ? { disableUnderline: c === "table" } : {}), A.InputProps), { sx: (z) => {
    var $;
    return Object.assign({ mb: 0 }, Ie(($ = A == null ? void 0 : A.InputProps) === null || $ === void 0 ? void 0 : $.sx, z));
  } }), SelectProps: Object.assign({ MenuProps: { disableScrollLock: true } }, A.SelectProps), inputProps: Object.assign({ autoComplete: "new-password" }, A.inputProps), onBlur: j, onChange: N, onClick: (z) => {
    var $;
    z.stopPropagation(), ($ = A == null ? void 0 : A.onClick) === null || $ === void 0 || $.call(A, z);
  }, onKeyDown: _, onCompositionStart: () => P(false), onCompositionEnd: () => P(true), children: (n = A.children) !== null && n !== void 0 ? n : M == null ? void 0 : M.map((z) => {
    const { label: $, value: k } = vr(z);
    return f.jsx(Lo, { sx: {
      alignItems: "center",
      display: "flex",
      gap: "0.5rem",
      m: 0
    }, value: k, children: $ }, k);
  }) }));
};
var BT = (e10) => {
  var t, n, o, r, s, { cell: a, numRows: l, rowRef: c, staticColumnIndex: u, staticRowIndex: d, table: p } = e10, m = Je(e10, ["cell", "numRows", "rowRef", "staticColumnIndex", "staticRowIndex", "table"]);
  const g = Sn(), { getState: b, options: { columnResizeDirection: v, columnResizeMode: h, createDisplayMode: y, editDisplayMode: C, enableCellActions: x, enableClickToCopy: T, enableColumnOrdering: w, enableColumnPinning: R, enableGrouping: E, enableKeyboardShortcuts: O, layoutMode: I, mrtTheme: { draggingBorderColor: P }, muiSkeletonProps: A, muiTableBodyCellProps: M }, setHoveredColumn: F } = p, { actionCell: D, columnSizingInfo: N, creatingRow: j, density: _, draggingColumn: z, draggingRow: $, editingCell: k, editingRow: B, hoveredColumn: Q, hoveredRow: ee, isLoading: G, showSkeletons: H } = b(), { column: Y, row: J } = a, { columnDef: U } = Y, { columnDefType: ne } = U, se = { cell: a, column: Y, row: J, table: p }, oe = Object.assign(Object.assign(Object.assign({}, Ie(M, se)), Ie(U.muiTableBodyCellProps, se)), m), W = Ie(A, {
    cell: a,
    column: Y,
    row: J,
    table: p
  }), [Z, L] = (0, import_react.useState)(100);
  (0, import_react.useEffect)(() => {
    if (!G && !H || Z !== 100)
      return;
    const ye = Y.getSize();
    L(ne === "display" ? ye / 2 : Math.round(Math.random() * (ye - ye / 3) + ye / 3));
  }, [G, H]);
  const ie = (0, import_react.useMemo)(() => {
    const ye = (z == null ? void 0 : z.id) === Y.id, Ee = (Q == null ? void 0 : Q.id) === Y.id, Le = ($ == null ? void 0 : $.id) === J.id, Ae = (ee == null ? void 0 : ee.id) === J.id, tt = Y.getIsFirstColumn(), Ze = Y.getIsLastColumn(), ut = l && d === l - 1, me = N.isResizingColumn === Y.id, Oe = me && h === "onChange", he = Oe ? `2px solid ${P} !important` : ye || Le ? `1px dashed ${g.palette.grey[500]} !important` : Ee || Ae || me ? `2px dashed ${P} !important` : void 0;
    return Oe ? v === "ltr" ? { borderRight: he } : { borderLeft: he } : he ? {
      borderBottom: Le || Ae || ut && !me ? he : void 0,
      borderLeft: ye || Ee || (Le || Ae) && tt ? he : void 0,
      borderRight: ye || Ee || (Le || Ae) && Ze ? he : void 0,
      borderTop: Le || Ae ? he : void 0
    } : void 0;
  }, [
    N.isResizingColumn,
    z,
    $,
    Q,
    ee,
    d
  ]), te = R && U.columnDefType !== "group" && Y.getIsPinned(), le = vT({ cell: a, table: p }), ue = le && !["custom", "modal"].includes(C) && (C === "table" || (B == null ? void 0 : B.id) === J.id || (k == null ? void 0 : k.id) === a.id) && !J.getIsGrouped(), ve = le && y === "row" && (j == null ? void 0 : j.id) === J.id, Te = (Ie(T, a) === true || Ie(U.enableClickToCopy, a) === true) && !["context-menu", false].includes(
    // @ts-ignore
    Ie(U.enableClickToCopy, a)
  ), Re = Ie(x, a), re = {
    cell: a,
    table: p,
    staticColumnIndex: u,
    staticRowIndex: d
  }, X = (ye) => {
    var Ee;
    (Ee = oe == null ? void 0 : oe.onDoubleClick) === null || Ee === void 0 || Ee.call(oe, ye), yT({ cell: a, table: p });
  }, ae = (ye) => {
    var Ee;
    (Ee = oe == null ? void 0 : oe.onDragEnter) === null || Ee === void 0 || Ee.call(oe, ye), E && (Q == null ? void 0 : Q.id) === "drop-zone" && F(null), w && z && F(U.enableColumnOrdering !== false ? Y : null);
  }, ce = (ye) => {
    U.enableColumnOrdering !== false && ye.preventDefault();
  }, ge = (ye) => {
    var Ee;
    (Ee = oe == null ? void 0 : oe.onContextMenu) === null || Ee === void 0 || Ee.call(oe, ye), Re && (ye.preventDefault(), p.setActionCell(a), p.refs.actionCellRef.current = ye.currentTarget);
  }, Se = (ye) => {
    var Ee;
    Ch({
      cell: a,
      cellValue: a.getValue(),
      event: ye,
      table: p
    }), (Ee = oe == null ? void 0 : oe.onKeyDown) === null || Ee === void 0 || Ee.call(oe, ye);
  };
  return f.jsx(zt, Object.assign({ align: g.direction === "rtl" ? "right" : "left", "data-index": u, "data-pinned": !!te || void 0, tabIndex: O ? 0 : void 0 }, oe, { onKeyDown: Se, onContextMenu: ge, onDoubleClick: X, onDragEnter: ae, onDragOver: ce, sx: (ye) => Object.assign(Object.assign({ "&:hover": {
    outline: (D == null ? void 0 : D.id) === a.id || C === "cell" && le || C === "table" && (ve || ue) ? `1px solid ${ye.palette.grey[500]}` : void 0,
    textOverflow: "clip"
  }, alignItems: I != null && I.startsWith("grid") ? "center" : void 0, cursor: Re ? "context-menu" : le && C === "cell" ? "pointer" : "inherit", outline: (D == null ? void 0 : D.id) === a.id ? `1px solid ${ye.palette.grey[500]}` : void 0, outlineOffset: "-1px", overflow: "hidden", p: _ === "compact" ? ne === "display" ? "0 0.5rem" : "0.5rem" : _ === "comfortable" ? ne === "display" ? "0.5rem 0.75rem" : "1rem" : ne === "display" ? "1rem 1.25rem" : "1.5rem", textOverflow: ne !== "display" ? "ellipsis" : void 0, whiteSpace: J.getIsPinned() || _ === "compact" ? "nowrap" : "normal" }, Eh({
    column: Y,
    table: p,
    tableCellProps: oe,
    theme: ye
  })), ie), children: (t = oe.children) !== null && t !== void 0 ? t : f.jsxs(f.Fragment, { children: [a.getIsPlaceholder() ? (o = (n = U.PlaceholderCell) === null || n === void 0 ? void 0 : n.call(U, { cell: a, column: Y, row: J, table: p })) !== null && o !== void 0 ? o : null : H !== false && (G || H) ? f.jsx(ll, Object.assign({ animation: "wave", height: 20, width: Z }, W)) : ne === "display" && (["mrt-row-expand", "mrt-row-numbers", "mrt-row-select"].includes(Y.id) || !J.getIsGrouped()) ? (r = U.Cell) === null || r === void 0 ? void 0 : r.call(U, {
    cell: a,
    column: Y,
    renderedCellValue: a.renderValue(),
    row: J,
    rowRef: c,
    staticColumnIndex: u,
    staticRowIndex: d,
    table: p
  }) : ve || ue ? f.jsx(LT, { cell: a, table: p }) : Te && U.enableClickToCopy !== false ? f.jsx(YY, { cell: a, table: p, children: f.jsx(A0, Object.assign({}, re)) }) : f.jsx(A0, Object.assign({}, re)), a.getIsGrouped() && !U.GroupedCell && f.jsxs(f.Fragment, { children: [" (", (s = J.subRows) === null || s === void 0 ? void 0 : s.length, ")"] })] }) }));
};
var ZY = (0, import_react.memo)(BT, (e10, t) => t.cell === e10.cell);
var qY = (e10) => {
  var { parentRowRef: t, row: n, rowVirtualizer: o, staticRowIndex: r, table: s, virtualRow: a } = e10, l = Je(e10, ["parentRowRef", "row", "rowVirtualizer", "staticRowIndex", "table", "virtualRow"]);
  const { getState: c, getVisibleLeafColumns: u, options: { layoutMode: d, mrtTheme: { baseBackgroundColor: p }, muiDetailPanelProps: m, muiTableBodyRowProps: g, renderDetailPanel: b } } = s, { isLoading: v } = c(), h = Ie(g, {
    isDetailPanel: true,
    row: n,
    staticRowIndex: r,
    table: s
  }), y = Object.assign(Object.assign({}, Ie(m, {
    row: n,
    table: s
  })), l), C = !v && (b == null ? void 0 : b({ row: n, table: s }));
  return f.jsx(Pr, Object.assign({ className: "Mui-TableBodyCell-DetailPanel", "data-index": b ? r * 2 + 1 : r, ref: (x) => {
    var T;
    x && ((T = o == null ? void 0 : o.measureElement) === null || T === void 0 || T.call(o, x));
  } }, h, { sx: (x) => {
    var T, w;
    return Object.assign({ display: d != null && d.startsWith("grid") ? "flex" : void 0, position: a ? "absolute" : void 0, top: a ? `${(w = (T = t.current) === null || T === void 0 ? void 0 : T.getBoundingClientRect()) === null || w === void 0 ? void 0 : w.height}px` : void 0, transform: a ? `translateY(${a == null ? void 0 : a.start}px)` : void 0, width: "100%" }, Ie(h == null ? void 0 : h.sx, x));
  }, children: f.jsx(zt, Object.assign({ className: "Mui-TableBodyCell-DetailPanel", colSpan: u().length }, y, { sx: (x) => Object.assign({ backgroundColor: a ? p : void 0, borderBottom: n.getIsExpanded() ? void 0 : "none", display: d != null && d.startsWith("grid") ? "flex" : void 0, py: C && n.getIsExpanded() ? "1rem" : 0, transition: a ? void 0 : "all 150ms ease-in-out", width: "100%" }, Ie(y == null ? void 0 : y.sx, x)), children: a ? n.getIsExpanded() && C : f.jsx(qr, { in: n.getIsExpanded(), mountOnEnter: true, unmountOnExit: true, children: C }) })) }));
};
var Bc = (e10) => {
  var t, n, o, r, { columnVirtualizer: s, numRows: a, pinnedRowIds: l, row: c, rowVirtualizer: u, staticRowIndex: d, table: p, virtualRow: m } = e10, g = Je(e10, ["columnVirtualizer", "numRows", "pinnedRowIds", "row", "rowVirtualizer", "staticRowIndex", "table", "virtualRow"]);
  const b = Sn(), { getState: v, options: { enableRowOrdering: h, enableRowPinning: y, enableStickyFooter: C, enableStickyHeader: x, layoutMode: T, memoMode: w, mrtTheme: { baseBackgroundColor: R, pinnedRowBackgroundColor: E, selectedRowBackgroundColor: O }, muiTableBodyRowProps: I, renderDetailPanel: P, rowPinningDisplayMode: A }, refs: { tableFooterRef: M, tableHeadRef: F }, setHoveredRow: D } = p, { density: N, draggingColumn: j, draggingRow: _, editingCell: z, editingRow: $, hoveredRow: k, isFullScreen: B, rowPinning: Q } = v(), ee = c.getVisibleCells(), { virtualColumns: G, virtualPaddingLeft: H, virtualPaddingRight: Y } = s ?? {}, J = yu({ row: c, table: p }), U = y && c.getIsPinned(), ne = (_ == null ? void 0 : _.id) === c.id, se = (k == null ? void 0 : k.id) === c.id, oe = Object.assign(Object.assign({}, Ie(I, {
    row: c,
    staticRowIndex: d,
    table: p
  })), g), [W, Z] = (0, import_react.useMemo)(() => !y || !(A != null && A.includes("sticky")) || !l || !c.getIsPinned() ? [] : [
    [...l].reverse().indexOf(c.id),
    l.indexOf(c.id)
  ], [l, Q]), L = (x || B) && ((t = F.current) === null || t === void 0 ? void 0 : t.clientHeight) || 0, ie = C && ((n = M.current) === null || n === void 0 ? void 0 : n.clientHeight) || 0, te = Ie(oe == null ? void 0 : oe.sx, b), le = N === "compact" ? 37 : N === "comfortable" ? 53 : 69, ve = (
    /* @ts-ignore */
    parseInt((r = (o = oe == null ? void 0 : oe.style) === null || o === void 0 ? void 0 : o.height) !== null && r !== void 0 ? r : te == null ? void 0 : te.height, 10) || void 0 || le
  ), Te = (ce) => {
    h && _ && D(c);
  }, Re = (ce) => {
    ce.preventDefault();
  }, re = (0, import_react.useRef)(null), X = J ? O : U ? E : void 0, ae = (oe == null ? void 0 : oe.hover) !== false ? J ? X : b.palette.mode === "dark" ? `${Hn(R, 0.3)}` : `${lo(R, 0.3)}` : void 0;
  return f.jsxs(f.Fragment, { children: [f.jsxs(Pr, Object.assign({ "data-index": P ? d * 2 : d, "data-pinned": !!U || void 0, "data-selected": J || void 0, onDragEnter: Te, onDragOver: Re, ref: (ce) => {
    ce && (re.current = ce, u == null || u.measureElement(ce));
  }, selected: J }, oe, { style: Object.assign({ transform: m ? `translateY(${m.start}px)` : void 0 }, oe == null ? void 0 : oe.style), sx: (ce) => Object.assign({ "&:hover td:after": ae ? Object.assign({ backgroundColor: We(ae, 0.3) }, fm) : void 0, backgroundColor: `${R} !important`, bottom: !m && W !== void 0 && U ? `${W * ve + (C ? ie - 1 : 0)}px` : void 0, boxSizing: "border-box", display: T != null && T.startsWith("grid") ? "flex" : void 0, opacity: U ? 0.97 : ne || se ? 0.5 : 1, position: m ? "absolute" : A != null && A.includes("sticky") && U ? "sticky" : "relative", td: Object.assign({}, FT({ table: p, theme: ce })), "td:after": X ? Object.assign({ backgroundColor: X }, fm) : void 0, top: m ? 0 : Z !== void 0 && U ? `${Z * ve + (x || B ? L - 1 : 0)}px` : void 0, transition: m ? "none" : "all 150ms ease-in-out", width: "100%", zIndex: A != null && A.includes("sticky") && U ? 2 : 0 }, te), children: [H ? f.jsx("td", { style: { display: "flex", width: H } }) : null, (G ?? ee).map((ce, ge) => {
    let Se = ce;
    s && (ge = ce.index, Se = ee[ge]);
    const ye = {
      cell: Se,
      numRows: a,
      rowRef: re,
      staticColumnIndex: ge,
      staticRowIndex: d,
      table: p
    }, Ee = `${Se.id}-${d}`;
    return Se ? w === "cells" && Se.column.columnDef.columnDefType === "data" && !j && !_ && (z == null ? void 0 : z.id) !== Se.id && ($ == null ? void 0 : $.id) !== c.id ? f.jsx(ZY, Object.assign({}, ye), Ee) : f.jsx(BT, Object.assign({}, ye), Ee) : null;
  }), Y ? f.jsx("td", { style: { display: "flex", width: Y } }) : null] })), P && !c.getIsGrouped() && f.jsx(qY, { parentRowRef: re, row: c, rowVirtualizer: u, staticRowIndex: d, table: p, virtualRow: m })] });
};
var Yp = (0, import_react.memo)(Bc, (e10, t) => e10.row === t.row && e10.staticRowIndex === t.staticRowIndex);
var zT = (e10) => {
  var t, n, o, r, s, a, { columnVirtualizer: l, table: c } = e10, u = Je(e10, ["columnVirtualizer", "table"]);
  const { getBottomRows: d, getIsSomeRowsPinned: p, getRowModel: m, getState: g, getTopRows: b, options: { enableStickyFooter: v, enableStickyHeader: h, layoutMode: y, localization: C, memoMode: x, muiTableBodyProps: T, renderDetailPanel: w, renderEmptyRowsFallback: R, rowPinningDisplayMode: E }, refs: { tableFooterRef: O, tableHeadRef: I, tablePaperRef: P } } = c, { columnFilters: A, globalFilter: M, isFullScreen: F, rowPinning: D } = g(), N = Object.assign(Object.assign({}, Ie(T, { table: c })), u), j = (h || F) && ((t = I.current) === null || t === void 0 ? void 0 : t.clientHeight) || 0, _ = v && ((n = O.current) === null || n === void 0 ? void 0 : n.clientHeight) || 0, z = (0, import_react.useMemo)(() => {
    var ee, G;
    return !(!((ee = D.bottom) === null || ee === void 0) && ee.length) && !(!((G = D.top) === null || G === void 0) && G.length) ? [] : m().rows.filter((H) => H.getIsPinned()).map((H) => H.id);
  }, [D, m().rows]), $ = XY(c), k = UY(c, $), { virtualRows: B } = k ?? {}, Q = {
    columnVirtualizer: l,
    numRows: $.length,
    table: c
  };
  return f.jsxs(f.Fragment, { children: [!(E != null && E.includes("sticky")) && p("top") && f.jsx(vs, Object.assign({}, N, { sx: (ee) => Object.assign({ display: y != null && y.startsWith("grid") ? "grid" : void 0, position: "sticky", top: j - 1, zIndex: 1 }, Ie(N == null ? void 0 : N.sx, ee)), children: b().map((ee, G) => {
    const H = Object.assign(Object.assign({}, Q), {
      row: ee,
      staticRowIndex: G
    });
    return x === "rows" ? f.jsx(Yp, Object.assign({}, H), ee.id) : f.jsx(Bc, Object.assign({}, H), ee.id);
  }) })), f.jsx(vs, Object.assign({}, N, { sx: (ee) => Object.assign({ display: y != null && y.startsWith("grid") ? "grid" : void 0, height: k ? `${k.getTotalSize()}px` : void 0, minHeight: $.length ? void 0 : "100px", position: "relative" }, Ie(N == null ? void 0 : N.sx, ee)), children: (o = N == null ? void 0 : N.children) !== null && o !== void 0 ? o : $.length ? f.jsx(f.Fragment, { children: (B ?? $).map((ee, G) => {
    let H = ee;
    if (k) {
      if (w) {
        if (ee.index % 2 === 1)
          return null;
        G = ee.index / 2;
      } else
        G = ee.index;
      H = $[G];
    }
    const Y = Object.assign(Object.assign({}, Q), {
      pinnedRowIds: z,
      row: H,
      rowVirtualizer: k,
      staticRowIndex: G,
      virtualRow: k ? ee : void 0
    }), J = `${H.id}-${H.index}`;
    return x === "rows" ? f.jsx(Yp, Object.assign({}, Y), J) : f.jsx(Bc, Object.assign({}, Y), J);
  }) }) : f.jsx("tr", { style: {
    display: y != null && y.startsWith("grid") ? "grid" : void 0
  }, children: f.jsx("td", { colSpan: c.getVisibleLeafColumns().length, style: {
    display: y != null && y.startsWith("grid") ? "grid" : void 0
  }, children: (r = R == null ? void 0 : R({ table: c })) !== null && r !== void 0 ? r : f.jsx(Fe, { sx: {
    color: "text.secondary",
    fontStyle: "italic",
    maxWidth: `min(100vw, ${(a = (s = P.current) === null || s === void 0 ? void 0 : s.clientWidth) !== null && a !== void 0 ? a : 360}px)`,
    py: "2rem",
    textAlign: "center",
    width: "100%"
  }, children: M || A.length ? C.noResultsFound : C.noRecordsToDisplay }) }) }) })), !(E != null && E.includes("sticky")) && p("bottom") && f.jsx(vs, Object.assign({}, N, { sx: (ee) => Object.assign({ bottom: _ - 1, display: y != null && y.startsWith("grid") ? "grid" : void 0, position: "sticky", zIndex: 1 }, Ie(N == null ? void 0 : N.sx, ee)), children: d().map((ee, G) => {
    const H = Object.assign(Object.assign({}, Q), {
      row: ee,
      staticRowIndex: G
    });
    return x === "rows" ? f.jsx(Yp, Object.assign({}, H), ee.id) : f.jsx(Bc, Object.assign({}, H), ee.id);
  }) }))] });
};
var JY = (0, import_react.memo)(zT, (e10, t) => e10.table.options.data === t.table.options.data);
var KY = (e10) => {
  var t, n, o, { footer: r, staticColumnIndex: s, table: a } = e10, l = Je(e10, ["footer", "staticColumnIndex", "table"]);
  const c = Sn(), { getState: u, options: { enableColumnPinning: d, muiTableFooterCellProps: p, enableKeyboardShortcuts: m } } = a, { density: g } = u(), { column: b } = r, { columnDef: v } = b, { columnDefType: h } = v, y = d && v.columnDefType !== "group" && b.getIsPinned(), C = { column: b, table: a }, x = Object.assign(Object.assign(Object.assign({}, Ie(p, C)), Ie(v.muiTableFooterCellProps, C)), l), T = (w) => {
    var R;
    Ch({
      event: w,
      cellValue: r.column.columnDef.footer,
      table: a
    }), (R = x == null ? void 0 : x.onKeyDown) === null || R === void 0 || R.call(x, w);
  };
  return f.jsx(zt, Object.assign({ align: h === "group" ? "center" : c.direction === "rtl" ? "right" : "left", colSpan: r.colSpan, "data-index": s, "data-pinned": !!y || void 0, tabIndex: m ? 0 : void 0, variant: "footer" }, x, { onKeyDown: T, sx: (w) => Object.assign(Object.assign({ fontWeight: "bold", p: g === "compact" ? "0.5rem" : g === "comfortable" ? "1rem" : "1.5rem", verticalAlign: "top" }, Eh({
    column: b,
    header: r,
    table: a,
    tableCellProps: x,
    theme: w
  })), Ie(x == null ? void 0 : x.sx, w)), children: (t = x.children) !== null && t !== void 0 ? t : r.isPlaceholder ? null : (o = (n = Ie(v.Footer, {
    column: b,
    footer: r,
    table: a
  })) !== null && n !== void 0 ? n : v.footer) !== null && o !== void 0 ? o : null }));
};
var QY = (e10) => {
  var t, { columnVirtualizer: n, footerGroup: o, table: r } = e10, s = Je(e10, ["columnVirtualizer", "footerGroup", "table"]);
  const { options: { layoutMode: a, mrtTheme: { baseBackgroundColor: l }, muiTableFooterRowProps: c } } = r, { virtualColumns: u, virtualPaddingLeft: d, virtualPaddingRight: p } = n ?? {};
  if (!(!((t = o.headers) === null || t === void 0) && t.some((g) => typeof g.column.columnDef.footer == "string" && !!g.column.columnDef.footer || g.column.columnDef.Footer)))
    return null;
  const m = Object.assign(Object.assign({}, Ie(c, {
    footerGroup: o,
    table: r
  })), s);
  return f.jsxs(Pr, Object.assign({}, m, { sx: (g) => Object.assign({ backgroundColor: l, display: a != null && a.startsWith("grid") ? "flex" : void 0, position: "relative", width: "100%" }, Ie(m == null ? void 0 : m.sx, g)), children: [d ? f.jsx("th", { style: { display: "flex", width: d } }) : null, (u ?? o.headers).map((g, b) => {
    let v = g;
    return n && (b = g.index, v = o.headers[b]), v ? f.jsx(KY, { footer: v, staticColumnIndex: b, table: r }, v.id) : null;
  }), p ? f.jsx("th", { style: { display: "flex", width: p } }) : null] }));
};
var eZ = (e10) => {
  var { columnVirtualizer: t, table: n } = e10, o = Je(e10, ["columnVirtualizer", "table"]);
  const { getState: r, options: { enableStickyFooter: s, layoutMode: a, muiTableFooterProps: l }, refs: { tableFooterRef: c } } = n, { isFullScreen: u } = r(), d = Object.assign(Object.assign({}, Ie(l, {
    table: n
  })), o), p = (u || s) && s !== false, m = n.getFooterGroups();
  return m.some((g) => {
    var b;
    return (b = g.headers) === null || b === void 0 ? void 0 : b.some((v) => typeof v.column.columnDef.footer == "string" && !!v.column.columnDef.footer || v.column.columnDef.Footer);
  }) ? f.jsx(rS, Object.assign({}, d, { ref: (g) => {
    c.current = g, d != null && d.ref && (d.ref.current = g);
  }, sx: (g) => Object.assign({ bottom: p ? 0 : void 0, display: a != null && a.startsWith("grid") ? "grid" : void 0, opacity: p ? 0.97 : void 0, outline: p ? g.palette.mode === "light" ? `1px solid ${g.palette.grey[300]}` : `1px solid ${g.palette.grey[700]}` : void 0, position: p ? "sticky" : "relative", zIndex: p ? 1 : void 0 }, Ie(d == null ? void 0 : d.sx, g)), children: m.map((g) => f.jsx(QY, { columnVirtualizer: t, footerGroup: g, table: n }, g.id)) })) : null;
};
var tZ = (e10) => [
  {
    divider: false,
    label: e10.filterFuzzy,
    option: "fuzzy",
    symbol: "≈"
  },
  {
    divider: false,
    label: e10.filterContains,
    option: "contains",
    symbol: "*"
  },
  {
    divider: false,
    label: e10.filterStartsWith,
    option: "startsWith",
    symbol: "a"
  },
  {
    divider: true,
    label: e10.filterEndsWith,
    option: "endsWith",
    symbol: "z"
  },
  {
    divider: false,
    label: e10.filterEquals,
    option: "equals",
    symbol: "="
  },
  {
    divider: true,
    label: e10.filterNotEquals,
    option: "notEquals",
    symbol: "≠"
  },
  {
    divider: false,
    label: e10.filterBetween,
    option: "between",
    symbol: "⇿"
  },
  {
    divider: true,
    label: e10.filterBetweenInclusive,
    option: "betweenInclusive",
    symbol: "⬌"
  },
  {
    divider: false,
    label: e10.filterGreaterThan,
    option: "greaterThan",
    symbol: ">"
  },
  {
    divider: false,
    label: e10.filterGreaterThanOrEqualTo,
    option: "greaterThanOrEqualTo",
    symbol: "≥"
  },
  {
    divider: false,
    label: e10.filterLessThan,
    option: "lessThan",
    symbol: "<"
  },
  {
    divider: true,
    label: e10.filterLessThanOrEqualTo,
    option: "lessThanOrEqualTo",
    symbol: "≤"
  },
  {
    divider: false,
    label: e10.filterEmpty,
    option: "empty",
    symbol: "∅"
  },
  {
    divider: false,
    label: e10.filterNotEmpty,
    option: "notEmpty",
    symbol: "!∅"
  }
];
var Cc = ["between", "betweenInclusive", "inNumberRange"];
var Zp = ["empty", "notEmpty"];
var nZ = ["arrIncludesSome", "arrIncludesAll", "arrIncludes"];
var oZ = ["range-slider", "date-range", "datetime-range", "range"];
var Ph = (e10) => {
  var t, n, o, r, { anchorEl: s, header: a, onSelect: l, setAnchorEl: c, setFilterValue: u, table: d } = e10, p = Je(e10, ["anchorEl", "header", "onSelect", "setAnchorEl", "setFilterValue", "table"]);
  const { getState: m, options: { columnFilterModeOptions: g, globalFilterModeOptions: b, localization: v, mrtTheme: { menuBackgroundColor: h }, renderColumnFilterModeMenuItems: y, renderGlobalFilterModeMenuItems: C }, setColumnFilterFns: x, setGlobalFilterFn: T } = d, { density: w, globalFilterFn: R } = m(), { column: E } = a ?? {}, { columnDef: O } = E ?? {}, I = E == null ? void 0 : E.getFilterValue();
  let P = (t = O == null ? void 0 : O.columnFilterModeOptions) !== null && t !== void 0 ? t : g;
  oZ.includes(O == null ? void 0 : O.filterVariant) && (P = [
    ...Cc,
    ...P ?? []
  ].filter((D) => Cc.includes(D)));
  const A = (0, import_react.useMemo)(() => tZ(v).filter((D) => O ? P === void 0 || (P == null ? void 0 : P.includes(D.option)) : (!b || b.includes(D.option)) && ["contains", "fuzzy", "startsWith"].includes(D.option)), []), M = (D) => {
    var N, j;
    const _ = (N = O == null ? void 0 : O._filterFn) !== null && N !== void 0 ? N : "";
    !a || !E ? T(D) : D !== _ && (x((z) => Object.assign(Object.assign({}, z), { [a.id]: D })), Zp.includes(D) ? I !== " " && !Zp.includes(_) ? E.setFilterValue(" ") : I && E.setFilterValue(I) : (O == null ? void 0 : O.filterVariant) === "multi-select" || nZ.includes(D) ? I instanceof String || I != null && I.length ? (E.setFilterValue([]), u == null || u([])) : I && E.setFilterValue(I) : !((j = O == null ? void 0 : O.filterVariant) === null || j === void 0) && j.includes("range") || Cc.includes(D) ? !Array.isArray(I) || !(I != null && I.every((z) => z === "")) && !Cc.includes(_) ? (E.setFilterValue(["", ""]), u == null || u("")) : E.setFilterValue(I) : Array.isArray(I) ? (E.setFilterValue(""), u == null || u("")) : I === " " && Zp.includes(_) ? E.setFilterValue(void 0) : E.setFilterValue(I)), c(null), l == null || l();
  }, F = a && O ? O._filterFn : R;
  return f.jsx(si, Object.assign({ MenuListProps: {
    dense: w === "compact",
    sx: {
      backgroundColor: h
    }
  }, anchorEl: s, anchorOrigin: { horizontal: "right", vertical: "center" }, disableScrollLock: true, onClose: () => c(null), open: !!s }, p, { children: (r = a && E && O ? (o = (n = O.renderColumnFilterModeMenuItems) === null || n === void 0 ? void 0 : n.call(O, {
    column: E,
    internalFilterOptions: A,
    onSelectFilterMode: M,
    table: d
  })) !== null && o !== void 0 ? o : y == null ? void 0 : y({
    column: E,
    internalFilterOptions: A,
    onSelectFilterMode: M,
    table: d
  }) : C == null ? void 0 : C({
    internalFilterOptions: A,
    onSelectFilterMode: M,
    table: d
  })) !== null && r !== void 0 ? r : A.map(({ divider: D, label: N, option: j, symbol: _ }, z) => f.jsx(Dn, { divider: D, icon: _, label: N, onClick: () => M(j), selected: j === F, table: d, value: j }, z)) }));
};
var rZ = (e10) => {
  var t, n, o, r, s, a, l, c, u, d, { anchorEl: p, header: m, setAnchorEl: g, table: b } = e10, v = Je(e10, ["anchorEl", "header", "setAnchorEl", "table"]);
  const { getAllLeafColumns: h, getState: y, options: { columnFilterDisplayMode: C, columnFilterModeOptions: x, enableColumnFilterModes: T, enableColumnFilters: w, enableColumnPinning: R, enableColumnResizing: E, enableGrouping: O, enableHiding: I, enableSorting: P, enableSortingRemoval: A, icons: { ClearAllIcon: M, DynamicFeedIcon: F, FilterListIcon: D, FilterListOffIcon: N, PushPinIcon: j, RestartAltIcon: _, SortIcon: z, ViewColumnIcon: $, VisibilityOffIcon: k }, localization: B, mrtTheme: { menuBackgroundColor: Q }, renderColumnActionsMenuItems: ee }, refs: { filterInputRefs: G }, setColumnFilterFns: H, setColumnOrder: Y, setColumnSizingInfo: J, setShowColumnFilters: U } = b, { column: ne } = m, { columnDef: se } = ne, { columnSizing: oe, columnVisibility: W, density: Z, showColumnFilters: L } = y(), ie = ne.getFilterValue(), [te, le] = (0, import_react.useState)(null), ue = () => {
    ne.clearSorting(), g(null);
  }, ve = () => {
    ne.toggleSorting(false), g(null);
  }, Te = () => {
    ne.toggleSorting(true), g(null);
  }, Re = () => {
    J((Ze) => Object.assign(Object.assign({}, Ze), { isResizingColumn: false })), ne.resetSize(), g(null);
  }, re = () => {
    ne.toggleVisibility(false), g(null);
  }, X = (Ze) => {
    ne.pin(Ze), g(null);
  }, ae = () => {
    ne.toggleGrouping(), Y((Ze) => ["mrt-row-expand", ...Ze]), g(null);
  }, ce = () => {
    ne.setFilterValue(void 0), g(null), ["empty", "notEmpty"].includes(se._filterFn) && H((Ze) => {
      var ut;
      return Object.assign(Object.assign({}, Ze), { [m.id]: (ut = Le == null ? void 0 : Le[0]) !== null && ut !== void 0 ? ut : "fuzzy" });
    });
  }, ge = () => {
    U(true), queueMicrotask(() => {
      var Ze;
      return (Ze = G.current[`${ne.id}-0`]) === null || Ze === void 0 ? void 0 : Ze.focus();
    }), g(null);
  }, Se = () => {
    h().filter((Ze) => Ze.columnDef.enableHiding !== false).forEach((Ze) => Ze.toggleVisibility(true)), g(null);
  }, ye = (Ze) => {
    Ze.stopPropagation(), le(Ze.currentTarget);
  }, Ee = !!se.filterSelectOptions, Le = (t = se == null ? void 0 : se.columnFilterModeOptions) !== null && t !== void 0 ? t : x, Ae = T && se.enableColumnFilterModes !== false && !Ee && (Le === void 0 || !!(Le != null && Le.length)), tt = [
    ...P && ne.getCanSort() ? [
      A !== false && f.jsx(Dn, { icon: f.jsx(M, {}), label: B.clearSort, onClick: ue, table: b }, 0),
      f.jsx(Dn, { disabled: ne.getIsSorted() === "asc", icon: f.jsx(z, { style: { transform: "rotate(180deg) scaleX(-1)" } }), label: (n = B.sortByColumnAsc) === null || n === void 0 ? void 0 : n.replace("{column}", String(se.header)), onClick: ve, table: b }, 1),
      f.jsx(Dn, { disabled: ne.getIsSorted() === "desc", divider: w || O || I, icon: f.jsx(z, {}), label: (o = B.sortByColumnDesc) === null || o === void 0 ? void 0 : o.replace("{column}", String(se.header)), onClick: Te, table: b }, 2)
    ] : [],
    ...w && ne.getCanFilter() ? [
      f.jsx(Dn, { disabled: !ie || Array.isArray(ie) && !ie.filter((Ze) => Ze).length, icon: f.jsx(N, {}), label: B.clearFilter, onClick: ce, table: b }, 3),
      C === "subheader" && f.jsx(Dn, { disabled: L && !T, divider: O || I, icon: f.jsx(D, {}), label: (r = B.filterByColumn) === null || r === void 0 ? void 0 : r.replace("{column}", String(se.header)), onClick: L ? ye : ge, onOpenSubMenu: Ae ? ye : void 0, table: b }, 4),
      Ae && f.jsx(Ph, { anchorEl: te, header: m, onSelect: ge, setAnchorEl: le, table: b }, 5)
    ].filter(Boolean) : [],
    ...O && ne.getCanGroup() ? [
      f.jsx(Dn, { divider: R, icon: f.jsx(F, {}), label: (s = B[ne.getIsGrouped() ? "ungroupByColumn" : "groupByColumn"]) === null || s === void 0 ? void 0 : s.replace("{column}", String(se.header)), onClick: ae, table: b }, 6)
    ] : [],
    ...R && ne.getCanPin() ? [
      f.jsx(Dn, { disabled: ne.getIsPinned() === "left" || !ne.getCanPin(), icon: f.jsx(j, { style: { transform: "rotate(90deg)" } }), label: B.pinToLeft, onClick: () => X("left"), table: b }, 7),
      f.jsx(Dn, { disabled: ne.getIsPinned() === "right" || !ne.getCanPin(), icon: f.jsx(j, { style: { transform: "rotate(-90deg)" } }), label: B.pinToRight, onClick: () => X("right"), table: b }, 8),
      f.jsx(Dn, { disabled: !ne.getIsPinned(), divider: I, icon: f.jsx(j, {}), label: B.unpin, onClick: () => X(false), table: b }, 9)
    ] : [],
    ...E && ne.getCanResize() ? [
      f.jsx(Dn, { disabled: !oe[ne.id], icon: f.jsx(_, {}), label: B.resetColumnSize, onClick: Re, table: b }, 10)
    ] : [],
    ...I ? [
      f.jsx(Dn, { disabled: !ne.getCanHide(), icon: f.jsx(k, {}), label: (a = B.hideColumn) === null || a === void 0 ? void 0 : a.replace("{column}", String(se.header)), onClick: re, table: b }, 11),
      f.jsx(Dn, { disabled: !Object.values(W).filter((Ze) => !Ze).length, icon: f.jsx($, {}), label: (l = B.showAllColumns) === null || l === void 0 ? void 0 : l.replace("{column}", String(se.header)), onClick: Se, table: b }, 12)
    ] : []
  ].filter(Boolean);
  return f.jsx(si, Object.assign({ MenuListProps: {
    dense: Z === "compact",
    sx: {
      backgroundColor: Q
    }
  }, anchorEl: p, disableScrollLock: true, onClose: () => g(null), open: !!p }, v, { children: (d = (u = (c = se.renderColumnActionsMenuItems) === null || c === void 0 ? void 0 : c.call(se, {
    closeMenu: () => g(null),
    column: ne,
    internalColumnMenuItems: tt,
    table: b
  })) !== null && u !== void 0 ? u : ee == null ? void 0 : ee({
    closeMenu: () => g(null),
    column: ne,
    internalColumnMenuItems: tt,
    table: b
  })) !== null && d !== void 0 ? d : tt }));
};
var iZ = (e10) => {
  var t, n, { header: o, table: r } = e10, s = Je(e10, ["header", "table"]);
  const { options: { icons: { MoreVertIcon: a }, localization: l, muiColumnActionsButtonProps: c } } = r, { column: u } = o, { columnDef: d } = u, [p, m] = (0, import_react.useState)(null), g = (v) => {
    v.stopPropagation(), v.preventDefault(), m(v.currentTarget);
  }, b = Object.assign(Object.assign(Object.assign({}, Ie(c, {
    column: u,
    table: r
  })), Ie(d.muiColumnActionsButtonProps, {
    column: u,
    table: r
  })), s);
  return f.jsxs(f.Fragment, { children: [f.jsx(Et, Object.assign({}, jo("top"), { title: (t = b == null ? void 0 : b.title) !== null && t !== void 0 ? t : l.columnActions, children: f.jsx(lt, Object.assign({ "aria-label": l.columnActions, onClick: g, size: "small" }, b, { sx: (v) => Object.assign({ "&:hover": {
    opacity: 1
  }, height: "2rem", m: "-8px -4px", opacity: 0.3, transition: "all 150ms", width: "2rem" }, Ie(b == null ? void 0 : b.sx, v)), title: void 0, children: (n = b == null ? void 0 : b.children) !== null && n !== void 0 ? n : f.jsx(a, { style: { transform: "scale(0.9)" } }) })) })), p && f.jsx(rZ, { anchorEl: p, header: o, setAnchorEl: m, table: r })] });
};
var sZ = (e10) => {
  var t, n, o, { column: r, table: s } = e10, a = Je(e10, ["column", "table"]);
  const { getState: l, options: { localization: c, muiFilterCheckboxProps: u } } = s, { density: d } = l(), { columnDef: p } = r, m = Object.assign(Object.assign(Object.assign({}, Ie(u, {
    column: r,
    table: s
  })), Ie(p.muiFilterCheckboxProps, {
    column: r,
    table: s
  })), a), g = (t = c.filterByColumn) === null || t === void 0 ? void 0 : t.replace("{column}", p.header);
  return f.jsx(Et, Object.assign({}, jo(), { title: (n = m == null ? void 0 : m.title) !== null && n !== void 0 ? n : g, children: f.jsx(rd, { control: f.jsx(_i, Object.assign({ checked: r.getFilterValue() === "true", color: r.getFilterValue() === void 0 ? "default" : "primary", indeterminate: r.getFilterValue() === void 0, size: d === "compact" ? "small" : "medium" }, m, { onChange: (b, v) => {
    var h;
    r.setFilterValue(r.getFilterValue() === void 0 ? "true" : r.getFilterValue() === "true" ? "false" : void 0), (h = m == null ? void 0 : m.onChange) === null || h === void 0 || h.call(m, b, v);
  }, onClick: (b) => {
    var v;
    b.stopPropagation(), (v = m == null ? void 0 : m.onClick) === null || v === void 0 || v.call(m, b);
  }, sx: (b) => Object.assign({ height: "2.5rem", width: "2.5rem" }, Ie(m == null ? void 0 : m.sx, b)) })), disableTypography: true, label: (o = m.title) !== null && o !== void 0 ? o : g, sx: { color: "text.secondary", fontWeight: "normal", mt: "-4px" }, title: void 0 }) }));
};
var WT = (e10) => {
  var t, n, o, r, s, a, l, c, u, d, p, m, g, b, v, h, { header: y, rangeFilterIndex: C, table: x } = e10, T = Je(e10, ["header", "rangeFilterIndex", "table"]);
  const { options: { enableColumnFilterModes: w, icons: { CloseIcon: R, FilterListIcon: E }, localization: O, manualFiltering: I, muiFilterAutocompleteProps: P, muiFilterDatePickerProps: A, muiFilterDateTimePickerProps: M, muiFilterTextFieldProps: F, muiFilterTimePickerProps: D }, refs: { filterInputRefs: N }, setColumnFilterFns: j } = x, { column: _ } = y, { columnDef: z } = _, { filterVariant: $ } = z, k = { column: _, rangeFilterIndex: C, table: x }, B = Object.assign(Object.assign(Object.assign({}, Ie(F, k)), Ie(z.muiFilterTextFieldProps, k)), T), Q = Object.assign(Object.assign({}, Ie(P, k)), Ie(z.muiFilterAutocompleteProps, k)), ee = Object.assign(Object.assign({}, Ie(A, k)), Ie(z.muiFilterDatePickerProps, k)), G = Object.assign(Object.assign({}, Ie(M, k)), Ie(z.muiFilterDateTimePickerProps, k)), H = Object.assign(Object.assign({}, Ie(D, k)), Ie(z.muiFilterTimePickerProps, k)), { allowedColumnFilterOptions: Y, currentFilterOption: J, facetedUniqueValues: U, isAutocompleteFilter: ne, isDateFilter: se, isMultiSelectFilter: oe, isRangeFilter: W, isSelectFilter: Z, isTextboxFilter: L } = Ud({ header: y, table: x }), ie = mT({ header: y, table: x }), te = ["empty", "notEmpty"].includes(J) ? (
    //@ts-ignore
    O[`filter${((n = (t = J == null ? void 0 : J.charAt) === null || t === void 0 ? void 0 : t.call(J, 0)) === null || n === void 0 ? void 0 : n.toUpperCase()) + (J == null ? void 0 : J.slice(1))}`]
  ) : "", le = W ? C === 0 ? O.min : C === 1 ? O.max : "" : (o = B == null ? void 0 : B.placeholder) !== null && o !== void 0 ? o : (r = O.filterByColumn) === null || r === void 0 ? void 0 : r.replace("{column}", String(z.header)), ue = !!(w && z.enableColumnFilterModes !== false && !C && (Y === void 0 || Y != null && Y.length)), [ve, Te] = (0, import_react.useState)(null), [Re, re] = (0, import_react.useState)(() => {
    var he, Me;
    return oe ? _.getFilterValue() || [] : W ? ((he = _.getFilterValue()) === null || he === void 0 ? void 0 : he[C]) || "" : (Me = _.getFilterValue()) !== null && Me !== void 0 ? Me : "";
  }), [X, ae] = (0, import_react.useState)(ne ? Re : null), ce = (0, import_react.useCallback)(zs((he) => {
    W ? _.setFilterValue((Me) => {
      const ke = Me ?? ["", ""];
      return ke[C] = he ?? void 0, ke;
    }) : _.setFilterValue(he ?? void 0);
  }, L ? I ? 400 : 200 : 1), []), ge = (he) => {
    re(he ?? ""), ce(he);
  }, Se = (he) => {
    var Me;
    const ke = B.type === "date" ? he.target.valueAsDate : B.type === "number" ? he.target.valueAsNumber : he.target.value;
    ge(ke), (Me = B == null ? void 0 : B.onChange) === null || Me === void 0 || Me.call(B, he);
  }, ye = (he) => {
    ae(he), ge(vr(he).value);
  }, Ee = () => {
    oe ? (re([]), _.setFilterValue([])) : W ? (re(""), _.setFilterValue((he) => {
      const Me = Array.isArray(he) && he || ["", ""];
      return Me[C] = void 0, Me;
    })) : (re(""), _.setFilterValue(void 0));
  }, Le = () => {
    re(""), _.setFilterValue(void 0), j((he) => {
      var Me;
      return Object.assign(Object.assign({}, he), { [y.id]: (Me = Y == null ? void 0 : Y[0]) !== null && Me !== void 0 ? Me : "fuzzy" });
    });
  }, Ae = (he) => {
    Te(he.currentTarget);
  }, tt = (0, import_react.useRef)(false);
  if ((0, import_react.useEffect)(() => {
    if (tt.current) {
      const he = _.getFilterValue();
      he === void 0 ? Ee() : re(W && C !== void 0 ? he[C] : he);
    }
    tt.current = true;
  }, [_.getFilterValue()]), z.Filter)
    return f.jsx(f.Fragment, { children: (s = z.Filter) === null || s === void 0 ? void 0 : s.call(z, { column: _, header: y, rangeFilterIndex: C, table: x }) });
  const Ze = !ne && !se && !te ? f.jsx(Or, { position: "end", sx: { mr: Z || oe ? "20px" : void 0 }, children: f.jsx(Et, { placement: "right", title: (a = O.clearFilter) !== null && a !== void 0 ? a : "", children: f.jsx("span", { children: f.jsx(lt, { "aria-label": O.clearFilter, disabled: !(!((l = Re == null ? void 0 : Re.toString()) === null || l === void 0) && l.length), onClick: Ee, size: "small", sx: {
    height: "2rem",
    transform: "scale(0.9)",
    width: "2rem"
  }, children: f.jsx(R, {}) }) }) }) }) : null, ut = ue ? f.jsxs(Or, { position: "start", children: [f.jsx(Et, { title: O.changeFilterMode, children: f.jsx("span", { children: f.jsx(lt, { "aria-label": O.changeFilterMode, onClick: Ae, size: "small", sx: { height: "1.75rem", width: "1.75rem" }, children: f.jsx(E, {}) }) }) }), te && f.jsx(Ms, { label: te, onDelete: Le })] }) : null, me = Object.assign(Object.assign({ FormHelperTextProps: {
    sx: {
      fontSize: "0.75rem",
      lineHeight: "0.8rem",
      whiteSpace: "nowrap"
    }
  }, InputProps: Ze ? { endAdornment: Ze, startAdornment: ut } : { startAdornment: ut }, fullWidth: true, helperText: ue ? f.jsx("label", { children: O.filterMode.replace(
    "{filterType}",
    // @ts-ignore
    O[`filter${((c = J == null ? void 0 : J.charAt(0)) === null || c === void 0 ? void 0 : c.toUpperCase()) + (J == null ? void 0 : J.slice(1))}`]
  ) }) : null, inputProps: {
    "aria-label": le,
    autoComplete: "new-password",
    // disable autocomplete and autofill
    disabled: !!te,
    sx: {
      textOverflow: "ellipsis",
      width: te ? 0 : void 0
    },
    title: le
  }, inputRef: (he) => {
    N.current[`${_.id}-${C ?? 0}`] = he, B.inputRef && (B.inputRef = he);
  }, margin: "none", placeholder: te || Z || oe ? void 0 : le, variant: "standard" }, B), { onKeyDown: (he) => {
    var Me;
    he.stopPropagation(), (Me = B.onKeyDown) === null || Me === void 0 || Me.call(B, he);
  }, sx: (he) => Object.assign({ minWidth: se ? "160px" : w && C === 0 ? "110px" : W ? "100px" : te ? "auto" : "120px", mx: "-2px", p: 0, width: "calc(100% + 4px)" }, Ie(B == null ? void 0 : B.sx, he)) }), Oe = {
    onChange: (he) => {
      ge(he);
    },
    value: Re || null
  };
  return f.jsxs(f.Fragment, { children: [$ != null && $.startsWith("time") ? f.jsx(dT, Object.assign({}, Oe, H, { slotProps: {
    field: Object.assign({ clearable: true, onClear: () => Ee() }, (u = H == null ? void 0 : H.slotProps) === null || u === void 0 ? void 0 : u.field),
    textField: Object.assign(Object.assign({}, me), (d = H == null ? void 0 : H.slotProps) === null || d === void 0 ? void 0 : d.textField)
  } })) : $ != null && $.startsWith("datetime") ? f.jsx(sT, Object.assign({}, Oe, G, { slotProps: {
    field: Object.assign({ clearable: true, onClear: () => Ee() }, (p = G == null ? void 0 : G.slotProps) === null || p === void 0 ? void 0 : p.field),
    textField: Object.assign(Object.assign({}, me), (m = G == null ? void 0 : G.slotProps) === null || m === void 0 ? void 0 : m.textField)
  } })) : $ != null && $.startsWith("date") ? f.jsx(W1, Object.assign({}, Oe, ee, { slotProps: {
    field: Object.assign({ clearable: true, onClear: () => Ee() }, (g = ee == null ? void 0 : ee.slotProps) === null || g === void 0 ? void 0 : g.field),
    textField: Object.assign(Object.assign({}, me), (b = ee == null ? void 0 : ee.slotProps) === null || b === void 0 ? void 0 : b.textField)
  } })) : ne ? f.jsx(kC, Object.assign({ freeSolo: true, getOptionLabel: (he) => vr(he).label, onChange: (he, Me) => ye(Me), options: (v = ie == null ? void 0 : ie.map((he) => vr(he))) !== null && v !== void 0 ? v : [] }, Q, { renderInput: (he) => {
    var Me;
    return f.jsx(_n, Object.assign({}, he, me, { InputProps: Object.assign(Object.assign({}, he.InputProps), { startAdornment: (Me = me == null ? void 0 : me.InputProps) === null || Me === void 0 ? void 0 : Me.startAdornment }), inputProps: Object.assign(Object.assign({}, he.inputProps), me == null ? void 0 : me.inputProps), onChange: Se, onClick: (ke) => ke.stopPropagation() }));
  }, value: X })) : f.jsx(_n, Object.assign({ select: Z || oe }, me, { SelectProps: Object.assign({ MenuProps: { disableScrollLock: true }, displayEmpty: true, multiple: oe, renderValue: oe ? (he) => he != null && he.length ? f.jsx(De, { sx: { display: "flex", flexWrap: "wrap", gap: "2px" }, children: he == null ? void 0 : he.map((Me) => {
    const ke = ie == null ? void 0 : ie.find((st) => vr(st).value === Me);
    return f.jsx(Ms, { label: vr(ke).label }, Me);
  }) }) : f.jsx(De, { sx: { opacity: 0.5 }, children: le }) : void 0 }, me.SelectProps), onChange: Se, onClick: (he) => he.stopPropagation(), value: Re ?? "", children: (Z || oe) && [
    f.jsx(Lo, { disabled: true, divider: true, hidden: true, value: "", children: f.jsx(De, { sx: { opacity: 0.5 }, children: le }) }, "p"),
    (h = B.children) !== null && h !== void 0 ? h : ie == null ? void 0 : ie.map((he, Me) => {
      var ke;
      const { label: st, value: pt } = vr(he);
      return f.jsxs(Lo, { sx: {
        alignItems: "center",
        display: "flex",
        gap: "0.5rem",
        m: 0
      }, value: pt, children: [oe && f.jsx(_i, { checked: ((ke = _.getFilterValue()) !== null && ke !== void 0 ? ke : []).includes(pt), sx: { mr: "0.5rem" } }), st, " ", !z.filterSelectOptions && `(${U.get(pt)})`] }, `${Me}-${pt}`);
    })
  ] })), f.jsx(Ph, { anchorEl: ve, header: y, setAnchorEl: Te, setFilterValue: re, table: x })] });
};
var aZ = (e10) => {
  var { header: t, table: n } = e10, o = Je(e10, ["header", "table"]);
  return f.jsx(De, Object.assign({}, o, { sx: (r) => Object.assign({ display: "grid", gap: "1rem", gridTemplateColumns: "1fr 1fr" }, Ie(o == null ? void 0 : o.sx, r)), children: [0, 1].map((r) => f.jsx(WT, { header: t, rangeFilterIndex: r, table: n }, r)) }));
};
var lZ = (e10) => {
  var t, n, { header: o, table: r } = e10, s = Je(e10, ["header", "table"]);
  const { options: { enableColumnFilterModes: a, localization: l, muiFilterSliderProps: c }, refs: { filterInputRefs: u } } = r, { column: d } = o, { columnDef: p } = d, m = p._filterFn, g = a && p.enableColumnFilterModes !== false, b = Object.assign(Object.assign(Object.assign({}, Ie(c, { column: d, table: r })), Ie(p.muiFilterSliderProps, { column: d, table: r })), s);
  let [v, h] = b.min !== void 0 && b.max !== void 0 ? [b.min, b.max] : (t = d.getFacetedMinMaxValues()) !== null && t !== void 0 ? t : [0, 1];
  Array.isArray(v) && (v = v[0]), Array.isArray(h) && (h = h[0]), v === null && (v = 0), h === null && (h = 1);
  const [y, C] = (0, import_react.useState)([v, h]), x = d.getFilterValue(), T = (0, import_react.useRef)(false);
  return (0, import_react.useEffect)(() => {
    T.current && (x === void 0 ? C([v, h]) : Array.isArray(x) && C(x)), T.current = true;
  }, [x, v, h]), f.jsxs(Ln, { children: [f.jsx(nS, Object.assign({ disableSwap: true, max: h, min: v, onChange: (w, R) => {
    C(R);
  }, onChangeCommitted: (w, R) => {
    Array.isArray(R) && (R[0] <= v && R[1] >= h ? d.setFilterValue(void 0) : d.setFilterValue(R));
  }, value: y, valueLabelDisplay: "auto" }, b, { slotProps: {
    input: {
      ref: (w) => {
        var R, E;
        w && (u.current[`${d.id}-0`] = w, !((E = (R = b == null ? void 0 : b.slotProps) === null || R === void 0 ? void 0 : R.input) === null || E === void 0) && E.ref && (b.slotProps.input.ref = w));
      }
    }
  }, sx: (w) => Object.assign({ m: "auto", minWidth: `${d.getSize() - 50}px`, mt: g ? "6px" : "10px", px: "4px", width: "calc(100% - 8px)" }, Ie(b == null ? void 0 : b.sx, w)) })), g ? f.jsx(id, { sx: {
    fontSize: "0.75rem",
    lineHeight: "0.8rem",
    m: "-3px -6px",
    whiteSpace: "nowrap"
  }, children: l.filterMode.replace(
    "{filterType}",
    // @ts-ignore
    l[`filter${((n = m == null ? void 0 : m.charAt(0)) === null || n === void 0 ? void 0 : n.toUpperCase()) + (m == null ? void 0 : m.slice(1))}`]
  ) }) : null] });
};
var HT = (e10) => {
  var { header: t, table: n } = e10, o = Je(e10, ["header", "table"]);
  const { getState: r, options: { columnFilterDisplayMode: s } } = n, { showColumnFilters: a } = r(), { column: l } = t, { columnDef: c } = l, { isRangeFilter: u } = Ud({ header: t, table: n });
  return f.jsx(qr, Object.assign({ in: a || s === "popover", mountOnEnter: true, unmountOnExit: true }, o, { children: c.filterVariant === "checkbox" ? f.jsx(sZ, { column: l, table: n }) : c.filterVariant === "range-slider" ? f.jsx(lZ, { header: t, table: n }) : u ? f.jsx(aZ, { header: t, table: n }) : f.jsx(WT, { header: t, table: n }) }));
};
var cZ = (e10) => {
  var t, n, { header: o, table: r } = e10, s = Je(e10, ["header", "table"]);
  const { options: { columnFilterDisplayMode: a, icons: { FilterAltIcon: l }, localization: c }, refs: { filterInputRefs: u }, setShowColumnFilters: d } = r, { column: p } = o, { columnDef: m } = p, g = p.getFilterValue(), [b, v] = (0, import_react.useState)(null), { currentFilterOption: h, isMultiSelectFilter: y, isRangeFilter: C, isSelectFilter: x } = Ud({ header: o, table: r }), T = mT({ header: o, table: r }), w = (O) => vr(T == null ? void 0 : T.find((I) => vr(I).value === (O !== void 0 ? g[O] : g))).label, R = Array.isArray(g) && g.some(Boolean) || !!g && !Array.isArray(g), E = a === "popover" && !R ? (t = c.filterByColumn) === null || t === void 0 ? void 0 : t.replace("{column}", String(m.header)) : c.filteringByColumn.replace("{column}", String(m.header)).replace("{filterType}", h ? (
    // @ts-ignore
    c[`filter${((n = h == null ? void 0 : h.charAt(0)) === null || n === void 0 ? void 0 : n.toUpperCase()) + (h == null ? void 0 : h.slice(1))}`]
  ) : "").replace("{filterValue}", `"${Array.isArray(g) ? g.map((O, I) => y ? w(I) : O).join(`" ${C ? c.and : c.or} "`) : x ? w() : g}"`).replace('" "', "");
  return f.jsxs(f.Fragment, { children: [f.jsx(Kr, { in: a === "popover" || !!g && !C || C && // @ts-ignore
  (!!(g != null && g[0]) || !!(g != null && g[1])), unmountOnExit: true, children: f.jsx(De, { component: "span", sx: { flex: "0 0" }, children: f.jsx(Et, { placement: "top", title: E, children: f.jsx(lt, Object.assign({ disableRipple: true, onClick: (O) => {
    a === "popover" ? v(O.currentTarget) : d(true), queueMicrotask(() => {
      var I, P, A, M;
      (P = (I = u.current[`${p.id}-0`]) === null || I === void 0 ? void 0 : I.focus) === null || P === void 0 || P.call(I), (M = (A = u.current[`${p.id}-0`]) === null || A === void 0 ? void 0 : A.select) === null || M === void 0 || M.call(A);
    }), O.stopPropagation();
  }, size: "small" }, s, { sx: (O) => Object.assign({ height: "16px", ml: "4px", opacity: R ? 1 : 0.3, p: "8px", transform: "scale(0.75)", transition: "all 150ms ease-in-out", width: "16px" }, Ie(s == null ? void 0 : s.sx, O)), children: f.jsx(l, {}) })) }) }) }), a === "popover" && f.jsx(pg, { anchorEl: b, anchorOrigin: {
    horizontal: "center",
    vertical: "top"
  }, disableScrollLock: true, onClick: (O) => O.stopPropagation(), onClose: (O) => {
    O.stopPropagation(), v(null);
  }, onKeyDown: (O) => O.key === "Enter" && v(null), open: !!b, slotProps: { paper: { sx: { overflow: "visible" } } }, transformOrigin: {
    horizontal: "center",
    vertical: "bottom"
  }, children: f.jsx(De, { sx: { p: "1rem" }, children: f.jsx(HT, { header: o, table: r }) }) })] });
};
var uZ = (e10) => {
  var { column: t, table: n, tableHeadCellRef: o } = e10, r = Je(e10, ["column", "table", "tableHeadCellRef"]);
  const { getState: s, options: { enableColumnOrdering: a, muiColumnDragHandleProps: l }, setColumnOrder: c, setDraggingColumn: u, setHoveredColumn: d } = n, { columnDef: p } = t, { columnOrder: m, draggingColumn: g, hoveredColumn: b } = s(), v = Object.assign(Object.assign(Object.assign({}, Ie(l, { column: t, table: n })), Ie(p.muiColumnDragHandleProps, {
    column: t,
    table: n
  })), r), h = (C) => {
    var x;
    (x = v == null ? void 0 : v.onDragStart) === null || x === void 0 || x.call(v, C), u(t);
    try {
      C.dataTransfer.setDragImage(o.current, 0, 0);
    } catch (T) {
      console.error(T);
    }
  }, y = (C) => {
    var x;
    (x = v == null ? void 0 : v.onDragEnd) === null || x === void 0 || x.call(v, C), (b == null ? void 0 : b.id) === "drop-zone" ? t.toggleGrouping() : a && b && (b == null ? void 0 : b.id) !== (g == null ? void 0 : g.id) && c(fT(t, b, m)), u(null), d(null);
  };
  return f.jsx(Oh, Object.assign({}, v, { onDragEnd: y, onDragStart: h, table: n }));
};
var dZ = (e10) => {
  var t, { header: n, table: o } = e10, r = Je(e10, ["header", "table"]);
  const { getState: s, options: { columnResizeDirection: a, columnResizeMode: l }, setColumnSizingInfo: c } = o, { density: u } = s(), { column: d } = n, p = n.getResizeHandler(), m = u === "compact" ? "-8px" : u === "comfortable" ? "-16px" : "-24px", g = d.columnDef.columnDefType === "display" ? "4px" : "0";
  return f.jsx(De, { className: "Mui-TableHeadCell-ResizeHandle-Wrapper", onDoubleClick: () => {
    c((b) => Object.assign(Object.assign({}, b), { isResizingColumn: false })), d.resetSize();
  }, onMouseDown: p, onTouchStart: p, style: {
    transform: d.getIsResizing() && l === "onEnd" ? `translateX(${(a === "rtl" ? -1 : 1) * ((t = s().columnSizingInfo.deltaOffset) !== null && t !== void 0 ? t : 0)}px)` : void 0
  }, sx: (b) => ({
    "&:active > hr": {
      backgroundColor: b.palette.info.main,
      opacity: n.subHeaders.length || l === "onEnd" ? 1 : 0
    },
    cursor: "col-resize",
    left: a === "rtl" ? g : void 0,
    ml: a === "rtl" ? m : void 0,
    mr: a === "ltr" ? m : void 0,
    position: "absolute",
    px: "4px",
    right: a === "ltr" ? g : void 0
  }), children: f.jsx(Vo, { className: "Mui-TableHeadCell-ResizeHandle-Divider", flexItem: true, orientation: "vertical", sx: (b) => Object.assign({ borderRadius: "2px", borderWidth: "2px", height: "24px", touchAction: "none", transform: "translateX(4px)", transition: d.getIsResizing() ? void 0 : "all 150ms ease-in-out", userSelect: "none", zIndex: 4 }, Ie(r == null ? void 0 : r.sx, b)) }) });
};
var pZ = (e10) => {
  var { header: t, table: n } = e10, o = Je(e10, ["header", "table"]);
  const { getState: r, options: { icons: { ArrowDownwardIcon: s, SyncAltIcon: a }, localization: l } } = n, { column: c } = t, { columnDef: u } = c, { isLoading: d, showSkeletons: p, sorting: m } = r(), g = !!c.getIsSorted(), b = d || p ? "" : c.getIsSorted() ? c.getIsSorted() === "desc" ? l.sortedByColumnDesc.replace("{column}", u.header) : l.sortedByColumnAsc.replace("{column}", u.header) : c.getNextSortingOrder() === "desc" ? l.sortByColumnDesc.replace("{column}", u.header) : l.sortByColumnAsc.replace("{column}", u.header), v = g ? c.getIsSorted() : void 0;
  return f.jsx(Et, { placement: "top", title: b, children: f.jsx(FC, { badgeContent: m.length > 1 ? c.getSortIndex() + 1 : 0, overlap: "circular", children: f.jsx(iS, Object.assign({ IconComponent: g ? s : (h) => f.jsx(a, Object.assign({}, h, { direction: v, style: {
    transform: "rotate(-90deg) scaleX(0.9) translateX(-1px)"
  } })), active: true, "aria-label": b, direction: v, onClick: (h) => {
    var y;
    h.stopPropagation(), (y = t.column.getToggleSortingHandler()) === null || y === void 0 || y(h);
  } }, o, { sx: (h) => Object.assign({ ".MuiTableSortLabel-icon": {
    color: `${h.palette.mode === "dark" ? h.palette.text.primary : h.palette.text.secondary} !important`
  }, flex: "0 0", opacity: g ? 1 : 0.3, transition: "all 150ms ease-in-out", width: "3ch" }, Ie(o == null ? void 0 : o.sx, h)) })) }) });
};
var fZ = (e10) => {
  var t, n, o, r, s, a, { columnVirtualizer: l, header: c, staticColumnIndex: u, table: d } = e10, p = Je(e10, ["columnVirtualizer", "header", "staticColumnIndex", "table"]);
  const m = Sn(), { getState: g, options: { columnFilterDisplayMode: b, columnResizeDirection: v, columnResizeMode: h, enableKeyboardShortcuts: y, enableColumnActions: C, enableColumnDragging: x, enableColumnOrdering: T, enableColumnPinning: w, enableGrouping: R, enableMultiSort: E, layoutMode: O, mrtTheme: { draggingBorderColor: I }, muiTableHeadCellProps: P }, refs: { tableHeadCellRefs: A }, setHoveredColumn: M } = d, { columnSizingInfo: F, density: D, draggingColumn: N, grouping: j, hoveredColumn: _, showColumnFilters: z } = g(), { column: $ } = c, { columnDef: k } = $, { columnDefType: B } = k, Q = Object.assign(Object.assign(Object.assign({}, Ie(P, { column: $, table: d })), Ie(k.muiTableHeadCellProps, {
    column: $,
    table: d
  })), p), ee = w && k.columnDefType !== "group" && $.getIsPinned(), G = (C || k.enableColumnActions) && k.enableColumnActions !== false, H = x !== false && k.enableColumnDragging !== false && (x || T && k.enableColumnOrdering !== false || R && k.enableGrouping !== false && !j.includes($.id)), Y = (0, import_react.useMemo)(() => {
    let W = 0;
    return $.getCanSort() && (W += 1), G && (W += 1.75), H && (W += 1.5), W;
  }, [G, H]), J = (0, import_react.useMemo)(() => {
    const W = F.isResizingColumn === $.id && h === "onChange" && !c.subHeaders.length, Z = W ? `2px solid ${I} !important` : (N == null ? void 0 : N.id) === $.id ? `1px dashed ${m.palette.grey[500]}` : (_ == null ? void 0 : _.id) === $.id ? `2px dashed ${I}` : void 0;
    return W ? v === "ltr" ? { borderRight: Z } : { borderLeft: Z } : Z ? {
      borderLeft: Z,
      borderRight: Z,
      borderTop: Z
    } : void 0;
  }, [N, _, F.isResizingColumn]), U = (W) => {
    R && (_ == null ? void 0 : _.id) === "drop-zone" && M(null), T && N && B !== "group" && M(k.enableColumnOrdering !== false ? $ : null);
  }, ne = (W) => {
    k.enableColumnOrdering !== false && W.preventDefault();
  }, se = (W) => {
    var Z;
    Ch({
      event: W,
      cellValue: c.column.columnDef.header,
      table: d,
      header: c
    }), (Z = Q == null ? void 0 : Q.onKeyDown) === null || Z === void 0 || Z.call(Q, W);
  }, oe = (t = Ie(k.Header, {
    column: $,
    header: c,
    table: d
  })) !== null && t !== void 0 ? t : k.header;
  return f.jsxs(zt, Object.assign({ align: B === "group" ? "center" : m.direction === "rtl" ? "right" : "left", "aria-sort": $.getIsSorted() ? $.getIsSorted() === "asc" ? "ascending" : "descending" : "none", colSpan: c.colSpan, "data-can-sort": $.getCanSort() || void 0, "data-index": u, "data-pinned": !!ee || void 0, "data-sort": $.getIsSorted() || void 0, onDragEnter: U, onDragOver: ne, ref: (W) => {
    var Z;
    W && (A.current[$.id] = W, B !== "group" && ((Z = l == null ? void 0 : l.measureElement) === null || Z === void 0 || Z.call(l, W)));
  }, tabIndex: y ? 0 : void 0 }, Q, { onKeyDown: se, sx: (W) => Object.assign(Object.assign({ "& :hover": {
    ".MuiButtonBase-root": {
      opacity: 1
    }
  }, flexDirection: O != null && O.startsWith("grid") ? "column" : void 0, fontWeight: "bold", overflow: "visible", p: D === "compact" ? "0.5rem" : D === "comfortable" ? B === "display" ? "0.75rem" : "1rem" : B === "display" ? "1rem 1.25rem" : "1.5rem", pb: B === "display" ? 0 : z || D === "compact" ? "0.4rem" : "0.6rem", pt: B === "group" || D === "compact" ? "0.25rem" : D === "comfortable" ? ".75rem" : "1.25rem", userSelect: E && $.getCanSort() ? "none" : void 0, verticalAlign: "top" }, Eh({
    column: $,
    header: c,
    table: d,
    tableCellProps: Q,
    theme: W
  })), J), children: [c.isPlaceholder ? null : (n = Q.children) !== null && n !== void 0 ? n : f.jsxs(De, { className: "Mui-TableHeadCell-Content", sx: {
    alignItems: "center",
    display: "flex",
    flexDirection: (Q == null ? void 0 : Q.align) === "right" ? "row-reverse" : "row",
    justifyContent: B === "group" || (Q == null ? void 0 : Q.align) === "center" ? "center" : $.getCanResize() ? "space-between" : "flex-start",
    position: "relative",
    width: "100%"
  }, children: [f.jsxs(De, { className: "Mui-TableHeadCell-Content-Labels", onClick: $.getToggleSortingHandler(), sx: {
    alignItems: "center",
    cursor: $.getCanSort() && B !== "group" ? "pointer" : void 0,
    display: "flex",
    flexDirection: (Q == null ? void 0 : Q.align) === "right" ? "row-reverse" : "row",
    overflow: B === "data" ? "hidden" : void 0,
    pl: (Q == null ? void 0 : Q.align) === "center" ? `${Y}rem` : void 0
  }, children: [f.jsx(De, { className: "Mui-TableHeadCell-Content-Wrapper", sx: {
    "&:hover": {
      textOverflow: "clip"
    },
    minWidth: `${Math.min((r = (o = k.header) === null || o === void 0 ? void 0 : o.length) !== null && r !== void 0 ? r : 0, 4)}ch`,
    overflow: B === "data" ? "hidden" : void 0,
    textOverflow: "ellipsis",
    whiteSpace: ((a = (s = k.header) === null || s === void 0 ? void 0 : s.length) !== null && a !== void 0 ? a : 0) < 20 ? "nowrap" : "normal"
  }, children: oe }), $.getCanFilter() && f.jsx(cZ, { header: c, table: d }), $.getCanSort() && f.jsx(pZ, { header: c, table: d })] }), B !== "group" && f.jsxs(De, { className: "Mui-TableHeadCell-Content-Actions", sx: {
    whiteSpace: "nowrap"
  }, children: [H && f.jsx(uZ, { column: $, table: d, tableHeadCellRef: {
    current: A.current[$.id]
  } }), G && f.jsx(iZ, { header: c, table: d })] }), $.getCanResize() && f.jsx(dZ, { header: c, table: d })] }), b === "subheader" && $.getCanFilter() && f.jsx(HT, { header: c, table: d })] }));
};
var mZ = (e10) => {
  var { columnVirtualizer: t, headerGroup: n, table: o } = e10, r = Je(e10, ["columnVirtualizer", "headerGroup", "table"]);
  const { options: { enableStickyHeader: s, layoutMode: a, mrtTheme: { baseBackgroundColor: l }, muiTableHeadRowProps: c } } = o, { virtualColumns: u, virtualPaddingLeft: d, virtualPaddingRight: p } = t ?? {}, m = Object.assign(Object.assign({}, Ie(c, {
    headerGroup: n,
    table: o
  })), r);
  return f.jsxs(Pr, Object.assign({}, m, { sx: (g) => Object.assign({ backgroundColor: l, boxShadow: `4px 0 8px ${We(g.palette.common.black, 0.1)}`, display: a != null && a.startsWith("grid") ? "flex" : void 0, position: s && a === "semantic" ? "sticky" : "relative", top: 0 }, Ie(m == null ? void 0 : m.sx, g)), children: [d ? f.jsx("th", { style: { display: "flex", width: d } }) : null, (u ?? n.headers).map((g, b) => {
    let v = g;
    return t && (b = g.index, v = n.headers[b]), v ? f.jsx(fZ, { columnVirtualizer: t, header: v, staticColumnIndex: b, table: o }, v.id) : null;
  }), p ? f.jsx("th", { style: { display: "flex", width: p } }) : null] }));
};
var Ah = (e10) => {
  var t, n, o, { stackAlertBanner: r, table: s } = e10, a = Je(e10, ["stackAlertBanner", "table"]);
  const { getFilteredSelectedRowModel: l, getPrePaginationRowModel: c, getState: u, options: { enableRowSelection: d, enableSelectAll: p, localization: m, manualPagination: g, muiToolbarAlertBannerChipProps: b, muiToolbarAlertBannerProps: v, positionToolbarAlertBanner: h, renderToolbarAlertBannerContent: y, rowCount: C }, refs: { tablePaperRef: x } } = s, { density: T, grouping: w, rowSelection: R, showAlertBanner: E } = u(), O = Object.assign(Object.assign({}, Ie(v, {
    table: s
  })), a), I = Ie(b, {
    table: s
  }), P = C ?? c().flatRows.length, A = (0, import_react.useMemo)(() => g ? Object.values(R).filter(Boolean).length : l().rows.length, [R, P, g]), M = A > 0 ? f.jsxs(Ln, { alignItems: "center", direction: "row", gap: "16px", children: [(n = (t = m.selectedCountOfRowCountRowsSelected) === null || t === void 0 ? void 0 : t.replace("{selectedCount}", A.toLocaleString())) === null || n === void 0 ? void 0 : n.replace("{rowCount}", P.toString()), f.jsx(vt, { onClick: (D) => xh({ table: s })(D, false, true), size: "small", sx: { p: "2px" }, children: m.clearSelection })] }) : null, F = w.length > 0 ? f.jsxs("span", { children: [m.groupedBy, " ", w.map((D, N) => f.jsxs(import_react.Fragment, { children: [N > 0 ? m.thenBy : "", f.jsx(Ms, Object.assign({ label: s.getColumn(D).columnDef.header, onDelete: () => s.getColumn(D).toggleGrouping() }, I))] }, `${N}-${D}`))] }) : null;
  return f.jsx(qr, { in: E || !!M || !!F, timeout: r ? 200 : 0, children: f.jsx(yC, Object.assign({ color: "info", icon: false }, O, { sx: (D) => {
    var N, j;
    return Object.assign({ "& .MuiAlert-message": {
      maxWidth: `calc(${(j = (N = x.current) === null || N === void 0 ? void 0 : N.clientWidth) !== null && j !== void 0 ? j : 360}px - 1rem)`,
      width: "100%"
    }, borderRadius: 0, fontSize: "1rem", left: 0, mb: r ? 0 : h === "bottom" ? "-1rem" : void 0, p: 0, position: "relative", right: 0, top: 0, width: "100%", zIndex: 2 }, Ie(O == null ? void 0 : O.sx, D));
  }, children: (o = y == null ? void 0 : y({
    groupedAlert: F,
    selectedAlert: M,
    table: s
  })) !== null && o !== void 0 ? o : f.jsxs(f.Fragment, { children: [(O == null ? void 0 : O.title) && f.jsx(xC, { children: O.title }), f.jsxs(Ln, { sx: {
    p: h !== "head-overlay" ? "0.5rem 1rem" : T === "spacious" ? "0.75rem 1.25rem" : T === "comfortable" ? "0.5rem 0.75rem" : "0.25rem 0.5rem"
  }, children: [O == null ? void 0 : O.children, (O == null ? void 0 : O.children) && (M || F) && f.jsx("br", {}), f.jsxs(De, { sx: { display: "flex" }, children: [d && p && h === "head-overlay" && f.jsx(mm, { table: s }), " ", M] }), M && F && f.jsx("br", {}), F] })] }) })) });
};
var gZ = (e10) => {
  var { columnVirtualizer: t, table: n } = e10, o = Je(e10, ["columnVirtualizer", "table"]);
  const { getState: r, options: { enableStickyHeader: s, layoutMode: a, muiTableHeadProps: l, positionToolbarAlertBanner: c }, refs: { tableHeadRef: u } } = n, { isFullScreen: d, showAlertBanner: p } = r(), m = Object.assign(Object.assign({}, Ie(l, { table: n })), o), g = s || d;
  return f.jsx(ud, Object.assign({}, m, { ref: (b) => {
    u.current = b, m != null && m.ref && (m.ref.current = b);
  }, sx: (b) => Object.assign({ display: a != null && a.startsWith("grid") ? "grid" : void 0, opacity: 0.97, position: g ? "sticky" : "relative", top: g && (a != null && a.startsWith("grid")) ? 0 : void 0, zIndex: g ? 2 : void 0 }, Ie(m == null ? void 0 : m.sx, b)), children: c === "head-overlay" && (p || n.getSelectedRowModel().rows.length > 0) ? f.jsx("tr", { style: {
    display: a != null && a.startsWith("grid") ? "grid" : void 0
  }, children: f.jsx("th", { colSpan: n.getVisibleLeafColumns().length, style: {
    display: a != null && a.startsWith("grid") ? "grid" : void 0,
    padding: 0
  }, children: f.jsx(Ah, { table: n }) }) }) : n.getHeaderGroups().map((b) => f.jsx(mZ, { columnVirtualizer: t, headerGroup: b, table: n }, b.id)) }));
};
var hZ = (e10) => {
  var { table: t } = e10, n = Je(e10, ["table"]);
  const { getFlatHeaders: o, getState: r, options: { columns: s, enableStickyHeader: a, enableTableFooter: l, enableTableHead: c, layoutMode: u, memoMode: d, muiTableProps: p, renderCaption: m } } = t, { columnSizing: g, columnSizingInfo: b, columnVisibility: v, isFullScreen: h } = r(), y = Object.assign(Object.assign({}, Ie(p, { table: t })), n), C = Ie(m, { table: t }), x = (0, import_react.useMemo)(() => {
    const R = o(), E = {};
    for (let O = 0; O < R.length; O++) {
      const I = R[O], P = I.getSize();
      E[`--header-${za(I.id)}-size`] = P, E[`--col-${za(I.column.id)}-size`] = P;
    }
    return E;
  }, [s, g, b, v]), w = {
    columnVirtualizer: GY(t),
    table: t
  };
  return f.jsxs(ld, Object.assign({ stickyHeader: a || h }, y, { style: Object.assign(Object.assign({}, x), y == null ? void 0 : y.style), sx: (R) => Object.assign({ borderCollapse: "separate", display: u != null && u.startsWith("grid") ? "grid" : void 0, position: "relative" }, Ie(y == null ? void 0 : y.sx, R)), children: [!!C && f.jsx("caption", { children: C }), c && f.jsx(gZ, Object.assign({}, w)), d === "table-body" || b.isResizingColumn ? f.jsx(JY, Object.assign({}, w)) : f.jsx(zT, Object.assign({}, w)), l && f.jsx(eZ, Object.assign({}, w))] }));
};
var bZ = (e10) => {
  var t, { table: n } = e10, o = Je(e10, ["table"]);
  const { options: { id: r, localization: s, mrtTheme: { baseBackgroundColor: a }, muiCircularProgressProps: l } } = n, c = Object.assign(Object.assign({}, Ie(l, { table: n })), o);
  return f.jsx(De, { sx: {
    alignItems: "center",
    backgroundColor: We(a, 0.5),
    bottom: 0,
    display: "flex",
    justifyContent: "center",
    left: 0,
    maxHeight: "100vh",
    position: "absolute",
    right: 0,
    top: 0,
    width: "100%",
    zIndex: 3
  }, children: (t = c == null ? void 0 : c.Component) !== null && t !== void 0 ? t : f.jsx(Jr, Object.assign({ "aria-label": s.noRecordsToDisplay, id: `mrt-progress-${r}` }, c)) });
};
var vZ = (e10) => {
  var t, n, { table: o } = e10, r = Je(e10, ["table"]);
  const { getState: s, options: { editDisplayMode: a, enableClickToCopy: l, enableEditing: c, icons: { ContentCopy: u, EditIcon: d }, localization: p, mrtTheme: { menuBackgroundColor: m }, renderCellActionMenuItems: g }, refs: { actionCellRef: b } } = o, { actionCell: v, density: h } = s(), y = v, { row: C } = y, { column: x } = y, { columnDef: T } = x, w = (I) => {
    I == null || I.stopPropagation(), o.setActionCell(null), b.current = null;
  }, R = [
    (Ie(l, y) === "context-menu" || Ie(T.enableClickToCopy, y) === "context-menu") && f.jsx(Dn, { icon: f.jsx(u, {}), label: p.copy, onClick: (I) => {
      I.stopPropagation(), navigator.clipboard.writeText(y.getValue()), w();
    }, table: o }, "mrt-copy"),
    Ie(c, C) && a === "cell" && f.jsx(Dn, { icon: f.jsx(d, {}), label: p.edit, onClick: () => {
      yT({ cell: y, table: o }), w();
    }, table: o }, "mrt-edit")
  ].filter(Boolean), E = {
    cell: y,
    closeMenu: w,
    column: x,
    internalMenuItems: R,
    row: C,
    table: o
  }, O = (n = (t = T.renderCellActionMenuItems) === null || t === void 0 ? void 0 : t.call(T, E)) !== null && n !== void 0 ? n : g == null ? void 0 : g(E);
  return (!!(O != null && O.length) || !!(R != null && R.length)) && f.jsx(si, Object.assign({ MenuListProps: {
    dense: h === "compact",
    sx: {
      backgroundColor: m
    }
  }, anchorEl: b.current, disableScrollLock: true, onClick: (I) => I.stopPropagation(), onClose: w, open: !!y, transformOrigin: { horizontal: -100, vertical: 8 } }, r, { children: O ?? R }));
};
var yZ = (e10) => {
  var t, { open: n, table: o } = e10, r = Je(e10, ["open", "table"]);
  const { getState: s, options: { localization: a, muiCreateRowModalProps: l, muiEditRowDialogProps: c, onCreatingRowCancel: u, onEditingRowCancel: d, renderCreateRowDialogContent: p, renderEditRowDialogContent: m }, setCreatingRow: g, setEditingRow: b } = o, { creatingRow: v, editingRow: h } = s(), y = v ?? h, C = Object.assign(Object.assign(Object.assign({}, Ie(c, { row: y, table: o })), v && Ie(l, { row: y, table: o })), r), x = y.getAllCells().filter((T) => T.column.columnDef.columnDefType === "data").map((T) => f.jsx(LT, { cell: T, table: o }, T.id));
  return f.jsx(sg, Object.assign({ fullWidth: true, maxWidth: "xs", onClose: (T, w) => {
    var R;
    v ? (u == null || u({ row: y, table: o }), g(null)) : (d == null || d({ row: y, table: o }), b(null)), y._valuesCache = {}, (R = C.onClose) === null || R === void 0 || R.call(C, T, w);
  }, open: n }, C, { children: (t = v && (p == null ? void 0 : p({
    internalEditComponents: x,
    row: y,
    table: o
  })) || (m == null ? void 0 : m({
    internalEditComponents: x,
    row: y,
    table: o
  }))) !== null && t !== void 0 ? t : f.jsxs(f.Fragment, { children: [f.jsx(VC, { sx: { textAlign: "center" }, children: a.edit }), f.jsx(lg, { children: f.jsx("form", { onSubmit: (T) => T.preventDefault(), children: f.jsx(Ln, { sx: {
    gap: "32px",
    paddingTop: "16px",
    width: "100%"
  }, children: x }) }) }), f.jsx(ag, { sx: { p: "1.25rem" }, children: f.jsx(kT, { row: y, table: o, variant: "text" }) })] }) }));
};
var xZ = typeof window < "u" ? import_react.useLayoutEffect : import_react.useEffect;
var CZ = (e10) => {
  var { table: t } = e10, n = Je(e10, ["table"]);
  const { getState: o, options: { createDisplayMode: r, editDisplayMode: s, enableCellActions: a, enableStickyHeader: l, muiTableContainerProps: c }, refs: { bottomToolbarRef: u, tableContainerRef: d, topToolbarRef: p } } = t, { actionCell: m, creatingRow: g, editingRow: b, isFullScreen: v, isLoading: h, showLoadingOverlay: y } = o(), C = y !== false && (h || y), [x, T] = (0, import_react.useState)(0), w = Object.assign(Object.assign({}, Ie(c, {
    table: t
  })), n);
  xZ(() => {
    var O, I, P, A;
    const M = typeof document < "u" && (I = (O = p.current) === null || O === void 0 ? void 0 : O.offsetHeight) !== null && I !== void 0 ? I : 0, F = typeof document < "u" && (A = (P = u == null ? void 0 : u.current) === null || P === void 0 ? void 0 : P.offsetHeight) !== null && A !== void 0 ? A : 0;
    T(M + F);
  });
  const R = r === "modal" && g, E = s === "modal" && b;
  return f.jsxs(cd, Object.assign({ "aria-busy": C, "aria-describedby": C ? "mrt-progress" : void 0 }, w, { ref: (O) => {
    O && (d.current = O, w != null && w.ref && (w.ref.current = O));
  }, style: Object.assign({ maxHeight: v ? `calc(100vh - ${x}px)` : void 0 }, w == null ? void 0 : w.style), sx: (O) => Object.assign({ maxHeight: l ? `clamp(350px, calc(100vh - ${x}px), 9999px)` : void 0, maxWidth: "100%", overflow: "auto", position: "relative" }, Ie(w == null ? void 0 : w.sx, O)), children: [C ? f.jsx(bZ, { table: t }) : null, f.jsx(hZ, { table: t }), (R || E) && f.jsx(yZ, { open: true, table: t }), a && m && f.jsx(vZ, { table: t })] }));
};
var GT = (e10) => {
  var { isTopToolbar: t, table: n } = e10, o = Je(e10, ["isTopToolbar", "table"]);
  const { getState: r, options: { muiLinearProgressProps: s } } = n, { isSaving: a, showProgressBars: l } = r(), c = Object.assign(Object.assign({}, Ie(s, {
    isTopToolbar: t,
    table: n
  })), o);
  return f.jsx(qr, { in: l !== false && (l || a), mountOnEnter: true, sx: {
    bottom: t ? 0 : void 0,
    position: "absolute",
    top: t ? void 0 : 0,
    width: "100%"
  }, unmountOnExit: true, children: f.jsx(BC, Object.assign({ "aria-busy": "true", "aria-label": "Loading", sx: { position: "relative" } }, c)) });
};
var SZ = [5, 10, 15, 20, 25, 30, 50, 100];
var UT = (e10) => {
  var { position: t = "bottom", table: n } = e10, o = Je(e10, ["position", "table"]);
  const r = Sn(), s = Yr("(max-width: 720px)"), { getState: a, options: { enableToolbarInternalActions: l, icons: { ChevronLeftIcon: c, ChevronRightIcon: u, FirstPageIcon: d, LastPageIcon: p }, id: m, localization: g, muiPaginationProps: b, paginationDisplayMode: v } } = n, { pagination: { pageIndex: h = 0, pageSize: y = 10 } } = a(), C = Object.assign(Object.assign({}, Ie(b, {
    table: n
  })), o), x = n.getRowCount(), T = n.getPageCount(), w = T > 2, R = h * y, E = Math.min(h * y + y, x), O = C ?? {}, { SelectProps: I = {}, disabled: P = false, rowsPerPageOptions: A = SZ, showFirstButton: M = w, showLastButton: F = w, showRowsPerPage: D = true } = O, N = Je(O, ["SelectProps", "disabled", "rowsPerPageOptions", "showFirstButton", "showLastButton", "showRowsPerPage"]), j = h <= 0 || P, _ = E >= x || P;
  s && (I == null ? void 0 : I.native) !== false && (I.native = true);
  const z = jo();
  return f.jsxs(De, { className: "MuiTablePagination-root", sx: {
    alignItems: "center",
    display: "flex",
    flexWrap: "wrap",
    gap: "8px",
    justifyContent: { md: "space-between", sm: "center" },
    justifySelf: "flex-end",
    mt: t === "top" && l ? "3rem" : void 0,
    position: "relative",
    px: "8px",
    py: "12px",
    zIndex: 2
  }, children: [D && f.jsxs(De, { sx: { alignItems: "center", display: "flex", gap: "8px" }, children: [f.jsx(sd, { htmlFor: `mrt-rows-per-page-${m}`, sx: { mb: 0 }, children: g.rowsPerPage }), f.jsx(Dl, Object.assign({ MenuProps: { disableScrollLock: true }, disableUnderline: true, disabled: P, inputProps: {
    "aria-label": g.rowsPerPage,
    id: `mrt-rows-per-page-${m}`
  }, label: g.rowsPerPage, onChange: ($) => n.setPageSize(+$.target.value), sx: { mb: 0 }, value: y, variant: "standard" }, I, { children: A.map(($) => {
    var k;
    const B = typeof $ != "number" ? $.value : $, Q = typeof $ != "number" ? $.label : `${$}`;
    return (k = I == null ? void 0 : I.children) !== null && k !== void 0 ? k : I != null && I.native ? f.jsx("option", { value: B, children: Q }, B) : f.jsx(Lo, { sx: { m: 0 }, value: B, children: Q }, B);
  }) }))] }), v === "pages" ? f.jsx(gg, Object.assign({ count: T, disabled: P, onChange: ($, k) => n.setPageIndex(k - 1), page: h + 1, renderItem: ($) => f.jsx(mg, Object.assign({ slots: {
    first: d,
    last: p,
    next: u,
    previous: c
  } }, $)), showFirstButton: M, showLastButton: F }, N)) : v === "default" ? f.jsxs(f.Fragment, { children: [f.jsx(Fe, { align: "center", component: "span", sx: { m: "0 4px", minWidth: "8ch" }, variant: "body2", children: `${E === 0 ? 0 : (R + 1).toLocaleString()}-${E.toLocaleString()} ${g.of} ${x.toLocaleString()}` }), f.jsxs(De, { gap: "xs", children: [M && f.jsx(Et, Object.assign({}, z, { title: g.goToFirstPage, children: f.jsx("span", { children: f.jsx(lt, { "aria-label": g.goToFirstPage, disabled: j, onClick: () => n.firstPage(), size: "small", children: f.jsx(d, Object.assign({}, xc(r))) }) }) })), f.jsx(Et, Object.assign({}, z, { title: g.goToPreviousPage, children: f.jsx("span", { children: f.jsx(lt, { "aria-label": g.goToPreviousPage, disabled: j, onClick: () => n.previousPage(), size: "small", children: f.jsx(c, Object.assign({}, xc(r))) }) }) })), f.jsx(Et, Object.assign({}, z, { title: g.goToNextPage, children: f.jsx("span", { children: f.jsx(lt, { "aria-label": g.goToNextPage, disabled: _, onClick: () => n.nextPage(), size: "small", children: f.jsx(u, Object.assign({}, xc(r))) }) }) })), F && f.jsx(Et, Object.assign({}, z, { title: g.goToLastPage, children: f.jsx("span", { children: f.jsx(lt, { "aria-label": g.goToLastPage, disabled: _, onClick: () => n.lastPage(), size: "small", children: f.jsx(p, Object.assign({}, xc(r))) }) }) }))] })] }) : null] });
};
var XT = (e10) => {
  var t, n, { table: o } = e10, r = Je(e10, ["table"]);
  const { getState: s, options: { enableGrouping: a, localization: l }, setHoveredColumn: c, setShowToolbarDropZone: u } = o, { draggingColumn: d, grouping: p, hoveredColumn: m, showToolbarDropZone: g } = s(), b = (h) => {
    c({ id: "drop-zone" });
  }, v = (h) => {
    h.preventDefault();
  };
  return (0, import_react.useEffect)(() => {
    var h;
    ((h = o.options.state) === null || h === void 0 ? void 0 : h.showToolbarDropZone) !== void 0 && u(!!a && !!d && d.columnDef.enableGrouping !== false && !p.includes(d.id));
  }, [a, d, p]), f.jsx(ii, { in: g, children: f.jsx(De, Object.assign({ className: "Mui-ToolbarDropZone", onDragEnter: b, onDragOver: v }, r, { sx: (h) => Object.assign({ alignItems: "center", backdropFilter: "blur(4px)", backgroundColor: We(h.palette.info.main, (m == null ? void 0 : m.id) === "drop-zone" ? 0.2 : 0.1), border: `dashed ${h.palette.info.main} 2px`, boxSizing: "border-box", display: "flex", height: "100%", justifyContent: "center", position: "absolute", width: "100%", zIndex: 4 }, Ie(r == null ? void 0 : r.sx, h)), children: f.jsx(Fe, { fontStyle: "italic", children: l.dropToGroupBy.replace("{column}", (n = (t = d == null ? void 0 : d.columnDef) === null || t === void 0 ? void 0 : t.header) !== null && n !== void 0 ? n : "") }) })) });
};
var wZ = (e10) => {
  var { table: t } = e10, n = Je(e10, ["table"]);
  const { getState: o, options: { enablePagination: r, muiBottomToolbarProps: s, positionPagination: a, positionToolbarAlertBanner: l, positionToolbarDropZone: c, renderBottomToolbarCustomActions: u }, refs: { bottomToolbarRef: d } } = t, { isFullScreen: p } = o(), m = Yr("(max-width:720px)"), g = Object.assign(Object.assign({}, Ie(s, { table: t })), n), b = m || !!u;
  return f.jsxs(De, Object.assign({}, g, { ref: (v) => {
    v && (d.current = v, g != null && g.ref && (g.ref.current = v));
  }, sx: (v) => Object.assign(Object.assign(Object.assign({}, NT({ table: t, theme: v })), { bottom: p ? "0" : void 0, boxShadow: `0 1px 2px -1px ${We(v.palette.grey[700], 0.5)} inset`, left: 0, position: p ? "fixed" : "relative", right: 0 }), Ie(g == null ? void 0 : g.sx, v)), children: [f.jsx(GT, { isTopToolbar: false, table: t }), l === "bottom" && f.jsx(Ah, { stackAlertBanner: b, table: t }), ["both", "bottom"].includes(c ?? "") && f.jsx(XT, { table: t }), f.jsxs(De, { sx: {
    alignItems: "center",
    boxSizing: "border-box",
    display: "flex",
    justifyContent: "space-between",
    p: "0.5rem",
    width: "100%"
  }, children: [u ? u({ table: t }) : f.jsx("span", {}), f.jsx(De, { sx: {
    display: "flex",
    justifyContent: "flex-end",
    position: b ? "relative" : "absolute",
    right: 0,
    top: 0
  }, children: r && ["both", "bottom"].includes(a ?? "") && f.jsx(UT, { position: "bottom", table: t }) })] })] }));
};
var TZ = (e10) => {
  var { column: t, table: n } = e10, o = Je(e10, ["column", "table"]);
  const { options: { icons: { PushPinIcon: r }, localization: s } } = n, a = (l) => {
    t.pin(l);
  };
  return f.jsx(De, Object.assign({}, o, { sx: (l) => Object.assign({ minWidth: "70px", textAlign: "center" }, Ie(o == null ? void 0 : o.sx, l)), children: t.getIsPinned() ? f.jsx(Et, { title: s.unpin, children: f.jsx(lt, { onClick: () => a(false), size: "small", children: f.jsx(r, {}) }) }) : f.jsxs(f.Fragment, { children: [f.jsx(Et, { title: s.pinToLeft, children: f.jsx(lt, { onClick: () => a("left"), size: "small", children: f.jsx(r, { style: {
    transform: "rotate(90deg)"
  } }) }) }), f.jsx(Et, { title: s.pinToRight, children: f.jsx(lt, { onClick: () => a("right"), size: "small", children: f.jsx(r, { style: {
    transform: "rotate(-90deg)"
  } }) }) })] }) }));
};
var YT = (e10) => {
  var t, { allColumns: n, column: o, hoveredColumn: r, isNestedColumns: s, setHoveredColumn: a, table: l } = e10, c = Je(e10, ["allColumns", "column", "hoveredColumn", "isNestedColumns", "setHoveredColumn", "table"]);
  const { getState: u, options: { enableColumnOrdering: d, enableColumnPinning: p, enableHiding: m, localization: g, mrtTheme: { draggingBorderColor: b } }, setColumnOrder: v } = l, { columnOrder: h } = u(), { columnDef: y } = o, { columnDefType: C } = y, x = o.getIsVisible(), T = (A) => {
    var M, F;
    C === "group" ? (F = (M = A == null ? void 0 : A.columns) === null || M === void 0 ? void 0 : M.forEach) === null || F === void 0 || F.call(M, (D) => {
      D.toggleVisibility(!x);
    }) : A.toggleVisibility();
  }, w = (0, import_react.useRef)(null), [R, E] = (0, import_react.useState)(false), O = (A) => {
    E(true);
    try {
      A.dataTransfer.setDragImage(w.current, 0, 0);
    } catch (M) {
      console.error(M);
    }
  }, I = (A) => {
    E(false), a(null), r && v(fT(o, r, h));
  }, P = (A) => {
    !R && y.enableColumnOrdering !== false && a(o);
  };
  return !y.header || y.visibleInShowHideMenu === false ? null : f.jsxs(f.Fragment, { children: [f.jsx(Lo, Object.assign({ disableRipple: true, onDragEnter: P, ref: w }, c, { sx: (A) => Object.assign({ alignItems: "center", justifyContent: "flex-start", my: 0, opacity: R ? 0.5 : 1, outline: R ? `2px dashed ${A.palette.grey[500]}` : (r == null ? void 0 : r.id) === o.id ? `2px dashed ${b}` : "none", outlineOffset: "-2px", pl: `${(o.depth + 0.5) * 2}rem`, py: "6px" }, Ie(c == null ? void 0 : c.sx, A)), children: f.jsxs(De, { sx: {
    display: "flex",
    flexWrap: "nowrap",
    gap: "8px"
  }, children: [C !== "group" && d && !s && (y.enableColumnOrdering !== false ? f.jsx(Oh, { onDragEnd: I, onDragStart: O, table: l }) : f.jsx(De, { sx: { width: "28px" } })), p && (o.getCanPin() ? f.jsx(TZ, { column: o, table: l }) : f.jsx(De, { sx: { width: "70px" } })), m ? f.jsx(rd, { checked: x, componentsProps: {
    typography: {
      sx: {
        mb: 0,
        opacity: C !== "display" ? 1 : 0.5
      }
    }
  }, control: f.jsx(Et, Object.assign({}, jo(), { title: g.toggleVisibility, children: f.jsx(oS, {}) })), disabled: !o.getCanHide(), label: y.header, onChange: () => T(o) }) : f.jsx(Fe, { sx: { alignSelf: "center" }, children: y.header })] }) })), (t = o.columns) === null || t === void 0 ? void 0 : t.map((A, M) => f.jsx(YT, { allColumns: n, column: A, hoveredColumn: r, isNestedColumns: s, setHoveredColumn: a, table: l }, `${M}-${A.id}`))] });
};
var IZ = (e10) => {
  var { anchorEl: t, setAnchorEl: n, table: o } = e10, r = Je(e10, ["anchorEl", "setAnchorEl", "table"]);
  const { getAllColumns: s, getAllLeafColumns: a, getCenterLeafColumns: l, getIsAllColumnsVisible: c, getIsSomeColumnsPinned: u, getIsSomeColumnsVisible: d, getLeftLeafColumns: p, getRightLeafColumns: m, getState: g, options: { enableColumnOrdering: b, enableColumnPinning: v, enableHiding: h, localization: y, mrtTheme: { menuBackgroundColor: C } } } = o, { columnOrder: x, columnPinning: T, density: w } = g(), R = (A) => {
    a().filter((M) => M.columnDef.enableHiding !== false).forEach((M) => M.toggleVisibility(A));
  }, E = (0, import_react.useMemo)(() => {
    const A = s();
    return x.length > 0 && !A.some((M) => M.columnDef.columnDefType === "group") ? [
      ...p(),
      ...Array.from(new Set(x)).map((M) => l().find((F) => (F == null ? void 0 : F.id) === M)),
      ...m()
    ].filter(Boolean) : A;
  }, [
    x,
    T,
    s(),
    l(),
    p(),
    m()
  ]), O = E.some((A) => A.columnDef.columnDefType === "group"), [I, P] = (0, import_react.useState)(null);
  return f.jsxs(si, Object.assign({ MenuListProps: {
    dense: w === "compact",
    sx: {
      backgroundColor: C
    }
  }, anchorEl: t, disableScrollLock: true, onClose: () => n(null), open: !!t }, r, { children: [f.jsxs(De, { sx: {
    display: "flex",
    justifyContent: "space-between",
    p: "0.5rem",
    pt: 0
  }, children: [h && f.jsx(vt, { disabled: !d(), onClick: () => R(false), children: y.hideAll }), b && f.jsx(vt, { onClick: () => o.setColumnOrder(Th(o.options, true)), children: y.resetOrder }), v && f.jsx(vt, { disabled: !u(), onClick: () => o.resetColumnPinning(true), children: y.unpinAll }), h && f.jsx(vt, { disabled: c(), onClick: () => R(true), children: y.showAll })] }), f.jsx(Vo, {}), E.map((A, M) => f.jsx(YT, { allColumns: E, column: A, hoveredColumn: I, isNestedColumns: O, setHoveredColumn: P, table: o }, `${M}-${A.id}`))] }));
};
var RZ = (e10) => {
  var t, { table: n } = e10, o = Je(e10, ["table"]);
  const { options: { icons: { ViewColumnIcon: r }, localization: s } } = n, [a, l] = (0, import_react.useState)(null), c = (u) => {
    l(u.currentTarget);
  };
  return f.jsxs(f.Fragment, { children: [f.jsx(Et, { title: (t = o == null ? void 0 : o.title) !== null && t !== void 0 ? t : s.showHideColumns, children: f.jsx(lt, Object.assign({ "aria-label": s.showHideColumns, onClick: c }, o, { title: void 0, children: f.jsx(r, {}) })) }), a && f.jsx(IZ, { anchorEl: a, setAnchorEl: l, table: n })] });
};
var EZ = (e10) => {
  var t, { table: n } = e10, o = Je(e10, ["table"]);
  const { getState: r, options: { icons: { DensityLargeIcon: s, DensityMediumIcon: a, DensitySmallIcon: l }, localization: c }, setDensity: u } = n, { density: d } = r(), p = () => {
    u(d === "comfortable" ? "compact" : d === "compact" ? "spacious" : "comfortable");
  };
  return f.jsx(Et, { title: (t = o == null ? void 0 : o.title) !== null && t !== void 0 ? t : c.toggleDensity, children: f.jsx(lt, Object.assign({ "aria-label": c.toggleDensity, onClick: p }, o, { title: void 0, children: d === "compact" ? f.jsx(l, {}) : d === "comfortable" ? f.jsx(a, {}) : f.jsx(s, {}) })) });
};
var OZ = (e10) => {
  var t, { table: n } = e10, o = Je(e10, ["table"]);
  const { getState: r, options: { icons: { FilterListIcon: s, FilterListOffIcon: a }, localization: l }, setShowColumnFilters: c } = n, { showColumnFilters: u } = r(), d = () => {
    c(!u);
  };
  return f.jsx(Et, { title: (t = o == null ? void 0 : o.title) !== null && t !== void 0 ? t : l.showHideFilters, children: f.jsx(lt, Object.assign({ "aria-label": l.showHideFilters, onClick: d }, o, { title: void 0, children: u ? f.jsx(a, {}) : f.jsx(s, {}) })) });
};
var PZ = (e10) => {
  var t, { table: n } = e10, o = Je(e10, ["table"]);
  const { getState: r, options: { icons: { FullscreenExitIcon: s, FullscreenIcon: a }, localization: l }, setIsFullScreen: c } = n, { isFullScreen: u } = r(), [d, p] = (0, import_react.useState)(false), m = () => {
    p(false), c(!u);
  };
  return f.jsx(Et, { open: d, title: (t = o == null ? void 0 : o.title) !== null && t !== void 0 ? t : l.toggleFullScreen, children: f.jsx(lt, Object.assign({ "aria-label": l.toggleFullScreen, onBlur: () => p(false), onClick: m, onFocus: () => p(true), onMouseEnter: () => p(true), onMouseLeave: () => p(false) }, o, { title: void 0, children: u ? f.jsx(s, {}) : f.jsx(a, {}) })) });
};
var AZ = (e10) => {
  var t, n, { table: o } = e10, r = Je(e10, ["table"]);
  const { getState: s, options: { icons: { SearchIcon: a, SearchOffIcon: l }, localization: c }, refs: { searchInputRef: u }, setShowGlobalFilter: d } = o, { globalFilter: p, showGlobalFilter: m } = s(), g = () => {
    d(!m), queueMicrotask(() => {
      var b;
      return (b = u.current) === null || b === void 0 ? void 0 : b.focus();
    });
  };
  return f.jsx(Et, { title: (t = r == null ? void 0 : r.title) !== null && t !== void 0 ? t : c.showHideSearch, children: f.jsx(lt, Object.assign({ "aria-label": (n = r == null ? void 0 : r.title) !== null && n !== void 0 ? n : c.showHideSearch, disabled: !!p, onClick: g }, r, { title: void 0, children: m ? f.jsx(l, {}) : f.jsx(a, {}) })) });
};
var jZ = (e10) => {
  var t, { table: n } = e10, o = Je(e10, ["table"]);
  const { options: { columnFilterDisplayMode: r, enableColumnFilters: s, enableColumnOrdering: a, enableColumnPinning: l, enableDensityToggle: c, enableFilters: u, enableFullScreenToggle: d, enableGlobalFilter: p, enableHiding: m, initialState: g, renderToolbarInternalActions: b } } = n;
  return f.jsx(De, Object.assign({}, o, { sx: (v) => Object.assign({ alignItems: "center", display: "flex", zIndex: 3 }, Ie(o == null ? void 0 : o.sx, v)), children: (t = b == null ? void 0 : b({
    table: n
  })) !== null && t !== void 0 ? t : f.jsxs(f.Fragment, { children: [u && p && !(g != null && g.showGlobalFilter) && f.jsx(AZ, { table: n }), u && s && r !== "popover" && f.jsx(OZ, { table: n }), (m || a || l) && f.jsx(RZ, { table: n }), c && f.jsx(EZ, { table: n }), d && f.jsx(PZ, { table: n })] }) }));
};
var qp = (e10) => {
  var t, { table: n } = e10, o = Je(e10, ["table"]);
  const { getState: r, options: { enableGlobalFilterModes: s, icons: { CloseIcon: a, SearchIcon: l }, localization: c, manualFiltering: u, muiSearchTextFieldProps: d }, refs: { searchInputRef: p }, setGlobalFilter: m } = n, { globalFilter: g, showGlobalFilter: b } = r(), v = Object.assign(Object.assign({}, Ie(d, {
    table: n
  })), o), h = (0, import_react.useRef)(false), [y, C] = (0, import_react.useState)(null), [x, T] = (0, import_react.useState)(g ?? ""), w = (0, import_react.useCallback)(zs((I) => {
    var P;
    m((P = I.target.value) !== null && P !== void 0 ? P : void 0);
  }, u ? 500 : 250), []), R = (I) => {
    T(I.target.value), w(I);
  }, E = (I) => {
    C(I.currentTarget);
  }, O = () => {
    T(""), m(void 0);
  };
  return (0, import_react.useEffect)(() => {
    h.current && (g === void 0 ? O() : T(g)), h.current = true;
  }, [g]), f.jsxs(qr, { in: b, mountOnEnter: true, orientation: "horizontal", unmountOnExit: true, children: [f.jsx(_n, Object.assign({ inputProps: Object.assign({ autoComplete: "new-password" }, v.inputProps), onChange: R, placeholder: c.search, size: "small", value: x ?? "", variant: "outlined" }, v, { InputProps: Object.assign(Object.assign({ endAdornment: f.jsx(Or, { position: "end", children: f.jsx(Et, { title: (t = c.clearSearch) !== null && t !== void 0 ? t : "", children: f.jsx("span", { children: f.jsx(lt, { "aria-label": c.clearSearch, disabled: !(x != null && x.length), onClick: O, size: "small", children: f.jsx(a, {}) }) }) }) }), startAdornment: s ? f.jsx(Or, { position: "start", children: f.jsx(Et, { title: c.changeSearchMode, children: f.jsx(lt, { "aria-label": c.changeSearchMode, onClick: E, size: "small", sx: { height: "1.75rem", width: "1.75rem" }, children: f.jsx(l, {}) }) }) }) : f.jsx(l, { style: { marginRight: "4px" } }) }, v.InputProps), { sx: (I) => {
    var P;
    return Object.assign({ mb: 0 }, Ie((P = v == null ? void 0 : v.InputProps) === null || P === void 0 ? void 0 : P.sx, I));
  } }), inputRef: (I) => {
    p.current = I, v != null && v.inputRef && (v.inputRef = I);
  } })), f.jsx(Ph, { anchorEl: y, onSelect: O, setAnchorEl: C, table: n })] });
};
var DZ = ({ table: e10 }) => {
  var t;
  const { getState: n, options: { enableGlobalFilter: o, enablePagination: r, enableToolbarInternalActions: s, muiTopToolbarProps: a, positionGlobalFilter: l, positionPagination: c, positionToolbarAlertBanner: u, positionToolbarDropZone: d, renderTopToolbarCustomActions: p }, refs: { topToolbarRef: m } } = e10, { isFullScreen: g, showGlobalFilter: b } = n(), v = Yr("(max-width:720px)"), h = Yr("(max-width:1024px)"), y = Ie(a, { table: e10 }), C = v || !!p || b && h, x = {
    sx: h ? void 0 : {
      zIndex: 2
    },
    table: e10
  };
  return f.jsxs(De, Object.assign({}, y, { ref: (T) => {
    m.current = T, y != null && y.ref && (y.ref.current = T);
  }, sx: (T) => Object.assign(Object.assign(Object.assign({}, NT({ table: e10, theme: T })), { position: g ? "sticky" : "relative", top: g ? "0" : void 0 }), Ie(y == null ? void 0 : y.sx, T)), children: [u === "top" && f.jsx(Ah, { stackAlertBanner: C, table: e10 }), ["both", "top"].includes(d ?? "") && f.jsx(XT, { table: e10 }), f.jsxs(De, { sx: {
    alignItems: "flex-start",
    boxSizing: "border-box",
    display: "flex",
    gap: "0.5rem",
    justifyContent: "space-between",
    p: "0.5rem",
    position: C ? "relative" : "absolute",
    right: 0,
    top: 0,
    width: "100%"
  }, children: [o && l === "left" && f.jsx(qp, Object.assign({}, x)), (t = p == null ? void 0 : p({ table: e10 })) !== null && t !== void 0 ? t : f.jsx("span", {}), s ? f.jsxs(De, { sx: {
    alignItems: "center",
    display: "flex",
    flexWrap: "wrap-reverse",
    gap: "0.5rem",
    justifyContent: "flex-end"
  }, children: [o && l === "right" && f.jsx(qp, Object.assign({}, x)), f.jsx(jZ, { table: e10 })] }) : o && l === "right" && f.jsx(qp, Object.assign({}, x))] }), r && ["both", "top"].includes(c ?? "") && f.jsx(UT, { position: "top", table: e10 }), f.jsx(GT, { isTopToolbar: true, table: e10 })] }));
};
var MZ = (e10) => {
  var t, n, { table: o } = e10, r = Je(e10, ["table"]);
  const { getState: s, options: { enableBottomToolbar: a, enableTopToolbar: l, mrtTheme: { baseBackgroundColor: c }, muiTablePaperProps: u, renderBottomToolbar: d, renderTopToolbar: p }, refs: { tablePaperRef: m } } = o, { isFullScreen: g } = s(), b = Object.assign(Object.assign({}, Ie(u, { table: o })), r), v = Sn();
  return f.jsxs(vn, Object.assign({ elevation: 2, onKeyDown: (h) => h.key === "Escape" && o.setIsFullScreen(false) }, b, { ref: (h) => {
    m.current = h, b != null && b.ref && (b.ref.current = h);
  }, style: Object.assign(Object.assign({}, g ? {
    bottom: 0,
    height: "100dvh",
    left: 0,
    margin: 0,
    maxHeight: "100dvh",
    maxWidth: "100dvw",
    padding: 0,
    position: "fixed",
    right: 0,
    top: 0,
    width: "100dvw",
    zIndex: v.zIndex.modal
  } : {}), b == null ? void 0 : b.style), sx: (h) => Object.assign({ backgroundColor: c, backgroundImage: "unset", overflow: "hidden", transition: "all 100ms ease-in-out" }, Ie(b == null ? void 0 : b.sx, h)), children: [l && ((t = Ie(p, { table: o })) !== null && t !== void 0 ? t : f.jsx(DZ, { table: o })), f.jsx(CZ, { table: o }), a && ((n = Ie(d, { table: o })) !== null && n !== void 0 ? n : f.jsx(wZ, { table: o }))] }));
};
var kZ = (e10) => e10.table !== void 0;
var FZ = (e10) => {
  let t;
  return kZ(e10) ? t = e10.table : t = VT(e10), f.jsx(MZ, { table: t });
};
var NZ = (e10, t, n) => [
  { accessorKey: "id", header: "ID", size: 100 },
  { accessorKey: "invoice_number", header: "Invoice Number", size: 150 },
  { accessorKey: "customer_name", header: "Customer Name", size: 200 },
  { accessorKey: "order_id", header: "Reference No", size: 150 },
  { accessorKey: "invoice_date", header: "Invoice Date", size: 150 },
  { accessorKey: "due_date", header: "Due Date", size: 150 },
  { accessorKey: "total_amount", header: "Total Amount", size: 150 },
  { accessorKey: "status", header: "Status", size: 100 },
  // {
  //   accessorKey: 'customer_id',
  //   header: 'Customer ID',
  //   size: 150,
  //   Cell: ({ cell }) => (
  //     <Typography>{cell.getValue()}</Typography>
  //   ),
  // },
  {
    accessorKey: "email",
    header: "Email",
    size: 200,
    Cell: ({ cell: o }) => f.jsx(Fe, { children: o.getValue() })
  },
  {
    accessorKey: "actions",
    header: "Actions",
    size: 150,
    Cell: ({ row: o }) => {
      const { id: r, customer_id: s } = o.original;
      return f.jsxs(f.Fragment, { children: [
        f.jsx(lt, { onClick: () => t(r), title: "View Invoice", children: f.jsx($9, {}) }),
        f.jsx(
          lt,
          {
            onClick: (a) => n(r, a),
            disabled: o.original.status === "Sent",
            title: "Delete Invoice",
            children: f.jsx(Rd, {})
          }
        )
      ] });
    }
  }
];
var $Z = () => {
  const [e10, t] = (0, import_react.useState)(false), [n, o] = (0, import_react.useState)(0), [r, s] = (0, import_react.useState)([]), [a, l] = (0, import_react.useState)(false), [c, u] = (0, import_react.useState)(10), [d, p] = (0, import_react.useState)(0), [m, g] = (0, import_react.useState)({
    pageIndex: 0,
    pageSize: 10
  }), [b, v] = (0, import_react.useState)(true), [h, y] = (0, import_react.useState)([]), C = async () => {
    l(true);
    try {
      const I = { page_size: c, page: m.pageIndex + 1 }, P = await Ow(I);
      s(P.data.list || []), p(P.data.pagination.count || 0);
    } catch (I) {
      console.error("Error fetching invoices:", I);
    } finally {
      l(false);
    }
  }, x = async () => {
    v(true);
    try {
      const I = await _9({});
      y(I.data);
    } catch (I) {
      console.error(I);
    } finally {
      v(false);
    }
  };
  (0, import_react.useEffect)(() => {
    C(), x();
  }, [n, m.pageIndex, c]);
  const T = () => {
    window.location.href = "/invoices/new";
  }, w = async (I, P) => {
    P.stopPropagation(), console.log(`Deleting invoice with ID: ${I}`);
    try {
      await Dw(I), o((A) => A + 1);
    } catch (A) {
      console.error("Failed to delete invoice:", A);
    } finally {
      l(false);
    }
  }, R = (I) => {
    console.log(I), window.location.href = `/invoices/view/${I}`;
  }, E = (I) => {
    R(I.original.id);
  }, O = VT({
    initialState: {
      pagination: m
    },
    state: {
      pagination: m
    },
    columns: NZ(o, R, w),
    data: r,
    manualPagination: true,
    // Enable manual pagination
    rowCount: d,
    // Total number of rows based on the count
    paginationDisplayMode: "pages",
    // Display mode for pagination
    muiPaginationProps: {
      color: "primary",
      shape: "rounded",
      showRowsPerPage: true,
      variant: "outlined"
    },
    onPaginationChange: g
  });
  return f.jsxs(De, { children: [
    f.jsxs(
      vn,
      {
        elevation: 1,
        sx: {
          borderRadius: "8px",
          padding: "16px",
          display: "flex",
          margin: "90px auto",
          justifyContent: "space-between",
          alignItems: "center",
          height: "70px",
          marginBottom: "15px"
        },
        children: [
          f.jsx(Fe, { variant: "h6", children: "All Invoices" }),
          f.jsx(Ln, { direction: "row", spacing: 2, alignItems: "center", children: e10 ? f.jsx(lt, { onClick: () => o((I) => I + 1), children: f.jsx(Id, {}) }) : f.jsx(
            vt,
            {
              size: "small",
              onClick: T,
              variant: "contained",
              startIcon: f.jsx(Bg, {}),
              children: "New"
            }
          ) })
        ]
      }
    ),
    f.jsxs(
      vn,
      {
        sx: {
          height: "155px",
          display: "flex",
          flexDirection: "column",
          alignItems: "start",
          justifyContent: "center",
          paddingX: "1.5rem",
          margin: "0.5em 0"
        },
        children: [
          f.jsx(De, { sx: { mb: 3 }, children: f.jsx(Fe, { color: "text.secondary", variant: "body1", sx: { fontWeight: 700 }, children: "Payment Summary" }) }),
          f.jsxs(
            Ct,
            {
              container: true,
              spacing: 2,
              direction: "row",
              justifyContent: "center",
              alignItems: "center",
              children: [
                f.jsx(Ct, { item: true, xs: 3, children: f.jsx(De, { sx: { display: "flex", justifyContent: "space-around" }, children: f.jsxs(De, { sx: { display: "flex" }, children: [
                  f.jsx(
                    ng,
                    {
                      sx: {
                        bgcolor: bi[300],
                        height: "50px",
                        width: "50px"
                      },
                      children: f.jsx(k9, { sx: { color: "#000000" }, fontSize: "small" })
                    }
                  ),
                  f.jsxs(De, { sx: { ml: 2 }, children: [
                    f.jsx(Fe, { color: "text.secondary", variant: "body1", children: "Total Outstanding Receivables" }),
                    b ? f.jsx(Sc, {}) : f.jsxs(Fe, { variant: "h6", sx: { fontWeight: 700, fontSize: "1.2rem" }, children: [
                      "$",
                      parseFloat((h == null ? void 0 : h.total_receivable) || 0).toFixed(2)
                    ] })
                  ] })
                ] }) }) }),
                f.jsx(Ct, { item: true, xs: true, children: f.jsxs(De, { sx: { display: "flex", justifyContent: "space-around" }, children: [
                  f.jsx(Vo, { orientation: "vertical", sx: { height: "60px" } }),
                  f.jsxs(De, { children: [
                    f.jsx(Fe, { color: "text.secondary", variant: "body1", children: "Due Today" }),
                    b ? f.jsx(Sc, {}) : f.jsxs(Fe, { variant: "body1", sx: { fontWeight: 700, fontSize: "1.2rem", color: bi[500] }, children: [
                      "$",
                      parseFloat((h == null ? void 0 : h.total_due_today) || 0).toFixed(2)
                    ] })
                  ] }),
                  f.jsx(Vo, { orientation: "vertical", flexItem: true, sx: { height: "60px" } })
                ] }) }),
                f.jsx(Ct, { item: true, xs: true, children: f.jsxs(De, { sx: { display: "flex", justifyContent: "space-around" }, children: [
                  f.jsxs(De, { children: [
                    f.jsx(Fe, { color: "text.secondary", variant: "body1", children: "Due Within 30 Days" }),
                    b ? f.jsx(Sc, {}) : f.jsxs(Fe, { sx: { fontWeight: 700, fontSize: "1.2rem", color: "text.secondary" }, children: [
                      "$",
                      parseFloat((h == null ? void 0 : h.total_due_in_a_month) || 0).toFixed(2)
                    ] })
                  ] }),
                  f.jsx(Vo, { orientation: "vertical", flexItem: true, sx: { height: "60px" } })
                ] }) }),
                f.jsx(Ct, { item: true, xs: true, children: f.jsxs(De, { sx: { display: "flex", justifyContent: "space-end" }, children: [
                  f.jsxs(De, { children: [
                    f.jsx(Fe, { color: "text.secondary", variant: "body1", children: "Overdue Invoice" }),
                    b ? f.jsx(Sc, {}) : f.jsxs(Fe, { sx: { fontWeight: 700, fontSize: "1.2rem", color: "text.secondary" }, children: [
                      "$",
                      parseFloat((h == null ? void 0 : h.total_over_due) || 0).toFixed(2)
                    ] })
                  ] }),
                  f.jsx("span", { style: { height: "60px", display: "hidden" } })
                ] }) })
              ]
            }
          )
        ]
      }
    ),
    f.jsx(De, { mt: 3, children: f.jsx(vn, { elevation: 1, sx: { padding: "16px", borderRadius: "8px" }, children: a ? f.jsx(Jr, {}) : f.jsx(
      FZ,
      {
        table: O,
        onRowClick: (I) => E(I)
      }
    ) }) })
  ] });
};
var Sc = () => f.jsx(De, { sx: { height: 32, display: "flex", alignItems: "center" }, children: f.jsx(ll, { width: "100%", variant: "rounded", height: 12 }) });
var ZT = "LOADING";
var qT = "LOGOUT";
var VZ = "API_ERROR";
var _Z = () => async (e10) => {
  var t;
  try {
    e10({ type: ZT, payload: {} }), e10({ type: qT }), destroyToken(), location.reload();
  } catch (n) {
    location.href = "/login", e10({ type: VZ, payload: (t = n == null ? void 0 : n.data) == null ? void 0 : t.errors });
  }
};
var j0 = [
  "NINETY NINE TECHNOLOGIES (PVT) LIMITED",
  "Ninety Nine Technologies LLC"
];
var LZ = "INVOICE";
var BZ = () => {
  const e10 = iR(), t = _s(), [n, o] = (0, import_react.useState)(null), [r, s] = (0, import_react.useState)(j0[0]), a = (d) => {
    o(d.currentTarget);
  }, l = () => {
    o(null);
  }, c = () => {
    e10(_Z()), t("/login");
  }, u = (d) => {
    s(d.target.value);
  };
  return f.jsx(CC, { position: "fixed", sx: { backgroundColor: "#1976d2", width: "100%", height: "70px" }, children: f.jsxs(De, { display: "flex", alignItems: "center", justifyContent: "space-between", children: [
    f.jsxs(De, { display: "flex", alignItems: "center", children: [
      f.jsx(
        "img",
        {
          src: "https://www.99technologies.com/assets/images/99-tech-logo.webp",
          alt: "Logo",
          style: { height: "40px", marginLeft: "20px", marginRight: "10px" }
        }
      ),
      f.jsx(Ct, { item: true, sm: 0.6, xs: true, children: f.jsx(Cl, { to: "/invoices", style: { textDecoration: "none", color: "white" }, children: f.jsxs(
        Fe,
        {
          variant: "h6",
          sx: {
            height: "64px",
            fontSize: "18px",
            display: "flex",
            justifyContent: "center",
            alignItems: "center"
          },
          children: [
            LZ,
            " "
          ]
        }
      ) }) })
    ] }),
    f.jsxs(De, { display: "flex", alignItems: "center", children: [
      f.jsx(So, { sx: { marginRight: "20px", minWidth: 200 }, children: f.jsx(
        Dl,
        {
          value: r,
          onChange: u,
          sx: { color: "white", backgroundColor: "#1976d2" },
          children: j0.map((d) => f.jsx(Lo, { value: d, sx: { color: "black" }, children: d }, d))
        }
      ) }),
      f.jsx(
        lt,
        {
          size: "large",
          color: "inherit",
          onClick: a,
          children: f.jsx(ng, { sx: { bgcolor: "white", color: "#1976d2" }, children: "U " })
        }
      ),
      f.jsx(
        si,
        {
          anchorEl: n,
          open: !!n,
          onClose: l,
          children: f.jsxs(Lo, { onClick: c, children: [
            f.jsx(h9, { fontSize: "small", style: { marginRight: "5px" } }),
            " Logout"
          ] })
        }
      )
    ] })
  ] }) });
};
var qt = ({
  error: e10,
  invalid: t,
  id: n,
  ph: o,
  label: r = "",
  required: s = false,
  loading: a,
  width: l = "340px",
  InputProps: c,
  padding: u = "0 10px",
  ...d
}) => f.jsxs(De, { sx: { display: "flex", flexDirection: "column", width: l }, children: [
  f.jsxs(Ln, { direction: "row", children: [
    f.jsx(
      Fe,
      {
        component: "label",
        variant: "label",
        htmlFor: n,
        sx: { marginBottom: "10px" },
        children: a ? f.jsx(
          ll,
          {
            variant: "text",
            width: "100px",
            sx: { fontSize: "1rem" }
          }
        ) : r
      }
    ),
    s && f.jsx(Fe, { variant: "error", children: "*" })
  ] }),
  a ? f.jsx(ll, { variant: "rounded", height: "50px" }) : f.jsx(
    _n,
    {
      helperText: e10,
      error: t,
      id: n,
      placeholder: o,
      variant: "outlined",
      InputProps: {
        sx: {
          height: "45px",
          borderRadius: "10px",
          padding: u,
          minWidth: "330px"
        },
        ...c
      },
      ...d
    }
  )
] });
function Ea(e10, t, n) {
  return (t = P1(t)) in e10 ? Object.defineProperty(e10, t, {
    value: n,
    enumerable: true,
    configurable: true,
    writable: true
  }) : e10[t] = n, e10;
}
function D0(e10, t) {
  var n = Object.keys(e10);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e10);
    t && (o = o.filter(function(r) {
      return Object.getOwnPropertyDescriptor(e10, r).enumerable;
    })), n.push.apply(n, o);
  }
  return n;
}
function et(e10) {
  for (var t = 1; t < arguments.length; t++) {
    var n = arguments[t] != null ? arguments[t] : {};
    t % 2 ? D0(Object(n), true).forEach(function(o) {
      Ea(e10, o, n[o]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e10, Object.getOwnPropertyDescriptors(n)) : D0(Object(n)).forEach(function(o) {
      Object.defineProperty(e10, o, Object.getOwnPropertyDescriptor(n, o));
    });
  }
  return e10;
}
function zZ(e10) {
  if (Array.isArray(e10)) return e10;
}
function WZ(e10, t) {
  var n = e10 == null ? null : typeof Symbol < "u" && e10[Symbol.iterator] || e10["@@iterator"];
  if (n != null) {
    var o, r, s, a, l = [], c = true, u = false;
    try {
      if (s = (n = n.call(e10)).next, t === 0) {
        if (Object(n) !== n) return;
        c = false;
      } else for (; !(c = (o = s.call(n)).done) && (l.push(o.value), l.length !== t); c = true) ;
    } catch (d) {
      u = true, r = d;
    } finally {
      try {
        if (!c && n.return != null && (a = n.return(), Object(a) !== a)) return;
      } finally {
        if (u) throw r;
      }
    }
    return l;
  }
}
function gm(e10, t) {
  (t == null || t > e10.length) && (t = e10.length);
  for (var n = 0, o = Array(t); n < t; n++) o[n] = e10[n];
  return o;
}
function JT(e10, t) {
  if (e10) {
    if (typeof e10 == "string") return gm(e10, t);
    var n = {}.toString.call(e10).slice(8, -1);
    return n === "Object" && e10.constructor && (n = e10.constructor.name), n === "Map" || n === "Set" ? Array.from(e10) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? gm(e10, t) : void 0;
  }
}
function HZ() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function Tr(e10, t) {
  return zZ(e10) || WZ(e10, t) || JT(e10, t) || HZ();
}
function Mr(e10, t) {
  if (e10 == null) return {};
  var n, o, r = Xe(e10, t);
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(e10);
    for (o = 0; o < s.length; o++) n = s[o], t.includes(n) || {}.propertyIsEnumerable.call(e10, n) && (r[n] = e10[n]);
  }
  return r;
}
var GZ = ["defaultInputValue", "defaultMenuIsOpen", "defaultValue", "inputValue", "menuIsOpen", "onChange", "onInputChange", "onMenuClose", "onMenuOpen", "value"];
function UZ(e10) {
  var t = e10.defaultInputValue, n = t === void 0 ? "" : t, o = e10.defaultMenuIsOpen, r = o === void 0 ? false : o, s = e10.defaultValue, a = s === void 0 ? null : s, l = e10.inputValue, c = e10.menuIsOpen, u = e10.onChange, d = e10.onInputChange, p = e10.onMenuClose, m = e10.onMenuOpen, g = e10.value, b = Mr(e10, GZ), v = (0, import_react.useState)(l !== void 0 ? l : n), h = Tr(v, 2), y = h[0], C = h[1], x = (0, import_react.useState)(c !== void 0 ? c : r), T = Tr(x, 2), w = T[0], R = T[1], E = (0, import_react.useState)(g !== void 0 ? g : a), O = Tr(E, 2), I = O[0], P = O[1], A = (0, import_react.useCallback)(function(z, $) {
    typeof u == "function" && u(z, $), P(z);
  }, [u]), M = (0, import_react.useCallback)(function(z, $) {
    var k;
    typeof d == "function" && (k = d(z, $)), C(k !== void 0 ? k : z);
  }, [d]), F = (0, import_react.useCallback)(function() {
    typeof m == "function" && m(), R(true);
  }, [m]), D = (0, import_react.useCallback)(function() {
    typeof p == "function" && p(), R(false);
  }, [p]), N = l !== void 0 ? l : y, j = c !== void 0 ? c : w, _ = g !== void 0 ? g : I;
  return et(et({}, b), {}, {
    inputValue: N,
    menuIsOpen: j,
    onChange: A,
    onInputChange: M,
    onMenuClose: D,
    onMenuOpen: F,
    value: _
  });
}
function XZ(e10, t) {
  if (!(e10 instanceof t)) throw new TypeError("Cannot call a class as a function");
}
function M0(e10, t) {
  for (var n = 0; n < t.length; n++) {
    var o = t[n];
    o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e10, P1(o.key), o);
  }
}
function YZ(e10, t, n) {
  return t && M0(e10.prototype, t), n && M0(e10, n), Object.defineProperty(e10, "prototype", {
    writable: false
  }), e10;
}
function ZZ(e10, t) {
  if (typeof t != "function" && t !== null) throw new TypeError("Super expression must either be null or a function");
  e10.prototype = Object.create(t && t.prototype, {
    constructor: {
      value: e10,
      writable: true,
      configurable: true
    }
  }), Object.defineProperty(e10, "prototype", {
    writable: false
  }), t && qc(e10, t);
}
function xu(e10) {
  return xu = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
    return t.__proto__ || Object.getPrototypeOf(t);
  }, xu(e10);
}
function KT() {
  try {
    var e10 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch {
  }
  return (KT = function() {
    return !!e10;
  })();
}
function qZ(e10, t) {
  if (t && (Fi(t) == "object" || typeof t == "function")) return t;
  if (t !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
  return mC(e10);
}
function JZ(e10) {
  var t = KT();
  return function() {
    var n, o = xu(e10);
    if (t) {
      var r = xu(this).constructor;
      n = Reflect.construct(o, arguments, r);
    } else n = o.apply(this, arguments);
    return qZ(this, n);
  };
}
function KZ(e10) {
  if (Array.isArray(e10)) return gm(e10);
}
function QZ(e10) {
  if (typeof Symbol < "u" && e10[Symbol.iterator] != null || e10["@@iterator"] != null) return Array.from(e10);
}
function eq() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function jh(e10) {
  return KZ(e10) || QZ(e10) || JT(e10) || eq();
}
function tq(e10, t) {
  return t || (t = e10.slice(0)), Object.freeze(Object.defineProperties(e10, {
    raw: {
      value: Object.freeze(t)
    }
  }));
}
var hm = import_react.useLayoutEffect;
var nq = ["className", "clearValue", "cx", "getStyles", "getClassNames", "getValue", "hasValue", "isMulti", "isRtl", "options", "selectOption", "selectProps", "setValue", "theme"];
var Cu = function() {
};
function oq(e10, t) {
  return t ? t[0] === "-" ? e10 + t : e10 + "__" + t : e10;
}
function rq(e10, t) {
  for (var n = arguments.length, o = new Array(n > 2 ? n - 2 : 0), r = 2; r < n; r++)
    o[r - 2] = arguments[r];
  var s = [].concat(o);
  if (t && e10)
    for (var a in t)
      t.hasOwnProperty(a) && t[a] && s.push("".concat(oq(e10, a)));
  return s.filter(function(l) {
    return l;
  }).map(function(l) {
    return String(l).trim();
  }).join(" ");
}
var k0 = function(t) {
  return fq(t) ? t.filter(Boolean) : Fi(t) === "object" && t !== null ? [t] : [];
};
var QT = function(t) {
  t.className, t.clearValue, t.cx, t.getStyles, t.getClassNames, t.getValue, t.hasValue, t.isMulti, t.isRtl, t.options, t.selectOption, t.selectProps, t.setValue, t.theme;
  var n = Mr(t, nq);
  return et({}, n);
};
var an = function(t, n, o) {
  var r = t.cx, s = t.getStyles, a = t.getClassNames, l = t.className;
  return {
    css: s(n, t),
    className: r(o ?? {}, a(n, t), l)
  };
};
function qd(e10) {
  return [document.documentElement, document.body, window].indexOf(e10) > -1;
}
function iq(e10) {
  return qd(e10) ? window.innerHeight : e10.clientHeight;
}
function eI(e10) {
  return qd(e10) ? window.pageYOffset : e10.scrollTop;
}
function Su(e10, t) {
  if (qd(e10)) {
    window.scrollTo(0, t);
    return;
  }
  e10.scrollTop = t;
}
function sq(e10) {
  var t = getComputedStyle(e10), n = t.position === "absolute", o = /(auto|scroll)/;
  if (t.position === "fixed") return document.documentElement;
  for (var r = e10; r = r.parentElement; )
    if (t = getComputedStyle(r), !(n && t.position === "static") && o.test(t.overflow + t.overflowY + t.overflowX))
      return r;
  return document.documentElement;
}
function aq(e10, t, n, o) {
  return n * ((e10 = e10 / o - 1) * e10 * e10 + 1) + t;
}
function wc(e10, t) {
  var n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 200, o = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : Cu, r = eI(e10), s = t - r, a = 10, l = 0;
  function c() {
    l += a;
    var u = aq(l, r, s, n);
    Su(e10, u), l < n ? window.requestAnimationFrame(c) : o(e10);
  }
  c();
}
function F0(e10, t) {
  var n = e10.getBoundingClientRect(), o = t.getBoundingClientRect(), r = t.offsetHeight / 3;
  o.bottom + r > n.bottom ? Su(e10, Math.min(t.offsetTop + t.clientHeight - e10.offsetHeight + r, e10.scrollHeight)) : o.top - r < n.top && Su(e10, Math.max(t.offsetTop - r, 0));
}
function lq(e10) {
  var t = e10.getBoundingClientRect();
  return {
    bottom: t.bottom,
    height: t.height,
    left: t.left,
    right: t.right,
    top: t.top,
    width: t.width
  };
}
function N0() {
  try {
    return document.createEvent("TouchEvent"), true;
  } catch {
    return false;
  }
}
function cq() {
  try {
    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
  } catch {
    return false;
  }
}
var tI = false;
var uq = {
  get passive() {
    return tI = true;
  }
};
var Tc = typeof window < "u" ? window : {};
Tc.addEventListener && Tc.removeEventListener && (Tc.addEventListener("p", Cu, uq), Tc.removeEventListener("p", Cu, false));
var dq = tI;
function pq(e10) {
  return e10 != null;
}
function fq(e10) {
  return Array.isArray(e10);
}
function Ic(e10, t, n) {
  return e10 ? t : n;
}
var mq = function(t) {
  for (var n = arguments.length, o = new Array(n > 1 ? n - 1 : 0), r = 1; r < n; r++)
    o[r - 1] = arguments[r];
  var s = Object.entries(t).filter(function(a) {
    var l = Tr(a, 1), c = l[0];
    return !o.includes(c);
  });
  return s.reduce(function(a, l) {
    var c = Tr(l, 2), u = c[0], d = c[1];
    return a[u] = d, a;
  }, {});
};
var gq = ["children", "innerProps"];
var hq = ["children", "innerProps"];
function bq(e10) {
  var t = e10.maxHeight, n = e10.menuEl, o = e10.minHeight, r = e10.placement, s = e10.shouldScroll, a = e10.isFixedPosition, l = e10.controlHeight, c = sq(n), u = {
    placement: "bottom",
    maxHeight: t
  };
  if (!n || !n.offsetParent) return u;
  var d = c.getBoundingClientRect(), p = d.height, m = n.getBoundingClientRect(), g = m.bottom, b = m.height, v = m.top, h = n.offsetParent.getBoundingClientRect(), y = h.top, C = a ? window.innerHeight : iq(c), x = eI(c), T = parseInt(getComputedStyle(n).marginBottom, 10), w = parseInt(getComputedStyle(n).marginTop, 10), R = y - w, E = C - v, O = R + x, I = p - x - v, P = g - C + x + T, A = x + v - w, M = 160;
  switch (r) {
    case "auto":
    case "bottom":
      if (E >= b)
        return {
          placement: "bottom",
          maxHeight: t
        };
      if (I >= b && !a)
        return s && wc(c, P, M), {
          placement: "bottom",
          maxHeight: t
        };
      if (!a && I >= o || a && E >= o) {
        s && wc(c, P, M);
        var F = a ? E - T : I - T;
        return {
          placement: "bottom",
          maxHeight: F
        };
      }
      if (r === "auto" || a) {
        var D = t, N = a ? R : O;
        return N >= o && (D = Math.min(N - T - l, t)), {
          placement: "top",
          maxHeight: D
        };
      }
      if (r === "bottom")
        return s && Su(c, P), {
          placement: "bottom",
          maxHeight: t
        };
      break;
    case "top":
      if (R >= b)
        return {
          placement: "top",
          maxHeight: t
        };
      if (O >= b && !a)
        return s && wc(c, A, M), {
          placement: "top",
          maxHeight: t
        };
      if (!a && O >= o || a && R >= o) {
        var j = t;
        return (!a && O >= o || a && R >= o) && (j = a ? R - w : O - w), s && wc(c, A, M), {
          placement: "top",
          maxHeight: j
        };
      }
      return {
        placement: "bottom",
        maxHeight: t
      };
    default:
      throw new Error('Invalid placement provided "'.concat(r, '".'));
  }
  return u;
}
function vq(e10) {
  var t = {
    bottom: "top",
    top: "bottom"
  };
  return e10 ? t[e10] : "bottom";
}
var nI = function(t) {
  return t === "auto" ? "bottom" : t;
};
var yq = function(t, n) {
  var o, r = t.placement, s = t.theme, a = s.borderRadius, l = s.spacing, c = s.colors;
  return et((o = {
    label: "menu"
  }, Ea(o, vq(r), "100%"), Ea(o, "position", "absolute"), Ea(o, "width", "100%"), Ea(o, "zIndex", 1), o), n ? {} : {
    backgroundColor: c.neutral0,
    borderRadius: a,
    boxShadow: "0 0 0 1px hsla(0, 0%, 0%, 0.1), 0 4px 11px hsla(0, 0%, 0%, 0.1)",
    marginBottom: l.menuGutter,
    marginTop: l.menuGutter
  });
};
var oI = (0, import_react.createContext)(null);
var xq = function(t) {
  var n = t.children, o = t.minMenuHeight, r = t.maxMenuHeight, s = t.menuPlacement, a = t.menuPosition, l = t.menuShouldScrollIntoView, c = t.theme, u = (0, import_react.useContext)(oI) || {}, d = u.setPortalPlacement, p = (0, import_react.useRef)(null), m = (0, import_react.useState)(r), g = Tr(m, 2), b = g[0], v = g[1], h = (0, import_react.useState)(null), y = Tr(h, 2), C = y[0], x = y[1], T = c.spacing.controlHeight;
  return hm(function() {
    var w = p.current;
    if (w) {
      var R = a === "fixed", E = l && !R, O = bq({
        maxHeight: r,
        menuEl: w,
        minHeight: o,
        placement: s,
        shouldScroll: E,
        isFixedPosition: R,
        controlHeight: T
      });
      v(O.maxHeight), x(O.placement), d == null || d(O.placement);
    }
  }, [r, s, a, l, o, d, T]), n({
    ref: p,
    placerProps: et(et({}, t), {}, {
      placement: C || nI(s),
      maxHeight: b
    })
  });
};
var Cq = function(t) {
  var n = t.children, o = t.innerRef, r = t.innerProps;
  return nt("div", V({}, an(t, "menu", {
    menu: true
  }), {
    ref: o
  }, r), n);
};
var Sq = Cq;
var wq = function(t, n) {
  var o = t.maxHeight, r = t.theme.spacing.baseUnit;
  return et({
    maxHeight: o,
    overflowY: "auto",
    position: "relative",
    // required for offset[Height, Top] > keyboard scroll
    WebkitOverflowScrolling: "touch"
  }, n ? {} : {
    paddingBottom: r,
    paddingTop: r
  });
};
var Tq = function(t) {
  var n = t.children, o = t.innerProps, r = t.innerRef, s = t.isMulti;
  return nt("div", V({}, an(t, "menuList", {
    "menu-list": true,
    "menu-list--is-multi": s
  }), {
    ref: r
  }, o), n);
};
var rI = function(t, n) {
  var o = t.theme, r = o.spacing.baseUnit, s = o.colors;
  return et({
    textAlign: "center"
  }, n ? {} : {
    color: s.neutral40,
    padding: "".concat(r * 2, "px ").concat(r * 3, "px")
  });
};
var Iq = rI;
var Rq = rI;
var Eq = function(t) {
  var n = t.children, o = n === void 0 ? "No options" : n, r = t.innerProps, s = Mr(t, gq);
  return nt("div", V({}, an(et(et({}, s), {}, {
    children: o,
    innerProps: r
  }), "noOptionsMessage", {
    "menu-notice": true,
    "menu-notice--no-options": true
  }), r), o);
};
var Oq = function(t) {
  var n = t.children, o = n === void 0 ? "Loading..." : n, r = t.innerProps, s = Mr(t, hq);
  return nt("div", V({}, an(et(et({}, s), {}, {
    children: o,
    innerProps: r
  }), "loadingMessage", {
    "menu-notice": true,
    "menu-notice--loading": true
  }), r), o);
};
var Pq = function(t) {
  var n = t.rect, o = t.offset, r = t.position;
  return {
    left: n.left,
    position: r,
    top: o,
    width: n.width,
    zIndex: 1
  };
};
var Aq = function(t) {
  var n = t.appendTo, o = t.children, r = t.controlElement, s = t.innerProps, a = t.menuPlacement, l = t.menuPosition, c = (0, import_react.useRef)(null), u = (0, import_react.useRef)(null), d = (0, import_react.useState)(nI(a)), p = Tr(d, 2), m = p[0], g = p[1], b = (0, import_react.useMemo)(function() {
    return {
      setPortalPlacement: g
    };
  }, []), v = (0, import_react.useState)(null), h = Tr(v, 2), y = h[0], C = h[1], x = (0, import_react.useCallback)(function() {
    if (r) {
      var E = lq(r), O = l === "fixed" ? 0 : window.pageYOffset, I = E[m] + O;
      (I !== (y == null ? void 0 : y.offset) || E.left !== (y == null ? void 0 : y.rect.left) || E.width !== (y == null ? void 0 : y.rect.width)) && C({
        offset: I,
        rect: E
      });
    }
  }, [r, l, m, y == null ? void 0 : y.offset, y == null ? void 0 : y.rect.left, y == null ? void 0 : y.rect.width]);
  hm(function() {
    x();
  }, [x]);
  var T = (0, import_react.useCallback)(function() {
    typeof u.current == "function" && (u.current(), u.current = null), r && c.current && (u.current = b4(r, c.current, x, {
      elementResize: "ResizeObserver" in window
    }));
  }, [r, x]);
  hm(function() {
    T();
  }, [T]);
  var w = (0, import_react.useCallback)(function(E) {
    c.current = E, T();
  }, [T]);
  if (!n && l !== "fixed" || !y) return null;
  var R = nt("div", V({
    ref: w
  }, an(et(et({}, t), {}, {
    offset: y.offset,
    position: l,
    rect: y.rect
  }), "menuPortal", {
    "menu-portal": true
  }), s), o);
  return nt(oI.Provider, {
    value: b
  }, n ? (0, import_react_dom.createPortal)(R, n) : R);
};
var jq = function(t) {
  var n = t.isDisabled, o = t.isRtl;
  return {
    label: "container",
    direction: o ? "rtl" : void 0,
    pointerEvents: n ? "none" : void 0,
    // cancel mouse events when disabled
    position: "relative"
  };
};
var Dq = function(t) {
  var n = t.children, o = t.innerProps, r = t.isDisabled, s = t.isRtl;
  return nt("div", V({}, an(t, "container", {
    "--is-disabled": r,
    "--is-rtl": s
  }), o), n);
};
var Mq = function(t, n) {
  var o = t.theme.spacing, r = t.isMulti, s = t.hasValue, a = t.selectProps.controlShouldRenderValue;
  return et({
    alignItems: "center",
    display: r && s && a ? "flex" : "grid",
    flex: 1,
    flexWrap: "wrap",
    WebkitOverflowScrolling: "touch",
    position: "relative",
    overflow: "hidden"
  }, n ? {} : {
    padding: "".concat(o.baseUnit / 2, "px ").concat(o.baseUnit * 2, "px")
  });
};
var kq = function(t) {
  var n = t.children, o = t.innerProps, r = t.isMulti, s = t.hasValue;
  return nt("div", V({}, an(t, "valueContainer", {
    "value-container": true,
    "value-container--is-multi": r,
    "value-container--has-value": s
  }), o), n);
};
var Fq = function() {
  return {
    alignItems: "center",
    alignSelf: "stretch",
    display: "flex",
    flexShrink: 0
  };
};
var Nq = function(t) {
  var n = t.children, o = t.innerProps;
  return nt("div", V({}, an(t, "indicatorsContainer", {
    indicators: true
  }), o), n);
};
var $0;
var $q = ["size"];
var Vq = ["innerProps", "isRtl", "size"];
function _q() {
  return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
}
var Lq = false ? {
  name: "8mmkcg",
  styles: "display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0"
} : {
  name: "tj5bde-Svg",
  styles: "display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;label:Svg;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _q
};
var iI = function(t) {
  var n = t.size, o = Mr(t, $q);
  return nt("svg", V({
    height: n,
    width: n,
    viewBox: "0 0 20 20",
    "aria-hidden": "true",
    focusable: "false",
    css: Lq
  }, o));
};
var Dh = function(t) {
  return nt(iI, V({
    size: 20
  }, t), nt("path", {
    d: "M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z"
  }));
};
var sI = function(t) {
  return nt(iI, V({
    size: 20
  }, t), nt("path", {
    d: "M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
  }));
};
var aI = function(t, n) {
  var o = t.isFocused, r = t.theme, s = r.spacing.baseUnit, a = r.colors;
  return et({
    label: "indicatorContainer",
    display: "flex",
    transition: "color 150ms"
  }, n ? {} : {
    color: o ? a.neutral60 : a.neutral20,
    padding: s * 2,
    ":hover": {
      color: o ? a.neutral80 : a.neutral40
    }
  });
};
var Bq = aI;
var zq = function(t) {
  var n = t.children, o = t.innerProps;
  return nt("div", V({}, an(t, "dropdownIndicator", {
    indicator: true,
    "dropdown-indicator": true
  }), o), n || nt(sI, null));
};
var Wq = aI;
var Hq = function(t) {
  var n = t.children, o = t.innerProps;
  return nt("div", V({}, an(t, "clearIndicator", {
    indicator: true,
    "clear-indicator": true
  }), o), n || nt(Dh, null));
};
var Gq = function(t, n) {
  var o = t.isDisabled, r = t.theme, s = r.spacing.baseUnit, a = r.colors;
  return et({
    label: "indicatorSeparator",
    alignSelf: "stretch",
    width: 1
  }, n ? {} : {
    backgroundColor: o ? a.neutral10 : a.neutral20,
    marginBottom: s * 2,
    marginTop: s * 2
  });
};
var Uq = function(t) {
  var n = t.innerProps;
  return nt("span", V({}, n, an(t, "indicatorSeparator", {
    "indicator-separator": true
  })));
};
var Xq = zo($0 || ($0 = tq([`
  0%, 80%, 100% { opacity: 0; }
  40% { opacity: 1; }
`])));
var Yq = function(t, n) {
  var o = t.isFocused, r = t.size, s = t.theme, a = s.colors, l = s.spacing.baseUnit;
  return et({
    label: "loadingIndicator",
    display: "flex",
    transition: "color 150ms",
    alignSelf: "center",
    fontSize: r,
    lineHeight: 1,
    marginRight: r,
    textAlign: "center",
    verticalAlign: "middle"
  }, n ? {} : {
    color: o ? a.neutral60 : a.neutral20,
    padding: l * 2
  });
};
var Jp = function(t) {
  var n = t.delay, o = t.offset;
  return nt("span", {
    css: lr({
      animation: "".concat(Xq, " 1s ease-in-out ").concat(n, "ms infinite;"),
      backgroundColor: "currentColor",
      borderRadius: "1em",
      display: "inline-block",
      marginLeft: o ? "1em" : void 0,
      height: "1em",
      verticalAlign: "top",
      width: "1em"
    }, false ? "" : ";label:LoadingDot;", false ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */")
  });
};
var Zq = function(t) {
  var n = t.innerProps, o = t.isRtl, r = t.size, s = r === void 0 ? 4 : r, a = Mr(t, Vq);
  return nt("div", V({}, an(et(et({}, a), {}, {
    innerProps: n,
    isRtl: o,
    size: s
  }), "loadingIndicator", {
    indicator: true,
    "loading-indicator": true
  }), n), nt(Jp, {
    delay: 0,
    offset: o
  }), nt(Jp, {
    delay: 160,
    offset: true
  }), nt(Jp, {
    delay: 320,
    offset: !o
  }));
};
var qq = function(t, n) {
  var o = t.isDisabled, r = t.isFocused, s = t.theme, a = s.colors, l = s.borderRadius, c = s.spacing;
  return et({
    label: "control",
    alignItems: "center",
    cursor: "default",
    display: "flex",
    flexWrap: "wrap",
    justifyContent: "space-between",
    minHeight: c.controlHeight,
    outline: "0 !important",
    position: "relative",
    transition: "all 100ms"
  }, n ? {} : {
    backgroundColor: o ? a.neutral5 : a.neutral0,
    borderColor: o ? a.neutral10 : r ? a.primary : a.neutral20,
    borderRadius: l,
    borderStyle: "solid",
    borderWidth: 1,
    boxShadow: r ? "0 0 0 1px ".concat(a.primary) : void 0,
    "&:hover": {
      borderColor: r ? a.primary : a.neutral30
    }
  });
};
var Jq = function(t) {
  var n = t.children, o = t.isDisabled, r = t.isFocused, s = t.innerRef, a = t.innerProps, l = t.menuIsOpen;
  return nt("div", V({
    ref: s
  }, an(t, "control", {
    control: true,
    "control--is-disabled": o,
    "control--is-focused": r,
    "control--menu-is-open": l
  }), a, {
    "aria-disabled": o || void 0
  }), n);
};
var Kq = Jq;
var Qq = ["data"];
var eJ = function(t, n) {
  var o = t.theme.spacing;
  return n ? {} : {
    paddingBottom: o.baseUnit * 2,
    paddingTop: o.baseUnit * 2
  };
};
var tJ = function(t) {
  var n = t.children, o = t.cx, r = t.getStyles, s = t.getClassNames, a = t.Heading, l = t.headingProps, c = t.innerProps, u = t.label, d = t.theme, p = t.selectProps;
  return nt("div", V({}, an(t, "group", {
    group: true
  }), c), nt(a, V({}, l, {
    selectProps: p,
    theme: d,
    getStyles: r,
    getClassNames: s,
    cx: o
  }), u), nt("div", null, n));
};
var nJ = function(t, n) {
  var o = t.theme, r = o.colors, s = o.spacing;
  return et({
    label: "group",
    cursor: "default",
    display: "block"
  }, n ? {} : {
    color: r.neutral40,
    fontSize: "75%",
    fontWeight: 500,
    marginBottom: "0.25em",
    paddingLeft: s.baseUnit * 3,
    paddingRight: s.baseUnit * 3,
    textTransform: "uppercase"
  });
};
var oJ = function(t) {
  var n = QT(t);
  n.data;
  var o = Mr(n, Qq);
  return nt("div", V({}, an(t, "groupHeading", {
    "group-heading": true
  }), o));
};
var rJ = tJ;
var iJ = ["innerRef", "isDisabled", "isHidden", "inputClassName"];
var sJ = function(t, n) {
  var o = t.isDisabled, r = t.value, s = t.theme, a = s.spacing, l = s.colors;
  return et(et({
    visibility: o ? "hidden" : "visible",
    // force css to recompute when value change due to @emotion bug.
    // We can remove it whenever the bug is fixed.
    transform: r ? "translateZ(0)" : ""
  }, aJ), n ? {} : {
    margin: a.baseUnit / 2,
    paddingBottom: a.baseUnit / 2,
    paddingTop: a.baseUnit / 2,
    color: l.neutral80
  });
};
var lI = {
  gridArea: "1 / 2",
  font: "inherit",
  minWidth: "2px",
  border: 0,
  margin: 0,
  outline: 0,
  padding: 0
};
var aJ = {
  flex: "1 1 auto",
  display: "inline-grid",
  gridArea: "1 / 1 / 2 / 3",
  gridTemplateColumns: "0 min-content",
  "&:after": et({
    content: 'attr(data-value) " "',
    visibility: "hidden",
    whiteSpace: "pre"
  }, lI)
};
var lJ = function(t) {
  return et({
    label: "input",
    color: "inherit",
    background: 0,
    opacity: t ? 0 : 1,
    width: "100%"
  }, lI);
};
var cJ = function(t) {
  var n = t.cx, o = t.value, r = QT(t), s = r.innerRef, a = r.isDisabled, l = r.isHidden, c = r.inputClassName, u = Mr(r, iJ);
  return nt("div", V({}, an(t, "input", {
    "input-container": true
  }), {
    "data-value": o || ""
  }), nt("input", V({
    className: n({
      input: true
    }, c),
    ref: s,
    style: lJ(l),
    disabled: a
  }, u)));
};
var uJ = cJ;
var dJ = function(t, n) {
  var o = t.theme, r = o.spacing, s = o.borderRadius, a = o.colors;
  return et({
    label: "multiValue",
    display: "flex",
    minWidth: 0
  }, n ? {} : {
    backgroundColor: a.neutral10,
    borderRadius: s / 2,
    margin: r.baseUnit / 2
  });
};
var pJ = function(t, n) {
  var o = t.theme, r = o.borderRadius, s = o.colors, a = t.cropWithEllipsis;
  return et({
    overflow: "hidden",
    textOverflow: a || a === void 0 ? "ellipsis" : void 0,
    whiteSpace: "nowrap"
  }, n ? {} : {
    borderRadius: r / 2,
    color: s.neutral80,
    fontSize: "85%",
    padding: 3,
    paddingLeft: 6
  });
};
var fJ = function(t, n) {
  var o = t.theme, r = o.spacing, s = o.borderRadius, a = o.colors, l = t.isFocused;
  return et({
    alignItems: "center",
    display: "flex"
  }, n ? {} : {
    borderRadius: s / 2,
    backgroundColor: l ? a.dangerLight : void 0,
    paddingLeft: r.baseUnit,
    paddingRight: r.baseUnit,
    ":hover": {
      backgroundColor: a.dangerLight,
      color: a.danger
    }
  });
};
var cI = function(t) {
  var n = t.children, o = t.innerProps;
  return nt("div", o, n);
};
var mJ = cI;
var gJ = cI;
function hJ(e10) {
  var t = e10.children, n = e10.innerProps;
  return nt("div", V({
    role: "button"
  }, n), t || nt(Dh, {
    size: 14
  }));
}
var bJ = function(t) {
  var n = t.children, o = t.components, r = t.data, s = t.innerProps, a = t.isDisabled, l = t.removeProps, c = t.selectProps, u = o.Container, d = o.Label, p = o.Remove;
  return nt(u, {
    data: r,
    innerProps: et(et({}, an(t, "multiValue", {
      "multi-value": true,
      "multi-value--is-disabled": a
    })), s),
    selectProps: c
  }, nt(d, {
    data: r,
    innerProps: et({}, an(t, "multiValueLabel", {
      "multi-value__label": true
    })),
    selectProps: c
  }, n), nt(p, {
    data: r,
    innerProps: et(et({}, an(t, "multiValueRemove", {
      "multi-value__remove": true
    })), {}, {
      "aria-label": "Remove ".concat(n || "option")
    }, l),
    selectProps: c
  }));
};
var vJ = bJ;
var yJ = function(t, n) {
  var o = t.isDisabled, r = t.isFocused, s = t.isSelected, a = t.theme, l = a.spacing, c = a.colors;
  return et({
    label: "option",
    cursor: "default",
    display: "block",
    fontSize: "inherit",
    width: "100%",
    userSelect: "none",
    WebkitTapHighlightColor: "rgba(0, 0, 0, 0)"
  }, n ? {} : {
    backgroundColor: s ? c.primary : r ? c.primary25 : "transparent",
    color: o ? c.neutral20 : s ? c.neutral0 : "inherit",
    padding: "".concat(l.baseUnit * 2, "px ").concat(l.baseUnit * 3, "px"),
    // provide some affordance on touch devices
    ":active": {
      backgroundColor: o ? void 0 : s ? c.primary : c.primary50
    }
  });
};
var xJ = function(t) {
  var n = t.children, o = t.isDisabled, r = t.isFocused, s = t.isSelected, a = t.innerRef, l = t.innerProps;
  return nt("div", V({}, an(t, "option", {
    option: true,
    "option--is-disabled": o,
    "option--is-focused": r,
    "option--is-selected": s
  }), {
    ref: a,
    "aria-disabled": o
  }, l), n);
};
var CJ = xJ;
var SJ = function(t, n) {
  var o = t.theme, r = o.spacing, s = o.colors;
  return et({
    label: "placeholder",
    gridArea: "1 / 1 / 2 / 3"
  }, n ? {} : {
    color: s.neutral50,
    marginLeft: r.baseUnit / 2,
    marginRight: r.baseUnit / 2
  });
};
var wJ = function(t) {
  var n = t.children, o = t.innerProps;
  return nt("div", V({}, an(t, "placeholder", {
    placeholder: true
  }), o), n);
};
var TJ = wJ;
var IJ = function(t, n) {
  var o = t.isDisabled, r = t.theme, s = r.spacing, a = r.colors;
  return et({
    label: "singleValue",
    gridArea: "1 / 1 / 2 / 3",
    maxWidth: "100%",
    overflow: "hidden",
    textOverflow: "ellipsis",
    whiteSpace: "nowrap"
  }, n ? {} : {
    color: o ? a.neutral40 : a.neutral80,
    marginLeft: s.baseUnit / 2,
    marginRight: s.baseUnit / 2
  });
};
var RJ = function(t) {
  var n = t.children, o = t.isDisabled, r = t.innerProps;
  return nt("div", V({}, an(t, "singleValue", {
    "single-value": true,
    "single-value--is-disabled": o
  }), r), n);
};
var EJ = RJ;
var OJ = {
  ClearIndicator: Hq,
  Control: Kq,
  DropdownIndicator: zq,
  DownChevron: sI,
  CrossIcon: Dh,
  Group: rJ,
  GroupHeading: oJ,
  IndicatorsContainer: Nq,
  IndicatorSeparator: Uq,
  Input: uJ,
  LoadingIndicator: Zq,
  Menu: Sq,
  MenuList: Tq,
  MenuPortal: Aq,
  LoadingMessage: Oq,
  NoOptionsMessage: Eq,
  MultiValue: vJ,
  MultiValueContainer: mJ,
  MultiValueLabel: gJ,
  MultiValueRemove: hJ,
  Option: CJ,
  Placeholder: TJ,
  SelectContainer: Dq,
  SingleValue: EJ,
  ValueContainer: kq
};
var PJ = function(t) {
  return et(et({}, OJ), t.components);
};
var V0 = Number.isNaN || function(t) {
  return typeof t == "number" && t !== t;
};
function AJ(e10, t) {
  return !!(e10 === t || V0(e10) && V0(t));
}
function jJ(e10, t) {
  if (e10.length !== t.length)
    return false;
  for (var n = 0; n < e10.length; n++)
    if (!AJ(e10[n], t[n]))
      return false;
  return true;
}
function DJ(e10, t) {
  t === void 0 && (t = jJ);
  var n = null;
  function o() {
    for (var r = [], s = 0; s < arguments.length; s++)
      r[s] = arguments[s];
    if (n && n.lastThis === this && t(r, n.lastArgs))
      return n.lastResult;
    var a = e10.apply(this, r);
    return n = {
      lastResult: a,
      lastArgs: r,
      lastThis: this
    }, a;
  }
  return o.clear = function() {
    n = null;
  }, o;
}
function MJ() {
  return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
}
var kJ = false ? {
  name: "7pg0cj-a11yText",
  styles: "label:a11yText;z-index:9999;border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;width:1px;position:absolute;overflow:hidden;padding:0;white-space:nowrap"
} : {
  name: "1f43avz-a11yText-A11yText",
  styles: "label:a11yText;z-index:9999;border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;width:1px;position:absolute;overflow:hidden;padding:0;white-space:nowrap;label:A11yText;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkExMXlUZXh0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNSSIsImZpbGUiOiJBMTF5VGV4dC50c3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCB7IGpzeCB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcblxuLy8gQXNzaXN0aXZlIHRleHQgdG8gZGVzY3JpYmUgdmlzdWFsIGVsZW1lbnRzLiBIaWRkZW4gZm9yIHNpZ2h0ZWQgdXNlcnMuXG5jb25zdCBBMTF5VGV4dCA9IChwcm9wczogSlNYLkludHJpbnNpY0VsZW1lbnRzWydzcGFuJ10pID0+IChcbiAgPHNwYW5cbiAgICBjc3M9e3tcbiAgICAgIGxhYmVsOiAnYTExeVRleHQnLFxuICAgICAgekluZGV4OiA5OTk5LFxuICAgICAgYm9yZGVyOiAwLFxuICAgICAgY2xpcDogJ3JlY3QoMXB4LCAxcHgsIDFweCwgMXB4KScsXG4gICAgICBoZWlnaHQ6IDEsXG4gICAgICB3aWR0aDogMSxcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICAgICAgcGFkZGluZzogMCxcbiAgICAgIHdoaXRlU3BhY2U6ICdub3dyYXAnLFxuICAgIH19XG4gICAgey4uLnByb3BzfVxuICAvPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgQTExeVRleHQ7XG4iXX0= */",
  toString: MJ
};
var FJ = function(t) {
  return nt("span", V({
    css: kJ
  }, t));
};
var _0 = FJ;
var NJ = {
  guidance: function(t) {
    var n = t.isSearchable, o = t.isMulti, r = t.tabSelectsValue, s = t.context, a = t.isInitialFocus;
    switch (s) {
      case "menu":
        return "Use Up and Down to choose options, press Enter to select the currently focused option, press Escape to exit the menu".concat(r ? ", press Tab to select the option and exit the menu" : "", ".");
      case "input":
        return a ? "".concat(t["aria-label"] || "Select", " is focused ").concat(n ? ",type to refine list" : "", ", press Down to open the menu, ").concat(o ? " press left to focus selected values" : "") : "";
      case "value":
        return "Use left and right to toggle between focused values, press Backspace to remove the currently focused value";
      default:
        return "";
    }
  },
  onChange: function(t) {
    var n = t.action, o = t.label, r = o === void 0 ? "" : o, s = t.labels, a = t.isDisabled;
    switch (n) {
      case "deselect-option":
      case "pop-value":
      case "remove-value":
        return "option ".concat(r, ", deselected.");
      case "clear":
        return "All selected options have been cleared.";
      case "initial-input-focus":
        return "option".concat(s.length > 1 ? "s" : "", " ").concat(s.join(","), ", selected.");
      case "select-option":
        return a ? "option ".concat(r, " is disabled. Select another option.") : "option ".concat(r, ", selected.");
      default:
        return "";
    }
  },
  onFocus: function(t) {
    var n = t.context, o = t.focused, r = t.options, s = t.label, a = s === void 0 ? "" : s, l = t.selectValue, c = t.isDisabled, u = t.isSelected, d = t.isAppleDevice, p = function(v, h) {
      return v && v.length ? "".concat(v.indexOf(h) + 1, " of ").concat(v.length) : "";
    };
    if (n === "value" && l)
      return "value ".concat(a, " focused, ").concat(p(l, o), ".");
    if (n === "menu" && d) {
      var m = c ? " disabled" : "", g = "".concat(u ? " selected" : "").concat(m);
      return "".concat(a).concat(g, ", ").concat(p(r, o), ".");
    }
    return "";
  },
  onFilter: function(t) {
    var n = t.inputValue, o = t.resultsMessage;
    return "".concat(o).concat(n ? " for search term " + n : "", ".");
  }
};
var $J = function(t) {
  var n = t.ariaSelection, o = t.focusedOption, r = t.focusedValue, s = t.focusableOptions, a = t.isFocused, l = t.selectValue, c = t.selectProps, u = t.id, d = t.isAppleDevice, p = c.ariaLiveMessages, m = c.getOptionLabel, g = c.inputValue, b = c.isMulti, v = c.isOptionDisabled, h = c.isSearchable, y = c.menuIsOpen, C = c.options, x = c.screenReaderStatus, T = c.tabSelectsValue, w = c.isLoading, R = c["aria-label"], E = c["aria-live"], O = (0, import_react.useMemo)(function() {
    return et(et({}, NJ), p || {});
  }, [p]), I = (0, import_react.useMemo)(function() {
    var N = "";
    if (n && O.onChange) {
      var j = n.option, _ = n.options, z = n.removedValue, $ = n.removedValues, k = n.value, B = function(U) {
        return Array.isArray(U) ? null : U;
      }, Q = z || j || B(k), ee = Q ? m(Q) : "", G = _ || $ || void 0, H = G ? G.map(m) : [], Y = et({
        // multiSelected items are usually items that have already been selected
        // or set by the user as a default value so we assume they are not disabled
        isDisabled: Q && v(Q, l),
        label: ee,
        labels: H
      }, n);
      N = O.onChange(Y);
    }
    return N;
  }, [n, O, v, l, m]), P = (0, import_react.useMemo)(function() {
    var N = "", j = o || r, _ = !!(o && l && l.includes(o));
    if (j && O.onFocus) {
      var z = {
        focused: j,
        label: m(j),
        isDisabled: v(j, l),
        isSelected: _,
        options: s,
        context: j === o ? "menu" : "value",
        selectValue: l,
        isAppleDevice: d
      };
      N = O.onFocus(z);
    }
    return N;
  }, [o, r, m, v, O, s, l, d]), A = (0, import_react.useMemo)(function() {
    var N = "";
    if (y && C.length && !w && O.onFilter) {
      var j = x({
        count: s.length
      });
      N = O.onFilter({
        inputValue: g,
        resultsMessage: j
      });
    }
    return N;
  }, [s, g, y, O, C, x, w]), M = (n == null ? void 0 : n.action) === "initial-input-focus", F = (0, import_react.useMemo)(function() {
    var N = "";
    if (O.guidance) {
      var j = r ? "value" : y ? "menu" : "input";
      N = O.guidance({
        "aria-label": R,
        context: j,
        isDisabled: o && v(o, l),
        isMulti: b,
        isSearchable: h,
        tabSelectsValue: T,
        isInitialFocus: M
      });
    }
    return N;
  }, [R, o, r, b, v, h, y, O, l, T, M]), D = nt(import_react.Fragment, null, nt("span", {
    id: "aria-selection"
  }, I), nt("span", {
    id: "aria-focused"
  }, P), nt("span", {
    id: "aria-results"
  }, A), nt("span", {
    id: "aria-guidance"
  }, F));
  return nt(import_react.Fragment, null, nt(_0, {
    id: u
  }, M && D), nt(_0, {
    "aria-live": E,
    "aria-atomic": "false",
    "aria-relevant": "additions text",
    role: "log"
  }, a && !M && D));
};
var VJ = $J;
var bm = [{
  base: "A",
  letters: "AⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ"
}, {
  base: "AA",
  letters: "Ꜳ"
}, {
  base: "AE",
  letters: "ÆǼǢ"
}, {
  base: "AO",
  letters: "Ꜵ"
}, {
  base: "AU",
  letters: "Ꜷ"
}, {
  base: "AV",
  letters: "ꜸꜺ"
}, {
  base: "AY",
  letters: "Ꜽ"
}, {
  base: "B",
  letters: "BⒷＢḂḄḆɃƂƁ"
}, {
  base: "C",
  letters: "CⒸＣĆĈĊČÇḈƇȻꜾ"
}, {
  base: "D",
  letters: "DⒹＤḊĎḌḐḒḎĐƋƊƉꝹ"
}, {
  base: "DZ",
  letters: "ǱǄ"
}, {
  base: "Dz",
  letters: "ǲǅ"
}, {
  base: "E",
  letters: "EⒺＥÈÉÊỀẾỄỂẼĒḔḖĔĖËẺĚȄȆẸỆȨḜĘḘḚƐƎ"
}, {
  base: "F",
  letters: "FⒻＦḞƑꝻ"
}, {
  base: "G",
  letters: "GⒼＧǴĜḠĞĠǦĢǤƓꞠꝽꝾ"
}, {
  base: "H",
  letters: "HⒽＨĤḢḦȞḤḨḪĦⱧⱵꞍ"
}, {
  base: "I",
  letters: "IⒾＩÌÍÎĨĪĬİÏḮỈǏȈȊỊĮḬƗ"
}, {
  base: "J",
  letters: "JⒿＪĴɈ"
}, {
  base: "K",
  letters: "KⓀＫḰǨḲĶḴƘⱩꝀꝂꝄꞢ"
}, {
  base: "L",
  letters: "LⓁＬĿĹĽḶḸĻḼḺŁȽⱢⱠꝈꝆꞀ"
}, {
  base: "LJ",
  letters: "Ǉ"
}, {
  base: "Lj",
  letters: "ǈ"
}, {
  base: "M",
  letters: "MⓂＭḾṀṂⱮƜ"
}, {
  base: "N",
  letters: "NⓃＮǸŃÑṄŇṆŅṊṈȠƝꞐꞤ"
}, {
  base: "NJ",
  letters: "Ǌ"
}, {
  base: "Nj",
  letters: "ǋ"
}, {
  base: "O",
  letters: "OⓄＯÒÓÔỒỐỖỔÕṌȬṎŌṐṒŎȮȰÖȪỎŐǑȌȎƠỜỚỠỞỢỌỘǪǬØǾƆƟꝊꝌ"
}, {
  base: "OI",
  letters: "Ƣ"
}, {
  base: "OO",
  letters: "Ꝏ"
}, {
  base: "OU",
  letters: "Ȣ"
}, {
  base: "P",
  letters: "PⓅＰṔṖƤⱣꝐꝒꝔ"
}, {
  base: "Q",
  letters: "QⓆＱꝖꝘɊ"
}, {
  base: "R",
  letters: "RⓇＲŔṘŘȐȒṚṜŖṞɌⱤꝚꞦꞂ"
}, {
  base: "S",
  letters: "SⓈＳẞŚṤŜṠŠṦṢṨȘŞⱾꞨꞄ"
}, {
  base: "T",
  letters: "TⓉＴṪŤṬȚŢṰṮŦƬƮȾꞆ"
}, {
  base: "TZ",
  letters: "Ꜩ"
}, {
  base: "U",
  letters: "UⓊＵÙÚÛŨṸŪṺŬÜǛǗǕǙỦŮŰǓȔȖƯỪỨỮỬỰỤṲŲṶṴɄ"
}, {
  base: "V",
  letters: "VⓋＶṼṾƲꝞɅ"
}, {
  base: "VY",
  letters: "Ꝡ"
}, {
  base: "W",
  letters: "WⓌＷẀẂŴẆẄẈⱲ"
}, {
  base: "X",
  letters: "XⓍＸẊẌ"
}, {
  base: "Y",
  letters: "YⓎＹỲÝŶỸȲẎŸỶỴƳɎỾ"
}, {
  base: "Z",
  letters: "ZⓏＺŹẐŻŽẒẔƵȤⱿⱫꝢ"
}, {
  base: "a",
  letters: "aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐ"
}, {
  base: "aa",
  letters: "ꜳ"
}, {
  base: "ae",
  letters: "æǽǣ"
}, {
  base: "ao",
  letters: "ꜵ"
}, {
  base: "au",
  letters: "ꜷ"
}, {
  base: "av",
  letters: "ꜹꜻ"
}, {
  base: "ay",
  letters: "ꜽ"
}, {
  base: "b",
  letters: "bⓑｂḃḅḇƀƃɓ"
}, {
  base: "c",
  letters: "cⓒｃćĉċčçḉƈȼꜿↄ"
}, {
  base: "d",
  letters: "dⓓｄḋďḍḑḓḏđƌɖɗꝺ"
}, {
  base: "dz",
  letters: "ǳǆ"
}, {
  base: "e",
  letters: "eⓔｅèéêềếễểẽēḕḗĕėëẻěȅȇẹệȩḝęḙḛɇɛǝ"
}, {
  base: "f",
  letters: "fⓕｆḟƒꝼ"
}, {
  base: "g",
  letters: "gⓖｇǵĝḡğġǧģǥɠꞡᵹꝿ"
}, {
  base: "h",
  letters: "hⓗｈĥḣḧȟḥḩḫẖħⱨⱶɥ"
}, {
  base: "hv",
  letters: "ƕ"
}, {
  base: "i",
  letters: "iⓘｉìíîĩīĭïḯỉǐȉȋịįḭɨı"
}, {
  base: "j",
  letters: "jⓙｊĵǰɉ"
}, {
  base: "k",
  letters: "kⓚｋḱǩḳķḵƙⱪꝁꝃꝅꞣ"
}, {
  base: "l",
  letters: "lⓛｌŀĺľḷḹļḽḻſłƚɫⱡꝉꞁꝇ"
}, {
  base: "lj",
  letters: "ǉ"
}, {
  base: "m",
  letters: "mⓜｍḿṁṃɱɯ"
}, {
  base: "n",
  letters: "nⓝｎǹńñṅňṇņṋṉƞɲŉꞑꞥ"
}, {
  base: "nj",
  letters: "ǌ"
}, {
  base: "o",
  letters: "oⓞｏòóôồốỗổõṍȭṏōṑṓŏȯȱöȫỏőǒȍȏơờớỡởợọộǫǭøǿɔꝋꝍɵ"
}, {
  base: "oi",
  letters: "ƣ"
}, {
  base: "ou",
  letters: "ȣ"
}, {
  base: "oo",
  letters: "ꝏ"
}, {
  base: "p",
  letters: "pⓟｐṕṗƥᵽꝑꝓꝕ"
}, {
  base: "q",
  letters: "qⓠｑɋꝗꝙ"
}, {
  base: "r",
  letters: "rⓡｒŕṙřȑȓṛṝŗṟɍɽꝛꞧꞃ"
}, {
  base: "s",
  letters: "sⓢｓßśṥŝṡšṧṣṩșşȿꞩꞅẛ"
}, {
  base: "t",
  letters: "tⓣｔṫẗťṭțţṱṯŧƭʈⱦꞇ"
}, {
  base: "tz",
  letters: "ꜩ"
}, {
  base: "u",
  letters: "uⓤｕùúûũṹūṻŭüǜǘǖǚủůűǔȕȗưừứữửựụṳųṷṵʉ"
}, {
  base: "v",
  letters: "vⓥｖṽṿʋꝟʌ"
}, {
  base: "vy",
  letters: "ꝡ"
}, {
  base: "w",
  letters: "wⓦｗẁẃŵẇẅẘẉⱳ"
}, {
  base: "x",
  letters: "xⓧｘẋẍ"
}, {
  base: "y",
  letters: "yⓨｙỳýŷỹȳẏÿỷẙỵƴɏỿ"
}, {
  base: "z",
  letters: "zⓩｚźẑżžẓẕƶȥɀⱬꝣ"
}];
var _J = new RegExp("[" + bm.map(function(e10) {
  return e10.letters;
}).join("") + "]", "g");
var uI = {};
for (Kp = 0; Kp < bm.length; Kp++)
  for (Qp = bm[Kp], ef = 0; ef < Qp.letters.length; ef++)
    uI[Qp.letters[ef]] = Qp.base;
var Qp;
var ef;
var Kp;
var dI = function(t) {
  return t.replace(_J, function(n) {
    return uI[n];
  });
};
var LJ = DJ(dI);
var L0 = function(t) {
  return t.replace(/^\s+|\s+$/g, "");
};
var BJ = function(t) {
  return "".concat(t.label, " ").concat(t.value);
};
var zJ = function(t) {
  return function(n, o) {
    if (n.data.__isNew__) return true;
    var r = et({
      ignoreCase: true,
      ignoreAccents: true,
      stringify: BJ,
      trim: true,
      matchFrom: "any"
    }, t), s = r.ignoreCase, a = r.ignoreAccents, l = r.stringify, c = r.trim, u = r.matchFrom, d = c ? L0(o) : o, p = c ? L0(l(n)) : l(n);
    return s && (d = d.toLowerCase(), p = p.toLowerCase()), a && (d = LJ(d), p = dI(p)), u === "start" ? p.substr(0, d.length) === d : p.indexOf(d) > -1;
  };
};
var WJ = ["innerRef"];
function HJ(e10) {
  var t = e10.innerRef, n = Mr(e10, WJ), o = mq(n, "onExited", "in", "enter", "exit", "appear");
  return nt("input", V({
    ref: t
  }, o, {
    css: lr({
      label: "dummyInput",
      // get rid of any default styles
      background: 0,
      border: 0,
      // important! this hides the flashing cursor
      caretColor: "transparent",
      fontSize: "inherit",
      gridArea: "1 / 1 / 2 / 3",
      outline: 0,
      padding: 0,
      // important! without `width` browsers won't allow focus
      width: 1,
      // remove cursor on desktop
      color: "transparent",
      // remove cursor on mobile whilst maintaining "scroll into view" behaviour
      left: -100,
      opacity: 0,
      position: "relative",
      transform: "scale(.01)"
    }, false ? "" : ";label:DummyInput;", false ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkR1bW15SW5wdXQudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlCTSIsImZpbGUiOiJEdW1teUlucHV0LnRzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IHsgUmVmIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsganN4IH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgcmVtb3ZlUHJvcHMgfSBmcm9tICcuLi91dGlscyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIER1bW15SW5wdXQoe1xuICBpbm5lclJlZixcbiAgLi4ucHJvcHNcbn06IEpTWC5JbnRyaW5zaWNFbGVtZW50c1snaW5wdXQnXSAmIHtcbiAgcmVhZG9ubHkgaW5uZXJSZWY6IFJlZjxIVE1MSW5wdXRFbGVtZW50Pjtcbn0pIHtcbiAgLy8gUmVtb3ZlIGFuaW1hdGlvbiBwcm9wcyBub3QgbWVhbnQgZm9yIEhUTUwgZWxlbWVudHNcbiAgY29uc3QgZmlsdGVyZWRQcm9wcyA9IHJlbW92ZVByb3BzKFxuICAgIHByb3BzLFxuICAgICdvbkV4aXRlZCcsXG4gICAgJ2luJyxcbiAgICAnZW50ZXInLFxuICAgICdleGl0JyxcbiAgICAnYXBwZWFyJ1xuICApO1xuXG4gIHJldHVybiAoXG4gICAgPGlucHV0XG4gICAgICByZWY9e2lubmVyUmVmfVxuICAgICAgey4uLmZpbHRlcmVkUHJvcHN9XG4gICAgICBjc3M9e3tcbiAgICAgICAgbGFiZWw6ICdkdW1teUlucHV0JyxcbiAgICAgICAgLy8gZ2V0IHJpZCBvZiBhbnkgZGVmYXVsdCBzdHlsZXNcbiAgICAgICAgYmFja2dyb3VuZDogMCxcbiAgICAgICAgYm9yZGVyOiAwLFxuICAgICAgICAvLyBpbXBvcnRhbnQhIHRoaXMgaGlkZXMgdGhlIGZsYXNoaW5nIGN1cnNvclxuICAgICAgICBjYXJldENvbG9yOiAndHJhbnNwYXJlbnQnLFxuICAgICAgICBmb250U2l6ZTogJ2luaGVyaXQnLFxuICAgICAgICBncmlkQXJlYTogJzEgLyAxIC8gMiAvIDMnLFxuICAgICAgICBvdXRsaW5lOiAwLFxuICAgICAgICBwYWRkaW5nOiAwLFxuICAgICAgICAvLyBpbXBvcnRhbnQhIHdpdGhvdXQgYHdpZHRoYCBicm93c2VycyB3b24ndCBhbGxvdyBmb2N1c1xuICAgICAgICB3aWR0aDogMSxcblxuICAgICAgICAvLyByZW1vdmUgY3Vyc29yIG9uIGRlc2t0b3BcbiAgICAgICAgY29sb3I6ICd0cmFuc3BhcmVudCcsXG5cbiAgICAgICAgLy8gcmVtb3ZlIGN1cnNvciBvbiBtb2JpbGUgd2hpbHN0IG1haW50YWluaW5nIFwic2Nyb2xsIGludG8gdmlld1wiIGJlaGF2aW91clxuICAgICAgICBsZWZ0OiAtMTAwLFxuICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICAgICAgdHJhbnNmb3JtOiAnc2NhbGUoLjAxKScsXG4gICAgICB9fVxuICAgIC8+XG4gICk7XG59XG4iXX0= */")
  }));
}
var GJ = function(t) {
  t.cancelable && t.preventDefault(), t.stopPropagation();
};
function UJ(e10) {
  var t = e10.isEnabled, n = e10.onBottomArrive, o = e10.onBottomLeave, r = e10.onTopArrive, s = e10.onTopLeave, a = (0, import_react.useRef)(false), l = (0, import_react.useRef)(false), c = (0, import_react.useRef)(0), u = (0, import_react.useRef)(null), d = (0, import_react.useCallback)(function(h, y) {
    if (u.current !== null) {
      var C = u.current, x = C.scrollTop, T = C.scrollHeight, w = C.clientHeight, R = u.current, E = y > 0, O = T - w - x, I = false;
      O > y && a.current && (o && o(h), a.current = false), E && l.current && (s && s(h), l.current = false), E && y > O ? (n && !a.current && n(h), R.scrollTop = T, I = true, a.current = true) : !E && -y > x && (r && !l.current && r(h), R.scrollTop = 0, I = true, l.current = true), I && GJ(h);
    }
  }, [n, o, r, s]), p = (0, import_react.useCallback)(function(h) {
    d(h, h.deltaY);
  }, [d]), m = (0, import_react.useCallback)(function(h) {
    c.current = h.changedTouches[0].clientY;
  }, []), g = (0, import_react.useCallback)(function(h) {
    var y = c.current - h.changedTouches[0].clientY;
    d(h, y);
  }, [d]), b = (0, import_react.useCallback)(function(h) {
    if (h) {
      var y = dq ? {
        passive: false
      } : false;
      h.addEventListener("wheel", p, y), h.addEventListener("touchstart", m, y), h.addEventListener("touchmove", g, y);
    }
  }, [g, m, p]), v = (0, import_react.useCallback)(function(h) {
    h && (h.removeEventListener("wheel", p, false), h.removeEventListener("touchstart", m, false), h.removeEventListener("touchmove", g, false));
  }, [g, m, p]);
  return (0, import_react.useEffect)(function() {
    if (t) {
      var h = u.current;
      return b(h), function() {
        v(h);
      };
    }
  }, [t, b, v]), function(h) {
    u.current = h;
  };
}
var B0 = ["boxSizing", "height", "overflow", "paddingRight", "position"];
var z0 = {
  boxSizing: "border-box",
  // account for possible declaration `width: 100%;` on body
  overflow: "hidden",
  position: "relative",
  height: "100%"
};
function W0(e10) {
  e10.preventDefault();
}
function H0(e10) {
  e10.stopPropagation();
}
function G0() {
  var e10 = this.scrollTop, t = this.scrollHeight, n = e10 + this.offsetHeight;
  e10 === 0 ? this.scrollTop = 1 : n === t && (this.scrollTop = e10 - 1);
}
function U0() {
  return "ontouchstart" in window || navigator.maxTouchPoints;
}
var X0 = !!(typeof window < "u" && window.document && window.document.createElement);
var ya = 0;
var as = {
  capture: false,
  passive: false
};
function XJ(e10) {
  var t = e10.isEnabled, n = e10.accountForScrollbars, o = n === void 0 ? true : n, r = (0, import_react.useRef)({}), s = (0, import_react.useRef)(null), a = (0, import_react.useCallback)(function(c) {
    if (X0) {
      var u = document.body, d = u && u.style;
      if (o && B0.forEach(function(b) {
        var v = d && d[b];
        r.current[b] = v;
      }), o && ya < 1) {
        var p = parseInt(r.current.paddingRight, 10) || 0, m = document.body ? document.body.clientWidth : 0, g = window.innerWidth - m + p || 0;
        Object.keys(z0).forEach(function(b) {
          var v = z0[b];
          d && (d[b] = v);
        }), d && (d.paddingRight = "".concat(g, "px"));
      }
      u && U0() && (u.addEventListener("touchmove", W0, as), c && (c.addEventListener("touchstart", G0, as), c.addEventListener("touchmove", H0, as))), ya += 1;
    }
  }, [o]), l = (0, import_react.useCallback)(function(c) {
    if (X0) {
      var u = document.body, d = u && u.style;
      ya = Math.max(ya - 1, 0), o && ya < 1 && B0.forEach(function(p) {
        var m = r.current[p];
        d && (d[p] = m);
      }), u && U0() && (u.removeEventListener("touchmove", W0, as), c && (c.removeEventListener("touchstart", G0, as), c.removeEventListener("touchmove", H0, as)));
    }
  }, [o]);
  return (0, import_react.useEffect)(function() {
    if (t) {
      var c = s.current;
      return a(c), function() {
        l(c);
      };
    }
  }, [t, a, l]), function(c) {
    s.current = c;
  };
}
function YJ() {
  return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
}
var ZJ = function(t) {
  var n = t.target;
  return n.ownerDocument.activeElement && n.ownerDocument.activeElement.blur();
};
var qJ = false ? {
  name: "1kfdb0e",
  styles: "position:fixed;left:0;bottom:0;right:0;top:0"
} : {
  name: "bp8cua-ScrollManager",
  styles: "position:fixed;left:0;bottom:0;right:0;top:0;label:ScrollManager;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNjcm9sbE1hbmFnZXIudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9EVSIsImZpbGUiOiJTY3JvbGxNYW5hZ2VyLnRzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IHsganN4IH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgRnJhZ21lbnQsIFJlYWN0RWxlbWVudCwgUmVmQ2FsbGJhY2ssIE1vdXNlRXZlbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdXNlU2Nyb2xsQ2FwdHVyZSBmcm9tICcuL3VzZVNjcm9sbENhcHR1cmUnO1xuaW1wb3J0IHVzZVNjcm9sbExvY2sgZnJvbSAnLi91c2VTY3JvbGxMb2NrJztcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgcmVhZG9ubHkgY2hpbGRyZW46IChyZWY6IFJlZkNhbGxiYWNrPEhUTUxFbGVtZW50PikgPT4gUmVhY3RFbGVtZW50O1xuICByZWFkb25seSBsb2NrRW5hYmxlZDogYm9vbGVhbjtcbiAgcmVhZG9ubHkgY2FwdHVyZUVuYWJsZWQ6IGJvb2xlYW47XG4gIHJlYWRvbmx5IG9uQm90dG9tQXJyaXZlPzogKGV2ZW50OiBXaGVlbEV2ZW50IHwgVG91Y2hFdmVudCkgPT4gdm9pZDtcbiAgcmVhZG9ubHkgb25Cb3R0b21MZWF2ZT86IChldmVudDogV2hlZWxFdmVudCB8IFRvdWNoRXZlbnQpID0+IHZvaWQ7XG4gIHJlYWRvbmx5IG9uVG9wQXJyaXZlPzogKGV2ZW50OiBXaGVlbEV2ZW50IHwgVG91Y2hFdmVudCkgPT4gdm9pZDtcbiAgcmVhZG9ubHkgb25Ub3BMZWF2ZT86IChldmVudDogV2hlZWxFdmVudCB8IFRvdWNoRXZlbnQpID0+IHZvaWQ7XG59XG5cbmNvbnN0IGJsdXJTZWxlY3RJbnB1dCA9IChldmVudDogTW91c2VFdmVudDxIVE1MRGl2RWxlbWVudD4pID0+IHtcbiAgY29uc3QgZWxlbWVudCA9IGV2ZW50LnRhcmdldCBhcyBIVE1MRGl2RWxlbWVudDtcbiAgcmV0dXJuIChcbiAgICBlbGVtZW50Lm93bmVyRG9jdW1lbnQuYWN0aXZlRWxlbWVudCAmJlxuICAgIChlbGVtZW50Lm93bmVyRG9jdW1lbnQuYWN0aXZlRWxlbWVudCBhcyBIVE1MRWxlbWVudCkuYmx1cigpXG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBTY3JvbGxNYW5hZ2VyKHtcbiAgY2hpbGRyZW4sXG4gIGxvY2tFbmFibGVkLFxuICBjYXB0dXJlRW5hYmxlZCA9IHRydWUsXG4gIG9uQm90dG9tQXJyaXZlLFxuICBvbkJvdHRvbUxlYXZlLFxuICBvblRvcEFycml2ZSxcbiAgb25Ub3BMZWF2ZSxcbn06IFByb3BzKSB7XG4gIGNvbnN0IHNldFNjcm9sbENhcHR1cmVUYXJnZXQgPSB1c2VTY3JvbGxDYXB0dXJlKHtcbiAgICBpc0VuYWJsZWQ6IGNhcHR1cmVFbmFibGVkLFxuICAgIG9uQm90dG9tQXJyaXZlLFxuICAgIG9uQm90dG9tTGVhdmUsXG4gICAgb25Ub3BBcnJpdmUsXG4gICAgb25Ub3BMZWF2ZSxcbiAgfSk7XG4gIGNvbnN0IHNldFNjcm9sbExvY2tUYXJnZXQgPSB1c2VTY3JvbGxMb2NrKHsgaXNFbmFibGVkOiBsb2NrRW5hYmxlZCB9KTtcblxuICBjb25zdCB0YXJnZXRSZWY6IFJlZkNhbGxiYWNrPEhUTUxFbGVtZW50PiA9IChlbGVtZW50KSA9PiB7XG4gICAgc2V0U2Nyb2xsQ2FwdHVyZVRhcmdldChlbGVtZW50KTtcbiAgICBzZXRTY3JvbGxMb2NrVGFyZ2V0KGVsZW1lbnQpO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPEZyYWdtZW50PlxuICAgICAge2xvY2tFbmFibGVkICYmIChcbiAgICAgICAgPGRpdlxuICAgICAgICAgIG9uQ2xpY2s9e2JsdXJTZWxlY3RJbnB1dH1cbiAgICAgICAgICBjc3M9e3sgcG9zaXRpb246ICdmaXhlZCcsIGxlZnQ6IDAsIGJvdHRvbTogMCwgcmlnaHQ6IDAsIHRvcDogMCB9fVxuICAgICAgICAvPlxuICAgICAgKX1cbiAgICAgIHtjaGlsZHJlbih0YXJnZXRSZWYpfVxuICAgIDwvRnJhZ21lbnQ+XG4gICk7XG59XG4iXX0= */",
  toString: YJ
};
function JJ(e10) {
  var t = e10.children, n = e10.lockEnabled, o = e10.captureEnabled, r = o === void 0 ? true : o, s = e10.onBottomArrive, a = e10.onBottomLeave, l = e10.onTopArrive, c = e10.onTopLeave, u = UJ({
    isEnabled: r,
    onBottomArrive: s,
    onBottomLeave: a,
    onTopArrive: l,
    onTopLeave: c
  }), d = XJ({
    isEnabled: n
  }), p = function(g) {
    u(g), d(g);
  };
  return nt(import_react.Fragment, null, n && nt("div", {
    onClick: ZJ,
    css: qJ
  }), t(p));
}
function KJ() {
  return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
}
var QJ = false ? {
  name: "1a0ro4n-requiredInput",
  styles: "label:requiredInput;opacity:0;pointer-events:none;position:absolute;bottom:0;left:0;right:0;width:100%"
} : {
  name: "5kkxb2-requiredInput-RequiredInput",
  styles: "label:requiredInput;opacity:0;pointer-events:none;position:absolute;bottom:0;left:0;right:0;width:100%;label:RequiredInput;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJlcXVpcmVkSW5wdXQudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWNJIiwiZmlsZSI6IlJlcXVpcmVkSW5wdXQudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgeyBGb2N1c0V2ZW50SGFuZGxlciwgRnVuY3Rpb25Db21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBqc3ggfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5cbmNvbnN0IFJlcXVpcmVkSW5wdXQ6IEZ1bmN0aW9uQ29tcG9uZW50PHtcbiAgcmVhZG9ubHkgbmFtZT86IHN0cmluZztcbiAgcmVhZG9ubHkgb25Gb2N1czogRm9jdXNFdmVudEhhbmRsZXI8SFRNTElucHV0RWxlbWVudD47XG59PiA9ICh7IG5hbWUsIG9uRm9jdXMgfSkgPT4gKFxuICA8aW5wdXRcbiAgICByZXF1aXJlZFxuICAgIG5hbWU9e25hbWV9XG4gICAgdGFiSW5kZXg9ey0xfVxuICAgIGFyaWEtaGlkZGVuPVwidHJ1ZVwiXG4gICAgb25Gb2N1cz17b25Gb2N1c31cbiAgICBjc3M9e3tcbiAgICAgIGxhYmVsOiAncmVxdWlyZWRJbnB1dCcsXG4gICAgICBvcGFjaXR5OiAwLFxuICAgICAgcG9pbnRlckV2ZW50czogJ25vbmUnLFxuICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICBib3R0b206IDAsXG4gICAgICBsZWZ0OiAwLFxuICAgICAgcmlnaHQ6IDAsXG4gICAgICB3aWR0aDogJzEwMCUnLFxuICAgIH19XG4gICAgLy8gUHJldmVudCBgU3dpdGNoaW5nIGZyb20gdW5jb250cm9sbGVkIHRvIGNvbnRyb2xsZWRgIGVycm9yXG4gICAgdmFsdWU9XCJcIlxuICAgIG9uQ2hhbmdlPXsoKSA9PiB7fX1cbiAgLz5cbik7XG5cbmV4cG9ydCBkZWZhdWx0IFJlcXVpcmVkSW5wdXQ7XG4iXX0= */",
  toString: KJ
};
var eK = function(t) {
  var n = t.name, o = t.onFocus;
  return nt("input", {
    required: true,
    name: n,
    tabIndex: -1,
    "aria-hidden": "true",
    onFocus: o,
    css: QJ,
    value: "",
    onChange: function() {
    }
  });
};
var tK = eK;
function Mh(e10) {
  var t;
  return typeof window < "u" && window.navigator != null ? e10.test(((t = window.navigator.userAgentData) === null || t === void 0 ? void 0 : t.platform) || window.navigator.platform) : false;
}
function nK() {
  return Mh(/^iPhone/i);
}
function pI() {
  return Mh(/^Mac/i);
}
function oK() {
  return Mh(/^iPad/i) || // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.
  pI() && navigator.maxTouchPoints > 1;
}
function rK() {
  return nK() || oK();
}
function iK() {
  return pI() || rK();
}
var sK = function(t) {
  return t.label;
};
var aK = function(t) {
  return t.label;
};
var lK = function(t) {
  return t.value;
};
var cK = function(t) {
  return !!t.isDisabled;
};
var uK = {
  clearIndicator: Wq,
  container: jq,
  control: qq,
  dropdownIndicator: Bq,
  group: eJ,
  groupHeading: nJ,
  indicatorsContainer: Fq,
  indicatorSeparator: Gq,
  input: sJ,
  loadingIndicator: Yq,
  loadingMessage: Rq,
  menu: yq,
  menuList: wq,
  menuPortal: Pq,
  multiValue: dJ,
  multiValueLabel: pJ,
  multiValueRemove: fJ,
  noOptionsMessage: Iq,
  option: yJ,
  placeholder: SJ,
  singleValue: IJ,
  valueContainer: Mq
};
var dK = {
  primary: "#2684FF",
  primary75: "#4C9AFF",
  primary50: "#B2D4FF",
  primary25: "#DEEBFF",
  danger: "#DE350B",
  dangerLight: "#FFBDAD",
  neutral0: "hsl(0, 0%, 100%)",
  neutral5: "hsl(0, 0%, 95%)",
  neutral10: "hsl(0, 0%, 90%)",
  neutral20: "hsl(0, 0%, 80%)",
  neutral30: "hsl(0, 0%, 70%)",
  neutral40: "hsl(0, 0%, 60%)",
  neutral50: "hsl(0, 0%, 50%)",
  neutral60: "hsl(0, 0%, 40%)",
  neutral70: "hsl(0, 0%, 30%)",
  neutral80: "hsl(0, 0%, 20%)",
  neutral90: "hsl(0, 0%, 10%)"
};
var pK = 4;
var fI = 4;
var fK = 38;
var mK = fI * 2;
var gK = {
  baseUnit: fI,
  controlHeight: fK,
  menuGutter: mK
};
var tf = {
  borderRadius: pK,
  colors: dK,
  spacing: gK
};
var hK = {
  "aria-live": "polite",
  backspaceRemovesValue: true,
  blurInputOnSelect: N0(),
  captureMenuScroll: !N0(),
  classNames: {},
  closeMenuOnSelect: true,
  closeMenuOnScroll: false,
  components: {},
  controlShouldRenderValue: true,
  escapeClearsValue: false,
  filterOption: zJ(),
  formatGroupLabel: sK,
  getOptionLabel: aK,
  getOptionValue: lK,
  isDisabled: false,
  isLoading: false,
  isMulti: false,
  isRtl: false,
  isSearchable: true,
  isOptionDisabled: cK,
  loadingMessage: function() {
    return "Loading...";
  },
  maxMenuHeight: 300,
  minMenuHeight: 140,
  menuIsOpen: false,
  menuPlacement: "bottom",
  menuPosition: "absolute",
  menuShouldBlockScroll: false,
  menuShouldScrollIntoView: !cq(),
  noOptionsMessage: function() {
    return "No options";
  },
  openMenuOnFocus: false,
  openMenuOnClick: true,
  options: [],
  pageSize: 5,
  placeholder: "Select...",
  screenReaderStatus: function(t) {
    var n = t.count;
    return "".concat(n, " result").concat(n !== 1 ? "s" : "", " available");
  },
  styles: {},
  tabIndex: 0,
  tabSelectsValue: true,
  unstyled: false
};
function Y0(e10, t, n, o) {
  var r = hI(e10, t, n), s = bI(e10, t, n), a = gI(e10, t), l = wu(e10, t);
  return {
    type: "option",
    data: t,
    isDisabled: r,
    isSelected: s,
    label: a,
    value: l,
    index: o
  };
}
function zc(e10, t) {
  return e10.options.map(function(n, o) {
    if ("options" in n) {
      var r = n.options.map(function(a, l) {
        return Y0(e10, a, t, l);
      }).filter(function(a) {
        return q0(e10, a);
      });
      return r.length > 0 ? {
        type: "group",
        data: n,
        options: r,
        index: o
      } : void 0;
    }
    var s = Y0(e10, n, t, o);
    return q0(e10, s) ? s : void 0;
  }).filter(pq);
}
function mI(e10) {
  return e10.reduce(function(t, n) {
    return n.type === "group" ? t.push.apply(t, jh(n.options.map(function(o) {
      return o.data;
    }))) : t.push(n.data), t;
  }, []);
}
function Z0(e10, t) {
  return e10.reduce(function(n, o) {
    return o.type === "group" ? n.push.apply(n, jh(o.options.map(function(r) {
      return {
        data: r.data,
        id: "".concat(t, "-").concat(o.index, "-").concat(r.index)
      };
    }))) : n.push({
      data: o.data,
      id: "".concat(t, "-").concat(o.index)
    }), n;
  }, []);
}
function bK(e10, t) {
  return mI(zc(e10, t));
}
function q0(e10, t) {
  var n = e10.inputValue, o = n === void 0 ? "" : n, r = t.data, s = t.isSelected, a = t.label, l = t.value;
  return (!yI(e10) || !s) && vI(e10, {
    label: a,
    value: l,
    data: r
  }, o);
}
function vK(e10, t) {
  var n = e10.focusedValue, o = e10.selectValue, r = o.indexOf(n);
  if (r > -1) {
    var s = t.indexOf(n);
    if (s > -1)
      return n;
    if (r < t.length)
      return t[r];
  }
  return null;
}
function yK(e10, t) {
  var n = e10.focusedOption;
  return n && t.indexOf(n) > -1 ? n : t[0];
}
var nf = function(t, n) {
  var o, r = (o = t.find(function(s) {
    return s.data === n;
  })) === null || o === void 0 ? void 0 : o.id;
  return r || null;
};
var gI = function(t, n) {
  return t.getOptionLabel(n);
};
var wu = function(t, n) {
  return t.getOptionValue(n);
};
function hI(e10, t, n) {
  return typeof e10.isOptionDisabled == "function" ? e10.isOptionDisabled(t, n) : false;
}
function bI(e10, t, n) {
  if (n.indexOf(t) > -1) return true;
  if (typeof e10.isOptionSelected == "function")
    return e10.isOptionSelected(t, n);
  var o = wu(e10, t);
  return n.some(function(r) {
    return wu(e10, r) === o;
  });
}
function vI(e10, t, n) {
  return e10.filterOption ? e10.filterOption(t, n) : true;
}
var yI = function(t) {
  var n = t.hideSelectedOptions, o = t.isMulti;
  return n === void 0 ? o : n;
};
var xK = 1;
var xI = function(e10) {
  ZZ(n, e10);
  var t = JZ(n);
  function n(o) {
    var r;
    if (XZ(this, n), r = t.call(this, o), r.state = {
      ariaSelection: null,
      focusedOption: null,
      focusedOptionId: null,
      focusableOptionsWithIds: [],
      focusedValue: null,
      inputIsHidden: false,
      isFocused: false,
      selectValue: [],
      clearFocusValueOnUpdate: false,
      prevWasFocused: false,
      inputIsHiddenAfterUpdate: void 0,
      prevProps: void 0,
      instancePrefix: ""
    }, r.blockOptionHover = false, r.isComposing = false, r.commonProps = void 0, r.initialTouchX = 0, r.initialTouchY = 0, r.openAfterFocus = false, r.scrollToFocusedOptionOnUpdate = false, r.userIsDragging = void 0, r.isAppleDevice = iK(), r.controlRef = null, r.getControlRef = function(c) {
      r.controlRef = c;
    }, r.focusedOptionRef = null, r.getFocusedOptionRef = function(c) {
      r.focusedOptionRef = c;
    }, r.menuListRef = null, r.getMenuListRef = function(c) {
      r.menuListRef = c;
    }, r.inputRef = null, r.getInputRef = function(c) {
      r.inputRef = c;
    }, r.focus = r.focusInput, r.blur = r.blurInput, r.onChange = function(c, u) {
      var d = r.props, p = d.onChange, m = d.name;
      u.name = m, r.ariaOnChange(c, u), p(c, u);
    }, r.setValue = function(c, u, d) {
      var p = r.props, m = p.closeMenuOnSelect, g = p.isMulti, b = p.inputValue;
      r.onInputChange("", {
        action: "set-value",
        prevInputValue: b
      }), m && (r.setState({
        inputIsHiddenAfterUpdate: !g
      }), r.onMenuClose()), r.setState({
        clearFocusValueOnUpdate: true
      }), r.onChange(c, {
        action: u,
        option: d
      });
    }, r.selectOption = function(c) {
      var u = r.props, d = u.blurInputOnSelect, p = u.isMulti, m = u.name, g = r.state.selectValue, b = p && r.isOptionSelected(c, g), v = r.isOptionDisabled(c, g);
      if (b) {
        var h = r.getOptionValue(c);
        r.setValue(g.filter(function(y) {
          return r.getOptionValue(y) !== h;
        }), "deselect-option", c);
      } else if (!v)
        p ? r.setValue([].concat(jh(g), [c]), "select-option", c) : r.setValue(c, "select-option");
      else {
        r.ariaOnChange(c, {
          action: "select-option",
          option: c,
          name: m
        });
        return;
      }
      d && r.blurInput();
    }, r.removeValue = function(c) {
      var u = r.props.isMulti, d = r.state.selectValue, p = r.getOptionValue(c), m = d.filter(function(b) {
        return r.getOptionValue(b) !== p;
      }), g = Ic(u, m, m[0] || null);
      r.onChange(g, {
        action: "remove-value",
        removedValue: c
      }), r.focusInput();
    }, r.clearValue = function() {
      var c = r.state.selectValue;
      r.onChange(Ic(r.props.isMulti, [], null), {
        action: "clear",
        removedValues: c
      });
    }, r.popValue = function() {
      var c = r.props.isMulti, u = r.state.selectValue, d = u[u.length - 1], p = u.slice(0, u.length - 1), m = Ic(c, p, p[0] || null);
      d && r.onChange(m, {
        action: "pop-value",
        removedValue: d
      });
    }, r.getFocusedOptionId = function(c) {
      return nf(r.state.focusableOptionsWithIds, c);
    }, r.getFocusableOptionsWithIds = function() {
      return Z0(zc(r.props, r.state.selectValue), r.getElementId("option"));
    }, r.getValue = function() {
      return r.state.selectValue;
    }, r.cx = function() {
      for (var c = arguments.length, u = new Array(c), d = 0; d < c; d++)
        u[d] = arguments[d];
      return rq.apply(void 0, [r.props.classNamePrefix].concat(u));
    }, r.getOptionLabel = function(c) {
      return gI(r.props, c);
    }, r.getOptionValue = function(c) {
      return wu(r.props, c);
    }, r.getStyles = function(c, u) {
      var d = r.props.unstyled, p = uK[c](u, d);
      p.boxSizing = "border-box";
      var m = r.props.styles[c];
      return m ? m(p, u) : p;
    }, r.getClassNames = function(c, u) {
      var d, p;
      return (d = (p = r.props.classNames)[c]) === null || d === void 0 ? void 0 : d.call(p, u);
    }, r.getElementId = function(c) {
      return "".concat(r.state.instancePrefix, "-").concat(c);
    }, r.getComponents = function() {
      return PJ(r.props);
    }, r.buildCategorizedOptions = function() {
      return zc(r.props, r.state.selectValue);
    }, r.getCategorizedOptions = function() {
      return r.props.menuIsOpen ? r.buildCategorizedOptions() : [];
    }, r.buildFocusableOptions = function() {
      return mI(r.buildCategorizedOptions());
    }, r.getFocusableOptions = function() {
      return r.props.menuIsOpen ? r.buildFocusableOptions() : [];
    }, r.ariaOnChange = function(c, u) {
      r.setState({
        ariaSelection: et({
          value: c
        }, u)
      });
    }, r.onMenuMouseDown = function(c) {
      c.button === 0 && (c.stopPropagation(), c.preventDefault(), r.focusInput());
    }, r.onMenuMouseMove = function(c) {
      r.blockOptionHover = false;
    }, r.onControlMouseDown = function(c) {
      if (!c.defaultPrevented) {
        var u = r.props.openMenuOnClick;
        r.state.isFocused ? r.props.menuIsOpen ? c.target.tagName !== "INPUT" && c.target.tagName !== "TEXTAREA" && r.onMenuClose() : u && r.openMenu("first") : (u && (r.openAfterFocus = true), r.focusInput()), c.target.tagName !== "INPUT" && c.target.tagName !== "TEXTAREA" && c.preventDefault();
      }
    }, r.onDropdownIndicatorMouseDown = function(c) {
      if (!(c && c.type === "mousedown" && c.button !== 0) && !r.props.isDisabled) {
        var u = r.props, d = u.isMulti, p = u.menuIsOpen;
        r.focusInput(), p ? (r.setState({
          inputIsHiddenAfterUpdate: !d
        }), r.onMenuClose()) : r.openMenu("first"), c.preventDefault();
      }
    }, r.onClearIndicatorMouseDown = function(c) {
      c && c.type === "mousedown" && c.button !== 0 || (r.clearValue(), c.preventDefault(), r.openAfterFocus = false, c.type === "touchend" ? r.focusInput() : setTimeout(function() {
        return r.focusInput();
      }));
    }, r.onScroll = function(c) {
      typeof r.props.closeMenuOnScroll == "boolean" ? c.target instanceof HTMLElement && qd(c.target) && r.props.onMenuClose() : typeof r.props.closeMenuOnScroll == "function" && r.props.closeMenuOnScroll(c) && r.props.onMenuClose();
    }, r.onCompositionStart = function() {
      r.isComposing = true;
    }, r.onCompositionEnd = function() {
      r.isComposing = false;
    }, r.onTouchStart = function(c) {
      var u = c.touches, d = u && u.item(0);
      d && (r.initialTouchX = d.clientX, r.initialTouchY = d.clientY, r.userIsDragging = false);
    }, r.onTouchMove = function(c) {
      var u = c.touches, d = u && u.item(0);
      if (d) {
        var p = Math.abs(d.clientX - r.initialTouchX), m = Math.abs(d.clientY - r.initialTouchY), g = 5;
        r.userIsDragging = p > g || m > g;
      }
    }, r.onTouchEnd = function(c) {
      r.userIsDragging || (r.controlRef && !r.controlRef.contains(c.target) && r.menuListRef && !r.menuListRef.contains(c.target) && r.blurInput(), r.initialTouchX = 0, r.initialTouchY = 0);
    }, r.onControlTouchEnd = function(c) {
      r.userIsDragging || r.onControlMouseDown(c);
    }, r.onClearIndicatorTouchEnd = function(c) {
      r.userIsDragging || r.onClearIndicatorMouseDown(c);
    }, r.onDropdownIndicatorTouchEnd = function(c) {
      r.userIsDragging || r.onDropdownIndicatorMouseDown(c);
    }, r.handleInputChange = function(c) {
      var u = r.props.inputValue, d = c.currentTarget.value;
      r.setState({
        inputIsHiddenAfterUpdate: false
      }), r.onInputChange(d, {
        action: "input-change",
        prevInputValue: u
      }), r.props.menuIsOpen || r.onMenuOpen();
    }, r.onInputFocus = function(c) {
      r.props.onFocus && r.props.onFocus(c), r.setState({
        inputIsHiddenAfterUpdate: false,
        isFocused: true
      }), (r.openAfterFocus || r.props.openMenuOnFocus) && r.openMenu("first"), r.openAfterFocus = false;
    }, r.onInputBlur = function(c) {
      var u = r.props.inputValue;
      if (r.menuListRef && r.menuListRef.contains(document.activeElement)) {
        r.inputRef.focus();
        return;
      }
      r.props.onBlur && r.props.onBlur(c), r.onInputChange("", {
        action: "input-blur",
        prevInputValue: u
      }), r.onMenuClose(), r.setState({
        focusedValue: null,
        isFocused: false
      });
    }, r.onOptionHover = function(c) {
      if (!(r.blockOptionHover || r.state.focusedOption === c)) {
        var u = r.getFocusableOptions(), d = u.indexOf(c);
        r.setState({
          focusedOption: c,
          focusedOptionId: d > -1 ? r.getFocusedOptionId(c) : null
        });
      }
    }, r.shouldHideSelectedOptions = function() {
      return yI(r.props);
    }, r.onValueInputFocus = function(c) {
      c.preventDefault(), c.stopPropagation(), r.focus();
    }, r.onKeyDown = function(c) {
      var u = r.props, d = u.isMulti, p = u.backspaceRemovesValue, m = u.escapeClearsValue, g = u.inputValue, b = u.isClearable, v = u.isDisabled, h = u.menuIsOpen, y = u.onKeyDown, C = u.tabSelectsValue, x = u.openMenuOnFocus, T = r.state, w = T.focusedOption, R = T.focusedValue, E = T.selectValue;
      if (!v && !(typeof y == "function" && (y(c), c.defaultPrevented))) {
        switch (r.blockOptionHover = true, c.key) {
          case "ArrowLeft":
            if (!d || g) return;
            r.focusValue("previous");
            break;
          case "ArrowRight":
            if (!d || g) return;
            r.focusValue("next");
            break;
          case "Delete":
          case "Backspace":
            if (g) return;
            if (R)
              r.removeValue(R);
            else {
              if (!p) return;
              d ? r.popValue() : b && r.clearValue();
            }
            break;
          case "Tab":
            if (r.isComposing || c.shiftKey || !h || !C || !w || // don't capture the event if the menu opens on focus and the focused
            // option is already selected; it breaks the flow of navigation
            x && r.isOptionSelected(w, E))
              return;
            r.selectOption(w);
            break;
          case "Enter":
            if (c.keyCode === 229)
              break;
            if (h) {
              if (!w || r.isComposing) return;
              r.selectOption(w);
              break;
            }
            return;
          case "Escape":
            h ? (r.setState({
              inputIsHiddenAfterUpdate: false
            }), r.onInputChange("", {
              action: "menu-close",
              prevInputValue: g
            }), r.onMenuClose()) : b && m && r.clearValue();
            break;
          case " ":
            if (g)
              return;
            if (!h) {
              r.openMenu("first");
              break;
            }
            if (!w) return;
            r.selectOption(w);
            break;
          case "ArrowUp":
            h ? r.focusOption("up") : r.openMenu("last");
            break;
          case "ArrowDown":
            h ? r.focusOption("down") : r.openMenu("first");
            break;
          case "PageUp":
            if (!h) return;
            r.focusOption("pageup");
            break;
          case "PageDown":
            if (!h) return;
            r.focusOption("pagedown");
            break;
          case "Home":
            if (!h) return;
            r.focusOption("first");
            break;
          case "End":
            if (!h) return;
            r.focusOption("last");
            break;
          default:
            return;
        }
        c.preventDefault();
      }
    }, r.state.instancePrefix = "react-select-" + (r.props.instanceId || ++xK), r.state.selectValue = k0(o.value), o.menuIsOpen && r.state.selectValue.length) {
      var s = r.getFocusableOptionsWithIds(), a = r.buildFocusableOptions(), l = a.indexOf(r.state.selectValue[0]);
      r.state.focusableOptionsWithIds = s, r.state.focusedOption = a[l], r.state.focusedOptionId = nf(s, a[l]);
    }
    return r;
  }
  return YZ(n, [{
    key: "componentDidMount",
    value: function() {
      this.startListeningComposition(), this.startListeningToTouch(), this.props.closeMenuOnScroll && document && document.addEventListener && document.addEventListener("scroll", this.onScroll, true), this.props.autoFocus && this.focusInput(), this.props.menuIsOpen && this.state.focusedOption && this.menuListRef && this.focusedOptionRef && F0(this.menuListRef, this.focusedOptionRef);
    }
  }, {
    key: "componentDidUpdate",
    value: function(r) {
      var s = this.props, a = s.isDisabled, l = s.menuIsOpen, c = this.state.isFocused;
      (c && !a && r.isDisabled || // ensure focus is on the Input when the menu opens
      c && l && !r.menuIsOpen) && this.focusInput(), c && a && !r.isDisabled ? this.setState({
        isFocused: false
      }, this.onMenuClose) : !c && !a && r.isDisabled && this.inputRef === document.activeElement && this.setState({
        isFocused: true
      }), this.menuListRef && this.focusedOptionRef && this.scrollToFocusedOptionOnUpdate && (F0(this.menuListRef, this.focusedOptionRef), this.scrollToFocusedOptionOnUpdate = false);
    }
  }, {
    key: "componentWillUnmount",
    value: function() {
      this.stopListeningComposition(), this.stopListeningToTouch(), document.removeEventListener("scroll", this.onScroll, true);
    }
    // ==============================
    // Consumer Handlers
    // ==============================
  }, {
    key: "onMenuOpen",
    value: function() {
      this.props.onMenuOpen();
    }
  }, {
    key: "onMenuClose",
    value: function() {
      this.onInputChange("", {
        action: "menu-close",
        prevInputValue: this.props.inputValue
      }), this.props.onMenuClose();
    }
  }, {
    key: "onInputChange",
    value: function(r, s) {
      this.props.onInputChange(r, s);
    }
    // ==============================
    // Methods
    // ==============================
  }, {
    key: "focusInput",
    value: function() {
      this.inputRef && this.inputRef.focus();
    }
  }, {
    key: "blurInput",
    value: function() {
      this.inputRef && this.inputRef.blur();
    }
    // aliased for consumers
  }, {
    key: "openMenu",
    value: function(r) {
      var s = this, a = this.state, l = a.selectValue, c = a.isFocused, u = this.buildFocusableOptions(), d = r === "first" ? 0 : u.length - 1;
      if (!this.props.isMulti) {
        var p = u.indexOf(l[0]);
        p > -1 && (d = p);
      }
      this.scrollToFocusedOptionOnUpdate = !(c && this.menuListRef), this.setState({
        inputIsHiddenAfterUpdate: false,
        focusedValue: null,
        focusedOption: u[d],
        focusedOptionId: this.getFocusedOptionId(u[d])
      }, function() {
        return s.onMenuOpen();
      });
    }
  }, {
    key: "focusValue",
    value: function(r) {
      var s = this.state, a = s.selectValue, l = s.focusedValue;
      if (this.props.isMulti) {
        this.setState({
          focusedOption: null
        });
        var c = a.indexOf(l);
        l || (c = -1);
        var u = a.length - 1, d = -1;
        if (a.length) {
          switch (r) {
            case "previous":
              c === 0 ? d = 0 : c === -1 ? d = u : d = c - 1;
              break;
            case "next":
              c > -1 && c < u && (d = c + 1);
              break;
          }
          this.setState({
            inputIsHidden: d !== -1,
            focusedValue: a[d]
          });
        }
      }
    }
  }, {
    key: "focusOption",
    value: function() {
      var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "first", s = this.props.pageSize, a = this.state.focusedOption, l = this.getFocusableOptions();
      if (l.length) {
        var c = 0, u = l.indexOf(a);
        a || (u = -1), r === "up" ? c = u > 0 ? u - 1 : l.length - 1 : r === "down" ? c = (u + 1) % l.length : r === "pageup" ? (c = u - s, c < 0 && (c = 0)) : r === "pagedown" ? (c = u + s, c > l.length - 1 && (c = l.length - 1)) : r === "last" && (c = l.length - 1), this.scrollToFocusedOptionOnUpdate = true, this.setState({
          focusedOption: l[c],
          focusedValue: null,
          focusedOptionId: this.getFocusedOptionId(l[c])
        });
      }
    }
  }, {
    key: "getTheme",
    value: (
      // ==============================
      // Getters
      // ==============================
      function() {
        return this.props.theme ? typeof this.props.theme == "function" ? this.props.theme(tf) : et(et({}, tf), this.props.theme) : tf;
      }
    )
  }, {
    key: "getCommonProps",
    value: function() {
      var r = this.clearValue, s = this.cx, a = this.getStyles, l = this.getClassNames, c = this.getValue, u = this.selectOption, d = this.setValue, p = this.props, m = p.isMulti, g = p.isRtl, b = p.options, v = this.hasValue();
      return {
        clearValue: r,
        cx: s,
        getStyles: a,
        getClassNames: l,
        getValue: c,
        hasValue: v,
        isMulti: m,
        isRtl: g,
        options: b,
        selectOption: u,
        selectProps: p,
        setValue: d,
        theme: this.getTheme()
      };
    }
  }, {
    key: "hasValue",
    value: function() {
      var r = this.state.selectValue;
      return r.length > 0;
    }
  }, {
    key: "hasOptions",
    value: function() {
      return !!this.getFocusableOptions().length;
    }
  }, {
    key: "isClearable",
    value: function() {
      var r = this.props, s = r.isClearable, a = r.isMulti;
      return s === void 0 ? a : s;
    }
  }, {
    key: "isOptionDisabled",
    value: function(r, s) {
      return hI(this.props, r, s);
    }
  }, {
    key: "isOptionSelected",
    value: function(r, s) {
      return bI(this.props, r, s);
    }
  }, {
    key: "filterOption",
    value: function(r, s) {
      return vI(this.props, r, s);
    }
  }, {
    key: "formatOptionLabel",
    value: function(r, s) {
      if (typeof this.props.formatOptionLabel == "function") {
        var a = this.props.inputValue, l = this.state.selectValue;
        return this.props.formatOptionLabel(r, {
          context: s,
          inputValue: a,
          selectValue: l
        });
      } else
        return this.getOptionLabel(r);
    }
  }, {
    key: "formatGroupLabel",
    value: function(r) {
      return this.props.formatGroupLabel(r);
    }
    // ==============================
    // Mouse Handlers
    // ==============================
  }, {
    key: "startListeningComposition",
    value: (
      // ==============================
      // Composition Handlers
      // ==============================
      function() {
        document && document.addEventListener && (document.addEventListener("compositionstart", this.onCompositionStart, false), document.addEventListener("compositionend", this.onCompositionEnd, false));
      }
    )
  }, {
    key: "stopListeningComposition",
    value: function() {
      document && document.removeEventListener && (document.removeEventListener("compositionstart", this.onCompositionStart), document.removeEventListener("compositionend", this.onCompositionEnd));
    }
  }, {
    key: "startListeningToTouch",
    value: (
      // ==============================
      // Touch Handlers
      // ==============================
      function() {
        document && document.addEventListener && (document.addEventListener("touchstart", this.onTouchStart, false), document.addEventListener("touchmove", this.onTouchMove, false), document.addEventListener("touchend", this.onTouchEnd, false));
      }
    )
  }, {
    key: "stopListeningToTouch",
    value: function() {
      document && document.removeEventListener && (document.removeEventListener("touchstart", this.onTouchStart), document.removeEventListener("touchmove", this.onTouchMove), document.removeEventListener("touchend", this.onTouchEnd));
    }
  }, {
    key: "renderInput",
    value: (
      // ==============================
      // Renderers
      // ==============================
      function() {
        var r = this.props, s = r.isDisabled, a = r.isSearchable, l = r.inputId, c = r.inputValue, u = r.tabIndex, d = r.form, p = r.menuIsOpen, m = r.required, g = this.getComponents(), b = g.Input, v = this.state, h = v.inputIsHidden, y = v.ariaSelection, C = this.commonProps, x = l || this.getElementId("input"), T = et(et(et({
          "aria-autocomplete": "list",
          "aria-expanded": p,
          "aria-haspopup": true,
          "aria-errormessage": this.props["aria-errormessage"],
          "aria-invalid": this.props["aria-invalid"],
          "aria-label": this.props["aria-label"],
          "aria-labelledby": this.props["aria-labelledby"],
          "aria-required": m,
          role: "combobox",
          "aria-activedescendant": this.isAppleDevice ? void 0 : this.state.focusedOptionId || ""
        }, p && {
          "aria-controls": this.getElementId("listbox")
        }), !a && {
          "aria-readonly": true
        }), this.hasValue() ? (y == null ? void 0 : y.action) === "initial-input-focus" && {
          "aria-describedby": this.getElementId("live-region")
        } : {
          "aria-describedby": this.getElementId("placeholder")
        });
        return a ? S.createElement(b, V({}, C, {
          autoCapitalize: "none",
          autoComplete: "off",
          autoCorrect: "off",
          id: x,
          innerRef: this.getInputRef,
          isDisabled: s,
          isHidden: h,
          onBlur: this.onInputBlur,
          onChange: this.handleInputChange,
          onFocus: this.onInputFocus,
          spellCheck: "false",
          tabIndex: u,
          form: d,
          type: "text",
          value: c
        }, T)) : S.createElement(HJ, V({
          id: x,
          innerRef: this.getInputRef,
          onBlur: this.onInputBlur,
          onChange: Cu,
          onFocus: this.onInputFocus,
          disabled: s,
          tabIndex: u,
          inputMode: "none",
          form: d,
          value: ""
        }, T));
      }
    )
  }, {
    key: "renderPlaceholderOrValue",
    value: function() {
      var r = this, s = this.getComponents(), a = s.MultiValue, l = s.MultiValueContainer, c = s.MultiValueLabel, u = s.MultiValueRemove, d = s.SingleValue, p = s.Placeholder, m = this.commonProps, g = this.props, b = g.controlShouldRenderValue, v = g.isDisabled, h = g.isMulti, y = g.inputValue, C = g.placeholder, x = this.state, T = x.selectValue, w = x.focusedValue, R = x.isFocused;
      if (!this.hasValue() || !b)
        return y ? null : S.createElement(p, V({}, m, {
          key: "placeholder",
          isDisabled: v,
          isFocused: R,
          innerProps: {
            id: this.getElementId("placeholder")
          }
        }), C);
      if (h)
        return T.map(function(O, I) {
          var P = O === w, A = "".concat(r.getOptionLabel(O), "-").concat(r.getOptionValue(O));
          return S.createElement(a, V({}, m, {
            components: {
              Container: l,
              Label: c,
              Remove: u
            },
            isFocused: P,
            isDisabled: v,
            key: A,
            index: I,
            removeProps: {
              onClick: function() {
                return r.removeValue(O);
              },
              onTouchEnd: function() {
                return r.removeValue(O);
              },
              onMouseDown: function(F) {
                F.preventDefault();
              }
            },
            data: O
          }), r.formatOptionLabel(O, "value"));
        });
      if (y)
        return null;
      var E = T[0];
      return S.createElement(d, V({}, m, {
        data: E,
        isDisabled: v
      }), this.formatOptionLabel(E, "value"));
    }
  }, {
    key: "renderClearIndicator",
    value: function() {
      var r = this.getComponents(), s = r.ClearIndicator, a = this.commonProps, l = this.props, c = l.isDisabled, u = l.isLoading, d = this.state.isFocused;
      if (!this.isClearable() || !s || c || !this.hasValue() || u)
        return null;
      var p = {
        onMouseDown: this.onClearIndicatorMouseDown,
        onTouchEnd: this.onClearIndicatorTouchEnd,
        "aria-hidden": "true"
      };
      return S.createElement(s, V({}, a, {
        innerProps: p,
        isFocused: d
      }));
    }
  }, {
    key: "renderLoadingIndicator",
    value: function() {
      var r = this.getComponents(), s = r.LoadingIndicator, a = this.commonProps, l = this.props, c = l.isDisabled, u = l.isLoading, d = this.state.isFocused;
      if (!s || !u) return null;
      var p = {
        "aria-hidden": "true"
      };
      return S.createElement(s, V({}, a, {
        innerProps: p,
        isDisabled: c,
        isFocused: d
      }));
    }
  }, {
    key: "renderIndicatorSeparator",
    value: function() {
      var r = this.getComponents(), s = r.DropdownIndicator, a = r.IndicatorSeparator;
      if (!s || !a) return null;
      var l = this.commonProps, c = this.props.isDisabled, u = this.state.isFocused;
      return S.createElement(a, V({}, l, {
        isDisabled: c,
        isFocused: u
      }));
    }
  }, {
    key: "renderDropdownIndicator",
    value: function() {
      var r = this.getComponents(), s = r.DropdownIndicator;
      if (!s) return null;
      var a = this.commonProps, l = this.props.isDisabled, c = this.state.isFocused, u = {
        onMouseDown: this.onDropdownIndicatorMouseDown,
        onTouchEnd: this.onDropdownIndicatorTouchEnd,
        "aria-hidden": "true"
      };
      return S.createElement(s, V({}, a, {
        innerProps: u,
        isDisabled: l,
        isFocused: c
      }));
    }
  }, {
    key: "renderMenu",
    value: function() {
      var r = this, s = this.getComponents(), a = s.Group, l = s.GroupHeading, c = s.Menu, u = s.MenuList, d = s.MenuPortal, p = s.LoadingMessage, m = s.NoOptionsMessage, g = s.Option, b = this.commonProps, v = this.state.focusedOption, h = this.props, y = h.captureMenuScroll, C = h.inputValue, x = h.isLoading, T = h.loadingMessage, w = h.minMenuHeight, R = h.maxMenuHeight, E = h.menuIsOpen, O = h.menuPlacement, I = h.menuPosition, P = h.menuPortalTarget, A = h.menuShouldBlockScroll, M = h.menuShouldScrollIntoView, F = h.noOptionsMessage, D = h.onMenuScrollToTop, N = h.onMenuScrollToBottom;
      if (!E) return null;
      var j = function(ee, G) {
        var H = ee.type, Y = ee.data, J = ee.isDisabled, U = ee.isSelected, ne = ee.label, se = ee.value, oe = v === Y, W = J ? void 0 : function() {
          return r.onOptionHover(Y);
        }, Z = J ? void 0 : function() {
          return r.selectOption(Y);
        }, L = "".concat(r.getElementId("option"), "-").concat(G), ie = {
          id: L,
          onClick: Z,
          onMouseMove: W,
          onMouseOver: W,
          tabIndex: -1,
          role: "option",
          "aria-selected": r.isAppleDevice ? void 0 : U
          // is not supported on Apple devices
        };
        return S.createElement(g, V({}, b, {
          innerProps: ie,
          data: Y,
          isDisabled: J,
          isSelected: U,
          key: L,
          label: ne,
          type: H,
          value: se,
          isFocused: oe,
          innerRef: oe ? r.getFocusedOptionRef : void 0
        }), r.formatOptionLabel(ee.data, "menu"));
      }, _;
      if (this.hasOptions())
        _ = this.getCategorizedOptions().map(function(Q) {
          if (Q.type === "group") {
            var ee = Q.data, G = Q.options, H = Q.index, Y = "".concat(r.getElementId("group"), "-").concat(H), J = "".concat(Y, "-heading");
            return S.createElement(a, V({}, b, {
              key: Y,
              data: ee,
              options: G,
              Heading: l,
              headingProps: {
                id: J,
                data: Q.data
              },
              label: r.formatGroupLabel(Q.data)
            }), Q.options.map(function(U) {
              return j(U, "".concat(H, "-").concat(U.index));
            }));
          } else if (Q.type === "option")
            return j(Q, "".concat(Q.index));
        });
      else if (x) {
        var z = T({
          inputValue: C
        });
        if (z === null) return null;
        _ = S.createElement(p, b, z);
      } else {
        var $ = F({
          inputValue: C
        });
        if ($ === null) return null;
        _ = S.createElement(m, b, $);
      }
      var k = {
        minMenuHeight: w,
        maxMenuHeight: R,
        menuPlacement: O,
        menuPosition: I,
        menuShouldScrollIntoView: M
      }, B = S.createElement(xq, V({}, b, k), function(Q) {
        var ee = Q.ref, G = Q.placerProps, H = G.placement, Y = G.maxHeight;
        return S.createElement(c, V({}, b, k, {
          innerRef: ee,
          innerProps: {
            onMouseDown: r.onMenuMouseDown,
            onMouseMove: r.onMenuMouseMove
          },
          isLoading: x,
          placement: H
        }), S.createElement(JJ, {
          captureEnabled: y,
          onTopArrive: D,
          onBottomArrive: N,
          lockEnabled: A
        }, function(J) {
          return S.createElement(u, V({}, b, {
            innerRef: function(ne) {
              r.getMenuListRef(ne), J(ne);
            },
            innerProps: {
              role: "listbox",
              "aria-multiselectable": b.isMulti,
              id: r.getElementId("listbox")
            },
            isLoading: x,
            maxHeight: Y,
            focusedOption: v
          }), _);
        }));
      });
      return P || I === "fixed" ? S.createElement(d, V({}, b, {
        appendTo: P,
        controlElement: this.controlRef,
        menuPlacement: O,
        menuPosition: I
      }), B) : B;
    }
  }, {
    key: "renderFormField",
    value: function() {
      var r = this, s = this.props, a = s.delimiter, l = s.isDisabled, c = s.isMulti, u = s.name, d = s.required, p = this.state.selectValue;
      if (d && !this.hasValue() && !l)
        return S.createElement(tK, {
          name: u,
          onFocus: this.onValueInputFocus
        });
      if (!(!u || l))
        if (c)
          if (a) {
            var m = p.map(function(v) {
              return r.getOptionValue(v);
            }).join(a);
            return S.createElement("input", {
              name: u,
              type: "hidden",
              value: m
            });
          } else {
            var g = p.length > 0 ? p.map(function(v, h) {
              return S.createElement("input", {
                key: "i-".concat(h),
                name: u,
                type: "hidden",
                value: r.getOptionValue(v)
              });
            }) : S.createElement("input", {
              name: u,
              type: "hidden",
              value: ""
            });
            return S.createElement("div", null, g);
          }
        else {
          var b = p[0] ? this.getOptionValue(p[0]) : "";
          return S.createElement("input", {
            name: u,
            type: "hidden",
            value: b
          });
        }
    }
  }, {
    key: "renderLiveRegion",
    value: function() {
      var r = this.commonProps, s = this.state, a = s.ariaSelection, l = s.focusedOption, c = s.focusedValue, u = s.isFocused, d = s.selectValue, p = this.getFocusableOptions();
      return S.createElement(VJ, V({}, r, {
        id: this.getElementId("live-region"),
        ariaSelection: a,
        focusedOption: l,
        focusedValue: c,
        isFocused: u,
        selectValue: d,
        focusableOptions: p,
        isAppleDevice: this.isAppleDevice
      }));
    }
  }, {
    key: "render",
    value: function() {
      var r = this.getComponents(), s = r.Control, a = r.IndicatorsContainer, l = r.SelectContainer, c = r.ValueContainer, u = this.props, d = u.className, p = u.id, m = u.isDisabled, g = u.menuIsOpen, b = this.state.isFocused, v = this.commonProps = this.getCommonProps();
      return S.createElement(l, V({}, v, {
        className: d,
        innerProps: {
          id: p,
          onKeyDown: this.onKeyDown
        },
        isDisabled: m,
        isFocused: b
      }), this.renderLiveRegion(), S.createElement(s, V({}, v, {
        innerRef: this.getControlRef,
        innerProps: {
          onMouseDown: this.onControlMouseDown,
          onTouchEnd: this.onControlTouchEnd
        },
        isDisabled: m,
        isFocused: b,
        menuIsOpen: g
      }), S.createElement(c, V({}, v, {
        isDisabled: m
      }), this.renderPlaceholderOrValue(), this.renderInput()), S.createElement(a, V({}, v, {
        isDisabled: m
      }), this.renderClearIndicator(), this.renderLoadingIndicator(), this.renderIndicatorSeparator(), this.renderDropdownIndicator())), this.renderMenu(), this.renderFormField());
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function(r, s) {
      var a = s.prevProps, l = s.clearFocusValueOnUpdate, c = s.inputIsHiddenAfterUpdate, u = s.ariaSelection, d = s.isFocused, p = s.prevWasFocused, m = s.instancePrefix, g = r.options, b = r.value, v = r.menuIsOpen, h = r.inputValue, y = r.isMulti, C = k0(b), x = {};
      if (a && (b !== a.value || g !== a.options || v !== a.menuIsOpen || h !== a.inputValue)) {
        var T = v ? bK(r, C) : [], w = v ? Z0(zc(r, C), "".concat(m, "-option")) : [], R = l ? vK(s, C) : null, E = yK(s, T), O = nf(w, E);
        x = {
          selectValue: C,
          focusedOption: E,
          focusedOptionId: O,
          focusableOptionsWithIds: w,
          focusedValue: R,
          clearFocusValueOnUpdate: false
        };
      }
      var I = c != null && r !== a ? {
        inputIsHidden: c,
        inputIsHiddenAfterUpdate: void 0
      } : {}, P = u, A = d && p;
      return d && !A && (P = {
        value: Ic(y, C, C[0] || null),
        options: C,
        action: "initial-input-focus"
      }, A = !p), (u == null ? void 0 : u.action) === "initial-input-focus" && (P = null), et(et(et({}, x), I), {}, {
        prevProps: r,
        ariaSelection: P,
        prevWasFocused: A
      });
    }
  }]), n;
}(import_react.Component);
xI.defaultProps = hK;
var CK = (0, import_react.forwardRef)(function(e10, t) {
  var n = UZ(e10);
  return S.createElement(xI, V({
    ref: t
  }, n));
});
var J0 = CK;
var Gr = ({
  invalid: e10,
  label: t = "",
  required: n = false,
  labelKey: o = "label",
  valueKey: r = "value",
  isLoading: s,
  isSearchable: a = false,
  data: l,
  onChange: c,
  isDisabled: u,
  defaultValue: d,
  width: p = "340px",
  containerMb: m = "10px",
  borderRadius: g = "10px 10px 10px 10px",
  background: b = "white",
  focusShadow: v = "0 0 0 1px #2684FF",
  noOptionText: h = "No options",
  ph: y = "",
  onConfigure: C,
  ...x
}) => {
  const T = (0, import_react.useMemo)(() => l, [l]);
  return (0, import_react.useMemo)(() => f.jsxs(De, { sx: { maxWidth: "340px" }, children: [
    f.jsx(De, { mb: m, children: f.jsxs(Ln, { direction: "row", children: [
      f.jsx(Fe, { component: "label", variant: "label", children: t }),
      n && f.jsx(Fe, { variant: "error", children: "*" })
    ] }) }),
    typeof c == "function" ? f.jsx(
      J0,
      {
        ...x,
        placeholder: y,
        isDisabled: u,
        noOptionsMessage: () => f.jsx(Fe, { children: h }),
        onChange: c,
        isLoading: s,
        getOptionLabel: (w) => w[o],
        getOptionValue: (w) => w[r],
        className: "basic-single",
        classNamePrefix: "select",
        isClearable: false,
        isSearchable: a,
        name: "color",
        options: l,
        styles: {
          container: (w) => ({
            ...w,
            width: p,
            height: "43px"
          }),
          control: (w, R) => ({
            ...w,
            height: "43px",
            borderRadius: g,
            borderColor: e10 ? "#d32f2f" : R.menuIsOpen || R.isFocused ? "lightgray" : "#D0D0D0",
            boxShadow: R.isFocused ? v : "",
            background: b,
            "&:hover": {
              borderColor: "lightgray"
            }
          }),
          menu: (w) => ({
            ...w,
            zIndex: 99
          }),
          indicatorSeparator: (w) => ({
            ...w,
            display: "none"
          })
        }
      }
    ) : f.jsx(
      J0,
      {
        ...x,
        placeholder: y,
        noOptionsMessage: () => f.jsx(Fe, { children: h }),
        defaultValue: d,
        isLoading: s,
        getOptionLabel: (w) => w[o],
        getOptionValue: (w) => w[r],
        className: "basic-single",
        classNamePrefix: "select",
        isClearable: false,
        isSearchable: a,
        name: "color",
        options: T,
        styles: {
          container: (w) => ({
            ...w,
            width: p,
            height: "43px"
          }),
          control: (w) => ({
            ...w,
            height: "43px",
            borderRadius: g,
            borderColor: e10 ? "#d32f2f" : "#D0D0D0"
          })
        }
      }
    )
  ] }), [T, C, y, h, o, r, t, c]);
};
var K0 = {
  id: "1",
  first_name: "Lighting",
  last_name: "Resources LLC",
  company_name: "Lighting Resources LLC",
  display_name: "Lighting Resources LLC",
  email: "awais@99technologies.com",
  website: "https://www.google.com",
  tax_preference: "tax_exempt",
  mode_of_payment: "ACH Transfer",
  mode_of_payment_value: "ACH Transfer",
  customer_billing_address: [
    {
      type: "billing",
      attention: "Lighting Resources LLC",
      country_id: 231,
      address: "P.O Box 941438",
      address2: "",
      city: "Simi Valley",
      zipcode: "93094",
      is_default: 1,
      state_name: "California",
      country: { name: "U.S.A" },
      state: { name: "California" }
    }
  ],
  customer_shipping_address: [
    {
      type: "shipping",
      attention: "Lighting Resources LLC",
      country_id: 231,
      address: "P.O Box 941438",
      address2: "",
      city: "Simi Valley",
      zipcode: "93094",
      is_default: 1,
      state_name: "California",
      country: { name: "U.S.A" },
      state: { name: "California" }
    }
  ],
  term: {
    id: 5,
    term_name: "Due on Receipt",
    days: "1",
    is_default: 1
  },
  tax: {
    id: 3,
    name: "MN Sales Tax 5.5",
    rate: "5.50",
    authority: "MN Sales Tax [5.5%]",
    deleted_at: null,
    created_at: null,
    updated_at: null
  }
};
var SK = () => {
  const e10 = K0.customer_billing_address[0], t = K0.customer_shipping_address[0], [n, o] = (0, import_react.useState)([{ name: "", description: "", quantity: 1, rate: 0 }]), [r, s] = (0, import_react.useState)({
    customerName: "Lighting Resources LLC",
    referenceNumber: "",
    invoiceDate: (/* @__PURE__ */ new Date()).toISOString().substring(0, 10),
    dueDate: "",
    subject: "",
    paymentTerms: "",
    itemRatesType: "Exclusive",
    officeEmail: "ayesha.nasir@99technologies.com",
    paymentMethod: "ACH Transfer",
    billingAddress: {
      attention: "",
      address: "",
      city: "",
      state_name: "",
      zipcode: "",
      country: { name: "" }
      // Assuming country object has a name property
    },
    shippingAddress: {
      attention: "",
      address: "",
      city: "",
      state_name: "",
      zipcode: "",
      country: { name: "" }
      // Same as billing
    },
    status: "Draft"
  }), [a, l] = (0, import_react.useState)([
    { value: "Exclusive", label: "Tax Exclusive" },
    { value: "Inclusive", label: "Tax Inclusive" }
  ]), c = [
    { value: "Lighting Resources LLC", label: "Lighting Resources LLC" }
    // Add more customer options as needed
  ], [u] = (0, import_react.useState)([
    { value: "Credit Card", label: "Credit Card" },
    { value: "Cash", label: "Cash" },
    { value: "ACH Transfer", label: "ACH Transfer" },
    { value: "Cheque", label: "Cheque" }
  ]), [d, p] = (0, import_react.useState)([]), [m, g] = (0, import_react.useState)({ name: "", days: 0, description: "" }), [b, v] = (0, import_react.useState)(false);
  (0, import_react.useEffect)(() => {
    (async () => {
      try {
        const _ = await jw();
        console.log("Fetched payment terms:", _.data);
        const z = _.data.map(($) => ({
          label: $.name,
          // Use name as label
          value: $.id
          // Use id as value
        }));
        p(z);
      } catch (_) {
        console.error("Error fetching payment terms:", _);
      }
    })();
  }, []);
  const h = (j) => {
    s((_) => ({
      ..._,
      itemRatesType: j ? j.value : ""
      // Use the label for display
    }));
  }, y = (j) => {
    console.log("Selected option:", j), s({
      ...r,
      customerName: j ? j.value : ""
      // Handle clearing
    });
  }, C = (j) => {
    s((_) => ({
      ..._,
      paymentMethod: j ? j.label : ""
      // Use the label for display
    }));
  }, x = (j) => {
    const { name: _, value: z } = j.target;
    s({ ...r, [_]: z });
  }, T = (j, _) => {
    const { name: z, value: $ } = _.target, k = [...n];
    k[j][z] = $, o(k);
  }, w = () => {
    o([...n, { name: "", description: "", quantity: 1, rate: 0 }]);
  }, R = (j) => {
    const _ = [...n];
    _.splice(j, 1), o(_);
  }, E = () => n.reduce((j, _) => j + _.quantity * _.rate, 0), O = (j) => {
    s((_) => ({
      ..._,
      paymentTerms: j ? j.label : ""
      // Use value instead of name
    })), console.log(j.label);
  };
  K(zt)(({ theme: j }) => ({
    fontFamily: "Nunito, Arial, sans-serif",
    // fontWeight: 700,
    // fontSize: '0.875rem',
    lineHeight: "1.5rem",
    verticalAlign: "inherit",
    borderBottom: "1px solid rgba(224, 224, 224, 1)",
    textAlign: "left",
    padding: "16px",
    color: "rgba(0, 0, 0, 0.87)"
  }));
  const I = r.itemRatesType === "Inclusive" ? 0 : 0.05, P = async () => {
    s((j) => {
      const _ = "Sent";
      return console.log("New Invoice status:", _), {
        ...j,
        status: _
        // Change status to "Sent"
      };
    }), console.log(r.status), A();
  };
  (0, import_react.useState)({
    id: "",
    name: "",
    days: "",
    description: ""
  });
  const A = async () => {
    if (!r.customerName || !r.referenceNumber) {
      alert("Customer Name and Reference No. are required.");
      return;
    }
    try {
      const j = E(), _ = r.itemRatesType === "Inclusive" ? 0.05 : 0;
      let z, $;
      console.log(_), console.log(r.itemRatesType), r.itemRatesType === "Exclusive" ? (z = j * _, console.log("include", z), $ = j + z, console.log($)) : (z = j * _, console.log(z), $ = j);
      const k = (ee, G) => {
        s((H) => ({
          ...H,
          billingAddress: {
            attention: ee.attention || H.billingAddress.attention,
            address: ee.address || H.billingAddress.address,
            city: ee.city || H.billingAddress.city,
            state_name: ee.state_name || H.billingAddress.state_name,
            zipcode: ee.zipcode || H.billingAddress.zipcode,
            country: { name: ee.country.name || H.billingAddress.country.name }
          },
          shippingAddress: {
            attention: G.attention || H.shippingAddress.attention,
            address: G.address || H.shippingAddress.address,
            city: G.city || H.shippingAddress.city,
            state_name: G.state_name || H.shippingAddress.state_name,
            zipcode: G.zipcode || H.shippingAddress.zipcode,
            country: { name: G.country.name || H.shippingAddress.country.name }
          }
        }));
      }, B = {
        customer_id: "1",
        customer_name: r.customerName,
        email: r.officeEmail,
        // Update to reflect actual input
        billing_address_1: e10.address,
        // Replace with your inputs
        billing_address_2: "",
        billing_city: e10.city,
        billing_state: e10.state_name,
        billing_zip_code: e10.zipcode,
        shipping_address_1: t.address,
        shipping_address_2: "",
        shipping_city: t.city,
        shipping_state: t.state_name,
        shipping_zip_code: t.zipcode,
        payment_method: r.paymentMethod,
        // From invoiceDetails
        order_id: r.referenceNumber,
        from_address_1: "Floor 1 & 2, Plaza, 117, Civic Center",
        // Update as needed
        from_address_2: "",
        from_city: "Islamabad",
        // Update as needed
        from_state: "Capital Territory",
        // Update as needed
        from_zip_code: "46000",
        // Update as needed
        from_phone: "03099712657",
        // id: 1,// Update as needed
        metadata: {
          // pickup_date: "Something", // Replace with actual input if applicable
          // termObject: {
          //   name: newTerm.name,        // Using name from newTerm
          //   days: newTerm.days,       // Assuming 'days' in newTerm corresponds to 'value'
          //   id: newTerm.id,  
          //   value : newTerm.id,        // Use id from newTerm
          //   description: newTerm.description, // Use description from newTerm
          // },
          // paymentObject: {
          //   label: invoiceDetails.paymentMethod,
          //   value: invoiceDetails.paymentMethod,
          // },
          companyObject: {
            id: 1,
            // Update as needed
            name: "NINETY NINE TECHNOLOGIES (PVT) LIMITED",
            company_address_1: "Floor 1 & 2, Plaza, 117, Civic Center",
            company_address_2: "",
            company_city: "Islamabad",
            company_state: "Capital Territory",
            company_zip_code: "46000",
            company_phone: "03099712657",
            company_country: "Pakistan",
            company_email: "admin@btosystems.com",
            company_website: "www.minnesotacomputers.com",
            company_logo: "/public/99-tech-private.png",
            company_tax_id: "123456789"
            // bankDetails: {
            //   bank_name: "Bank AL Habib Limited",
            //   bank_title: "NINETY NINE TECHNOLOGIES (PVT) LIMITED",
            //   bank_no: "5546 0081 0020 33012",
            //   bank_routing: "",
            //   bank_swift_code: "BAHLPKKA",
            //   bank_branch_code: "5546",
            //   bank_iban: "PK95 BAHL 5546 0081 0020 3301",
            //   bank_address: "IBB, BAHRIA EXPRESSWAY, RAWALPINDI, PAKISTAN",
            // },
          },
          bankDetailsObject: {
            bank_name: "Bank AL Habib Limited",
            bank_title: "NINETY NINE TECHNOLOGIES (PVT) LIMITED",
            bank_no: "5546 0081 0020 33012",
            bank_routing: "",
            bank_swift_code: "BAHLPKKA",
            bank_branch_code: "5546",
            bank_iban: "PK95 BAHL 5546 0081 0020 3301",
            bank_address: "IBB, BAHRIA EXPRESSWAY, RAWALPINDI, PAKISTAN"
          }
          //         termsAndConditionsObject: {
          //           text: "All items will come with a Standard 30-Days Warranty unless specified in the applicable invoice. All items sold on this invoice are considered Pre-Owned (Used) unless otherwise noted in the sales agreement. Any DOA or damaged claim must be noted to the company in writing with 10 days upon delivery to the vendor. the company will not be responsible for any damage in the shipping unless mentioned in the sales agreement."
          //  },
        },
        tax_type: r.itemRatesType,
        // due_date_value: invoiceDetails.dueDate, // Update based on your input
        term: r.paymentTerms,
        // invoice_date_value: invoiceDetails.invoiceDate, // Update based on your input
        // expiry_date_value: invoiceDetails.dueDate, // Update based on your input
        subject: `NINETY NINE TECHNOLOGIES (PVT) LIMITED - Invoice #${r.referenceNumber}`,
        // Update as needed
        status: r.status,
        cc: ["awais@99technologies.com"],
        discount: 0,
        tax: 5,
        // Update based on your inputs
        discount_type: "Percentage",
        items: n.map((ee) => {
          const G = ee.quantity * ee.rate, H = (r.itemRatesType === "Inclusive", 0.05), Y = G * H;
          return {
            // item_name_object: "",
            // item_id: "", // Update if you have item IDs
            name: ee.name,
            quantity: ee.quantity,
            description: ee.description,
            price: ee.rate
          };
        })
      };
      console.log("Form submitted", B);
      const Q = await L9(B);
      console.log("Invoice saved :", Q.data), console.log(Q.data.status), window.open("/invoices");
    } catch (j) {
      console.error("Error submitting form:", j), alert("Failed to submit invoice.");
    }
  }, M = async () => {
    try {
      const j = await Aw(m);
      p((_) => [
        ..._,
        { id: j.id, name: j.name, days: j.days, description: j.description }
      ]), g({ name: "", days: 0, description: "" }), N(), alert("Payment term added successfully!");
    } catch (j) {
      console.error("Error adding payment term:", j), alert("Failed to add payment term.");
    }
  }, F = () => {
    window.open("/invoices");
  }, D = () => v(true), N = () => v(false);
  return f.jsxs(De, { p: 3, sx: { border: "1px solid #ccc", boxShadow: 2, borderRadius: 2 }, children: [
    f.jsx(De, { mb: 2, p: 2, sx: { backgroundColor: "#fff", boxShadow: 3, borderRadius: 2 }, children: f.jsxs(De, { display: "flex", justifyContent: "space-between", alignItems: "center", mb: 2, mt: 8, children: [
      f.jsx(Fe, { variant: "h5", children: "New Invoice" }),
      f.jsx(lt, { color: "error", onClick: F, children: f.jsx(Id, {}) })
    ] }) }),
    f.jsx(Ct, { container: true, spacing: 2, children: f.jsxs(Ct, { item: true, xs: 12, md: 12, children: [
      f.jsx(So, { fullWidth: true, children: f.jsx(
        Gr,
        {
          data: c,
          label: "Select Customer",
          value: c.find((j) => j.value === r.customerName),
          onChange: y,
          ph: "Select a customer"
        }
      ) }),
      f.jsxs(De, { sx: { marginLeft: 2, marginTop: 2, display: "flex", gap: 4 }, children: [
        f.jsxs(De, { children: [
          f.jsx(Fe, { variant: "subtitle1", gutterBottom: true, children: "BILLING ADDRESS" }),
          f.jsx(Fe, { variant: "body2", children: e10.attention }),
          f.jsx(Fe, { variant: "body2", children: e10.address }),
          f.jsxs(Fe, { variant: "body2", children: [
            e10.city,
            ", ",
            e10.state_name,
            " ",
            e10.zipcode
          ] }),
          f.jsx(Fe, { variant: "body2", children: e10.country.name })
        ] }),
        f.jsxs(De, { sx: { marginLeft: 3 }, children: [
          f.jsx(Fe, { variant: "subtitle1", gutterBottom: true, children: "SHIPPING ADDRESS" }),
          f.jsx(Fe, { variant: "body2", children: t.attention }),
          f.jsx(Fe, { variant: "body2", children: t.address }),
          f.jsxs(Fe, { variant: "body2", children: [
            t.city,
            ", ",
            t.state_name,
            " ",
            t.zipcode
          ] }),
          f.jsx(Fe, { variant: "body2", children: t.country.name })
        ] })
      ] }),
      f.jsxs(Ct, { container: true, mt: 2, children: [
        f.jsx(
          qt,
          {
            label: "Reference No.",
            name: "referenceNumber",
            value: r.referenceNumber,
            onChange: x,
            placeholder: "Enter reference number",
            fullWidth: true
          }
        ),
        f.jsx(De, { sx: { marginLeft: 2 }, children: f.jsx(
          qt,
          {
            label: "Subject",
            name: "subject",
            value: r.subject,
            onChange: x,
            fullWidth: true,
            sx: { minWidth: "1000px" }
          }
        ) })
      ] }),
      f.jsxs(Ct, { container: true, mt: 2, children: [
        f.jsx(
          qt,
          {
            label: "Invoice Date",
            type: "date",
            name: "invoiceDate",
            value: r.invoiceDate,
            onChange: x,
            InputLabelProps: { shrink: true },
            fullWidth: true
          }
        ),
        f.jsx(De, { sx: { marginLeft: 2 }, children: f.jsx(
          qt,
          {
            label: "Due Date",
            type: "date",
            name: "dueDate",
            value: r.dueDate,
            onChange: x,
            InputLabelProps: { shrink: true },
            fullWidth: true
          }
        ) }),
        f.jsx(De, { sx: { marginLeft: 2 }, children: f.jsx(
          qt,
          {
            label: "Office Email",
            name: "officeEmail",
            value: r.officeEmail,
            onChange: x,
            fullWidth: true
          }
        ) })
      ] }),
      f.jsxs(Ct, { container: true, spacing: 0, mt: 2, children: [
        f.jsxs(Ct, { children: [
          " ",
          f.jsxs(So, { fullWidth: true, children: [
            f.jsx(
              Gr,
              {
                value: d.find((j) => j.name === r.paymentTerms),
                onChange: O,
                data: d,
                label: "Payment terms",
                ph: "Select payment terms"
              }
            ),
            f.jsx(vt, { variant: "outlined", onClick: D, children: "Configure Terms" })
          ] })
        ] }),
        f.jsxs(Ct, { sx: { ml: 2 }, children: [
          " ",
          f.jsx(So, { fullWidth: true, children: f.jsx(
            Gr,
            {
              value: a.find((j) => j.value === r.itemRatesType) || null,
              onChange: h,
              data: a,
              label: "Item Rates",
              ph: "Select item rates"
            }
          ) })
        ] }),
        f.jsxs(Ct, { sx: { ml: 2 }, children: [
          "   ",
          f.jsx(So, { fullWidth: true, mt: 2, children: f.jsx(
            Gr,
            {
              value: u.find((j) => j.label === r.paymentMethod) || null,
              onChange: C,
              data: u,
              label: "Payment Method",
              ph: "Select payment method"
            }
          ) }),
          f.jsx(
            jl,
            {
              open: b,
              onClose: N,
              sx: { display: "flex", alignItems: "center", justifyContent: "center" },
              children: f.jsxs(De, { p: 3, sx: { backgroundColor: "white", borderRadius: 1, width: 400 }, children: [
                f.jsx(Fe, { variant: "h6", children: "Add New Payment Term" }),
                f.jsx(
                  qt,
                  {
                    label: "Term Name",
                    name: "name",
                    value: m.name,
                    onChange: (j) => g({ ...m, name: j.target.value }),
                    fullWidth: true,
                    margin: "normal"
                  }
                ),
                f.jsx(
                  qt,
                  {
                    label: "Days",
                    name: "days",
                    type: "number",
                    value: m.days,
                    onChange: (j) => g({ ...m, days: j.target.value }),
                    fullWidth: true,
                    margin: "normal"
                  }
                ),
                f.jsx(
                  qt,
                  {
                    label: "Description",
                    name: "description",
                    value: m.description,
                    onChange: (j) => g({ ...m, description: j.target.value }),
                    fullWidth: true,
                    margin: "normal"
                  }
                ),
                f.jsxs(De, { display: "flex", justifyContent: "flex-end", mt: 2, children: [
                  f.jsx(vt, { onClick: N, children: "Cancel" }),
                  f.jsx(vt, { variant: "contained", color: "primary", onClick: M, sx: { ml: 1 }, children: "Add Term" })
                ] })
              ] })
            }
          )
        ] })
      ] })
    ] }) }),
    f.jsx(Fe, { variant: "h6", children: "Invoice Items" }),
    f.jsx(cd, { component: vn, children: f.jsxs(ld, { children: [
      f.jsx(ud, { children: f.jsxs(Pr, { children: [
        f.jsx(zt, { children: " Item Name" }),
        f.jsx(zt, { children: "Item Description" }),
        f.jsx(zt, { children: "Quantity" }),
        f.jsx(zt, { children: "Rate" }),
        f.jsx(zt, { children: "Amount" }),
        f.jsx(zt, { children: "Actions" })
      ] }) }),
      f.jsx(vs, { children: n.map((j, _) => f.jsxs(Pr, { children: [
        f.jsx(zt, { children: f.jsx(
          qt,
          {
            name: "name",
            value: j.name,
            onChange: (z) => T(_, z),
            fullWidth: true
          }
        ) }),
        f.jsx(zt, { children: f.jsx(
          qt,
          {
            name: "description",
            value: j.description,
            onChange: (z) => T(_, z),
            fullWidth: true
          }
        ) }),
        f.jsx(zt, { children: f.jsx(
          qt,
          {
            name: "quantity",
            type: "number",
            value: j.quantity,
            onChange: (z) => T(_, z),
            fullWidth: true
          }
        ) }),
        f.jsx(zt, { children: f.jsx(
          qt,
          {
            name: "rate",
            type: "number",
            value: j.rate,
            onChange: (z) => T(_, z),
            fullWidth: true
          }
        ) }),
        f.jsx(zt, { children: f.jsx(Fe, { children: (j.quantity * j.rate).toFixed(2) }) }),
        f.jsx(zt, { children: f.jsx(lt, { onClick: () => R(_), color: "secondary", children: f.jsx(Rd, {}) }) })
      ] }, _)) })
    ] }) }),
    f.jsx(vt, { startIcon: f.jsx(Bg, {}), onClick: w, sx: { mt: 2 }, children: "Add New Item" }),
    f.jsx(De, { mt: 4, display: "flex", justifyContent: "flex-end", children: f.jsxs(De, { children: [
      f.jsxs(Fe, { children: [
        "Sub Total: $",
        E()
      ] }),
      f.jsxs(Fe, { children: [
        "Tax (5%): $",
        E() * I
      ] }),
      f.jsxs(Fe, { children: [
        "Total: $",
        E() * (1 + I)
      ] })
    ] }) }),
    f.jsxs(De, { mt: 4, display: "flex", justifyContent: "flex-end", gap: 2, children: [
      f.jsx(vt, { variant: "outlined", onClick: () => F(), children: "Cancel" }),
      f.jsx(vt, { variant: "contained", color: "primary", onClick: A, children: "Save as Draft" }),
      f.jsx(vt, { variant: "contained", color: "secondary", onClick: P, children: "Save and Send" })
    ] })
  ] });
};
var wK = () => {
  const { id: e10 } = gx(), [t, n] = (0, import_react.useState)(true), o = async () => {
    try {
      const $ = await Pw(e10), k = $.data.data;
      console.log("term is empty", k.term), c({
        customerId: k.customer_id,
        id: k.id,
        customerName: k.customer_name,
        referenceNumber: k.order_id,
        invoiceDate: k.invoice_date,
        dueDate: k.due_date,
        subject: k.subject,
        paymentTerms: k.term,
        itemRatesType: k.tax_type,
        officeEmail: k.email,
        // If you want to keep this
        paymentMethod: k.payment_method,
        billing_address_1: k.billing_address_1,
        billing_city: k.billing_city,
        billing_state: k.billing_state,
        billing_zip_code: k.billing_zip_code,
        shipping_address_1: k.shipping_address_1,
        shipping_city: k.shipping_city,
        shipping_state: k.shipping_state,
        shipping_zip_code: k.shipping_zip_code
      });
      const B = k.items.map((Q) => ({
        name: Q.name,
        description: Q.description,
        quantity: Q.quantity,
        rate: parseFloat(Q.price)
        // Assuming price is a string and needs to be converted to a number
      }));
      a(B), console.log($.data), console.log(l), console.log("Invoice Payment Terms:", l.paymentTerms), console.log("Available Payment Terms:", g);
    } catch ($) {
      console.error("Error fetching invoice:", $);
    } finally {
      n(false);
    }
  };
  (0, import_react.useEffect)(() => {
    (async () => {
      try {
        const k = await jw();
        console.log("Fetched payment terms:", k.data);
        const B = k.data.map((Q) => ({
          // console.log(esponse.data);
          label: Q.name,
          // Use name as label
          value: Q.id
          // Use id as value
        }));
        console.log(B), b(B);
      } catch (k) {
        console.error("Error fetching payment terms:", k);
      }
    })();
  }, []), (0, import_react.useEffect)(() => {
    o();
  }, [e10]);
  const r = _s(), [s, a] = (0, import_react.useState)([{ name: "", description: "", quantity: 1, rate: 0 }]), [l, c] = (0, import_react.useState)({
    customerId: "",
    id: "",
    customerName: "",
    referenceNumber: "",
    invoiceDate: "",
    dueDate: "",
    subject: "",
    paymentTerms: "",
    itemRatesType: "",
    officeEmail: "",
    // Optional field if you want to keep it
    paymentMethod: "",
    shipping_address_1: "",
    shipping_city: "",
    shipping_state: "",
    billing_address_1: "",
    billing_city: "",
    billing_state: ""
  }), [u, d] = (0, import_react.useState)([
    { value: "Exclusive", label: "Tax Exclusive" },
    { value: "Inclusive", label: "Tax Inclusive" }
  ]), p = [
    { value: "Ninety Nine Technologies LLC", label: "Ninety Nine Technologies LLC" },
    { value: "Lighting Resources LLC", label: "Lighting Resources LLC" }
    // { value: 'Customer C', label: 'Customer C' },
    // Add more customer options as needed
  ], [m] = (0, import_react.useState)([
    { value: "Credit Card", label: "Credit Card" },
    { value: "Cash", label: "Cash" },
    { value: "ACH Transfer", label: "ACH Transfer" },
    { value: "Cheque", label: "Cheque" }
  ]), [g, b] = (0, import_react.useState)([]), [v, h] = (0, import_react.useState)({ name: "", days: 0, description: "" }), [y, C] = (0, import_react.useState)(false), x = ($) => {
    c((k) => ({
      ...k,
      itemRatesType: $ ? $.value : ""
      // Use the label for display
    }));
  }, T = ($) => {
    console.log("Selected option:", $), c({
      ...l,
      customerName: $ ? $.value : ""
      // Handle clearing
    });
  }, w = ($) => {
    c((k) => ({
      ...k,
      paymentMethod: $ ? $.label : ""
      // Use the label for display
    }));
  }, R = ($) => {
    const { name: k, value: B } = $.target;
    c({ ...l, [k]: B });
  }, E = ($, k) => {
    const { name: B, value: Q } = k.target, ee = [...s];
    ee[$][B] = Q, a(ee);
  }, O = () => {
    a([...s, { name: "", description: "", quantity: 1, rate: 0 }]);
  }, I = ($) => {
    const k = [...s];
    k.splice($, 1), a(k);
  }, P = () => s.reduce(($, k) => $ + k.quantity * k.rate, 0), A = async () => {
    c(($) => {
      const k = "Sent";
      return console.log("New Invoice status:", k), {
        ...$,
        status: k
        // Change status to "Sent"
      };
    }), console.log(l.status), D();
  }, M = ($) => {
    console.log("new one", l.paymentTerms), c((k) => ({
      ...k,
      paymentTerms: $ ? $.label : l.paymentTerms
      // Use value instead of name
    }));
  }, F = l.itemRatesType === "Inclusive" ? 0 : 0.05, D = async () => {
    if (!l.customerName || !l.referenceNumber) {
      alert("Customer Name and Reference No. are required.");
      return;
    }
    try {
      const $ = P(), k = l.itemRatesType === "Inclusive" ? 0.055 : 0;
      let B, Q;
      console.log(k), console.log(l.itemRatesType), l.itemRatesType === "Exclusive" ? (B = $ * k, console.log("include", B), Q = $ + B, console.log(Q)) : (B = $ * k, console.log(B), Q = $);
      const ee = {
        customer_id: l.customerId,
        // This should be fetched from your customer data
        customer_name: l.customerName,
        email: l.officeEmail,
        // Update to reflect actual input
        billing_address_1: l.billing_address_1,
        // Replace with your inputs
        billing_address_2: "",
        billing_city: l.billing_city,
        // Replace with your inputs
        billing_state: l.billing_state,
        // Replace with your inputs
        billing_zip_code: l.billing_zip_code,
        // Replace with your inputs
        shipping_address_1: l.shipping_address_1,
        // Replace with your inputs
        shipping_address_2: "",
        shipping_city: l.shipping_city,
        // Replace with your inputs
        shipping_state: l.shipping_state,
        // Replace with your inputs
        shipping_zip_code: l.shipping_zip_code,
        // Replace with your inputs
        payment_method: l.paymentMethod,
        // From invoiceDetails
        order_id: l.referenceNumber,
        from_address_1: "Floor 1 & 2, Plaza, 117, Civic Center",
        // Update as needed
        from_address_2: "",
        from_city: "Islamabad",
        // Update as needed
        from_state: "Capital Territory",
        // Update as needed
        from_zip_code: "46000",
        // Update as needed
        from_phone: "03099712657",
        id: l.id,
        // Update as needed
        metadata: {
          // pickup_date: "Something", // Replace with actual input if applicable
          // termObject: {
          //   name: newTerm.name,        // Using name from newTerm
          //   days: newTerm.days,       // Assuming 'days' in newTerm corresponds to 'value'
          //   id: newTerm.id,  
          //   value : newTerm.id,        // Use id from newTerm
          //   description: newTerm.description, // Use description from newTerm
          // },
          // paymentObject: {
          //   label: invoiceDetails.paymentMethod,
          //   value: invoiceDetails.paymentMethod,
          // },
          companyObject: {
            id: 1,
            // Update as needed
            name: "NINETY NINE TECHNOLOGIES (PVT) LIMITED",
            company_address_1: "Floor 1 & 2, Plaza, 117, Civic Center",
            company_address_2: "",
            company_city: "Islamabad",
            company_state: "Capital Territory",
            company_zip_code: "46000",
            company_phone: "03099712657",
            company_country: "Pakistan",
            company_email: "admin@btosystems.com",
            company_website: "www.minnesotacomputers.com",
            company_logo: "/public/99-tech-private.png",
            company_tax_id: "123456789"
            // bankDetails: {
            //   bank_name: "Bank AL Habib Limited",
            //   bank_title: "NINETY NINE TECHNOLOGIES (PVT) LIMITED",
            //   bank_no: "5546 0081 0020 33012",
            //   bank_routing: "",
            //   bank_swift_code: "BAHLPKKA",
            //   bank_branch_code: "5546",
            //   bank_iban: "PK95 BAHL 5546 0081 0020 3301",
            //   bank_address: "IBB, BAHRIA EXPRESSWAY, RAWALPINDI, PAKISTAN",
            // },
          },
          bankDetailsObject: {
            bank_name: "Bank AL Habib Limited",
            bank_title: "NINETY NINE TECHNOLOGIES (PVT) LIMITED",
            bank_no: "5546 0081 0020 33012",
            bank_routing: "",
            bank_swift_code: "BAHLPKKA",
            bank_branch_code: "5546",
            bank_iban: "PK95 BAHL 5546 0081 0020 3301",
            bank_address: "IBB, BAHRIA EXPRESSWAY, RAWALPINDI, PAKISTAN"
          }
          //         termsAndConditionsObject: {
          //           text: "All items will come with a Standard 30-Days Warranty unless specified in the applicable invoice. All items sold on this invoice are considered Pre-Owned (Used) unless otherwise noted in the sales agreement. Any DOA or damaged claim must be noted to the company in writing with 10 days upon delivery to the vendor. the company will not be responsible for any damage in the shipping unless mentioned in the sales agreement."
          //  },
        },
        tax_type: l.itemRatesType,
        // due_date_value: invoiceDetails.dueDate, // Update based on your input
        term: l.paymentTerms,
        // invoice_date_value: invoiceDetails.invoiceDate, // Update based on your input
        // expiry_date_value: invoiceDetails.dueDate, // Update based on your input
        subject: `NINETY NINE TECHNOLOGIES (PVT) LIMITED - Invoice #${l.referenceNumber}`,
        // Update as needed
        status: "Draft",
        cc: ["ayesha.nasir@99technologies.com"],
        discount: 0,
        tax: 5,
        // Update based on your inputs
        discount_type: "Percentage",
        items: s.map((H) => {
          const Y = H.quantity * H.rate, J = (l.itemRatesType === "Inclusive", 0.05), U = Y * J;
          return {
            // item_name_object: "",
            // item_id: "", // Update if you have item IDs
            name: H.name,
            quantity: H.quantity,
            description: H.description,
            price: H.rate
          };
        })
      };
      console.log("Form submitted", ee);
      const G = await B9(ee);
      console.log("Invoice saved as draft:", G), r("/invoices");
    } catch ($) {
      console.error("Error submitting form:", $), alert("Failed to submit invoice.");
    }
  };
  (0, import_react.useState)({
    id: "",
    name: "",
    days: "",
    description: ""
  });
  const N = async () => {
    try {
      const $ = await Aw(v);
      b((k) => [
        ...k,
        { id: $.id, name: $.name, days: $.days, description: $.description }
      ]), h({ name: "", days: 0, description: "" }), z(), alert("Payment term added successfully!");
    } catch ($) {
      console.error("Error adding payment term:", $), alert("Failed to add payment term.");
    }
  }, j = () => {
    r("/invoices");
  }, _ = () => C(true), z = () => C(false);
  return f.jsxs(De, { p: 3, sx: { border: "1px solid #ccc", boxShadow: 2, borderRadius: 2 }, children: [
    f.jsx(De, { mb: 2, p: 2, sx: { backgroundColor: "#fff", boxShadow: 3, borderRadius: 2 }, children: f.jsxs(De, { display: "flex", justifyContent: "space-between", alignItems: "center", mb: 2, mt: 8, children: [
      f.jsx(Fe, { variant: "h5", children: "Edit Invoice" }),
      f.jsx(lt, { color: "error", onClick: j, children: f.jsx(Id, {}) })
    ] }) }),
    f.jsx(Ct, { container: true, spacing: 2, children: f.jsxs(Ct, { item: true, xs: 12, sm: 12, children: [
      f.jsx(So, { fullWidth: true, children: f.jsx(
        Gr,
        {
          data: p,
          label: "Select Customer",
          value: p.find(($) => $.value === l.customerName),
          onChange: T,
          ph: "Select a customer"
        }
      ) }),
      f.jsxs(De, { sx: { marginLeft: 2, marginTop: 2, display: "flex", gap: 4 }, children: [
        f.jsxs(De, { children: [
          f.jsx(Fe, { variant: "subtitle1", gutterBottom: true, children: "BILLING ADDRESS" }),
          f.jsx(Fe, { variant: "body2", children: l.customerName }),
          f.jsx(Fe, { variant: "body2", children: l.billing_address_1 }),
          f.jsxs(Fe, { variant: "body2", children: [
            l.billing_city,
            ", ",
            l.billing_state,
            " ",
            l.billing_zip_code
          ] }),
          f.jsx(Fe, { variant: "body2", children: "U.S.A" })
        ] }),
        f.jsxs(De, { sx: { marginLeft: 3 }, children: [
          f.jsx(Fe, { variant: "subtitle1", gutterBottom: true, children: "SHIPPING ADDRESS" }),
          f.jsx(Fe, { variant: "body2", children: l.customerName }),
          f.jsx(Fe, { variant: "body2", children: l.shipping_address_1 }),
          f.jsxs(Fe, { variant: "body2", children: [
            l.shipping_city,
            ", ",
            l.shipping_state,
            " ",
            l.shipping_zip_code
          ] }),
          f.jsx(Fe, { variant: "body2", children: "U.S.A" })
        ] })
      ] }),
      f.jsxs(Ct, { container: true, mt: 2, children: [
        f.jsx(
          qt,
          {
            label: "Reference No.",
            name: "referenceNumber",
            value: l.referenceNumber,
            onChange: R,
            placeholder: "Enter reference number",
            fullWidth: true
          }
        ),
        f.jsx(De, { sx: { marginLeft: 2 }, children: f.jsx(
          qt,
          {
            label: "Subject",
            name: "subject",
            value: l.subject,
            onChange: R,
            fullWidth: true,
            sx: { minWidth: "1000px" }
          }
        ) })
      ] }),
      f.jsxs(Ct, { container: true, mt: 2, children: [
        f.jsx(
          qt,
          {
            label: "Invoice Date",
            type: "date",
            name: "invoiceDate",
            value: l.invoiceDate,
            onChange: R,
            InputLabelProps: { shrink: true },
            fullWidth: true
          }
        ),
        f.jsx(De, { sx: { marginLeft: 2 }, children: f.jsx(
          qt,
          {
            label: "Due Date",
            type: "date",
            name: "dueDate",
            value: l.dueDate,
            onChange: R,
            InputLabelProps: { shrink: true },
            fullWidth: true
          }
        ) }),
        f.jsx(De, { sx: { marginLeft: 2 }, children: f.jsx(
          qt,
          {
            label: "Office Email",
            name: "officeEmail",
            value: l.officeEmail,
            onChange: R,
            fullWidth: true
          }
        ) })
      ] }),
      f.jsxs(Ct, { container: true, spacing: 0, mt: 2, children: [
        f.jsxs(Ct, { children: [
          " ",
          f.jsxs(So, { fullWidth: true, children: [
            f.jsx(
              Gr,
              {
                value: g.find(($) => $.label === l.paymentTerms) || null,
                onChange: M,
                data: g,
                label: "Payment terms",
                ph: "Select payment terms"
              }
            ),
            f.jsx(vt, { variant: "outlined", onClick: _, children: "Configure Terms" })
          ] })
        ] }),
        f.jsxs(Ct, { sx: { ml: 2 }, children: [
          " ",
          f.jsx(So, { fullWidth: true, children: f.jsx(
            Gr,
            {
              value: u.find(($) => $.value === l.itemRatesType) || null,
              onChange: x,
              data: u,
              label: "Item Rates",
              ph: "Select item rates"
            }
          ) })
        ] }),
        f.jsxs(Ct, { sx: { ml: 2 }, children: [
          "   ",
          f.jsx(So, { fullWidth: true, mt: 2, children: f.jsx(
            Gr,
            {
              value: m.find(($) => $.label === l.paymentMethod) || null,
              onChange: w,
              data: m,
              label: "Payment Method",
              ph: "Select payment method"
            }
          ) }),
          f.jsx(
            jl,
            {
              open: y,
              onClose: z,
              sx: { display: "flex", alignItems: "center", justifyContent: "center" },
              children: f.jsxs(De, { p: 3, sx: { backgroundColor: "white", borderRadius: 1, width: 400 }, children: [
                f.jsx(Fe, { variant: "h6", children: "Add New Payment Term" }),
                f.jsx(
                  qt,
                  {
                    label: "Term Name",
                    name: "name",
                    value: v.name,
                    onChange: ($) => h({ ...v, name: $.target.value }),
                    fullWidth: true,
                    margin: "normal"
                  }
                ),
                f.jsx(
                  qt,
                  {
                    label: "Days",
                    name: "days",
                    type: "number",
                    value: v.days,
                    onChange: ($) => h({ ...v, days: $.target.value }),
                    fullWidth: true,
                    margin: "normal"
                  }
                ),
                f.jsx(
                  qt,
                  {
                    label: "Description",
                    name: "description",
                    value: v.description,
                    onChange: ($) => h({ ...v, description: $.target.value }),
                    fullWidth: true,
                    margin: "normal"
                  }
                ),
                f.jsxs(De, { display: "flex", justifyContent: "flex-end", mt: 2, children: [
                  f.jsx(vt, { onClick: z, children: "Cancel" }),
                  f.jsx(vt, { variant: "contained", color: "primary", onClick: N, sx: { ml: 1 }, children: "Add Term" })
                ] })
              ] })
            }
          )
        ] })
      ] })
    ] }) }),
    f.jsx(Fe, { variant: "h6", children: "Invoice Items" }),
    f.jsx(cd, { component: vn, children: f.jsxs(ld, { children: [
      f.jsx(ud, { children: f.jsxs(Pr, { children: [
        f.jsx(zt, { children: "Item Name" }),
        f.jsx(zt, { children: "Item Description" }),
        f.jsx(zt, { children: "Quantity" }),
        f.jsx(zt, { children: "Rate" }),
        f.jsx(zt, { children: "Amount" }),
        f.jsx(zt, { children: "Actions" })
      ] }) }),
      f.jsx(vs, { children: s.map(($, k) => f.jsxs(Pr, { children: [
        f.jsx(zt, { children: f.jsx(
          _n,
          {
            name: "name",
            value: $.name,
            onChange: (B) => E(k, B),
            fullWidth: true
          }
        ) }),
        f.jsx(zt, { children: f.jsx(
          _n,
          {
            name: "description",
            value: $.description,
            onChange: (B) => E(k, B),
            fullWidth: true
          }
        ) }),
        f.jsx(zt, { children: f.jsx(
          _n,
          {
            name: "quantity",
            type: "number",
            value: $.quantity,
            onChange: (B) => E(k, B),
            fullWidth: true
          }
        ) }),
        f.jsx(zt, { children: f.jsx(
          _n,
          {
            name: "rate",
            type: "number",
            value: $.rate,
            onChange: (B) => E(k, B),
            fullWidth: true
          }
        ) }),
        f.jsx(zt, { children: f.jsx(Fe, { children: ($.quantity * $.rate).toFixed(2) }) }),
        f.jsx(zt, { children: f.jsx(lt, { onClick: () => I(k), color: "secondary", children: f.jsx(Rd, {}) }) })
      ] }, k)) })
    ] }) }),
    f.jsx(vt, { startIcon: f.jsx(Bg, {}), onClick: O, sx: { mt: 2 }, children: "Add New Item" }),
    f.jsx(De, { mt: 4, display: "flex", justifyContent: "flex-end", children: f.jsxs(De, { children: [
      f.jsxs(Fe, { children: [
        "Sub Total: $",
        P()
      ] }),
      f.jsxs(Fe, { children: [
        "Tax (5%): $",
        P() * F
      ] }),
      f.jsxs(Fe, { children: [
        "Total: $",
        P() * (1 + F)
      ] })
    ] }) }),
    f.jsxs(De, { mt: 4, display: "flex", justifyContent: "flex-end", gap: 2, children: [
      f.jsx(vt, { variant: "outlined", onClick: () => j(), children: "Cancel" }),
      f.jsx(vt, { variant: "contained", color: "primary", onClick: D, children: "Save as Draft" }),
      f.jsx(vt, { variant: "contained", color: "secondary", onClick: A, children: "Save and Send" })
    ] })
  ] });
};
var TK = () => {
  const { id: e10 } = gx(), t = _s(), [n, o] = (0, import_react.useState)(null), [r, s] = (0, import_react.useState)([]), [a, l] = (0, import_react.useState)(true), [c, u] = (0, import_react.useState)(/* @__PURE__ */ new Set()), [d, p] = (0, import_react.useState)(10), [m, g] = (0, import_react.useState)(0), [b, v] = (0, import_react.useState)(0), [h, y] = (0, import_react.useState)(1), [C, x] = (0, import_react.useState)("");
  (0, import_react.useState)(0);
  const [T, w] = (0, import_react.useState)(10);
  (0, import_react.useEffect)(() => {
    (async () => {
      l(true);
      try {
        const N = { page_size: d, page: m + 1 }, j = await Ow(N);
        s(j.data.list || []), v(j.data.pagination.count || 0), y(j.data.pagination.pages || 1);
      } catch (N) {
        console.error("Error fetching invoices:", N);
      } finally {
        l(false);
      }
    })();
  }, [d, m]), (0, import_react.useEffect)(() => {
    (async () => {
      try {
        const N = await Pw(e10);
        o(N.data.data);
      } catch (N) {
        console.error("Error fetching invoice details:", N);
      } finally {
        l(false);
      }
    })();
  }, [e10]);
  const R = async (D, N) => {
    try {
      const j = await H9(D), _ = new Blob([j], { type: "text/html" }), z = URL.createObjectURL(_);
      N(z);
    } catch (j) {
      console.error("Error fetching HTML content:", j);
    }
  };
  (0, import_react.useEffect)(() => {
    R(e10, x);
  }, [e10]);
  const E = (D) => {
    console.log("test ", D);
    const N = new Set(c);
    N.has(D) ? N.delete(D) : N.add(D), u(N);
  }, O = async () => {
    if (c.size > 0) {
      const D = [...c][0];
      console.log("Deleting invoice with ID:", D);
      try {
        await Dw(D), console.log("Invoice deleted successfully"), u(/* @__PURE__ */ new Set());
      } catch (N) {
        console.error("Error deleting invoice:", N);
      }
    } else
      console.log("No invoices selected for deletion.");
  };
  if (a)
    return f.jsx(Jr, {});
  if (!n)
    return f.jsx(Fe, { variant: "h6", children: "Invoice not found." });
  const I = () => {
    t(`/invoices/edit/${e10}`);
  }, P = async () => {
    try {
      const D = await W9(e10), N = new Blob([D.data], { type: "application/pdf" }), j = window.URL.createObjectURL(N), _ = document.createElement("a");
      _.href = j, _.download = `invoice_${e10}.pdf`, document.body.appendChild(_), _.click(), _.remove(), window.URL.revokeObjectURL(j);
    } catch (D) {
      console.error("Download failed:", D);
    } finally {
    }
  }, A = () => {
    t("/invoices/send-email", { state: { invoiceId: e10 } });
  }, M = (D, N) => {
    g(N - 1);
  }, F = c.size > 0;
  return f.jsxs(De, { display: "flex", children: [
    f.jsxs(
      vn,
      {
        elevation: 1,
        sx: {
          width: "30%",
          maxWidth: "700px",
          margin: "90px auto",
          padding: "8px",
          borderRadius: "8px",
          marginRight: "30px"
          // overflow: 'auto',
        },
        children: [
          f.jsxs(Ln, { direction: "row", justifyContent: "space-between", marginBottom: 2, children: [
            f.jsx(Fe, { variant: "h6", children: "All Invoices" }),
            F ? f.jsx(
              vt,
              {
                variant: "outlined",
                startIcon: f.jsx(Rd, {}),
                onClick: O,
                children: "Delete"
              }
            ) : f.jsx(vt, { variant: "contained", onClick: () => t("/invoices/new"), children: "+ New" })
          ] }),
          f.jsxs(
            De,
            {
              sx: {
                display: "flex",
                justifyContent: "space-between",
                padding: "6px 0",
                backgroundColor: "#f0f0f0",
                borderRadius: "4px"
              },
              children: [
                f.jsx(Fe, { variant: "subtitle2", sx: { fontWeight: "bold", width: "40%" }, children: "Invoice Number | Date" }),
                f.jsx(Fe, { variant: "subtitle2", sx: { fontWeight: "bold", width: "30%" }, children: "Status" }),
                f.jsx(Fe, { variant: "subtitle2", sx: { fontWeight: "bold", width: "30%", textAlign: "right" }, children: "Amount" })
              ]
            }
          ),
          f.jsx(De, { sx: {
            maxHeight: "500px",
            // Adjust this height as needed
            overflow: "auto"
            // Allow scrolling inside this box if content overflows
          }, children: Array.isArray(r) && r.length > 0 ? r.map((D) => f.jsxs(
            De,
            {
              sx: {
                display: "flex",
                justifyContent: "space-between",
                padding: "8px 0",
                borderBottom: "1px solid #e0e0e0",
                alignItems: "center",
                cursor: "pointer",
                "&:hover": {
                  backgroundColor: "#f9f9f9"
                }
              },
              onClick: () => t(`/invoices/view/${D.id}`),
              children: [
                f.jsxs(De, { sx: { display: "flex", alignItems: "center", width: "40%" }, children: [
                  f.jsx(
                    _i,
                    {
                      checked: c.has(D.id),
                      onChange: () => E(D.id),
                      disabled: D.status === "Sent",
                      sx: { marginRight: "8px" }
                    }
                  ),
                  f.jsxs(De, { children: [
                    f.jsx(Fe, { children: D.invoice_number }),
                    f.jsx(Fe, { variant: "caption", color: "textSecondary", children: D.invoice_date })
                  ] })
                ] }),
                f.jsx(Fe, { sx: { width: "30%" }, children: D.status }),
                f.jsxs(Fe, { sx: { width: "30%", textAlign: "right", paddingRight: "8px" }, children: [
                  "$",
                  D.total_amount
                ] })
              ]
            },
            D.id
          )) : f.jsx(Fe, { children: "No invoices found." }) }),
          f.jsx("div", { children: f.jsxs("div", { style: { textAlign: "center", marginBottom: "8px" }, children: [
            "Rows Per Page: ",
            Math.min(T, b - m * T)
          ] }) }),
          f.jsx(
            gg,
            {
              count: h,
              page: m + 1,
              onChange: M,
              sx: { display: "flex", justifyContent: "center", mt: 2 }
            }
          )
        ]
      }
    ),
    f.jsx(De, { flex: 1, children: f.jsxs(vn, { elevation: 1, sx: { padding: "16px", marginTop: "80px", borderRadius: "8px", marginBottom: "16px" }, children: [
      f.jsxs(Ln, { direction: "row", justifyContent: "space-between", marginBottom: 2, children: [
        f.jsxs(Fe, { variant: "h5", children: [
          "Invoice ",
          n.invoice_number
        ] }),
        f.jsxs(Ln, { direction: "row", spacing: 2, children: [
          f.jsx(
            vt,
            {
              variant: "outlined",
              startIcon: f.jsx(f9, {}),
              onClick: P,
              children: "Download PDF"
            }
          ),
          n.status === "Draft" && f.jsx(
            vt,
            {
              variant: "outlined",
              startIcon: f.jsx(Ew, {}),
              onClick: I,
              children: "Edit Invoice"
            }
          ),
          n.status === "Draft" && f.jsx(
            vt,
            {
              variant: "outlined",
              onClick: A,
              children: "Send Invoice"
            }
          )
        ] })
      ] }),
      f.jsx(Vo, {}),
      f.jsxs(De, { sx: { height: "calc(100vh - 200px)" }, children: [
        " ",
        f.jsx(
          "iframe",
          {
            src: C,
            style: { width: "100%", height: "100%", border: "2px solid black", borderRadius: "5px" },
            title: "Invoice"
          }
        )
      ] })
    ] }) })
  ] });
};
var IK = () => {
  const e10 = Ni(), { invoiceId: t } = e10.state || {}, [n, o] = (0, import_react.useState)(""), [r, s] = (0, import_react.useState)(""), [a, l] = (0, import_react.useState)("NINETY NINE TECHNOLOGIES (PVT) LIMITED"), [c, u] = (0, import_react.useState)(null), [d, p] = (0, import_react.useState)(false), [m, g] = (0, import_react.useState)(""), [b, v] = (0, import_react.useState)(false), [h, y] = (0, import_react.useState)(""), C = _s(), x = (R) => {
    u(R.target.files[0]);
  }, T = () => {
    C(`/invoices/view/${t}`);
  }, w = async () => {
    y(""), v(true);
    const R = new FormData();
    R.append("from", "admin@btosystems.com"), R.append("to[0]", n), r && R.append("cc[0]", r), R.append("subject", a), R.append("message", m), R.append("id", t), R.append("type", "invoice"), R.append("attach_file", d ? 1 : 0), d && c && R.append("attachments[0]", c);
    try {
      const E = await z9(R);
      console.log("Email sent successfully:", E);
    } catch {
      y("Failed to send email. Please try again.");
    } finally {
      v(false);
    }
  };
  return f.jsxs(De, { sx: { padding: "16px", maxWidth: "100%", margin: "auto" }, children: [
    f.jsx(De, { sx: { padding: "16px", marginTop: "80px", maxWidth: "100%", backgroundColor: "#f0f0f0", marginBottom: "16px" }, children: f.jsx(Fe, { variant: "h6", children: "Email to" }) }),
    f.jsx(vn, { elevation: 1, sx: { padding: "16px" }, children: f.jsxs(Ln, { spacing: 2, children: [
      f.jsx(
        qt,
        {
          label: "From",
          value: "admin@btosystems.com",
          InputProps: {
            readOnly: true
          },
          fullWidth: true,
          sx: { minWidth: "1500px" }
        }
      ),
      f.jsx(
        qt,
        {
          label: "Send To",
          value: n,
          onChange: (R) => o(R.target.value),
          placeholder: "Enter recipient email",
          error: !!h,
          helperText: h && "Please enter a valid email address",
          fullWidth: true,
          sx: { minWidth: "1500px" }
        }
      ),
      f.jsx(
        qt,
        {
          label: "Cc",
          value: r,
          onChange: (R) => s(R.target.value),
          placeholder: "Enter CC email",
          fullWidth: true,
          sx: { minWidth: "1500px" }
        }
      ),
      f.jsx(
        qt,
        {
          label: "Subject",
          value: a,
          onChange: (R) => l(R.target.value),
          fullWidth: true,
          sx: { minWidth: "1500px" }
        }
      ),
      f.jsx(
        rd,
        {
          control: f.jsx(
            _i,
            {
              checked: d,
              onChange: (R) => p(R.target.checked),
              color: "primary"
            }
          ),
          label: "Attach File"
        }
      ),
      f.jsx(De, { children: f.jsx(
        "input",
        {
          type: "file",
          accept: "*",
          onChange: x,
          style: { marginTop: "16px", display: "block" }
        }
      ) }),
      h && f.jsx(Fe, { color: "error", children: h }),
      b && f.jsx(Ln, { direction: "row", justifyContent: "center", children: f.jsx(Jr, {}) }),
      !b && f.jsxs(Ln, { direction: "row", spacing: 2, justifyContent: "flex-end", children: [
        f.jsx(
          vt,
          {
            variant: "contained",
            color: "primary",
            onClick: w,
            disabled: b,
            children: "Send"
          }
        ),
        f.jsx(vt, { variant: "outlined", onClick: T, children: "Cancel" })
      ] })
    ] }) })
  ] });
};
var RK = () => f.jsxs("div", { children: [
  f.jsx(Fe, { variant: "h2", children: "This is test component" }),
  f.jsx(Cl, { to: "/", children: "go to home" })
] });
var Q0 = function() {
  return typeof Symbol == "function" && Symbol.observable || "@@observable";
}();
var of = function() {
  return Math.random().toString(36).substring(7).split("").join(".");
};
var Oi = {
  INIT: "@@redux/INIT" + of(),
  REPLACE: "@@redux/REPLACE" + of(),
  PROBE_UNKNOWN_ACTION: function() {
    return "@@redux/PROBE_UNKNOWN_ACTION" + of();
  }
};
function CI(e10) {
  if (typeof e10 != "object" || e10 === null) return false;
  for (var t = e10; Object.getPrototypeOf(t) !== null; )
    t = Object.getPrototypeOf(t);
  return Object.getPrototypeOf(e10) === t;
}
function EK(e10) {
  if (e10 === void 0) return "undefined";
  if (e10 === null) return "null";
  var t = typeof e10;
  switch (t) {
    case "boolean":
    case "string":
    case "number":
    case "symbol":
    case "function":
      return t;
  }
  if (Array.isArray(e10)) return "array";
  if (AK(e10)) return "date";
  if (PK(e10)) return "error";
  var n = OK(e10);
  switch (n) {
    case "Symbol":
    case "Promise":
    case "WeakMap":
    case "WeakSet":
    case "Map":
    case "Set":
      return n;
  }
  return t.slice(8, -1).toLowerCase().replace(/\s/g, "");
}
function OK(e10) {
  return typeof e10.constructor == "function" ? e10.constructor.name : null;
}
function PK(e10) {
  return e10 instanceof Error || typeof e10.message == "string" && e10.constructor && typeof e10.constructor.stackTraceLimit == "number";
}
function AK(e10) {
  return e10 instanceof Date ? true : typeof e10.toDateString == "function" && typeof e10.getDate == "function" && typeof e10.setDate == "function";
}
function hi(e10) {
  var t = typeof e10;
  return t = EK(e10), t;
}
function SI(e10, t, n) {
  var o;
  if (typeof t == "function" && typeof n == "function" || typeof n == "function" && typeof arguments[3] == "function")
    throw new Error(false ? Mn(0) : "It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.");
  if (typeof t == "function" && typeof n > "u" && (n = t, t = void 0), typeof n < "u") {
    if (typeof n != "function")
      throw new Error(false ? Mn(1) : "Expected the enhancer to be a function. Instead, received: '" + hi(n) + "'");
    return n(SI)(e10, t);
  }
  if (typeof e10 != "function")
    throw new Error(false ? Mn(2) : "Expected the root reducer to be a function. Instead, received: '" + hi(e10) + "'");
  var r = e10, s = t, a = [], l = a, c = false;
  function u() {
    l === a && (l = a.slice());
  }
  function d() {
    if (c)
      throw new Error(false ? Mn(3) : "You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");
    return s;
  }
  function p(v) {
    if (typeof v != "function")
      throw new Error(false ? Mn(4) : "Expected the listener to be a function. Instead, received: '" + hi(v) + "'");
    if (c)
      throw new Error(false ? Mn(5) : "You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api/store#subscribelistener for more details.");
    var h = true;
    return u(), l.push(v), function() {
      if (h) {
        if (c)
          throw new Error(false ? Mn(6) : "You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api/store#subscribelistener for more details.");
        h = false, u();
        var C = l.indexOf(v);
        l.splice(C, 1), a = null;
      }
    };
  }
  function m(v) {
    if (!CI(v))
      throw new Error(false ? Mn(7) : "Actions must be plain objects. Instead, the actual type was: '" + hi(v) + "'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.");
    if (typeof v.type > "u")
      throw new Error(false ? Mn(8) : 'Actions may not have an undefined "type" property. You may have misspelled an action type string constant.');
    if (c)
      throw new Error(false ? Mn(9) : "Reducers may not dispatch actions.");
    try {
      c = true, s = r(s, v);
    } finally {
      c = false;
    }
    for (var h = a = l, y = 0; y < h.length; y++) {
      var C = h[y];
      C();
    }
    return v;
  }
  function g(v) {
    if (typeof v != "function")
      throw new Error(false ? Mn(10) : "Expected the nextReducer to be a function. Instead, received: '" + hi(v));
    r = v, m({
      type: Oi.REPLACE
    });
  }
  function b() {
    var v, h = p;
    return v = {
      /**
       * The minimal observable subscription method.
       * @param {Object} observer Any object that can be used as an observer.
       * The observer object should have a `next` method.
       * @returns {subscription} An object with an `unsubscribe` method that can
       * be used to unsubscribe the observable from the store, and prevent further
       * emission of values from the observable.
       */
      subscribe: function(C) {
        if (typeof C != "object" || C === null)
          throw new Error(false ? Mn(11) : "Expected the observer to be an object. Instead, received: '" + hi(C) + "'");
        function x() {
          C.next && C.next(d());
        }
        x();
        var T = h(x);
        return {
          unsubscribe: T
        };
      }
    }, v[Q0] = function() {
      return this;
    }, v;
  }
  return m({
    type: Oi.INIT
  }), o = {
    dispatch: m,
    subscribe: p,
    getState: d,
    replaceReducer: g
  }, o[Q0] = b, o;
}
function ex(e10) {
  typeof console < "u" && typeof console.error == "function" && console.error(e10);
  try {
    throw new Error(e10);
  } catch {
  }
}
function jK(e10, t, n, o) {
  var r = Object.keys(t), s = n && n.type === Oi.INIT ? "preloadedState argument passed to createStore" : "previous state received by the reducer";
  if (r.length === 0)
    return "Store does not have a valid reducer. Make sure the argument passed to combineReducers is an object whose values are reducers.";
  if (!CI(e10))
    return "The " + s + ' has unexpected type of "' + hi(e10) + '". Expected argument to be an object with the following ' + ('keys: "' + r.join('", "') + '"');
  var a = Object.keys(e10).filter(function(l) {
    return !t.hasOwnProperty(l) && !o[l];
  });
  if (a.forEach(function(l) {
    o[l] = true;
  }), !(n && n.type === Oi.REPLACE) && a.length > 0)
    return "Unexpected " + (a.length > 1 ? "keys" : "key") + " " + ('"' + a.join('", "') + '" found in ' + s + ". ") + "Expected to find one of the known reducer keys instead: " + ('"' + r.join('", "') + '". Unexpected keys will be ignored.');
}
function DK(e10) {
  Object.keys(e10).forEach(function(t) {
    var n = e10[t], o = n(void 0, {
      type: Oi.INIT
    });
    if (typeof o > "u")
      throw new Error(false ? Mn(12) : 'The slice reducer for key "' + t + `" returned undefined during initialization. If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined. If you don't want to set a value for this reducer, you can use null instead of undefined.`);
    if (typeof n(void 0, {
      type: Oi.PROBE_UNKNOWN_ACTION()
    }) > "u")
      throw new Error(false ? Mn(13) : 'The slice reducer for key "' + t + '" returned undefined when probed with a random type. ' + ("Don't try to handle '" + Oi.INIT + `' or other actions in "redux/*" `) + "namespace. They are considered private. Instead, you must return the current state for any unknown actions, unless it is undefined, in which case you must return the initial state, regardless of the action type. The initial state may not be undefined, but can be null.");
  });
}
function MK(e10) {
  for (var t = Object.keys(e10), n = {}, o = 0; o < t.length; o++) {
    var r = t[o];
    typeof e10[r] > "u" && ex('No reducer provided for key "' + r + '"'), typeof e10[r] == "function" && (n[r] = e10[r]);
  }
  var s = Object.keys(n), a;
  a = {};
  var l;
  try {
    DK(n);
  } catch (c) {
    l = c;
  }
  return function(u, d) {
    if (u === void 0 && (u = {}), l)
      throw l;
    if (true) {
      var p = jK(u, n, d, a);
      p && ex(p);
    }
    for (var m = false, g = {}, b = 0; b < s.length; b++) {
      var v = s[b], h = n[v], y = u[v], C = h(y, d);
      if (typeof C > "u") {
        var x = d && d.type;
        throw new Error(false ? Mn(14) : "When called with an action of type " + (x ? '"' + String(x) + '"' : "(unknown type)") + ', the slice reducer for key "' + v + '" returned undefined. To ignore an action, you must explicitly return the previous state. If you want this reducer to hold no value, you can return null instead of undefined.');
      }
      g[v] = C, m = m || C !== y;
    }
    return m = m || s.length !== Object.keys(u).length, m ? g : u;
  };
}
function kK() {
  for (var e10 = arguments.length, t = new Array(e10), n = 0; n < e10; n++)
    t[n] = arguments[n];
  return t.length === 0 ? function(o) {
    return o;
  } : t.length === 1 ? t[0] : t.reduce(function(o, r) {
    return function() {
      return o(r.apply(void 0, arguments));
    };
  });
}
function FK() {
  for (var e10 = arguments.length, t = new Array(e10), n = 0; n < e10; n++)
    t[n] = arguments[n];
  return function(o) {
    return function() {
      var r = o.apply(void 0, arguments), s = function() {
        throw new Error(false ? Mn(15) : "Dispatching while constructing your middleware is not allowed. Other middleware would not be applied to this dispatch.");
      }, a = {
        getState: r.getState,
        dispatch: function() {
          return s.apply(void 0, arguments);
        }
      }, l = t.map(function(c) {
        return c(a);
      });
      return s = kK.apply(void 0, l)(r.dispatch), et(et({}, r), {}, {
        dispatch: s
      });
    };
  };
}
function wI(e10) {
  var t = function(o) {
    var r = o.dispatch, s = o.getState;
    return function(a) {
      return function(l) {
        return typeof l == "function" ? l(r, s, e10) : a(l);
      };
    };
  };
  return t;
}
var TI = wI();
TI.withExtraArgument = wI;
var NK = {
  loading: false,
  isAuthenticated: true,
  // Set your initial authentication state
  user: null
};
var $K = (e10 = NK, t) => {
  switch (t.type) {
    case ZT:
      return { ...e10, loading: true };
    case qT:
      return { ...e10, isAuthenticated: false, user: null };
    default:
      return e10;
  }
};
var VK = MK({
  auth: $K
  //   company: companyReducer,
  // Add other reducers as necessary
});
var _K = SI(VK, FK(TI));
var GK = () => {
  const e10 = Uu({
    palette: {
      primary: {
        main: "#2C8CFB"
      },
      secondary: {
        main: "#dc004e"
      },
      success: {
        main: "#4BB543"
      }
    },
    components: {
      MuiButton: {
        styleOverrides: {
          root: ({ ownerState: t }) => ({
            borderRadius: "10px",
            fontSize: "12px",
            fontWeight: 400,
            lineHeight: "14px",
            height: "40px",
            ...t.variant === "contained" && {},
            ...t.variant === "outlined" && {
              color: "#2C8CFB",
              borderRadius: "10px",
              border: "1px solid #2C8CFB"
            }
          })
        }
      },
      MuiTextField: {
        defaultProps: {
          variant: "outlined"
        },
        styleOverrides: {
          root: {
            "& .MuiInputBase-root": {
              borderRadius: "10px",
              height: "45px",
              padding: "0 10px",
              minWidth: "330px"
            },
            "& .MuiOutlinedInput-root": {
              "& fieldset": {
                borderColor: "#D0D0D0"
              },
              "&:hover fieldset": {
                borderColor: "#D0D0D0"
              },
              "&.Mui-focused fieldset": {
                borderColor: "#2684FF"
              }
            }
          }
        }
      }
    },
    typography: {
      fontFamily: "Nunito, Arial, sans-serif",
      label: {
        fontSize: "14px",
        fontWeight: 700,
        lineHeight: "21px",
        color: "#121212"
      },
      formSection: {
        fontSize: "20px",
        fontWeight: 800,
        lineHeight: "27px",
        color: "#272525"
      },
      error: {
        fontSize: "12px",
        fontWeight: 600,
        color: "#d32f2f"
      },
      success: {
        fontSize: "12px",
        fontWeight: 600,
        color: "#10A142"
      }
    }
  });
  return f.jsx(f.Fragment, { children: f.jsx(nR, { store: _K, children: f.jsx(cj, { theme: e10, children: f.jsxs(cE, { children: [
    f.jsx(BZ, {}),
    f.jsxs(YR, { children: [
      f.jsx(Lr, { path: "/", element: f.jsx(n9, {}) }),
      f.jsx(Lr, { path: "/invoices", element: f.jsx($Z, {}) }),
      f.jsx(Lr, { path: "/invoices/new", element: f.jsx(SK, {}) }),
      f.jsx(Lr, { path: "/invoices/edit/:id", element: f.jsx(wK, {}) }),
      f.jsx(Lr, { path: "/invoices/view/:id", element: f.jsx(TK, {}) }),
      f.jsx(Lr, { path: "/invoices/send-email", element: f.jsx(IK, {}) }),
      f.jsx(Lr, { path: "/test", element: f.jsx(RK, {}) })
    ] })
  ] }) }) }) });
};
export {
  GK as FullApp,
  $Z as Invoice,
  SK as InvoiceForm,
  n9 as Login
};
/*! Bundled license information:

@ayeshanasir123/invoice-repo/dist/invoice-repo.es.js:
  (**
   * @license React
   * use-sync-external-store-shim.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

@ayeshanasir123/invoice-repo/dist/invoice-repo.es.js:
  (**
   * @license React
   * use-sync-external-store-shim.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

@ayeshanasir123/invoice-repo/dist/invoice-repo.es.js:
  (**
   * @license React
   * use-sync-external-store-shim/with-selector.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

@ayeshanasir123/invoice-repo/dist/invoice-repo.es.js:
  (**
   * @license React
   * use-sync-external-store-shim/with-selector.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

@ayeshanasir123/invoice-repo/dist/invoice-repo.es.js:
  (** @license React v16.13.1
   * react-is.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

@ayeshanasir123/invoice-repo/dist/invoice-repo.es.js:
  (** @license React v16.13.1
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

@ayeshanasir123/invoice-repo/dist/invoice-repo.es.js:
  (**
   * @license React
   * react-is.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

@ayeshanasir123/invoice-repo/dist/invoice-repo.es.js:
  (**
   * @license React
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)
  (**
   * @remix-run/router v1.19.2
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)
  (**
   * React Router v6.26.2
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)
  (**
   * React Router DOM v6.26.2
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@ayeshanasir123/invoice-repo/dist/invoice-repo.es.js:
  (*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  *)

@ayeshanasir123/invoice-repo/dist/invoice-repo.es.js:
  (**
   * @license React
   * react-jsx-runtime.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

@ayeshanasir123/invoice-repo/dist/invoice-repo.es.js:
  (**
   * @license React
   * react-jsx-runtime.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)
  (**
   * @mui/styled-engine v6.1.1
   *
   * @license MIT
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

@ayeshanasir123/invoice-repo/dist/invoice-repo.es.js:
  (**
   * @license React
   * react-is.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

@ayeshanasir123/invoice-repo/dist/invoice-repo.es.js:
  (**
   * @license React
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

@ayeshanasir123/invoice-repo/dist/invoice-repo.es.js:
  (**
   * @license React
   * react-is.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

@ayeshanasir123/invoice-repo/dist/invoice-repo.es.js:
  (**
   * @license React
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)
  (**
     * table-core
     *
     * Copyright (c) TanStack
     *
     * This source code is licensed under the MIT license found in the
     * LICENSE.md file in the root directory of this source tree.
     *
     * @license MIT
     *)
  (**
     * react-table
     *
     * Copyright (c) TanStack
     *
     * This source code is licensed under the MIT license found in the
     * LICENSE.md file in the root directory of this source tree.
     *
     * @license MIT
     *)
  (**
     * match-sorter-utils
     *
     * Copyright (c) TanStack
     *
     * This source code is licensed under the MIT license found in the
     * LICENSE.md file in the root directory of this source tree.
     *
     * @license MIT
     *)
  (**
   * @name match-sorter
   * @license MIT license.
   * @copyright (c) 2099 Kent C. Dodds
   * @author Kent C. Dodds <me@kentcdodds.com> (https://kentcdodds.com)
   *)
*/
//# sourceMappingURL=@ayeshanasir123_invoice-repo.js.map
