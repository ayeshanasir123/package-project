var fw = Object.defineProperty;
var mw = (e, t, n) => t in e ? fw(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[t] = n;
var ys = (e, t, n) => mw(e, typeof t != "symbol" ? t + "" : t, n);
import * as S from "react";
import Tn, { forwardRef as Dv, useContext as Mv, Children as gw, isValidElement as Ml, cloneElement as jl, memo as Up, useId as hw, useMemo as St, useRef as $t, useState as Re, useEffect as Xt, useReducer as bw, useCallback as gn, Fragment as Yl, useLayoutEffect as jv, createContext as vw, Component as yw } from "react";
import * as xw from "react-dom";
import Fs, { unstable_batchedUpdates as Cw, flushSync as Sw, createPortal as ww } from "react-dom";
function Tw(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var Hu = Fs;
process.env.NODE_ENV === "production" ? (Hu.createRoot, Hu.hydrateRoot) : Hu.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
var Gd = { exports: {} }, Gu = {};
/**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Um;
function Iw() {
  if (Um) return Gu;
  Um = 1;
  var e = Tn;
  function t(p, m) {
    return p === m && (p !== 0 || 1 / p === 1 / m) || p !== p && m !== m;
  }
  var n = typeof Object.is == "function" ? Object.is : t, o = e.useState, i = e.useEffect, s = e.useLayoutEffect, a = e.useDebugValue;
  function l(p, m) {
    var g = m(), h = o({ inst: { value: g, getSnapshot: m } }), v = h[0].inst, b = h[1];
    return s(function() {
      v.value = g, v.getSnapshot = m, c(v) && b({ inst: v });
    }, [p, g, m]), i(function() {
      return c(v) && b({ inst: v }), p(function() {
        c(v) && b({ inst: v });
      });
    }, [p]), a(g), g;
  }
  function c(p) {
    var m = p.getSnapshot;
    p = p.value;
    try {
      var g = m();
      return !n(p, g);
    } catch {
      return !0;
    }
  }
  function u(p, m) {
    return m();
  }
  var d = typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u" ? u : l;
  return Gu.useSyncExternalStore = e.useSyncExternalStore !== void 0 ? e.useSyncExternalStore : d, Gu;
}
var Uu = {};
/**
 * @license React
 * use-sync-external-store-shim.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Xm;
function Rw() {
  return Xm || (Xm = 1, process.env.NODE_ENV !== "production" && function() {
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var e = Tn, t = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function n(x) {
      {
        for (var T = arguments.length, w = new Array(T > 1 ? T - 1 : 0), R = 1; R < T; R++)
          w[R - 1] = arguments[R];
        o("error", x, w);
      }
    }
    function o(x, T, w) {
      {
        var R = t.ReactDebugCurrentFrame, E = R.getStackAddendum();
        E !== "" && (T += "%s", w = w.concat([E]));
        var O = w.map(function(I) {
          return String(I);
        });
        O.unshift("Warning: " + T), Function.prototype.apply.call(console[x], console, O);
      }
    }
    function i(x, T) {
      return x === T && (x !== 0 || 1 / x === 1 / T) || x !== x && T !== T;
    }
    var s = typeof Object.is == "function" ? Object.is : i, a = e.useState, l = e.useEffect, c = e.useLayoutEffect, u = e.useDebugValue, d = !1, p = !1;
    function m(x, T, w) {
      d || e.startTransition !== void 0 && (d = !0, n("You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release."));
      var R = T();
      if (!p) {
        var E = T();
        s(R, E) || (n("The result of getSnapshot should be cached to avoid an infinite loop"), p = !0);
      }
      var O = a({
        inst: {
          value: R,
          getSnapshot: T
        }
      }), I = O[0].inst, P = O[1];
      return c(function() {
        I.value = R, I.getSnapshot = T, g(I) && P({
          inst: I
        });
      }, [x, R, T]), l(function() {
        g(I) && P({
          inst: I
        });
        var A = function() {
          g(I) && P({
            inst: I
          });
        };
        return x(A);
      }, [x]), u(R), R;
    }
    function g(x) {
      var T = x.getSnapshot, w = x.value;
      try {
        var R = T();
        return !s(w, R);
      } catch {
        return !0;
      }
    }
    function h(x, T, w) {
      return T();
    }
    var v = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u", b = !v, y = b ? h : m, C = e.useSyncExternalStore !== void 0 ? e.useSyncExternalStore : y;
    Uu.useSyncExternalStore = C, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
  }()), Uu;
}
process.env.NODE_ENV === "production" ? Gd.exports = Iw() : Gd.exports = Rw();
var kv = Gd.exports, Xu = {};
/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Ym;
function Ow() {
  if (Ym) return Xu;
  Ym = 1;
  var e = Tn, t = kv;
  function n(u, d) {
    return u === d && (u !== 0 || 1 / u === 1 / d) || u !== u && d !== d;
  }
  var o = typeof Object.is == "function" ? Object.is : n, i = t.useSyncExternalStore, s = e.useRef, a = e.useEffect, l = e.useMemo, c = e.useDebugValue;
  return Xu.useSyncExternalStoreWithSelector = function(u, d, p, m, g) {
    var h = s(null);
    if (h.current === null) {
      var v = { hasValue: !1, value: null };
      h.current = v;
    } else v = h.current;
    h = l(function() {
      function y(R) {
        if (!C) {
          if (C = !0, x = R, R = m(R), g !== void 0 && v.hasValue) {
            var E = v.value;
            if (g(E, R)) return T = E;
          }
          return T = R;
        }
        if (E = T, o(x, R)) return E;
        var O = m(R);
        return g !== void 0 && g(E, O) ? E : (x = R, T = O);
      }
      var C = !1, x, T, w = p === void 0 ? null : p;
      return [function() {
        return y(d());
      }, w === null ? void 0 : function() {
        return y(w());
      }];
    }, [d, p, m, g]);
    var b = i(u, h[0], h[1]);
    return a(function() {
      v.hasValue = !0, v.value = b;
    }, [b]), c(b), b;
  }, Xu;
}
var Yu = {};
/**
 * @license React
 * use-sync-external-store-shim/with-selector.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Zm;
function Ew() {
  return Zm || (Zm = 1, process.env.NODE_ENV !== "production" && function() {
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var e = Tn, t = kv;
    function n(d, p) {
      return d === p && (d !== 0 || 1 / d === 1 / p) || d !== d && p !== p;
    }
    var o = typeof Object.is == "function" ? Object.is : n, i = t.useSyncExternalStore, s = e.useRef, a = e.useEffect, l = e.useMemo, c = e.useDebugValue;
    function u(d, p, m, g, h) {
      var v = s(null), b;
      v.current === null ? (b = {
        hasValue: !1,
        value: null
      }, v.current = b) : b = v.current;
      var y = l(function() {
        var w = !1, R, E, O = function(D) {
          if (!w) {
            w = !0, R = D;
            var k = g(D);
            if (h !== void 0 && b.hasValue) {
              var M = b.value;
              if (h(M, k))
                return E = M, M;
            }
            return E = k, k;
          }
          var F = R, N = E;
          if (o(F, D))
            return N;
          var W = g(D);
          return h !== void 0 && h(N, W) ? N : (R = D, E = W, W);
        }, I = m === void 0 ? null : m, P = function() {
          return O(p());
        }, A = I === null ? void 0 : function() {
          return O(I());
        };
        return [P, A];
      }, [p, m, g, h]), C = y[0], x = y[1], T = i(d, C, x);
      return a(function() {
        b.hasValue = !0, b.value = T;
      }, [T]), c(T), T;
    }
    Yu.useSyncExternalStoreWithSelector = u, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
  }()), Yu;
}
process.env.NODE_ENV === "production" ? Ow() : Ew();
function Pw(e) {
  e();
}
let Fv = Pw;
const Aw = (e) => Fv = e, Dw = () => Fv, qm = Symbol.for("react-redux-context"), Jm = typeof globalThis < "u" ? globalThis : (
  /* fall back to a per-module scope (pre-8.1 behaviour) if `globalThis` is not available */
  {}
);
function Mw() {
  var e;
  if (!S.createContext) return {};
  const t = (e = Jm[qm]) != null ? e : Jm[qm] = /* @__PURE__ */ new Map();
  let n = t.get(S.createContext);
  return n || (n = S.createContext(null), process.env.NODE_ENV !== "production" && (n.displayName = "ReactRedux"), t.set(S.createContext, n)), n;
}
const jw = /* @__PURE__ */ Mw();
function V() {
  return V = Object.assign ? Object.assign.bind() : function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var o in n) ({}).hasOwnProperty.call(n, o) && (e[o] = n[o]);
    }
    return e;
  }, V.apply(null, arguments);
}
function Xe(e, t) {
  if (e == null) return {};
  var n = {};
  for (var o in e) if ({}.hasOwnProperty.call(e, o)) {
    if (t.includes(o)) continue;
    n[o] = e[o];
  }
  return n;
}
var Ud = { exports: {} }, At = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Km;
function kw() {
  if (Km) return At;
  Km = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, o = e ? Symbol.for("react.fragment") : 60107, i = e ? Symbol.for("react.strict_mode") : 60108, s = e ? Symbol.for("react.profiler") : 60114, a = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, d = e ? Symbol.for("react.forward_ref") : 60112, p = e ? Symbol.for("react.suspense") : 60113, m = e ? Symbol.for("react.suspense_list") : 60120, g = e ? Symbol.for("react.memo") : 60115, h = e ? Symbol.for("react.lazy") : 60116, v = e ? Symbol.for("react.block") : 60121, b = e ? Symbol.for("react.fundamental") : 60117, y = e ? Symbol.for("react.responder") : 60118, C = e ? Symbol.for("react.scope") : 60119;
  function x(w) {
    if (typeof w == "object" && w !== null) {
      var R = w.$$typeof;
      switch (R) {
        case t:
          switch (w = w.type, w) {
            case c:
            case u:
            case o:
            case s:
            case i:
            case p:
              return w;
            default:
              switch (w = w && w.$$typeof, w) {
                case l:
                case d:
                case h:
                case g:
                case a:
                  return w;
                default:
                  return R;
              }
          }
        case n:
          return R;
      }
    }
  }
  function T(w) {
    return x(w) === u;
  }
  return At.AsyncMode = c, At.ConcurrentMode = u, At.ContextConsumer = l, At.ContextProvider = a, At.Element = t, At.ForwardRef = d, At.Fragment = o, At.Lazy = h, At.Memo = g, At.Portal = n, At.Profiler = s, At.StrictMode = i, At.Suspense = p, At.isAsyncMode = function(w) {
    return T(w) || x(w) === c;
  }, At.isConcurrentMode = T, At.isContextConsumer = function(w) {
    return x(w) === l;
  }, At.isContextProvider = function(w) {
    return x(w) === a;
  }, At.isElement = function(w) {
    return typeof w == "object" && w !== null && w.$$typeof === t;
  }, At.isForwardRef = function(w) {
    return x(w) === d;
  }, At.isFragment = function(w) {
    return x(w) === o;
  }, At.isLazy = function(w) {
    return x(w) === h;
  }, At.isMemo = function(w) {
    return x(w) === g;
  }, At.isPortal = function(w) {
    return x(w) === n;
  }, At.isProfiler = function(w) {
    return x(w) === s;
  }, At.isStrictMode = function(w) {
    return x(w) === i;
  }, At.isSuspense = function(w) {
    return x(w) === p;
  }, At.isValidElementType = function(w) {
    return typeof w == "string" || typeof w == "function" || w === o || w === u || w === s || w === i || w === p || w === m || typeof w == "object" && w !== null && (w.$$typeof === h || w.$$typeof === g || w.$$typeof === a || w.$$typeof === l || w.$$typeof === d || w.$$typeof === b || w.$$typeof === y || w.$$typeof === C || w.$$typeof === v);
  }, At.typeOf = x, At;
}
var Dt = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Qm;
function Fw() {
  return Qm || (Qm = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, o = e ? Symbol.for("react.fragment") : 60107, i = e ? Symbol.for("react.strict_mode") : 60108, s = e ? Symbol.for("react.profiler") : 60114, a = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, u = e ? Symbol.for("react.concurrent_mode") : 60111, d = e ? Symbol.for("react.forward_ref") : 60112, p = e ? Symbol.for("react.suspense") : 60113, m = e ? Symbol.for("react.suspense_list") : 60120, g = e ? Symbol.for("react.memo") : 60115, h = e ? Symbol.for("react.lazy") : 60116, v = e ? Symbol.for("react.block") : 60121, b = e ? Symbol.for("react.fundamental") : 60117, y = e ? Symbol.for("react.responder") : 60118, C = e ? Symbol.for("react.scope") : 60119;
    function x(z) {
      return typeof z == "string" || typeof z == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      z === o || z === u || z === s || z === i || z === p || z === m || typeof z == "object" && z !== null && (z.$$typeof === h || z.$$typeof === g || z.$$typeof === a || z.$$typeof === l || z.$$typeof === d || z.$$typeof === b || z.$$typeof === y || z.$$typeof === C || z.$$typeof === v);
    }
    function T(z) {
      if (typeof z == "object" && z !== null) {
        var q = z.$$typeof;
        switch (q) {
          case t:
            var _ = z.type;
            switch (_) {
              case c:
              case u:
              case o:
              case s:
              case i:
              case p:
                return _;
              default:
                var oe = _ && _.$$typeof;
                switch (oe) {
                  case l:
                  case d:
                  case h:
                  case g:
                  case a:
                    return oe;
                  default:
                    return q;
                }
            }
          case n:
            return q;
        }
      }
    }
    var w = c, R = u, E = l, O = a, I = t, P = d, A = o, D = h, k = g, M = n, F = s, N = i, W = p, H = !1;
    function B(z) {
      return H || (H = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), j(z) || T(z) === c;
    }
    function j(z) {
      return T(z) === u;
    }
    function L(z) {
      return T(z) === l;
    }
    function ee(z) {
      return T(z) === a;
    }
    function Y(z) {
      return typeof z == "object" && z !== null && z.$$typeof === t;
    }
    function $(z) {
      return T(z) === d;
    }
    function U(z) {
      return T(z) === o;
    }
    function X(z) {
      return T(z) === h;
    }
    function Z(z) {
      return T(z) === g;
    }
    function G(z) {
      return T(z) === n;
    }
    function K(z) {
      return T(z) === s;
    }
    function re(z) {
      return T(z) === i;
    }
    function ne(z) {
      return T(z) === p;
    }
    Dt.AsyncMode = w, Dt.ConcurrentMode = R, Dt.ContextConsumer = E, Dt.ContextProvider = O, Dt.Element = I, Dt.ForwardRef = P, Dt.Fragment = A, Dt.Lazy = D, Dt.Memo = k, Dt.Portal = M, Dt.Profiler = F, Dt.StrictMode = N, Dt.Suspense = W, Dt.isAsyncMode = B, Dt.isConcurrentMode = j, Dt.isContextConsumer = L, Dt.isContextProvider = ee, Dt.isElement = Y, Dt.isForwardRef = $, Dt.isFragment = U, Dt.isLazy = X, Dt.isMemo = Z, Dt.isPortal = G, Dt.isProfiler = K, Dt.isStrictMode = re, Dt.isSuspense = ne, Dt.isValidElementType = x, Dt.typeOf = T;
  }()), Dt;
}
process.env.NODE_ENV === "production" ? Ud.exports = kw() : Ud.exports = Fw();
var Xp = Ud.exports, Nv = Xp, Nw = {
  $$typeof: !0,
  render: !0,
  defaultProps: !0,
  displayName: !0,
  propTypes: !0
}, Vw = {
  $$typeof: !0,
  compare: !0,
  defaultProps: !0,
  displayName: !0,
  propTypes: !0,
  type: !0
}, Vv = {};
Vv[Nv.ForwardRef] = Nw;
Vv[Nv.Memo] = Vw;
var Mt = {};
/**
 * @license React
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var eg;
function $w() {
  if (eg) return Mt;
  eg = 1;
  var e = Symbol.for("react.element"), t = Symbol.for("react.portal"), n = Symbol.for("react.fragment"), o = Symbol.for("react.strict_mode"), i = Symbol.for("react.profiler"), s = Symbol.for("react.provider"), a = Symbol.for("react.context"), l = Symbol.for("react.server_context"), c = Symbol.for("react.forward_ref"), u = Symbol.for("react.suspense"), d = Symbol.for("react.suspense_list"), p = Symbol.for("react.memo"), m = Symbol.for("react.lazy"), g = Symbol.for("react.offscreen"), h;
  h = Symbol.for("react.module.reference");
  function v(b) {
    if (typeof b == "object" && b !== null) {
      var y = b.$$typeof;
      switch (y) {
        case e:
          switch (b = b.type, b) {
            case n:
            case i:
            case o:
            case u:
            case d:
              return b;
            default:
              switch (b = b && b.$$typeof, b) {
                case l:
                case a:
                case c:
                case m:
                case p:
                case s:
                  return b;
                default:
                  return y;
              }
          }
        case t:
          return y;
      }
    }
  }
  return Mt.ContextConsumer = a, Mt.ContextProvider = s, Mt.Element = e, Mt.ForwardRef = c, Mt.Fragment = n, Mt.Lazy = m, Mt.Memo = p, Mt.Portal = t, Mt.Profiler = i, Mt.StrictMode = o, Mt.Suspense = u, Mt.SuspenseList = d, Mt.isAsyncMode = function() {
    return !1;
  }, Mt.isConcurrentMode = function() {
    return !1;
  }, Mt.isContextConsumer = function(b) {
    return v(b) === a;
  }, Mt.isContextProvider = function(b) {
    return v(b) === s;
  }, Mt.isElement = function(b) {
    return typeof b == "object" && b !== null && b.$$typeof === e;
  }, Mt.isForwardRef = function(b) {
    return v(b) === c;
  }, Mt.isFragment = function(b) {
    return v(b) === n;
  }, Mt.isLazy = function(b) {
    return v(b) === m;
  }, Mt.isMemo = function(b) {
    return v(b) === p;
  }, Mt.isPortal = function(b) {
    return v(b) === t;
  }, Mt.isProfiler = function(b) {
    return v(b) === i;
  }, Mt.isStrictMode = function(b) {
    return v(b) === o;
  }, Mt.isSuspense = function(b) {
    return v(b) === u;
  }, Mt.isSuspenseList = function(b) {
    return v(b) === d;
  }, Mt.isValidElementType = function(b) {
    return typeof b == "string" || typeof b == "function" || b === n || b === i || b === o || b === u || b === d || b === g || typeof b == "object" && b !== null && (b.$$typeof === m || b.$$typeof === p || b.$$typeof === s || b.$$typeof === a || b.$$typeof === c || b.$$typeof === h || b.getModuleId !== void 0);
  }, Mt.typeOf = v, Mt;
}
var jt = {};
/**
 * @license React
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var tg;
function Lw() {
  return tg || (tg = 1, process.env.NODE_ENV !== "production" && function() {
    var e = Symbol.for("react.element"), t = Symbol.for("react.portal"), n = Symbol.for("react.fragment"), o = Symbol.for("react.strict_mode"), i = Symbol.for("react.profiler"), s = Symbol.for("react.provider"), a = Symbol.for("react.context"), l = Symbol.for("react.server_context"), c = Symbol.for("react.forward_ref"), u = Symbol.for("react.suspense"), d = Symbol.for("react.suspense_list"), p = Symbol.for("react.memo"), m = Symbol.for("react.lazy"), g = Symbol.for("react.offscreen"), h = !1, v = !1, b = !1, y = !1, C = !1, x;
    x = Symbol.for("react.module.reference");
    function T(_) {
      return !!(typeof _ == "string" || typeof _ == "function" || _ === n || _ === i || C || _ === o || _ === u || _ === d || y || _ === g || h || v || b || typeof _ == "object" && _ !== null && (_.$$typeof === m || _.$$typeof === p || _.$$typeof === s || _.$$typeof === a || _.$$typeof === c || // This needs to include all possible module reference object
      // types supported by any Flight configuration anywhere since
      // we don't know which Flight build this will end up being used
      // with.
      _.$$typeof === x || _.getModuleId !== void 0));
    }
    function w(_) {
      if (typeof _ == "object" && _ !== null) {
        var oe = _.$$typeof;
        switch (oe) {
          case e:
            var te = _.type;
            switch (te) {
              case n:
              case i:
              case o:
              case u:
              case d:
                return te;
              default:
                var se = te && te.$$typeof;
                switch (se) {
                  case l:
                  case a:
                  case c:
                  case m:
                  case p:
                  case s:
                    return se;
                  default:
                    return oe;
                }
            }
          case t:
            return oe;
        }
      }
    }
    var R = a, E = s, O = e, I = c, P = n, A = m, D = p, k = t, M = i, F = o, N = u, W = d, H = !1, B = !1;
    function j(_) {
      return H || (H = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.")), !1;
    }
    function L(_) {
      return B || (B = !0, console.warn("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.")), !1;
    }
    function ee(_) {
      return w(_) === a;
    }
    function Y(_) {
      return w(_) === s;
    }
    function $(_) {
      return typeof _ == "object" && _ !== null && _.$$typeof === e;
    }
    function U(_) {
      return w(_) === c;
    }
    function X(_) {
      return w(_) === n;
    }
    function Z(_) {
      return w(_) === m;
    }
    function G(_) {
      return w(_) === p;
    }
    function K(_) {
      return w(_) === t;
    }
    function re(_) {
      return w(_) === i;
    }
    function ne(_) {
      return w(_) === o;
    }
    function z(_) {
      return w(_) === u;
    }
    function q(_) {
      return w(_) === d;
    }
    jt.ContextConsumer = R, jt.ContextProvider = E, jt.Element = O, jt.ForwardRef = I, jt.Fragment = P, jt.Lazy = A, jt.Memo = D, jt.Portal = k, jt.Profiler = M, jt.StrictMode = F, jt.Suspense = N, jt.SuspenseList = W, jt.isAsyncMode = j, jt.isConcurrentMode = L, jt.isContextConsumer = ee, jt.isContextProvider = Y, jt.isElement = $, jt.isForwardRef = U, jt.isFragment = X, jt.isLazy = Z, jt.isMemo = G, jt.isPortal = K, jt.isProfiler = re, jt.isStrictMode = ne, jt.isSuspense = z, jt.isSuspenseList = q, jt.isValidElementType = T, jt.typeOf = w;
  }()), jt;
}
process.env.NODE_ENV === "production" ? $w() : Lw();
function _w() {
  const e = Dw();
  let t = null, n = null;
  return {
    clear() {
      t = null, n = null;
    },
    notify() {
      e(() => {
        let o = t;
        for (; o; )
          o.callback(), o = o.next;
      });
    },
    get() {
      let o = [], i = t;
      for (; i; )
        o.push(i), i = i.next;
      return o;
    },
    subscribe(o) {
      let i = !0, s = n = {
        callback: o,
        next: null,
        prev: n
      };
      return s.prev ? s.prev.next = s : t = s, function() {
        !i || t === null || (i = !1, s.next ? s.next.prev = s.prev : n = s.prev, s.prev ? s.prev.next = s.next : t = s.next);
      };
    }
  };
}
const ng = {
  notify() {
  },
  get: () => []
};
function Bw(e, t) {
  let n, o = ng, i = 0, s = !1;
  function a(v) {
    d();
    const b = o.subscribe(v);
    let y = !1;
    return () => {
      y || (y = !0, b(), p());
    };
  }
  function l() {
    o.notify();
  }
  function c() {
    h.onStateChange && h.onStateChange();
  }
  function u() {
    return s;
  }
  function d() {
    i++, n || (n = e.subscribe(c), o = _w());
  }
  function p() {
    i--, n && i === 0 && (n(), n = void 0, o.clear(), o = ng);
  }
  function m() {
    s || (s = !0, d());
  }
  function g() {
    s && (s = !1, p());
  }
  const h = {
    addNestedSub: a,
    notifyNestedSubs: l,
    handleChangeWrapper: c,
    isSubscribed: u,
    trySubscribe: m,
    tryUnsubscribe: g,
    getListeners: () => o
  };
  return h;
}
const zw = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u", Ww = zw ? S.useLayoutEffect : S.useEffect;
function Hw({
  store: e,
  context: t,
  children: n,
  serverState: o,
  stabilityCheck: i = "once",
  noopCheck: s = "once"
}) {
  const a = S.useMemo(() => {
    const u = Bw(e);
    return {
      store: e,
      subscription: u,
      getServerState: o ? () => o : void 0,
      stabilityCheck: i,
      noopCheck: s
    };
  }, [e, o, i, s]), l = S.useMemo(() => e.getState(), [e]);
  Ww(() => {
    const {
      subscription: u
    } = a;
    return u.onStateChange = u.notifyNestedSubs, u.trySubscribe(), l !== e.getState() && u.notifyNestedSubs(), () => {
      u.tryUnsubscribe(), u.onStateChange = void 0;
    };
  }, [a, l]);
  const c = t || jw;
  return /* @__PURE__ */ S.createElement(c.Provider, {
    value: a
  }, n);
}
Aw(Cw);
/**
 * @remix-run/router v1.19.2
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function na() {
  return na = Object.assign ? Object.assign.bind() : function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var o in n)
        Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o]);
    }
    return e;
  }, na.apply(this, arguments);
}
var Ir;
(function(e) {
  e.Pop = "POP", e.Push = "PUSH", e.Replace = "REPLACE";
})(Ir || (Ir = {}));
const og = "popstate";
function Gw(e) {
  e === void 0 && (e = {});
  function t(o, i) {
    let {
      pathname: s,
      search: a,
      hash: l
    } = o.location;
    return Xd(
      "",
      {
        pathname: s,
        search: a,
        hash: l
      },
      // state defaults to `null` because `window.history.state` does
      i.state && i.state.usr || null,
      i.state && i.state.key || "default"
    );
  }
  function n(o, i) {
    return typeof i == "string" ? i : oa(i);
  }
  return Xw(t, n, null, e);
}
function mt(e, t) {
  if (e === !1 || e === null || typeof e > "u")
    throw new Error(t);
}
function Xo(e, t) {
  if (!e) {
    typeof console < "u" && console.warn(t);
    try {
      throw new Error(t);
    } catch {
    }
  }
}
function Uw() {
  return Math.random().toString(36).substr(2, 8);
}
function rg(e, t) {
  return {
    usr: e.state,
    key: e.key,
    idx: t
  };
}
function Xd(e, t, n, o) {
  return n === void 0 && (n = null), na({
    pathname: typeof e == "string" ? e : e.pathname,
    search: "",
    hash: ""
  }, typeof t == "string" ? ts(t) : t, {
    state: n,
    // TODO: This could be cleaned up.  push/replace should probably just take
    // full Locations now and avoid the need to run through this flow at all
    // But that's a pretty big refactor to the current test suite so going to
    // keep as is for the time being and just let any incoming keys take precedence
    key: t && t.key || o || Uw()
  });
}
function oa(e) {
  let {
    pathname: t = "/",
    search: n = "",
    hash: o = ""
  } = e;
  return n && n !== "?" && (t += n.charAt(0) === "?" ? n : "?" + n), o && o !== "#" && (t += o.charAt(0) === "#" ? o : "#" + o), t;
}
function ts(e) {
  let t = {};
  if (e) {
    let n = e.indexOf("#");
    n >= 0 && (t.hash = e.substr(n), e = e.substr(0, n));
    let o = e.indexOf("?");
    o >= 0 && (t.search = e.substr(o), e = e.substr(0, o)), e && (t.pathname = e);
  }
  return t;
}
function Xw(e, t, n, o) {
  o === void 0 && (o = {});
  let {
    window: i = document.defaultView,
    v5Compat: s = !1
  } = o, a = i.history, l = Ir.Pop, c = null, u = d();
  u == null && (u = 0, a.replaceState(na({}, a.state, {
    idx: u
  }), ""));
  function d() {
    return (a.state || {
      idx: null
    }).idx;
  }
  function p() {
    l = Ir.Pop;
    let b = d(), y = b == null ? null : b - u;
    u = b, c && c({
      action: l,
      location: v.location,
      delta: y
    });
  }
  function m(b, y) {
    l = Ir.Push;
    let C = Xd(v.location, b, y);
    u = d() + 1;
    let x = rg(C, u), T = v.createHref(C);
    try {
      a.pushState(x, "", T);
    } catch (w) {
      if (w instanceof DOMException && w.name === "DataCloneError")
        throw w;
      i.location.assign(T);
    }
    s && c && c({
      action: l,
      location: v.location,
      delta: 1
    });
  }
  function g(b, y) {
    l = Ir.Replace;
    let C = Xd(v.location, b, y);
    u = d();
    let x = rg(C, u), T = v.createHref(C);
    a.replaceState(x, "", T), s && c && c({
      action: l,
      location: v.location,
      delta: 0
    });
  }
  function h(b) {
    let y = i.location.origin !== "null" ? i.location.origin : i.location.href, C = typeof b == "string" ? b : oa(b);
    return C = C.replace(/ $/, "%20"), mt(y, "No window.location.(origin|href) available to create URL for href: " + C), new URL(C, y);
  }
  let v = {
    get action() {
      return l;
    },
    get location() {
      return e(i, a);
    },
    listen(b) {
      if (c)
        throw new Error("A history only accepts one active listener");
      return i.addEventListener(og, p), c = b, () => {
        i.removeEventListener(og, p), c = null;
      };
    },
    createHref(b) {
      return t(i, b);
    },
    createURL: h,
    encodeLocation(b) {
      let y = h(b);
      return {
        pathname: y.pathname,
        search: y.search,
        hash: y.hash
      };
    },
    push: m,
    replace: g,
    go(b) {
      return a.go(b);
    }
  };
  return v;
}
var ig;
(function(e) {
  e.data = "data", e.deferred = "deferred", e.redirect = "redirect", e.error = "error";
})(ig || (ig = {}));
function Yw(e, t, n) {
  return n === void 0 && (n = "/"), Zw(e, t, n, !1);
}
function Zw(e, t, n, o) {
  let i = typeof t == "string" ? ts(t) : t, s = Er(i.pathname || "/", n);
  if (s == null)
    return null;
  let a = $v(e);
  qw(a);
  let l = null;
  for (let c = 0; l == null && c < a.length; ++c) {
    let u = a1(s);
    l = i1(a[c], u, o);
  }
  return l;
}
function $v(e, t, n, o) {
  t === void 0 && (t = []), n === void 0 && (n = []), o === void 0 && (o = "");
  let i = (s, a, l) => {
    let c = {
      relativePath: l === void 0 ? s.path || "" : l,
      caseSensitive: s.caseSensitive === !0,
      childrenIndex: a,
      route: s
    };
    c.relativePath.startsWith("/") && (mt(c.relativePath.startsWith(o), 'Absolute route path "' + c.relativePath + '" nested under path ' + ('"' + o + '" is not valid. An absolute child route path ') + "must start with the combined path of all its parent routes."), c.relativePath = c.relativePath.slice(o.length));
    let u = rr([o, c.relativePath]), d = n.concat(c);
    s.children && s.children.length > 0 && (mt(
      // Our types know better, but runtime JS may not!
      // @ts-expect-error
      s.index !== !0,
      "Index routes must not have child routes. Please remove " + ('all child routes from route path "' + u + '".')
    ), $v(s.children, t, d, u)), !(s.path == null && !s.index) && t.push({
      path: u,
      score: o1(u, s.index),
      routesMeta: d
    });
  };
  return e.forEach((s, a) => {
    var l;
    if (s.path === "" || !((l = s.path) != null && l.includes("?")))
      i(s, a);
    else
      for (let c of Lv(s.path))
        i(s, a, c);
  }), t;
}
function Lv(e) {
  let t = e.split("/");
  if (t.length === 0) return [];
  let [n, ...o] = t, i = n.endsWith("?"), s = n.replace(/\?$/, "");
  if (o.length === 0)
    return i ? [s, ""] : [s];
  let a = Lv(o.join("/")), l = [];
  return l.push(...a.map((c) => c === "" ? s : [s, c].join("/"))), i && l.push(...a), l.map((c) => e.startsWith("/") && c === "" ? "/" : c);
}
function qw(e) {
  e.sort((t, n) => t.score !== n.score ? n.score - t.score : r1(t.routesMeta.map((o) => o.childrenIndex), n.routesMeta.map((o) => o.childrenIndex)));
}
const Jw = /^:[\w-]+$/, Kw = 3, Qw = 2, e1 = 1, t1 = 10, n1 = -2, sg = (e) => e === "*";
function o1(e, t) {
  let n = e.split("/"), o = n.length;
  return n.some(sg) && (o += n1), t && (o += Qw), n.filter((i) => !sg(i)).reduce((i, s) => i + (Jw.test(s) ? Kw : s === "" ? e1 : t1), o);
}
function r1(e, t) {
  return e.length === t.length && e.slice(0, -1).every((o, i) => o === t[i]) ? (
    // If two routes are siblings, we should try to match the earlier sibling
    // first. This allows people to have fine-grained control over the matching
    // behavior by simply putting routes with identical paths in the order they
    // want them tried.
    e[e.length - 1] - t[t.length - 1]
  ) : (
    // Otherwise, it doesn't really make sense to rank non-siblings by index,
    // so they sort equally.
    0
  );
}
function i1(e, t, n) {
  let {
    routesMeta: o
  } = e, i = {}, s = "/", a = [];
  for (let l = 0; l < o.length; ++l) {
    let c = o[l], u = l === o.length - 1, d = s === "/" ? t : t.slice(s.length) || "/", p = Zl({
      path: c.relativePath,
      caseSensitive: c.caseSensitive,
      end: u
    }, d), m = c.route;
    if (!p && u && n && !o[o.length - 1].route.index && (p = Zl({
      path: c.relativePath,
      caseSensitive: c.caseSensitive,
      end: !1
    }, d)), !p)
      return null;
    Object.assign(i, p.params), a.push({
      // TODO: Can this as be avoided?
      params: i,
      pathname: rr([s, p.pathname]),
      pathnameBase: d1(rr([s, p.pathnameBase])),
      route: m
    }), p.pathnameBase !== "/" && (s = rr([s, p.pathnameBase]));
  }
  return a;
}
function Zl(e, t) {
  typeof e == "string" && (e = {
    path: e,
    caseSensitive: !1,
    end: !0
  });
  let [n, o] = s1(e.path, e.caseSensitive, e.end), i = t.match(n);
  if (!i) return null;
  let s = i[0], a = s.replace(/(.)\/+$/, "$1"), l = i.slice(1);
  return {
    params: o.reduce((u, d, p) => {
      let {
        paramName: m,
        isOptional: g
      } = d;
      if (m === "*") {
        let v = l[p] || "";
        a = s.slice(0, s.length - v.length).replace(/(.)\/+$/, "$1");
      }
      const h = l[p];
      return g && !h ? u[m] = void 0 : u[m] = (h || "").replace(/%2F/g, "/"), u;
    }, {}),
    pathname: s,
    pathnameBase: a,
    pattern: e
  };
}
function s1(e, t, n) {
  t === void 0 && (t = !1), n === void 0 && (n = !0), Xo(e === "*" || !e.endsWith("*") || e.endsWith("/*"), 'Route path "' + e + '" will be treated as if it were ' + ('"' + e.replace(/\*$/, "/*") + '" because the `*` character must ') + "always follow a `/` in the pattern. To get rid of this warning, " + ('please change the route path to "' + e.replace(/\*$/, "/*") + '".'));
  let o = [], i = "^" + e.replace(/\/*\*?$/, "").replace(/^\/*/, "/").replace(/[\\.*+^${}|()[\]]/g, "\\$&").replace(/\/:([\w-]+)(\?)?/g, (a, l, c) => (o.push({
    paramName: l,
    isOptional: c != null
  }), c ? "/?([^\\/]+)?" : "/([^\\/]+)"));
  return e.endsWith("*") ? (o.push({
    paramName: "*"
  }), i += e === "*" || e === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$") : n ? i += "\\/*$" : e !== "" && e !== "/" && (i += "(?:(?=\\/|$))"), [new RegExp(i, t ? void 0 : "i"), o];
}
function a1(e) {
  try {
    return e.split("/").map((t) => decodeURIComponent(t).replace(/\//g, "%2F")).join("/");
  } catch (t) {
    return Xo(!1, 'The URL path "' + e + '" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent ' + ("encoding (" + t + ").")), e;
  }
}
function Er(e, t) {
  if (t === "/") return e;
  if (!e.toLowerCase().startsWith(t.toLowerCase()))
    return null;
  let n = t.endsWith("/") ? t.length - 1 : t.length, o = e.charAt(n);
  return o && o !== "/" ? null : e.slice(n) || "/";
}
function l1(e, t) {
  t === void 0 && (t = "/");
  let {
    pathname: n,
    search: o = "",
    hash: i = ""
  } = typeof e == "string" ? ts(e) : e;
  return {
    pathname: n ? n.startsWith("/") ? n : c1(n, t) : t,
    search: p1(o),
    hash: f1(i)
  };
}
function c1(e, t) {
  let n = t.replace(/\/+$/, "").split("/");
  return e.split("/").forEach((i) => {
    i === ".." ? n.length > 1 && n.pop() : i !== "." && n.push(i);
  }), n.length > 1 ? n.join("/") : "/";
}
function Zu(e, t, n, o) {
  return "Cannot include a '" + e + "' character in a manually specified " + ("`to." + t + "` field [" + JSON.stringify(o) + "].  Please separate it out to the ") + ("`to." + n + "` field. Alternatively you may provide the full path as ") + 'a string in <Link to="..."> and the router will parse it for you.';
}
function u1(e) {
  return e.filter((t, n) => n === 0 || t.route.path && t.route.path.length > 0);
}
function _v(e, t) {
  let n = u1(e);
  return t ? n.map((o, i) => i === n.length - 1 ? o.pathname : o.pathnameBase) : n.map((o) => o.pathnameBase);
}
function Bv(e, t, n, o) {
  o === void 0 && (o = !1);
  let i;
  typeof e == "string" ? i = ts(e) : (i = na({}, e), mt(!i.pathname || !i.pathname.includes("?"), Zu("?", "pathname", "search", i)), mt(!i.pathname || !i.pathname.includes("#"), Zu("#", "pathname", "hash", i)), mt(!i.search || !i.search.includes("#"), Zu("#", "search", "hash", i)));
  let s = e === "" || i.pathname === "", a = s ? "/" : i.pathname, l;
  if (a == null)
    l = n;
  else {
    let p = t.length - 1;
    if (!o && a.startsWith("..")) {
      let m = a.split("/");
      for (; m[0] === ".."; )
        m.shift(), p -= 1;
      i.pathname = m.join("/");
    }
    l = p >= 0 ? t[p] : "/";
  }
  let c = l1(i, l), u = a && a !== "/" && a.endsWith("/"), d = (s || a === ".") && n.endsWith("/");
  return !c.pathname.endsWith("/") && (u || d) && (c.pathname += "/"), c;
}
const rr = (e) => e.join("/").replace(/\/\/+/g, "/"), d1 = (e) => e.replace(/\/+$/, "").replace(/^\/*/, "/"), p1 = (e) => !e || e === "?" ? "" : e.startsWith("?") ? e : "?" + e, f1 = (e) => !e || e === "#" ? "" : e.startsWith("#") ? e : "#" + e;
function m1(e) {
  return e != null && typeof e.status == "number" && typeof e.statusText == "string" && typeof e.internal == "boolean" && "data" in e;
}
const zv = ["post", "put", "patch", "delete"];
new Set(zv);
const g1 = ["get", ...zv];
new Set(g1);
/**
 * React Router v6.26.2
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function ra() {
  return ra = Object.assign ? Object.assign.bind() : function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var o in n)
        Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o]);
    }
    return e;
  }, ra.apply(this, arguments);
}
const Oa = /* @__PURE__ */ S.createContext(null);
process.env.NODE_ENV !== "production" && (Oa.displayName = "DataRouter");
const Yp = /* @__PURE__ */ S.createContext(null);
process.env.NODE_ENV !== "production" && (Yp.displayName = "DataRouterState");
const h1 = /* @__PURE__ */ S.createContext(null);
process.env.NODE_ENV !== "production" && (h1.displayName = "Await");
const jo = /* @__PURE__ */ S.createContext(null);
process.env.NODE_ENV !== "production" && (jo.displayName = "Navigation");
const Ea = /* @__PURE__ */ S.createContext(null);
process.env.NODE_ENV !== "production" && (Ea.displayName = "Location");
const Jo = /* @__PURE__ */ S.createContext({
  outlet: null,
  matches: [],
  isDataRoute: !1
});
process.env.NODE_ENV !== "production" && (Jo.displayName = "Route");
const Zp = /* @__PURE__ */ S.createContext(null);
process.env.NODE_ENV !== "production" && (Zp.displayName = "RouteError");
function b1(e, t) {
  let {
    relative: n
  } = t === void 0 ? {} : t;
  Pa() || (process.env.NODE_ENV !== "production" ? mt(
    !1,
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    "useHref() may be used only in the context of a <Router> component."
  ) : mt(!1));
  let {
    basename: o,
    navigator: i
  } = S.useContext(jo), {
    hash: s,
    pathname: a,
    search: l
  } = Aa(e, {
    relative: n
  }), c = a;
  return o !== "/" && (c = a === "/" ? o : rr([o, a])), i.createHref({
    pathname: c,
    search: l,
    hash: s
  });
}
function Pa() {
  return S.useContext(Ea) != null;
}
function di() {
  return Pa() || (process.env.NODE_ENV !== "production" ? mt(
    !1,
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    "useLocation() may be used only in the context of a <Router> component."
  ) : mt(!1)), S.useContext(Ea).location;
}
const Wv = "You should call navigate() in a React.useEffect(), not when your component is first rendered.";
function Hv(e) {
  S.useContext(jo).static || S.useLayoutEffect(e);
}
function ns() {
  let {
    isDataRoute: e
  } = S.useContext(Jo);
  return e ? D1() : v1();
}
function v1() {
  Pa() || (process.env.NODE_ENV !== "production" ? mt(
    !1,
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    "useNavigate() may be used only in the context of a <Router> component."
  ) : mt(!1));
  let e = S.useContext(Oa), {
    basename: t,
    future: n,
    navigator: o
  } = S.useContext(jo), {
    matches: i
  } = S.useContext(Jo), {
    pathname: s
  } = di(), a = JSON.stringify(_v(i, n.v7_relativeSplatPath)), l = S.useRef(!1);
  return Hv(() => {
    l.current = !0;
  }), S.useCallback(function(u, d) {
    if (d === void 0 && (d = {}), process.env.NODE_ENV !== "production" && Xo(l.current, Wv), !l.current) return;
    if (typeof u == "number") {
      o.go(u);
      return;
    }
    let p = Bv(u, JSON.parse(a), s, d.relative === "path");
    e == null && t !== "/" && (p.pathname = p.pathname === "/" ? t : rr([t, p.pathname])), (d.replace ? o.replace : o.push)(p, d.state, d);
  }, [t, o, a, s, e]);
}
function Gv() {
  let {
    matches: e
  } = S.useContext(Jo), t = e[e.length - 1];
  return t ? t.params : {};
}
function Aa(e, t) {
  let {
    relative: n
  } = t === void 0 ? {} : t, {
    future: o
  } = S.useContext(jo), {
    matches: i
  } = S.useContext(Jo), {
    pathname: s
  } = di(), a = JSON.stringify(_v(i, o.v7_relativeSplatPath));
  return S.useMemo(() => Bv(e, JSON.parse(a), s, n === "path"), [e, a, s, n]);
}
function y1(e, t) {
  return x1(e, t);
}
function x1(e, t, n, o) {
  Pa() || (process.env.NODE_ENV !== "production" ? mt(
    !1,
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    "useRoutes() may be used only in the context of a <Router> component."
  ) : mt(!1));
  let {
    navigator: i
  } = S.useContext(jo), {
    matches: s
  } = S.useContext(Jo), a = s[s.length - 1], l = a ? a.params : {}, c = a ? a.pathname : "/", u = a ? a.pathnameBase : "/", d = a && a.route;
  if (process.env.NODE_ENV !== "production") {
    let C = d && d.path || "";
    Xv(c, !d || C.endsWith("*"), "You rendered descendant <Routes> (or called `useRoutes()`) at " + ('"' + c + '" (under <Route path="' + C + '">) but the ') + `parent route path has no trailing "*". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.

` + ('Please change the parent <Route path="' + C + '"> to <Route ') + ('path="' + (C === "/" ? "*" : C + "/*") + '">.'));
  }
  let p = di(), m;
  if (t) {
    var g;
    let C = typeof t == "string" ? ts(t) : t;
    u === "/" || (g = C.pathname) != null && g.startsWith(u) || (process.env.NODE_ENV !== "production" ? mt(!1, "When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, the location pathname must begin with the portion of the URL pathname that was " + ('matched by all parent routes. The current pathname base is "' + u + '" ') + ('but pathname "' + C.pathname + '" was given in the `location` prop.')) : mt(!1)), m = C;
  } else
    m = p;
  let h = m.pathname || "/", v = h;
  if (u !== "/") {
    let C = u.replace(/^\//, "").split("/");
    v = "/" + h.replace(/^\//, "").split("/").slice(C.length).join("/");
  }
  let b = Yw(e, {
    pathname: v
  });
  process.env.NODE_ENV !== "production" && (process.env.NODE_ENV !== "production" && Xo(d || b != null, 'No routes matched location "' + m.pathname + m.search + m.hash + '" '), process.env.NODE_ENV !== "production" && Xo(b == null || b[b.length - 1].route.element !== void 0 || b[b.length - 1].route.Component !== void 0 || b[b.length - 1].route.lazy !== void 0, 'Matched leaf route at location "' + m.pathname + m.search + m.hash + '" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an "empty" page.'));
  let y = I1(b && b.map((C) => Object.assign({}, C, {
    params: Object.assign({}, l, C.params),
    pathname: rr([
      u,
      // Re-encode pathnames that were decoded inside matchRoutes
      i.encodeLocation ? i.encodeLocation(C.pathname).pathname : C.pathname
    ]),
    pathnameBase: C.pathnameBase === "/" ? u : rr([
      u,
      // Re-encode pathnames that were decoded inside matchRoutes
      i.encodeLocation ? i.encodeLocation(C.pathnameBase).pathname : C.pathnameBase
    ])
  })), s, n, o);
  return t && y ? /* @__PURE__ */ S.createElement(Ea.Provider, {
    value: {
      location: ra({
        pathname: "/",
        search: "",
        hash: "",
        state: null,
        key: "default"
      }, m),
      navigationType: Ir.Pop
    }
  }, y) : y;
}
function C1() {
  let e = A1(), t = m1(e) ? e.status + " " + e.statusText : e instanceof Error ? e.message : JSON.stringify(e), n = e instanceof Error ? e.stack : null, o = "rgba(200,200,200, 0.5)", i = {
    padding: "0.5rem",
    backgroundColor: o
  }, s = {
    padding: "2px 4px",
    backgroundColor: o
  }, a = null;
  return process.env.NODE_ENV !== "production" && (console.error("Error handled by React Router default ErrorBoundary:", e), a = /* @__PURE__ */ S.createElement(S.Fragment, null, /* @__PURE__ */ S.createElement("p", null, "💿 Hey developer 👋"), /* @__PURE__ */ S.createElement("p", null, "You can provide a way better UX than this when your app throws errors by providing your own ", /* @__PURE__ */ S.createElement("code", {
    style: s
  }, "ErrorBoundary"), " or", " ", /* @__PURE__ */ S.createElement("code", {
    style: s
  }, "errorElement"), " prop on your route."))), /* @__PURE__ */ S.createElement(S.Fragment, null, /* @__PURE__ */ S.createElement("h2", null, "Unexpected Application Error!"), /* @__PURE__ */ S.createElement("h3", {
    style: {
      fontStyle: "italic"
    }
  }, t), n ? /* @__PURE__ */ S.createElement("pre", {
    style: i
  }, n) : null, a);
}
const S1 = /* @__PURE__ */ S.createElement(C1, null);
class w1 extends S.Component {
  constructor(t) {
    super(t), this.state = {
      location: t.location,
      revalidation: t.revalidation,
      error: t.error
    };
  }
  static getDerivedStateFromError(t) {
    return {
      error: t
    };
  }
  static getDerivedStateFromProps(t, n) {
    return n.location !== t.location || n.revalidation !== "idle" && t.revalidation === "idle" ? {
      error: t.error,
      location: t.location,
      revalidation: t.revalidation
    } : {
      error: t.error !== void 0 ? t.error : n.error,
      location: n.location,
      revalidation: t.revalidation || n.revalidation
    };
  }
  componentDidCatch(t, n) {
    console.error("React Router caught the following error during render", t, n);
  }
  render() {
    return this.state.error !== void 0 ? /* @__PURE__ */ S.createElement(Jo.Provider, {
      value: this.props.routeContext
    }, /* @__PURE__ */ S.createElement(Zp.Provider, {
      value: this.state.error,
      children: this.props.component
    })) : this.props.children;
  }
}
function T1(e) {
  let {
    routeContext: t,
    match: n,
    children: o
  } = e, i = S.useContext(Oa);
  return i && i.static && i.staticContext && (n.route.errorElement || n.route.ErrorBoundary) && (i.staticContext._deepestRenderedBoundaryId = n.route.id), /* @__PURE__ */ S.createElement(Jo.Provider, {
    value: t
  }, o);
}
function I1(e, t, n, o) {
  var i;
  if (t === void 0 && (t = []), n === void 0 && (n = null), o === void 0 && (o = null), e == null) {
    var s;
    if (!n)
      return null;
    if (n.errors)
      e = n.matches;
    else if ((s = o) != null && s.v7_partialHydration && t.length === 0 && !n.initialized && n.matches.length > 0)
      e = n.matches;
    else
      return null;
  }
  let a = e, l = (i = n) == null ? void 0 : i.errors;
  if (l != null) {
    let d = a.findIndex((p) => p.route.id && (l == null ? void 0 : l[p.route.id]) !== void 0);
    d >= 0 || (process.env.NODE_ENV !== "production" ? mt(!1, "Could not find a matching route for errors on route IDs: " + Object.keys(l).join(",")) : mt(!1)), a = a.slice(0, Math.min(a.length, d + 1));
  }
  let c = !1, u = -1;
  if (n && o && o.v7_partialHydration)
    for (let d = 0; d < a.length; d++) {
      let p = a[d];
      if ((p.route.HydrateFallback || p.route.hydrateFallbackElement) && (u = d), p.route.id) {
        let {
          loaderData: m,
          errors: g
        } = n, h = p.route.loader && m[p.route.id] === void 0 && (!g || g[p.route.id] === void 0);
        if (p.route.lazy || h) {
          c = !0, u >= 0 ? a = a.slice(0, u + 1) : a = [a[0]];
          break;
        }
      }
    }
  return a.reduceRight((d, p, m) => {
    let g, h = !1, v = null, b = null;
    n && (g = l && p.route.id ? l[p.route.id] : void 0, v = p.route.errorElement || S1, c && (u < 0 && m === 0 ? (Xv("route-fallback", !1, "No `HydrateFallback` element provided to render during initial hydration"), h = !0, b = null) : u === m && (h = !0, b = p.route.hydrateFallbackElement || null)));
    let y = t.concat(a.slice(0, m + 1)), C = () => {
      let x;
      return g ? x = v : h ? x = b : p.route.Component ? x = /* @__PURE__ */ S.createElement(p.route.Component, null) : p.route.element ? x = p.route.element : x = d, /* @__PURE__ */ S.createElement(T1, {
        match: p,
        routeContext: {
          outlet: d,
          matches: y,
          isDataRoute: n != null
        },
        children: x
      });
    };
    return n && (p.route.ErrorBoundary || p.route.errorElement || m === 0) ? /* @__PURE__ */ S.createElement(w1, {
      location: n.location,
      revalidation: n.revalidation,
      component: v,
      error: g,
      children: C(),
      routeContext: {
        outlet: null,
        matches: y,
        isDataRoute: !0
      }
    }) : C();
  }, null);
}
var Uv = /* @__PURE__ */ function(e) {
  return e.UseBlocker = "useBlocker", e.UseRevalidator = "useRevalidator", e.UseNavigateStable = "useNavigate", e;
}(Uv || {}), ia = /* @__PURE__ */ function(e) {
  return e.UseBlocker = "useBlocker", e.UseLoaderData = "useLoaderData", e.UseActionData = "useActionData", e.UseRouteError = "useRouteError", e.UseNavigation = "useNavigation", e.UseRouteLoaderData = "useRouteLoaderData", e.UseMatches = "useMatches", e.UseRevalidator = "useRevalidator", e.UseNavigateStable = "useNavigate", e.UseRouteId = "useRouteId", e;
}(ia || {});
function qp(e) {
  return e + " must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.";
}
function R1(e) {
  let t = S.useContext(Oa);
  return t || (process.env.NODE_ENV !== "production" ? mt(!1, qp(e)) : mt(!1)), t;
}
function O1(e) {
  let t = S.useContext(Yp);
  return t || (process.env.NODE_ENV !== "production" ? mt(!1, qp(e)) : mt(!1)), t;
}
function E1(e) {
  let t = S.useContext(Jo);
  return t || (process.env.NODE_ENV !== "production" ? mt(!1, qp(e)) : mt(!1)), t;
}
function Jp(e) {
  let t = E1(e), n = t.matches[t.matches.length - 1];
  return n.route.id || (process.env.NODE_ENV !== "production" ? mt(!1, e + ' can only be used on routes that contain a unique "id"') : mt(!1)), n.route.id;
}
function P1() {
  return Jp(ia.UseRouteId);
}
function A1() {
  var e;
  let t = S.useContext(Zp), n = O1(ia.UseRouteError), o = Jp(ia.UseRouteError);
  return t !== void 0 ? t : (e = n.errors) == null ? void 0 : e[o];
}
function D1() {
  let {
    router: e
  } = R1(Uv.UseNavigateStable), t = Jp(ia.UseNavigateStable), n = S.useRef(!1);
  return Hv(() => {
    n.current = !0;
  }), S.useCallback(function(i, s) {
    s === void 0 && (s = {}), process.env.NODE_ENV !== "production" && Xo(n.current, Wv), n.current && (typeof i == "number" ? e.navigate(i) : e.navigate(i, ra({
      fromRouteId: t
    }, s)));
  }, [e, t]);
}
const ag = {};
function Xv(e, t, n) {
  !t && !ag[e] && (ag[e] = !0, process.env.NODE_ENV !== "production" && Xo(!1, n));
}
function Hr(e) {
  process.env.NODE_ENV !== "production" ? mt(!1, "A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.") : mt(!1);
}
function M1(e) {
  let {
    basename: t = "/",
    children: n = null,
    location: o,
    navigationType: i = Ir.Pop,
    navigator: s,
    static: a = !1,
    future: l
  } = e;
  Pa() && (process.env.NODE_ENV !== "production" ? mt(!1, "You cannot render a <Router> inside another <Router>. You should never have more than one in your app.") : mt(!1));
  let c = t.replace(/^\/*/, "/"), u = S.useMemo(() => ({
    basename: c,
    navigator: s,
    static: a,
    future: ra({
      v7_relativeSplatPath: !1
    }, l)
  }), [c, l, s, a]);
  typeof o == "string" && (o = ts(o));
  let {
    pathname: d = "/",
    search: p = "",
    hash: m = "",
    state: g = null,
    key: h = "default"
  } = o, v = S.useMemo(() => {
    let b = Er(d, c);
    return b == null ? null : {
      location: {
        pathname: b,
        search: p,
        hash: m,
        state: g,
        key: h
      },
      navigationType: i
    };
  }, [c, d, p, m, g, h, i]);
  return process.env.NODE_ENV !== "production" && Xo(v != null, '<Router basename="' + c + '"> is not able to match the URL ' + ('"' + d + p + m + '" because it does not start with the ') + "basename, so the <Router> won't render anything."), v == null ? null : /* @__PURE__ */ S.createElement(jo.Provider, {
    value: u
  }, /* @__PURE__ */ S.createElement(Ea.Provider, {
    children: n,
    value: v
  }));
}
function j1(e) {
  let {
    children: t,
    location: n
  } = e;
  return y1(Yd(t), n);
}
new Promise(() => {
});
function Yd(e, t) {
  t === void 0 && (t = []);
  let n = [];
  return S.Children.forEach(e, (o, i) => {
    if (!/* @__PURE__ */ S.isValidElement(o))
      return;
    let s = [...t, i];
    if (o.type === S.Fragment) {
      n.push.apply(n, Yd(o.props.children, s));
      return;
    }
    o.type !== Hr && (process.env.NODE_ENV !== "production" ? mt(!1, "[" + (typeof o.type == "string" ? o.type : o.type.name) + "] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>") : mt(!1)), !o.props.index || !o.props.children || (process.env.NODE_ENV !== "production" ? mt(!1, "An index route cannot have child routes.") : mt(!1));
    let a = {
      id: o.props.id || s.join("-"),
      caseSensitive: o.props.caseSensitive,
      element: o.props.element,
      Component: o.props.Component,
      index: o.props.index,
      path: o.props.path,
      loader: o.props.loader,
      action: o.props.action,
      errorElement: o.props.errorElement,
      ErrorBoundary: o.props.ErrorBoundary,
      hasErrorBoundary: o.props.ErrorBoundary != null || o.props.errorElement != null,
      shouldRevalidate: o.props.shouldRevalidate,
      handle: o.props.handle,
      lazy: o.props.lazy
    };
    o.props.children && (a.children = Yd(o.props.children, s)), n.push(a);
  }), n;
}
/**
 * React Router DOM v6.26.2
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
function Wi() {
  return Wi = Object.assign ? Object.assign.bind() : function(e) {
    for (var t = 1; t < arguments.length; t++) {
      var n = arguments[t];
      for (var o in n)
        Object.prototype.hasOwnProperty.call(n, o) && (e[o] = n[o]);
    }
    return e;
  }, Wi.apply(this, arguments);
}
function Kp(e, t) {
  if (e == null) return {};
  var n = {}, o = Object.keys(e), i, s;
  for (s = 0; s < o.length; s++)
    i = o[s], !(t.indexOf(i) >= 0) && (n[i] = e[i]);
  return n;
}
const kl = "get", Fl = "application/x-www-form-urlencoded";
function Rc(e) {
  return e != null && typeof e.tagName == "string";
}
function k1(e) {
  return Rc(e) && e.tagName.toLowerCase() === "button";
}
function F1(e) {
  return Rc(e) && e.tagName.toLowerCase() === "form";
}
function N1(e) {
  return Rc(e) && e.tagName.toLowerCase() === "input";
}
function V1(e) {
  return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey);
}
function $1(e, t) {
  return e.button === 0 && // Ignore everything but left clicks
  (!t || t === "_self") && // Let browser handle "target=_blank" etc.
  !V1(e);
}
let Qa = null;
function L1() {
  if (Qa === null)
    try {
      new FormData(
        document.createElement("form"),
        // @ts-expect-error if FormData supports the submitter parameter, this will throw
        0
      ), Qa = !1;
    } catch {
      Qa = !0;
    }
  return Qa;
}
const _1 = /* @__PURE__ */ new Set(["application/x-www-form-urlencoded", "multipart/form-data", "text/plain"]);
function qu(e) {
  return e != null && !_1.has(e) ? (process.env.NODE_ENV !== "production" && Xo(!1, '"' + e + '" is not a valid `encType` for `<Form>`/`<fetcher.Form>` ' + ('and will default to "' + Fl + '"')), null) : e;
}
function B1(e, t) {
  let n, o, i, s, a;
  if (F1(e)) {
    let l = e.getAttribute("action");
    o = l ? Er(l, t) : null, n = e.getAttribute("method") || kl, i = qu(e.getAttribute("enctype")) || Fl, s = new FormData(e);
  } else if (k1(e) || N1(e) && (e.type === "submit" || e.type === "image")) {
    let l = e.form;
    if (l == null)
      throw new Error('Cannot submit a <button> or <input type="submit"> without a <form>');
    let c = e.getAttribute("formaction") || l.getAttribute("action");
    if (o = c ? Er(c, t) : null, n = e.getAttribute("formmethod") || l.getAttribute("method") || kl, i = qu(e.getAttribute("formenctype")) || qu(l.getAttribute("enctype")) || Fl, s = new FormData(l, e), !L1()) {
      let {
        name: u,
        type: d,
        value: p
      } = e;
      if (d === "image") {
        let m = u ? u + "." : "";
        s.append(m + "x", "0"), s.append(m + "y", "0");
      } else u && s.append(u, p);
    }
  } else {
    if (Rc(e))
      throw new Error('Cannot submit element that is not <form>, <button>, or <input type="submit|image">');
    n = kl, o = null, i = Fl, a = e;
  }
  return s && i === "text/plain" && (a = s, s = void 0), {
    action: o,
    method: n.toLowerCase(),
    encType: i,
    formData: s,
    body: a
  };
}
const z1 = ["onClick", "relative", "reloadDocument", "replace", "state", "target", "to", "preventScrollReset", "unstable_viewTransition"], W1 = ["aria-current", "caseSensitive", "className", "end", "style", "to", "unstable_viewTransition", "children"], H1 = ["fetcherKey", "navigate", "reloadDocument", "replace", "state", "method", "action", "onSubmit", "relative", "preventScrollReset", "unstable_viewTransition"], G1 = "6";
try {
  window.__reactRouterVersion = G1;
} catch {
}
const Yv = /* @__PURE__ */ S.createContext({
  isTransitioning: !1
});
process.env.NODE_ENV !== "production" && (Yv.displayName = "ViewTransition");
const U1 = /* @__PURE__ */ S.createContext(/* @__PURE__ */ new Map());
process.env.NODE_ENV !== "production" && (U1.displayName = "Fetchers");
const X1 = "startTransition", lg = S[X1];
function Y1(e) {
  let {
    basename: t,
    children: n,
    future: o,
    window: i
  } = e, s = S.useRef();
  s.current == null && (s.current = Gw({
    window: i,
    v5Compat: !0
  }));
  let a = s.current, [l, c] = S.useState({
    action: a.action,
    location: a.location
  }), {
    v7_startTransition: u
  } = o || {}, d = S.useCallback((p) => {
    u && lg ? lg(() => c(p)) : c(p);
  }, [c, u]);
  return S.useLayoutEffect(() => a.listen(d), [a, d]), /* @__PURE__ */ S.createElement(M1, {
    basename: t,
    children: n,
    location: l.location,
    navigationType: l.action,
    navigator: a,
    future: o
  });
}
process.env.NODE_ENV;
const Z1 = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u", q1 = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i, Zv = /* @__PURE__ */ S.forwardRef(function(t, n) {
  let {
    onClick: o,
    relative: i,
    reloadDocument: s,
    replace: a,
    state: l,
    target: c,
    to: u,
    preventScrollReset: d,
    unstable_viewTransition: p
  } = t, m = Kp(t, z1), {
    basename: g
  } = S.useContext(jo), h, v = !1;
  if (typeof u == "string" && q1.test(u) && (h = u, Z1))
    try {
      let x = new URL(window.location.href), T = u.startsWith("//") ? new URL(x.protocol + u) : new URL(u), w = Er(T.pathname, g);
      T.origin === x.origin && w != null ? u = w + T.search + T.hash : v = !0;
    } catch {
      process.env.NODE_ENV !== "production" && Xo(!1, '<Link to="' + u + '"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.');
    }
  let b = b1(u, {
    relative: i
  }), y = eT(u, {
    replace: a,
    state: l,
    target: c,
    preventScrollReset: d,
    relative: i,
    unstable_viewTransition: p
  });
  function C(x) {
    o && o(x), x.defaultPrevented || y(x);
  }
  return (
    // eslint-disable-next-line jsx-a11y/anchor-has-content
    /* @__PURE__ */ S.createElement("a", Wi({}, m, {
      href: h || b,
      onClick: v || s ? o : C,
      ref: n,
      target: c
    }))
  );
});
process.env.NODE_ENV !== "production" && (Zv.displayName = "Link");
const J1 = /* @__PURE__ */ S.forwardRef(function(t, n) {
  let {
    "aria-current": o = "page",
    caseSensitive: i = !1,
    className: s = "",
    end: a = !1,
    style: l,
    to: c,
    unstable_viewTransition: u,
    children: d
  } = t, p = Kp(t, W1), m = Aa(c, {
    relative: p.relative
  }), g = di(), h = S.useContext(Yp), {
    navigator: v,
    basename: b
  } = S.useContext(jo), y = h != null && // Conditional usage is OK here because the usage of a data router is static
  // eslint-disable-next-line react-hooks/rules-of-hooks
  sT(m) && u === !0, C = v.encodeLocation ? v.encodeLocation(m).pathname : m.pathname, x = g.pathname, T = h && h.navigation && h.navigation.location ? h.navigation.location.pathname : null;
  i || (x = x.toLowerCase(), T = T ? T.toLowerCase() : null, C = C.toLowerCase()), T && b && (T = Er(T, b) || T);
  const w = C !== "/" && C.endsWith("/") ? C.length - 1 : C.length;
  let R = x === C || !a && x.startsWith(C) && x.charAt(w) === "/", E = T != null && (T === C || !a && T.startsWith(C) && T.charAt(C.length) === "/"), O = {
    isActive: R,
    isPending: E,
    isTransitioning: y
  }, I = R ? o : void 0, P;
  typeof s == "function" ? P = s(O) : P = [s, R ? "active" : null, E ? "pending" : null, y ? "transitioning" : null].filter(Boolean).join(" ");
  let A = typeof l == "function" ? l(O) : l;
  return /* @__PURE__ */ S.createElement(Zv, Wi({}, p, {
    "aria-current": I,
    className: P,
    ref: n,
    style: A,
    to: c,
    unstable_viewTransition: u
  }), typeof d == "function" ? d(O) : d);
});
process.env.NODE_ENV !== "production" && (J1.displayName = "NavLink");
const K1 = /* @__PURE__ */ S.forwardRef((e, t) => {
  let {
    fetcherKey: n,
    navigate: o,
    reloadDocument: i,
    replace: s,
    state: a,
    method: l = kl,
    action: c,
    onSubmit: u,
    relative: d,
    preventScrollReset: p,
    unstable_viewTransition: m
  } = e, g = Kp(e, H1), h = rT(), v = iT(c, {
    relative: d
  }), b = l.toLowerCase() === "get" ? "get" : "post", y = (C) => {
    if (u && u(C), C.defaultPrevented) return;
    C.preventDefault();
    let x = C.nativeEvent.submitter, T = (x == null ? void 0 : x.getAttribute("formmethod")) || l;
    h(x || C.currentTarget, {
      fetcherKey: n,
      method: T,
      navigate: o,
      replace: s,
      state: a,
      relative: d,
      preventScrollReset: p,
      unstable_viewTransition: m
    });
  };
  return /* @__PURE__ */ S.createElement("form", Wi({
    ref: t,
    method: b,
    action: v,
    onSubmit: i ? u : y
  }, g));
});
process.env.NODE_ENV !== "production" && (K1.displayName = "Form");
process.env.NODE_ENV;
var ql;
(function(e) {
  e.UseScrollRestoration = "useScrollRestoration", e.UseSubmit = "useSubmit", e.UseSubmitFetcher = "useSubmitFetcher", e.UseFetcher = "useFetcher", e.useViewTransitionState = "useViewTransitionState";
})(ql || (ql = {}));
var cg;
(function(e) {
  e.UseFetcher = "useFetcher", e.UseFetchers = "useFetchers", e.UseScrollRestoration = "useScrollRestoration";
})(cg || (cg = {}));
function Q1(e) {
  return e + " must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.";
}
function qv(e) {
  let t = S.useContext(Oa);
  return t || (process.env.NODE_ENV !== "production" ? mt(!1, Q1(e)) : mt(!1)), t;
}
function eT(e, t) {
  let {
    target: n,
    replace: o,
    state: i,
    preventScrollReset: s,
    relative: a,
    unstable_viewTransition: l
  } = t === void 0 ? {} : t, c = ns(), u = di(), d = Aa(e, {
    relative: a
  });
  return S.useCallback((p) => {
    if ($1(p, n)) {
      p.preventDefault();
      let m = o !== void 0 ? o : oa(u) === oa(d);
      c(e, {
        replace: m,
        state: i,
        preventScrollReset: s,
        relative: a,
        unstable_viewTransition: l
      });
    }
  }, [u, c, d, o, i, n, e, s, a, l]);
}
function tT() {
  if (typeof document > "u")
    throw new Error("You are calling submit during the server render. Try calling submit within a `useEffect` or callback instead.");
}
let nT = 0, oT = () => "__" + String(++nT) + "__";
function rT() {
  let {
    router: e
  } = qv(ql.UseSubmit), {
    basename: t
  } = S.useContext(jo), n = P1();
  return S.useCallback(function(o, i) {
    i === void 0 && (i = {}), tT();
    let {
      action: s,
      method: a,
      encType: l,
      formData: c,
      body: u
    } = B1(o, t);
    if (i.navigate === !1) {
      let d = i.fetcherKey || oT();
      e.fetch(d, n, i.action || s, {
        preventScrollReset: i.preventScrollReset,
        formData: c,
        body: u,
        formMethod: i.method || a,
        formEncType: i.encType || l,
        unstable_flushSync: i.unstable_flushSync
      });
    } else
      e.navigate(i.action || s, {
        preventScrollReset: i.preventScrollReset,
        formData: c,
        body: u,
        formMethod: i.method || a,
        formEncType: i.encType || l,
        replace: i.replace,
        state: i.state,
        fromRouteId: n,
        unstable_flushSync: i.unstable_flushSync,
        unstable_viewTransition: i.unstable_viewTransition
      });
  }, [e, t, n]);
}
function iT(e, t) {
  let {
    relative: n
  } = t === void 0 ? {} : t, {
    basename: o
  } = S.useContext(jo), i = S.useContext(Jo);
  i || (process.env.NODE_ENV !== "production" ? mt(!1, "useFormAction must be used inside a RouteContext") : mt(!1));
  let [s] = i.matches.slice(-1), a = Wi({}, Aa(e || ".", {
    relative: n
  })), l = di();
  if (e == null) {
    a.search = l.search;
    let c = new URLSearchParams(a.search);
    c.has("index") && c.get("index") === "" && (c.delete("index"), a.search = c.toString() ? "?" + c.toString() : "");
  }
  return (!e || e === ".") && s.route.index && (a.search = a.search ? a.search.replace(/^\?/, "?index&") : "?index"), o !== "/" && (a.pathname = a.pathname === "/" ? o : rr([o, a.pathname])), oa(a);
}
function sT(e, t) {
  t === void 0 && (t = {});
  let n = S.useContext(Yv);
  n == null && (process.env.NODE_ENV !== "production" ? mt(!1, "`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?") : mt(!1));
  let {
    basename: o
  } = qv(ql.useViewTransitionState), i = Aa(e, {
    relative: t.relative
  });
  if (!n.isTransitioning)
    return !1;
  let s = Er(n.currentLocation.pathname, o) || n.currentLocation.pathname, a = Er(n.nextLocation.pathname, o) || n.nextLocation.pathname;
  return Zl(i.pathname, a) != null || Zl(i.pathname, s) != null;
}
function Yo(e) {
  let t = "https://mui.com/production-error/?code=" + e;
  for (let n = 1; n < arguments.length; n += 1)
    t += "&args[]=" + encodeURIComponent(arguments[n]);
  return "Minified MUI error #" + e + "; visit " + t + " for the full message.";
}
const Po = "$$material";
function Jv(e) {
  var t = /* @__PURE__ */ Object.create(null);
  return function(n) {
    return t[n] === void 0 && (t[n] = e(n)), t[n];
  };
}
var aT = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|disableRemotePlayback|download|draggable|encType|enterKeyHint|fetchpriority|fetchPriority|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/, lT = /* @__PURE__ */ Jv(
  function(e) {
    return aT.test(e) || e.charCodeAt(0) === 111 && e.charCodeAt(1) === 110 && e.charCodeAt(2) < 91;
  }
  /* Z+1 */
), cT = !1;
function uT(e) {
  if (e.sheet)
    return e.sheet;
  for (var t = 0; t < document.styleSheets.length; t++)
    if (document.styleSheets[t].ownerNode === e)
      return document.styleSheets[t];
}
function dT(e) {
  var t = document.createElement("style");
  return t.setAttribute("data-emotion", e.key), e.nonce !== void 0 && t.setAttribute("nonce", e.nonce), t.appendChild(document.createTextNode("")), t.setAttribute("data-s", ""), t;
}
var pT = /* @__PURE__ */ function() {
  function e(n) {
    var o = this;
    this._insertTag = function(i) {
      var s;
      o.tags.length === 0 ? o.insertionPoint ? s = o.insertionPoint.nextSibling : o.prepend ? s = o.container.firstChild : s = o.before : s = o.tags[o.tags.length - 1].nextSibling, o.container.insertBefore(i, s), o.tags.push(i);
    }, this.isSpeedy = n.speedy === void 0 ? !cT : n.speedy, this.tags = [], this.ctr = 0, this.nonce = n.nonce, this.key = n.key, this.container = n.container, this.prepend = n.prepend, this.insertionPoint = n.insertionPoint, this.before = null;
  }
  var t = e.prototype;
  return t.hydrate = function(o) {
    o.forEach(this._insertTag);
  }, t.insert = function(o) {
    this.ctr % (this.isSpeedy ? 65e3 : 1) === 0 && this._insertTag(dT(this));
    var i = this.tags[this.tags.length - 1];
    if (this.isSpeedy) {
      var s = uT(i);
      try {
        s.insertRule(o, s.cssRules.length);
      } catch {
      }
    } else
      i.appendChild(document.createTextNode(o));
    this.ctr++;
  }, t.flush = function() {
    this.tags.forEach(function(o) {
      var i;
      return (i = o.parentNode) == null ? void 0 : i.removeChild(o);
    }), this.tags = [], this.ctr = 0;
  }, e;
}(), En = "-ms-", Jl = "-moz-", Et = "-webkit-", Kv = "comm", Qp = "rule", ef = "decl", fT = "@import", Qv = "@keyframes", mT = "@layer", gT = Math.abs, Oc = String.fromCharCode, hT = Object.assign;
function bT(e, t) {
  return wn(e, 0) ^ 45 ? (((t << 2 ^ wn(e, 0)) << 2 ^ wn(e, 1)) << 2 ^ wn(e, 2)) << 2 ^ wn(e, 3) : 0;
}
function ey(e) {
  return e.trim();
}
function vT(e, t) {
  return (e = t.exec(e)) ? e[0] : e;
}
function Pt(e, t, n) {
  return e.replace(t, n);
}
function Zd(e, t) {
  return e.indexOf(t);
}
function wn(e, t) {
  return e.charCodeAt(t) | 0;
}
function sa(e, t, n) {
  return e.slice(t, n);
}
function Bo(e) {
  return e.length;
}
function tf(e) {
  return e.length;
}
function el(e, t) {
  return t.push(e), e;
}
function yT(e, t) {
  return e.map(t).join("");
}
var Ec = 1, Hi = 1, ty = 0, Wn = 0, un = 0, os = "";
function Pc(e, t, n, o, i, s, a) {
  return { value: e, root: t, parent: n, type: o, props: i, children: s, line: Ec, column: Hi, length: a, return: "" };
}
function xs(e, t) {
  return hT(Pc("", null, null, "", null, null, 0), e, { length: -e.length }, t);
}
function xT() {
  return un;
}
function CT() {
  return un = Wn > 0 ? wn(os, --Wn) : 0, Hi--, un === 10 && (Hi = 1, Ec--), un;
}
function Qn() {
  return un = Wn < ty ? wn(os, Wn++) : 0, Hi++, un === 10 && (Hi = 1, Ec++), un;
}
function Go() {
  return wn(os, Wn);
}
function Nl() {
  return Wn;
}
function Da(e, t) {
  return sa(os, e, t);
}
function aa(e) {
  switch (e) {
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    case 59:
    case 123:
    case 125:
      return 4;
    case 58:
      return 3;
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function ny(e) {
  return Ec = Hi = 1, ty = Bo(os = e), Wn = 0, [];
}
function oy(e) {
  return os = "", e;
}
function Vl(e) {
  return ey(Da(Wn - 1, qd(e === 91 ? e + 2 : e === 40 ? e + 1 : e)));
}
function ST(e) {
  for (; (un = Go()) && un < 33; )
    Qn();
  return aa(e) > 2 || aa(un) > 3 ? "" : " ";
}
function wT(e, t) {
  for (; --t && Qn() && !(un < 48 || un > 102 || un > 57 && un < 65 || un > 70 && un < 97); )
    ;
  return Da(e, Nl() + (t < 6 && Go() == 32 && Qn() == 32));
}
function qd(e) {
  for (; Qn(); )
    switch (un) {
      case e:
        return Wn;
      case 34:
      case 39:
        e !== 34 && e !== 39 && qd(un);
        break;
      case 40:
        e === 41 && qd(e);
        break;
      case 92:
        Qn();
        break;
    }
  return Wn;
}
function TT(e, t) {
  for (; Qn() && e + un !== 57; )
    if (e + un === 84 && Go() === 47)
      break;
  return "/*" + Da(t, Wn - 1) + "*" + Oc(e === 47 ? e : Qn());
}
function IT(e) {
  for (; !aa(Go()); )
    Qn();
  return Da(e, Wn);
}
function RT(e) {
  return oy($l("", null, null, null, [""], e = ny(e), 0, [0], e));
}
function $l(e, t, n, o, i, s, a, l, c) {
  for (var u = 0, d = 0, p = a, m = 0, g = 0, h = 0, v = 1, b = 1, y = 1, C = 0, x = "", T = i, w = s, R = o, E = x; b; )
    switch (h = C, C = Qn()) {
      case 40:
        if (h != 108 && wn(E, p - 1) == 58) {
          Zd(E += Pt(Vl(C), "&", "&\f"), "&\f") != -1 && (y = -1);
          break;
        }
      case 34:
      case 39:
      case 91:
        E += Vl(C);
        break;
      case 9:
      case 10:
      case 13:
      case 32:
        E += ST(h);
        break;
      case 92:
        E += wT(Nl() - 1, 7);
        continue;
      case 47:
        switch (Go()) {
          case 42:
          case 47:
            el(OT(TT(Qn(), Nl()), t, n), c);
            break;
          default:
            E += "/";
        }
        break;
      case 123 * v:
        l[u++] = Bo(E) * y;
      case 125 * v:
      case 59:
      case 0:
        switch (C) {
          case 0:
          case 125:
            b = 0;
          case 59 + d:
            y == -1 && (E = Pt(E, /\f/g, "")), g > 0 && Bo(E) - p && el(g > 32 ? dg(E + ";", o, n, p - 1) : dg(Pt(E, " ", "") + ";", o, n, p - 2), c);
            break;
          case 59:
            E += ";";
          default:
            if (el(R = ug(E, t, n, u, d, i, l, x, T = [], w = [], p), s), C === 123)
              if (d === 0)
                $l(E, t, R, R, T, s, p, l, w);
              else
                switch (m === 99 && wn(E, 3) === 110 ? 100 : m) {
                  case 100:
                  case 108:
                  case 109:
                  case 115:
                    $l(e, R, R, o && el(ug(e, R, R, 0, 0, i, l, x, i, T = [], p), w), i, w, p, l, o ? T : w);
                    break;
                  default:
                    $l(E, R, R, R, [""], w, 0, l, w);
                }
        }
        u = d = g = 0, v = y = 1, x = E = "", p = a;
        break;
      case 58:
        p = 1 + Bo(E), g = h;
      default:
        if (v < 1) {
          if (C == 123)
            --v;
          else if (C == 125 && v++ == 0 && CT() == 125)
            continue;
        }
        switch (E += Oc(C), C * v) {
          case 38:
            y = d > 0 ? 1 : (E += "\f", -1);
            break;
          case 44:
            l[u++] = (Bo(E) - 1) * y, y = 1;
            break;
          case 64:
            Go() === 45 && (E += Vl(Qn())), m = Go(), d = p = Bo(x = E += IT(Nl())), C++;
            break;
          case 45:
            h === 45 && Bo(E) == 2 && (v = 0);
        }
    }
  return s;
}
function ug(e, t, n, o, i, s, a, l, c, u, d) {
  for (var p = i - 1, m = i === 0 ? s : [""], g = tf(m), h = 0, v = 0, b = 0; h < o; ++h)
    for (var y = 0, C = sa(e, p + 1, p = gT(v = a[h])), x = e; y < g; ++y)
      (x = ey(v > 0 ? m[y] + " " + C : Pt(C, /&\f/g, m[y]))) && (c[b++] = x);
  return Pc(e, t, n, i === 0 ? Qp : l, c, u, d);
}
function OT(e, t, n) {
  return Pc(e, t, n, Kv, Oc(xT()), sa(e, 2, -2), 0);
}
function dg(e, t, n, o) {
  return Pc(e, t, n, ef, sa(e, 0, o), sa(e, o + 1, -1), o);
}
function Fi(e, t) {
  for (var n = "", o = tf(e), i = 0; i < o; i++)
    n += t(e[i], i, e, t) || "";
  return n;
}
function ET(e, t, n, o) {
  switch (e.type) {
    case mT:
      if (e.children.length) break;
    case fT:
    case ef:
      return e.return = e.return || e.value;
    case Kv:
      return "";
    case Qv:
      return e.return = e.value + "{" + Fi(e.children, o) + "}";
    case Qp:
      e.value = e.props.join(",");
  }
  return Bo(n = Fi(e.children, o)) ? e.return = e.value + "{" + n + "}" : "";
}
function PT(e) {
  var t = tf(e);
  return function(n, o, i, s) {
    for (var a = "", l = 0; l < t; l++)
      a += e[l](n, o, i, s) || "";
    return a;
  };
}
function AT(e) {
  return function(t) {
    t.root || (t = t.return) && e(t);
  };
}
var DT = function(t, n, o) {
  for (var i = 0, s = 0; i = s, s = Go(), i === 38 && s === 12 && (n[o] = 1), !aa(s); )
    Qn();
  return Da(t, Wn);
}, MT = function(t, n) {
  var o = -1, i = 44;
  do
    switch (aa(i)) {
      case 0:
        i === 38 && Go() === 12 && (n[o] = 1), t[o] += DT(Wn - 1, n, o);
        break;
      case 2:
        t[o] += Vl(i);
        break;
      case 4:
        if (i === 44) {
          t[++o] = Go() === 58 ? "&\f" : "", n[o] = t[o].length;
          break;
        }
      default:
        t[o] += Oc(i);
    }
  while (i = Qn());
  return t;
}, jT = function(t, n) {
  return oy(MT(ny(t), n));
}, pg = /* @__PURE__ */ new WeakMap(), kT = function(t) {
  if (!(t.type !== "rule" || !t.parent || // positive .length indicates that this rule contains pseudo
  // negative .length indicates that this rule has been already prefixed
  t.length < 1)) {
    for (var n = t.value, o = t.parent, i = t.column === o.column && t.line === o.line; o.type !== "rule"; )
      if (o = o.parent, !o) return;
    if (!(t.props.length === 1 && n.charCodeAt(0) !== 58 && !pg.get(o)) && !i) {
      pg.set(t, !0);
      for (var s = [], a = jT(n, s), l = o.props, c = 0, u = 0; c < a.length; c++)
        for (var d = 0; d < l.length; d++, u++)
          t.props[u] = s[c] ? a[c].replace(/&\f/g, l[d]) : l[d] + " " + a[c];
    }
  }
}, FT = function(t) {
  if (t.type === "decl") {
    var n = t.value;
    // charcode for l
    n.charCodeAt(0) === 108 && // charcode for b
    n.charCodeAt(2) === 98 && (t.return = "", t.value = "");
  }
};
function ry(e, t) {
  switch (bT(e, t)) {
    case 5103:
      return Et + "print-" + e + e;
    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921:
    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005:
    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855:
    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return Et + e + e;
    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return Et + e + Jl + e + En + e + e;
    case 6828:
    case 4268:
      return Et + e + En + e + e;
    case 6165:
      return Et + e + En + "flex-" + e + e;
    case 5187:
      return Et + e + Pt(e, /(\w+).+(:[^]+)/, Et + "box-$1$2" + En + "flex-$1$2") + e;
    case 5443:
      return Et + e + En + "flex-item-" + Pt(e, /flex-|-self/, "") + e;
    case 4675:
      return Et + e + En + "flex-line-pack" + Pt(e, /align-content|flex-|-self/, "") + e;
    case 5548:
      return Et + e + En + Pt(e, "shrink", "negative") + e;
    case 5292:
      return Et + e + En + Pt(e, "basis", "preferred-size") + e;
    case 6060:
      return Et + "box-" + Pt(e, "-grow", "") + Et + e + En + Pt(e, "grow", "positive") + e;
    case 4554:
      return Et + Pt(e, /([^-])(transform)/g, "$1" + Et + "$2") + e;
    case 6187:
      return Pt(Pt(Pt(e, /(zoom-|grab)/, Et + "$1"), /(image-set)/, Et + "$1"), e, "") + e;
    case 5495:
    case 3959:
      return Pt(e, /(image-set\([^]*)/, Et + "$1$`$1");
    case 4968:
      return Pt(Pt(e, /(.+:)(flex-)?(.*)/, Et + "box-pack:$3" + En + "flex-pack:$3"), /s.+-b[^;]+/, "justify") + Et + e + e;
    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return Pt(e, /(.+)-inline(.+)/, Et + "$1$2") + e;
    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      if (Bo(e) - 1 - t > 6) switch (wn(e, t + 1)) {
        case 109:
          if (wn(e, t + 4) !== 45) break;
        case 102:
          return Pt(e, /(.+:)(.+)-([^]+)/, "$1" + Et + "$2-$3$1" + Jl + (wn(e, t + 3) == 108 ? "$3" : "$2-$3")) + e;
        case 115:
          return ~Zd(e, "stretch") ? ry(Pt(e, "stretch", "fill-available"), t) + e : e;
      }
      break;
    case 4949:
      if (wn(e, t + 1) !== 115) break;
    case 6444:
      switch (wn(e, Bo(e) - 3 - (~Zd(e, "!important") && 10))) {
        case 107:
          return Pt(e, ":", ":" + Et) + e;
        case 101:
          return Pt(e, /(.+:)([^;!]+)(;|!.+)?/, "$1" + Et + (wn(e, 14) === 45 ? "inline-" : "") + "box$3$1" + Et + "$2$3$1" + En + "$2box$3") + e;
      }
      break;
    case 5936:
      switch (wn(e, t + 11)) {
        case 114:
          return Et + e + En + Pt(e, /[svh]\w+-[tblr]{2}/, "tb") + e;
        case 108:
          return Et + e + En + Pt(e, /[svh]\w+-[tblr]{2}/, "tb-rl") + e;
        case 45:
          return Et + e + En + Pt(e, /[svh]\w+-[tblr]{2}/, "lr") + e;
      }
      return Et + e + En + e + e;
  }
  return e;
}
var NT = function(t, n, o, i) {
  if (t.length > -1 && !t.return) switch (t.type) {
    case ef:
      t.return = ry(t.value, t.length);
      break;
    case Qv:
      return Fi([xs(t, {
        value: Pt(t.value, "@", "@" + Et)
      })], i);
    case Qp:
      if (t.length) return yT(t.props, function(s) {
        switch (vT(s, /(::plac\w+|:read-\w+)/)) {
          case ":read-only":
          case ":read-write":
            return Fi([xs(t, {
              props: [Pt(s, /:(read-\w+)/, ":" + Jl + "$1")]
            })], i);
          case "::placeholder":
            return Fi([xs(t, {
              props: [Pt(s, /:(plac\w+)/, ":" + Et + "input-$1")]
            }), xs(t, {
              props: [Pt(s, /:(plac\w+)/, ":" + Jl + "$1")]
            }), xs(t, {
              props: [Pt(s, /:(plac\w+)/, En + "input-$1")]
            })], i);
        }
        return "";
      });
  }
}, VT = [NT], $T = function(t) {
  var n = t.key;
  if (n === "css") {
    var o = document.querySelectorAll("style[data-emotion]:not([data-s])");
    Array.prototype.forEach.call(o, function(v) {
      var b = v.getAttribute("data-emotion");
      b.indexOf(" ") !== -1 && (document.head.appendChild(v), v.setAttribute("data-s", ""));
    });
  }
  var i = t.stylisPlugins || VT, s = {}, a, l = [];
  a = t.container || document.head, Array.prototype.forEach.call(
    // this means we will ignore elements which don't have a space in them which
    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements
    document.querySelectorAll('style[data-emotion^="' + n + ' "]'),
    function(v) {
      for (var b = v.getAttribute("data-emotion").split(" "), y = 1; y < b.length; y++)
        s[b[y]] = !0;
      l.push(v);
    }
  );
  var c, u = [kT, FT];
  {
    var d, p = [ET, AT(function(v) {
      d.insert(v);
    })], m = PT(u.concat(i, p)), g = function(b) {
      return Fi(RT(b), m);
    };
    c = function(b, y, C, x) {
      d = C, g(b ? b + "{" + y.styles + "}" : y.styles), x && (h.inserted[y.name] = !0);
    };
  }
  var h = {
    key: n,
    sheet: new pT({
      key: n,
      container: a,
      nonce: t.nonce,
      speedy: t.speedy,
      prepend: t.prepend,
      insertionPoint: t.insertionPoint
    }),
    nonce: t.nonce,
    inserted: s,
    registered: {},
    insert: c
  };
  return h.sheet.hydrate(l), h;
}, LT = !0;
function iy(e, t, n) {
  var o = "";
  return n.split(" ").forEach(function(i) {
    e[i] !== void 0 ? t.push(e[i] + ";") : i && (o += i + " ");
  }), o;
}
var nf = function(t, n, o) {
  var i = t.key + "-" + n.name;
  // we only need to add the styles to the registered cache if the
  // class name could be used further down
  // the tree but if it's a string tag, we know it won't
  // so we don't have to add it to registered cache.
  // this improves memory usage since we can avoid storing the whole style string
  (o === !1 || // we need to always store it if we're in compat mode and
  // in node since emotion-server relies on whether a style is in
  // the registered cache to know whether a style is global or not
  // also, note that this check will be dead code eliminated in the browser
  LT === !1) && t.registered[i] === void 0 && (t.registered[i] = n.styles);
}, of = function(t, n, o) {
  nf(t, n, o);
  var i = t.key + "-" + n.name;
  if (t.inserted[n.name] === void 0) {
    var s = n;
    do
      t.insert(n === s ? "." + i : "", s, t.sheet, !0), s = s.next;
    while (s !== void 0);
  }
};
function _T(e) {
  for (var t = 0, n, o = 0, i = e.length; i >= 4; ++o, i -= 4)
    n = e.charCodeAt(o) & 255 | (e.charCodeAt(++o) & 255) << 8 | (e.charCodeAt(++o) & 255) << 16 | (e.charCodeAt(++o) & 255) << 24, n = /* Math.imul(k, m): */
    (n & 65535) * 1540483477 + ((n >>> 16) * 59797 << 16), n ^= /* k >>> r: */
    n >>> 24, t = /* Math.imul(k, m): */
    (n & 65535) * 1540483477 + ((n >>> 16) * 59797 << 16) ^ /* Math.imul(h, m): */
    (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16);
  switch (i) {
    case 3:
      t ^= (e.charCodeAt(o + 2) & 255) << 16;
    case 2:
      t ^= (e.charCodeAt(o + 1) & 255) << 8;
    case 1:
      t ^= e.charCodeAt(o) & 255, t = /* Math.imul(h, m): */
      (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16);
  }
  return t ^= t >>> 13, t = /* Math.imul(h, m): */
  (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16), ((t ^ t >>> 15) >>> 0).toString(36);
}
var BT = {
  animationIterationCount: 1,
  aspectRatio: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  scale: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
}, zT = !1, WT = /[A-Z]|^ms/g, HT = /_EMO_([^_]+?)_([^]*?)_EMO_/g, sy = function(t) {
  return t.charCodeAt(1) === 45;
}, fg = function(t) {
  return t != null && typeof t != "boolean";
}, Ju = /* @__PURE__ */ Jv(function(e) {
  return sy(e) ? e : e.replace(WT, "-$&").toLowerCase();
}), mg = function(t, n) {
  switch (t) {
    case "animation":
    case "animationName":
      if (typeof n == "string")
        return n.replace(HT, function(o, i, s) {
          return zo = {
            name: i,
            styles: s,
            next: zo
          }, i;
        });
  }
  return BT[t] !== 1 && !sy(t) && typeof n == "number" && n !== 0 ? n + "px" : n;
}, GT = "Component selectors can only be used in conjunction with @emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware compiler transform.";
function la(e, t, n) {
  if (n == null)
    return "";
  var o = n;
  if (o.__emotion_styles !== void 0)
    return o;
  switch (typeof n) {
    case "boolean":
      return "";
    case "object": {
      var i = n;
      if (i.anim === 1)
        return zo = {
          name: i.name,
          styles: i.styles,
          next: zo
        }, i.name;
      var s = n;
      if (s.styles !== void 0) {
        var a = s.next;
        if (a !== void 0)
          for (; a !== void 0; )
            zo = {
              name: a.name,
              styles: a.styles,
              next: zo
            }, a = a.next;
        var l = s.styles + ";";
        return l;
      }
      return UT(e, t, n);
    }
    case "function": {
      if (e !== void 0) {
        var c = zo, u = n(e);
        return zo = c, la(e, t, u);
      }
      break;
    }
  }
  var d = n;
  if (t == null)
    return d;
  var p = t[d];
  return p !== void 0 ? p : d;
}
function UT(e, t, n) {
  var o = "";
  if (Array.isArray(n))
    for (var i = 0; i < n.length; i++)
      o += la(e, t, n[i]) + ";";
  else
    for (var s in n) {
      var a = n[s];
      if (typeof a != "object") {
        var l = a;
        t != null && t[l] !== void 0 ? o += s + "{" + t[l] + "}" : fg(l) && (o += Ju(s) + ":" + mg(s, l) + ";");
      } else {
        if (s === "NO_COMPONENT_SELECTOR" && zT)
          throw new Error(GT);
        if (Array.isArray(a) && typeof a[0] == "string" && (t == null || t[a[0]] === void 0))
          for (var c = 0; c < a.length; c++)
            fg(a[c]) && (o += Ju(s) + ":" + mg(s, a[c]) + ";");
        else {
          var u = la(e, t, a);
          switch (s) {
            case "animation":
            case "animationName": {
              o += Ju(s) + ":" + u + ";";
              break;
            }
            default:
              o += s + "{" + u + "}";
          }
        }
      }
    }
  return o;
}
var gg = /label:\s*([^\s;{]+)\s*(;|$)/g, zo;
function Ac(e, t, n) {
  if (e.length === 1 && typeof e[0] == "object" && e[0] !== null && e[0].styles !== void 0)
    return e[0];
  var o = !0, i = "";
  zo = void 0;
  var s = e[0];
  if (s == null || s.raw === void 0)
    o = !1, i += la(n, t, s);
  else {
    var a = s;
    i += a[0];
  }
  for (var l = 1; l < e.length; l++)
    if (i += la(n, t, e[l]), o) {
      var c = s;
      i += c[l];
    }
  gg.lastIndex = 0;
  for (var u = "", d; (d = gg.exec(i)) !== null; )
    u += "-" + d[1];
  var p = _T(i) + u;
  return {
    name: p,
    styles: i,
    next: zo
  };
}
var XT = function(t) {
  return t();
}, ay = S.useInsertionEffect ? S.useInsertionEffect : !1, ly = ay || XT, hg = ay || S.useLayoutEffect, YT = !1, cy = /* @__PURE__ */ S.createContext(
  // we're doing this to avoid preconstruct's dead code elimination in this one case
  // because this module is primarily intended for the browser and node
  // but it's also required in react native and similar environments sometimes
  // and we could have a special build just for that
  // but this is much easier and the native packages
  // might use a different theme context in the future anyway
  typeof HTMLElement < "u" ? /* @__PURE__ */ $T({
    key: "css"
  }) : null
);
cy.Provider;
var rf = function(t) {
  return /* @__PURE__ */ Dv(function(n, o) {
    var i = Mv(cy);
    return t(n, i, o);
  });
}, Ma = /* @__PURE__ */ S.createContext({}), sf = {}.hasOwnProperty, Jd = "__EMOTION_TYPE_PLEASE_DO_NOT_USE__", ZT = function(t, n) {
  var o = {};
  for (var i in n)
    sf.call(n, i) && (o[i] = n[i]);
  return o[Jd] = t, o;
}, qT = function(t) {
  var n = t.cache, o = t.serialized, i = t.isStringTag;
  return nf(n, o, i), ly(function() {
    return of(n, o, i);
  }), null;
}, JT = /* @__PURE__ */ rf(
  /* <any, any> */
  function(e, t, n) {
    var o = e.css;
    typeof o == "string" && t.registered[o] !== void 0 && (o = t.registered[o]);
    var i = e[Jd], s = [o], a = "";
    typeof e.className == "string" ? a = iy(t.registered, s, e.className) : e.className != null && (a = e.className + " ");
    var l = Ac(s, void 0, S.useContext(Ma));
    a += t.key + "-" + l.name;
    var c = {};
    for (var u in e)
      sf.call(e, u) && u !== "css" && u !== Jd && !YT && (c[u] = e[u]);
    return c.className = a, n && (c.ref = n), /* @__PURE__ */ S.createElement(S.Fragment, null, /* @__PURE__ */ S.createElement(qT, {
      cache: t,
      serialized: l,
      isStringTag: typeof i == "string"
    }), /* @__PURE__ */ S.createElement(i, c));
  }
), KT = JT, tt = function(t, n) {
  var o = arguments;
  if (n == null || !sf.call(n, "css"))
    return S.createElement.apply(void 0, o);
  var i = o.length, s = new Array(i);
  s[0] = KT, s[1] = ZT(t, n);
  for (var a = 2; a < i; a++)
    s[a] = o[a];
  return S.createElement.apply(null, s);
}, QT = /* @__PURE__ */ rf(function(e, t) {
  var n = e.styles, o = Ac([n], void 0, S.useContext(Ma)), i = S.useRef();
  return hg(function() {
    var s = t.key + "-global", a = new t.sheet.constructor({
      key: s,
      nonce: t.sheet.nonce,
      container: t.sheet.container,
      speedy: t.sheet.isSpeedy
    }), l = !1, c = document.querySelector('style[data-emotion="' + s + " " + o.name + '"]');
    return t.sheet.tags.length && (a.before = t.sheet.tags[0]), c !== null && (l = !0, c.setAttribute("data-emotion", s), a.hydrate([c])), i.current = [a, l], function() {
      a.flush();
    };
  }, [t]), hg(function() {
    var s = i.current, a = s[0], l = s[1];
    if (l) {
      s[1] = !1;
      return;
    }
    if (o.next !== void 0 && of(t, o.next, !0), a.tags.length) {
      var c = a.tags[a.tags.length - 1].nextElementSibling;
      a.before = c, a.flush();
    }
    t.insert("", o, a, !1);
  }, [t, o.name]), null;
});
function Ko() {
  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
    t[n] = arguments[n];
  return Ac(t);
}
var ko = function() {
  var t = Ko.apply(void 0, arguments), n = "animation-" + t.name;
  return {
    name: n,
    styles: "@keyframes " + n + "{" + t.styles + "}",
    anim: 1,
    toString: function() {
      return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
    }
  };
}, eI = lT, tI = function(t) {
  return t !== "theme";
}, bg = function(t) {
  return typeof t == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  t.charCodeAt(0) > 96 ? eI : tI;
}, vg = function(t, n, o) {
  var i;
  if (n) {
    var s = n.shouldForwardProp;
    i = t.__emotion_forwardProp && s ? function(a) {
      return t.__emotion_forwardProp(a) && s(a);
    } : s;
  }
  return typeof i != "function" && o && (i = t.__emotion_forwardProp), i;
}, nI = !1, oI = function(t) {
  var n = t.cache, o = t.serialized, i = t.isStringTag;
  return nf(n, o, i), ly(function() {
    return of(n, o, i);
  }), null;
}, rI = function e(t, n) {
  var o = t.__emotion_real === t, i = o && t.__emotion_base || t, s, a;
  n !== void 0 && (s = n.label, a = n.target);
  var l = vg(t, n, o), c = l || bg(i), u = !c("as");
  return function() {
    var d = arguments, p = o && t.__emotion_styles !== void 0 ? t.__emotion_styles.slice(0) : [];
    if (s !== void 0 && p.push("label:" + s + ";"), d[0] == null || d[0].raw === void 0)
      p.push.apply(p, d);
    else {
      p.push(d[0][0]);
      for (var m = d.length, g = 1; g < m; g++)
        p.push(d[g], d[0][g]);
    }
    var h = rf(function(v, b, y) {
      var C = u && v.as || i, x = "", T = [], w = v;
      if (v.theme == null) {
        w = {};
        for (var R in v)
          w[R] = v[R];
        w.theme = S.useContext(Ma);
      }
      typeof v.className == "string" ? x = iy(b.registered, T, v.className) : v.className != null && (x = v.className + " ");
      var E = Ac(p.concat(T), b.registered, w);
      x += b.key + "-" + E.name, a !== void 0 && (x += " " + a);
      var O = u && l === void 0 ? bg(C) : c, I = {};
      for (var P in v)
        u && P === "as" || O(P) && (I[P] = v[P]);
      return I.className = x, y && (I.ref = y), /* @__PURE__ */ S.createElement(S.Fragment, null, /* @__PURE__ */ S.createElement(oI, {
        cache: b,
        serialized: E,
        isStringTag: typeof C == "string"
      }), /* @__PURE__ */ S.createElement(C, I));
    });
    return h.displayName = s !== void 0 ? s : "Styled(" + (typeof i == "string" ? i : i.displayName || i.name || "Component") + ")", h.defaultProps = t.defaultProps, h.__emotion_real = h, h.__emotion_base = i, h.__emotion_styles = p, h.__emotion_forwardProp = l, Object.defineProperty(h, "toString", {
      value: function() {
        return a === void 0 && nI ? "NO_COMPONENT_SELECTOR" : "." + a;
      }
    }), h.withComponent = function(v, b) {
      return e(v, V({}, n, b, {
        shouldForwardProp: vg(h, b, !0)
      })).apply(void 0, p);
    }, h;
  };
}, iI = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "marquee",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  // SVG
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
], Kd = rI.bind();
iI.forEach(function(e) {
  Kd[e] = Kd(e);
});
var Qd = { exports: {} };
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var Ku, yg;
function sI() {
  if (yg) return Ku;
  yg = 1;
  var e = Object.getOwnPropertySymbols, t = Object.prototype.hasOwnProperty, n = Object.prototype.propertyIsEnumerable;
  function o(s) {
    if (s == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(s);
  }
  function i() {
    try {
      if (!Object.assign)
        return !1;
      var s = new String("abc");
      if (s[5] = "de", Object.getOwnPropertyNames(s)[0] === "5")
        return !1;
      for (var a = {}, l = 0; l < 10; l++)
        a["_" + String.fromCharCode(l)] = l;
      var c = Object.getOwnPropertyNames(a).map(function(d) {
        return a[d];
      });
      if (c.join("") !== "0123456789")
        return !1;
      var u = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(d) {
        u[d] = d;
      }), Object.keys(Object.assign({}, u)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return Ku = i() ? Object.assign : function(s, a) {
    for (var l, c = o(s), u, d = 1; d < arguments.length; d++) {
      l = Object(arguments[d]);
      for (var p in l)
        t.call(l, p) && (c[p] = l[p]);
      if (e) {
        u = e(l);
        for (var m = 0; m < u.length; m++)
          n.call(l, u[m]) && (c[u[m]] = l[u[m]]);
      }
    }
    return c;
  }, Ku;
}
var Qu, xg;
function af() {
  if (xg) return Qu;
  xg = 1;
  var e = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return Qu = e, Qu;
}
var ed, Cg;
function uy() {
  return Cg || (Cg = 1, ed = Function.call.bind(Object.prototype.hasOwnProperty)), ed;
}
var td, Sg;
function aI() {
  if (Sg) return td;
  Sg = 1;
  var e = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var t = af(), n = {}, o = uy();
    e = function(s) {
      var a = "Warning: " + s;
      typeof console < "u" && console.error(a);
      try {
        throw new Error(a);
      } catch {
      }
    };
  }
  function i(s, a, l, c, u) {
    if (process.env.NODE_ENV !== "production") {
      for (var d in s)
        if (o(s, d)) {
          var p;
          try {
            if (typeof s[d] != "function") {
              var m = Error(
                (c || "React class") + ": " + l + " type `" + d + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof s[d] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw m.name = "Invariant Violation", m;
            }
            p = s[d](a, d, c, l, null, t);
          } catch (h) {
            p = h;
          }
          if (p && !(p instanceof Error) && e(
            (c || "React class") + ": type specification of " + l + " `" + d + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof p + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), p instanceof Error && !(p.message in n)) {
            n[p.message] = !0;
            var g = u ? u() : "";
            e(
              "Failed " + l + " type: " + p.message + (g ?? "")
            );
          }
        }
    }
  }
  return i.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (n = {});
  }, td = i, td;
}
var nd, wg;
function lI() {
  if (wg) return nd;
  wg = 1;
  var e = Xp, t = sI(), n = af(), o = uy(), i = aI(), s = function() {
  };
  process.env.NODE_ENV !== "production" && (s = function(l) {
    var c = "Warning: " + l;
    typeof console < "u" && console.error(c);
    try {
      throw new Error(c);
    } catch {
    }
  });
  function a() {
    return null;
  }
  return nd = function(l, c) {
    var u = typeof Symbol == "function" && Symbol.iterator, d = "@@iterator";
    function p(j) {
      var L = j && (u && j[u] || j[d]);
      if (typeof L == "function")
        return L;
    }
    var m = "<<anonymous>>", g = {
      array: y("array"),
      bigint: y("bigint"),
      bool: y("boolean"),
      func: y("function"),
      number: y("number"),
      object: y("object"),
      string: y("string"),
      symbol: y("symbol"),
      any: C(),
      arrayOf: x,
      element: T(),
      elementType: w(),
      instanceOf: R,
      node: P(),
      objectOf: O,
      oneOf: E,
      oneOfType: I,
      shape: D,
      exact: k
    };
    function h(j, L) {
      return j === L ? j !== 0 || 1 / j === 1 / L : j !== j && L !== L;
    }
    function v(j, L) {
      this.message = j, this.data = L && typeof L == "object" ? L : {}, this.stack = "";
    }
    v.prototype = Error.prototype;
    function b(j) {
      if (process.env.NODE_ENV !== "production")
        var L = {}, ee = 0;
      function Y(U, X, Z, G, K, re, ne) {
        if (G = G || m, re = re || Z, ne !== n) {
          if (c) {
            var z = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw z.name = "Invariant Violation", z;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var q = G + ":" + Z;
            !L[q] && // Avoid spamming the console because they are often not actionable except for lib authors
            ee < 3 && (s(
              "You are manually calling a React.PropTypes validation function for the `" + re + "` prop on `" + G + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), L[q] = !0, ee++);
          }
        }
        return X[Z] == null ? U ? X[Z] === null ? new v("The " + K + " `" + re + "` is marked as required " + ("in `" + G + "`, but its value is `null`.")) : new v("The " + K + " `" + re + "` is marked as required in " + ("`" + G + "`, but its value is `undefined`.")) : null : j(X, Z, G, K, re);
      }
      var $ = Y.bind(null, !1);
      return $.isRequired = Y.bind(null, !0), $;
    }
    function y(j) {
      function L(ee, Y, $, U, X, Z) {
        var G = ee[Y], K = N(G);
        if (K !== j) {
          var re = W(G);
          return new v(
            "Invalid " + U + " `" + X + "` of type " + ("`" + re + "` supplied to `" + $ + "`, expected ") + ("`" + j + "`."),
            { expectedType: j }
          );
        }
        return null;
      }
      return b(L);
    }
    function C() {
      return b(a);
    }
    function x(j) {
      function L(ee, Y, $, U, X) {
        if (typeof j != "function")
          return new v("Property `" + X + "` of component `" + $ + "` has invalid PropType notation inside arrayOf.");
        var Z = ee[Y];
        if (!Array.isArray(Z)) {
          var G = N(Z);
          return new v("Invalid " + U + " `" + X + "` of type " + ("`" + G + "` supplied to `" + $ + "`, expected an array."));
        }
        for (var K = 0; K < Z.length; K++) {
          var re = j(Z, K, $, U, X + "[" + K + "]", n);
          if (re instanceof Error)
            return re;
        }
        return null;
      }
      return b(L);
    }
    function T() {
      function j(L, ee, Y, $, U) {
        var X = L[ee];
        if (!l(X)) {
          var Z = N(X);
          return new v("Invalid " + $ + " `" + U + "` of type " + ("`" + Z + "` supplied to `" + Y + "`, expected a single ReactElement."));
        }
        return null;
      }
      return b(j);
    }
    function w() {
      function j(L, ee, Y, $, U) {
        var X = L[ee];
        if (!e.isValidElementType(X)) {
          var Z = N(X);
          return new v("Invalid " + $ + " `" + U + "` of type " + ("`" + Z + "` supplied to `" + Y + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return b(j);
    }
    function R(j) {
      function L(ee, Y, $, U, X) {
        if (!(ee[Y] instanceof j)) {
          var Z = j.name || m, G = B(ee[Y]);
          return new v("Invalid " + U + " `" + X + "` of type " + ("`" + G + "` supplied to `" + $ + "`, expected ") + ("instance of `" + Z + "`."));
        }
        return null;
      }
      return b(L);
    }
    function E(j) {
      if (!Array.isArray(j))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? s(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : s("Invalid argument supplied to oneOf, expected an array.")), a;
      function L(ee, Y, $, U, X) {
        for (var Z = ee[Y], G = 0; G < j.length; G++)
          if (h(Z, j[G]))
            return null;
        var K = JSON.stringify(j, function(ne, z) {
          var q = W(z);
          return q === "symbol" ? String(z) : z;
        });
        return new v("Invalid " + U + " `" + X + "` of value `" + String(Z) + "` " + ("supplied to `" + $ + "`, expected one of " + K + "."));
      }
      return b(L);
    }
    function O(j) {
      function L(ee, Y, $, U, X) {
        if (typeof j != "function")
          return new v("Property `" + X + "` of component `" + $ + "` has invalid PropType notation inside objectOf.");
        var Z = ee[Y], G = N(Z);
        if (G !== "object")
          return new v("Invalid " + U + " `" + X + "` of type " + ("`" + G + "` supplied to `" + $ + "`, expected an object."));
        for (var K in Z)
          if (o(Z, K)) {
            var re = j(Z, K, $, U, X + "." + K, n);
            if (re instanceof Error)
              return re;
          }
        return null;
      }
      return b(L);
    }
    function I(j) {
      if (!Array.isArray(j))
        return process.env.NODE_ENV !== "production" && s("Invalid argument supplied to oneOfType, expected an instance of array."), a;
      for (var L = 0; L < j.length; L++) {
        var ee = j[L];
        if (typeof ee != "function")
          return s(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + H(ee) + " at index " + L + "."
          ), a;
      }
      function Y($, U, X, Z, G) {
        for (var K = [], re = 0; re < j.length; re++) {
          var ne = j[re], z = ne($, U, X, Z, G, n);
          if (z == null)
            return null;
          z.data && o(z.data, "expectedType") && K.push(z.data.expectedType);
        }
        var q = K.length > 0 ? ", expected one of type [" + K.join(", ") + "]" : "";
        return new v("Invalid " + Z + " `" + G + "` supplied to " + ("`" + X + "`" + q + "."));
      }
      return b(Y);
    }
    function P() {
      function j(L, ee, Y, $, U) {
        return M(L[ee]) ? null : new v("Invalid " + $ + " `" + U + "` supplied to " + ("`" + Y + "`, expected a ReactNode."));
      }
      return b(j);
    }
    function A(j, L, ee, Y, $) {
      return new v(
        (j || "React class") + ": " + L + " type `" + ee + "." + Y + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + $ + "`."
      );
    }
    function D(j) {
      function L(ee, Y, $, U, X) {
        var Z = ee[Y], G = N(Z);
        if (G !== "object")
          return new v("Invalid " + U + " `" + X + "` of type `" + G + "` " + ("supplied to `" + $ + "`, expected `object`."));
        for (var K in j) {
          var re = j[K];
          if (typeof re != "function")
            return A($, U, X, K, W(re));
          var ne = re(Z, K, $, U, X + "." + K, n);
          if (ne)
            return ne;
        }
        return null;
      }
      return b(L);
    }
    function k(j) {
      function L(ee, Y, $, U, X) {
        var Z = ee[Y], G = N(Z);
        if (G !== "object")
          return new v("Invalid " + U + " `" + X + "` of type `" + G + "` " + ("supplied to `" + $ + "`, expected `object`."));
        var K = t({}, ee[Y], j);
        for (var re in K) {
          var ne = j[re];
          if (o(j, re) && typeof ne != "function")
            return A($, U, X, re, W(ne));
          if (!ne)
            return new v(
              "Invalid " + U + " `" + X + "` key `" + re + "` supplied to `" + $ + "`.\nBad object: " + JSON.stringify(ee[Y], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(j), null, "  ")
            );
          var z = ne(Z, re, $, U, X + "." + re, n);
          if (z)
            return z;
        }
        return null;
      }
      return b(L);
    }
    function M(j) {
      switch (typeof j) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !j;
        case "object":
          if (Array.isArray(j))
            return j.every(M);
          if (j === null || l(j))
            return !0;
          var L = p(j);
          if (L) {
            var ee = L.call(j), Y;
            if (L !== j.entries) {
              for (; !(Y = ee.next()).done; )
                if (!M(Y.value))
                  return !1;
            } else
              for (; !(Y = ee.next()).done; ) {
                var $ = Y.value;
                if ($ && !M($[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function F(j, L) {
      return j === "symbol" ? !0 : L ? L["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && L instanceof Symbol : !1;
    }
    function N(j) {
      var L = typeof j;
      return Array.isArray(j) ? "array" : j instanceof RegExp ? "object" : F(L, j) ? "symbol" : L;
    }
    function W(j) {
      if (typeof j > "u" || j === null)
        return "" + j;
      var L = N(j);
      if (L === "object") {
        if (j instanceof Date)
          return "date";
        if (j instanceof RegExp)
          return "regexp";
      }
      return L;
    }
    function H(j) {
      var L = W(j);
      switch (L) {
        case "array":
        case "object":
          return "an " + L;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + L;
        default:
          return L;
      }
    }
    function B(j) {
      return !j.constructor || !j.constructor.name ? m : j.constructor.name;
    }
    return g.checkPropTypes = i, g.resetWarningCache = i.resetWarningCache, g.PropTypes = g, g;
  }, nd;
}
var od, Tg;
function cI() {
  if (Tg) return od;
  Tg = 1;
  var e = af();
  function t() {
  }
  function n() {
  }
  return n.resetWarningCache = t, od = function() {
    function o(a, l, c, u, d, p) {
      if (p !== e) {
        var m = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw m.name = "Invariant Violation", m;
      }
    }
    o.isRequired = o;
    function i() {
      return o;
    }
    var s = {
      array: o,
      bigint: o,
      bool: o,
      func: o,
      number: o,
      object: o,
      string: o,
      symbol: o,
      any: o,
      arrayOf: i,
      element: o,
      elementType: o,
      instanceOf: i,
      node: o,
      objectOf: i,
      oneOf: i,
      oneOfType: i,
      shape: i,
      exact: i,
      checkPropTypes: n,
      resetWarningCache: t
    };
    return s.PropTypes = s, s;
  }, od;
}
if (process.env.NODE_ENV !== "production") {
  var uI = Xp, dI = !0;
  Qd.exports = lI()(uI.isElement, dI);
} else
  Qd.exports = cI()();
var pI = Qd.exports;
const r = /* @__PURE__ */ Tw(pI);
var ep = { exports: {} }, Cs = {};
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Ig;
function fI() {
  if (Ig) return Cs;
  Ig = 1;
  var e = Tn, t = Symbol.for("react.element"), n = Symbol.for("react.fragment"), o = Object.prototype.hasOwnProperty, i = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, s = { key: !0, ref: !0, __self: !0, __source: !0 };
  function a(l, c, u) {
    var d, p = {}, m = null, g = null;
    u !== void 0 && (m = "" + u), c.key !== void 0 && (m = "" + c.key), c.ref !== void 0 && (g = c.ref);
    for (d in c) o.call(c, d) && !s.hasOwnProperty(d) && (p[d] = c[d]);
    if (l && l.defaultProps) for (d in c = l.defaultProps, c) p[d] === void 0 && (p[d] = c[d]);
    return { $$typeof: t, type: l, key: m, ref: g, props: p, _owner: i.current };
  }
  return Cs.Fragment = n, Cs.jsx = a, Cs.jsxs = a, Cs;
}
var Ss = {};
/**
 * @license React
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Rg;
function mI() {
  return Rg || (Rg = 1, process.env.NODE_ENV !== "production" && function() {
    var e = Tn, t = Symbol.for("react.element"), n = Symbol.for("react.portal"), o = Symbol.for("react.fragment"), i = Symbol.for("react.strict_mode"), s = Symbol.for("react.profiler"), a = Symbol.for("react.provider"), l = Symbol.for("react.context"), c = Symbol.for("react.forward_ref"), u = Symbol.for("react.suspense"), d = Symbol.for("react.suspense_list"), p = Symbol.for("react.memo"), m = Symbol.for("react.lazy"), g = Symbol.for("react.offscreen"), h = Symbol.iterator, v = "@@iterator";
    function b(J) {
      if (J === null || typeof J != "object")
        return null;
      var he = h && J[h] || J[v];
      return typeof he == "function" ? he : null;
    }
    var y = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function C(J) {
      {
        for (var he = arguments.length, ke = new Array(he > 1 ? he - 1 : 0), le = 1; le < he; le++)
          ke[le - 1] = arguments[le];
        x("error", J, ke);
      }
    }
    function x(J, he, ke) {
      {
        var le = y.ReactDebugCurrentFrame, ce = le.getStackAddendum();
        ce !== "" && (he += "%s", ke = ke.concat([ce]));
        var Ee = ke.map(function(Le) {
          return String(Le);
        });
        Ee.unshift("Warning: " + he), Function.prototype.apply.call(console[J], console, Ee);
      }
    }
    var T = !1, w = !1, R = !1, E = !1, O = !1, I;
    I = Symbol.for("react.module.reference");
    function P(J) {
      return !!(typeof J == "string" || typeof J == "function" || J === o || J === s || O || J === i || J === u || J === d || E || J === g || T || w || R || typeof J == "object" && J !== null && (J.$$typeof === m || J.$$typeof === p || J.$$typeof === a || J.$$typeof === l || J.$$typeof === c || // This needs to include all possible module reference object
      // types supported by any Flight configuration anywhere since
      // we don't know which Flight build this will end up being used
      // with.
      J.$$typeof === I || J.getModuleId !== void 0));
    }
    function A(J, he, ke) {
      var le = J.displayName;
      if (le)
        return le;
      var ce = he.displayName || he.name || "";
      return ce !== "" ? ke + "(" + ce + ")" : ke;
    }
    function D(J) {
      return J.displayName || "Context";
    }
    function k(J) {
      if (J == null)
        return null;
      if (typeof J.tag == "number" && C("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof J == "function")
        return J.displayName || J.name || null;
      if (typeof J == "string")
        return J;
      switch (J) {
        case o:
          return "Fragment";
        case n:
          return "Portal";
        case s:
          return "Profiler";
        case i:
          return "StrictMode";
        case u:
          return "Suspense";
        case d:
          return "SuspenseList";
      }
      if (typeof J == "object")
        switch (J.$$typeof) {
          case l:
            var he = J;
            return D(he) + ".Consumer";
          case a:
            var ke = J;
            return D(ke._context) + ".Provider";
          case c:
            return A(J, J.render, "ForwardRef");
          case p:
            var le = J.displayName || null;
            return le !== null ? le : k(J.type) || "Memo";
          case m: {
            var ce = J, Ee = ce._payload, Le = ce._init;
            try {
              return k(Le(Ee));
            } catch {
              return null;
            }
          }
        }
      return null;
    }
    var M = Object.assign, F = 0, N, W, H, B, j, L, ee;
    function Y() {
    }
    Y.__reactDisabledLog = !0;
    function $() {
      {
        if (F === 0) {
          N = console.log, W = console.info, H = console.warn, B = console.error, j = console.group, L = console.groupCollapsed, ee = console.groupEnd;
          var J = {
            configurable: !0,
            enumerable: !0,
            value: Y,
            writable: !0
          };
          Object.defineProperties(console, {
            info: J,
            log: J,
            warn: J,
            error: J,
            group: J,
            groupCollapsed: J,
            groupEnd: J
          });
        }
        F++;
      }
    }
    function U() {
      {
        if (F--, F === 0) {
          var J = {
            configurable: !0,
            enumerable: !0,
            writable: !0
          };
          Object.defineProperties(console, {
            log: M({}, J, {
              value: N
            }),
            info: M({}, J, {
              value: W
            }),
            warn: M({}, J, {
              value: H
            }),
            error: M({}, J, {
              value: B
            }),
            group: M({}, J, {
              value: j
            }),
            groupCollapsed: M({}, J, {
              value: L
            }),
            groupEnd: M({}, J, {
              value: ee
            })
          });
        }
        F < 0 && C("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
      }
    }
    var X = y.ReactCurrentDispatcher, Z;
    function G(J, he, ke) {
      {
        if (Z === void 0)
          try {
            throw Error();
          } catch (ce) {
            var le = ce.stack.trim().match(/\n( *(at )?)/);
            Z = le && le[1] || "";
          }
        return `
` + Z + J;
      }
    }
    var K = !1, re;
    {
      var ne = typeof WeakMap == "function" ? WeakMap : Map;
      re = new ne();
    }
    function z(J, he) {
      if (!J || K)
        return "";
      {
        var ke = re.get(J);
        if (ke !== void 0)
          return ke;
      }
      var le;
      K = !0;
      var ce = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      var Ee;
      Ee = X.current, X.current = null, $();
      try {
        if (he) {
          var Le = function() {
            throw Error();
          };
          if (Object.defineProperty(Le.prototype, "props", {
            set: function() {
              throw Error();
            }
          }), typeof Reflect == "object" && Reflect.construct) {
            try {
              Reflect.construct(Le, []);
            } catch (Cn) {
              le = Cn;
            }
            Reflect.construct(J, [], Le);
          } else {
            try {
              Le.call();
            } catch (Cn) {
              le = Cn;
            }
            J.call(Le.prototype);
          }
        } else {
          try {
            throw Error();
          } catch (Cn) {
            le = Cn;
          }
          J();
        }
      } catch (Cn) {
        if (Cn && le && typeof Cn.stack == "string") {
          for (var Ne = Cn.stack.split(`
`), ct = le.stack.split(`
`), rt = Ne.length - 1, yt = ct.length - 1; rt >= 1 && yt >= 0 && Ne[rt] !== ct[yt]; )
            yt--;
          for (; rt >= 1 && yt >= 0; rt--, yt--)
            if (Ne[rt] !== ct[yt]) {
              if (rt !== 1 || yt !== 1)
                do
                  if (rt--, yt--, yt < 0 || Ne[rt] !== ct[yt]) {
                    var mn = `
` + Ne[rt].replace(" at new ", " at ");
                    return J.displayName && mn.includes("<anonymous>") && (mn = mn.replace("<anonymous>", J.displayName)), typeof J == "function" && re.set(J, mn), mn;
                  }
                while (rt >= 1 && yt >= 0);
              break;
            }
        }
      } finally {
        K = !1, X.current = Ee, U(), Error.prepareStackTrace = ce;
      }
      var Br = J ? J.displayName || J.name : "", tr = Br ? G(Br) : "";
      return typeof J == "function" && re.set(J, tr), tr;
    }
    function q(J, he, ke) {
      return z(J, !1);
    }
    function _(J) {
      var he = J.prototype;
      return !!(he && he.isReactComponent);
    }
    function oe(J, he, ke) {
      if (J == null)
        return "";
      if (typeof J == "function")
        return z(J, _(J));
      if (typeof J == "string")
        return G(J);
      switch (J) {
        case u:
          return G("Suspense");
        case d:
          return G("SuspenseList");
      }
      if (typeof J == "object")
        switch (J.$$typeof) {
          case c:
            return q(J.render);
          case p:
            return oe(J.type, he, ke);
          case m: {
            var le = J, ce = le._payload, Ee = le._init;
            try {
              return oe(Ee(ce), he, ke);
            } catch {
            }
          }
        }
      return "";
    }
    var te = Object.prototype.hasOwnProperty, se = {}, ae = y.ReactDebugCurrentFrame;
    function me(J) {
      if (J) {
        var he = J._owner, ke = oe(J.type, J._source, he ? he.type : null);
        ae.setExtraStackFrame(ke);
      } else
        ae.setExtraStackFrame(null);
    }
    function ye(J, he, ke, le, ce) {
      {
        var Ee = Function.call.bind(te);
        for (var Le in J)
          if (Ee(J, Le)) {
            var Ne = void 0;
            try {
              if (typeof J[Le] != "function") {
                var ct = Error((le || "React class") + ": " + ke + " type `" + Le + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof J[Le] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                throw ct.name = "Invariant Violation", ct;
              }
              Ne = J[Le](he, Le, le, ke, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (rt) {
              Ne = rt;
            }
            Ne && !(Ne instanceof Error) && (me(ce), C("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", le || "React class", ke, Le, typeof Ne), me(null)), Ne instanceof Error && !(Ne.message in se) && (se[Ne.message] = !0, me(ce), C("Failed %s type: %s", ke, Ne.message), me(null));
          }
      }
    }
    var Te = Array.isArray;
    function Ve(J) {
      return Te(J);
    }
    function ie(J) {
      {
        var he = typeof Symbol == "function" && Symbol.toStringTag, ke = he && J[Symbol.toStringTag] || J.constructor.name || "Object";
        return ke;
      }
    }
    function be(J) {
      try {
        return xe(J), !1;
      } catch {
        return !0;
      }
    }
    function xe(J) {
      return "" + J;
    }
    function Ie(J) {
      if (be(J))
        return C("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", ie(J)), xe(J);
    }
    var Pe = y.ReactCurrentOwner, Ce = {
      key: !0,
      ref: !0,
      __self: !0,
      __source: !0
    }, Oe, Be, Ae;
    Ae = {};
    function nt(J) {
      if (te.call(J, "ref")) {
        var he = Object.getOwnPropertyDescriptor(J, "ref").get;
        if (he && he.isReactWarning)
          return !1;
      }
      return J.ref !== void 0;
    }
    function Ze(J) {
      if (te.call(J, "key")) {
        var he = Object.getOwnPropertyDescriptor(J, "key").get;
        if (he && he.isReactWarning)
          return !1;
      }
      return J.key !== void 0;
    }
    function dt(J, he) {
      if (typeof J.ref == "string" && Pe.current && he && Pe.current.stateNode !== he) {
        var ke = k(Pe.current.type);
        Ae[ke] || (C('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', k(Pe.current.type), J.ref), Ae[ke] = !0);
      }
    }
    function de(J, he) {
      {
        var ke = function() {
          Oe || (Oe = !0, C("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", he));
        };
        ke.isReactWarning = !0, Object.defineProperty(J, "key", {
          get: ke,
          configurable: !0
        });
      }
    }
    function we(J, he) {
      {
        var ke = function() {
          Be || (Be = !0, C("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", he));
        };
        ke.isReactWarning = !0, Object.defineProperty(J, "ref", {
          get: ke,
          configurable: !0
        });
      }
    }
    var pe = function(J, he, ke, le, ce, Ee, Le) {
      var Ne = {
        // This tag allows us to uniquely identify this as a React Element
        $$typeof: t,
        // Built-in properties that belong on the element
        type: J,
        key: he,
        ref: ke,
        props: Le,
        // Record the component responsible for creating this element.
        _owner: Ee
      };
      return Ne._store = {}, Object.defineProperty(Ne._store, "validated", {
        configurable: !1,
        enumerable: !1,
        writable: !0,
        value: !1
      }), Object.defineProperty(Ne, "_self", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: le
      }), Object.defineProperty(Ne, "_source", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: ce
      }), Object.freeze && (Object.freeze(Ne.props), Object.freeze(Ne)), Ne;
    };
    function Me(J, he, ke, le, ce) {
      {
        var Ee, Le = {}, Ne = null, ct = null;
        ke !== void 0 && (Ie(ke), Ne = "" + ke), Ze(he) && (Ie(he.key), Ne = "" + he.key), nt(he) && (ct = he.ref, dt(he, ce));
        for (Ee in he)
          te.call(he, Ee) && !Ce.hasOwnProperty(Ee) && (Le[Ee] = he[Ee]);
        if (J && J.defaultProps) {
          var rt = J.defaultProps;
          for (Ee in rt)
            Le[Ee] === void 0 && (Le[Ee] = rt[Ee]);
        }
        if (Ne || ct) {
          var yt = typeof J == "function" ? J.displayName || J.name || "Unknown" : J;
          Ne && de(Le, yt), ct && we(Le, yt);
        }
        return pe(J, Ne, ct, ce, le, Pe.current, Le);
      }
    }
    var je = y.ReactCurrentOwner, st = y.ReactDebugCurrentFrame;
    function pt(J) {
      if (J) {
        var he = J._owner, ke = oe(J.type, J._source, he ? he.type : null);
        st.setExtraStackFrame(ke);
      } else
        st.setExtraStackFrame(null);
    }
    var it;
    it = !1;
    function bt(J) {
      return typeof J == "object" && J !== null && J.$$typeof === t;
    }
    function Zt() {
      {
        if (je.current) {
          var J = k(je.current.type);
          if (J)
            return `

Check the render method of \`` + J + "`.";
        }
        return "";
      }
    }
    function xn(J) {
      return "";
    }
    var qt = {};
    function ot(J) {
      {
        var he = Zt();
        if (!he) {
          var ke = typeof J == "string" ? J : J.displayName || J.name;
          ke && (he = `

Check the top-level render call using <` + ke + ">.");
        }
        return he;
      }
    }
    function ln(J, he) {
      {
        if (!J._store || J._store.validated || J.key != null)
          return;
        J._store.validated = !0;
        var ke = ot(he);
        if (qt[ke])
          return;
        qt[ke] = !0;
        var le = "";
        J && J._owner && J._owner !== je.current && (le = " It was passed a child from " + k(J._owner.type) + "."), pt(J), C('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', ke, le), pt(null);
      }
    }
    function Qo(J, he) {
      {
        if (typeof J != "object")
          return;
        if (Ve(J))
          for (var ke = 0; ke < J.length; ke++) {
            var le = J[ke];
            bt(le) && ln(le, he);
          }
        else if (bt(J))
          J._store && (J._store.validated = !0);
        else if (J) {
          var ce = b(J);
          if (typeof ce == "function" && ce !== J.entries)
            for (var Ee = ce.call(J), Le; !(Le = Ee.next()).done; )
              bt(Le.value) && ln(Le.value, he);
        }
      }
    }
    function No(J) {
      {
        var he = J.type;
        if (he == null || typeof he == "string")
          return;
        var ke;
        if (typeof he == "function")
          ke = he.propTypes;
        else if (typeof he == "object" && (he.$$typeof === c || // Note: Memo only checks outer props here.
        // Inner props are checked in the reconciler.
        he.$$typeof === p))
          ke = he.propTypes;
        else
          return;
        if (ke) {
          var le = k(he);
          ye(ke, J.props, "prop", le, J);
        } else if (he.PropTypes !== void 0 && !it) {
          it = !0;
          var ce = k(he);
          C("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", ce || "Unknown");
        }
        typeof he.getDefaultProps == "function" && !he.getDefaultProps.isReactClassApproved && C("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
      }
    }
    function er(J) {
      {
        for (var he = Object.keys(J.props), ke = 0; ke < he.length; ke++) {
          var le = he[ke];
          if (le !== "children" && le !== "key") {
            pt(J), C("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", le), pt(null);
            break;
          }
        }
        J.ref !== null && (pt(J), C("Invalid attribute `ref` supplied to `React.Fragment`."), pt(null));
      }
    }
    var Vo = {};
    function qe(J, he, ke, le, ce, Ee) {
      {
        var Le = P(J);
        if (!Le) {
          var Ne = "";
          (J === void 0 || typeof J == "object" && J !== null && Object.keys(J).length === 0) && (Ne += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
          var ct = xn();
          ct ? Ne += ct : Ne += Zt();
          var rt;
          J === null ? rt = "null" : Ve(J) ? rt = "array" : J !== void 0 && J.$$typeof === t ? (rt = "<" + (k(J.type) || "Unknown") + " />", Ne = " Did you accidentally export a JSX literal instead of a component?") : rt = typeof J, C("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", rt, Ne);
        }
        var yt = Me(J, he, ke, ce, Ee);
        if (yt == null)
          return yt;
        if (Le) {
          var mn = he.children;
          if (mn !== void 0)
            if (le)
              if (Ve(mn)) {
                for (var Br = 0; Br < mn.length; Br++)
                  Qo(mn[Br], J);
                Object.freeze && Object.freeze(mn);
              } else
                C("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
            else
              Qo(mn, J);
        }
        if (te.call(he, "key")) {
          var tr = k(J), Cn = Object.keys(he).filter(function(bs) {
            return bs !== "key";
          }), vr = Cn.length > 0 ? "{key: someKey, " + Cn.join(": ..., ") + ": ...}" : "{key: someKey}";
          if (!Vo[tr + vr]) {
            var vi = Cn.length > 0 ? "{" + Cn.join(": ..., ") + ": ...}" : "{}";
            C(`A props object containing a "key" prop is being spread into JSX:
  let props = %s;
  <%s {...props} />
React keys must be passed directly to JSX without using spread:
  let props = %s;
  <%s key={someKey} {...props} />`, vr, tr, vi, tr), Vo[tr + vr] = !0;
          }
        }
        return J === o ? er(yt) : No(yt), yt;
      }
    }
    function br(J, he, ke) {
      return qe(J, he, ke, !0);
    }
    function Bt(J, he, ke) {
      return qe(J, he, ke, !1);
    }
    var cn = Bt, fn = br;
    Ss.Fragment = o, Ss.jsx = cn, Ss.jsxs = fn;
  }()), Ss;
}
process.env.NODE_ENV === "production" ? ep.exports = fI() : ep.exports = mI();
var f = ep.exports;
function gI(e) {
  return e == null || Object.keys(e).length === 0;
}
function lf(e) {
  const {
    styles: t,
    defaultTheme: n = {}
  } = e, o = typeof t == "function" ? (i) => t(gI(i) ? n : i) : t;
  return /* @__PURE__ */ f.jsx(QT, {
    styles: o
  });
}
process.env.NODE_ENV !== "production" && (lf.propTypes = {
  defaultTheme: r.object,
  styles: r.oneOfType([r.array, r.string, r.object, r.func])
});
/**
 * @mui/styled-engine v6.1.1
 *
 * @license MIT
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function dy(e, t) {
  const n = Kd(e, t);
  return process.env.NODE_ENV !== "production" ? (...o) => {
    const i = typeof e == "string" ? `"${e}"` : "component";
    return o.length === 0 ? console.error([`MUI: Seems like you called \`styled(${i})()\` without a \`style\` argument.`, 'You must provide a `styles` argument: `styled("div")(styleYouForgotToPass)`.'].join(`
`)) : o.some((s) => s === void 0) && console.error(`MUI: the styled(${i})(...args) API requires all its args to be defined.`), n(...o);
  } : n;
}
const hI = (e, t) => {
  Array.isArray(e.__emotion_styles) && (e.__emotion_styles = t(e.__emotion_styles));
};
function Wo(e) {
  if (typeof e != "object" || e === null)
    return !1;
  const t = Object.getPrototypeOf(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}
function py(e) {
  if (!Wo(e))
    return e;
  const t = {};
  return Object.keys(e).forEach((n) => {
    t[n] = py(e[n]);
  }), t;
}
function bn(e, t, n = {
  clone: !0
}) {
  const o = n.clone ? {
    ...e
  } : e;
  return Wo(e) && Wo(t) && Object.keys(t).forEach((i) => {
    Wo(t[i]) && // Avoid prototype pollution
    Object.prototype.hasOwnProperty.call(e, i) && Wo(e[i]) ? o[i] = bn(e[i], t[i], n) : n.clone ? o[i] = Wo(t[i]) ? py(t[i]) : t[i] : o[i] = t[i];
  }), o;
}
const bI = (e) => {
  const t = Object.keys(e).map((n) => ({
    key: n,
    val: e[n]
  })) || [];
  return t.sort((n, o) => n.val - o.val), t.reduce((n, o) => ({
    ...n,
    [o.key]: o.val
  }), {});
};
function vI(e) {
  const {
    // The breakpoint **start** at this value.
    // For instance with the first breakpoint xs: [xs, sm).
    values: t = {
      xs: 0,
      // phone
      sm: 600,
      // tablet
      md: 900,
      // small laptop
      lg: 1200,
      // desktop
      xl: 1536
      // large screen
    },
    unit: n = "px",
    step: o = 5,
    ...i
  } = e, s = bI(t), a = Object.keys(s);
  function l(m) {
    return `@media (min-width:${typeof t[m] == "number" ? t[m] : m}${n})`;
  }
  function c(m) {
    return `@media (max-width:${(typeof t[m] == "number" ? t[m] : m) - o / 100}${n})`;
  }
  function u(m, g) {
    const h = a.indexOf(g);
    return `@media (min-width:${typeof t[m] == "number" ? t[m] : m}${n}) and (max-width:${(h !== -1 && typeof t[a[h]] == "number" ? t[a[h]] : g) - o / 100}${n})`;
  }
  function d(m) {
    return a.indexOf(m) + 1 < a.length ? u(m, a[a.indexOf(m) + 1]) : l(m);
  }
  function p(m) {
    const g = a.indexOf(m);
    return g === 0 ? l(a[1]) : g === a.length - 1 ? c(a[g]) : u(m, a[a.indexOf(m) + 1]).replace("@media", "@media not all and");
  }
  return {
    keys: a,
    values: s,
    up: l,
    down: c,
    between: u,
    only: d,
    not: p,
    unit: n,
    ...i
  };
}
function yI(e, t) {
  if (!e.containerQueries)
    return t;
  const n = Object.keys(t).filter((o) => o.startsWith("@container")).sort((o, i) => {
    var a, l;
    const s = /min-width:\s*([0-9.]+)/;
    return +(((a = o.match(s)) == null ? void 0 : a[1]) || 0) - +(((l = i.match(s)) == null ? void 0 : l[1]) || 0);
  });
  return n.length ? n.reduce((o, i) => {
    const s = t[i];
    return delete o[i], o[i] = s, o;
  }, {
    ...t
  }) : t;
}
function xI(e, t) {
  return t === "@" || t.startsWith("@") && (e.some((n) => t.startsWith(`@${n}`)) || !!t.match(/^@\d/));
}
function CI(e, t) {
  const n = t.match(/^@([^/]+)?\/?(.+)?$/);
  if (!n) {
    if (process.env.NODE_ENV !== "production")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The provided shorthand ${`(${t})`} is invalid. The format should be \`@<breakpoint | number>\` or \`@<breakpoint | number>/<container>\`.
For example, \`@sm\` or \`@600\` or \`@40rem/sidebar\`.` : Yo(18, `(${t})`));
    return null;
  }
  const [, o, i] = n, s = Number.isNaN(+o) ? o || 0 : +o;
  return e.containerQueries(i).up(s);
}
function SI(e) {
  const t = (s, a) => s.replace("@media", a ? `@container ${a}` : "@container");
  function n(s, a) {
    s.up = (...l) => t(e.breakpoints.up(...l), a), s.down = (...l) => t(e.breakpoints.down(...l), a), s.between = (...l) => t(e.breakpoints.between(...l), a), s.only = (...l) => t(e.breakpoints.only(...l), a), s.not = (...l) => {
      const c = t(e.breakpoints.not(...l), a);
      return c.includes("not all and") ? c.replace("not all and ", "").replace("min-width:", "width<").replace("max-width:", "width>").replace("and", "or") : c;
    };
  }
  const o = {}, i = (s) => (n(o, s), o);
  return n(i), {
    ...e,
    containerQueries: i
  };
}
const wI = {
  borderRadius: 4
}, Fr = process.env.NODE_ENV !== "production" ? r.oneOfType([r.number, r.string, r.object, r.array]) : {};
function Ws(e, t) {
  return t ? bn(e, t, {
    clone: !1
    // No need to clone deep, it's way faster.
  }) : e;
}
const Dc = {
  xs: 0,
  // phone
  sm: 600,
  // tablet
  md: 900,
  // small laptop
  lg: 1200,
  // desktop
  xl: 1536
  // large screen
}, Og = {
  // Sorted ASC by size. That's important.
  // It can't be configured as it's used statically for propTypes.
  keys: ["xs", "sm", "md", "lg", "xl"],
  up: (e) => `@media (min-width:${Dc[e]}px)`
}, TI = {
  containerQueries: (e) => ({
    up: (t) => {
      let n = typeof t == "number" ? t : Dc[t] || t;
      return typeof n == "number" && (n = `${n}px`), e ? `@container ${e} (min-width:${n})` : `@container (min-width:${n})`;
    }
  })
};
function Hn(e, t, n) {
  const o = e.theme || {};
  if (Array.isArray(t)) {
    const s = o.breakpoints || Og;
    return t.reduce((a, l, c) => (a[s.up(s.keys[c])] = n(t[c]), a), {});
  }
  if (typeof t == "object") {
    const s = o.breakpoints || Og;
    return Object.keys(t).reduce((a, l) => {
      if (xI(s.keys, l)) {
        const c = CI(o.containerQueries ? o : TI, l);
        c && (a[c] = n(t[l], l));
      } else if (Object.keys(s.values || Dc).includes(l)) {
        const c = s.up(l);
        a[c] = n(t[l], l);
      } else {
        const c = l;
        a[c] = t[c];
      }
      return a;
    }, {});
  }
  return n(t);
}
function fy(e = {}) {
  var n;
  return ((n = e.keys) == null ? void 0 : n.reduce((o, i) => {
    const s = e.up(i);
    return o[s] = {}, o;
  }, {})) || {};
}
function my(e, t) {
  return e.reduce((n, o) => {
    const i = n[o];
    return (!i || Object.keys(i).length === 0) && delete n[o], n;
  }, t);
}
function II(e, ...t) {
  const n = fy(e), o = [n, ...t].reduce((i, s) => bn(i, s), {});
  return my(Object.keys(n), o);
}
function RI(e, t) {
  if (typeof e != "object")
    return {};
  const n = {}, o = Object.keys(t);
  return Array.isArray(e) ? o.forEach((i, s) => {
    s < e.length && (n[i] = !0);
  }) : o.forEach((i) => {
    e[i] != null && (n[i] = !0);
  }), n;
}
function Qr({
  values: e,
  breakpoints: t,
  base: n
}) {
  const o = n || RI(e, t), i = Object.keys(o);
  if (i.length === 0)
    return e;
  let s;
  return i.reduce((a, l, c) => (Array.isArray(e) ? (a[l] = e[c] != null ? e[c] : e[s], s = c) : typeof e == "object" ? (a[l] = e[l] != null ? e[l] : e[s], s = l) : a[l] = e, a), {});
}
function ue(e) {
  if (typeof e != "string")
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `capitalize(string)` expects a string argument." : Yo(7));
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function Mc(e, t, n = !0) {
  if (!t || typeof t != "string")
    return null;
  if (e && e.vars && n) {
    const o = `vars.${t}`.split(".").reduce((i, s) => i && i[s] ? i[s] : null, e);
    if (o != null)
      return o;
  }
  return t.split(".").reduce((o, i) => o && o[i] != null ? o[i] : null, e);
}
function Kl(e, t, n, o = n) {
  let i;
  return typeof e == "function" ? i = e(n) : Array.isArray(e) ? i = e[n] || o : i = Mc(e, n) || o, t && (i = t(i, o, e)), i;
}
function sn(e) {
  const {
    prop: t,
    cssProperty: n = e.prop,
    themeKey: o,
    transform: i
  } = e, s = (a) => {
    if (a[t] == null)
      return null;
    const l = a[t], c = a.theme, u = Mc(c, o) || {};
    return Hn(a, l, (p) => {
      let m = Kl(u, i, p);
      return p === m && typeof p == "string" && (m = Kl(u, i, `${t}${p === "default" ? "" : ue(p)}`, p)), n === !1 ? m : {
        [n]: m
      };
    });
  };
  return s.propTypes = process.env.NODE_ENV !== "production" ? {
    [t]: Fr
  } : {}, s.filterProps = [t], s;
}
function OI(e) {
  const t = {};
  return (n) => (t[n] === void 0 && (t[n] = e(n)), t[n]);
}
const EI = {
  m: "margin",
  p: "padding"
}, PI = {
  t: "Top",
  r: "Right",
  b: "Bottom",
  l: "Left",
  x: ["Left", "Right"],
  y: ["Top", "Bottom"]
}, Eg = {
  marginX: "mx",
  marginY: "my",
  paddingX: "px",
  paddingY: "py"
}, AI = OI((e) => {
  if (e.length > 2)
    if (Eg[e])
      e = Eg[e];
    else
      return [e];
  const [t, n] = e.split(""), o = EI[t], i = PI[n] || "";
  return Array.isArray(i) ? i.map((s) => o + s) : [o + i];
}), jc = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"], kc = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"], DI = [...jc, ...kc];
function ja(e, t, n, o) {
  const i = Mc(e, t, !0) ?? n;
  return typeof i == "number" || typeof i == "string" ? (s) => typeof s == "string" ? s : (process.env.NODE_ENV !== "production" && typeof s != "number" && console.error(`MUI: Expected ${o} argument to be a number or a string, got ${s}.`), typeof i == "string" ? `calc(${s} * ${i})` : i * s) : Array.isArray(i) ? (s) => {
    if (typeof s == "string")
      return s;
    const a = Math.abs(s);
    process.env.NODE_ENV !== "production" && (Number.isInteger(a) ? a > i.length - 1 && console.error([`MUI: The value provided (${a}) overflows.`, `The supported values are: ${JSON.stringify(i)}.`, `${a} > ${i.length - 1}, you need to add the missing values.`].join(`
`)) : console.error([`MUI: The \`theme.${t}\` array type cannot be combined with non integer values.You should either use an integer value that can be used as index, or define the \`theme.${t}\` as a number.`].join(`
`)));
    const l = i[a];
    return s >= 0 ? l : typeof l == "number" ? -l : `-${l}`;
  } : typeof i == "function" ? i : (process.env.NODE_ENV !== "production" && console.error([`MUI: The \`theme.${t}\` value (${i}) is invalid.`, "It should be a number, an array or a function."].join(`
`)), () => {
  });
}
function Fc(e) {
  return ja(e, "spacing", 8, "spacing");
}
function oi(e, t) {
  return typeof t == "string" || t == null ? t : e(t);
}
function MI(e, t) {
  return (n) => e.reduce((o, i) => (o[i] = oi(t, n), o), {});
}
function jI(e, t, n, o) {
  if (!t.includes(n))
    return null;
  const i = AI(n), s = MI(i, o), a = e[n];
  return Hn(e, a, s);
}
function gy(e, t) {
  const n = Fc(e.theme);
  return Object.keys(e).map((o) => jI(e, t, o, n)).reduce(Ws, {});
}
function Jt(e) {
  return gy(e, jc);
}
Jt.propTypes = process.env.NODE_ENV !== "production" ? jc.reduce((e, t) => (e[t] = Fr, e), {}) : {};
Jt.filterProps = jc;
function Kt(e) {
  return gy(e, kc);
}
Kt.propTypes = process.env.NODE_ENV !== "production" ? kc.reduce((e, t) => (e[t] = Fr, e), {}) : {};
Kt.filterProps = kc;
process.env.NODE_ENV !== "production" && DI.reduce((e, t) => (e[t] = Fr, e), {});
function hy(e = 8, t = Fc({
  spacing: e
})) {
  if (e.mui)
    return e;
  const n = (...o) => (process.env.NODE_ENV !== "production" && (o.length <= 4 || console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${o.length}`)), (o.length === 0 ? [1] : o).map((s) => {
    const a = t(s);
    return typeof a == "number" ? `${a}px` : a;
  }).join(" "));
  return n.mui = !0, n;
}
function Nc(...e) {
  const t = e.reduce((o, i) => (i.filterProps.forEach((s) => {
    o[s] = i;
  }), o), {}), n = (o) => Object.keys(o).reduce((i, s) => t[s] ? Ws(i, t[s](o)) : i, {});
  return n.propTypes = process.env.NODE_ENV !== "production" ? e.reduce((o, i) => Object.assign(o, i.propTypes), {}) : {}, n.filterProps = e.reduce((o, i) => o.concat(i.filterProps), []), n;
}
function fo(e) {
  return typeof e != "number" ? e : `${e}px solid`;
}
function So(e, t) {
  return sn({
    prop: e,
    themeKey: "borders",
    transform: t
  });
}
const kI = So("border", fo), FI = So("borderTop", fo), NI = So("borderRight", fo), VI = So("borderBottom", fo), $I = So("borderLeft", fo), LI = So("borderColor"), _I = So("borderTopColor"), BI = So("borderRightColor"), zI = So("borderBottomColor"), WI = So("borderLeftColor"), HI = So("outline", fo), GI = So("outlineColor"), Vc = (e) => {
  if (e.borderRadius !== void 0 && e.borderRadius !== null) {
    const t = ja(e.theme, "shape.borderRadius", 4, "borderRadius"), n = (o) => ({
      borderRadius: oi(t, o)
    });
    return Hn(e, e.borderRadius, n);
  }
  return null;
};
Vc.propTypes = process.env.NODE_ENV !== "production" ? {
  borderRadius: Fr
} : {};
Vc.filterProps = ["borderRadius"];
Nc(kI, FI, NI, VI, $I, LI, _I, BI, zI, WI, Vc, HI, GI);
const $c = (e) => {
  if (e.gap !== void 0 && e.gap !== null) {
    const t = ja(e.theme, "spacing", 8, "gap"), n = (o) => ({
      gap: oi(t, o)
    });
    return Hn(e, e.gap, n);
  }
  return null;
};
$c.propTypes = process.env.NODE_ENV !== "production" ? {
  gap: Fr
} : {};
$c.filterProps = ["gap"];
const Lc = (e) => {
  if (e.columnGap !== void 0 && e.columnGap !== null) {
    const t = ja(e.theme, "spacing", 8, "columnGap"), n = (o) => ({
      columnGap: oi(t, o)
    });
    return Hn(e, e.columnGap, n);
  }
  return null;
};
Lc.propTypes = process.env.NODE_ENV !== "production" ? {
  columnGap: Fr
} : {};
Lc.filterProps = ["columnGap"];
const _c = (e) => {
  if (e.rowGap !== void 0 && e.rowGap !== null) {
    const t = ja(e.theme, "spacing", 8, "rowGap"), n = (o) => ({
      rowGap: oi(t, o)
    });
    return Hn(e, e.rowGap, n);
  }
  return null;
};
_c.propTypes = process.env.NODE_ENV !== "production" ? {
  rowGap: Fr
} : {};
_c.filterProps = ["rowGap"];
const UI = sn({
  prop: "gridColumn"
}), XI = sn({
  prop: "gridRow"
}), YI = sn({
  prop: "gridAutoFlow"
}), ZI = sn({
  prop: "gridAutoColumns"
}), qI = sn({
  prop: "gridAutoRows"
}), JI = sn({
  prop: "gridTemplateColumns"
}), KI = sn({
  prop: "gridTemplateRows"
}), QI = sn({
  prop: "gridTemplateAreas"
}), eR = sn({
  prop: "gridArea"
});
Nc($c, Lc, _c, UI, XI, YI, ZI, qI, JI, KI, QI, eR);
function Ni(e, t) {
  return t === "grey" ? t : e;
}
const tR = sn({
  prop: "color",
  themeKey: "palette",
  transform: Ni
}), nR = sn({
  prop: "bgcolor",
  cssProperty: "backgroundColor",
  themeKey: "palette",
  transform: Ni
}), oR = sn({
  prop: "backgroundColor",
  themeKey: "palette",
  transform: Ni
});
Nc(tR, nR, oR);
function qn(e) {
  return e <= 1 && e !== 0 ? `${e * 100}%` : e;
}
const rR = sn({
  prop: "width",
  transform: qn
}), cf = (e) => {
  if (e.maxWidth !== void 0 && e.maxWidth !== null) {
    const t = (n) => {
      var i, s, a, l, c;
      const o = ((a = (s = (i = e.theme) == null ? void 0 : i.breakpoints) == null ? void 0 : s.values) == null ? void 0 : a[n]) || Dc[n];
      return o ? ((c = (l = e.theme) == null ? void 0 : l.breakpoints) == null ? void 0 : c.unit) !== "px" ? {
        maxWidth: `${o}${e.theme.breakpoints.unit}`
      } : {
        maxWidth: o
      } : {
        maxWidth: qn(n)
      };
    };
    return Hn(e, e.maxWidth, t);
  }
  return null;
};
cf.filterProps = ["maxWidth"];
const iR = sn({
  prop: "minWidth",
  transform: qn
}), sR = sn({
  prop: "height",
  transform: qn
}), aR = sn({
  prop: "maxHeight",
  transform: qn
}), lR = sn({
  prop: "minHeight",
  transform: qn
});
sn({
  prop: "size",
  cssProperty: "width",
  transform: qn
});
sn({
  prop: "size",
  cssProperty: "height",
  transform: qn
});
const cR = sn({
  prop: "boxSizing"
});
Nc(rR, cf, iR, sR, aR, lR, cR);
const ka = {
  // borders
  border: {
    themeKey: "borders",
    transform: fo
  },
  borderTop: {
    themeKey: "borders",
    transform: fo
  },
  borderRight: {
    themeKey: "borders",
    transform: fo
  },
  borderBottom: {
    themeKey: "borders",
    transform: fo
  },
  borderLeft: {
    themeKey: "borders",
    transform: fo
  },
  borderColor: {
    themeKey: "palette"
  },
  borderTopColor: {
    themeKey: "palette"
  },
  borderRightColor: {
    themeKey: "palette"
  },
  borderBottomColor: {
    themeKey: "palette"
  },
  borderLeftColor: {
    themeKey: "palette"
  },
  outline: {
    themeKey: "borders",
    transform: fo
  },
  outlineColor: {
    themeKey: "palette"
  },
  borderRadius: {
    themeKey: "shape.borderRadius",
    style: Vc
  },
  // palette
  color: {
    themeKey: "palette",
    transform: Ni
  },
  bgcolor: {
    themeKey: "palette",
    cssProperty: "backgroundColor",
    transform: Ni
  },
  backgroundColor: {
    themeKey: "palette",
    transform: Ni
  },
  // spacing
  p: {
    style: Kt
  },
  pt: {
    style: Kt
  },
  pr: {
    style: Kt
  },
  pb: {
    style: Kt
  },
  pl: {
    style: Kt
  },
  px: {
    style: Kt
  },
  py: {
    style: Kt
  },
  padding: {
    style: Kt
  },
  paddingTop: {
    style: Kt
  },
  paddingRight: {
    style: Kt
  },
  paddingBottom: {
    style: Kt
  },
  paddingLeft: {
    style: Kt
  },
  paddingX: {
    style: Kt
  },
  paddingY: {
    style: Kt
  },
  paddingInline: {
    style: Kt
  },
  paddingInlineStart: {
    style: Kt
  },
  paddingInlineEnd: {
    style: Kt
  },
  paddingBlock: {
    style: Kt
  },
  paddingBlockStart: {
    style: Kt
  },
  paddingBlockEnd: {
    style: Kt
  },
  m: {
    style: Jt
  },
  mt: {
    style: Jt
  },
  mr: {
    style: Jt
  },
  mb: {
    style: Jt
  },
  ml: {
    style: Jt
  },
  mx: {
    style: Jt
  },
  my: {
    style: Jt
  },
  margin: {
    style: Jt
  },
  marginTop: {
    style: Jt
  },
  marginRight: {
    style: Jt
  },
  marginBottom: {
    style: Jt
  },
  marginLeft: {
    style: Jt
  },
  marginX: {
    style: Jt
  },
  marginY: {
    style: Jt
  },
  marginInline: {
    style: Jt
  },
  marginInlineStart: {
    style: Jt
  },
  marginInlineEnd: {
    style: Jt
  },
  marginBlock: {
    style: Jt
  },
  marginBlockStart: {
    style: Jt
  },
  marginBlockEnd: {
    style: Jt
  },
  // display
  displayPrint: {
    cssProperty: !1,
    transform: (e) => ({
      "@media print": {
        display: e
      }
    })
  },
  display: {},
  overflow: {},
  textOverflow: {},
  visibility: {},
  whiteSpace: {},
  // flexbox
  flexBasis: {},
  flexDirection: {},
  flexWrap: {},
  justifyContent: {},
  alignItems: {},
  alignContent: {},
  order: {},
  flex: {},
  flexGrow: {},
  flexShrink: {},
  alignSelf: {},
  justifyItems: {},
  justifySelf: {},
  // grid
  gap: {
    style: $c
  },
  rowGap: {
    style: _c
  },
  columnGap: {
    style: Lc
  },
  gridColumn: {},
  gridRow: {},
  gridAutoFlow: {},
  gridAutoColumns: {},
  gridAutoRows: {},
  gridTemplateColumns: {},
  gridTemplateRows: {},
  gridTemplateAreas: {},
  gridArea: {},
  // positions
  position: {},
  zIndex: {
    themeKey: "zIndex"
  },
  top: {},
  right: {},
  bottom: {},
  left: {},
  // shadows
  boxShadow: {
    themeKey: "shadows"
  },
  // sizing
  width: {
    transform: qn
  },
  maxWidth: {
    style: cf
  },
  minWidth: {
    transform: qn
  },
  height: {
    transform: qn
  },
  maxHeight: {
    transform: qn
  },
  minHeight: {
    transform: qn
  },
  boxSizing: {},
  // typography
  font: {
    themeKey: "font"
  },
  fontFamily: {
    themeKey: "typography"
  },
  fontSize: {
    themeKey: "typography"
  },
  fontStyle: {
    themeKey: "typography"
  },
  fontWeight: {
    themeKey: "typography"
  },
  letterSpacing: {},
  textTransform: {},
  lineHeight: {},
  textAlign: {},
  typography: {
    cssProperty: !1,
    themeKey: "typography"
  }
};
function uR(...e) {
  const t = e.reduce((o, i) => o.concat(Object.keys(i)), []), n = new Set(t);
  return e.every((o) => n.size === Object.keys(o).length);
}
function dR(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function pR() {
  function e(n, o, i, s) {
    const a = {
      [n]: o,
      theme: i
    }, l = s[n];
    if (!l)
      return {
        [n]: o
      };
    const {
      cssProperty: c = n,
      themeKey: u,
      transform: d,
      style: p
    } = l;
    if (o == null)
      return null;
    if (u === "typography" && o === "inherit")
      return {
        [n]: o
      };
    const m = Mc(i, u) || {};
    return p ? p(a) : Hn(a, o, (h) => {
      let v = Kl(m, d, h);
      return h === v && typeof h == "string" && (v = Kl(m, d, `${n}${h === "default" ? "" : ue(h)}`, h)), c === !1 ? v : {
        [c]: v
      };
    });
  }
  function t(n) {
    const {
      sx: o,
      theme: i = {}
    } = n || {};
    if (!o)
      return null;
    const s = i.unstable_sxConfig ?? ka;
    function a(l) {
      let c = l;
      if (typeof l == "function")
        c = l(i);
      else if (typeof l != "object")
        return l;
      if (!c)
        return null;
      const u = fy(i.breakpoints), d = Object.keys(u);
      let p = u;
      return Object.keys(c).forEach((m) => {
        const g = dR(c[m], i);
        if (g != null)
          if (typeof g == "object")
            if (s[m])
              p = Ws(p, e(m, g, i, s));
            else {
              const h = Hn({
                theme: i
              }, g, (v) => ({
                [m]: v
              }));
              uR(h, g) ? p[m] = t({
                sx: g,
                theme: i
              }) : p = Ws(p, h);
            }
          else
            p = Ws(p, e(m, g, i, s));
      }), yI(i, my(d, p));
    }
    return Array.isArray(o) ? o.map(a) : a(o);
  }
  return t;
}
const pi = pR();
pi.filterProps = ["sx"];
function fR(e, t) {
  var o;
  const n = this;
  if (n.vars) {
    if (!((o = n.colorSchemes) != null && o[e]) || typeof n.getColorSchemeSelector != "function")
      return {};
    let i = n.getColorSchemeSelector(e);
    return i === "&" ? t : ((i.includes("data-") || i.includes(".")) && (i = `*:where(${i.replace(/\s*&$/, "")}) &`), {
      [i]: t
    });
  }
  return n.palette.mode === e ? t : {};
}
function Bc(e = {}, ...t) {
  const {
    breakpoints: n = {},
    palette: o = {},
    spacing: i,
    shape: s = {},
    ...a
  } = e, l = vI(n), c = hy(i);
  let u = bn({
    breakpoints: l,
    direction: "ltr",
    components: {},
    // Inject component definitions.
    palette: {
      mode: "light",
      ...o
    },
    spacing: c,
    shape: {
      ...wI,
      ...s
    }
  }, a);
  return u = SI(u), u.applyStyles = fR, u = t.reduce((d, p) => bn(d, p), u), u.unstable_sxConfig = {
    ...ka,
    ...a == null ? void 0 : a.unstable_sxConfig
  }, u.unstable_sx = function(p) {
    return pi({
      sx: p,
      theme: this
    });
  }, u;
}
function mR(e) {
  return Object.keys(e).length === 0;
}
function uf(e = null) {
  const t = S.useContext(Ma);
  return !t || mR(t) ? e : t;
}
const gR = Bc();
function zc(e = gR) {
  return uf(e);
}
function by({
  styles: e,
  themeId: t,
  defaultTheme: n = {}
}) {
  const o = zc(n), i = typeof e == "function" ? e(t && o[t] || o) : e;
  return /* @__PURE__ */ f.jsx(lf, {
    styles: i
  });
}
process.env.NODE_ENV !== "production" && (by.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  defaultTheme: r.object,
  /**
   * @ignore
   */
  styles: r.oneOfType([r.array, r.func, r.number, r.object, r.string, r.bool]),
  /**
   * @ignore
   */
  themeId: r.string
});
const hR = (e) => {
  var o;
  const t = {
    systemProps: {},
    otherProps: {}
  }, n = ((o = e == null ? void 0 : e.theme) == null ? void 0 : o.unstable_sxConfig) ?? ka;
  return Object.keys(e).forEach((i) => {
    n[i] ? t.systemProps[i] = e[i] : t.otherProps[i] = e[i];
  }), t;
};
function Wc(e) {
  const {
    sx: t,
    ...n
  } = e, {
    systemProps: o,
    otherProps: i
  } = hR(n);
  let s;
  return Array.isArray(t) ? s = [o, ...t] : typeof t == "function" ? s = (...a) => {
    const l = t(...a);
    return Wo(l) ? {
      ...o,
      ...l
    } : o;
  } : s = {
    ...o,
    ...t
  }, {
    ...i,
    sx: s
  };
}
const Pg = (e) => e, bR = () => {
  let e = Pg;
  return {
    configure(t) {
      e = t;
    },
    generate(t) {
      return e(t);
    },
    reset() {
      e = Pg;
    }
  };
}, vy = bR();
function yy(e) {
  var t, n, o = "";
  if (typeof e == "string" || typeof e == "number") o += e;
  else if (typeof e == "object") if (Array.isArray(e)) {
    var i = e.length;
    for (t = 0; t < i; t++) e[t] && (n = yy(e[t])) && (o && (o += " "), o += n);
  } else for (n in e) e[n] && (o && (o += " "), o += n);
  return o;
}
function fe() {
  for (var e, t, n = 0, o = "", i = arguments.length; n < i; n++) (e = arguments[n]) && (t = yy(e)) && (o && (o += " "), o += t);
  return o;
}
function vR(e = {}) {
  const {
    themeId: t,
    defaultTheme: n,
    defaultClassName: o = "MuiBox-root",
    generateClassName: i
  } = e, s = dy("div", {
    shouldForwardProp: (l) => l !== "theme" && l !== "sx" && l !== "as"
  })(pi);
  return /* @__PURE__ */ S.forwardRef(function(c, u) {
    const d = zc(n), {
      className: p,
      component: m = "div",
      ...g
    } = Wc(c);
    return /* @__PURE__ */ f.jsx(s, {
      as: m,
      ref: u,
      className: fe(p, i ? i(o) : o),
      theme: t && d[t] || d,
      ...g
    });
  });
}
const yR = {
  active: "active",
  checked: "checked",
  completed: "completed",
  disabled: "disabled",
  error: "error",
  expanded: "expanded",
  focused: "focused",
  focusVisible: "focusVisible",
  open: "open",
  readOnly: "readOnly",
  required: "required",
  selected: "selected"
};
function We(e, t, n = "Mui") {
  const o = yR[t];
  return o ? `${n}-${o}` : `${vy.generate(e)}-${t}`;
}
function _e(e, t, n = "Mui") {
  const o = {};
  return t.forEach((i) => {
    o[i] = We(e, i, n);
  }), o;
}
var tp = { exports: {} }, kt = {};
/**
 * @license React
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Ag;
function xR() {
  if (Ag) return kt;
  Ag = 1;
  var e = Symbol.for("react.element"), t = Symbol.for("react.portal"), n = Symbol.for("react.fragment"), o = Symbol.for("react.strict_mode"), i = Symbol.for("react.profiler"), s = Symbol.for("react.provider"), a = Symbol.for("react.context"), l = Symbol.for("react.server_context"), c = Symbol.for("react.forward_ref"), u = Symbol.for("react.suspense"), d = Symbol.for("react.suspense_list"), p = Symbol.for("react.memo"), m = Symbol.for("react.lazy"), g = Symbol.for("react.offscreen"), h;
  h = Symbol.for("react.module.reference");
  function v(b) {
    if (typeof b == "object" && b !== null) {
      var y = b.$$typeof;
      switch (y) {
        case e:
          switch (b = b.type, b) {
            case n:
            case i:
            case o:
            case u:
            case d:
              return b;
            default:
              switch (b = b && b.$$typeof, b) {
                case l:
                case a:
                case c:
                case m:
                case p:
                case s:
                  return b;
                default:
                  return y;
              }
          }
        case t:
          return y;
      }
    }
  }
  return kt.ContextConsumer = a, kt.ContextProvider = s, kt.Element = e, kt.ForwardRef = c, kt.Fragment = n, kt.Lazy = m, kt.Memo = p, kt.Portal = t, kt.Profiler = i, kt.StrictMode = o, kt.Suspense = u, kt.SuspenseList = d, kt.isAsyncMode = function() {
    return !1;
  }, kt.isConcurrentMode = function() {
    return !1;
  }, kt.isContextConsumer = function(b) {
    return v(b) === a;
  }, kt.isContextProvider = function(b) {
    return v(b) === s;
  }, kt.isElement = function(b) {
    return typeof b == "object" && b !== null && b.$$typeof === e;
  }, kt.isForwardRef = function(b) {
    return v(b) === c;
  }, kt.isFragment = function(b) {
    return v(b) === n;
  }, kt.isLazy = function(b) {
    return v(b) === m;
  }, kt.isMemo = function(b) {
    return v(b) === p;
  }, kt.isPortal = function(b) {
    return v(b) === t;
  }, kt.isProfiler = function(b) {
    return v(b) === i;
  }, kt.isStrictMode = function(b) {
    return v(b) === o;
  }, kt.isSuspense = function(b) {
    return v(b) === u;
  }, kt.isSuspenseList = function(b) {
    return v(b) === d;
  }, kt.isValidElementType = function(b) {
    return typeof b == "string" || typeof b == "function" || b === n || b === i || b === o || b === u || b === d || b === g || typeof b == "object" && b !== null && (b.$$typeof === m || b.$$typeof === p || b.$$typeof === s || b.$$typeof === a || b.$$typeof === c || b.$$typeof === h || b.getModuleId !== void 0);
  }, kt.typeOf = v, kt;
}
var Ft = {};
/**
 * @license React
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Dg;
function CR() {
  return Dg || (Dg = 1, process.env.NODE_ENV !== "production" && function() {
    var e = Symbol.for("react.element"), t = Symbol.for("react.portal"), n = Symbol.for("react.fragment"), o = Symbol.for("react.strict_mode"), i = Symbol.for("react.profiler"), s = Symbol.for("react.provider"), a = Symbol.for("react.context"), l = Symbol.for("react.server_context"), c = Symbol.for("react.forward_ref"), u = Symbol.for("react.suspense"), d = Symbol.for("react.suspense_list"), p = Symbol.for("react.memo"), m = Symbol.for("react.lazy"), g = Symbol.for("react.offscreen"), h = !1, v = !1, b = !1, y = !1, C = !1, x;
    x = Symbol.for("react.module.reference");
    function T(_) {
      return !!(typeof _ == "string" || typeof _ == "function" || _ === n || _ === i || C || _ === o || _ === u || _ === d || y || _ === g || h || v || b || typeof _ == "object" && _ !== null && (_.$$typeof === m || _.$$typeof === p || _.$$typeof === s || _.$$typeof === a || _.$$typeof === c || // This needs to include all possible module reference object
      // types supported by any Flight configuration anywhere since
      // we don't know which Flight build this will end up being used
      // with.
      _.$$typeof === x || _.getModuleId !== void 0));
    }
    function w(_) {
      if (typeof _ == "object" && _ !== null) {
        var oe = _.$$typeof;
        switch (oe) {
          case e:
            var te = _.type;
            switch (te) {
              case n:
              case i:
              case o:
              case u:
              case d:
                return te;
              default:
                var se = te && te.$$typeof;
                switch (se) {
                  case l:
                  case a:
                  case c:
                  case m:
                  case p:
                  case s:
                    return se;
                  default:
                    return oe;
                }
            }
          case t:
            return oe;
        }
      }
    }
    var R = a, E = s, O = e, I = c, P = n, A = m, D = p, k = t, M = i, F = o, N = u, W = d, H = !1, B = !1;
    function j(_) {
      return H || (H = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.")), !1;
    }
    function L(_) {
      return B || (B = !0, console.warn("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.")), !1;
    }
    function ee(_) {
      return w(_) === a;
    }
    function Y(_) {
      return w(_) === s;
    }
    function $(_) {
      return typeof _ == "object" && _ !== null && _.$$typeof === e;
    }
    function U(_) {
      return w(_) === c;
    }
    function X(_) {
      return w(_) === n;
    }
    function Z(_) {
      return w(_) === m;
    }
    function G(_) {
      return w(_) === p;
    }
    function K(_) {
      return w(_) === t;
    }
    function re(_) {
      return w(_) === i;
    }
    function ne(_) {
      return w(_) === o;
    }
    function z(_) {
      return w(_) === u;
    }
    function q(_) {
      return w(_) === d;
    }
    Ft.ContextConsumer = R, Ft.ContextProvider = E, Ft.Element = O, Ft.ForwardRef = I, Ft.Fragment = P, Ft.Lazy = A, Ft.Memo = D, Ft.Portal = k, Ft.Profiler = M, Ft.StrictMode = F, Ft.Suspense = N, Ft.SuspenseList = W, Ft.isAsyncMode = j, Ft.isConcurrentMode = L, Ft.isContextConsumer = ee, Ft.isContextProvider = Y, Ft.isElement = $, Ft.isForwardRef = U, Ft.isFragment = X, Ft.isLazy = Z, Ft.isMemo = G, Ft.isPortal = K, Ft.isProfiler = re, Ft.isStrictMode = ne, Ft.isSuspense = z, Ft.isSuspenseList = q, Ft.isValidElementType = T, Ft.typeOf = w;
  }()), Ft;
}
process.env.NODE_ENV === "production" ? tp.exports = xR() : tp.exports = CR();
var Mg = tp.exports;
function xy(e, t = "") {
  return e.displayName || e.name || t;
}
function jg(e, t, n) {
  const o = xy(t);
  return e.displayName || (o !== "" ? `${n}(${o})` : n);
}
function SR(e) {
  if (e != null) {
    if (typeof e == "string")
      return e;
    if (typeof e == "function")
      return xy(e, "Component");
    if (typeof e == "object")
      switch (e.$$typeof) {
        case Mg.ForwardRef:
          return jg(e, e.render, "ForwardRef");
        case Mg.Memo:
          return jg(e, e.type, "memo");
        default:
          return;
      }
  }
}
const wR = Bc();
function rd(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
function np(e, t, n) {
  return IR(t) ? n : t[e] || t;
}
const tl = Symbol("mui.processed_props");
function nl(e, t, n) {
  if (tl in e)
    return e[tl];
  const o = {
    ...e,
    theme: np(t, e.theme, n)
  };
  return e[tl] = o, o[tl] = o, o;
}
function TR(e) {
  return e ? (t, n) => n[e] : null;
}
function Ll(e, t) {
  var o;
  const n = typeof e == "function" ? e(t) : e;
  if (Array.isArray(n))
    return n.flatMap((i) => Ll(i, t));
  if (Array.isArray(n == null ? void 0 : n.variants)) {
    const {
      variants: i,
      ...s
    } = n;
    let a = s, l;
    e: for (let c = 0; c < i.length; c += 1) {
      const u = i[c];
      if (typeof u.props == "function") {
        if (l ?? (l = {
          ...t,
          ...t.ownerState,
          ownerState: t.ownerState
        }), !u.props(l))
          continue;
      } else
        for (const d in u.props)
          if (t[d] !== u.props[d] && ((o = t.ownerState) == null ? void 0 : o[d]) !== u.props[d])
            continue e;
      Array.isArray(a) || (a = [a]), typeof u.style == "function" ? (l ?? (l = {
        ...t,
        ...t.ownerState,
        ownerState: t.ownerState
      }), a.push(u.style(l))) : a.push(u.style);
    }
    return a;
  }
  return n;
}
function Cy(e = {}) {
  const {
    themeId: t,
    defaultTheme: n = wR,
    rootShouldForwardProp: o = rd,
    slotShouldForwardProp: i = rd
  } = e, s = (l) => pi(nl(l, t, n));
  return s.__mui_systemSx = !0, (l, c = {}) => {
    hI(l, (R) => R.filter((E) => !(E != null && E.__mui_systemSx)));
    const {
      name: u,
      slot: d,
      skipVariantsResolver: p,
      skipSx: m,
      // TODO v6: remove `lowercaseFirstLetter()` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      overridesResolver: g = TR(kg(d)),
      ...h
    } = c, v = p !== void 0 ? p : (
      // TODO v6: remove `Root` in the next major release
      // For more details: https://github.com/mui/material-ui/pull/37908
      d && d !== "Root" && d !== "root" || !1
    ), b = m || !1;
    let y;
    process.env.NODE_ENV !== "production" && u && (y = `${u}-${kg(d || "Root")}`);
    let C = rd;
    d === "Root" || d === "root" ? C = o : d ? C = i : RR(l) && (C = void 0);
    const x = dy(l, {
      shouldForwardProp: C,
      label: y,
      ...h
    }), T = (R) => typeof R == "function" && R.__emotion_real !== R || Wo(R) ? (E) => Ll(R, nl(E, t, n)) : R, w = (R, ...E) => {
      let O = T(R);
      const I = E ? E.map(T) : [];
      u && g && I.push((D) => {
        const k = np(t, D.theme, n);
        if (!k.components || !k.components[u] || !k.components[u].styleOverrides)
          return null;
        const M = k.components[u].styleOverrides, F = {}, N = nl(D, t, n);
        for (const W in M)
          F[W] = Ll(M[W], N);
        return g(D, F);
      }), u && !v && I.push((D) => {
        var F, N;
        const k = np(t, D.theme, n), M = (N = (F = k == null ? void 0 : k.components) == null ? void 0 : F[u]) == null ? void 0 : N.variants;
        return M ? Ll({
          variants: M
        }, nl(D, t, n)) : null;
      }), b || I.push(s);
      const P = I.length - E.length;
      if (Array.isArray(R) && P > 0) {
        const D = new Array(P).fill("");
        O = [...R, ...D], O.raw = [...R.raw, ...D];
      }
      const A = x(O, ...I);
      if (process.env.NODE_ENV !== "production") {
        let D;
        u && (D = `${u}${ue(d || "")}`), D === void 0 && (D = `Styled(${SR(l)})`), A.displayName = D;
      }
      return l.muiName && (A.muiName = l.muiName), A;
    };
    return x.withConfig && (w.withConfig = x.withConfig), w;
  };
}
function IR(e) {
  for (const t in e)
    return !1;
  return !0;
}
function RR(e) {
  return typeof e == "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  e.charCodeAt(0) > 96;
}
function kg(e) {
  return e && e.charAt(0).toLowerCase() + e.slice(1);
}
const OR = Cy();
function ca(e, t) {
  const n = {
    ...t
  };
  for (const o in e)
    if (Object.prototype.hasOwnProperty.call(e, o)) {
      const i = o;
      if (i === "components" || i === "slots")
        n[i] = {
          ...e[i],
          ...n[i]
        };
      else if (i === "componentsProps" || i === "slotProps") {
        const s = e[i], a = t[i];
        if (!a)
          n[i] = s || {};
        else if (!s)
          n[i] = a;
        else {
          n[i] = {
            ...a
          };
          for (const l in s)
            if (Object.prototype.hasOwnProperty.call(s, l)) {
              const c = l;
              n[i][c] = ca(s[c], a[c]);
            }
        }
      } else n[i] === void 0 && (n[i] = e[i]);
    }
  return n;
}
function Sy(e) {
  const {
    theme: t,
    name: n,
    props: o
  } = e;
  return !t || !t.components || !t.components[n] || !t.components[n].defaultProps ? o : ca(t.components[n].defaultProps, o);
}
function wy({
  props: e,
  name: t,
  defaultTheme: n,
  themeId: o
}) {
  let i = zc(n);
  return o && (i = i[o] || i), Sy({
    theme: i,
    name: t,
    props: e
  });
}
const to = typeof window < "u" ? S.useLayoutEffect : S.useEffect;
function ER(e, t, n, o, i) {
  const [s, a] = S.useState(() => i && n ? n(e).matches : o ? o(e).matches : t);
  return to(() => {
    if (!n)
      return;
    const l = n(e), c = () => {
      a(l.matches);
    };
    return c(), l.addEventListener("change", c), () => {
      l.removeEventListener("change", c);
    };
  }, [e, n]), s;
}
const PR = {
  ...S
}, Ty = PR.useSyncExternalStore;
function AR(e, t, n, o, i) {
  const s = S.useCallback(() => t, [t]), a = S.useMemo(() => {
    if (i && n)
      return () => n(e).matches;
    if (o !== null) {
      const {
        matches: d
      } = o(e);
      return () => d;
    }
    return s;
  }, [s, e, o, i, n]), [l, c] = S.useMemo(() => {
    if (n === null)
      return [s, () => () => {
      }];
    const d = n(e);
    return [() => d.matches, (p) => (d.addEventListener("change", p), () => {
      d.removeEventListener("change", p);
    })];
  }, [s, n, e]);
  return Ty(c, l, a);
}
function Pr(e, t = {}) {
  const n = uf(), o = typeof window < "u" && typeof window.matchMedia < "u", {
    defaultMatches: i = !1,
    matchMedia: s = o ? window.matchMedia : null,
    ssrMatchMedia: a = null,
    noSsr: l = !1
  } = Sy({
    name: "MuiUseMediaQuery",
    props: t,
    theme: n
  });
  process.env.NODE_ENV !== "production" && typeof e == "function" && n === null && console.error(["MUI: The `query` argument provided is invalid.", "You are providing a function without a theme in the context.", "One of the parent elements needs to use a ThemeProvider."].join(`
`));
  let c = typeof e == "function" ? e(n) : e;
  c = c.replace(/^@media( ?)/m, "");
  const d = (Ty !== void 0 ? AR : ER)(c, i, s, a, l);
  return process.env.NODE_ENV !== "production" && S.useDebugValue({
    query: c,
    match: d
  }), d;
}
function Pi(e, t = Number.MIN_SAFE_INTEGER, n = Number.MAX_SAFE_INTEGER) {
  return Math.max(t, Math.min(e, n));
}
function df(e, t = 0, n = 1) {
  return process.env.NODE_ENV !== "production" && (e < t || e > n) && console.error(`MUI: The value provided ${e} is out of range [${t}, ${n}].`), Pi(e, t, n);
}
function DR(e) {
  e = e.slice(1);
  const t = new RegExp(`.{1,${e.length >= 6 ? 2 : 1}}`, "g");
  let n = e.match(t);
  return n && n[0].length === 1 && (n = n.map((o) => o + o)), n ? `rgb${n.length === 4 ? "a" : ""}(${n.map((o, i) => i < 3 ? parseInt(o, 16) : Math.round(parseInt(o, 16) / 255 * 1e3) / 1e3).join(", ")})` : "";
}
function Ar(e) {
  if (e.type)
    return e;
  if (e.charAt(0) === "#")
    return Ar(DR(e));
  const t = e.indexOf("("), n = e.substring(0, t);
  if (!["rgb", "rgba", "hsl", "hsla", "color"].includes(n))
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: Unsupported \`${e}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : Yo(9, e));
  let o = e.substring(t + 1, e.length - 1), i;
  if (n === "color") {
    if (o = o.split(" "), i = o.shift(), o.length === 4 && o[3].charAt(0) === "/" && (o[3] = o[3].slice(1)), !["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].includes(i))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: unsupported \`${i}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : Yo(10, i));
  } else
    o = o.split(",");
  return o = o.map((s) => parseFloat(s)), {
    type: n,
    values: o,
    colorSpace: i
  };
}
const MR = (e) => {
  const t = Ar(e);
  return t.values.slice(0, 3).map((n, o) => t.type.includes("hsl") && o !== 0 ? `${n}%` : n).join(" ");
}, Ns = (e, t) => {
  try {
    return MR(e);
  } catch {
    return t && process.env.NODE_ENV !== "production" && console.warn(t), e;
  }
};
function Hc(e) {
  const {
    type: t,
    colorSpace: n
  } = e;
  let {
    values: o
  } = e;
  return t.includes("rgb") ? o = o.map((i, s) => s < 3 ? parseInt(i, 10) : i) : t.includes("hsl") && (o[1] = `${o[1]}%`, o[2] = `${o[2]}%`), t.includes("color") ? o = `${n} ${o.join(" ")}` : o = `${o.join(", ")}`, `${t}(${o})`;
}
function Iy(e) {
  e = Ar(e);
  const {
    values: t
  } = e, n = t[0], o = t[1] / 100, i = t[2] / 100, s = o * Math.min(i, 1 - i), a = (u, d = (u + n / 30) % 12) => i - s * Math.max(Math.min(d - 3, 9 - d, 1), -1);
  let l = "rgb";
  const c = [Math.round(a(0) * 255), Math.round(a(8) * 255), Math.round(a(4) * 255)];
  return e.type === "hsla" && (l += "a", c.push(t[3])), Hc({
    type: l,
    values: c
  });
}
function op(e) {
  e = Ar(e);
  let t = e.type === "hsl" || e.type === "hsla" ? Ar(Iy(e)).values : e.values;
  return t = t.map((n) => (e.type !== "color" && (n /= 255), n <= 0.03928 ? n / 12.92 : ((n + 0.055) / 1.055) ** 2.4)), Number((0.2126 * t[0] + 0.7152 * t[1] + 0.0722 * t[2]).toFixed(3));
}
function Fg(e, t) {
  const n = op(e), o = op(t);
  return (Math.max(n, o) + 0.05) / (Math.min(n, o) + 0.05);
}
function ze(e, t) {
  return e = Ar(e), t = df(t), (e.type === "rgb" || e.type === "hsl") && (e.type += "a"), e.type === "color" ? e.values[3] = `/${t}` : e.values[3] = t, Hc(e);
}
function ol(e, t, n) {
  try {
    return ze(e, t);
  } catch {
    return e;
  }
}
function no(e, t) {
  if (e = Ar(e), t = df(t), e.type.includes("hsl"))
    e.values[2] *= 1 - t;
  else if (e.type.includes("rgb") || e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] *= 1 - t;
  return Hc(e);
}
function zt(e, t, n) {
  try {
    return no(e, t);
  } catch {
    return e;
  }
}
function $n(e, t) {
  if (e = Ar(e), t = df(t), e.type.includes("hsl"))
    e.values[2] += (100 - e.values[2]) * t;
  else if (e.type.includes("rgb"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (255 - e.values[n]) * t;
  else if (e.type.includes("color"))
    for (let n = 0; n < 3; n += 1)
      e.values[n] += (1 - e.values[n]) * t;
  return Hc(e);
}
function Wt(e, t, n) {
  try {
    return $n(e, t);
  } catch {
    return e;
  }
}
function jR(e, t = 0.15) {
  return op(e) > 0.5 ? no(e, t) : $n(e, t);
}
function rl(e, t, n) {
  try {
    return jR(e, t);
  } catch {
    return e;
  }
}
function oo(e, t) {
  return process.env.NODE_ENV === "production" ? () => null : function(...o) {
    return e(...o) || t(...o);
  };
}
function kR(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function Ry(e, t, n, o, i) {
  const s = e[t], a = i || t;
  if (s == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for Emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  const c = s.type;
  return typeof c == "function" && !kR(c) && (l = "Did you accidentally use a plain function component for an element instead?"), l !== void 0 ? new Error(`Invalid ${o} \`${a}\` supplied to \`${n}\`. Expected an element that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const rs = oo(r.element, Ry);
rs.isRequired = oo(r.element.isRequired, Ry);
function FR(e) {
  const {
    prototype: t = {}
  } = e;
  return !!t.isReactComponent;
}
function NR(e, t, n, o, i) {
  const s = e[t], a = i || t;
  if (s == null || // When server-side rendering React doesn't warn either.
  // This is not an accurate check for SSR.
  // This is only in place for emotion compat.
  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.
  typeof window > "u")
    return null;
  let l;
  return typeof s == "function" && !FR(s) && (l = "Did you accidentally provide a plain function component instead?"), l !== void 0 ? new Error(`Invalid ${o} \`${a}\` supplied to \`${n}\`. Expected an element type that can hold a ref. ${l} For more information see https://mui.com/r/caveat-with-refs-guide`) : null;
}
const Fa = oo(r.elementType, NR), VR = "exact-prop: ​";
function Gc(e) {
  return process.env.NODE_ENV === "production" ? e : {
    ...e,
    [VR]: (t) => {
      const n = Object.keys(t).filter((o) => !e.hasOwnProperty(o));
      return n.length > 0 ? new Error(`The following props are not supported: ${n.map((o) => `\`${o}\``).join(", ")}. Please remove them.`) : null;
    }
  };
}
function ur(e, t, n, o, i) {
  if (process.env.NODE_ENV === "production")
    return null;
  const s = e[t], a = i || t;
  return s == null ? null : s && s.nodeType !== 1 ? new Error(`Invalid ${o} \`${a}\` supplied to \`${n}\`. Expected an HTMLElement.`) : null;
}
const In = r.oneOfType([r.func, r.object]);
function rp(...e) {
  return e.reduce((t, n) => n == null ? t : function(...i) {
    t.apply(this, i), n.apply(this, i);
  }, () => {
  });
}
function is(e, t = 166) {
  let n;
  function o(...i) {
    const s = () => {
      e.apply(this, i);
    };
    clearTimeout(n), n = setTimeout(s, t);
  }
  return o.clear = () => {
    clearTimeout(n);
  }, o;
}
function Hs(e, t) {
  var n, o, i;
  return /* @__PURE__ */ S.isValidElement(e) && t.indexOf(
    // For server components `muiName` is avaialble in element.type._payload.value.muiName
    // relevant info - https://github.com/facebook/react/blob/2807d781a08db8e9873687fccc25c0f12b4fb3d4/packages/react/src/ReactLazy.js#L45
    // eslint-disable-next-line no-underscore-dangle
    e.type.muiName ?? ((i = (o = (n = e.type) == null ? void 0 : n._payload) == null ? void 0 : o.value) == null ? void 0 : i.muiName)
  ) !== -1;
}
function dn(e) {
  return e && e.ownerDocument || document;
}
function dr(e) {
  return dn(e).defaultView || window;
}
function $R(e, t) {
  if (process.env.NODE_ENV === "production")
    return () => null;
  const n = t ? {
    ...t.propTypes
  } : null;
  return (i) => (s, a, l, c, u, ...d) => {
    const p = u || a, m = n == null ? void 0 : n[p];
    if (m) {
      const g = m(s, a, l, c, u, ...d);
      if (g)
        return g;
    }
    return typeof s[a] < "u" && !s[i] ? new Error(`The prop \`${p}\` of \`${e}\` can only be used together with the \`${i}\` prop.`) : null;
  };
}
function Ql(e, t) {
  typeof e == "function" ? e(t) : e && (e.current = t);
}
let Ng = 0;
function LR(e) {
  const [t, n] = S.useState(e), o = e || t;
  return S.useEffect(() => {
    t == null && (Ng += 1, n(`mui-${Ng}`));
  }, [t]), o;
}
const _R = {
  ...S
}, Vg = _R.useId;
function Na(e) {
  if (Vg !== void 0) {
    const t = Vg();
    return e ?? t;
  }
  return LR(e);
}
function Oy(e, t, n, o, i) {
  if (process.env.NODE_ENV === "production")
    return null;
  const s = i || t;
  return typeof e[t] < "u" ? new Error(`The prop \`${s}\` is not supported. Please remove it.`) : null;
}
function ir({
  controlled: e,
  default: t,
  name: n,
  state: o = "value"
}) {
  const {
    current: i
  } = S.useRef(e !== void 0), [s, a] = S.useState(t), l = i ? e : s;
  if (process.env.NODE_ENV !== "production") {
    S.useEffect(() => {
      i !== (e !== void 0) && console.error([`MUI: A component is changing the ${i ? "" : "un"}controlled ${o} state of ${n} to be ${i ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", `Decide between using a controlled or uncontrolled ${n} element for the lifetime of the component.`, "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join(`
`));
    }, [o, n, e]);
    const {
      current: u
    } = S.useRef(t);
    S.useEffect(() => {
      !i && !Object.is(u, t) && console.error([`MUI: A component is changing the default ${o} state of an uncontrolled ${n} after being initialized. To suppress this warning opt to use a controlled ${n}.`].join(`
`));
    }, [JSON.stringify(t)]);
  }
  const c = S.useCallback((u) => {
    i || a(u);
  }, []);
  return [l, c];
}
function hn(e) {
  const t = S.useRef(e);
  return to(() => {
    t.current = e;
  }), S.useRef((...n) => (
    // @ts-expect-error hide `this`
    (0, t.current)(...n)
  )).current;
}
function Yt(...e) {
  return S.useMemo(() => e.every((t) => t == null) ? null : (t) => {
    e.forEach((n) => {
      Ql(n, t);
    });
  }, e);
}
const $g = {};
function Ey(e, t) {
  const n = S.useRef($g);
  return n.current === $g && (n.current = e(t)), n;
}
const BR = [];
function zR(e) {
  S.useEffect(e, BR);
}
class Uc {
  constructor() {
    ys(this, "currentId", null);
    ys(this, "clear", () => {
      this.currentId !== null && (clearTimeout(this.currentId), this.currentId = null);
    });
    ys(this, "disposeEffect", () => this.clear);
  }
  static create() {
    return new Uc();
  }
  /**
   * Executes `fn` after `delay`, clearing any previously scheduled call.
   */
  start(t, n) {
    this.clear(), this.currentId = setTimeout(() => {
      this.currentId = null, n();
    }, t);
  }
}
function qr() {
  const e = Ey(Uc.create).current;
  return zR(e.disposeEffect), e;
}
function Gi(e) {
  try {
    return e.matches(":focus-visible");
  } catch {
    process.env.NODE_ENV !== "production" && !/jsdom/.test(window.navigator.userAgent) && console.warn(["MUI: The `:focus-visible` pseudo class is not supported in this browser.", "Some components rely on this feature to work properly."].join(`
`));
  }
  return !1;
}
function Py(e) {
  const t = e.documentElement.clientWidth;
  return Math.abs(window.innerWidth - t);
}
const pf = (e) => {
  const t = S.useRef({});
  return S.useEffect(() => {
    t.current = e;
  }), t.current;
}, WR = {
  border: 0,
  clip: "rect(0 0 0 0)",
  height: "1px",
  margin: "-1px",
  overflow: "hidden",
  padding: 0,
  position: "absolute",
  whiteSpace: "nowrap",
  width: "1px"
};
function HR(e) {
  const t = typeof e;
  switch (t) {
    case "number":
      return Number.isNaN(e) ? "NaN" : Number.isFinite(e) ? e !== Math.floor(e) ? "float" : "number" : "Infinity";
    case "object":
      return e === null ? "null" : e.constructor.name;
    default:
      return t;
  }
}
function Ay(e, t, n, o) {
  const i = e[t];
  if (i == null || !Number.isInteger(i)) {
    const s = HR(i);
    return new RangeError(`Invalid ${o} \`${t}\` of type \`${s}\` supplied to \`${n}\`, expected \`integer\`.`);
  }
  return null;
}
function Dy(e, t, ...n) {
  return e[t] === void 0 ? null : Ay(e, t, ...n);
}
function ip() {
  return null;
}
Dy.isRequired = Ay;
ip.isRequired = ip;
const wr = process.env.NODE_ENV === "production" ? ip : Dy;
function Ue(e, t, n = void 0) {
  const o = {};
  for (const i in e) {
    const s = e[i];
    let a = "", l = !0;
    for (let c = 0; c < s.length; c += 1) {
      const u = s[c];
      u && (a += (l === !0 ? "" : " ") + t(u), l = !1, n && n[u] && (a += " " + n[u]));
    }
    o[i] = a;
  }
  return o;
}
function GR(e) {
  return typeof e == "string";
}
function ji(e, t, n) {
  return e === void 0 || GR(e) ? t : {
    ...t,
    ownerState: {
      ...t.ownerState,
      ...n
    }
  };
}
function Gs(e, t = []) {
  if (e === void 0)
    return {};
  const n = {};
  return Object.keys(e).filter((o) => o.match(/^on[A-Z]/) && typeof e[o] == "function" && !t.includes(o)).forEach((o) => {
    n[o] = e[o];
  }), n;
}
function Lg(e) {
  if (e === void 0)
    return {};
  const t = {};
  return Object.keys(e).filter((n) => !(n.match(/^on[A-Z]/) && typeof e[n] == "function")).forEach((n) => {
    t[n] = e[n];
  }), t;
}
function My(e) {
  const {
    getSlotProps: t,
    additionalProps: n,
    externalSlotProps: o,
    externalForwardedProps: i,
    className: s
  } = e;
  if (!t) {
    const g = fe(n == null ? void 0 : n.className, s, i == null ? void 0 : i.className, o == null ? void 0 : o.className), h = {
      ...n == null ? void 0 : n.style,
      ...i == null ? void 0 : i.style,
      ...o == null ? void 0 : o.style
    }, v = {
      ...n,
      ...i,
      ...o
    };
    return g.length > 0 && (v.className = g), Object.keys(h).length > 0 && (v.style = h), {
      props: v,
      internalRef: void 0
    };
  }
  const a = Gs({
    ...i,
    ...o
  }), l = Lg(o), c = Lg(i), u = t(a), d = fe(u == null ? void 0 : u.className, n == null ? void 0 : n.className, s, i == null ? void 0 : i.className, o == null ? void 0 : o.className), p = {
    ...u == null ? void 0 : u.style,
    ...n == null ? void 0 : n.style,
    ...i == null ? void 0 : i.style,
    ...o == null ? void 0 : o.style
  }, m = {
    ...u,
    ...n,
    ...c,
    ...l
  };
  return d.length > 0 && (m.className = d), Object.keys(p).length > 0 && (m.style = p), {
    props: m,
    internalRef: u.ref
  };
}
function jy(e, t, n) {
  return typeof e == "function" ? e(t, n) : e;
}
function Sn(e) {
  var p;
  const {
    elementType: t,
    externalSlotProps: n,
    ownerState: o,
    skipResolvingSlotProps: i = !1,
    ...s
  } = e, a = i ? {} : jy(n, o), {
    props: l,
    internalRef: c
  } = My({
    ...s,
    externalSlotProps: a
  }), u = Yt(c, a == null ? void 0 : a.ref, (p = e.additionalProps) == null ? void 0 : p.ref);
  return ji(t, {
    ...l,
    ref: u
  }, o);
}
function ss(e) {
  return !e || !/* @__PURE__ */ S.isValidElement(e) ? null : e.props.propertyIsEnumerable("ref") ? e.props.ref : (
    // @ts-expect-error element.ref is not included in the ReactElement type
    // We cannot check for it, but isValidElement is true at this point
    // https://github.com/DefinitelyTyped/DefinitelyTyped/discussions/70189
    e.ref
  );
}
const ff = /* @__PURE__ */ S.createContext(null);
process.env.NODE_ENV !== "production" && (ff.displayName = "ThemeContext");
function mf() {
  const e = S.useContext(ff);
  return process.env.NODE_ENV !== "production" && S.useDebugValue(e), e;
}
const UR = typeof Symbol == "function" && Symbol.for, XR = UR ? Symbol.for("mui.nested") : "__THEME_NESTED__";
function YR(e, t) {
  if (typeof t == "function") {
    const n = t(e);
    return process.env.NODE_ENV !== "production" && (n || console.error(["MUI: You should return an object from your theme function, i.e.", "<ThemeProvider theme={() => ({})} />"].join(`
`))), n;
  }
  return {
    ...e,
    ...t
  };
}
function ec(e) {
  const {
    children: t,
    theme: n
  } = e, o = mf();
  process.env.NODE_ENV !== "production" && o === null && typeof n == "function" && console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join(`
`));
  const i = S.useMemo(() => {
    const s = o === null ? {
      ...n
    } : YR(o, n);
    return s != null && (s[XR] = o !== null), s;
  }, [n, o]);
  return /* @__PURE__ */ f.jsx(ff.Provider, {
    value: i,
    children: t
  });
}
process.env.NODE_ENV !== "production" && (ec.propTypes = {
  /**
   * Your component tree.
   */
  children: r.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: r.oneOfType([r.object, r.func]).isRequired
});
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && (ec.propTypes = Gc(ec.propTypes));
const ky = /* @__PURE__ */ S.createContext();
function Fy({
  value: e,
  ...t
}) {
  return /* @__PURE__ */ f.jsx(ky.Provider, {
    value: e ?? !0,
    ...t
  });
}
process.env.NODE_ENV !== "production" && (Fy.propTypes = {
  children: r.node,
  value: r.bool
});
const Nr = () => S.useContext(ky) ?? !1, Ny = /* @__PURE__ */ S.createContext(void 0);
function Vy({
  value: e,
  children: t
}) {
  return /* @__PURE__ */ f.jsx(Ny.Provider, {
    value: e,
    children: t
  });
}
process.env.NODE_ENV !== "production" && (Vy.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: r.node,
  /**
   * @ignore
   */
  value: r.object
});
function ZR(e) {
  const {
    theme: t,
    name: n,
    props: o
  } = e;
  if (!t || !t.components || !t.components[n])
    return o;
  const i = t.components[n];
  return i.defaultProps ? ca(i.defaultProps, o) : !i.styleOverrides && !i.variants ? ca(i, o) : o;
}
function qR({
  props: e,
  name: t
}) {
  const n = S.useContext(Ny);
  return ZR({
    props: e,
    name: t,
    theme: {
      components: n
    }
  });
}
const _g = {};
function Bg(e, t, n, o = !1) {
  return S.useMemo(() => {
    const i = e && t[e] || t;
    if (typeof n == "function") {
      const s = n(i), a = e ? {
        ...t,
        [e]: s
      } : s;
      return o ? () => a : a;
    }
    return e ? {
      ...t,
      [e]: n
    } : {
      ...t,
      ...n
    };
  }, [e, t, n, o]);
}
function ua(e) {
  const {
    children: t,
    theme: n,
    themeId: o
  } = e, i = uf(_g), s = mf() || _g;
  process.env.NODE_ENV !== "production" && (i === null && typeof n == "function" || o && i && !i[o] && typeof n == "function") && console.error(["MUI: You are providing a theme function prop to the ThemeProvider component:", "<ThemeProvider theme={outerTheme => outerTheme} />", "", "However, no outer theme is present.", "Make sure a theme is already injected higher in the React tree or provide a theme object."].join(`
`));
  const a = Bg(o, i, n), l = Bg(o, s, n, !0), c = a.direction === "rtl";
  return /* @__PURE__ */ f.jsx(ec, {
    theme: l,
    children: /* @__PURE__ */ f.jsx(Ma.Provider, {
      value: a,
      children: /* @__PURE__ */ f.jsx(Fy, {
        value: c,
        children: /* @__PURE__ */ f.jsx(Vy, {
          value: a == null ? void 0 : a.components,
          children: t
        })
      })
    })
  });
}
process.env.NODE_ENV !== "production" && (ua.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Your component tree.
   */
  children: r.node,
  /**
   * A theme object. You can provide a function to extend the outer theme.
   */
  theme: r.oneOfType([r.func, r.object]).isRequired,
  /**
   * The design system's unique id for getting the corresponded theme when there are multiple design systems.
   */
  themeId: r.string
});
process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "production" && (ua.propTypes = Gc(ua.propTypes));
const gf = "mode", hf = "color-scheme", JR = "data-color-scheme";
function KR(e) {
  const {
    defaultLightColorScheme: t = "light",
    defaultDarkColorScheme: n = "dark",
    modeStorageKey: o = gf,
    colorSchemeStorageKey: i = hf,
    attribute: s = JR,
    colorSchemeNode: a = "document.documentElement",
    nonce: l
  } = e || {};
  let c = "", u = s;
  if (s === "class" && (u = ".%s"), s === "data" && (u = "[data-%s]"), u.startsWith(".")) {
    const p = u.substring(1);
    c += `${a}.classList.remove('${p}'.replace('%s', light), '${p}'.replace('%s', dark));
      ${a}.classList.add('${p}'.replace('%s', colorScheme));`;
  }
  const d = u.match(/\[([^\]]+)\]/);
  if (d) {
    const [p, m] = d[1].split("=");
    m || (c += `${a}.removeAttribute('${p}'.replace('%s', light));
      ${a}.removeAttribute('${p}'.replace('%s', dark));`), c += `
      ${a}.setAttribute('${p}'.replace('%s', colorScheme), ${m ? `${m}.replace('%s', colorScheme)` : '""'});`;
  } else
    c += `${a}.setAttribute('${u}', colorScheme);`;
  return /* @__PURE__ */ f.jsx("script", {
    suppressHydrationWarning: !0,
    nonce: typeof window > "u" ? l : "",
    dangerouslySetInnerHTML: {
      __html: `(function() {
try {
  let colorScheme = '';
  const mode = localStorage.getItem('${o}') || 'system';
  const dark = localStorage.getItem('${i}-dark') || '${n}';
  const light = localStorage.getItem('${i}-light') || '${t}';
  if (mode === 'system') {
    // handle system mode
    const mql = window.matchMedia('(prefers-color-scheme: dark)');
    if (mql.matches) {
      colorScheme = dark
    } else {
      colorScheme = light
    }
  }
  if (mode === 'light') {
    colorScheme = light;
  }
  if (mode === 'dark') {
    colorScheme = dark;
  }
  if (colorScheme) {
    ${c}
  }
} catch(e){}})();`
    }
  }, "mui-color-scheme-init");
}
function zg(e) {
  if (typeof window < "u" && typeof window.matchMedia == "function" && e === "system")
    return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
}
function $y(e, t) {
  if (e.mode === "light" || e.mode === "system" && e.systemMode === "light")
    return t("light");
  if (e.mode === "dark" || e.mode === "system" && e.systemMode === "dark")
    return t("dark");
}
function QR(e) {
  return $y(e, (t) => {
    if (t === "light")
      return e.lightColorScheme;
    if (t === "dark")
      return e.darkColorScheme;
  });
}
function id(e, t) {
  if (typeof window > "u")
    return;
  let n;
  try {
    n = localStorage.getItem(e) || void 0, n || localStorage.setItem(e, t);
  } catch {
  }
  return n || t;
}
function eO(e) {
  const {
    defaultMode: t = "light",
    defaultLightColorScheme: n,
    defaultDarkColorScheme: o,
    supportedColorSchemes: i = [],
    modeStorageKey: s = gf,
    colorSchemeStorageKey: a = hf,
    storageWindow: l = typeof window > "u" ? void 0 : window
  } = e, c = i.join(","), u = i.length > 1, [d, p] = S.useState(() => {
    const x = id(s, t), T = id(`${a}-light`, n), w = id(`${a}-dark`, o);
    return {
      mode: x,
      systemMode: zg(x),
      lightColorScheme: T,
      darkColorScheme: w
    };
  }), [, m] = S.useState(!1), g = S.useRef(!1);
  S.useEffect(() => {
    u && m(!0), g.current = !0;
  }, [u]);
  const h = QR(d), v = S.useCallback((x) => {
    p((T) => {
      if (x === T.mode)
        return T;
      const w = x ?? t;
      try {
        localStorage.setItem(s, w);
      } catch {
      }
      return {
        ...T,
        mode: w,
        systemMode: zg(w)
      };
    });
  }, [s, t]), b = S.useCallback((x) => {
    x ? typeof x == "string" ? x && !c.includes(x) ? console.error(`\`${x}\` does not exist in \`theme.colorSchemes\`.`) : p((T) => {
      const w = {
        ...T
      };
      return $y(T, (R) => {
        try {
          localStorage.setItem(`${a}-${R}`, x);
        } catch {
        }
        R === "light" && (w.lightColorScheme = x), R === "dark" && (w.darkColorScheme = x);
      }), w;
    }) : p((T) => {
      const w = {
        ...T
      }, R = x.light === null ? n : x.light, E = x.dark === null ? o : x.dark;
      if (R)
        if (!c.includes(R))
          console.error(`\`${R}\` does not exist in \`theme.colorSchemes\`.`);
        else {
          w.lightColorScheme = R;
          try {
            localStorage.setItem(`${a}-light`, R);
          } catch {
          }
        }
      if (E)
        if (!c.includes(E))
          console.error(`\`${E}\` does not exist in \`theme.colorSchemes\`.`);
        else {
          w.darkColorScheme = E;
          try {
            localStorage.setItem(`${a}-dark`, E);
          } catch {
          }
        }
      return w;
    }) : p((T) => {
      try {
        localStorage.setItem(`${a}-light`, n), localStorage.setItem(`${a}-dark`, o);
      } catch {
      }
      return {
        ...T,
        lightColorScheme: n,
        darkColorScheme: o
      };
    });
  }, [c, a, n, o]), y = S.useCallback((x) => {
    d.mode === "system" && p((T) => {
      const w = x != null && x.matches ? "dark" : "light";
      return T.systemMode === w ? T : {
        ...T,
        systemMode: w
      };
    });
  }, [d.mode]), C = S.useRef(y);
  return C.current = y, S.useEffect(() => {
    if (typeof window.matchMedia != "function" || !u)
      return;
    const x = (...w) => C.current(...w), T = window.matchMedia("(prefers-color-scheme: dark)");
    return T.addListener(x), x(T), () => {
      T.removeListener(x);
    };
  }, [u]), S.useEffect(() => {
    if (l && u) {
      const x = (T) => {
        const w = T.newValue;
        typeof T.key == "string" && T.key.startsWith(a) && (!w || c.match(w)) && (T.key.endsWith("light") && b({
          light: w
        }), T.key.endsWith("dark") && b({
          dark: w
        })), T.key === s && (!w || ["light", "dark", "system"].includes(w)) && v(w || t);
      };
      return l.addEventListener("storage", x), () => {
        l.removeEventListener("storage", x);
      };
    }
  }, [b, v, s, a, c, t, l, u]), {
    ...d,
    mode: g.current || !u ? d.mode : void 0,
    systemMode: g.current || !u ? d.systemMode : void 0,
    colorScheme: g.current || !u ? h : void 0,
    setMode: v,
    setColorScheme: b
  };
}
const tO = "*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}";
function nO(e) {
  const {
    themeId: t,
    /**
     * This `theme` object needs to follow a certain structure to
     * be used correctly by the finel `CssVarsProvider`. It should have a
     * `colorSchemes` key with the light and dark (and any other) palette.
     * It should also ideally have a vars object created using `prepareCssVars`.
     */
    theme: n = {},
    modeStorageKey: o = gf,
    colorSchemeStorageKey: i = hf,
    disableTransitionOnChange: s = !1,
    defaultColorScheme: a,
    resolveTheme: l
  } = e, c = {
    allColorSchemes: [],
    colorScheme: void 0,
    darkColorScheme: void 0,
    lightColorScheme: void 0,
    mode: void 0,
    setColorScheme: () => {
    },
    setMode: () => {
    },
    systemMode: void 0
  }, u = /* @__PURE__ */ S.createContext(void 0);
  process.env.NODE_ENV !== "production" && (u.displayName = "ColorSchemeContext");
  const d = () => S.useContext(u) || c;
  function p(v) {
    var Te, Ve, ie, be, xe;
    const {
      children: b,
      theme: y,
      modeStorageKey: C = o,
      colorSchemeStorageKey: x = i,
      disableTransitionOnChange: T = s,
      storageWindow: w = typeof window > "u" ? void 0 : window,
      documentNode: R = typeof document > "u" ? void 0 : document,
      colorSchemeNode: E = typeof document > "u" ? void 0 : document.documentElement,
      disableNestedContext: O = !1,
      disableStyleSheetGeneration: I = !1
    } = v, P = S.useRef(!1), A = mf(), D = S.useContext(u), k = !!D && !O, M = S.useMemo(() => y || (typeof n == "function" ? n() : n), [y]), F = M[t], {
      colorSchemes: N = {},
      components: W = {},
      cssVarPrefix: H,
      ...B
    } = F || M, j = Object.keys(N).filter((Ie) => !!N[Ie]).join(","), L = S.useMemo(() => j.split(","), [j]), ee = typeof a == "string" ? a : a.light, Y = typeof a == "string" ? a : a.dark, $ = N[ee] && N[Y] ? "system" : ((Ve = (Te = N[B.defaultColorScheme]) == null ? void 0 : Te.palette) == null ? void 0 : Ve.mode) || ((ie = B.palette) == null ? void 0 : ie.mode), {
      mode: U,
      setMode: X,
      systemMode: Z,
      lightColorScheme: G,
      darkColorScheme: K,
      colorScheme: re,
      setColorScheme: ne
    } = eO({
      supportedColorSchemes: L,
      defaultLightColorScheme: ee,
      defaultDarkColorScheme: Y,
      modeStorageKey: C,
      colorSchemeStorageKey: x,
      defaultMode: $,
      storageWindow: w
    });
    let z = U, q = re;
    k && (z = D.mode, q = D.colorScheme);
    const _ = q || B.defaultColorScheme, oe = ((be = B.generateThemeVars) == null ? void 0 : be.call(B)) || B.vars, te = {
      ...B,
      components: W,
      colorSchemes: N,
      cssVarPrefix: H,
      vars: oe
    };
    if (typeof te.generateSpacing == "function" && (te.spacing = te.generateSpacing()), _) {
      const Ie = N[_];
      Ie && typeof Ie == "object" && Object.keys(Ie).forEach((Pe) => {
        Ie[Pe] && typeof Ie[Pe] == "object" ? te[Pe] = {
          ...te[Pe],
          ...Ie[Pe]
        } : te[Pe] = Ie[Pe];
      });
    }
    const se = B.colorSchemeSelector;
    S.useEffect(() => {
      if (q && E && se && se !== "media") {
        const Ie = se;
        let Pe = se;
        if (Ie === "class" && (Pe = ".%s"), Ie === "data" && (Pe = "[data-%s]"), Ie != null && Ie.startsWith("data-") && !Ie.includes("%s") && (Pe = `[${Ie}="%s"]`), Pe.startsWith("."))
          E.classList.remove(...L.map((Ce) => Pe.substring(1).replace("%s", Ce))), E.classList.add(Pe.substring(1).replace("%s", q));
        else {
          const Ce = Pe.replace("%s", q).match(/\[([^\]]+)\]/);
          if (Ce) {
            const [Oe, Be] = Ce[1].split("=");
            Be || L.forEach((Ae) => {
              E.removeAttribute(Oe.replace(q, Ae));
            }), E.setAttribute(Oe, Be ? Be.replace(/"|'/g, "") : "");
          } else
            E.setAttribute(Pe, q);
        }
      }
    }, [q, se, E, L]), S.useEffect(() => {
      let Ie;
      if (T && P.current && R) {
        const Pe = R.createElement("style");
        Pe.appendChild(R.createTextNode(tO)), R.head.appendChild(Pe), window.getComputedStyle(R.body), Ie = setTimeout(() => {
          R.head.removeChild(Pe);
        }, 1);
      }
      return () => {
        clearTimeout(Ie);
      };
    }, [q, T, R]), S.useEffect(() => (P.current = !0, () => {
      P.current = !1;
    }), []);
    const ae = S.useMemo(() => ({
      allColorSchemes: L,
      colorScheme: q,
      darkColorScheme: K,
      lightColorScheme: G,
      mode: z,
      setColorScheme: ne,
      setMode: X,
      systemMode: Z
    }), [L, q, K, G, z, ne, X, Z]);
    let me = !0;
    (I || B.cssVariables === !1 || k && (A == null ? void 0 : A.cssVarPrefix) === H) && (me = !1);
    const ye = /* @__PURE__ */ f.jsxs(S.Fragment, {
      children: [/* @__PURE__ */ f.jsx(ua, {
        themeId: F ? t : void 0,
        theme: l ? l(te) : te,
        children: b
      }), me && /* @__PURE__ */ f.jsx(lf, {
        styles: ((xe = te.generateStyleSheets) == null ? void 0 : xe.call(te)) || []
      })]
    });
    return k ? ye : /* @__PURE__ */ f.jsx(u.Provider, {
      value: ae,
      children: ye
    });
  }
  process.env.NODE_ENV !== "production" && (p.propTypes = {
    /**
     * The component tree.
     */
    children: r.node,
    /**
     * The node used to attach the color-scheme attribute
     */
    colorSchemeNode: r.any,
    /**
     * localStorage key used to store `colorScheme`
     */
    colorSchemeStorageKey: r.string,
    /**
     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.
     */
    disableNestedContext: r.bool,
    /**
     * If `true`, the style sheet won't be generated.
     *
     * This is useful for controlling nested CssVarsProvider behavior.
     */
    disableStyleSheetGeneration: r.bool,
    /**
     * Disable CSS transitions when switching between modes or color schemes.
     */
    disableTransitionOnChange: r.bool,
    /**
     * The document to attach the attribute to.
     */
    documentNode: r.any,
    /**
     * The key in the local storage used to store current color scheme.
     */
    modeStorageKey: r.string,
    /**
     * The window that attaches the 'storage' event listener.
     * @default window
     */
    storageWindow: r.any,
    /**
     * The calculated theme object that will be passed through context.
     */
    theme: r.object
  });
  const m = typeof a == "string" ? a : a.light, g = typeof a == "string" ? a : a.dark;
  return {
    CssVarsProvider: p,
    useColorScheme: d,
    getInitColorSchemeScript: (v) => KR({
      colorSchemeStorageKey: i,
      defaultLightColorScheme: m,
      defaultDarkColorScheme: g,
      modeStorageKey: o,
      ...v
    })
  };
}
function oO(e = "") {
  function t(...o) {
    if (!o.length)
      return "";
    const i = o[0];
    return typeof i == "string" && !i.match(/(#|\(|\)|(-?(\d*\.)?\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\d*\.)?\d+)$|(\d+ \d+ \d+)/) ? `, var(--${e ? `${e}-` : ""}${i}${t(...o.slice(1))})` : `, ${i}`;
  }
  return (o, ...i) => `var(--${e ? `${e}-` : ""}${o}${t(...i)})`;
}
const Wg = (e, t, n, o = []) => {
  let i = e;
  t.forEach((s, a) => {
    a === t.length - 1 ? Array.isArray(i) ? i[Number(s)] = n : i && typeof i == "object" && (i[s] = n) : i && typeof i == "object" && (i[s] || (i[s] = o.includes(s) ? [] : {}), i = i[s]);
  });
}, rO = (e, t, n) => {
  function o(i, s = [], a = []) {
    Object.entries(i).forEach(([l, c]) => {
      (!n || n && !n([...s, l])) && c != null && (typeof c == "object" && Object.keys(c).length > 0 ? o(c, [...s, l], Array.isArray(c) ? [...a, l] : a) : t([...s, l], c, a));
    });
  }
  o(e);
}, iO = (e, t) => typeof t == "number" ? ["lineHeight", "fontWeight", "opacity", "zIndex"].some((o) => e.includes(o)) || e[e.length - 1].toLowerCase().includes("opacity") ? t : `${t}px` : t;
function sd(e, t) {
  const {
    prefix: n,
    shouldSkipGeneratingVar: o
  } = t || {}, i = {}, s = {}, a = {};
  return rO(
    e,
    (l, c, u) => {
      if ((typeof c == "string" || typeof c == "number") && (!o || !o(l, c))) {
        const d = `--${n ? `${n}-` : ""}${l.join("-")}`, p = iO(l, c);
        Object.assign(i, {
          [d]: p
        }), Wg(s, l, `var(${d})`, u), Wg(a, l, `var(${d}, ${p})`, u);
      }
    },
    (l) => l[0] === "vars"
    // skip 'vars/*' paths
  ), {
    css: i,
    vars: s,
    varsWithDefaults: a
  };
}
function sO(e, t = {}) {
  const {
    getSelector: n = b,
    disableCssColorScheme: o,
    colorSchemeSelector: i
  } = t, {
    colorSchemes: s = {},
    components: a,
    defaultColorScheme: l = "light",
    ...c
  } = e, {
    vars: u,
    css: d,
    varsWithDefaults: p
  } = sd(c, t);
  let m = p;
  const g = {}, {
    [l]: h,
    ...v
  } = s;
  if (Object.entries(v || {}).forEach(([x, T]) => {
    const {
      vars: w,
      css: R,
      varsWithDefaults: E
    } = sd(T, t);
    m = bn(m, E), g[x] = {
      css: R,
      vars: w
    };
  }), h) {
    const {
      css: x,
      vars: T,
      varsWithDefaults: w
    } = sd(h, t);
    m = bn(m, w), g[l] = {
      css: x,
      vars: T
    };
  }
  function b(x, T) {
    var R, E;
    let w = i;
    if (i === "class" && (w = ".%s"), i === "data" && (w = "[data-%s]"), i != null && i.startsWith("data-") && !i.includes("%s") && (w = `[${i}="%s"]`), x) {
      if (w === "media")
        return e.defaultColorScheme === x ? ":root" : {
          [`@media (prefers-color-scheme: ${((E = (R = s[x]) == null ? void 0 : R.palette) == null ? void 0 : E.mode) || x})`]: {
            ":root": T
          }
        };
      if (w)
        return e.defaultColorScheme === x ? `:root, ${w.replace("%s", String(x))}` : w.replace("%s", String(x));
    }
    return ":root";
  }
  return {
    vars: m,
    generateThemeVars: () => {
      let x = {
        ...u
      };
      return Object.entries(g).forEach(([, {
        vars: T
      }]) => {
        x = bn(x, T);
      }), x;
    },
    generateStyleSheets: () => {
      var O, I;
      const x = [], T = e.defaultColorScheme || "light";
      function w(P, A) {
        Object.keys(A).length && x.push(typeof P == "string" ? {
          [P]: {
            ...A
          }
        } : P);
      }
      w(n(void 0, {
        ...d
      }), d);
      const {
        [T]: R,
        ...E
      } = g;
      if (R) {
        const {
          css: P
        } = R, A = (I = (O = s[T]) == null ? void 0 : O.palette) == null ? void 0 : I.mode, D = !o && A ? {
          colorScheme: A,
          ...P
        } : {
          ...P
        };
        w(n(T, {
          ...D
        }), D);
      }
      return Object.entries(E).forEach(([P, {
        css: A
      }]) => {
        var M, F;
        const D = (F = (M = s[P]) == null ? void 0 : M.palette) == null ? void 0 : F.mode, k = !o && D ? {
          colorScheme: D,
          ...A
        } : {
          ...A
        };
        w(n(P, {
          ...k
        }), k);
      }), x;
    }
  };
}
function aO(e) {
  return function(n) {
    return e === "media" ? (process.env.NODE_ENV !== "production" && n !== "light" && n !== "dark" && console.error(`MUI: @media (prefers-color-scheme) supports only 'light' or 'dark', but receive '${n}'.`), `@media (prefers-color-scheme: ${n})`) : e ? e.startsWith("data-") && !e.includes("%s") ? `[${e}="${n}"] &` : e === "class" ? `.${n} &` : e === "data" ? `[data-${n}] &` : `${e.replace("%s", n)} &` : "&";
  };
}
const lO = Bc(), cO = OR("div", {
  name: "MuiStack",
  slot: "Root",
  overridesResolver: (e, t) => t.root
});
function uO(e) {
  return wy({
    props: e,
    name: "MuiStack",
    defaultTheme: lO
  });
}
function dO(e, t) {
  const n = S.Children.toArray(e).filter(Boolean);
  return n.reduce((o, i, s) => (o.push(i), s < n.length - 1 && o.push(/* @__PURE__ */ S.cloneElement(t, {
    key: `separator-${s}`
  })), o), []);
}
const pO = (e) => ({
  row: "Left",
  "row-reverse": "Right",
  column: "Top",
  "column-reverse": "Bottom"
})[e], fO = ({
  ownerState: e,
  theme: t
}) => {
  let n = {
    display: "flex",
    flexDirection: "column",
    ...Hn({
      theme: t
    }, Qr({
      values: e.direction,
      breakpoints: t.breakpoints.values
    }), (o) => ({
      flexDirection: o
    }))
  };
  if (e.spacing) {
    const o = Fc(t), i = Object.keys(t.breakpoints.values).reduce((c, u) => ((typeof e.spacing == "object" && e.spacing[u] != null || typeof e.direction == "object" && e.direction[u] != null) && (c[u] = !0), c), {}), s = Qr({
      values: e.direction,
      base: i
    }), a = Qr({
      values: e.spacing,
      base: i
    });
    typeof s == "object" && Object.keys(s).forEach((c, u, d) => {
      if (!s[c]) {
        const m = u > 0 ? s[d[u - 1]] : "column";
        s[c] = m;
      }
    }), n = bn(n, Hn({
      theme: t
    }, a, (c, u) => e.useFlexGap ? {
      gap: oi(o, c)
    } : {
      // The useFlexGap={false} implement relies on each child to give up control of the margin.
      // We need to reset the margin to avoid double spacing.
      "& > :not(style):not(style)": {
        margin: 0
      },
      "& > :not(style) ~ :not(style)": {
        [`margin${pO(u ? s[u] : e.direction)}`]: oi(o, c)
      }
    }));
  }
  return n = II(t.breakpoints, n), n;
};
function mO(e = {}) {
  const {
    // This will allow adding custom styled fn (for example for custom sx style function)
    createStyledComponent: t = cO,
    useThemeProps: n = uO,
    componentName: o = "MuiStack"
  } = e, i = () => Ue({
    root: ["root"]
  }, (c) => We(o, c), {}), s = t(fO), a = /* @__PURE__ */ S.forwardRef(function(c, u) {
    const d = n(c), p = Wc(d), {
      component: m = "div",
      direction: g = "column",
      spacing: h = 0,
      divider: v,
      children: b,
      className: y,
      useFlexGap: C = !1,
      ...x
    } = p, T = {
      direction: g,
      spacing: h,
      useFlexGap: C
    }, w = i();
    return /* @__PURE__ */ f.jsx(s, {
      as: m,
      ownerState: T,
      ref: u,
      className: fe(w.root, y),
      ...x,
      children: v ? dO(b, v) : b
    });
  });
  return process.env.NODE_ENV !== "production" && (a.propTypes = {
    children: r.node,
    direction: r.oneOfType([r.oneOf(["column-reverse", "column", "row-reverse", "row"]), r.arrayOf(r.oneOf(["column-reverse", "column", "row-reverse", "row"])), r.object]),
    divider: r.node,
    spacing: r.oneOfType([r.arrayOf(r.oneOfType([r.number, r.string])), r.number, r.object, r.string]),
    sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object])
  }), a;
}
const da = {
  black: "#000",
  white: "#fff"
}, gO = {
  50: "#fafafa",
  100: "#f5f5f5",
  200: "#eeeeee",
  300: "#e0e0e0",
  400: "#bdbdbd",
  500: "#9e9e9e",
  600: "#757575",
  700: "#616161",
  800: "#424242",
  900: "#212121",
  A100: "#f5f5f5",
  A200: "#eeeeee",
  A400: "#bdbdbd",
  A700: "#616161"
}, yi = {
  50: "#f3e5f5",
  100: "#e1bee7",
  200: "#ce93d8",
  300: "#ba68c8",
  400: "#ab47bc",
  500: "#9c27b0",
  600: "#8e24aa",
  700: "#7b1fa2",
  800: "#6a1b9a",
  900: "#4a148c",
  A100: "#ea80fc",
  A200: "#e040fb",
  A400: "#d500f9",
  A700: "#aa00ff"
}, xi = {
  50: "#ffebee",
  100: "#ffcdd2",
  200: "#ef9a9a",
  300: "#e57373",
  400: "#ef5350",
  500: "#f44336",
  600: "#e53935",
  700: "#d32f2f",
  800: "#c62828",
  900: "#b71c1c",
  A100: "#ff8a80",
  A200: "#ff5252",
  A400: "#ff1744",
  A700: "#d50000"
}, Yr = {
  50: "#fff3e0",
  100: "#ffe0b2",
  200: "#ffcc80",
  300: "#ffb74d",
  400: "#ffa726",
  500: "#ff9800",
  600: "#fb8c00",
  700: "#f57c00",
  800: "#ef6c00",
  900: "#e65100",
  A100: "#ffd180",
  A200: "#ffab40",
  A400: "#ff9100",
  A700: "#ff6d00"
}, Ci = {
  50: "#e3f2fd",
  100: "#bbdefb",
  200: "#90caf9",
  300: "#64b5f6",
  400: "#42a5f5",
  500: "#2196f3",
  600: "#1e88e5",
  700: "#1976d2",
  800: "#1565c0",
  900: "#0d47a1",
  A100: "#82b1ff",
  A200: "#448aff",
  A400: "#2979ff",
  A700: "#2962ff"
}, Si = {
  50: "#e1f5fe",
  100: "#b3e5fc",
  200: "#81d4fa",
  300: "#4fc3f7",
  400: "#29b6f6",
  500: "#03a9f4",
  600: "#039be5",
  700: "#0288d1",
  800: "#0277bd",
  900: "#01579b",
  A100: "#80d8ff",
  A200: "#40c4ff",
  A400: "#00b0ff",
  A700: "#0091ea"
}, wi = {
  50: "#e8f5e9",
  100: "#c8e6c9",
  200: "#a5d6a7",
  300: "#81c784",
  400: "#66bb6a",
  500: "#4caf50",
  600: "#43a047",
  700: "#388e3c",
  800: "#2e7d32",
  900: "#1b5e20",
  A100: "#b9f6ca",
  A200: "#69f0ae",
  A400: "#00e676",
  A700: "#00c853"
}, Hg = {
  // The colors used to style the text.
  text: {
    // The most important text.
    primary: "rgba(0, 0, 0, 0.87)",
    // Secondary text.
    secondary: "rgba(0, 0, 0, 0.6)",
    // Disabled text have even lower visual prominence.
    disabled: "rgba(0, 0, 0, 0.38)"
  },
  // The color used to divide different elements.
  divider: "rgba(0, 0, 0, 0.12)",
  // The background colors used to style the surfaces.
  // Consistency between these values is important.
  background: {
    paper: da.white,
    default: da.white
  },
  // The colors used to style the action elements.
  action: {
    // The color of an active action like an icon button.
    active: "rgba(0, 0, 0, 0.54)",
    // The color of an hovered action.
    hover: "rgba(0, 0, 0, 0.04)",
    hoverOpacity: 0.04,
    // The color of a selected action.
    selected: "rgba(0, 0, 0, 0.08)",
    selectedOpacity: 0.08,
    // The color of a disabled action.
    disabled: "rgba(0, 0, 0, 0.26)",
    // The background color of a disabled action.
    disabledBackground: "rgba(0, 0, 0, 0.12)",
    disabledOpacity: 0.38,
    focus: "rgba(0, 0, 0, 0.12)",
    focusOpacity: 0.12,
    activatedOpacity: 0.12
  }
}, ad = {
  text: {
    primary: da.white,
    secondary: "rgba(255, 255, 255, 0.7)",
    disabled: "rgba(255, 255, 255, 0.5)",
    icon: "rgba(255, 255, 255, 0.5)"
  },
  divider: "rgba(255, 255, 255, 0.12)",
  background: {
    paper: "#121212",
    default: "#121212"
  },
  action: {
    active: da.white,
    hover: "rgba(255, 255, 255, 0.08)",
    hoverOpacity: 0.08,
    selected: "rgba(255, 255, 255, 0.16)",
    selectedOpacity: 0.16,
    disabled: "rgba(255, 255, 255, 0.3)",
    disabledBackground: "rgba(255, 255, 255, 0.12)",
    disabledOpacity: 0.38,
    focus: "rgba(255, 255, 255, 0.12)",
    focusOpacity: 0.12,
    activatedOpacity: 0.24
  }
};
function Gg(e, t, n, o) {
  const i = o.light || o, s = o.dark || o * 1.5;
  e[t] || (e.hasOwnProperty(n) ? e[t] = e[n] : t === "light" ? e.light = $n(e.main, i) : t === "dark" && (e.dark = no(e.main, s)));
}
function hO(e = "light") {
  return e === "dark" ? {
    main: Ci[200],
    light: Ci[50],
    dark: Ci[400]
  } : {
    main: Ci[700],
    light: Ci[400],
    dark: Ci[800]
  };
}
function bO(e = "light") {
  return e === "dark" ? {
    main: yi[200],
    light: yi[50],
    dark: yi[400]
  } : {
    main: yi[500],
    light: yi[300],
    dark: yi[700]
  };
}
function vO(e = "light") {
  return e === "dark" ? {
    main: xi[500],
    light: xi[300],
    dark: xi[700]
  } : {
    main: xi[700],
    light: xi[400],
    dark: xi[800]
  };
}
function yO(e = "light") {
  return e === "dark" ? {
    main: Si[400],
    light: Si[300],
    dark: Si[700]
  } : {
    main: Si[700],
    light: Si[500],
    dark: Si[900]
  };
}
function xO(e = "light") {
  return e === "dark" ? {
    main: wi[400],
    light: wi[300],
    dark: wi[700]
  } : {
    main: wi[800],
    light: wi[500],
    dark: wi[900]
  };
}
function CO(e = "light") {
  return e === "dark" ? {
    main: Yr[400],
    light: Yr[300],
    dark: Yr[700]
  } : {
    main: "#ed6c02",
    // closest to orange[800] that pass 3:1.
    light: Yr[500],
    dark: Yr[900]
  };
}
function bf(e) {
  const {
    mode: t = "light",
    contrastThreshold: n = 3,
    tonalOffset: o = 0.2,
    ...i
  } = e, s = e.primary || hO(t), a = e.secondary || bO(t), l = e.error || vO(t), c = e.info || yO(t), u = e.success || xO(t), d = e.warning || CO(t);
  function p(v) {
    const b = Fg(v, ad.text.primary) >= n ? ad.text.primary : Hg.text.primary;
    if (process.env.NODE_ENV !== "production") {
      const y = Fg(v, b);
      y < 3 && console.error([`MUI: The contrast ratio of ${y}:1 for ${b} on ${v}`, "falls below the WCAG recommended absolute minimum contrast ratio of 3:1.", "https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast"].join(`
`));
    }
    return b;
  }
  const m = ({
    color: v,
    name: b,
    mainShade: y = 500,
    lightShade: C = 300,
    darkShade: x = 700
  }) => {
    if (v = {
      ...v
    }, !v.main && v[y] && (v.main = v[y]), !v.hasOwnProperty("main"))
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${b ? ` (${b})` : ""} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${y}\` property.` : Yo(11, b ? ` (${b})` : "", y));
    if (typeof v.main != "string")
      throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The color${b ? ` (${b})` : ""} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(v.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` : Yo(12, b ? ` (${b})` : "", JSON.stringify(v.main)));
    return Gg(v, "light", C, o), Gg(v, "dark", x, o), v.contrastText || (v.contrastText = p(v.main)), v;
  }, g = {
    dark: ad,
    light: Hg
  };
  return process.env.NODE_ENV !== "production" && (g[t] || console.error(`MUI: The palette mode \`${t}\` is not supported.`)), bn({
    // A collection of common colors.
    common: {
      ...da
    },
    // prevent mutable object.
    // The palette mode, can be light or dark.
    mode: t,
    // The colors used to represent primary interface elements for a user.
    primary: m({
      color: s,
      name: "primary"
    }),
    // The colors used to represent secondary interface elements for a user.
    secondary: m({
      color: a,
      name: "secondary",
      mainShade: "A400",
      lightShade: "A200",
      darkShade: "A700"
    }),
    // The colors used to represent interface elements that the user should be made aware of.
    error: m({
      color: l,
      name: "error"
    }),
    // The colors used to represent potentially dangerous actions or important messages.
    warning: m({
      color: d,
      name: "warning"
    }),
    // The colors used to present information to the user that is neutral and not necessarily important.
    info: m({
      color: c,
      name: "info"
    }),
    // The colors used to indicate the successful completion of an action that user triggered.
    success: m({
      color: u,
      name: "success"
    }),
    // The grey colors.
    grey: gO,
    // Used by `getContrastText()` to maximize the contrast between
    // the background and the text.
    contrastThreshold: n,
    // Takes a background color and returns the text color that maximizes the contrast.
    getContrastText: p,
    // Generate a rich color object.
    augmentColor: m,
    // Used by the functions below to shift a color's luminance by approximately
    // two indexes within its tonal palette.
    // E.g., shift from Red 500 to Red 300 or Red 700.
    tonalOffset: o,
    // The light and dark mode object.
    ...g[t]
  }, i);
}
function SO(e) {
  const t = {};
  return Object.entries(e).forEach((o) => {
    const [i, s] = o;
    typeof s == "object" && (t[i] = `${s.fontStyle ? `${s.fontStyle} ` : ""}${s.fontVariant ? `${s.fontVariant} ` : ""}${s.fontWeight ? `${s.fontWeight} ` : ""}${s.fontStretch ? `${s.fontStretch} ` : ""}${s.fontSize || ""}${s.lineHeight ? `/${s.lineHeight} ` : ""}${s.fontFamily || ""}`);
  }), t;
}
function wO(e, t) {
  return {
    toolbar: {
      minHeight: 56,
      [e.up("xs")]: {
        "@media (orientation: landscape)": {
          minHeight: 48
        }
      },
      [e.up("sm")]: {
        minHeight: 64
      }
    },
    ...t
  };
}
function TO(e) {
  return Math.round(e * 1e5) / 1e5;
}
const Ug = {
  textTransform: "uppercase"
}, Xg = '"Roboto", "Helvetica", "Arial", sans-serif';
function Ly(e, t) {
  const {
    fontFamily: n = Xg,
    // The default font size of the Material Specification.
    fontSize: o = 14,
    // px
    fontWeightLight: i = 300,
    fontWeightRegular: s = 400,
    fontWeightMedium: a = 500,
    fontWeightBold: l = 700,
    // Tell MUI what's the font-size on the html element.
    // 16px is the default font-size used by browsers.
    htmlFontSize: c = 16,
    // Apply the CSS properties to all the variants.
    allVariants: u,
    pxToRem: d,
    ...p
  } = typeof t == "function" ? t(e) : t;
  process.env.NODE_ENV !== "production" && (typeof o != "number" && console.error("MUI: `fontSize` is required to be a number."), typeof c != "number" && console.error("MUI: `htmlFontSize` is required to be a number."));
  const m = o / 14, g = d || ((b) => `${b / c * m}rem`), h = (b, y, C, x, T) => ({
    fontFamily: n,
    fontWeight: b,
    fontSize: g(y),
    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
    lineHeight: C,
    // The letter spacing was designed for the Roboto font-family. Using the same letter-spacing
    // across font-families can cause issues with the kerning.
    ...n === Xg ? {
      letterSpacing: `${TO(x / y)}em`
    } : {},
    ...T,
    ...u
  }), v = {
    h1: h(i, 96, 1.167, -1.5),
    h2: h(i, 60, 1.2, -0.5),
    h3: h(s, 48, 1.167, 0),
    h4: h(s, 34, 1.235, 0.25),
    h5: h(s, 24, 1.334, 0),
    h6: h(a, 20, 1.6, 0.15),
    subtitle1: h(s, 16, 1.75, 0.15),
    subtitle2: h(a, 14, 1.57, 0.1),
    body1: h(s, 16, 1.5, 0.15),
    body2: h(s, 14, 1.43, 0.15),
    button: h(a, 14, 1.75, 0.4, Ug),
    caption: h(s, 12, 1.66, 0.4),
    overline: h(s, 12, 2.66, 1, Ug),
    // TODO v6: Remove handling of 'inherit' variant from the theme as it is already handled in Material UI's Typography component. Also, remember to remove the associated types.
    inherit: {
      fontFamily: "inherit",
      fontWeight: "inherit",
      fontSize: "inherit",
      lineHeight: "inherit",
      letterSpacing: "inherit"
    }
  };
  return bn({
    htmlFontSize: c,
    pxToRem: g,
    fontFamily: n,
    fontSize: o,
    fontWeightLight: i,
    fontWeightRegular: s,
    fontWeightMedium: a,
    fontWeightBold: l,
    ...v
  }, p, {
    clone: !1
    // No need to clone deep
  });
}
const IO = 0.2, RO = 0.14, OO = 0.12;
function Gt(...e) {
  return [`${e[0]}px ${e[1]}px ${e[2]}px ${e[3]}px rgba(0,0,0,${IO})`, `${e[4]}px ${e[5]}px ${e[6]}px ${e[7]}px rgba(0,0,0,${RO})`, `${e[8]}px ${e[9]}px ${e[10]}px ${e[11]}px rgba(0,0,0,${OO})`].join(",");
}
const EO = ["none", Gt(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), Gt(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), Gt(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), Gt(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), Gt(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), Gt(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), Gt(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), Gt(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), Gt(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), Gt(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), Gt(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), Gt(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), Gt(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), Gt(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), Gt(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), Gt(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), Gt(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), Gt(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), Gt(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), Gt(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), Gt(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), Gt(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), Gt(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), Gt(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)], PO = {
  // This is the most common easing curve.
  easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
  // Objects enter the screen at full velocity from off-screen and
  // slowly decelerate to a resting point.
  easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
  // Objects leave the screen at full velocity. They do not decelerate when off-screen.
  easeIn: "cubic-bezier(0.4, 0, 1, 1)",
  // The sharp curve is used by objects that may return to the screen at any time.
  sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
}, _y = {
  shortest: 150,
  shorter: 200,
  short: 250,
  // most basic recommended timing
  standard: 300,
  // this is to be used in complex animations
  complex: 375,
  // recommended when something is entering screen
  enteringScreen: 225,
  // recommended when something is leaving screen
  leavingScreen: 195
};
function Yg(e) {
  return `${Math.round(e)}ms`;
}
function AO(e) {
  if (!e)
    return 0;
  const t = e / 36;
  return Math.min(Math.round((4 + 15 * t ** 0.25 + t / 5) * 10), 3e3);
}
function DO(e) {
  const t = {
    ...PO,
    ...e.easing
  }, n = {
    ..._y,
    ...e.duration
  };
  return {
    getAutoHeightDuration: AO,
    create: (i = ["all"], s = {}) => {
      const {
        duration: a = n.standard,
        easing: l = t.easeInOut,
        delay: c = 0,
        ...u
      } = s;
      if (process.env.NODE_ENV !== "production") {
        const d = (m) => typeof m == "string", p = (m) => !Number.isNaN(parseFloat(m));
        !d(i) && !Array.isArray(i) && console.error('MUI: Argument "props" must be a string or Array.'), !p(a) && !d(a) && console.error(`MUI: Argument "duration" must be a number or a string but found ${a}.`), d(l) || console.error('MUI: Argument "easing" must be a string.'), !p(c) && !d(c) && console.error('MUI: Argument "delay" must be a number or a string.'), typeof s != "object" && console.error(["MUI: Secong argument of transition.create must be an object.", "Arguments should be either `create('prop1', options)` or `create(['prop1', 'prop2'], options)`"].join(`
`)), Object.keys(u).length !== 0 && console.error(`MUI: Unrecognized argument(s) [${Object.keys(u).join(",")}].`);
      }
      return (Array.isArray(i) ? i : [i]).map((d) => `${d} ${typeof a == "string" ? a : Yg(a)} ${l} ${typeof c == "string" ? c : Yg(c)}`).join(",");
    },
    ...e,
    easing: t,
    duration: n
  };
}
const MO = {
  mobileStepper: 1e3,
  fab: 1050,
  speedDial: 1050,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500
};
function sp(e = {}, ...t) {
  const {
    breakpoints: n,
    mixins: o = {},
    spacing: i,
    palette: s = {},
    transitions: a = {},
    typography: l = {},
    shape: c,
    ...u
  } = e;
  if (e.vars)
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `vars` is a private field used for CSS variables support.\nPlease use another name." : Yo(20));
  const d = bf(s), p = Bc(e);
  let m = bn(p, {
    mixins: wO(p.breakpoints, o),
    palette: d,
    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.
    shadows: EO.slice(),
    typography: Ly(d, l),
    transitions: DO(a),
    zIndex: {
      ...MO
    }
  });
  if (m = bn(m, u), m = t.reduce((g, h) => bn(g, h), m), process.env.NODE_ENV !== "production") {
    const g = ["active", "checked", "completed", "disabled", "error", "expanded", "focused", "focusVisible", "required", "selected"], h = (v, b) => {
      let y;
      for (y in v) {
        const C = v[y];
        if (g.includes(y) && Object.keys(C).length > 0) {
          if (process.env.NODE_ENV !== "production") {
            const x = We("", y);
            console.error([`MUI: The \`${b}\` component increases the CSS specificity of the \`${y}\` internal state.`, "You can not override it like this: ", JSON.stringify(v, null, 2), "", `Instead, you need to use the '&.${x}' syntax:`, JSON.stringify({
              root: {
                [`&.${x}`]: C
              }
            }, null, 2), "", "https://mui.com/r/state-classes-guide"].join(`
`));
          }
          v[y] = {};
        }
      }
    };
    Object.keys(m.components).forEach((v) => {
      const b = m.components[v].styleOverrides;
      b && v.startsWith("Mui") && h(b, v);
    });
  }
  return m.unstable_sxConfig = {
    ...ka,
    ...u == null ? void 0 : u.unstable_sxConfig
  }, m.unstable_sx = function(h) {
    return pi({
      sx: h,
      theme: this
    });
  }, m;
}
function ap(e) {
  let t;
  return e < 1 ? t = 5.11916 * e ** 2 : t = 4.5 * Math.log(e + 1) + 2, Math.round(t * 10) / 1e3;
}
const jO = [...Array(25)].map((e, t) => {
  if (t === 0)
    return "none";
  const n = ap(t);
  return `linear-gradient(rgba(255 255 255 / ${n}), rgba(255 255 255 / ${n}))`;
});
function By(e) {
  return {
    inputPlaceholder: e === "dark" ? 0.5 : 0.42,
    inputUnderline: e === "dark" ? 0.7 : 0.42,
    switchTrackDisabled: e === "dark" ? 0.2 : 0.12,
    switchTrack: e === "dark" ? 0.3 : 0.38
  };
}
function zy(e) {
  return e === "dark" ? jO : [];
}
function kO(e) {
  const {
    palette: t = {
      mode: "light"
    },
    // need to cast to avoid module augmentation test
    opacity: n,
    overlays: o,
    ...i
  } = e, s = bf(t);
  return {
    palette: s,
    opacity: {
      ...By(s.mode),
      ...n
    },
    overlays: o || zy(s.mode),
    ...i
  };
}
function FO(e) {
  var t;
  return !!e[0].match(/(cssVarPrefix|colorSchemeSelector|typography|mixins|breakpoints|direction|transitions)/) || !!e[0].match(/sxConfig$/) || // ends with sxConfig
  e[0] === "palette" && !!((t = e[1]) != null && t.match(/(mode|contrastThreshold|tonalOffset)/));
}
const NO = (e) => [...[...Array(25)].map((t, n) => `--${e ? `${e}-` : ""}overlays-${n}`), `--${e ? `${e}-` : ""}palette-AppBar-darkBg`, `--${e ? `${e}-` : ""}palette-AppBar-darkColor`], VO = (e) => (t, n) => {
  const o = e.colorSchemeSelector;
  let i = o;
  if (o === "class" && (i = ".%s"), o === "data" && (i = "[data-%s]"), o != null && o.startsWith("data-") && !o.includes("%s") && (i = `[${o}="%s"]`), e.defaultColorScheme === t) {
    if (t === "dark") {
      const s = {};
      return NO(e.cssVarPrefix).forEach((a) => {
        s[a] = n[a], delete n[a];
      }), i === "media" ? {
        ":root": n,
        "@media (prefers-color-scheme: dark)": {
          ":root": s
        }
      } : i ? {
        [i.replace("%s", t)]: s,
        [`:root, ${i.replace("%s", t)}`]: n
      } : {
        ":root": {
          ...n,
          ...s
        }
      };
    }
    if (i && i !== "media")
      return `:root, ${i.replace("%s", String(t))}`;
  } else if (t) {
    if (i === "media")
      return {
        [`@media (prefers-color-scheme: ${String(t)})`]: {
          ":root": n
        }
      };
    if (i)
      return i.replace("%s", String(t));
  }
  return ":root";
};
function $O(e) {
  return Wo(e) || typeof e > "u" || typeof e == "string" || typeof e == "boolean" || typeof e == "number" || Array.isArray(e);
}
function LO(e = {}) {
  const t = {
    ...e
  };
  function n(o) {
    const i = Object.entries(o);
    for (let s = 0; s < i.length; s++) {
      const [a, l] = i[s];
      !$O(l) || a.startsWith("unstable_") ? delete o[a] : Wo(l) && (o[a] = {
        ...l
      }, n(o[a]));
    }
  }
  return n(t), `import { unstable_createBreakpoints as createBreakpoints, createTransitions } from '@mui/material/styles';

const theme = ${JSON.stringify(t, null, 2)};

theme.breakpoints = createBreakpoints(theme.breakpoints || {});
theme.transitions = createTransitions(theme.transitions || {});

export default theme;`;
}
function _O(e, t) {
  t.forEach((n) => {
    e[n] || (e[n] = {});
  });
}
function ve(e, t, n) {
  !e[t] && n && (e[t] = n);
}
function Vs(e) {
  return !e || !e.startsWith("hsl") ? e : Iy(e);
}
function nr(e, t) {
  `${t}Channel` in e || (e[`${t}Channel`] = Ns(Vs(e[t]), `MUI: Can't create \`palette.${t}Channel\` because \`palette.${t}\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().
To suppress this warning, you need to explicitly provide the \`palette.${t}Channel\` as a string (in rgb format, for example "12 12 12") or undefined if you want to remove the channel token.`));
}
function BO(e) {
  return typeof e == "number" ? `${e}px` : typeof e == "string" || typeof e == "function" || Array.isArray(e) ? e : "8px";
}
const Lo = (e) => {
  try {
    return e();
  } catch {
  }
}, zO = (e = "mui") => oO(e);
function ld(e, t, n, o) {
  if (!t)
    return;
  t = t === !0 ? {} : t;
  const i = o === "dark" ? "dark" : "light";
  if (!n) {
    e[o] = kO({
      ...t,
      palette: {
        mode: i,
        ...t == null ? void 0 : t.palette
      }
    });
    return;
  }
  const {
    palette: s,
    ...a
  } = sp({
    ...n,
    palette: {
      mode: i,
      ...t == null ? void 0 : t.palette
    }
  });
  return e[o] = {
    ...t,
    palette: s,
    opacity: {
      ...By(i),
      ...t == null ? void 0 : t.opacity
    },
    overlays: (t == null ? void 0 : t.overlays) || zy(i)
  }, a;
}
function WO(e = {}, ...t) {
  const {
    colorSchemes: n = {
      light: !0
    },
    defaultColorScheme: o,
    disableCssColorScheme: i = !1,
    cssVarPrefix: s = "mui",
    shouldSkipGeneratingVar: a = FO,
    colorSchemeSelector: l = n.light && n.dark ? "media" : void 0,
    ...c
  } = e, u = Object.keys(n)[0], d = o || (n.light && u !== "light" ? "light" : u), p = zO(s), {
    [d]: m,
    light: g,
    dark: h,
    ...v
  } = n, b = {
    ...v
  };
  let y = m;
  if ((d === "dark" && !("dark" in n) || d === "light" && !("light" in n)) && (y = !0), !y)
    throw new Error(process.env.NODE_ENV !== "production" ? `MUI: The \`colorSchemes.${d}\` option is either missing or invalid.` : Yo(21, d));
  const C = ld(b, y, c, d);
  g && !b.light && ld(b, g, void 0, "light"), h && !b.dark && ld(b, h, void 0, "dark");
  let x = {
    defaultColorScheme: d,
    ...C,
    cssVarPrefix: s,
    colorSchemeSelector: l,
    getCssVar: p,
    colorSchemes: b,
    font: {
      ...SO(C.typography),
      ...C.font
    },
    spacing: BO(c.spacing)
  };
  Object.keys(x.colorSchemes).forEach((O) => {
    const I = x.colorSchemes[O].palette, P = (A) => {
      const D = A.split("-"), k = D[1], M = D[2];
      return p(A, I[k][M]);
    };
    if (I.mode === "light" && (ve(I.common, "background", "#fff"), ve(I.common, "onBackground", "#000")), I.mode === "dark" && (ve(I.common, "background", "#000"), ve(I.common, "onBackground", "#fff")), _O(I, ["Alert", "AppBar", "Avatar", "Button", "Chip", "FilledInput", "LinearProgress", "Skeleton", "Slider", "SnackbarContent", "SpeedDialAction", "StepConnector", "StepContent", "Switch", "TableCell", "Tooltip"]), I.mode === "light") {
      ve(I.Alert, "errorColor", zt(I.error.light, 0.6)), ve(I.Alert, "infoColor", zt(I.info.light, 0.6)), ve(I.Alert, "successColor", zt(I.success.light, 0.6)), ve(I.Alert, "warningColor", zt(I.warning.light, 0.6)), ve(I.Alert, "errorFilledBg", P("palette-error-main")), ve(I.Alert, "infoFilledBg", P("palette-info-main")), ve(I.Alert, "successFilledBg", P("palette-success-main")), ve(I.Alert, "warningFilledBg", P("palette-warning-main")), ve(I.Alert, "errorFilledColor", Lo(() => I.getContrastText(I.error.main))), ve(I.Alert, "infoFilledColor", Lo(() => I.getContrastText(I.info.main))), ve(I.Alert, "successFilledColor", Lo(() => I.getContrastText(I.success.main))), ve(I.Alert, "warningFilledColor", Lo(() => I.getContrastText(I.warning.main))), ve(I.Alert, "errorStandardBg", Wt(I.error.light, 0.9)), ve(I.Alert, "infoStandardBg", Wt(I.info.light, 0.9)), ve(I.Alert, "successStandardBg", Wt(I.success.light, 0.9)), ve(I.Alert, "warningStandardBg", Wt(I.warning.light, 0.9)), ve(I.Alert, "errorIconColor", P("palette-error-main")), ve(I.Alert, "infoIconColor", P("palette-info-main")), ve(I.Alert, "successIconColor", P("palette-success-main")), ve(I.Alert, "warningIconColor", P("palette-warning-main")), ve(I.AppBar, "defaultBg", P("palette-grey-100")), ve(I.Avatar, "defaultBg", P("palette-grey-400")), ve(I.Button, "inheritContainedBg", P("palette-grey-300")), ve(I.Button, "inheritContainedHoverBg", P("palette-grey-A100")), ve(I.Chip, "defaultBorder", P("palette-grey-400")), ve(I.Chip, "defaultAvatarColor", P("palette-grey-700")), ve(I.Chip, "defaultIconColor", P("palette-grey-700")), ve(I.FilledInput, "bg", "rgba(0, 0, 0, 0.06)"), ve(I.FilledInput, "hoverBg", "rgba(0, 0, 0, 0.09)"), ve(I.FilledInput, "disabledBg", "rgba(0, 0, 0, 0.12)"), ve(I.LinearProgress, "primaryBg", Wt(I.primary.main, 0.62)), ve(I.LinearProgress, "secondaryBg", Wt(I.secondary.main, 0.62)), ve(I.LinearProgress, "errorBg", Wt(I.error.main, 0.62)), ve(I.LinearProgress, "infoBg", Wt(I.info.main, 0.62)), ve(I.LinearProgress, "successBg", Wt(I.success.main, 0.62)), ve(I.LinearProgress, "warningBg", Wt(I.warning.main, 0.62)), ve(I.Skeleton, "bg", `rgba(${P("palette-text-primaryChannel")} / 0.11)`), ve(I.Slider, "primaryTrack", Wt(I.primary.main, 0.62)), ve(I.Slider, "secondaryTrack", Wt(I.secondary.main, 0.62)), ve(I.Slider, "errorTrack", Wt(I.error.main, 0.62)), ve(I.Slider, "infoTrack", Wt(I.info.main, 0.62)), ve(I.Slider, "successTrack", Wt(I.success.main, 0.62)), ve(I.Slider, "warningTrack", Wt(I.warning.main, 0.62));
      const A = rl(I.background.default, 0.8);
      ve(I.SnackbarContent, "bg", A), ve(I.SnackbarContent, "color", Lo(() => I.getContrastText(A))), ve(I.SpeedDialAction, "fabHoverBg", rl(I.background.paper, 0.15)), ve(I.StepConnector, "border", P("palette-grey-400")), ve(I.StepContent, "border", P("palette-grey-400")), ve(I.Switch, "defaultColor", P("palette-common-white")), ve(I.Switch, "defaultDisabledColor", P("palette-grey-100")), ve(I.Switch, "primaryDisabledColor", Wt(I.primary.main, 0.62)), ve(I.Switch, "secondaryDisabledColor", Wt(I.secondary.main, 0.62)), ve(I.Switch, "errorDisabledColor", Wt(I.error.main, 0.62)), ve(I.Switch, "infoDisabledColor", Wt(I.info.main, 0.62)), ve(I.Switch, "successDisabledColor", Wt(I.success.main, 0.62)), ve(I.Switch, "warningDisabledColor", Wt(I.warning.main, 0.62)), ve(I.TableCell, "border", Wt(ol(I.divider, 1), 0.88)), ve(I.Tooltip, "bg", ol(I.grey[700], 0.92));
    }
    if (I.mode === "dark") {
      ve(I.Alert, "errorColor", Wt(I.error.light, 0.6)), ve(I.Alert, "infoColor", Wt(I.info.light, 0.6)), ve(I.Alert, "successColor", Wt(I.success.light, 0.6)), ve(I.Alert, "warningColor", Wt(I.warning.light, 0.6)), ve(I.Alert, "errorFilledBg", P("palette-error-dark")), ve(I.Alert, "infoFilledBg", P("palette-info-dark")), ve(I.Alert, "successFilledBg", P("palette-success-dark")), ve(I.Alert, "warningFilledBg", P("palette-warning-dark")), ve(I.Alert, "errorFilledColor", Lo(() => I.getContrastText(I.error.dark))), ve(I.Alert, "infoFilledColor", Lo(() => I.getContrastText(I.info.dark))), ve(I.Alert, "successFilledColor", Lo(() => I.getContrastText(I.success.dark))), ve(I.Alert, "warningFilledColor", Lo(() => I.getContrastText(I.warning.dark))), ve(I.Alert, "errorStandardBg", zt(I.error.light, 0.9)), ve(I.Alert, "infoStandardBg", zt(I.info.light, 0.9)), ve(I.Alert, "successStandardBg", zt(I.success.light, 0.9)), ve(I.Alert, "warningStandardBg", zt(I.warning.light, 0.9)), ve(I.Alert, "errorIconColor", P("palette-error-main")), ve(I.Alert, "infoIconColor", P("palette-info-main")), ve(I.Alert, "successIconColor", P("palette-success-main")), ve(I.Alert, "warningIconColor", P("palette-warning-main")), ve(I.AppBar, "defaultBg", P("palette-grey-900")), ve(I.AppBar, "darkBg", P("palette-background-paper")), ve(I.AppBar, "darkColor", P("palette-text-primary")), ve(I.Avatar, "defaultBg", P("palette-grey-600")), ve(I.Button, "inheritContainedBg", P("palette-grey-800")), ve(I.Button, "inheritContainedHoverBg", P("palette-grey-700")), ve(I.Chip, "defaultBorder", P("palette-grey-700")), ve(I.Chip, "defaultAvatarColor", P("palette-grey-300")), ve(I.Chip, "defaultIconColor", P("palette-grey-300")), ve(I.FilledInput, "bg", "rgba(255, 255, 255, 0.09)"), ve(I.FilledInput, "hoverBg", "rgba(255, 255, 255, 0.13)"), ve(I.FilledInput, "disabledBg", "rgba(255, 255, 255, 0.12)"), ve(I.LinearProgress, "primaryBg", zt(I.primary.main, 0.5)), ve(I.LinearProgress, "secondaryBg", zt(I.secondary.main, 0.5)), ve(I.LinearProgress, "errorBg", zt(I.error.main, 0.5)), ve(I.LinearProgress, "infoBg", zt(I.info.main, 0.5)), ve(I.LinearProgress, "successBg", zt(I.success.main, 0.5)), ve(I.LinearProgress, "warningBg", zt(I.warning.main, 0.5)), ve(I.Skeleton, "bg", `rgba(${P("palette-text-primaryChannel")} / 0.13)`), ve(I.Slider, "primaryTrack", zt(I.primary.main, 0.5)), ve(I.Slider, "secondaryTrack", zt(I.secondary.main, 0.5)), ve(I.Slider, "errorTrack", zt(I.error.main, 0.5)), ve(I.Slider, "infoTrack", zt(I.info.main, 0.5)), ve(I.Slider, "successTrack", zt(I.success.main, 0.5)), ve(I.Slider, "warningTrack", zt(I.warning.main, 0.5));
      const A = rl(I.background.default, 0.98);
      ve(I.SnackbarContent, "bg", A), ve(I.SnackbarContent, "color", Lo(() => I.getContrastText(A))), ve(I.SpeedDialAction, "fabHoverBg", rl(I.background.paper, 0.15)), ve(I.StepConnector, "border", P("palette-grey-600")), ve(I.StepContent, "border", P("palette-grey-600")), ve(I.Switch, "defaultColor", P("palette-grey-300")), ve(I.Switch, "defaultDisabledColor", P("palette-grey-600")), ve(I.Switch, "primaryDisabledColor", zt(I.primary.main, 0.55)), ve(I.Switch, "secondaryDisabledColor", zt(I.secondary.main, 0.55)), ve(I.Switch, "errorDisabledColor", zt(I.error.main, 0.55)), ve(I.Switch, "infoDisabledColor", zt(I.info.main, 0.55)), ve(I.Switch, "successDisabledColor", zt(I.success.main, 0.55)), ve(I.Switch, "warningDisabledColor", zt(I.warning.main, 0.55)), ve(I.TableCell, "border", zt(ol(I.divider, 1), 0.68)), ve(I.Tooltip, "bg", ol(I.grey[700], 0.92));
    }
    nr(I.background, "default"), nr(I.background, "paper"), nr(I.common, "background"), nr(I.common, "onBackground"), nr(I, "divider"), Object.keys(I).forEach((A) => {
      const D = I[A];
      D && typeof D == "object" && (D.main && ve(I[A], "mainChannel", Ns(Vs(D.main))), D.light && ve(I[A], "lightChannel", Ns(Vs(D.light))), D.dark && ve(I[A], "darkChannel", Ns(Vs(D.dark))), D.contrastText && ve(I[A], "contrastTextChannel", Ns(Vs(D.contrastText))), A === "text" && (nr(I[A], "primary"), nr(I[A], "secondary")), A === "action" && (D.active && nr(I[A], "active"), D.selected && nr(I[A], "selected")));
    });
  }), x = t.reduce((O, I) => bn(O, I), x);
  const T = {
    prefix: s,
    disableCssColorScheme: i,
    shouldSkipGeneratingVar: a,
    getSelector: VO(x)
  }, {
    vars: w,
    generateThemeVars: R,
    generateStyleSheets: E
  } = sO(x, T);
  return x.vars = w, Object.entries(x.colorSchemes[x.defaultColorScheme]).forEach(([O, I]) => {
    x[O] = I;
  }), x.generateThemeVars = R, x.generateStyleSheets = E, x.generateSpacing = function() {
    return hy(c.spacing, Fc(this));
  }, x.getColorSchemeSelector = aO(l), x.spacing = x.generateSpacing(), x.shouldSkipGeneratingVar = a, x.unstable_sxConfig = {
    ...ka,
    ...c == null ? void 0 : c.unstable_sxConfig
  }, x.unstable_sx = function(I) {
    return pi({
      sx: I,
      theme: this
    });
  }, x.toRuntimeSource = LO, x;
}
function Zg(e, t, n) {
  e.colorSchemes && n && (e.colorSchemes[t] = {
    ...n !== !0 && n,
    palette: bf({
      ...n === !0 ? {} : n.palette,
      mode: t
    })
    // cast type to skip module augmentation test
  });
}
function Xc(e = {}, ...t) {
  const {
    palette: n,
    cssVariables: o = !1,
    colorSchemes: i = n ? void 0 : {
      light: !0
    },
    defaultColorScheme: s = n == null ? void 0 : n.mode,
    ...a
  } = e, l = s || "light", c = i == null ? void 0 : i[l], u = {
    ...i,
    ...n ? {
      [l]: {
        ...typeof c != "boolean" && c,
        palette: n
      }
    } : void 0
  };
  if (o === !1) {
    if (!("colorSchemes" in e))
      return sp(e, ...t);
    let d = n;
    "palette" in e || u[l] && (u[l] !== !0 ? d = u[l].palette : l === "dark" && (d = {
      mode: "dark"
    }));
    const p = sp({
      ...e,
      palette: d
    }, ...t);
    return p.defaultColorScheme = l, p.colorSchemes = u, p.palette.mode === "light" && (p.colorSchemes.light = {
      ...u.light !== !0 && u.light,
      palette: p.palette
    }, Zg(p, "dark", u.dark)), p.palette.mode === "dark" && (p.colorSchemes.dark = {
      ...u.dark !== !0 && u.dark,
      palette: p.palette
    }, Zg(p, "light", u.light)), p;
  }
  return !n && !("light" in u) && l === "light" && (u.light = !0), WO({
    ...a,
    colorSchemes: u,
    defaultColorScheme: l,
    ...typeof o != "boolean" && o
  }, ...t);
}
function HO(e) {
  return String(e).match(/[\d.\-+]*\s*(.*)/)[1] || "";
}
function GO(e) {
  return parseFloat(e);
}
const Yc = Xc();
function vn() {
  const e = zc(Yc);
  return process.env.NODE_ENV !== "production" && S.useDebugValue(e), e[Po] || e;
}
function at({
  props: e,
  name: t
}) {
  return wy({
    props: e,
    name: t,
    defaultTheme: Yc,
    themeId: Po
  });
}
function Zc(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
const Mn = (e) => Zc(e) && e !== "classes", Q = Cy({
  themeId: Po,
  defaultTheme: Yc,
  rootShouldForwardProp: Mn
});
function qg({
  theme: e,
  ...t
}) {
  const n = Po in e ? e[Po] : void 0;
  return /* @__PURE__ */ f.jsx(ua, {
    ...t,
    themeId: n ? Po : void 0,
    theme: n || e
  });
}
const il = {
  attribute: "data-mui-color-scheme",
  colorSchemeStorageKey: "mui-color-scheme",
  defaultLightColorScheme: "light",
  defaultDarkColorScheme: "dark",
  modeStorageKey: "mui-mode"
}, {
  CssVarsProvider: UO,
  useColorScheme: o6,
  getInitColorSchemeScript: r6
} = nO({
  themeId: Po,
  // @ts-ignore ignore module augmentation tests
  theme: () => Xc({
    cssVariables: !0
  }),
  colorSchemeStorageKey: il.colorSchemeStorageKey,
  modeStorageKey: il.modeStorageKey,
  defaultColorScheme: {
    light: il.defaultLightColorScheme,
    dark: il.defaultDarkColorScheme
  },
  resolveTheme: (e) => {
    const t = {
      ...e,
      typography: Ly(e.palette, e.typography)
    };
    return t.unstable_sx = function(o) {
      return pi({
        sx: o,
        theme: this
      });
    }, t;
  }
}), XO = UO;
function YO({
  theme: e,
  ...t
}) {
  return typeof e == "function" ? /* @__PURE__ */ f.jsx(qg, {
    theme: e,
    ...t
  }) : "colorSchemes" in (Po in e ? e[Po] : e) ? /* @__PURE__ */ f.jsx(XO, {
    theme: e,
    ...t
  }) : /* @__PURE__ */ f.jsx(qg, {
    theme: e,
    ...t
  });
}
function Wy(e) {
  return /* @__PURE__ */ f.jsx(by, {
    ...e,
    defaultTheme: Yc,
    themeId: Po
  });
}
process.env.NODE_ENV !== "production" && (Wy.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The styles you want to apply globally.
   */
  styles: r.oneOfType([r.array, r.func, r.number, r.object, r.string, r.bool])
});
function ZO(e) {
  return function(n) {
    return (
      // Pigment CSS `globalCss` support callback with theme inside an object but `GlobalStyles` support theme as a callback value.
      /* @__PURE__ */ f.jsx(Wy, {
        styles: typeof e == "function" ? (o) => e({
          theme: o,
          ...n
        }) : e
      })
    );
  };
}
function qO() {
  return Wc;
}
const Jg = {
  theme: void 0
};
function $e(e) {
  let t, n;
  return (o) => {
    let i = t;
    return (i === void 0 || o.theme !== n) && (Jg.theme = o.theme, i = e(Jg), t = i, n = o.theme), i;
  };
}
process.env.NODE_ENV !== "production" && (r.node, r.object.isRequired);
function Ye(e) {
  return qR(e);
}
function JO(e) {
  return We("MuiSvgIcon", e);
}
_e("MuiSvgIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]);
const KO = (e) => {
  const {
    color: t,
    fontSize: n,
    classes: o
  } = e, i = {
    root: ["root", t !== "inherit" && `color${ue(t)}`, `fontSize${ue(n)}`]
  };
  return Ue(i, JO, o);
}, QO = Q("svg", {
  name: "MuiSvgIcon",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color !== "inherit" && t[`color${ue(n.color)}`], t[`fontSize${ue(n.fontSize)}`]];
  }
})($e(({
  theme: e
}) => {
  var t, n, o, i, s, a, l, c, u, d, p, m, g, h;
  return {
    userSelect: "none",
    width: "1em",
    height: "1em",
    display: "inline-block",
    flexShrink: 0,
    transition: (i = (t = e.transitions) == null ? void 0 : t.create) == null ? void 0 : i.call(t, "fill", {
      duration: (o = (n = (e.vars ?? e).transitions) == null ? void 0 : n.duration) == null ? void 0 : o.shorter
    }),
    variants: [
      {
        props: (v) => !v.hasSvgAsChild,
        style: {
          // the <svg> will define the property that has `currentColor`
          // for example heroicons uses fill="none" and stroke="currentColor"
          fill: "currentColor"
        }
      },
      {
        props: {
          fontSize: "inherit"
        },
        style: {
          fontSize: "inherit"
        }
      },
      {
        props: {
          fontSize: "small"
        },
        style: {
          fontSize: ((a = (s = e.typography) == null ? void 0 : s.pxToRem) == null ? void 0 : a.call(s, 20)) || "1.25rem"
        }
      },
      {
        props: {
          fontSize: "medium"
        },
        style: {
          fontSize: ((c = (l = e.typography) == null ? void 0 : l.pxToRem) == null ? void 0 : c.call(l, 24)) || "1.5rem"
        }
      },
      {
        props: {
          fontSize: "large"
        },
        style: {
          fontSize: ((d = (u = e.typography) == null ? void 0 : u.pxToRem) == null ? void 0 : d.call(u, 35)) || "2.1875rem"
        }
      },
      // TODO v5 deprecate color prop, v6 remove for sx
      ...Object.entries((e.vars ?? e).palette).filter(([, v]) => v && v.main).map(([v]) => {
        var b, y;
        return {
          props: {
            color: v
          },
          style: {
            color: (y = (b = (e.vars ?? e).palette) == null ? void 0 : b[v]) == null ? void 0 : y.main
          }
        };
      }),
      {
        props: {
          color: "action"
        },
        style: {
          color: (m = (p = (e.vars ?? e).palette) == null ? void 0 : p.action) == null ? void 0 : m.active
        }
      },
      {
        props: {
          color: "disabled"
        },
        style: {
          color: (h = (g = (e.vars ?? e).palette) == null ? void 0 : g.action) == null ? void 0 : h.disabled
        }
      },
      {
        props: {
          color: "inherit"
        },
        style: {
          color: void 0
        }
      }
    ]
  };
})), pa = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiSvgIcon"
  }), {
    children: i,
    className: s,
    color: a = "inherit",
    component: l = "svg",
    fontSize: c = "medium",
    htmlColor: u,
    inheritViewBox: d = !1,
    titleAccess: p,
    viewBox: m = "0 0 24 24",
    ...g
  } = o, h = /* @__PURE__ */ S.isValidElement(i) && i.type === "svg", v = {
    ...o,
    color: a,
    component: l,
    fontSize: c,
    instanceFontSize: t.fontSize,
    inheritViewBox: d,
    viewBox: m,
    hasSvgAsChild: h
  }, b = {};
  d || (b.viewBox = m);
  const y = KO(v);
  return /* @__PURE__ */ f.jsxs(QO, {
    as: l,
    className: fe(y.root, s),
    focusable: "false",
    color: u,
    "aria-hidden": p ? void 0 : !0,
    role: p ? "img" : void 0,
    ref: n,
    ...b,
    ...g,
    ...h && i.props,
    ownerState: v,
    children: [h ? i.props.children : i, p ? /* @__PURE__ */ f.jsx("title", {
      children: p
    }) : null]
  });
});
process.env.NODE_ENV !== "production" && (pa.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Node passed into the SVG element.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.
   * @default 'inherit'
   */
  color: r.oneOfType([r.oneOf(["inherit", "action", "disabled", "primary", "secondary", "error", "info", "success", "warning"]), r.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.
   * @default 'medium'
   */
  fontSize: r.oneOfType([r.oneOf(["inherit", "large", "medium", "small"]), r.string]),
  /**
   * Applies a color attribute to the SVG element.
   */
  htmlColor: r.string,
  /**
   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`
   * prop will be ignored.
   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that
   * `component`'s viewBox to the root node.
   * @default false
   */
  inheritViewBox: r.bool,
  /**
   * The shape-rendering attribute. The behavior of the different options is described on the
   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).
   * If you are having issues with blurry icons you should investigate this prop.
   */
  shapeRendering: r.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * Provides a human-readable title for the element that contains it.
   * https://www.w3.org/TR/SVG-access/#Equivalent
   */
  titleAccess: r.string,
  /**
   * Allows you to redefine what the coordinates without units mean inside an SVG element.
   * For example, if the SVG element is 500 (width) by 200 (height),
   * and you pass viewBox="0 0 50 20",
   * this means that the coordinates inside the SVG will go from the top left corner (0,0)
   * to bottom right (50,20) and each unit will be worth 10px.
   * @default '0 0 24 24'
   */
  viewBox: r.string
});
pa && (pa.muiName = "SvgIcon");
function He(e, t) {
  function n(o, i) {
    return /* @__PURE__ */ f.jsx(pa, {
      "data-testid": `${t}Icon`,
      ref: i,
      ...o,
      children: e
    });
  }
  return process.env.NODE_ENV !== "production" && (n.displayName = `${t}Icon`), n.muiName = pa.muiName, /* @__PURE__ */ S.memo(/* @__PURE__ */ S.forwardRef(n));
}
var lp = { exports: {} }, Nt = {};
/**
 * @license React
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Kg;
function eE() {
  if (Kg) return Nt;
  Kg = 1;
  var e = Symbol.for("react.element"), t = Symbol.for("react.portal"), n = Symbol.for("react.fragment"), o = Symbol.for("react.strict_mode"), i = Symbol.for("react.profiler"), s = Symbol.for("react.provider"), a = Symbol.for("react.context"), l = Symbol.for("react.server_context"), c = Symbol.for("react.forward_ref"), u = Symbol.for("react.suspense"), d = Symbol.for("react.suspense_list"), p = Symbol.for("react.memo"), m = Symbol.for("react.lazy"), g = Symbol.for("react.offscreen"), h;
  h = Symbol.for("react.module.reference");
  function v(b) {
    if (typeof b == "object" && b !== null) {
      var y = b.$$typeof;
      switch (y) {
        case e:
          switch (b = b.type, b) {
            case n:
            case i:
            case o:
            case u:
            case d:
              return b;
            default:
              switch (b = b && b.$$typeof, b) {
                case l:
                case a:
                case c:
                case m:
                case p:
                case s:
                  return b;
                default:
                  return y;
              }
          }
        case t:
          return y;
      }
    }
  }
  return Nt.ContextConsumer = a, Nt.ContextProvider = s, Nt.Element = e, Nt.ForwardRef = c, Nt.Fragment = n, Nt.Lazy = m, Nt.Memo = p, Nt.Portal = t, Nt.Profiler = i, Nt.StrictMode = o, Nt.Suspense = u, Nt.SuspenseList = d, Nt.isAsyncMode = function() {
    return !1;
  }, Nt.isConcurrentMode = function() {
    return !1;
  }, Nt.isContextConsumer = function(b) {
    return v(b) === a;
  }, Nt.isContextProvider = function(b) {
    return v(b) === s;
  }, Nt.isElement = function(b) {
    return typeof b == "object" && b !== null && b.$$typeof === e;
  }, Nt.isForwardRef = function(b) {
    return v(b) === c;
  }, Nt.isFragment = function(b) {
    return v(b) === n;
  }, Nt.isLazy = function(b) {
    return v(b) === m;
  }, Nt.isMemo = function(b) {
    return v(b) === p;
  }, Nt.isPortal = function(b) {
    return v(b) === t;
  }, Nt.isProfiler = function(b) {
    return v(b) === i;
  }, Nt.isStrictMode = function(b) {
    return v(b) === o;
  }, Nt.isSuspense = function(b) {
    return v(b) === u;
  }, Nt.isSuspenseList = function(b) {
    return v(b) === d;
  }, Nt.isValidElementType = function(b) {
    return typeof b == "string" || typeof b == "function" || b === n || b === i || b === o || b === u || b === d || b === g || typeof b == "object" && b !== null && (b.$$typeof === m || b.$$typeof === p || b.$$typeof === s || b.$$typeof === a || b.$$typeof === c || b.$$typeof === h || b.getModuleId !== void 0);
  }, Nt.typeOf = v, Nt;
}
var Vt = {};
/**
 * @license React
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Qg;
function tE() {
  return Qg || (Qg = 1, process.env.NODE_ENV !== "production" && function() {
    var e = Symbol.for("react.element"), t = Symbol.for("react.portal"), n = Symbol.for("react.fragment"), o = Symbol.for("react.strict_mode"), i = Symbol.for("react.profiler"), s = Symbol.for("react.provider"), a = Symbol.for("react.context"), l = Symbol.for("react.server_context"), c = Symbol.for("react.forward_ref"), u = Symbol.for("react.suspense"), d = Symbol.for("react.suspense_list"), p = Symbol.for("react.memo"), m = Symbol.for("react.lazy"), g = Symbol.for("react.offscreen"), h = !1, v = !1, b = !1, y = !1, C = !1, x;
    x = Symbol.for("react.module.reference");
    function T(_) {
      return !!(typeof _ == "string" || typeof _ == "function" || _ === n || _ === i || C || _ === o || _ === u || _ === d || y || _ === g || h || v || b || typeof _ == "object" && _ !== null && (_.$$typeof === m || _.$$typeof === p || _.$$typeof === s || _.$$typeof === a || _.$$typeof === c || // This needs to include all possible module reference object
      // types supported by any Flight configuration anywhere since
      // we don't know which Flight build this will end up being used
      // with.
      _.$$typeof === x || _.getModuleId !== void 0));
    }
    function w(_) {
      if (typeof _ == "object" && _ !== null) {
        var oe = _.$$typeof;
        switch (oe) {
          case e:
            var te = _.type;
            switch (te) {
              case n:
              case i:
              case o:
              case u:
              case d:
                return te;
              default:
                var se = te && te.$$typeof;
                switch (se) {
                  case l:
                  case a:
                  case c:
                  case m:
                  case p:
                  case s:
                    return se;
                  default:
                    return oe;
                }
            }
          case t:
            return oe;
        }
      }
    }
    var R = a, E = s, O = e, I = c, P = n, A = m, D = p, k = t, M = i, F = o, N = u, W = d, H = !1, B = !1;
    function j(_) {
      return H || (H = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.")), !1;
    }
    function L(_) {
      return B || (B = !0, console.warn("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.")), !1;
    }
    function ee(_) {
      return w(_) === a;
    }
    function Y(_) {
      return w(_) === s;
    }
    function $(_) {
      return typeof _ == "object" && _ !== null && _.$$typeof === e;
    }
    function U(_) {
      return w(_) === c;
    }
    function X(_) {
      return w(_) === n;
    }
    function Z(_) {
      return w(_) === m;
    }
    function G(_) {
      return w(_) === p;
    }
    function K(_) {
      return w(_) === t;
    }
    function re(_) {
      return w(_) === i;
    }
    function ne(_) {
      return w(_) === o;
    }
    function z(_) {
      return w(_) === u;
    }
    function q(_) {
      return w(_) === d;
    }
    Vt.ContextConsumer = R, Vt.ContextProvider = E, Vt.Element = O, Vt.ForwardRef = I, Vt.Fragment = P, Vt.Lazy = A, Vt.Memo = D, Vt.Portal = k, Vt.Profiler = M, Vt.StrictMode = F, Vt.Suspense = N, Vt.SuspenseList = W, Vt.isAsyncMode = j, Vt.isConcurrentMode = L, Vt.isContextConsumer = ee, Vt.isContextProvider = Y, Vt.isElement = $, Vt.isForwardRef = U, Vt.isFragment = X, Vt.isLazy = Z, Vt.isMemo = G, Vt.isPortal = K, Vt.isProfiler = re, Vt.isStrictMode = ne, Vt.isSuspense = z, Vt.isSuspenseList = q, Vt.isValidElementType = T, Vt.typeOf = w;
  }()), Vt;
}
process.env.NODE_ENV === "production" ? lp.exports = eE() : lp.exports = tE();
var qc = lp.exports;
function tc(e, t) {
  return tc = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(n, o) {
    return n.__proto__ = o, n;
  }, tc(e, t);
}
function vf(e, t) {
  e.prototype = Object.create(t.prototype), e.prototype.constructor = e, tc(e, t);
}
function nE(e, t) {
  return e.classList ? !!t && e.classList.contains(t) : (" " + (e.className.baseVal || e.className) + " ").indexOf(" " + t + " ") !== -1;
}
function oE(e, t) {
  e.classList ? e.classList.add(t) : nE(e, t) || (typeof e.className == "string" ? e.className = e.className + " " + t : e.setAttribute("class", (e.className && e.className.baseVal || "") + " " + t));
}
function eh(e, t) {
  return e.replace(new RegExp("(^|\\s)" + t + "(?:\\s|$)", "g"), "$1").replace(/\s+/g, " ").replace(/^\s*|\s*$/g, "");
}
function rE(e, t) {
  e.classList ? e.classList.remove(t) : typeof e.className == "string" ? e.className = eh(e.className, t) : e.setAttribute("class", eh(e.className && e.className.baseVal || "", t));
}
const th = {
  disabled: !1
};
var iE = process.env.NODE_ENV !== "production" ? r.oneOfType([r.number, r.shape({
  enter: r.number,
  exit: r.number,
  appear: r.number
}).isRequired]) : null, sE = process.env.NODE_ENV !== "production" ? r.oneOfType([r.string, r.shape({
  enter: r.string,
  exit: r.string,
  active: r.string
}), r.shape({
  enter: r.string,
  enterDone: r.string,
  enterActive: r.string,
  exit: r.string,
  exitDone: r.string,
  exitActive: r.string
})]) : null;
const nc = Tn.createContext(null);
var Hy = function(t) {
  return t.scrollTop;
}, $s = "unmounted", Gr = "exited", Ur = "entering", Ai = "entered", cp = "exiting", so = /* @__PURE__ */ function(e) {
  vf(t, e);
  function t(o, i) {
    var s;
    s = e.call(this, o, i) || this;
    var a = i, l = a && !a.isMounting ? o.enter : o.appear, c;
    return s.appearStatus = null, o.in ? l ? (c = Gr, s.appearStatus = Ur) : c = Ai : o.unmountOnExit || o.mountOnEnter ? c = $s : c = Gr, s.state = {
      status: c
    }, s.nextCallback = null, s;
  }
  t.getDerivedStateFromProps = function(i, s) {
    var a = i.in;
    return a && s.status === $s ? {
      status: Gr
    } : null;
  };
  var n = t.prototype;
  return n.componentDidMount = function() {
    this.updateStatus(!0, this.appearStatus);
  }, n.componentDidUpdate = function(i) {
    var s = null;
    if (i !== this.props) {
      var a = this.state.status;
      this.props.in ? a !== Ur && a !== Ai && (s = Ur) : (a === Ur || a === Ai) && (s = cp);
    }
    this.updateStatus(!1, s);
  }, n.componentWillUnmount = function() {
    this.cancelNextCallback();
  }, n.getTimeouts = function() {
    var i = this.props.timeout, s, a, l;
    return s = a = l = i, i != null && typeof i != "number" && (s = i.exit, a = i.enter, l = i.appear !== void 0 ? i.appear : a), {
      exit: s,
      enter: a,
      appear: l
    };
  }, n.updateStatus = function(i, s) {
    if (i === void 0 && (i = !1), s !== null)
      if (this.cancelNextCallback(), s === Ur) {
        if (this.props.unmountOnExit || this.props.mountOnEnter) {
          var a = this.props.nodeRef ? this.props.nodeRef.current : Fs.findDOMNode(this);
          a && Hy(a);
        }
        this.performEnter(i);
      } else
        this.performExit();
    else this.props.unmountOnExit && this.state.status === Gr && this.setState({
      status: $s
    });
  }, n.performEnter = function(i) {
    var s = this, a = this.props.enter, l = this.context ? this.context.isMounting : i, c = this.props.nodeRef ? [l] : [Fs.findDOMNode(this), l], u = c[0], d = c[1], p = this.getTimeouts(), m = l ? p.appear : p.enter;
    if (!i && !a || th.disabled) {
      this.safeSetState({
        status: Ai
      }, function() {
        s.props.onEntered(u);
      });
      return;
    }
    this.props.onEnter(u, d), this.safeSetState({
      status: Ur
    }, function() {
      s.props.onEntering(u, d), s.onTransitionEnd(m, function() {
        s.safeSetState({
          status: Ai
        }, function() {
          s.props.onEntered(u, d);
        });
      });
    });
  }, n.performExit = function() {
    var i = this, s = this.props.exit, a = this.getTimeouts(), l = this.props.nodeRef ? void 0 : Fs.findDOMNode(this);
    if (!s || th.disabled) {
      this.safeSetState({
        status: Gr
      }, function() {
        i.props.onExited(l);
      });
      return;
    }
    this.props.onExit(l), this.safeSetState({
      status: cp
    }, function() {
      i.props.onExiting(l), i.onTransitionEnd(a.exit, function() {
        i.safeSetState({
          status: Gr
        }, function() {
          i.props.onExited(l);
        });
      });
    });
  }, n.cancelNextCallback = function() {
    this.nextCallback !== null && (this.nextCallback.cancel(), this.nextCallback = null);
  }, n.safeSetState = function(i, s) {
    s = this.setNextCallback(s), this.setState(i, s);
  }, n.setNextCallback = function(i) {
    var s = this, a = !0;
    return this.nextCallback = function(l) {
      a && (a = !1, s.nextCallback = null, i(l));
    }, this.nextCallback.cancel = function() {
      a = !1;
    }, this.nextCallback;
  }, n.onTransitionEnd = function(i, s) {
    this.setNextCallback(s);
    var a = this.props.nodeRef ? this.props.nodeRef.current : Fs.findDOMNode(this), l = i == null && !this.props.addEndListener;
    if (!a || l) {
      setTimeout(this.nextCallback, 0);
      return;
    }
    if (this.props.addEndListener) {
      var c = this.props.nodeRef ? [this.nextCallback] : [a, this.nextCallback], u = c[0], d = c[1];
      this.props.addEndListener(u, d);
    }
    i != null && setTimeout(this.nextCallback, i);
  }, n.render = function() {
    var i = this.state.status;
    if (i === $s)
      return null;
    var s = this.props, a = s.children;
    s.in, s.mountOnEnter, s.unmountOnExit, s.appear, s.enter, s.exit, s.timeout, s.addEndListener, s.onEnter, s.onEntering, s.onEntered, s.onExit, s.onExiting, s.onExited, s.nodeRef;
    var l = Xe(s, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
    return (
      // allows for nested Transitions
      /* @__PURE__ */ Tn.createElement(nc.Provider, {
        value: null
      }, typeof a == "function" ? a(i, l) : Tn.cloneElement(Tn.Children.only(a), l))
    );
  }, t;
}(Tn.Component);
so.contextType = nc;
so.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * A React reference to DOM element that need to transition:
   * https://stackoverflow.com/a/51127130/4671932
   *
   *   - When `nodeRef` prop is used, `node` is not passed to callback functions
   *      (e.g. `onEnter`) because user already has direct access to the node.
   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
   *     `nodeRef` need to be provided to `Transition` with changed `key` prop
   *     (see
   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
   */
  nodeRef: r.shape({
    current: typeof Element > "u" ? r.any : function(e, t, n, o, i, s) {
      var a = e[t];
      return r.instanceOf(a && "ownerDocument" in a ? a.ownerDocument.defaultView.Element : Element)(e, t, n, o, i, s);
    }
  }),
  /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: r.oneOfType([r.func.isRequired, r.element.isRequired]).isRequired,
  /**
   * Show the component; triggers the enter or exit states
   */
  in: r.bool,
  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: r.bool,
  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: r.bool,
  /**
   * By default the child component does not perform the enter transition when
   * it first mounts, regardless of the value of `in`. If you want this
   * behavior, set both `appear` and `in` to `true`.
   *
   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
   * > only adds an additional enter transition. However, in the
   * > `<CSSTransition>` component that first enter transition does result in
   * > additional `.appear-*` classes, that way you can choose to style it
   * > differently.
   */
  appear: r.bool,
  /**
   * Enable or disable enter transitions.
   */
  enter: r.bool,
  /**
   * Enable or disable exit transitions.
   */
  exit: r.bool,
  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */
  timeout: function(t) {
    var n = iE;
    t.addEndListener || (n = n.isRequired);
    for (var o = arguments.length, i = new Array(o > 1 ? o - 1 : 0), s = 1; s < o; s++)
      i[s - 1] = arguments[s];
    return n.apply(void 0, [t].concat(i));
  },
  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. Timeouts are still used as a fallback if provided.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: r.func,
  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: r.func,
  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: r.func,
  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: r.func,
  /**
   * Callback fired before the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: r.func,
  /**
   * Callback fired after the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: r.func,
  /**
   * Callback fired after the "exited" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: r.func
} : {};
function Ti() {
}
so.defaultProps = {
  in: !1,
  mountOnEnter: !1,
  unmountOnExit: !1,
  appear: !1,
  enter: !0,
  exit: !0,
  onEnter: Ti,
  onEntering: Ti,
  onEntered: Ti,
  onExit: Ti,
  onExiting: Ti,
  onExited: Ti
};
so.UNMOUNTED = $s;
so.EXITED = Gr;
so.ENTERING = Ur;
so.ENTERED = Ai;
so.EXITING = cp;
var aE = function(t, n) {
  return t && n && n.split(" ").forEach(function(o) {
    return oE(t, o);
  });
}, cd = function(t, n) {
  return t && n && n.split(" ").forEach(function(o) {
    return rE(t, o);
  });
}, yf = /* @__PURE__ */ function(e) {
  vf(t, e);
  function t() {
    for (var o, i = arguments.length, s = new Array(i), a = 0; a < i; a++)
      s[a] = arguments[a];
    return o = e.call.apply(e, [this].concat(s)) || this, o.appliedClasses = {
      appear: {},
      enter: {},
      exit: {}
    }, o.onEnter = function(l, c) {
      var u = o.resolveArguments(l, c), d = u[0], p = u[1];
      o.removeClasses(d, "exit"), o.addClass(d, p ? "appear" : "enter", "base"), o.props.onEnter && o.props.onEnter(l, c);
    }, o.onEntering = function(l, c) {
      var u = o.resolveArguments(l, c), d = u[0], p = u[1], m = p ? "appear" : "enter";
      o.addClass(d, m, "active"), o.props.onEntering && o.props.onEntering(l, c);
    }, o.onEntered = function(l, c) {
      var u = o.resolveArguments(l, c), d = u[0], p = u[1], m = p ? "appear" : "enter";
      o.removeClasses(d, m), o.addClass(d, m, "done"), o.props.onEntered && o.props.onEntered(l, c);
    }, o.onExit = function(l) {
      var c = o.resolveArguments(l), u = c[0];
      o.removeClasses(u, "appear"), o.removeClasses(u, "enter"), o.addClass(u, "exit", "base"), o.props.onExit && o.props.onExit(l);
    }, o.onExiting = function(l) {
      var c = o.resolveArguments(l), u = c[0];
      o.addClass(u, "exit", "active"), o.props.onExiting && o.props.onExiting(l);
    }, o.onExited = function(l) {
      var c = o.resolveArguments(l), u = c[0];
      o.removeClasses(u, "exit"), o.addClass(u, "exit", "done"), o.props.onExited && o.props.onExited(l);
    }, o.resolveArguments = function(l, c) {
      return o.props.nodeRef ? [o.props.nodeRef.current, l] : [l, c];
    }, o.getClassNames = function(l) {
      var c = o.props.classNames, u = typeof c == "string", d = u && c ? c + "-" : "", p = u ? "" + d + l : c[l], m = u ? p + "-active" : c[l + "Active"], g = u ? p + "-done" : c[l + "Done"];
      return {
        baseClassName: p,
        activeClassName: m,
        doneClassName: g
      };
    }, o;
  }
  var n = t.prototype;
  return n.addClass = function(i, s, a) {
    var l = this.getClassNames(s)[a + "ClassName"], c = this.getClassNames("enter"), u = c.doneClassName;
    s === "appear" && a === "done" && u && (l += " " + u), a === "active" && i && Hy(i), l && (this.appliedClasses[s][a] = l, aE(i, l));
  }, n.removeClasses = function(i, s) {
    var a = this.appliedClasses[s], l = a.base, c = a.active, u = a.done;
    this.appliedClasses[s] = {}, l && cd(i, l), c && cd(i, c), u && cd(i, u);
  }, n.render = function() {
    var i = this.props;
    i.classNames;
    var s = Xe(i, ["classNames"]);
    return /* @__PURE__ */ Tn.createElement(so, V({}, s, {
      onEnter: this.onEnter,
      onEntered: this.onEntered,
      onEntering: this.onEntering,
      onExit: this.onExit,
      onExiting: this.onExiting,
      onExited: this.onExited
    }));
  }, t;
}(Tn.Component);
yf.defaultProps = {
  classNames: ""
};
yf.propTypes = process.env.NODE_ENV !== "production" ? V({}, so.propTypes, {
  /**
   * The animation classNames applied to the component as it appears, enters,
   * exits or has finished the transition. A single name can be provided, which
   * will be suffixed for each stage, e.g. `classNames="fade"` applies:
   *
   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`
   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`
   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`
   *
   * A few details to note about how these classes are applied:
   *
   * 1. They are _joined_ with the ones that are already defined on the child
   *    component, so if you want to add some base styles, you can use
   *    `className` without worrying that it will be overridden.
   *
   * 2. If the transition component mounts with `in={false}`, no classes are
   *    applied yet. You might be expecting `*-exit-done`, but if you think
   *    about it, a component cannot finish exiting if it hasn't entered yet.
   *
   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This
   *    allows you to define different behavior for when appearing is done and
   *    when regular entering is done, using selectors like
   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply
   *    an epic entrance animation when element first appears in the DOM using
   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can
   *    simply use `fade-enter-done` for defining both cases.
   *
   * Each individual classNames can also be specified independently like:
   *
   * ```js
   * classNames={{
   *  appear: 'my-appear',
   *  appearActive: 'my-active-appear',
   *  appearDone: 'my-done-appear',
   *  enter: 'my-enter',
   *  enterActive: 'my-active-enter',
   *  enterDone: 'my-done-enter',
   *  exit: 'my-exit',
   *  exitActive: 'my-active-exit',
   *  exitDone: 'my-done-exit',
   * }}
   * ```
   *
   * If you want to set these classes using CSS Modules:
   *
   * ```js
   * import styles from './styles.css';
   * ```
   *
   * you might want to use camelCase in your CSS file, that way could simply
   * spread them instead of listing them one by one:
   *
   * ```js
   * classNames={{ ...styles }}
   * ```
   *
   * @type {string | {
   *  appear?: string,
   *  appearActive?: string,
   *  appearDone?: string,
   *  enter?: string,
   *  enterActive?: string,
   *  enterDone?: string,
   *  exit?: string,
   *  exitActive?: string,
   *  exitDone?: string,
   * }}
   */
  classNames: sE,
  /**
   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is
   * applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEnter: r.func,
  /**
   * A `<Transition>` callback fired immediately after the 'enter-active' or
   * 'appear-active' class is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: r.func,
  /**
   * A `<Transition>` callback fired immediately after the 'enter' or
   * 'appear' classes are **removed** and the `done` class is added to the DOM node.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntered: r.func,
  /**
   * A `<Transition>` callback fired immediately after the 'exit' class is
   * applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExit: r.func,
  /**
   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExiting: r.func,
  /**
   * A `<Transition>` callback fired immediately after the 'exit' classes
   * are **removed** and the `exit-done` class is added to the DOM node.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExited: r.func
}) : {};
function Gy(e) {
  if (e === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}
function xf(e, t) {
  var n = function(s) {
    return t && Ml(s) ? t(s) : s;
  }, o = /* @__PURE__ */ Object.create(null);
  return e && gw.map(e, function(i) {
    return i;
  }).forEach(function(i) {
    o[i.key] = n(i);
  }), o;
}
function lE(e, t) {
  e = e || {}, t = t || {};
  function n(d) {
    return d in t ? t[d] : e[d];
  }
  var o = /* @__PURE__ */ Object.create(null), i = [];
  for (var s in e)
    s in t ? i.length && (o[s] = i, i = []) : i.push(s);
  var a, l = {};
  for (var c in t) {
    if (o[c])
      for (a = 0; a < o[c].length; a++) {
        var u = o[c][a];
        l[o[c][a]] = n(u);
      }
    l[c] = n(c);
  }
  for (a = 0; a < i.length; a++)
    l[i[a]] = n(i[a]);
  return l;
}
function Jr(e, t, n) {
  return n[t] != null ? n[t] : e.props[t];
}
function cE(e, t) {
  return xf(e.children, function(n) {
    return jl(n, {
      onExited: t.bind(null, n),
      in: !0,
      appear: Jr(n, "appear", e),
      enter: Jr(n, "enter", e),
      exit: Jr(n, "exit", e)
    });
  });
}
function uE(e, t, n) {
  var o = xf(e.children), i = lE(t, o);
  return Object.keys(i).forEach(function(s) {
    var a = i[s];
    if (Ml(a)) {
      var l = s in t, c = s in o, u = t[s], d = Ml(u) && !u.props.in;
      c && (!l || d) ? i[s] = jl(a, {
        onExited: n.bind(null, a),
        in: !0,
        exit: Jr(a, "exit", e),
        enter: Jr(a, "enter", e)
      }) : !c && l && !d ? i[s] = jl(a, {
        in: !1
      }) : c && l && Ml(u) && (i[s] = jl(a, {
        onExited: n.bind(null, a),
        in: u.props.in,
        exit: Jr(a, "exit", e),
        enter: Jr(a, "enter", e)
      }));
    }
  }), i;
}
var dE = Object.values || function(e) {
  return Object.keys(e).map(function(t) {
    return e[t];
  });
}, pE = {
  component: "div",
  childFactory: function(t) {
    return t;
  }
}, Va = /* @__PURE__ */ function(e) {
  vf(t, e);
  function t(o, i) {
    var s;
    s = e.call(this, o, i) || this;
    var a = s.handleExited.bind(Gy(s));
    return s.state = {
      contextValue: {
        isMounting: !0
      },
      handleExited: a,
      firstRender: !0
    }, s;
  }
  var n = t.prototype;
  return n.componentDidMount = function() {
    this.mounted = !0, this.setState({
      contextValue: {
        isMounting: !1
      }
    });
  }, n.componentWillUnmount = function() {
    this.mounted = !1;
  }, t.getDerivedStateFromProps = function(i, s) {
    var a = s.children, l = s.handleExited, c = s.firstRender;
    return {
      children: c ? cE(i, l) : uE(i, a, l),
      firstRender: !1
    };
  }, n.handleExited = function(i, s) {
    var a = xf(this.props.children);
    i.key in a || (i.props.onExited && i.props.onExited(s), this.mounted && this.setState(function(l) {
      var c = V({}, l.children);
      return delete c[i.key], {
        children: c
      };
    }));
  }, n.render = function() {
    var i = this.props, s = i.component, a = i.childFactory, l = Xe(i, ["component", "childFactory"]), c = this.state.contextValue, u = dE(this.state.children).map(a);
    return delete l.appear, delete l.enter, delete l.exit, s === null ? /* @__PURE__ */ Tn.createElement(nc.Provider, {
      value: c
    }, u) : /* @__PURE__ */ Tn.createElement(nc.Provider, {
      value: c
    }, /* @__PURE__ */ Tn.createElement(s, l, u));
  }, t;
}(Tn.Component);
Va.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */
  component: r.any,
  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   *
   * While this component is meant for multiple `Transition` or `CSSTransition`
   * children, sometimes you may want to have a single transition child with
   * content that you want to be transitioned out and in when you change it
   * (e.g. routes, images etc.) In that case you can change the `key` prop of
   * the transition child as you change its content, this will cause
   * `TransitionGroup` to transition the child out and back in.
   */
  children: r.node,
  /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: r.bool,
  /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: r.bool,
  /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  exit: r.bool,
  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: r.func
} : {};
Va.defaultProps = pE;
const Uy = (e) => e.scrollTop;
function Ui(e, t) {
  const {
    timeout: n,
    easing: o,
    style: i = {}
  } = e;
  return {
    duration: i.transitionDuration ?? (typeof n == "number" ? n : n[t.mode] || 0),
    easing: i.transitionTimingFunction ?? (typeof o == "object" ? o[t.mode] : o),
    delay: i.transitionDelay
  };
}
function fE(e) {
  return We("MuiCollapse", e);
}
_e("MuiCollapse", ["root", "horizontal", "vertical", "entered", "hidden", "wrapper", "wrapperInner"]);
const mE = (e) => {
  const {
    orientation: t,
    classes: n
  } = e, o = {
    root: ["root", `${t}`],
    entered: ["entered"],
    hidden: ["hidden"],
    wrapper: ["wrapper", `${t}`],
    wrapperInner: ["wrapperInner", `${t}`]
  };
  return Ue(o, fE, n);
}, gE = Q("div", {
  name: "MuiCollapse",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.orientation], n.state === "entered" && t.entered, n.state === "exited" && !n.in && n.collapsedSize === "0px" && t.hidden];
  }
})($e(({
  theme: e
}) => ({
  height: 0,
  overflow: "hidden",
  transition: e.transitions.create("height"),
  variants: [{
    props: {
      orientation: "horizontal"
    },
    style: {
      height: "auto",
      width: 0,
      transition: e.transitions.create("width")
    }
  }, {
    props: {
      state: "entered"
    },
    style: {
      height: "auto",
      overflow: "visible"
    }
  }, {
    props: {
      state: "entered",
      orientation: "horizontal"
    },
    style: {
      width: "auto"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.state === "exited" && !t.in && t.collapsedSize === "0px",
    style: {
      visibility: "hidden"
    }
  }]
}))), hE = Q("div", {
  name: "MuiCollapse",
  slot: "Wrapper",
  overridesResolver: (e, t) => t.wrapper
})({
  // Hack to get children with a negative margin to not falsify the height computation.
  display: "flex",
  width: "100%",
  variants: [{
    props: {
      orientation: "horizontal"
    },
    style: {
      width: "auto",
      height: "100%"
    }
  }]
}), bE = Q("div", {
  name: "MuiCollapse",
  slot: "WrapperInner",
  overridesResolver: (e, t) => t.wrapperInner
})({
  width: "100%",
  variants: [{
    props: {
      orientation: "horizontal"
    },
    style: {
      width: "auto",
      height: "100%"
    }
  }]
}), Dr = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiCollapse"
  }), {
    addEndListener: i,
    children: s,
    className: a,
    collapsedSize: l = "0px",
    component: c,
    easing: u,
    in: d,
    onEnter: p,
    onEntered: m,
    onEntering: g,
    onExit: h,
    onExited: v,
    onExiting: b,
    orientation: y = "vertical",
    style: C,
    timeout: x = _y.standard,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: T = so,
    ...w
  } = o, R = {
    ...o,
    orientation: y,
    collapsedSize: l
  }, E = mE(R), O = vn(), I = qr(), P = S.useRef(null), A = S.useRef(), D = typeof l == "number" ? `${l}px` : l, k = y === "horizontal", M = k ? "width" : "height", F = S.useRef(null), N = Yt(n, F), W = (X) => (Z) => {
    if (X) {
      const G = F.current;
      Z === void 0 ? X(G) : X(G, Z);
    }
  }, H = () => P.current ? P.current[k ? "clientWidth" : "clientHeight"] : 0, B = W((X, Z) => {
    P.current && k && (P.current.style.position = "absolute"), X.style[M] = D, p && p(X, Z);
  }), j = W((X, Z) => {
    const G = H();
    P.current && k && (P.current.style.position = "");
    const {
      duration: K,
      easing: re
    } = Ui({
      style: C,
      timeout: x,
      easing: u
    }, {
      mode: "enter"
    });
    if (x === "auto") {
      const ne = O.transitions.getAutoHeightDuration(G);
      X.style.transitionDuration = `${ne}ms`, A.current = ne;
    } else
      X.style.transitionDuration = typeof K == "string" ? K : `${K}ms`;
    X.style[M] = `${G}px`, X.style.transitionTimingFunction = re, g && g(X, Z);
  }), L = W((X, Z) => {
    X.style[M] = "auto", m && m(X, Z);
  }), ee = W((X) => {
    X.style[M] = `${H()}px`, h && h(X);
  }), Y = W(v), $ = W((X) => {
    const Z = H(), {
      duration: G,
      easing: K
    } = Ui({
      style: C,
      timeout: x,
      easing: u
    }, {
      mode: "exit"
    });
    if (x === "auto") {
      const re = O.transitions.getAutoHeightDuration(Z);
      X.style.transitionDuration = `${re}ms`, A.current = re;
    } else
      X.style.transitionDuration = typeof G == "string" ? G : `${G}ms`;
    X.style[M] = D, X.style.transitionTimingFunction = K, b && b(X);
  }), U = (X) => {
    x === "auto" && I.start(A.current || 0, X), i && i(F.current, X);
  };
  return /* @__PURE__ */ f.jsx(T, {
    in: d,
    onEnter: B,
    onEntered: L,
    onEntering: j,
    onExit: ee,
    onExited: Y,
    onExiting: $,
    addEndListener: U,
    nodeRef: F,
    timeout: x === "auto" ? null : x,
    ...w,
    children: (X, Z) => /* @__PURE__ */ f.jsx(gE, {
      as: c,
      className: fe(E.root, a, {
        entered: E.entered,
        exited: !d && D === "0px" && E.hidden
      }[X]),
      style: {
        [k ? "minWidth" : "minHeight"]: D,
        ...C
      },
      ref: N,
      ...Z,
      // `ownerState` is set after `childProps` to override any existing `ownerState` property in `childProps`
      // that might have been forwarded from the Transition component.
      ownerState: {
        ...R,
        state: X
      },
      children: /* @__PURE__ */ f.jsx(hE, {
        ownerState: {
          ...R,
          state: X
        },
        className: E.wrapper,
        ref: P,
        children: /* @__PURE__ */ f.jsx(bE, {
          ownerState: {
            ...R,
            state: X
          },
          className: E.wrapperInner,
          children: s
        })
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (Dr.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: r.func,
  /**
   * The content node to be collapsed.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The width (horizontal) or height (vertical) of the container when collapsed.
   * @default '0px'
   */
  collapsedSize: r.oneOfType([r.number, r.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: Fa,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: r.oneOfType([r.shape({
    enter: r.string,
    exit: r.string
  }), r.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: r.bool,
  /**
   * @ignore
   */
  onEnter: r.func,
  /**
   * @ignore
   */
  onEntered: r.func,
  /**
   * @ignore
   */
  onEntering: r.func,
  /**
   * @ignore
   */
  onExit: r.func,
  /**
   * @ignore
   */
  onExited: r.func,
  /**
   * @ignore
   */
  onExiting: r.func,
  /**
   * The transition orientation.
   * @default 'vertical'
   */
  orientation: r.oneOf(["horizontal", "vertical"]),
  /**
   * @ignore
   */
  style: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default duration.standard
   */
  timeout: r.oneOfType([r.oneOf(["auto"]), r.number, r.shape({
    appear: r.number,
    enter: r.number,
    exit: r.number
  })])
});
Dr && (Dr.muiSupportAuto = !0);
function vE(e) {
  return We("MuiPaper", e);
}
_e("MuiPaper", ["root", "rounded", "outlined", "elevation", "elevation0", "elevation1", "elevation2", "elevation3", "elevation4", "elevation5", "elevation6", "elevation7", "elevation8", "elevation9", "elevation10", "elevation11", "elevation12", "elevation13", "elevation14", "elevation15", "elevation16", "elevation17", "elevation18", "elevation19", "elevation20", "elevation21", "elevation22", "elevation23", "elevation24"]);
const yE = (e) => {
  const {
    square: t,
    elevation: n,
    variant: o,
    classes: i
  } = e, s = {
    root: ["root", o, !t && "rounded", o === "elevation" && `elevation${n}`]
  };
  return Ue(s, vE, i);
}, xE = Q("div", {
  name: "MuiPaper",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], !n.square && t.rounded, n.variant === "elevation" && t[`elevation${n.elevation}`]];
  }
})($e(({
  theme: e
}) => ({
  backgroundColor: (e.vars || e).palette.background.paper,
  color: (e.vars || e).palette.text.primary,
  transition: e.transitions.create("box-shadow"),
  variants: [{
    props: ({
      ownerState: t
    }) => !t.square,
    style: {
      borderRadius: e.shape.borderRadius
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      border: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: {
      variant: "elevation"
    },
    style: {
      boxShadow: "var(--Paper-shadow)",
      backgroundImage: "var(--Paper-overlay)"
    }
  }]
}))), yn = /* @__PURE__ */ S.forwardRef(function(t, n) {
  var g;
  const o = Ye({
    props: t,
    name: "MuiPaper"
  }), i = vn(), {
    className: s,
    component: a = "div",
    elevation: l = 1,
    square: c = !1,
    variant: u = "elevation",
    ...d
  } = o, p = {
    ...o,
    component: a,
    elevation: l,
    square: c,
    variant: u
  }, m = yE(p);
  return process.env.NODE_ENV !== "production" && i.shadows[l] === void 0 && console.error([`MUI: The elevation provided <Paper elevation={${l}}> is not available in the theme.`, `Please make sure that \`theme.shadows[${l}]\` is defined.`].join(`
`)), /* @__PURE__ */ f.jsx(xE, {
    as: a,
    ownerState: p,
    className: fe(m.root, s),
    ref: n,
    ...d,
    style: {
      ...u === "elevation" && {
        "--Paper-shadow": (i.vars || i).shadows[l],
        ...i.vars && {
          "--Paper-overlay": (g = i.vars.overlays) == null ? void 0 : g[l]
        },
        ...!i.vars && i.palette.mode === "dark" && {
          "--Paper-overlay": `linear-gradient(${ze("#fff", ap(l))}, ${ze("#fff", ap(l))})`
        }
      },
      ...d.style
    }
  });
});
process.env.NODE_ENV !== "production" && (yn.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * Shadow depth, corresponds to `dp` in the spec.
   * It accepts values between 0 and 24 inclusive.
   * @default 1
   */
  elevation: oo(wr, (e) => {
    const {
      elevation: t,
      variant: n
    } = e;
    return t > 0 && n === "outlined" ? new Error(`MUI: Combining \`elevation={${t}}\` with \`variant="${n}"\` has no effect. Either use \`elevation={0}\` or use a different \`variant\`.`) : null;
  }),
  /**
   * If `true`, rounded corners are disabled.
   * @default false
   */
  square: r.bool,
  /**
   * @ignore
   */
  style: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * The variant to use.
   * @default 'elevation'
   */
  variant: r.oneOfType([r.oneOf(["elevation", "outlined"]), r.string])
});
function nn(e, t) {
  const {
    className: n,
    elementType: o,
    ownerState: i,
    externalForwardedProps: s,
    getSlotOwnerState: a,
    internalForwardedProps: l,
    ...c
  } = t, {
    component: u,
    slots: d = {
      [e]: void 0
    },
    slotProps: p = {
      [e]: void 0
    },
    ...m
  } = s, g = d[e] || o, h = jy(p[e], i), {
    props: {
      component: v,
      ...b
    },
    internalRef: y
  } = My({
    className: n,
    ...c,
    externalForwardedProps: e === "root" ? m : void 0,
    externalSlotProps: h
  }), C = Yt(y, h == null ? void 0 : h.ref, t.ref), x = a ? a(b) : {}, T = {
    ...i,
    ...x
  }, w = e === "root" ? v || u : v, R = ji(g, {
    ...e === "root" && !u && !d[e] && l,
    ...e !== "root" && !d[e] && l,
    ...b,
    ...w && {
      as: w
    },
    ref: C
  }, T);
  return Object.keys(x).forEach((E) => {
    delete R[E];
  }), [g, R];
}
class oc {
  constructor() {
    ys(this, "mountEffect", () => {
      this.shouldMount && !this.didMount && this.ref.current !== null && (this.didMount = !0, this.mounted.resolve());
    });
    this.ref = {
      current: null
    }, this.mounted = null, this.didMount = !1, this.shouldMount = !1, this.setShouldMount = null;
  }
  /** React ref to the ripple instance */
  /** If the ripple component should be mounted */
  /** Promise that resolves when the ripple component is mounted */
  /** If the ripple component has been mounted */
  /** React state hook setter */
  static create() {
    return new oc();
  }
  static use() {
    const t = Ey(oc.create).current, [n, o] = S.useState(!1);
    return t.shouldMount = n, t.setShouldMount = o, S.useEffect(t.mountEffect, [n]), t;
  }
  mount() {
    return this.mounted || (this.mounted = SE(), this.shouldMount = !0, this.setShouldMount(this.shouldMount)), this.mounted;
  }
  /* Ripple API */
  start(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.start(...t);
    });
  }
  stop(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.stop(...t);
    });
  }
  pulsate(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.pulsate(...t);
    });
  }
}
function CE() {
  return oc.use();
}
function SE() {
  let e, t;
  const n = new Promise((o, i) => {
    e = o, t = i;
  });
  return n.resolve = e, n.reject = t, n;
}
function Xy(e) {
  const {
    className: t,
    classes: n,
    pulsate: o = !1,
    rippleX: i,
    rippleY: s,
    rippleSize: a,
    in: l,
    onExited: c,
    timeout: u
  } = e, [d, p] = S.useState(!1), m = fe(t, n.ripple, n.rippleVisible, o && n.ripplePulsate), g = {
    width: a,
    height: a,
    top: -(a / 2) + s,
    left: -(a / 2) + i
  }, h = fe(n.child, d && n.childLeaving, o && n.childPulsate);
  return !l && !d && p(!0), S.useEffect(() => {
    if (!l && c != null) {
      const v = setTimeout(c, u);
      return () => {
        clearTimeout(v);
      };
    }
  }, [c, l, u]), /* @__PURE__ */ f.jsx("span", {
    className: m,
    style: g,
    children: /* @__PURE__ */ f.jsx("span", {
      className: h
    })
  });
}
process.env.NODE_ENV !== "production" && (Xy.propTypes = {
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object.isRequired,
  className: r.string,
  /**
   * @ignore - injected from TransitionGroup
   */
  in: r.bool,
  /**
   * @ignore - injected from TransitionGroup
   */
  onExited: r.func,
  /**
   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.
   */
  pulsate: r.bool,
  /**
   * Diameter of the ripple.
   */
  rippleSize: r.number,
  /**
   * Horizontal position of the ripple center.
   */
  rippleX: r.number,
  /**
   * Vertical position of the ripple center.
   */
  rippleY: r.number,
  /**
   * exit delay
   */
  timeout: r.number.isRequired
});
const po = _e("MuiTouchRipple", ["root", "ripple", "rippleVisible", "ripplePulsate", "child", "childLeaving", "childPulsate"]), up = 550, wE = 80, TE = ko`
  0% {
    transform: scale(0);
    opacity: 0.1;
  }

  100% {
    transform: scale(1);
    opacity: 0.3;
  }
`, IE = ko`
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
`, RE = ko`
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.92);
  }

  100% {
    transform: scale(1);
  }
`, OE = Q("span", {
  name: "MuiTouchRipple",
  slot: "Root"
})({
  overflow: "hidden",
  pointerEvents: "none",
  position: "absolute",
  zIndex: 0,
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  borderRadius: "inherit"
}), EE = Q(Xy, {
  name: "MuiTouchRipple",
  slot: "Ripple"
})`
  opacity: 0;
  position: absolute;

  &.${po.rippleVisible} {
    opacity: 0.3;
    transform: scale(1);
    animation-name: ${TE};
    animation-duration: ${up}ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
  }

  &.${po.ripplePulsate} {
    animation-duration: ${({
  theme: e
}) => e.transitions.duration.shorter}ms;
  }

  & .${po.child} {
    opacity: 1;
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: currentColor;
  }

  & .${po.childLeaving} {
    opacity: 0;
    animation-name: ${IE};
    animation-duration: ${up}ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
  }

  & .${po.childPulsate} {
    position: absolute;
    /* @noflip */
    left: 0px;
    top: 0;
    animation-name: ${RE};
    animation-duration: 2500ms;
    animation-timing-function: ${({
  theme: e
}) => e.transitions.easing.easeInOut};
    animation-iteration-count: infinite;
    animation-delay: 200ms;
  }
`, Yy = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiTouchRipple"
  }), {
    center: i = !1,
    classes: s = {},
    className: a,
    ...l
  } = o, [c, u] = S.useState([]), d = S.useRef(0), p = S.useRef(null);
  S.useEffect(() => {
    p.current && (p.current(), p.current = null);
  }, [c]);
  const m = S.useRef(!1), g = qr(), h = S.useRef(null), v = S.useRef(null), b = S.useCallback((T) => {
    const {
      pulsate: w,
      rippleX: R,
      rippleY: E,
      rippleSize: O,
      cb: I
    } = T;
    u((P) => [...P, /* @__PURE__ */ f.jsx(EE, {
      classes: {
        ripple: fe(s.ripple, po.ripple),
        rippleVisible: fe(s.rippleVisible, po.rippleVisible),
        ripplePulsate: fe(s.ripplePulsate, po.ripplePulsate),
        child: fe(s.child, po.child),
        childLeaving: fe(s.childLeaving, po.childLeaving),
        childPulsate: fe(s.childPulsate, po.childPulsate)
      },
      timeout: up,
      pulsate: w,
      rippleX: R,
      rippleY: E,
      rippleSize: O
    }, d.current)]), d.current += 1, p.current = I;
  }, [s]), y = S.useCallback((T = {}, w = {}, R = () => {
  }) => {
    const {
      pulsate: E = !1,
      center: O = i || w.pulsate,
      fakeElement: I = !1
      // For test purposes
    } = w;
    if ((T == null ? void 0 : T.type) === "mousedown" && m.current) {
      m.current = !1;
      return;
    }
    (T == null ? void 0 : T.type) === "touchstart" && (m.current = !0);
    const P = I ? null : v.current, A = P ? P.getBoundingClientRect() : {
      width: 0,
      height: 0,
      left: 0,
      top: 0
    };
    let D, k, M;
    if (O || T === void 0 || T.clientX === 0 && T.clientY === 0 || !T.clientX && !T.touches)
      D = Math.round(A.width / 2), k = Math.round(A.height / 2);
    else {
      const {
        clientX: F,
        clientY: N
      } = T.touches && T.touches.length > 0 ? T.touches[0] : T;
      D = Math.round(F - A.left), k = Math.round(N - A.top);
    }
    if (O)
      M = Math.sqrt((2 * A.width ** 2 + A.height ** 2) / 3), M % 2 === 0 && (M += 1);
    else {
      const F = Math.max(Math.abs((P ? P.clientWidth : 0) - D), D) * 2 + 2, N = Math.max(Math.abs((P ? P.clientHeight : 0) - k), k) * 2 + 2;
      M = Math.sqrt(F ** 2 + N ** 2);
    }
    T != null && T.touches ? h.current === null && (h.current = () => {
      b({
        pulsate: E,
        rippleX: D,
        rippleY: k,
        rippleSize: M,
        cb: R
      });
    }, g.start(wE, () => {
      h.current && (h.current(), h.current = null);
    })) : b({
      pulsate: E,
      rippleX: D,
      rippleY: k,
      rippleSize: M,
      cb: R
    });
  }, [i, b, g]), C = S.useCallback(() => {
    y({}, {
      pulsate: !0
    });
  }, [y]), x = S.useCallback((T, w) => {
    if (g.clear(), (T == null ? void 0 : T.type) === "touchend" && h.current) {
      h.current(), h.current = null, g.start(0, () => {
        x(T, w);
      });
      return;
    }
    h.current = null, u((R) => R.length > 0 ? R.slice(1) : R), p.current = w;
  }, [g]);
  return S.useImperativeHandle(n, () => ({
    pulsate: C,
    start: y,
    stop: x
  }), [C, y, x]), /* @__PURE__ */ f.jsx(OE, {
    className: fe(po.root, s.root, a),
    ref: v,
    ...l,
    children: /* @__PURE__ */ f.jsx(Va, {
      component: null,
      exit: !0,
      children: c
    })
  });
});
process.env.NODE_ENV !== "production" && (Yy.propTypes = {
  /**
   * If `true`, the ripple starts at the center of the component
   * rather than at the point of interaction.
   */
  center: r.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string
});
function PE(e) {
  return We("MuiButtonBase", e);
}
const AE = _e("MuiButtonBase", ["root", "disabled", "focusVisible"]), DE = (e) => {
  const {
    disabled: t,
    focusVisible: n,
    focusVisibleClassName: o,
    classes: i
  } = e, a = Ue({
    root: ["root", t && "disabled", n && "focusVisible"]
  }, PE, i);
  return n && o && (a.root += ` ${o}`), a;
}, ME = Q("button", {
  name: "MuiButtonBase",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  display: "inline-flex",
  alignItems: "center",
  justifyContent: "center",
  position: "relative",
  boxSizing: "border-box",
  WebkitTapHighlightColor: "transparent",
  backgroundColor: "transparent",
  // Reset default value
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  border: 0,
  margin: 0,
  // Remove the margin in Safari
  borderRadius: 0,
  padding: 0,
  // Remove the padding in Firefox
  cursor: "pointer",
  userSelect: "none",
  verticalAlign: "middle",
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // Reset
  textDecoration: "none",
  // So we take precedent over the style of a native <a /> element.
  color: "inherit",
  "&::-moz-focus-inner": {
    borderStyle: "none"
    // Remove Firefox dotted outline.
  },
  [`&.${AE.disabled}`]: {
    pointerEvents: "none",
    // Disable link interactions
    cursor: "default"
  },
  "@media print": {
    colorAdjust: "exact"
  }
}), yo = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiButtonBase"
  }), {
    action: i,
    centerRipple: s = !1,
    children: a,
    className: l,
    component: c = "button",
    disabled: u = !1,
    disableRipple: d = !1,
    disableTouchRipple: p = !1,
    focusRipple: m = !1,
    focusVisibleClassName: g,
    LinkComponent: h = "a",
    onBlur: v,
    onClick: b,
    onContextMenu: y,
    onDragLeave: C,
    onFocus: x,
    onFocusVisible: T,
    onKeyDown: w,
    onKeyUp: R,
    onMouseDown: E,
    onMouseLeave: O,
    onMouseUp: I,
    onTouchEnd: P,
    onTouchMove: A,
    onTouchStart: D,
    tabIndex: k = 0,
    TouchRippleProps: M,
    touchRippleRef: F,
    type: N,
    ...W
  } = o, H = S.useRef(null), B = CE(), j = Yt(B.ref, F), [L, ee] = S.useState(!1);
  u && L && ee(!1), S.useImperativeHandle(i, () => ({
    focusVisible: () => {
      ee(!0), H.current.focus();
    }
  }), []);
  const Y = B.shouldMount && !d && !u;
  S.useEffect(() => {
    L && m && !d && B.pulsate();
  }, [d, m, L, B]);
  function $(ie, be, xe = p) {
    return hn((Ie) => (be && be(Ie), xe || B[ie](Ie), !0));
  }
  const U = $("start", E), X = $("stop", y), Z = $("stop", C), G = $("stop", I), K = $("stop", (ie) => {
    L && ie.preventDefault(), O && O(ie);
  }), re = $("start", D), ne = $("stop", P), z = $("stop", A), q = $("stop", (ie) => {
    Gi(ie.target) || ee(!1), v && v(ie);
  }, !1), _ = hn((ie) => {
    H.current || (H.current = ie.currentTarget), Gi(ie.target) && (ee(!0), T && T(ie)), x && x(ie);
  }), oe = () => {
    const ie = H.current;
    return c && c !== "button" && !(ie.tagName === "A" && ie.href);
  }, te = hn((ie) => {
    m && !ie.repeat && L && ie.key === " " && B.stop(ie, () => {
      B.start(ie);
    }), ie.target === ie.currentTarget && oe() && ie.key === " " && ie.preventDefault(), w && w(ie), ie.target === ie.currentTarget && oe() && ie.key === "Enter" && !u && (ie.preventDefault(), b && b(ie));
  }), se = hn((ie) => {
    m && ie.key === " " && L && !ie.defaultPrevented && B.stop(ie, () => {
      B.pulsate(ie);
    }), R && R(ie), b && ie.target === ie.currentTarget && oe() && ie.key === " " && !ie.defaultPrevented && b(ie);
  });
  let ae = c;
  ae === "button" && (W.href || W.to) && (ae = h);
  const me = {};
  ae === "button" ? (me.type = N === void 0 ? "button" : N, me.disabled = u) : (!W.href && !W.to && (me.role = "button"), u && (me["aria-disabled"] = u));
  const ye = Yt(n, H), Te = {
    ...o,
    centerRipple: s,
    component: c,
    disabled: u,
    disableRipple: d,
    disableTouchRipple: p,
    focusRipple: m,
    tabIndex: k,
    focusVisible: L
  }, Ve = DE(Te);
  return /* @__PURE__ */ f.jsxs(ME, {
    as: ae,
    className: fe(Ve.root, l),
    ownerState: Te,
    onBlur: q,
    onClick: b,
    onContextMenu: X,
    onFocus: _,
    onKeyDown: te,
    onKeyUp: se,
    onMouseDown: U,
    onMouseLeave: K,
    onMouseUp: G,
    onDragLeave: Z,
    onTouchEnd: ne,
    onTouchMove: z,
    onTouchStart: re,
    ref: ye,
    tabIndex: u ? -1 : k,
    type: N,
    ...me,
    ...W,
    children: [a, Y ? /* @__PURE__ */ f.jsx(Yy, {
      ref: j,
      center: s,
      ...M
    }) : null]
  });
});
process.env.NODE_ENV !== "production" && (yo.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports `focusVisible()` action.
   */
  action: In,
  /**
   * If `true`, the ripples are centered.
   * They won't start at the cursor interaction position.
   * @default false
   */
  centerRipple: r.bool,
  /**
   * The content of the component.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: Fa,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: r.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: r.bool,
  /**
   * If `true`, the touch ripple effect is disabled.
   * @default false
   */
  disableTouchRipple: r.bool,
  /**
   * If `true`, the base button will have a keyboard focus ripple.
   * @default false
   */
  focusRipple: r.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: r.string,
  /**
   * @ignore
   */
  href: r.any,
  /**
   * The component used to render a link when the `href` prop is provided.
   * @default 'a'
   */
  LinkComponent: r.elementType,
  /**
   * @ignore
   */
  onBlur: r.func,
  /**
   * @ignore
   */
  onClick: r.func,
  /**
   * @ignore
   */
  onContextMenu: r.func,
  /**
   * @ignore
   */
  onDragLeave: r.func,
  /**
   * @ignore
   */
  onFocus: r.func,
  /**
   * Callback fired when the component is focused with a keyboard.
   * We trigger a `onFocus` callback too.
   */
  onFocusVisible: r.func,
  /**
   * @ignore
   */
  onKeyDown: r.func,
  /**
   * @ignore
   */
  onKeyUp: r.func,
  /**
   * @ignore
   */
  onMouseDown: r.func,
  /**
   * @ignore
   */
  onMouseLeave: r.func,
  /**
   * @ignore
   */
  onMouseUp: r.func,
  /**
   * @ignore
   */
  onTouchEnd: r.func,
  /**
   * @ignore
   */
  onTouchMove: r.func,
  /**
   * @ignore
   */
  onTouchStart: r.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * @default 0
   */
  tabIndex: r.number,
  /**
   * Props applied to the `TouchRipple` element.
   */
  TouchRippleProps: r.object,
  /**
   * A ref that points to the `TouchRipple` element.
   */
  touchRippleRef: r.oneOfType([r.func, r.shape({
    current: r.shape({
      pulsate: r.func.isRequired,
      start: r.func.isRequired,
      stop: r.func.isRequired
    })
  })]),
  /**
   * @ignore
   */
  type: r.oneOfType([r.oneOf(["button", "reset", "submit"]), r.string])
});
function jE(e) {
  return typeof e.main == "string";
}
function kE(e, t = []) {
  if (!jE(e))
    return !1;
  for (const n of t)
    if (!e.hasOwnProperty(n) || typeof e[n] != "string")
      return !1;
  return !0;
}
function wt(e = []) {
  return ([, t]) => t && kE(t, e);
}
function FE(e) {
  return We("MuiAlert", e);
}
const nh = _e("MuiAlert", ["root", "action", "icon", "message", "filled", "colorSuccess", "colorInfo", "colorWarning", "colorError", "filledSuccess", "filledInfo", "filledWarning", "filledError", "outlined", "outlinedSuccess", "outlinedInfo", "outlinedWarning", "outlinedError", "standard", "standardSuccess", "standardInfo", "standardWarning", "standardError"]);
function NE(e) {
  return We("MuiIconButton", e);
}
const VE = _e("MuiIconButton", ["root", "disabled", "colorInherit", "colorPrimary", "colorSecondary", "colorError", "colorInfo", "colorSuccess", "colorWarning", "edgeStart", "edgeEnd", "sizeSmall", "sizeMedium", "sizeLarge"]), $E = (e) => {
  const {
    classes: t,
    disabled: n,
    color: o,
    edge: i,
    size: s
  } = e, a = {
    root: ["root", n && "disabled", o !== "default" && `color${ue(o)}`, i && `edge${ue(i)}`, `size${ue(s)}`]
  };
  return Ue(a, NE, t);
}, LE = Q(yo, {
  name: "MuiIconButton",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color !== "default" && t[`color${ue(n.color)}`], n.edge && t[`edge${ue(n.edge)}`], t[`size${ue(n.size)}`]];
  }
})($e(({
  theme: e
}) => ({
  textAlign: "center",
  flex: "0 0 auto",
  fontSize: e.typography.pxToRem(24),
  padding: 8,
  borderRadius: "50%",
  color: (e.vars || e).palette.action.active,
  transition: e.transitions.create("background-color", {
    duration: e.transitions.duration.shortest
  }),
  variants: [{
    props: {
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : ze(e.palette.action.active, e.palette.action.hoverOpacity),
        // Reset on touch devices, it doesn't add specificity
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  }, {
    props: {
      edge: "start"
    },
    style: {
      marginLeft: -12
    }
  }, {
    props: {
      edge: "start",
      size: "small"
    },
    style: {
      marginLeft: -3
    }
  }, {
    props: {
      edge: "end"
    },
    style: {
      marginRight: -12
    }
  }, {
    props: {
      edge: "end",
      size: "small"
    },
    style: {
      marginRight: -3
    }
  }]
})), $e(({
  theme: e
}) => ({
  variants: [{
    props: {
      color: "inherit"
    },
    style: {
      color: "inherit"
    }
  }, ...Object.entries(e.palette).filter(wt()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      color: (e.vars || e).palette[t].main
    }
  })), ...Object.entries(e.palette).filter(wt()).map(([t]) => ({
    props: {
      color: t,
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${(e.vars || e).palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : ze((e.vars || e).palette[t].main, e.palette.action.hoverOpacity),
        // Reset on touch devices, it doesn't add specificity
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  })), {
    props: {
      size: "small"
    },
    style: {
      padding: 5,
      fontSize: e.typography.pxToRem(18)
    }
  }, {
    props: {
      size: "large"
    },
    style: {
      padding: 12,
      fontSize: e.typography.pxToRem(28)
    }
  }],
  [`&.${VE.disabled}`]: {
    backgroundColor: "transparent",
    color: (e.vars || e).palette.action.disabled
  }
}))), lt = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiIconButton"
  }), {
    edge: i = !1,
    children: s,
    className: a,
    color: l = "default",
    disabled: c = !1,
    disableFocusRipple: u = !1,
    disableRipple: d = !1,
    size: p = "medium",
    ...m
  } = o, g = {
    ...o,
    edge: i,
    color: l,
    disabled: c,
    disableFocusRipple: u,
    disableRipple: d,
    size: p
  }, h = $E(g);
  return /* @__PURE__ */ f.jsx(LE, {
    className: fe(h.root, a),
    centerRipple: !0,
    focusRipple: !u,
    disabled: c,
    disableRipple: d,
    ref: n,
    ...m,
    ownerState: g,
    children: s
  });
});
process.env.NODE_ENV !== "production" && (lt.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The icon to display.
   */
  children: oo(r.node, (e) => S.Children.toArray(e.children).some((n) => /* @__PURE__ */ S.isValidElement(n) && n.props.onClick) ? new Error(["MUI: You are providing an onClick event listener to a child of a button element.", "Prefer applying it to the IconButton directly.", "This guarantees that the whole <button> will be responsive to click events."].join(`
`)) : null),
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: r.oneOfType([r.oneOf(["inherit", "default", "primary", "secondary", "error", "info", "success", "warning"]), r.string]),
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: r.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: r.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: r.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: r.oneOf(["end", "start", !1]),
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: r.oneOfType([r.oneOf(["small", "medium", "large"]), r.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object])
});
const _E = He(/* @__PURE__ */ f.jsx("path", {
  d: "M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z"
}), "SuccessOutlined"), BE = He(/* @__PURE__ */ f.jsx("path", {
  d: "M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z"
}), "ReportProblemOutlined"), zE = He(/* @__PURE__ */ f.jsx("path", {
  d: "M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
}), "ErrorOutline"), WE = He(/* @__PURE__ */ f.jsx("path", {
  d: "M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z"
}), "InfoOutlined"), Zy = He(/* @__PURE__ */ f.jsx("path", {
  d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}), "Close"), HE = (e) => {
  const {
    variant: t,
    color: n,
    severity: o,
    classes: i
  } = e, s = {
    root: ["root", `color${ue(n || o)}`, `${t}${ue(n || o)}`, `${t}`],
    icon: ["icon"],
    message: ["message"],
    action: ["action"]
  };
  return Ue(s, FE, i);
}, GE = Q(yn, {
  name: "MuiAlert",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], t[`${n.variant}${ue(n.color || n.severity)}`]];
  }
})($e(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? no : $n, n = e.palette.mode === "light" ? $n : no;
  return {
    ...e.typography.body2,
    backgroundColor: "transparent",
    display: "flex",
    padding: "6px 16px",
    variants: [...Object.entries(e.palette).filter(wt(["light"])).map(([o]) => ({
      props: {
        colorSeverity: o,
        variant: "standard"
      },
      style: {
        color: e.vars ? e.vars.palette.Alert[`${o}Color`] : t(e.palette[o].light, 0.6),
        backgroundColor: e.vars ? e.vars.palette.Alert[`${o}StandardBg`] : n(e.palette[o].light, 0.9),
        [`& .${nh.icon}`]: e.vars ? {
          color: e.vars.palette.Alert[`${o}IconColor`]
        } : {
          color: e.palette[o].main
        }
      }
    })), ...Object.entries(e.palette).filter(wt(["light"])).map(([o]) => ({
      props: {
        colorSeverity: o,
        variant: "outlined"
      },
      style: {
        color: e.vars ? e.vars.palette.Alert[`${o}Color`] : t(e.palette[o].light, 0.6),
        border: `1px solid ${(e.vars || e).palette[o].light}`,
        [`& .${nh.icon}`]: e.vars ? {
          color: e.vars.palette.Alert[`${o}IconColor`]
        } : {
          color: e.palette[o].main
        }
      }
    })), ...Object.entries(e.palette).filter(wt(["dark"])).map(([o]) => ({
      props: {
        colorSeverity: o,
        variant: "filled"
      },
      style: {
        fontWeight: e.typography.fontWeightMedium,
        ...e.vars ? {
          color: e.vars.palette.Alert[`${o}FilledColor`],
          backgroundColor: e.vars.palette.Alert[`${o}FilledBg`]
        } : {
          backgroundColor: e.palette.mode === "dark" ? e.palette[o].dark : e.palette[o].main,
          color: e.palette.getContrastText(e.palette[o].main)
        }
      }
    }))]
  };
})), UE = Q("div", {
  name: "MuiAlert",
  slot: "Icon",
  overridesResolver: (e, t) => t.icon
})({
  marginRight: 12,
  padding: "7px 0",
  display: "flex",
  fontSize: 22,
  opacity: 0.9
}), XE = Q("div", {
  name: "MuiAlert",
  slot: "Message",
  overridesResolver: (e, t) => t.message
})({
  padding: "8px 0",
  minWidth: 0,
  overflow: "auto"
}), oh = Q("div", {
  name: "MuiAlert",
  slot: "Action",
  overridesResolver: (e, t) => t.action
})({
  display: "flex",
  alignItems: "flex-start",
  padding: "4px 0 0 16px",
  marginLeft: "auto",
  marginRight: -8
}), rh = {
  success: /* @__PURE__ */ f.jsx(_E, {
    fontSize: "inherit"
  }),
  warning: /* @__PURE__ */ f.jsx(BE, {
    fontSize: "inherit"
  }),
  error: /* @__PURE__ */ f.jsx(zE, {
    fontSize: "inherit"
  }),
  info: /* @__PURE__ */ f.jsx(WE, {
    fontSize: "inherit"
  })
}, qy = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiAlert"
  }), {
    action: i,
    children: s,
    className: a,
    closeText: l = "Close",
    color: c,
    components: u = {},
    componentsProps: d = {},
    icon: p,
    iconMapping: m = rh,
    onClose: g,
    role: h = "alert",
    severity: v = "success",
    slotProps: b = {},
    slots: y = {},
    variant: C = "standard",
    ...x
  } = o, T = {
    ...o,
    color: c,
    severity: v,
    variant: C,
    colorSeverity: c || v
  }, w = HE(T), R = {
    slots: {
      closeButton: u.CloseButton,
      closeIcon: u.CloseIcon,
      ...y
    },
    slotProps: {
      ...d,
      ...b
    }
  }, [E, O] = nn("closeButton", {
    elementType: lt,
    externalForwardedProps: R,
    ownerState: T
  }), [I, P] = nn("closeIcon", {
    elementType: Zy,
    externalForwardedProps: R,
    ownerState: T
  });
  return /* @__PURE__ */ f.jsxs(GE, {
    role: h,
    elevation: 0,
    ownerState: T,
    className: fe(w.root, a),
    ref: n,
    ...x,
    children: [p !== !1 ? /* @__PURE__ */ f.jsx(UE, {
      ownerState: T,
      className: w.icon,
      children: p || m[v] || rh[v]
    }) : null, /* @__PURE__ */ f.jsx(XE, {
      ownerState: T,
      className: w.message,
      children: s
    }), i != null ? /* @__PURE__ */ f.jsx(oh, {
      ownerState: T,
      className: w.action,
      children: i
    }) : null, i == null && g ? /* @__PURE__ */ f.jsx(oh, {
      ownerState: T,
      className: w.action,
      children: /* @__PURE__ */ f.jsx(E, {
        size: "small",
        "aria-label": l,
        title: l,
        color: "inherit",
        onClick: g,
        ...O,
        children: /* @__PURE__ */ f.jsx(I, {
          fontSize: "small",
          ...P
        })
      })
    }) : null]
  });
});
process.env.NODE_ENV !== "production" && (qy.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The action to display. It renders after the message, at the end of the alert.
   */
  action: r.node,
  /**
   * The content of the component.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * Override the default label for the *close popup* icon button.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Close'
   */
  closeText: r.string,
  /**
   * The color of the component. Unless provided, the value is taken from the `severity` prop.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: r.oneOfType([r.oneOf(["error", "info", "success", "warning"]), r.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: r.shape({
    CloseButton: r.elementType,
    CloseIcon: r.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: r.shape({
    closeButton: r.object,
    closeIcon: r.object
  }),
  /**
   * Override the icon displayed before the children.
   * Unless provided, the icon is mapped to the value of the `severity` prop.
   * Set to `false` to remove the `icon`.
   */
  icon: r.node,
  /**
   * The component maps the `severity` prop to a range of different icons,
   * for instance success to `<SuccessOutlined>`.
   * If you wish to change this mapping, you can provide your own.
   * Alternatively, you can use the `icon` prop to override the icon displayed.
   */
  iconMapping: r.shape({
    error: r.node,
    info: r.node,
    success: r.node,
    warning: r.node
  }),
  /**
   * Callback fired when the component requests to be closed.
   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onClose: r.func,
  /**
   * The ARIA role attribute of the element.
   * @default 'alert'
   */
  role: r.string,
  /**
   * The severity of the alert. This defines the color and icon used.
   * @default 'success'
   */
  severity: r.oneOfType([r.oneOf(["error", "info", "success", "warning"]), r.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: r.shape({
    closeButton: r.oneOfType([r.func, r.object]),
    closeIcon: r.oneOfType([r.func, r.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: r.shape({
    closeButton: r.elementType,
    closeIcon: r.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * The variant to use.
   * @default 'standard'
   */
  variant: r.oneOfType([r.oneOf(["filled", "outlined", "standard"]), r.string])
});
function YE(e) {
  return We("MuiTypography", e);
}
_e("MuiTypography", ["root", "h1", "h2", "h3", "h4", "h5", "h6", "subtitle1", "subtitle2", "body1", "body2", "inherit", "button", "caption", "overline", "alignLeft", "alignRight", "alignCenter", "alignJustify", "noWrap", "gutterBottom", "paragraph"]);
const ZE = {
  primary: !0,
  secondary: !0,
  error: !0,
  info: !0,
  success: !0,
  warning: !0,
  textPrimary: !0,
  textSecondary: !0,
  textDisabled: !0
}, qE = qO(), JE = (e) => {
  const {
    align: t,
    gutterBottom: n,
    noWrap: o,
    paragraph: i,
    variant: s,
    classes: a
  } = e, l = {
    root: ["root", s, e.align !== "inherit" && `align${ue(t)}`, n && "gutterBottom", o && "noWrap", i && "paragraph"]
  };
  return Ue(l, YE, a);
}, KE = Q("span", {
  name: "MuiTypography",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.variant && t[n.variant], n.align !== "inherit" && t[`align${ue(n.align)}`], n.noWrap && t.noWrap, n.gutterBottom && t.gutterBottom, n.paragraph && t.paragraph];
  }
})($e(({
  theme: e
}) => {
  var t;
  return {
    margin: 0,
    variants: [{
      props: {
        variant: "inherit"
      },
      style: {
        // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.
        font: "inherit",
        lineHeight: "inherit",
        letterSpacing: "inherit"
      }
    }, ...Object.entries(e.typography).filter(([n, o]) => n !== "inherit" && o && typeof o == "object").map(([n, o]) => ({
      props: {
        variant: n
      },
      style: o
    })), ...Object.entries(e.palette).filter(wt()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        color: (e.vars || e).palette[n].main
      }
    })), ...Object.entries(((t = e.palette) == null ? void 0 : t.text) || {}).filter(([, n]) => typeof n == "string").map(([n]) => ({
      props: {
        color: `text${ue(n)}`
      },
      style: {
        color: (e.vars || e).palette.text[n]
      }
    })), {
      props: ({
        ownerState: n
      }) => n.align !== "inherit",
      style: {
        textAlign: "var(--Typography-textAlign)"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.noWrap,
      style: {
        overflow: "hidden",
        textOverflow: "ellipsis",
        whiteSpace: "nowrap"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.gutterBottom,
      style: {
        marginBottom: "0.35em"
      }
    }, {
      props: ({
        ownerState: n
      }) => n.paragraph,
      style: {
        marginBottom: 16
      }
    }]
  };
})), ih = {
  h1: "h1",
  h2: "h2",
  h3: "h3",
  h4: "h4",
  h5: "h5",
  h6: "h6",
  subtitle1: "h6",
  subtitle2: "h6",
  body1: "p",
  body2: "p",
  inherit: "p"
}, Fe = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const {
    color: o,
    ...i
  } = Ye({
    props: t,
    name: "MuiTypography"
  }), s = !ZE[o], a = qE({
    ...i,
    ...s && {
      color: o
    }
  }), {
    align: l = "inherit",
    className: c,
    component: u,
    gutterBottom: d = !1,
    noWrap: p = !1,
    paragraph: m = !1,
    variant: g = "body1",
    variantMapping: h = ih,
    ...v
  } = a, b = {
    ...a,
    align: l,
    color: o,
    className: c,
    component: u,
    gutterBottom: d,
    noWrap: p,
    paragraph: m,
    variant: g,
    variantMapping: h
  }, y = u || (m ? "p" : h[g] || ih[g]) || "span", C = JE(b);
  return /* @__PURE__ */ f.jsx(KE, {
    as: y,
    ref: n,
    className: fe(C.root, c),
    ...v,
    ownerState: b,
    style: {
      ...l !== "inherit" && {
        "--Typography-textAlign": l
      },
      ...v.style
    }
  });
});
process.env.NODE_ENV !== "production" && (Fe.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Set the text-align on the component.
   * @default 'inherit'
   */
  align: r.oneOf(["center", "inherit", "justify", "left", "right"]),
  /**
   * The content of the component.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: r.oneOfType([r.oneOf(["primary", "secondary", "success", "error", "info", "warning", "textPrimary", "textSecondary", "textDisabled"]), r.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * If `true`, the text will have a bottom margin.
   * @default false
   */
  gutterBottom: r.bool,
  /**
   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.
   *
   * Note that text overflow can only happen with block or inline-block level elements
   * (the element needs to have a width in order to overflow).
   * @default false
   */
  noWrap: r.bool,
  /**
   * If `true`, the element will be a paragraph element.
   * @default false
   * @deprecated Use the `component` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  paragraph: r.bool,
  /**
   * @ignore
   */
  style: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * Applies the theme typography styles.
   * @default 'body1'
   */
  variant: r.oneOfType([r.oneOf(["body1", "body2", "button", "caption", "h1", "h2", "h3", "h4", "h5", "h6", "inherit", "overline", "subtitle1", "subtitle2"]), r.string]),
  /**
   * The component maps the variant prop to a range of different HTML element types.
   * For instance, subtitle1 to `<h6>`.
   * If you wish to change that mapping, you can provide your own.
   * Alternatively, you can use the `component` prop.
   * @default {
   *   h1: 'h1',
   *   h2: 'h2',
   *   h3: 'h3',
   *   h4: 'h4',
   *   h5: 'h5',
   *   h6: 'h6',
   *   subtitle1: 'h6',
   *   subtitle2: 'h6',
   *   body1: 'p',
   *   body2: 'p',
   *   inherit: 'p',
   * }
   */
  variantMapping: r.object
});
function QE(e) {
  return We("MuiAlertTitle", e);
}
_e("MuiAlertTitle", ["root"]);
const eP = (e) => {
  const {
    classes: t
  } = e;
  return Ue({
    root: ["root"]
  }, QE, t);
}, tP = Q(Fe, {
  name: "MuiAlertTitle",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})($e(({
  theme: e
}) => ({
  fontWeight: e.typography.fontWeightMedium,
  marginTop: -2
}))), Jy = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiAlertTitle"
  }), {
    className: i,
    ...s
  } = o, a = o, l = eP(a);
  return /* @__PURE__ */ f.jsx(tP, {
    gutterBottom: !0,
    component: "div",
    ownerState: a,
    ref: n,
    className: fe(l.root, i),
    ...s
  });
});
process.env.NODE_ENV !== "production" && (Jy.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object])
});
function nP(e) {
  return We("MuiAppBar", e);
}
_e("MuiAppBar", ["root", "positionFixed", "positionAbsolute", "positionSticky", "positionStatic", "positionRelative", "colorDefault", "colorPrimary", "colorSecondary", "colorInherit", "colorTransparent", "colorError", "colorInfo", "colorSuccess", "colorWarning"]);
const oP = (e) => {
  const {
    color: t,
    position: n,
    classes: o
  } = e, i = {
    root: ["root", `color${ue(t)}`, `position${ue(n)}`]
  };
  return Ue(i, nP, o);
}, sh = (e, t) => e ? `${e == null ? void 0 : e.replace(")", "")}, ${t})` : t, rP = Q(yn, {
  name: "MuiAppBar",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`position${ue(n.position)}`], t[`color${ue(n.color)}`]];
  }
})($e(({
  theme: e
}) => ({
  display: "flex",
  flexDirection: "column",
  width: "100%",
  boxSizing: "border-box",
  // Prevent padding issue with the Modal and fixed positioned AppBar.
  flexShrink: 0,
  variants: [{
    props: {
      position: "fixed"
    },
    style: {
      position: "fixed",
      zIndex: (e.vars || e).zIndex.appBar,
      top: 0,
      left: "auto",
      right: 0,
      "@media print": {
        // Prevent the app bar to be visible on each printed page.
        position: "absolute"
      }
    }
  }, {
    props: {
      position: "absolute"
    },
    style: {
      position: "absolute",
      zIndex: (e.vars || e).zIndex.appBar,
      top: 0,
      left: "auto",
      right: 0
    }
  }, {
    props: {
      position: "sticky"
    },
    style: {
      position: "sticky",
      zIndex: (e.vars || e).zIndex.appBar,
      top: 0,
      left: "auto",
      right: 0
    }
  }, {
    props: {
      position: "static"
    },
    style: {
      position: "static"
    }
  }, {
    props: {
      position: "relative"
    },
    style: {
      position: "relative"
    }
  }, {
    props: {
      color: "inherit"
    },
    style: {
      "--AppBar-color": "inherit"
    }
  }, {
    props: {
      color: "default"
    },
    style: {
      "--AppBar-background": e.vars ? e.vars.palette.AppBar.defaultBg : e.palette.grey[100],
      "--AppBar-color": e.vars ? e.vars.palette.text.primary : e.palette.getContrastText(e.palette.grey[100]),
      ...e.applyStyles("dark", {
        "--AppBar-background": e.vars ? e.vars.palette.AppBar.defaultBg : e.palette.grey[900],
        "--AppBar-color": e.vars ? e.vars.palette.text.primary : e.palette.getContrastText(e.palette.grey[900])
      })
    }
  }, ...Object.entries(e.palette).filter(wt(["contrastText"])).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      "--AppBar-background": (e.vars ?? e).palette[t].main,
      "--AppBar-color": (e.vars ?? e).palette[t].contrastText
    }
  })), {
    props: (t) => t.enableColorOnDark === !0 && !["inherit", "transparent"].includes(t.color),
    style: {
      backgroundColor: "var(--AppBar-background)",
      color: "var(--AppBar-color)"
    }
  }, {
    props: (t) => t.enableColorOnDark === !1 && !["inherit", "transparent"].includes(t.color),
    style: {
      backgroundColor: "var(--AppBar-background)",
      color: "var(--AppBar-color)",
      ...e.applyStyles("dark", {
        backgroundColor: e.vars ? sh(e.vars.palette.AppBar.darkBg, "var(--AppBar-background)") : null,
        color: e.vars ? sh(e.vars.palette.AppBar.darkColor, "var(--AppBar-color)") : null
      })
    }
  }, {
    props: {
      color: "transparent"
    },
    style: {
      "--AppBar-background": "transparent",
      "--AppBar-color": "inherit",
      backgroundColor: "var(--AppBar-background)",
      color: "var(--AppBar-color)",
      ...e.applyStyles("dark", {
        backgroundImage: "none"
      })
    }
  }]
}))), Ky = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiAppBar"
  }), {
    className: i,
    color: s = "primary",
    enableColorOnDark: a = !1,
    position: l = "fixed",
    ...c
  } = o, u = {
    ...o,
    color: s,
    position: l,
    enableColorOnDark: a
  }, d = oP(u);
  return /* @__PURE__ */ f.jsx(rP, {
    square: !0,
    component: "header",
    ownerState: u,
    elevation: 4,
    className: fe(d.root, i, l === "fixed" && "mui-fixed"),
    ref: n,
    ...c
  });
});
process.env.NODE_ENV !== "production" && (Ky.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: r.oneOfType([r.oneOf(["default", "inherit", "primary", "secondary", "transparent", "error", "info", "success", "warning"]), r.string]),
  /**
   * If true, the `color` prop is applied in dark mode.
   * @default false
   */
  enableColorOnDark: r.bool,
  /**
   * The positioning type. The behavior of the different options is described
   * [in the MDN web docs](https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Positioning).
   * Note: `sticky` is not universally supported and will fall back to `static` when unavailable.
   * @default 'fixed'
   */
  position: r.oneOf(["absolute", "fixed", "relative", "static", "sticky"]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object])
});
function ah(e) {
  return e.normalize("NFD").replace(/[\u0300-\u036f]/g, "");
}
function iP(e = {}) {
  const {
    ignoreAccents: t = !0,
    ignoreCase: n = !0,
    limit: o,
    matchFrom: i = "any",
    stringify: s,
    trim: a = !1
  } = e;
  return (l, {
    inputValue: c,
    getOptionLabel: u
  }) => {
    let d = a ? c.trim() : c;
    n && (d = d.toLowerCase()), t && (d = ah(d));
    const p = d ? l.filter((m) => {
      let g = (s || u)(m);
      return n && (g = g.toLowerCase()), t && (g = ah(g)), i === "start" ? g.startsWith(d) : g.includes(d);
    }) : l;
    return typeof o == "number" ? p.slice(0, o) : p;
  };
}
const sP = iP(), lh = 5, aP = (e) => {
  var t;
  return e.current !== null && ((t = e.current.parentElement) == null ? void 0 : t.contains(document.activeElement));
}, lP = [];
function cP(e) {
  const {
    // eslint-disable-next-line @typescript-eslint/naming-convention
    unstable_isActiveElementInListbox: t = aP,
    // eslint-disable-next-line @typescript-eslint/naming-convention
    unstable_classNamePrefix: n = "Mui",
    autoComplete: o = !1,
    autoHighlight: i = !1,
    autoSelect: s = !1,
    blurOnSelect: a = !1,
    clearOnBlur: l = !e.freeSolo,
    clearOnEscape: c = !1,
    componentName: u = "useAutocomplete",
    defaultValue: d = e.multiple ? lP : null,
    disableClearable: p = !1,
    disableCloseOnSelect: m = !1,
    disabled: g,
    disabledItemsFocusable: h = !1,
    disableListWrap: v = !1,
    filterOptions: b = sP,
    filterSelectedOptions: y = !1,
    freeSolo: C = !1,
    getOptionDisabled: x,
    getOptionKey: T,
    getOptionLabel: w = (le) => le.label ?? le,
    groupBy: R,
    handleHomeEndKeys: E = !e.freeSolo,
    id: O,
    includeInputInList: I = !1,
    inputValue: P,
    isOptionEqualToValue: A = (le, ce) => le === ce,
    multiple: D = !1,
    onChange: k,
    onClose: M,
    onHighlightChange: F,
    onInputChange: N,
    onOpen: W,
    open: H,
    openOnFocus: B = !1,
    options: j,
    readOnly: L = !1,
    selectOnFocus: ee = !e.freeSolo,
    value: Y
  } = e, $ = Na(O);
  let U = w;
  U = (le) => {
    const ce = w(le);
    if (typeof ce != "string") {
      if (process.env.NODE_ENV !== "production") {
        const Ee = ce === void 0 ? "undefined" : `${typeof ce} (${ce})`;
        console.error(`MUI: The \`getOptionLabel\` method of ${u} returned ${Ee} instead of a string for ${JSON.stringify(le)}.`);
      }
      return String(ce);
    }
    return ce;
  };
  const X = S.useRef(!1), Z = S.useRef(!0), G = S.useRef(null), K = S.useRef(null), [re, ne] = S.useState(null), [z, q] = S.useState(-1), _ = i ? 0 : -1, oe = S.useRef(_), [te, se] = ir({
    controlled: Y,
    default: d,
    name: u
  }), [ae, me] = ir({
    controlled: P,
    default: "",
    name: u,
    state: "inputValue"
  }), [ye, Te] = S.useState(!1), Ve = S.useCallback((le, ce, Ee) => {
    if (!(D ? te.length < ce.length : ce !== null) && !l)
      return;
    let Ne;
    if (D)
      Ne = "";
    else if (ce == null)
      Ne = "";
    else {
      const ct = U(ce);
      Ne = typeof ct == "string" ? ct : "";
    }
    ae !== Ne && (me(Ne), N && N(le, Ne, Ee));
  }, [U, ae, D, N, me, l, te]), [ie, be] = ir({
    controlled: H,
    default: !1,
    name: u,
    state: "open"
  }), [xe, Ie] = S.useState(!0), Pe = !D && te != null && ae === U(te), Ce = ie && !L, Oe = Ce ? b(
    j.filter((le) => !(y && (D ? te : [te]).some((ce) => ce !== null && A(le, ce)))),
    // we use the empty string to manipulate `filterOptions` to not filter any options
    // i.e. the filter predicate always returns true
    {
      inputValue: Pe && xe ? "" : ae,
      getOptionLabel: U
    }
  ) : [], Be = pf({
    filteredOptions: Oe,
    value: te,
    inputValue: ae
  });
  S.useEffect(() => {
    const le = te !== Be.value;
    ye && !le || C && !le || Ve(null, te, "reset");
  }, [te, Ve, ye, Be.value, C]);
  const Ae = ie && Oe.length > 0 && !L, nt = hn((le) => {
    le === -1 ? G.current.focus() : re.querySelector(`[data-tag-index="${le}"]`).focus();
  });
  S.useEffect(() => {
    D && z > te.length - 1 && (q(-1), nt(-1));
  }, [te, D, z, nt]);
  function Ze(le, ce) {
    if (!K.current || le < 0 || le >= Oe.length)
      return -1;
    let Ee = le;
    for (; ; ) {
      const Le = K.current.querySelector(`[data-option-index="${Ee}"]`), Ne = h ? !1 : !Le || Le.disabled || Le.getAttribute("aria-disabled") === "true";
      if (Le && Le.hasAttribute("tabindex") && !Ne)
        return Ee;
      if (ce === "next" ? Ee = (Ee + 1) % Oe.length : Ee = (Ee - 1 + Oe.length) % Oe.length, Ee === le)
        return -1;
    }
  }
  const dt = hn(({
    event: le,
    index: ce,
    reason: Ee = "auto"
  }) => {
    if (oe.current = ce, ce === -1 ? G.current.removeAttribute("aria-activedescendant") : G.current.setAttribute("aria-activedescendant", `${$}-option-${ce}`), F && F(le, ce === -1 ? null : Oe[ce], Ee), !K.current)
      return;
    const Le = K.current.querySelector(`[role="option"].${n}-focused`);
    Le && (Le.classList.remove(`${n}-focused`), Le.classList.remove(`${n}-focusVisible`));
    let Ne = K.current;
    if (K.current.getAttribute("role") !== "listbox" && (Ne = K.current.parentElement.querySelector('[role="listbox"]')), !Ne)
      return;
    if (ce === -1) {
      Ne.scrollTop = 0;
      return;
    }
    const ct = K.current.querySelector(`[data-option-index="${ce}"]`);
    if (ct && (ct.classList.add(`${n}-focused`), Ee === "keyboard" && ct.classList.add(`${n}-focusVisible`), Ne.scrollHeight > Ne.clientHeight && Ee !== "mouse" && Ee !== "touch")) {
      const rt = ct, yt = Ne.clientHeight + Ne.scrollTop, mn = rt.offsetTop + rt.offsetHeight;
      mn > yt ? Ne.scrollTop = mn - Ne.clientHeight : rt.offsetTop - rt.offsetHeight * (R ? 1.3 : 0) < Ne.scrollTop && (Ne.scrollTop = rt.offsetTop - rt.offsetHeight * (R ? 1.3 : 0));
    }
  }), de = hn(({
    event: le,
    diff: ce,
    direction: Ee = "next",
    reason: Le = "auto"
  }) => {
    if (!Ce)
      return;
    const ct = Ze((() => {
      const rt = Oe.length - 1;
      if (ce === "reset")
        return _;
      if (ce === "start")
        return 0;
      if (ce === "end")
        return rt;
      const yt = oe.current + ce;
      return yt < 0 ? yt === -1 && I ? -1 : v && oe.current !== -1 || Math.abs(ce) > 1 ? 0 : rt : yt > rt ? yt === rt + 1 && I ? -1 : v || Math.abs(ce) > 1 ? rt : 0 : yt;
    })(), Ee);
    if (dt({
      index: ct,
      reason: Le,
      event: le
    }), o && ce !== "reset")
      if (ct === -1)
        G.current.value = ae;
      else {
        const rt = U(Oe[ct]);
        G.current.value = rt, rt.toLowerCase().indexOf(ae.toLowerCase()) === 0 && ae.length > 0 && G.current.setSelectionRange(ae.length, rt.length);
      }
  }), we = () => {
    const le = (ce, Ee) => {
      const Le = ce ? U(ce) : "", Ne = Ee ? U(Ee) : "";
      return Le === Ne;
    };
    if (oe.current !== -1 && Be.filteredOptions && Be.filteredOptions.length !== Oe.length && Be.inputValue === ae && (D ? te.length === Be.value.length && Be.value.every((ce, Ee) => U(te[Ee]) === U(ce)) : le(Be.value, te))) {
      const ce = Be.filteredOptions[oe.current];
      if (ce)
        return Oe.findIndex((Ee) => U(Ee) === U(ce));
    }
    return -1;
  }, pe = S.useCallback(() => {
    if (!Ce)
      return;
    const le = we();
    if (le !== -1) {
      oe.current = le;
      return;
    }
    const ce = D ? te[0] : te;
    if (Oe.length === 0 || ce == null) {
      de({
        diff: "reset"
      });
      return;
    }
    if (K.current) {
      if (ce != null) {
        const Ee = Oe[oe.current];
        if (D && Ee && te.findIndex((Ne) => A(Ee, Ne)) !== -1)
          return;
        const Le = Oe.findIndex((Ne) => A(Ne, ce));
        Le === -1 ? de({
          diff: "reset"
        }) : dt({
          index: Le
        });
        return;
      }
      if (oe.current >= Oe.length - 1) {
        dt({
          index: Oe.length - 1
        });
        return;
      }
      dt({
        index: oe.current
      });
    }
  }, [
    // Only sync the highlighted index when the option switch between empty and not
    Oe.length,
    // Don't sync the highlighted index with the value when multiple
    // eslint-disable-next-line react-hooks/exhaustive-deps
    D ? !1 : te,
    y,
    de,
    dt,
    Ce,
    ae,
    D
  ]), Me = hn((le) => {
    Ql(K, le), le && pe();
  });
  process.env.NODE_ENV !== "production" && S.useEffect(() => {
    (!G.current || G.current.nodeName !== "INPUT") && (G.current && G.current.nodeName === "TEXTAREA" ? console.warn([`A textarea element was provided to ${u} where input was expected.`, "This is not a supported scenario but it may work under certain conditions.", "A textarea keyboard navigation may conflict with Autocomplete controls (for example enter and arrow keys).", "Make sure to test keyboard navigation and add custom event handlers if necessary."].join(`
`)) : console.error([`MUI: Unable to find the input element. It was resolved to ${G.current} while an HTMLInputElement was expected.`, `Instead, ${u} expects an input element.`, "", u === "useAutocomplete" ? "Make sure you have bound getInputProps correctly and that the normal ref/effect resolutions order is guaranteed." : "Make sure you have customized the input component correctly."].join(`
`)));
  }, [u]), S.useEffect(() => {
    pe();
  }, [pe]);
  const je = (le) => {
    ie || (be(!0), Ie(!0), W && W(le));
  }, st = (le, ce) => {
    ie && (be(!1), M && M(le, ce));
  }, pt = (le, ce, Ee, Le) => {
    if (D) {
      if (te.length === ce.length && te.every((Ne, ct) => Ne === ce[ct]))
        return;
    } else if (te === ce)
      return;
    k && k(le, ce, Ee, Le), se(ce);
  }, it = S.useRef(!1), bt = (le, ce, Ee = "selectOption", Le = "options") => {
    let Ne = Ee, ct = ce;
    if (D) {
      if (ct = Array.isArray(te) ? te.slice() : [], process.env.NODE_ENV !== "production") {
        const yt = ct.filter((mn) => A(ce, mn));
        yt.length > 1 && console.error([`MUI: The \`isOptionEqualToValue\` method of ${u} does not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${yt.length} matches.`].join(`
`));
      }
      const rt = ct.findIndex((yt) => A(ce, yt));
      rt === -1 ? ct.push(ce) : Le !== "freeSolo" && (ct.splice(rt, 1), Ne = "removeOption");
    }
    Ve(le, ct, Ne), pt(le, ct, Ne, {
      option: ce
    }), !m && (!le || !le.ctrlKey && !le.metaKey) && st(le, Ne), (a === !0 || a === "touch" && it.current || a === "mouse" && !it.current) && G.current.blur();
  };
  function Zt(le, ce) {
    if (le === -1)
      return -1;
    let Ee = le;
    for (; ; ) {
      if (ce === "next" && Ee === te.length || ce === "previous" && Ee === -1)
        return -1;
      const Le = re.querySelector(`[data-tag-index="${Ee}"]`);
      if (!Le || !Le.hasAttribute("tabindex") || Le.disabled || Le.getAttribute("aria-disabled") === "true")
        Ee += ce === "next" ? 1 : -1;
      else
        return Ee;
    }
  }
  const xn = (le, ce) => {
    if (!D)
      return;
    ae === "" && st(le, "toggleInput");
    let Ee = z;
    z === -1 ? ae === "" && ce === "previous" && (Ee = te.length - 1) : (Ee += ce === "next" ? 1 : -1, Ee < 0 && (Ee = 0), Ee === te.length && (Ee = -1)), Ee = Zt(Ee, ce), q(Ee), nt(Ee);
  }, qt = (le) => {
    X.current = !0, me(""), N && N(le, "", "clear"), pt(le, D ? [] : null, "clear");
  }, ot = (le) => (ce) => {
    if (le.onKeyDown && le.onKeyDown(ce), !ce.defaultMuiPrevented && (z !== -1 && !["ArrowLeft", "ArrowRight"].includes(ce.key) && (q(-1), nt(-1)), ce.which !== 229))
      switch (ce.key) {
        case "Home":
          Ce && E && (ce.preventDefault(), de({
            diff: "start",
            direction: "next",
            reason: "keyboard",
            event: ce
          }));
          break;
        case "End":
          Ce && E && (ce.preventDefault(), de({
            diff: "end",
            direction: "previous",
            reason: "keyboard",
            event: ce
          }));
          break;
        case "PageUp":
          ce.preventDefault(), de({
            diff: -lh,
            direction: "previous",
            reason: "keyboard",
            event: ce
          }), je(ce);
          break;
        case "PageDown":
          ce.preventDefault(), de({
            diff: lh,
            direction: "next",
            reason: "keyboard",
            event: ce
          }), je(ce);
          break;
        case "ArrowDown":
          ce.preventDefault(), de({
            diff: 1,
            direction: "next",
            reason: "keyboard",
            event: ce
          }), je(ce);
          break;
        case "ArrowUp":
          ce.preventDefault(), de({
            diff: -1,
            direction: "previous",
            reason: "keyboard",
            event: ce
          }), je(ce);
          break;
        case "ArrowLeft":
          xn(ce, "previous");
          break;
        case "ArrowRight":
          xn(ce, "next");
          break;
        case "Enter":
          if (oe.current !== -1 && Ce) {
            const Ee = Oe[oe.current], Le = x ? x(Ee) : !1;
            if (ce.preventDefault(), Le)
              return;
            bt(ce, Ee, "selectOption"), o && G.current.setSelectionRange(G.current.value.length, G.current.value.length);
          } else C && ae !== "" && Pe === !1 && (D && ce.preventDefault(), bt(ce, ae, "createOption", "freeSolo"));
          break;
        case "Escape":
          Ce ? (ce.preventDefault(), ce.stopPropagation(), st(ce, "escape")) : c && (ae !== "" || D && te.length > 0) && (ce.preventDefault(), ce.stopPropagation(), qt(ce));
          break;
        case "Backspace":
          if (D && !L && ae === "" && te.length > 0) {
            const Ee = z === -1 ? te.length - 1 : z, Le = te.slice();
            Le.splice(Ee, 1), pt(ce, Le, "removeOption", {
              option: te[Ee]
            });
          }
          break;
        case "Delete":
          if (D && !L && ae === "" && te.length > 0 && z !== -1) {
            const Ee = z, Le = te.slice();
            Le.splice(Ee, 1), pt(ce, Le, "removeOption", {
              option: te[Ee]
            });
          }
          break;
      }
  }, ln = (le) => {
    Te(!0), B && !X.current && je(le);
  }, Qo = (le) => {
    if (t(K)) {
      G.current.focus();
      return;
    }
    Te(!1), Z.current = !0, X.current = !1, s && oe.current !== -1 && Ce ? bt(le, Oe[oe.current], "blur") : s && C && ae !== "" ? bt(le, ae, "blur", "freeSolo") : l && Ve(le, te, "blur"), st(le, "blur");
  }, No = (le) => {
    const ce = le.target.value;
    ae !== ce && (me(ce), Ie(!1), N && N(le, ce, "input")), ce === "" ? !p && !D && pt(le, null, "clear") : je(le);
  }, er = (le) => {
    const ce = Number(le.currentTarget.getAttribute("data-option-index"));
    oe.current !== ce && dt({
      event: le,
      index: ce,
      reason: "mouse"
    });
  }, Vo = (le) => {
    dt({
      event: le,
      index: Number(le.currentTarget.getAttribute("data-option-index")),
      reason: "touch"
    }), it.current = !0;
  }, qe = (le) => {
    const ce = Number(le.currentTarget.getAttribute("data-option-index"));
    bt(le, Oe[ce], "selectOption"), it.current = !1;
  }, br = (le) => (ce) => {
    const Ee = te.slice();
    Ee.splice(le, 1), pt(ce, Ee, "removeOption", {
      option: te[le]
    });
  }, Bt = (le) => {
    ie ? st(le, "toggleInput") : je(le);
  }, cn = (le) => {
    le.currentTarget.contains(le.target) && le.target.getAttribute("id") !== $ && le.preventDefault();
  }, fn = (le) => {
    le.currentTarget.contains(le.target) && (G.current.focus(), ee && Z.current && G.current.selectionEnd - G.current.selectionStart === 0 && G.current.select(), Z.current = !1);
  }, J = (le) => {
    !g && (ae === "" || !ie) && Bt(le);
  };
  let he = C && ae.length > 0;
  he = he || (D ? te.length > 0 : te !== null);
  let ke = Oe;
  if (R) {
    const le = /* @__PURE__ */ new Map();
    let ce = !1;
    ke = Oe.reduce((Ee, Le, Ne) => {
      const ct = R(Le);
      return Ee.length > 0 && Ee[Ee.length - 1].group === ct ? Ee[Ee.length - 1].options.push(Le) : (process.env.NODE_ENV !== "production" && (le.get(ct) && !ce && (console.warn(`MUI: The options provided combined with the \`groupBy\` method of ${u} returns duplicated headers.`, "You can solve the issue by sorting the options with the output of `groupBy`."), ce = !0), le.set(ct, !0)), Ee.push({
        key: Ne,
        index: Ne,
        group: ct,
        options: [Le]
      })), Ee;
    }, []);
  }
  return g && ye && Qo(), {
    getRootProps: (le = {}) => ({
      "aria-owns": Ae ? `${$}-listbox` : null,
      ...le,
      onKeyDown: ot(le),
      onMouseDown: cn,
      onClick: fn
    }),
    getInputLabelProps: () => ({
      id: `${$}-label`,
      htmlFor: $
    }),
    getInputProps: () => ({
      id: $,
      value: ae,
      onBlur: Qo,
      onFocus: ln,
      onChange: No,
      onMouseDown: J,
      // if open then this is handled imperatively so don't let react override
      // only have an opinion about this when closed
      "aria-activedescendant": Ce ? "" : null,
      "aria-autocomplete": o ? "both" : "list",
      "aria-controls": Ae ? `${$}-listbox` : void 0,
      "aria-expanded": Ae,
      // Disable browser's suggestion that might overlap with the popup.
      // Handle autocomplete but not autofill.
      autoComplete: "off",
      ref: G,
      autoCapitalize: "none",
      spellCheck: "false",
      role: "combobox",
      disabled: g
    }),
    getClearProps: () => ({
      tabIndex: -1,
      type: "button",
      onClick: qt
    }),
    getPopupIndicatorProps: () => ({
      tabIndex: -1,
      type: "button",
      onClick: Bt
    }),
    getTagProps: ({
      index: le
    }) => ({
      key: le,
      "data-tag-index": le,
      tabIndex: -1,
      ...!L && {
        onDelete: br(le)
      }
    }),
    getListboxProps: () => ({
      role: "listbox",
      id: `${$}-listbox`,
      "aria-labelledby": `${$}-label`,
      ref: Me,
      onMouseDown: (le) => {
        le.preventDefault();
      }
    }),
    getOptionProps: ({
      index: le,
      option: ce
    }) => {
      const Ee = (D ? te : [te]).some((Ne) => Ne != null && A(ce, Ne)), Le = x ? x(ce) : !1;
      return {
        key: (T == null ? void 0 : T(ce)) ?? U(ce),
        tabIndex: -1,
        role: "option",
        id: `${$}-option-${le}`,
        onMouseMove: er,
        onClick: qe,
        onTouchStart: Vo,
        "data-option-index": le,
        "aria-disabled": Le,
        "aria-selected": Ee
      };
    },
    id: $,
    inputValue: ae,
    value: te,
    dirty: he,
    expanded: Ce && re,
    popupOpen: Ce,
    focused: ye || z !== -1,
    anchorEl: re,
    setAnchorEl: ne,
    focusedTag: z,
    groupedOptions: ke
  };
}
var Ln = "top", xo = "bottom", Co = "right", _n = "left", Cf = "auto", $a = [Ln, xo, Co, _n], Xi = "start", fa = "end", uP = "clippingParents", Qy = "viewport", ws = "popper", dP = "reference", ch = /* @__PURE__ */ $a.reduce(function(e, t) {
  return e.concat([t + "-" + Xi, t + "-" + fa]);
}, []), e0 = /* @__PURE__ */ [].concat($a, [Cf]).reduce(function(e, t) {
  return e.concat([t, t + "-" + Xi, t + "-" + fa]);
}, []), pP = "beforeRead", fP = "read", mP = "afterRead", gP = "beforeMain", hP = "main", bP = "afterMain", vP = "beforeWrite", yP = "write", xP = "afterWrite", CP = [pP, fP, mP, gP, hP, bP, vP, yP, xP];
function Zo(e) {
  return e ? (e.nodeName || "").toLowerCase() : null;
}
function ro(e) {
  if (e == null)
    return window;
  if (e.toString() !== "[object Window]") {
    var t = e.ownerDocument;
    return t && t.defaultView || window;
  }
  return e;
}
function ri(e) {
  var t = ro(e).Element;
  return e instanceof t || e instanceof Element;
}
function bo(e) {
  var t = ro(e).HTMLElement;
  return e instanceof t || e instanceof HTMLElement;
}
function Sf(e) {
  if (typeof ShadowRoot > "u")
    return !1;
  var t = ro(e).ShadowRoot;
  return e instanceof t || e instanceof ShadowRoot;
}
function SP(e) {
  var t = e.state;
  Object.keys(t.elements).forEach(function(n) {
    var o = t.styles[n] || {}, i = t.attributes[n] || {}, s = t.elements[n];
    !bo(s) || !Zo(s) || (Object.assign(s.style, o), Object.keys(i).forEach(function(a) {
      var l = i[a];
      l === !1 ? s.removeAttribute(a) : s.setAttribute(a, l === !0 ? "" : l);
    }));
  });
}
function wP(e) {
  var t = e.state, n = {
    popper: {
      position: t.options.strategy,
      left: "0",
      top: "0",
      margin: "0"
    },
    arrow: {
      position: "absolute"
    },
    reference: {}
  };
  return Object.assign(t.elements.popper.style, n.popper), t.styles = n, t.elements.arrow && Object.assign(t.elements.arrow.style, n.arrow), function() {
    Object.keys(t.elements).forEach(function(o) {
      var i = t.elements[o], s = t.attributes[o] || {}, a = Object.keys(t.styles.hasOwnProperty(o) ? t.styles[o] : n[o]), l = a.reduce(function(c, u) {
        return c[u] = "", c;
      }, {});
      !bo(i) || !Zo(i) || (Object.assign(i.style, l), Object.keys(s).forEach(function(c) {
        i.removeAttribute(c);
      }));
    });
  };
}
const TP = {
  name: "applyStyles",
  enabled: !0,
  phase: "write",
  fn: SP,
  effect: wP,
  requires: ["computeStyles"]
};
function Uo(e) {
  return e.split("-")[0];
}
var ei = Math.max, rc = Math.min, Yi = Math.round;
function dp() {
  var e = navigator.userAgentData;
  return e != null && e.brands && Array.isArray(e.brands) ? e.brands.map(function(t) {
    return t.brand + "/" + t.version;
  }).join(" ") : navigator.userAgent;
}
function t0() {
  return !/^((?!chrome|android).)*safari/i.test(dp());
}
function Zi(e, t, n) {
  t === void 0 && (t = !1), n === void 0 && (n = !1);
  var o = e.getBoundingClientRect(), i = 1, s = 1;
  t && bo(e) && (i = e.offsetWidth > 0 && Yi(o.width) / e.offsetWidth || 1, s = e.offsetHeight > 0 && Yi(o.height) / e.offsetHeight || 1);
  var a = ri(e) ? ro(e) : window, l = a.visualViewport, c = !t0() && n, u = (o.left + (c && l ? l.offsetLeft : 0)) / i, d = (o.top + (c && l ? l.offsetTop : 0)) / s, p = o.width / i, m = o.height / s;
  return {
    width: p,
    height: m,
    top: d,
    right: u + p,
    bottom: d + m,
    left: u,
    x: u,
    y: d
  };
}
function wf(e) {
  var t = Zi(e), n = e.offsetWidth, o = e.offsetHeight;
  return Math.abs(t.width - n) <= 1 && (n = t.width), Math.abs(t.height - o) <= 1 && (o = t.height), {
    x: e.offsetLeft,
    y: e.offsetTop,
    width: n,
    height: o
  };
}
function n0(e, t) {
  var n = t.getRootNode && t.getRootNode();
  if (e.contains(t))
    return !0;
  if (n && Sf(n)) {
    var o = t;
    do {
      if (o && e.isSameNode(o))
        return !0;
      o = o.parentNode || o.host;
    } while (o);
  }
  return !1;
}
function pr(e) {
  return ro(e).getComputedStyle(e);
}
function IP(e) {
  return ["table", "td", "th"].indexOf(Zo(e)) >= 0;
}
function Vr(e) {
  return ((ri(e) ? e.ownerDocument : (
    // $FlowFixMe[prop-missing]
    e.document
  )) || window.document).documentElement;
}
function Jc(e) {
  return Zo(e) === "html" ? e : (
    // this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    e.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    e.parentNode || // DOM Element detected
    (Sf(e) ? e.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    Vr(e)
  );
}
function uh(e) {
  return !bo(e) || // https://github.com/popperjs/popper-core/issues/837
  pr(e).position === "fixed" ? null : e.offsetParent;
}
function RP(e) {
  var t = /firefox/i.test(dp()), n = /Trident/i.test(dp());
  if (n && bo(e)) {
    var o = pr(e);
    if (o.position === "fixed")
      return null;
  }
  var i = Jc(e);
  for (Sf(i) && (i = i.host); bo(i) && ["html", "body"].indexOf(Zo(i)) < 0; ) {
    var s = pr(i);
    if (s.transform !== "none" || s.perspective !== "none" || s.contain === "paint" || ["transform", "perspective"].indexOf(s.willChange) !== -1 || t && s.willChange === "filter" || t && s.filter && s.filter !== "none")
      return i;
    i = i.parentNode;
  }
  return null;
}
function La(e) {
  for (var t = ro(e), n = uh(e); n && IP(n) && pr(n).position === "static"; )
    n = uh(n);
  return n && (Zo(n) === "html" || Zo(n) === "body" && pr(n).position === "static") ? t : n || RP(e) || t;
}
function Tf(e) {
  return ["top", "bottom"].indexOf(e) >= 0 ? "x" : "y";
}
function Us(e, t, n) {
  return ei(e, rc(t, n));
}
function OP(e, t, n) {
  var o = Us(e, t, n);
  return o > n ? n : o;
}
function o0() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}
function r0(e) {
  return Object.assign({}, o0(), e);
}
function i0(e, t) {
  return t.reduce(function(n, o) {
    return n[o] = e, n;
  }, {});
}
var EP = function(t, n) {
  return t = typeof t == "function" ? t(Object.assign({}, n.rects, {
    placement: n.placement
  })) : t, r0(typeof t != "number" ? t : i0(t, $a));
};
function PP(e) {
  var t, n = e.state, o = e.name, i = e.options, s = n.elements.arrow, a = n.modifiersData.popperOffsets, l = Uo(n.placement), c = Tf(l), u = [_n, Co].indexOf(l) >= 0, d = u ? "height" : "width";
  if (!(!s || !a)) {
    var p = EP(i.padding, n), m = wf(s), g = c === "y" ? Ln : _n, h = c === "y" ? xo : Co, v = n.rects.reference[d] + n.rects.reference[c] - a[c] - n.rects.popper[d], b = a[c] - n.rects.reference[c], y = La(s), C = y ? c === "y" ? y.clientHeight || 0 : y.clientWidth || 0 : 0, x = v / 2 - b / 2, T = p[g], w = C - m[d] - p[h], R = C / 2 - m[d] / 2 + x, E = Us(T, R, w), O = c;
    n.modifiersData[o] = (t = {}, t[O] = E, t.centerOffset = E - R, t);
  }
}
function AP(e) {
  var t = e.state, n = e.options, o = n.element, i = o === void 0 ? "[data-popper-arrow]" : o;
  i != null && (typeof i == "string" && (i = t.elements.popper.querySelector(i), !i) || n0(t.elements.popper, i) && (t.elements.arrow = i));
}
const DP = {
  name: "arrow",
  enabled: !0,
  phase: "main",
  fn: PP,
  effect: AP,
  requires: ["popperOffsets"],
  requiresIfExists: ["preventOverflow"]
};
function qi(e) {
  return e.split("-")[1];
}
var MP = {
  top: "auto",
  right: "auto",
  bottom: "auto",
  left: "auto"
};
function jP(e, t) {
  var n = e.x, o = e.y, i = t.devicePixelRatio || 1;
  return {
    x: Yi(n * i) / i || 0,
    y: Yi(o * i) / i || 0
  };
}
function dh(e) {
  var t, n = e.popper, o = e.popperRect, i = e.placement, s = e.variation, a = e.offsets, l = e.position, c = e.gpuAcceleration, u = e.adaptive, d = e.roundOffsets, p = e.isFixed, m = a.x, g = m === void 0 ? 0 : m, h = a.y, v = h === void 0 ? 0 : h, b = typeof d == "function" ? d({
    x: g,
    y: v
  }) : {
    x: g,
    y: v
  };
  g = b.x, v = b.y;
  var y = a.hasOwnProperty("x"), C = a.hasOwnProperty("y"), x = _n, T = Ln, w = window;
  if (u) {
    var R = La(n), E = "clientHeight", O = "clientWidth";
    if (R === ro(n) && (R = Vr(n), pr(R).position !== "static" && l === "absolute" && (E = "scrollHeight", O = "scrollWidth")), R = R, i === Ln || (i === _n || i === Co) && s === fa) {
      T = xo;
      var I = p && R === w && w.visualViewport ? w.visualViewport.height : (
        // $FlowFixMe[prop-missing]
        R[E]
      );
      v -= I - o.height, v *= c ? 1 : -1;
    }
    if (i === _n || (i === Ln || i === xo) && s === fa) {
      x = Co;
      var P = p && R === w && w.visualViewport ? w.visualViewport.width : (
        // $FlowFixMe[prop-missing]
        R[O]
      );
      g -= P - o.width, g *= c ? 1 : -1;
    }
  }
  var A = Object.assign({
    position: l
  }, u && MP), D = d === !0 ? jP({
    x: g,
    y: v
  }, ro(n)) : {
    x: g,
    y: v
  };
  if (g = D.x, v = D.y, c) {
    var k;
    return Object.assign({}, A, (k = {}, k[T] = C ? "0" : "", k[x] = y ? "0" : "", k.transform = (w.devicePixelRatio || 1) <= 1 ? "translate(" + g + "px, " + v + "px)" : "translate3d(" + g + "px, " + v + "px, 0)", k));
  }
  return Object.assign({}, A, (t = {}, t[T] = C ? v + "px" : "", t[x] = y ? g + "px" : "", t.transform = "", t));
}
function kP(e) {
  var t = e.state, n = e.options, o = n.gpuAcceleration, i = o === void 0 ? !0 : o, s = n.adaptive, a = s === void 0 ? !0 : s, l = n.roundOffsets, c = l === void 0 ? !0 : l, u = {
    placement: Uo(t.placement),
    variation: qi(t.placement),
    popper: t.elements.popper,
    popperRect: t.rects.popper,
    gpuAcceleration: i,
    isFixed: t.options.strategy === "fixed"
  };
  t.modifiersData.popperOffsets != null && (t.styles.popper = Object.assign({}, t.styles.popper, dh(Object.assign({}, u, {
    offsets: t.modifiersData.popperOffsets,
    position: t.options.strategy,
    adaptive: a,
    roundOffsets: c
  })))), t.modifiersData.arrow != null && (t.styles.arrow = Object.assign({}, t.styles.arrow, dh(Object.assign({}, u, {
    offsets: t.modifiersData.arrow,
    position: "absolute",
    adaptive: !1,
    roundOffsets: c
  })))), t.attributes.popper = Object.assign({}, t.attributes.popper, {
    "data-popper-placement": t.placement
  });
}
const FP = {
  name: "computeStyles",
  enabled: !0,
  phase: "beforeWrite",
  fn: kP,
  data: {}
};
var sl = {
  passive: !0
};
function NP(e) {
  var t = e.state, n = e.instance, o = e.options, i = o.scroll, s = i === void 0 ? !0 : i, a = o.resize, l = a === void 0 ? !0 : a, c = ro(t.elements.popper), u = [].concat(t.scrollParents.reference, t.scrollParents.popper);
  return s && u.forEach(function(d) {
    d.addEventListener("scroll", n.update, sl);
  }), l && c.addEventListener("resize", n.update, sl), function() {
    s && u.forEach(function(d) {
      d.removeEventListener("scroll", n.update, sl);
    }), l && c.removeEventListener("resize", n.update, sl);
  };
}
const VP = {
  name: "eventListeners",
  enabled: !0,
  phase: "write",
  fn: function() {
  },
  effect: NP,
  data: {}
};
var $P = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
function _l(e) {
  return e.replace(/left|right|bottom|top/g, function(t) {
    return $P[t];
  });
}
var LP = {
  start: "end",
  end: "start"
};
function ph(e) {
  return e.replace(/start|end/g, function(t) {
    return LP[t];
  });
}
function If(e) {
  var t = ro(e), n = t.pageXOffset, o = t.pageYOffset;
  return {
    scrollLeft: n,
    scrollTop: o
  };
}
function Rf(e) {
  return Zi(Vr(e)).left + If(e).scrollLeft;
}
function _P(e, t) {
  var n = ro(e), o = Vr(e), i = n.visualViewport, s = o.clientWidth, a = o.clientHeight, l = 0, c = 0;
  if (i) {
    s = i.width, a = i.height;
    var u = t0();
    (u || !u && t === "fixed") && (l = i.offsetLeft, c = i.offsetTop);
  }
  return {
    width: s,
    height: a,
    x: l + Rf(e),
    y: c
  };
}
function BP(e) {
  var t, n = Vr(e), o = If(e), i = (t = e.ownerDocument) == null ? void 0 : t.body, s = ei(n.scrollWidth, n.clientWidth, i ? i.scrollWidth : 0, i ? i.clientWidth : 0), a = ei(n.scrollHeight, n.clientHeight, i ? i.scrollHeight : 0, i ? i.clientHeight : 0), l = -o.scrollLeft + Rf(e), c = -o.scrollTop;
  return pr(i || n).direction === "rtl" && (l += ei(n.clientWidth, i ? i.clientWidth : 0) - s), {
    width: s,
    height: a,
    x: l,
    y: c
  };
}
function Of(e) {
  var t = pr(e), n = t.overflow, o = t.overflowX, i = t.overflowY;
  return /auto|scroll|overlay|hidden/.test(n + i + o);
}
function s0(e) {
  return ["html", "body", "#document"].indexOf(Zo(e)) >= 0 ? e.ownerDocument.body : bo(e) && Of(e) ? e : s0(Jc(e));
}
function Xs(e, t) {
  var n;
  t === void 0 && (t = []);
  var o = s0(e), i = o === ((n = e.ownerDocument) == null ? void 0 : n.body), s = ro(o), a = i ? [s].concat(s.visualViewport || [], Of(o) ? o : []) : o, l = t.concat(a);
  return i ? l : (
    // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
    l.concat(Xs(Jc(a)))
  );
}
function pp(e) {
  return Object.assign({}, e, {
    left: e.x,
    top: e.y,
    right: e.x + e.width,
    bottom: e.y + e.height
  });
}
function zP(e, t) {
  var n = Zi(e, !1, t === "fixed");
  return n.top = n.top + e.clientTop, n.left = n.left + e.clientLeft, n.bottom = n.top + e.clientHeight, n.right = n.left + e.clientWidth, n.width = e.clientWidth, n.height = e.clientHeight, n.x = n.left, n.y = n.top, n;
}
function fh(e, t, n) {
  return t === Qy ? pp(_P(e, n)) : ri(t) ? zP(t, n) : pp(BP(Vr(e)));
}
function WP(e) {
  var t = Xs(Jc(e)), n = ["absolute", "fixed"].indexOf(pr(e).position) >= 0, o = n && bo(e) ? La(e) : e;
  return ri(o) ? t.filter(function(i) {
    return ri(i) && n0(i, o) && Zo(i) !== "body";
  }) : [];
}
function HP(e, t, n, o) {
  var i = t === "clippingParents" ? WP(e) : [].concat(t), s = [].concat(i, [n]), a = s[0], l = s.reduce(function(c, u) {
    var d = fh(e, u, o);
    return c.top = ei(d.top, c.top), c.right = rc(d.right, c.right), c.bottom = rc(d.bottom, c.bottom), c.left = ei(d.left, c.left), c;
  }, fh(e, a, o));
  return l.width = l.right - l.left, l.height = l.bottom - l.top, l.x = l.left, l.y = l.top, l;
}
function a0(e) {
  var t = e.reference, n = e.element, o = e.placement, i = o ? Uo(o) : null, s = o ? qi(o) : null, a = t.x + t.width / 2 - n.width / 2, l = t.y + t.height / 2 - n.height / 2, c;
  switch (i) {
    case Ln:
      c = {
        x: a,
        y: t.y - n.height
      };
      break;
    case xo:
      c = {
        x: a,
        y: t.y + t.height
      };
      break;
    case Co:
      c = {
        x: t.x + t.width,
        y: l
      };
      break;
    case _n:
      c = {
        x: t.x - n.width,
        y: l
      };
      break;
    default:
      c = {
        x: t.x,
        y: t.y
      };
  }
  var u = i ? Tf(i) : null;
  if (u != null) {
    var d = u === "y" ? "height" : "width";
    switch (s) {
      case Xi:
        c[u] = c[u] - (t[d] / 2 - n[d] / 2);
        break;
      case fa:
        c[u] = c[u] + (t[d] / 2 - n[d] / 2);
        break;
    }
  }
  return c;
}
function ma(e, t) {
  t === void 0 && (t = {});
  var n = t, o = n.placement, i = o === void 0 ? e.placement : o, s = n.strategy, a = s === void 0 ? e.strategy : s, l = n.boundary, c = l === void 0 ? uP : l, u = n.rootBoundary, d = u === void 0 ? Qy : u, p = n.elementContext, m = p === void 0 ? ws : p, g = n.altBoundary, h = g === void 0 ? !1 : g, v = n.padding, b = v === void 0 ? 0 : v, y = r0(typeof b != "number" ? b : i0(b, $a)), C = m === ws ? dP : ws, x = e.rects.popper, T = e.elements[h ? C : m], w = HP(ri(T) ? T : T.contextElement || Vr(e.elements.popper), c, d, a), R = Zi(e.elements.reference), E = a0({
    reference: R,
    element: x,
    strategy: "absolute",
    placement: i
  }), O = pp(Object.assign({}, x, E)), I = m === ws ? O : R, P = {
    top: w.top - I.top + y.top,
    bottom: I.bottom - w.bottom + y.bottom,
    left: w.left - I.left + y.left,
    right: I.right - w.right + y.right
  }, A = e.modifiersData.offset;
  if (m === ws && A) {
    var D = A[i];
    Object.keys(P).forEach(function(k) {
      var M = [Co, xo].indexOf(k) >= 0 ? 1 : -1, F = [Ln, xo].indexOf(k) >= 0 ? "y" : "x";
      P[k] += D[F] * M;
    });
  }
  return P;
}
function GP(e, t) {
  t === void 0 && (t = {});
  var n = t, o = n.placement, i = n.boundary, s = n.rootBoundary, a = n.padding, l = n.flipVariations, c = n.allowedAutoPlacements, u = c === void 0 ? e0 : c, d = qi(o), p = d ? l ? ch : ch.filter(function(h) {
    return qi(h) === d;
  }) : $a, m = p.filter(function(h) {
    return u.indexOf(h) >= 0;
  });
  m.length === 0 && (m = p);
  var g = m.reduce(function(h, v) {
    return h[v] = ma(e, {
      placement: v,
      boundary: i,
      rootBoundary: s,
      padding: a
    })[Uo(v)], h;
  }, {});
  return Object.keys(g).sort(function(h, v) {
    return g[h] - g[v];
  });
}
function UP(e) {
  if (Uo(e) === Cf)
    return [];
  var t = _l(e);
  return [ph(e), t, ph(t)];
}
function XP(e) {
  var t = e.state, n = e.options, o = e.name;
  if (!t.modifiersData[o]._skip) {
    for (var i = n.mainAxis, s = i === void 0 ? !0 : i, a = n.altAxis, l = a === void 0 ? !0 : a, c = n.fallbackPlacements, u = n.padding, d = n.boundary, p = n.rootBoundary, m = n.altBoundary, g = n.flipVariations, h = g === void 0 ? !0 : g, v = n.allowedAutoPlacements, b = t.options.placement, y = Uo(b), C = y === b, x = c || (C || !h ? [_l(b)] : UP(b)), T = [b].concat(x).reduce(function($, U) {
      return $.concat(Uo(U) === Cf ? GP(t, {
        placement: U,
        boundary: d,
        rootBoundary: p,
        padding: u,
        flipVariations: h,
        allowedAutoPlacements: v
      }) : U);
    }, []), w = t.rects.reference, R = t.rects.popper, E = /* @__PURE__ */ new Map(), O = !0, I = T[0], P = 0; P < T.length; P++) {
      var A = T[P], D = Uo(A), k = qi(A) === Xi, M = [Ln, xo].indexOf(D) >= 0, F = M ? "width" : "height", N = ma(t, {
        placement: A,
        boundary: d,
        rootBoundary: p,
        altBoundary: m,
        padding: u
      }), W = M ? k ? Co : _n : k ? xo : Ln;
      w[F] > R[F] && (W = _l(W));
      var H = _l(W), B = [];
      if (s && B.push(N[D] <= 0), l && B.push(N[W] <= 0, N[H] <= 0), B.every(function($) {
        return $;
      })) {
        I = A, O = !1;
        break;
      }
      E.set(A, B);
    }
    if (O)
      for (var j = h ? 3 : 1, L = function(U) {
        var X = T.find(function(Z) {
          var G = E.get(Z);
          if (G)
            return G.slice(0, U).every(function(K) {
              return K;
            });
        });
        if (X)
          return I = X, "break";
      }, ee = j; ee > 0; ee--) {
        var Y = L(ee);
        if (Y === "break") break;
      }
    t.placement !== I && (t.modifiersData[o]._skip = !0, t.placement = I, t.reset = !0);
  }
}
const YP = {
  name: "flip",
  enabled: !0,
  phase: "main",
  fn: XP,
  requiresIfExists: ["offset"],
  data: {
    _skip: !1
  }
};
function mh(e, t, n) {
  return n === void 0 && (n = {
    x: 0,
    y: 0
  }), {
    top: e.top - t.height - n.y,
    right: e.right - t.width + n.x,
    bottom: e.bottom - t.height + n.y,
    left: e.left - t.width - n.x
  };
}
function gh(e) {
  return [Ln, Co, xo, _n].some(function(t) {
    return e[t] >= 0;
  });
}
function ZP(e) {
  var t = e.state, n = e.name, o = t.rects.reference, i = t.rects.popper, s = t.modifiersData.preventOverflow, a = ma(t, {
    elementContext: "reference"
  }), l = ma(t, {
    altBoundary: !0
  }), c = mh(a, o), u = mh(l, i, s), d = gh(c), p = gh(u);
  t.modifiersData[n] = {
    referenceClippingOffsets: c,
    popperEscapeOffsets: u,
    isReferenceHidden: d,
    hasPopperEscaped: p
  }, t.attributes.popper = Object.assign({}, t.attributes.popper, {
    "data-popper-reference-hidden": d,
    "data-popper-escaped": p
  });
}
const qP = {
  name: "hide",
  enabled: !0,
  phase: "main",
  requiresIfExists: ["preventOverflow"],
  fn: ZP
};
function JP(e, t, n) {
  var o = Uo(e), i = [_n, Ln].indexOf(o) >= 0 ? -1 : 1, s = typeof n == "function" ? n(Object.assign({}, t, {
    placement: e
  })) : n, a = s[0], l = s[1];
  return a = a || 0, l = (l || 0) * i, [_n, Co].indexOf(o) >= 0 ? {
    x: l,
    y: a
  } : {
    x: a,
    y: l
  };
}
function KP(e) {
  var t = e.state, n = e.options, o = e.name, i = n.offset, s = i === void 0 ? [0, 0] : i, a = e0.reduce(function(d, p) {
    return d[p] = JP(p, t.rects, s), d;
  }, {}), l = a[t.placement], c = l.x, u = l.y;
  t.modifiersData.popperOffsets != null && (t.modifiersData.popperOffsets.x += c, t.modifiersData.popperOffsets.y += u), t.modifiersData[o] = a;
}
const QP = {
  name: "offset",
  enabled: !0,
  phase: "main",
  requires: ["popperOffsets"],
  fn: KP
};
function eA(e) {
  var t = e.state, n = e.name;
  t.modifiersData[n] = a0({
    reference: t.rects.reference,
    element: t.rects.popper,
    strategy: "absolute",
    placement: t.placement
  });
}
const tA = {
  name: "popperOffsets",
  enabled: !0,
  phase: "read",
  fn: eA,
  data: {}
};
function nA(e) {
  return e === "x" ? "y" : "x";
}
function oA(e) {
  var t = e.state, n = e.options, o = e.name, i = n.mainAxis, s = i === void 0 ? !0 : i, a = n.altAxis, l = a === void 0 ? !1 : a, c = n.boundary, u = n.rootBoundary, d = n.altBoundary, p = n.padding, m = n.tether, g = m === void 0 ? !0 : m, h = n.tetherOffset, v = h === void 0 ? 0 : h, b = ma(t, {
    boundary: c,
    rootBoundary: u,
    padding: p,
    altBoundary: d
  }), y = Uo(t.placement), C = qi(t.placement), x = !C, T = Tf(y), w = nA(T), R = t.modifiersData.popperOffsets, E = t.rects.reference, O = t.rects.popper, I = typeof v == "function" ? v(Object.assign({}, t.rects, {
    placement: t.placement
  })) : v, P = typeof I == "number" ? {
    mainAxis: I,
    altAxis: I
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, I), A = t.modifiersData.offset ? t.modifiersData.offset[t.placement] : null, D = {
    x: 0,
    y: 0
  };
  if (R) {
    if (s) {
      var k, M = T === "y" ? Ln : _n, F = T === "y" ? xo : Co, N = T === "y" ? "height" : "width", W = R[T], H = W + b[M], B = W - b[F], j = g ? -O[N] / 2 : 0, L = C === Xi ? E[N] : O[N], ee = C === Xi ? -O[N] : -E[N], Y = t.elements.arrow, $ = g && Y ? wf(Y) : {
        width: 0,
        height: 0
      }, U = t.modifiersData["arrow#persistent"] ? t.modifiersData["arrow#persistent"].padding : o0(), X = U[M], Z = U[F], G = Us(0, E[N], $[N]), K = x ? E[N] / 2 - j - G - X - P.mainAxis : L - G - X - P.mainAxis, re = x ? -E[N] / 2 + j + G + Z + P.mainAxis : ee + G + Z + P.mainAxis, ne = t.elements.arrow && La(t.elements.arrow), z = ne ? T === "y" ? ne.clientTop || 0 : ne.clientLeft || 0 : 0, q = (k = A == null ? void 0 : A[T]) != null ? k : 0, _ = W + K - q - z, oe = W + re - q, te = Us(g ? rc(H, _) : H, W, g ? ei(B, oe) : B);
      R[T] = te, D[T] = te - W;
    }
    if (l) {
      var se, ae = T === "x" ? Ln : _n, me = T === "x" ? xo : Co, ye = R[w], Te = w === "y" ? "height" : "width", Ve = ye + b[ae], ie = ye - b[me], be = [Ln, _n].indexOf(y) !== -1, xe = (se = A == null ? void 0 : A[w]) != null ? se : 0, Ie = be ? Ve : ye - E[Te] - O[Te] - xe + P.altAxis, Pe = be ? ye + E[Te] + O[Te] - xe - P.altAxis : ie, Ce = g && be ? OP(Ie, ye, Pe) : Us(g ? Ie : Ve, ye, g ? Pe : ie);
      R[w] = Ce, D[w] = Ce - ye;
    }
    t.modifiersData[o] = D;
  }
}
const rA = {
  name: "preventOverflow",
  enabled: !0,
  phase: "main",
  fn: oA,
  requiresIfExists: ["offset"]
};
function iA(e) {
  return {
    scrollLeft: e.scrollLeft,
    scrollTop: e.scrollTop
  };
}
function sA(e) {
  return e === ro(e) || !bo(e) ? If(e) : iA(e);
}
function aA(e) {
  var t = e.getBoundingClientRect(), n = Yi(t.width) / e.offsetWidth || 1, o = Yi(t.height) / e.offsetHeight || 1;
  return n !== 1 || o !== 1;
}
function lA(e, t, n) {
  n === void 0 && (n = !1);
  var o = bo(t), i = bo(t) && aA(t), s = Vr(t), a = Zi(e, i, n), l = {
    scrollLeft: 0,
    scrollTop: 0
  }, c = {
    x: 0,
    y: 0
  };
  return (o || !o && !n) && ((Zo(t) !== "body" || // https://github.com/popperjs/popper-core/issues/1078
  Of(s)) && (l = sA(t)), bo(t) ? (c = Zi(t, !0), c.x += t.clientLeft, c.y += t.clientTop) : s && (c.x = Rf(s))), {
    x: a.left + l.scrollLeft - c.x,
    y: a.top + l.scrollTop - c.y,
    width: a.width,
    height: a.height
  };
}
function cA(e) {
  var t = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Set(), o = [];
  e.forEach(function(s) {
    t.set(s.name, s);
  });
  function i(s) {
    n.add(s.name);
    var a = [].concat(s.requires || [], s.requiresIfExists || []);
    a.forEach(function(l) {
      if (!n.has(l)) {
        var c = t.get(l);
        c && i(c);
      }
    }), o.push(s);
  }
  return e.forEach(function(s) {
    n.has(s.name) || i(s);
  }), o;
}
function uA(e) {
  var t = cA(e);
  return CP.reduce(function(n, o) {
    return n.concat(t.filter(function(i) {
      return i.phase === o;
    }));
  }, []);
}
function dA(e) {
  var t;
  return function() {
    return t || (t = new Promise(function(n) {
      Promise.resolve().then(function() {
        t = void 0, n(e());
      });
    })), t;
  };
}
function pA(e) {
  var t = e.reduce(function(n, o) {
    var i = n[o.name];
    return n[o.name] = i ? Object.assign({}, i, o, {
      options: Object.assign({}, i.options, o.options),
      data: Object.assign({}, i.data, o.data)
    }) : o, n;
  }, {});
  return Object.keys(t).map(function(n) {
    return t[n];
  });
}
var hh = {
  placement: "bottom",
  modifiers: [],
  strategy: "absolute"
};
function bh() {
  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
    t[n] = arguments[n];
  return !t.some(function(o) {
    return !(o && typeof o.getBoundingClientRect == "function");
  });
}
function fA(e) {
  e === void 0 && (e = {});
  var t = e, n = t.defaultModifiers, o = n === void 0 ? [] : n, i = t.defaultOptions, s = i === void 0 ? hh : i;
  return function(l, c, u) {
    u === void 0 && (u = s);
    var d = {
      placement: "bottom",
      orderedModifiers: [],
      options: Object.assign({}, hh, s),
      modifiersData: {},
      elements: {
        reference: l,
        popper: c
      },
      attributes: {},
      styles: {}
    }, p = [], m = !1, g = {
      state: d,
      setOptions: function(y) {
        var C = typeof y == "function" ? y(d.options) : y;
        v(), d.options = Object.assign({}, s, d.options, C), d.scrollParents = {
          reference: ri(l) ? Xs(l) : l.contextElement ? Xs(l.contextElement) : [],
          popper: Xs(c)
        };
        var x = uA(pA([].concat(o, d.options.modifiers)));
        return d.orderedModifiers = x.filter(function(T) {
          return T.enabled;
        }), h(), g.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function() {
        if (!m) {
          var y = d.elements, C = y.reference, x = y.popper;
          if (bh(C, x)) {
            d.rects = {
              reference: lA(C, La(x), d.options.strategy === "fixed"),
              popper: wf(x)
            }, d.reset = !1, d.placement = d.options.placement, d.orderedModifiers.forEach(function(P) {
              return d.modifiersData[P.name] = Object.assign({}, P.data);
            });
            for (var T = 0; T < d.orderedModifiers.length; T++) {
              if (d.reset === !0) {
                d.reset = !1, T = -1;
                continue;
              }
              var w = d.orderedModifiers[T], R = w.fn, E = w.options, O = E === void 0 ? {} : E, I = w.name;
              typeof R == "function" && (d = R({
                state: d,
                options: O,
                name: I,
                instance: g
              }) || d);
            }
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: dA(function() {
        return new Promise(function(b) {
          g.forceUpdate(), b(d);
        });
      }),
      destroy: function() {
        v(), m = !0;
      }
    };
    if (!bh(l, c))
      return g;
    g.setOptions(u).then(function(b) {
      !m && u.onFirstUpdate && u.onFirstUpdate(b);
    });
    function h() {
      d.orderedModifiers.forEach(function(b) {
        var y = b.name, C = b.options, x = C === void 0 ? {} : C, T = b.effect;
        if (typeof T == "function") {
          var w = T({
            state: d,
            name: y,
            instance: g,
            options: x
          }), R = function() {
          };
          p.push(w || R);
        }
      });
    }
    function v() {
      p.forEach(function(b) {
        return b();
      }), p = [];
    }
    return g;
  };
}
var mA = [VP, tA, FP, TP, QP, YP, rA, DP, qP], gA = /* @__PURE__ */ fA({
  defaultModifiers: mA
});
function hA(e) {
  return typeof e == "function" ? e() : e;
}
const ga = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const {
    children: o,
    container: i,
    disablePortal: s = !1
  } = t, [a, l] = S.useState(null), c = Yt(ss(o), n);
  if (to(() => {
    s || l(hA(i) || document.body);
  }, [i, s]), to(() => {
    if (a && !s)
      return Ql(n, a), () => {
        Ql(n, null);
      };
  }, [n, a, s]), s) {
    if (/* @__PURE__ */ S.isValidElement(o)) {
      const u = {
        ref: c
      };
      return /* @__PURE__ */ S.cloneElement(o, u);
    }
    return /* @__PURE__ */ f.jsx(S.Fragment, {
      children: o
    });
  }
  return /* @__PURE__ */ f.jsx(S.Fragment, {
    children: a && /* @__PURE__ */ xw.createPortal(o, a)
  });
});
process.env.NODE_ENV !== "production" && (ga.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The children to render into the `container`.
   */
  children: r.node,
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: r.oneOfType([ur, r.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: r.bool
});
process.env.NODE_ENV !== "production" && (ga.propTypes = Gc(ga.propTypes));
function bA(e) {
  return We("MuiPopper", e);
}
_e("MuiPopper", ["root"]);
function vA(e, t) {
  if (t === "ltr")
    return e;
  switch (e) {
    case "bottom-end":
      return "bottom-start";
    case "bottom-start":
      return "bottom-end";
    case "top-end":
      return "top-start";
    case "top-start":
      return "top-end";
    default:
      return e;
  }
}
function ic(e) {
  return typeof e == "function" ? e() : e;
}
function Kc(e) {
  return e.nodeType !== void 0;
}
function yA(e) {
  return !Kc(e);
}
const xA = (e) => {
  const {
    classes: t
  } = e;
  return Ue({
    root: ["root"]
  }, bA, t);
}, CA = {}, SA = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const {
    anchorEl: o,
    children: i,
    direction: s,
    disablePortal: a,
    modifiers: l,
    open: c,
    placement: u,
    popperOptions: d,
    popperRef: p,
    slotProps: m = {},
    slots: g = {},
    TransitionProps: h,
    // @ts-ignore internal logic
    ownerState: v,
    // prevent from spreading to DOM, it can come from the parent component e.g. Select.
    ...b
  } = t, y = S.useRef(null), C = Yt(y, n), x = S.useRef(null), T = Yt(x, p), w = S.useRef(T);
  to(() => {
    w.current = T;
  }, [T]), S.useImperativeHandle(p, () => x.current, []);
  const R = vA(u, s), [E, O] = S.useState(R), [I, P] = S.useState(ic(o));
  S.useEffect(() => {
    x.current && x.current.forceUpdate();
  }), S.useEffect(() => {
    o && P(ic(o));
  }, [o]), to(() => {
    if (!I || !c)
      return;
    const F = (H) => {
      O(H.placement);
    };
    if (process.env.NODE_ENV !== "production" && I && Kc(I) && I.nodeType === 1) {
      const H = I.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && H.top === 0 && H.left === 0 && H.right === 0 && H.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    let N = [{
      name: "preventOverflow",
      options: {
        altBoundary: a
      }
    }, {
      name: "flip",
      options: {
        altBoundary: a
      }
    }, {
      name: "onUpdate",
      enabled: !0,
      phase: "afterWrite",
      fn: ({
        state: H
      }) => {
        F(H);
      }
    }];
    l != null && (N = N.concat(l)), d && d.modifiers != null && (N = N.concat(d.modifiers));
    const W = gA(I, y.current, {
      placement: R,
      ...d,
      modifiers: N
    });
    return w.current(W), () => {
      W.destroy(), w.current(null);
    };
  }, [I, a, l, c, d, R]);
  const A = {
    placement: E
  };
  h !== null && (A.TransitionProps = h);
  const D = xA(t), k = g.root ?? "div", M = Sn({
    elementType: k,
    externalSlotProps: m.root,
    externalForwardedProps: b,
    additionalProps: {
      role: "tooltip",
      ref: C
    },
    ownerState: t,
    className: D.root
  });
  return /* @__PURE__ */ f.jsx(k, {
    ...M,
    children: typeof i == "function" ? i(A) : i
  });
}), l0 = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const {
    anchorEl: o,
    children: i,
    container: s,
    direction: a = "ltr",
    disablePortal: l = !1,
    keepMounted: c = !1,
    modifiers: u,
    open: d,
    placement: p = "bottom",
    popperOptions: m = CA,
    popperRef: g,
    style: h,
    transition: v = !1,
    slotProps: b = {},
    slots: y = {},
    ...C
  } = t, [x, T] = S.useState(!0), w = () => {
    T(!1);
  }, R = () => {
    T(!0);
  };
  if (!c && !d && (!v || x))
    return null;
  let E;
  if (s)
    E = s;
  else if (o) {
    const P = ic(o);
    E = P && Kc(P) ? dn(P).body : dn(null).body;
  }
  const O = !d && c && (!v || x) ? "none" : void 0, I = v ? {
    in: d,
    onEnter: w,
    onExited: R
  } : void 0;
  return /* @__PURE__ */ f.jsx(ga, {
    disablePortal: l,
    container: E,
    children: /* @__PURE__ */ f.jsx(SA, {
      anchorEl: o,
      direction: a,
      disablePortal: l,
      modifiers: u,
      ref: n,
      open: v ? !x : d,
      placement: p,
      popperOptions: m,
      popperRef: g,
      slotProps: b,
      slots: y,
      ...C,
      style: {
        // Prevents scroll issue, waiting for Popper.js to add this style once initiated.
        position: "fixed",
        // Fix Popper.js display issue
        top: 0,
        left: 0,
        display: O,
        ...h
      },
      TransitionProps: I,
      children: i
    })
  });
});
process.env.NODE_ENV !== "production" && (l0.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: oo(r.oneOfType([ur, r.object, r.func]), (e) => {
    if (e.open) {
      const t = ic(e.anchorEl);
      if (t && Kc(t) && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else if (!t || typeof t.getBoundingClientRect != "function" || yA(t) && t.contextElement != null && t.contextElement.nodeType !== 1)
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "It should be an HTML element instance or a virtualElement ", "(https://popper.js.org/docs/v2/virtual-elements/)."].join(`
`));
    }
    return null;
  }),
  /**
   * Popper render function or node.
   */
  children: r.oneOfType([r.node, r.func]),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: r.oneOfType([ur, r.func]),
  /**
   * Direction of the text.
   * @default 'ltr'
   */
  direction: r.oneOf(["ltr", "rtl"]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: r.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: r.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: r.arrayOf(r.shape({
    data: r.object,
    effect: r.func,
    enabled: r.bool,
    fn: r.func,
    name: r.any,
    options: r.object,
    phase: r.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: r.arrayOf(r.string),
    requiresIfExists: r.arrayOf(r.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: r.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: r.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: r.shape({
    modifiers: r.array,
    onFirstUpdate: r.func,
    placement: r.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: r.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: In,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: r.shape({
    root: r.oneOfType([r.func, r.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: r.shape({
    root: r.elementType
  }),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: r.bool
});
const wA = Q(l0, {
  name: "MuiPopper",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), as = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Nr(), i = Ye({
    props: t,
    name: "MuiPopper"
  }), {
    anchorEl: s,
    component: a,
    components: l,
    componentsProps: c,
    container: u,
    disablePortal: d,
    keepMounted: p,
    modifiers: m,
    open: g,
    placement: h,
    popperOptions: v,
    popperRef: b,
    transition: y,
    slots: C,
    slotProps: x,
    ...T
  } = i, w = (C == null ? void 0 : C.root) ?? (l == null ? void 0 : l.Root), R = {
    anchorEl: s,
    container: u,
    disablePortal: d,
    keepMounted: p,
    modifiers: m,
    open: g,
    placement: h,
    popperOptions: v,
    popperRef: b,
    transition: y,
    ...T
  };
  return /* @__PURE__ */ f.jsx(wA, {
    as: a,
    direction: o ? "rtl" : "ltr",
    slots: {
      root: w
    },
    slotProps: x ?? c,
    ...R,
    ref: n
  });
});
process.env.NODE_ENV !== "production" && (as.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
   * or a function that returns either.
   * It's used to set the position of the popper.
   * The return value will passed as the reference object of the Popper instance.
   */
  anchorEl: r.oneOfType([ur, r.object, r.func]),
  /**
   * Popper render function or node.
   */
  children: r.oneOfType([r.node, r.func]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   * @default {}
   */
  components: r.shape({
    Root: r.elementType
  }),
  /**
   * The props used for each slot inside the Popper.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).
   * @default {}
   */
  componentsProps: r.shape({
    root: r.oneOfType([r.func, r.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: r.oneOfType([ur, r.func]),
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: r.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Popper.
   * @default false
   */
  keepMounted: r.bool,
  /**
   * Popper.js is based on a "plugin-like" architecture,
   * most of its features are fully encapsulated "modifiers".
   *
   * A modifier is a function that is called each time Popper.js needs to
   * compute the position of the popper.
   * For this reason, modifiers should be very performant to avoid bottlenecks.
   * To learn how to create a modifier, [read the modifiers documentation](https://popper.js.org/docs/v2/modifiers/).
   */
  modifiers: r.arrayOf(r.shape({
    data: r.object,
    effect: r.func,
    enabled: r.bool,
    fn: r.func,
    name: r.any,
    options: r.object,
    phase: r.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: r.arrayOf(r.string),
    requiresIfExists: r.arrayOf(r.string)
  })),
  /**
   * If `true`, the component is shown.
   */
  open: r.bool.isRequired,
  /**
   * Popper placement.
   * @default 'bottom'
   */
  placement: r.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * Options provided to the [`Popper.js`](https://popper.js.org/docs/v2/constructors/#options) instance.
   * @default {}
   */
  popperOptions: r.shape({
    modifiers: r.array,
    onFirstUpdate: r.func,
    placement: r.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: r.oneOf(["absolute", "fixed"])
  }),
  /**
   * A ref that points to the used popper instance.
   */
  popperRef: In,
  /**
   * The props used for each slot inside the Popper.
   * @default {}
   */
  slotProps: r.shape({
    root: r.oneOfType([r.func, r.object])
  }),
  /**
   * The components used for each slot inside the Popper.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: r.shape({
    root: r.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * Help supporting a react-transition-group/Transition component.
   * @default false
   */
  transition: r.bool
});
function TA(e) {
  return We("MuiListSubheader", e);
}
_e("MuiListSubheader", ["root", "colorPrimary", "colorInherit", "gutters", "inset", "sticky"]);
const IA = (e) => {
  const {
    classes: t,
    color: n,
    disableGutters: o,
    inset: i,
    disableSticky: s
  } = e, a = {
    root: ["root", n !== "default" && `color${ue(n)}`, !o && "gutters", i && "inset", !s && "sticky"]
  };
  return Ue(a, TA, t);
}, RA = Q("li", {
  name: "MuiListSubheader",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.color !== "default" && t[`color${ue(n.color)}`], !n.disableGutters && t.gutters, n.inset && t.inset, !n.disableSticky && t.sticky];
  }
})($e(({
  theme: e
}) => ({
  boxSizing: "border-box",
  lineHeight: "48px",
  listStyle: "none",
  color: (e.vars || e).palette.text.secondary,
  fontFamily: e.typography.fontFamily,
  fontWeight: e.typography.fontWeightMedium,
  fontSize: e.typography.pxToRem(14),
  variants: [{
    props: {
      color: "primary"
    },
    style: {
      color: (e.vars || e).palette.primary.main
    }
  }, {
    props: {
      color: "inherit"
    },
    style: {
      color: "inherit"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disableGutters,
    style: {
      paddingLeft: 16,
      paddingRight: 16
    }
  }, {
    props: ({
      ownerState: t
    }) => t.inset,
    style: {
      paddingLeft: 72
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disableSticky,
    style: {
      position: "sticky",
      top: 0,
      zIndex: 1,
      backgroundColor: (e.vars || e).palette.background.paper
    }
  }]
}))), sc = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiListSubheader"
  }), {
    className: i,
    color: s = "default",
    component: a = "li",
    disableGutters: l = !1,
    disableSticky: c = !1,
    inset: u = !1,
    ...d
  } = o, p = {
    ...o,
    color: s,
    component: a,
    disableGutters: l,
    disableSticky: c,
    inset: u
  }, m = IA(p);
  return /* @__PURE__ */ f.jsx(RA, {
    as: a,
    className: fe(m.root, i),
    ref: n,
    ownerState: p,
    ...d
  });
});
sc && (sc.muiSkipListHighlight = !0);
process.env.NODE_ENV !== "production" && (sc.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The color of the component. It supports those theme colors that make sense for this component.
   * @default 'default'
   */
  color: r.oneOf(["default", "inherit", "primary"]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * If `true`, the List Subheader will not have gutters.
   * @default false
   */
  disableGutters: r.bool,
  /**
   * If `true`, the List Subheader will not stick to the top during scroll.
   * @default false
   */
  disableSticky: r.bool,
  /**
   * If `true`, the List Subheader is indented.
   * @default false
   */
  inset: r.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object])
});
const OA = He(/* @__PURE__ */ f.jsx("path", {
  d: "M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
}), "Cancel");
function EA(e) {
  return We("MuiChip", e);
}
const ht = _e("MuiChip", ["root", "sizeSmall", "sizeMedium", "colorDefault", "colorError", "colorInfo", "colorPrimary", "colorSecondary", "colorSuccess", "colorWarning", "disabled", "clickable", "clickableColorPrimary", "clickableColorSecondary", "deletable", "deletableColorPrimary", "deletableColorSecondary", "outlined", "filled", "outlinedPrimary", "outlinedSecondary", "filledPrimary", "filledSecondary", "avatar", "avatarSmall", "avatarMedium", "avatarColorPrimary", "avatarColorSecondary", "icon", "iconSmall", "iconMedium", "iconColorPrimary", "iconColorSecondary", "label", "labelSmall", "labelMedium", "deleteIcon", "deleteIconSmall", "deleteIconMedium", "deleteIconColorPrimary", "deleteIconColorSecondary", "deleteIconOutlinedColorPrimary", "deleteIconOutlinedColorSecondary", "deleteIconFilledColorPrimary", "deleteIconFilledColorSecondary", "focusVisible"]), PA = (e) => {
  const {
    classes: t,
    disabled: n,
    size: o,
    color: i,
    iconColor: s,
    onDelete: a,
    clickable: l,
    variant: c
  } = e, u = {
    root: ["root", c, n && "disabled", `size${ue(o)}`, `color${ue(i)}`, l && "clickable", l && `clickableColor${ue(i)}`, a && "deletable", a && `deletableColor${ue(i)}`, `${c}${ue(i)}`],
    label: ["label", `label${ue(o)}`],
    avatar: ["avatar", `avatar${ue(o)}`, `avatarColor${ue(i)}`],
    icon: ["icon", `icon${ue(o)}`, `iconColor${ue(s)}`],
    deleteIcon: ["deleteIcon", `deleteIcon${ue(o)}`, `deleteIconColor${ue(i)}`, `deleteIcon${ue(c)}Color${ue(i)}`]
  };
  return Ue(u, EA, t);
}, AA = Q("div", {
  name: "MuiChip",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e, {
      color: o,
      iconColor: i,
      clickable: s,
      onDelete: a,
      size: l,
      variant: c
    } = n;
    return [{
      [`& .${ht.avatar}`]: t.avatar
    }, {
      [`& .${ht.avatar}`]: t[`avatar${ue(l)}`]
    }, {
      [`& .${ht.avatar}`]: t[`avatarColor${ue(o)}`]
    }, {
      [`& .${ht.icon}`]: t.icon
    }, {
      [`& .${ht.icon}`]: t[`icon${ue(l)}`]
    }, {
      [`& .${ht.icon}`]: t[`iconColor${ue(i)}`]
    }, {
      [`& .${ht.deleteIcon}`]: t.deleteIcon
    }, {
      [`& .${ht.deleteIcon}`]: t[`deleteIcon${ue(l)}`]
    }, {
      [`& .${ht.deleteIcon}`]: t[`deleteIconColor${ue(o)}`]
    }, {
      [`& .${ht.deleteIcon}`]: t[`deleteIcon${ue(c)}Color${ue(o)}`]
    }, t.root, t[`size${ue(l)}`], t[`color${ue(o)}`], s && t.clickable, s && o !== "default" && t[`clickableColor${ue(o)})`], a && t.deletable, a && o !== "default" && t[`deletableColor${ue(o)}`], t[c], t[`${c}${ue(o)}`]];
  }
})($e(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? e.palette.grey[700] : e.palette.grey[300];
  return {
    maxWidth: "100%",
    fontFamily: e.typography.fontFamily,
    fontSize: e.typography.pxToRem(13),
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    height: 32,
    color: (e.vars || e).palette.text.primary,
    backgroundColor: (e.vars || e).palette.action.selected,
    borderRadius: 32 / 2,
    whiteSpace: "nowrap",
    transition: e.transitions.create(["background-color", "box-shadow"]),
    // reset cursor explicitly in case ButtonBase is used
    cursor: "unset",
    // We disable the focus ring for mouse, touch and keyboard users.
    outline: 0,
    textDecoration: "none",
    border: 0,
    // Remove `button` border
    padding: 0,
    // Remove `button` padding
    verticalAlign: "middle",
    boxSizing: "border-box",
    [`&.${ht.disabled}`]: {
      opacity: (e.vars || e).palette.action.disabledOpacity,
      pointerEvents: "none"
    },
    [`& .${ht.avatar}`]: {
      marginLeft: 5,
      marginRight: -6,
      width: 24,
      height: 24,
      color: e.vars ? e.vars.palette.Chip.defaultAvatarColor : t,
      fontSize: e.typography.pxToRem(12)
    },
    [`& .${ht.avatarColorPrimary}`]: {
      color: (e.vars || e).palette.primary.contrastText,
      backgroundColor: (e.vars || e).palette.primary.dark
    },
    [`& .${ht.avatarColorSecondary}`]: {
      color: (e.vars || e).palette.secondary.contrastText,
      backgroundColor: (e.vars || e).palette.secondary.dark
    },
    [`& .${ht.avatarSmall}`]: {
      marginLeft: 4,
      marginRight: -4,
      width: 18,
      height: 18,
      fontSize: e.typography.pxToRem(10)
    },
    [`& .${ht.icon}`]: {
      marginLeft: 5,
      marginRight: -6
    },
    [`& .${ht.deleteIcon}`]: {
      WebkitTapHighlightColor: "transparent",
      color: e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / 0.26)` : ze(e.palette.text.primary, 0.26),
      fontSize: 22,
      cursor: "pointer",
      margin: "0 5px 0 -6px",
      "&:hover": {
        color: e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / 0.4)` : ze(e.palette.text.primary, 0.4)
      }
    },
    variants: [{
      props: {
        size: "small"
      },
      style: {
        height: 24,
        [`& .${ht.icon}`]: {
          fontSize: 18,
          marginLeft: 4,
          marginRight: -4
        },
        [`& .${ht.deleteIcon}`]: {
          fontSize: 16,
          marginRight: 4,
          marginLeft: -4
        }
      }
    }, ...Object.entries(e.palette).filter(wt(["contrastText"])).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        backgroundColor: (e.vars || e).palette[n].main,
        color: (e.vars || e).palette[n].contrastText,
        [`& .${ht.deleteIcon}`]: {
          color: e.vars ? `rgba(${e.vars.palette[n].contrastTextChannel} / 0.7)` : ze(e.palette[n].contrastText, 0.7),
          "&:hover, &:active": {
            color: (e.vars || e).palette[n].contrastText
          }
        }
      }
    })), {
      props: (n) => n.iconColor === n.color,
      style: {
        [`& .${ht.icon}`]: {
          color: e.vars ? e.vars.palette.Chip.defaultIconColor : t
        }
      }
    }, {
      props: (n) => n.iconColor === n.color && n.color !== "default",
      style: {
        [`& .${ht.icon}`]: {
          color: "inherit"
        }
      }
    }, {
      props: {
        onDelete: !0
      },
      style: {
        [`&.${ht.focusVisible}`]: {
          backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : ze(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
        }
      }
    }, ...Object.entries(e.palette).filter(wt(["dark"])).map(([n]) => ({
      props: {
        color: n,
        onDelete: !0
      },
      style: {
        [`&.${ht.focusVisible}`]: {
          background: (e.vars || e).palette[n].dark
        }
      }
    })), {
      props: {
        clickable: !0
      },
      style: {
        userSelect: "none",
        WebkitTapHighlightColor: "transparent",
        cursor: "pointer",
        "&:hover": {
          backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : ze(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity)
        },
        [`&.${ht.focusVisible}`]: {
          backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : ze(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
        },
        "&:active": {
          boxShadow: (e.vars || e).shadows[1]
        }
      }
    }, ...Object.entries(e.palette).filter(wt(["dark"])).map(([n]) => ({
      props: {
        color: n,
        clickable: !0
      },
      style: {
        [`&:hover, &.${ht.focusVisible}`]: {
          backgroundColor: (e.vars || e).palette[n].dark
        }
      }
    })), {
      props: {
        variant: "outlined"
      },
      style: {
        backgroundColor: "transparent",
        border: e.vars ? `1px solid ${e.vars.palette.Chip.defaultBorder}` : `1px solid ${e.palette.mode === "light" ? e.palette.grey[400] : e.palette.grey[700]}`,
        [`&.${ht.clickable}:hover`]: {
          backgroundColor: (e.vars || e).palette.action.hover
        },
        [`&.${ht.focusVisible}`]: {
          backgroundColor: (e.vars || e).palette.action.focus
        },
        [`& .${ht.avatar}`]: {
          marginLeft: 4
        },
        [`& .${ht.avatarSmall}`]: {
          marginLeft: 2
        },
        [`& .${ht.icon}`]: {
          marginLeft: 4
        },
        [`& .${ht.iconSmall}`]: {
          marginLeft: 2
        },
        [`& .${ht.deleteIcon}`]: {
          marginRight: 5
        },
        [`& .${ht.deleteIconSmall}`]: {
          marginRight: 3
        }
      }
    }, ...Object.entries(e.palette).filter(wt()).map(([n]) => ({
      props: {
        variant: "outlined",
        color: n
      },
      style: {
        color: (e.vars || e).palette[n].main,
        border: `1px solid ${e.vars ? `rgba(${e.vars.palette[n].mainChannel} / 0.7)` : ze(e.palette[n].main, 0.7)}`,
        [`&.${ht.clickable}:hover`]: {
          backgroundColor: e.vars ? `rgba(${e.vars.palette[n].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : ze(e.palette[n].main, e.palette.action.hoverOpacity)
        },
        [`&.${ht.focusVisible}`]: {
          backgroundColor: e.vars ? `rgba(${e.vars.palette[n].mainChannel} / ${e.vars.palette.action.focusOpacity})` : ze(e.palette[n].main, e.palette.action.focusOpacity)
        },
        [`& .${ht.deleteIcon}`]: {
          color: e.vars ? `rgba(${e.vars.palette[n].mainChannel} / 0.7)` : ze(e.palette[n].main, 0.7),
          "&:hover, &:active": {
            color: (e.vars || e).palette[n].main
          }
        }
      }
    }))]
  };
})), DA = Q("span", {
  name: "MuiChip",
  slot: "Label",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e, {
      size: o
    } = n;
    return [t.label, t[`label${ue(o)}`]];
  }
})({
  overflow: "hidden",
  textOverflow: "ellipsis",
  paddingLeft: 12,
  paddingRight: 12,
  whiteSpace: "nowrap",
  variants: [{
    props: {
      variant: "outlined"
    },
    style: {
      paddingLeft: 11,
      paddingRight: 11
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      paddingLeft: 8,
      paddingRight: 8
    }
  }, {
    props: {
      size: "small",
      variant: "outlined"
    },
    style: {
      paddingLeft: 7,
      paddingRight: 7
    }
  }]
});
function vh(e) {
  return e.key === "Backspace" || e.key === "Delete";
}
const Ji = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiChip"
  }), {
    avatar: i,
    className: s,
    clickable: a,
    color: l = "default",
    component: c,
    deleteIcon: u,
    disabled: d = !1,
    icon: p,
    label: m,
    onClick: g,
    onDelete: h,
    onKeyDown: v,
    onKeyUp: b,
    size: y = "medium",
    variant: C = "filled",
    tabIndex: x,
    skipFocusWhenDisabled: T = !1,
    // TODO v6: Rename to `focusableWhenDisabled`.
    ...w
  } = o, R = S.useRef(null), E = Yt(R, n), O = (B) => {
    B.stopPropagation(), h && h(B);
  }, I = (B) => {
    B.currentTarget === B.target && vh(B) && B.preventDefault(), v && v(B);
  }, P = (B) => {
    B.currentTarget === B.target && h && vh(B) && h(B), b && b(B);
  }, A = a !== !1 && g ? !0 : a, D = A || h ? yo : c || "div", k = {
    ...o,
    component: D,
    disabled: d,
    size: y,
    color: l,
    iconColor: /* @__PURE__ */ S.isValidElement(p) && p.props.color || l,
    onDelete: !!h,
    clickable: A,
    variant: C
  }, M = PA(k), F = D === yo ? {
    component: c || "div",
    focusVisibleClassName: M.focusVisible,
    ...h && {
      disableRipple: !0
    }
  } : {};
  let N = null;
  h && (N = u && /* @__PURE__ */ S.isValidElement(u) ? /* @__PURE__ */ S.cloneElement(u, {
    className: fe(u.props.className, M.deleteIcon),
    onClick: O
  }) : /* @__PURE__ */ f.jsx(OA, {
    className: fe(M.deleteIcon),
    onClick: O
  }));
  let W = null;
  i && /* @__PURE__ */ S.isValidElement(i) && (W = /* @__PURE__ */ S.cloneElement(i, {
    className: fe(M.avatar, i.props.className)
  }));
  let H = null;
  return p && /* @__PURE__ */ S.isValidElement(p) && (H = /* @__PURE__ */ S.cloneElement(p, {
    className: fe(M.icon, p.props.className)
  })), process.env.NODE_ENV !== "production" && W && H && console.error("MUI: The Chip component can not handle the avatar and the icon prop at the same time. Pick one."), /* @__PURE__ */ f.jsxs(AA, {
    as: D,
    className: fe(M.root, s),
    disabled: A && d ? !0 : void 0,
    onClick: g,
    onKeyDown: I,
    onKeyUp: P,
    ref: E,
    tabIndex: T && d ? -1 : x,
    ownerState: k,
    ...F,
    ...w,
    children: [W || H, /* @__PURE__ */ f.jsx(DA, {
      className: fe(M.label),
      ownerState: k,
      children: m
    }), N]
  });
});
process.env.NODE_ENV !== "production" && (Ji.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The Avatar element to display.
   */
  avatar: r.element,
  /**
   * This prop isn't supported.
   * Use the `component` prop if you need to change the children structure.
   */
  children: Oy,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * If `true`, the chip will appear clickable, and will raise when pressed,
   * even if the onClick prop is not defined.
   * If `false`, the chip will not appear clickable, even if onClick prop is defined.
   * This can be used, for example,
   * along with the component prop to indicate an anchor Chip is clickable.
   * Note: this controls the UI and does not affect the onClick event.
   */
  clickable: r.bool,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: r.oneOfType([r.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), r.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * Override the default delete icon element. Shown only if `onDelete` is set.
   */
  deleteIcon: r.element,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: r.bool,
  /**
   * Icon element.
   */
  icon: r.element,
  /**
   * The content of the component.
   */
  label: r.node,
  /**
   * @ignore
   */
  onClick: r.func,
  /**
   * Callback fired when the delete icon is clicked.
   * If set, the delete icon will be shown.
   */
  onDelete: r.func,
  /**
   * @ignore
   */
  onKeyDown: r.func,
  /**
   * @ignore
   */
  onKeyUp: r.func,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: r.oneOfType([r.oneOf(["medium", "small"]), r.string]),
  /**
   * If `true`, allows the disabled chip to escape focus.
   * If `false`, allows the disabled chip to receive focus.
   * @default false
   */
  skipFocusWhenDisabled: r.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * @ignore
   */
  tabIndex: r.number,
  /**
   * The variant to use.
   * @default 'filled'
   */
  variant: r.oneOfType([r.oneOf(["filled", "outlined"]), r.string])
});
function al(e) {
  return parseInt(e, 10) || 0;
}
const MA = {
  shadow: {
    // Visibility needed to hide the extra text area on iPads
    visibility: "hidden",
    // Remove from the content flow
    position: "absolute",
    // Ignore the scrollbar width
    overflow: "hidden",
    height: 0,
    top: 0,
    left: 0,
    // Create a new layer, increase the isolation of the computed values
    transform: "translateZ(0)"
  }
};
function jA(e) {
  return e == null || Object.keys(e).length === 0 || e.outerHeightStyle === 0 && !e.overflowing;
}
const c0 = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const {
    onChange: o,
    maxRows: i,
    minRows: s = 1,
    style: a,
    value: l,
    ...c
  } = t, {
    current: u
  } = S.useRef(l != null), d = S.useRef(null), p = Yt(n, d), m = S.useRef(null), g = S.useRef(null), h = S.useCallback(() => {
    const y = d.current, x = dr(y).getComputedStyle(y);
    if (x.width === "0px")
      return {
        outerHeightStyle: 0,
        overflowing: !1
      };
    const T = g.current;
    T.style.width = x.width, T.value = y.value || t.placeholder || "x", T.value.slice(-1) === `
` && (T.value += " ");
    const w = x.boxSizing, R = al(x.paddingBottom) + al(x.paddingTop), E = al(x.borderBottomWidth) + al(x.borderTopWidth), O = T.scrollHeight;
    T.value = "x";
    const I = T.scrollHeight;
    let P = O;
    s && (P = Math.max(Number(s) * I, P)), i && (P = Math.min(Number(i) * I, P)), P = Math.max(P, I);
    const A = P + (w === "border-box" ? R + E : 0), D = Math.abs(P - O) <= 1;
    return {
      outerHeightStyle: A,
      overflowing: D
    };
  }, [i, s, t.placeholder]), v = S.useCallback(() => {
    const y = h();
    if (jA(y))
      return;
    const C = y.outerHeightStyle, x = d.current;
    m.current !== C && (m.current = C, x.style.height = `${C}px`), x.style.overflow = y.overflowing ? "hidden" : "";
  }, [h]);
  to(() => {
    const y = () => {
      v();
    };
    let C;
    const x = () => {
      cancelAnimationFrame(C), C = requestAnimationFrame(() => {
        y();
      });
    }, T = is(y), w = d.current, R = dr(w);
    R.addEventListener("resize", T);
    let E;
    return typeof ResizeObserver < "u" && (E = new ResizeObserver(process.env.NODE_ENV === "test" ? x : y), E.observe(w)), () => {
      T.clear(), cancelAnimationFrame(C), R.removeEventListener("resize", T), E && E.disconnect();
    };
  }, [h, v]), to(() => {
    v();
  });
  const b = (y) => {
    u || v(), o && o(y);
  };
  return /* @__PURE__ */ f.jsxs(S.Fragment, {
    children: [/* @__PURE__ */ f.jsx("textarea", {
      value: l,
      onChange: b,
      ref: p,
      rows: s,
      style: a,
      ...c
    }), /* @__PURE__ */ f.jsx("textarea", {
      "aria-hidden": !0,
      className: t.className,
      readOnly: !0,
      ref: g,
      tabIndex: -1,
      style: {
        ...MA.shadow,
        ...a,
        paddingTop: 0,
        paddingBottom: 0
      }
    })]
  });
});
process.env.NODE_ENV !== "production" && (c0.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  className: r.string,
  /**
   * Maximum number of rows to display.
   */
  maxRows: r.oneOfType([r.number, r.string]),
  /**
   * Minimum number of rows to display.
   * @default 1
   */
  minRows: r.oneOfType([r.number, r.string]),
  /**
   * @ignore
   */
  onChange: r.func,
  /**
   * @ignore
   */
  placeholder: r.string,
  /**
   * @ignore
   */
  style: r.object,
  /**
   * @ignore
   */
  value: r.oneOfType([r.arrayOf(r.string), r.number, r.string])
});
function sr(e) {
  return typeof e == "string";
}
function fi({
  props: e,
  states: t,
  muiFormControl: n
}) {
  return t.reduce((o, i) => (o[i] = e[i], n && typeof e[i] > "u" && (o[i] = n[i]), o), {});
}
const _a = /* @__PURE__ */ S.createContext(void 0);
process.env.NODE_ENV !== "production" && (_a.displayName = "FormControlContext");
function Gn() {
  return S.useContext(_a);
}
function yh(e) {
  return e != null && !(Array.isArray(e) && e.length === 0);
}
function ac(e, t = !1) {
  return e && (yh(e.value) && e.value !== "" || t && yh(e.defaultValue) && e.defaultValue !== "");
}
function kA(e) {
  return e.startAdornment;
}
function FA(e) {
  return We("MuiInputBase", e);
}
const Xn = _e("MuiInputBase", ["root", "formControl", "focused", "disabled", "adornedStart", "adornedEnd", "error", "sizeSmall", "multiline", "colorSecondary", "fullWidth", "hiddenLabel", "readOnly", "input", "inputSizeSmall", "inputMultiline", "inputTypeSearch", "inputAdornedStart", "inputAdornedEnd", "inputHiddenLabel"]);
var xh;
const Qc = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, n.formControl && t.formControl, n.startAdornment && t.adornedStart, n.endAdornment && t.adornedEnd, n.error && t.error, n.size === "small" && t.sizeSmall, n.multiline && t.multiline, n.color && t[`color${ue(n.color)}`], n.fullWidth && t.fullWidth, n.hiddenLabel && t.hiddenLabel];
}, eu = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.input, n.size === "small" && t.inputSizeSmall, n.multiline && t.inputMultiline, n.type === "search" && t.inputTypeSearch, n.startAdornment && t.inputAdornedStart, n.endAdornment && t.inputAdornedEnd, n.hiddenLabel && t.inputHiddenLabel];
}, NA = (e) => {
  const {
    classes: t,
    color: n,
    disabled: o,
    error: i,
    endAdornment: s,
    focused: a,
    formControl: l,
    fullWidth: c,
    hiddenLabel: u,
    multiline: d,
    readOnly: p,
    size: m,
    startAdornment: g,
    type: h
  } = e, v = {
    root: ["root", `color${ue(n)}`, o && "disabled", i && "error", c && "fullWidth", a && "focused", l && "formControl", m && m !== "medium" && `size${ue(m)}`, d && "multiline", g && "adornedStart", s && "adornedEnd", u && "hiddenLabel", p && "readOnly"],
    input: ["input", o && "disabled", h === "search" && "inputTypeSearch", d && "inputMultiline", m === "small" && "inputSizeSmall", u && "inputHiddenLabel", g && "inputAdornedStart", s && "inputAdornedEnd", p && "readOnly"]
  };
  return Ue(v, FA, t);
}, tu = Q("div", {
  name: "MuiInputBase",
  slot: "Root",
  overridesResolver: Qc
})($e(({
  theme: e
}) => ({
  ...e.typography.body1,
  color: (e.vars || e).palette.text.primary,
  lineHeight: "1.4375em",
  // 23px
  boxSizing: "border-box",
  // Prevent padding issue with fullWidth.
  position: "relative",
  cursor: "text",
  display: "inline-flex",
  alignItems: "center",
  [`&.${Xn.disabled}`]: {
    color: (e.vars || e).palette.text.disabled,
    cursor: "default"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: "4px 0 5px"
    }
  }, {
    props: ({
      ownerState: t,
      size: n
    }) => t.multiline && n === "small",
    style: {
      paddingTop: 1
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      width: "100%"
    }
  }]
}))), nu = Q("input", {
  name: "MuiInputBase",
  slot: "Input",
  overridesResolver: eu
})($e(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = {
    color: "currentColor",
    ...e.vars ? {
      opacity: e.vars.opacity.inputPlaceholder
    } : {
      opacity: t ? 0.42 : 0.5
    },
    transition: e.transitions.create("opacity", {
      duration: e.transitions.duration.shorter
    })
  }, o = {
    opacity: "0 !important"
  }, i = e.vars ? {
    opacity: e.vars.opacity.inputPlaceholder
  } : {
    opacity: t ? 0.42 : 0.5
  };
  return {
    font: "inherit",
    letterSpacing: "inherit",
    color: "currentColor",
    padding: "4px 0 5px",
    border: 0,
    boxSizing: "content-box",
    background: "none",
    height: "1.4375em",
    // Reset 23pxthe native input line-height
    margin: 0,
    // Reset for Safari
    WebkitTapHighlightColor: "transparent",
    display: "block",
    // Make the flex item shrink with Firefox
    minWidth: 0,
    width: "100%",
    "&::-webkit-input-placeholder": n,
    "&::-moz-placeholder": n,
    // Firefox 19+
    "&::-ms-input-placeholder": n,
    // Edge
    "&:focus": {
      outline: 0
    },
    // Reset Firefox invalid required input style
    "&:invalid": {
      boxShadow: "none"
    },
    "&::-webkit-search-decoration": {
      // Remove the padding when type=search.
      WebkitAppearance: "none"
    },
    // Show and hide the placeholder logic
    [`label[data-shrink=false] + .${Xn.formControl} &`]: {
      "&::-webkit-input-placeholder": o,
      "&::-moz-placeholder": o,
      // Firefox 19+
      "&::-ms-input-placeholder": o,
      // Edge
      "&:focus::-webkit-input-placeholder": i,
      "&:focus::-moz-placeholder": i,
      // Firefox 19+
      "&:focus::-ms-input-placeholder": i
      // Edge
    },
    [`&.${Xn.disabled}`]: {
      opacity: 1,
      // Reset iOS opacity
      WebkitTextFillColor: (e.vars || e).palette.text.disabled
      // Fix opacity Safari bug
    },
    variants: [{
      props: ({
        ownerState: s
      }) => !s.disableInjectingGlobalStyles,
      style: {
        animationName: "mui-auto-fill-cancel",
        animationDuration: "10ms",
        "&:-webkit-autofill": {
          animationDuration: "5000s",
          animationName: "mui-auto-fill"
        }
      }
    }, {
      props: {
        size: "small"
      },
      style: {
        paddingTop: 1
      }
    }, {
      props: ({
        ownerState: s
      }) => s.multiline,
      style: {
        height: "auto",
        resize: "none",
        padding: 0,
        paddingTop: 0
      }
    }, {
      props: {
        type: "search"
      },
      style: {
        MozAppearance: "textfield"
        // Improve type search style.
      }
    }]
  };
})), Ch = ZO({
  "@keyframes mui-auto-fill": {
    from: {
      display: "block"
    }
  },
  "@keyframes mui-auto-fill-cancel": {
    from: {
      display: "block"
    }
  }
}), ou = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiInputBase"
  }), {
    "aria-describedby": i,
    autoComplete: s,
    autoFocus: a,
    className: l,
    color: c,
    components: u = {},
    componentsProps: d = {},
    defaultValue: p,
    disabled: m,
    disableInjectingGlobalStyles: g,
    endAdornment: h,
    error: v,
    fullWidth: b = !1,
    id: y,
    inputComponent: C = "input",
    inputProps: x = {},
    inputRef: T,
    margin: w,
    maxRows: R,
    minRows: E,
    multiline: O = !1,
    name: I,
    onBlur: P,
    onChange: A,
    onClick: D,
    onFocus: k,
    onKeyDown: M,
    onKeyUp: F,
    placeholder: N,
    readOnly: W,
    renderSuffix: H,
    rows: B,
    size: j,
    slotProps: L = {},
    slots: ee = {},
    startAdornment: Y,
    type: $ = "text",
    value: U,
    ...X
  } = o, Z = x.value != null ? x.value : U, {
    current: G
  } = S.useRef(Z != null), K = S.useRef(), re = S.useCallback((Ae) => {
    process.env.NODE_ENV !== "production" && Ae && Ae.nodeName !== "INPUT" && !Ae.focus && console.error(["MUI: You have provided a `inputComponent` to the input component", "that does not correctly handle the `ref` prop.", "Make sure the `ref` prop is called with a HTMLInputElement."].join(`
`));
  }, []), ne = Yt(K, T, x.ref, re), [z, q] = S.useState(!1), _ = Gn();
  process.env.NODE_ENV !== "production" && S.useEffect(() => {
    if (_)
      return _.registerEffect();
  }, [_]);
  const oe = fi({
    props: o,
    muiFormControl: _,
    states: ["color", "disabled", "error", "hiddenLabel", "size", "required", "filled"]
  });
  oe.focused = _ ? _.focused : z, S.useEffect(() => {
    !_ && m && z && (q(!1), P && P());
  }, [_, m, z, P]);
  const te = _ && _.onFilled, se = _ && _.onEmpty, ae = S.useCallback((Ae) => {
    ac(Ae) ? te && te() : se && se();
  }, [te, se]);
  to(() => {
    G && ae({
      value: Z
    });
  }, [Z, ae, G]);
  const me = (Ae) => {
    k && k(Ae), x.onFocus && x.onFocus(Ae), _ && _.onFocus ? _.onFocus(Ae) : q(!0);
  }, ye = (Ae) => {
    P && P(Ae), x.onBlur && x.onBlur(Ae), _ && _.onBlur ? _.onBlur(Ae) : q(!1);
  }, Te = (Ae, ...nt) => {
    if (!G) {
      const Ze = Ae.target || K.current;
      if (Ze == null)
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: Expected valid input target. Did you use a custom `inputComponent` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info." : Yo(1));
      ae({
        value: Ze.value
      });
    }
    x.onChange && x.onChange(Ae, ...nt), A && A(Ae, ...nt);
  };
  S.useEffect(() => {
    ae(K.current);
  }, []);
  const Ve = (Ae) => {
    K.current && Ae.currentTarget === Ae.target && K.current.focus(), D && D(Ae);
  };
  let ie = C, be = x;
  O && ie === "input" && (B ? (process.env.NODE_ENV !== "production" && (E || R) && console.warn("MUI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set."), be = {
    type: void 0,
    minRows: B,
    maxRows: B,
    ...be
  }) : be = {
    type: void 0,
    maxRows: R,
    minRows: E,
    ...be
  }, ie = c0);
  const xe = (Ae) => {
    ae(Ae.animationName === "mui-auto-fill-cancel" ? K.current : {
      value: "x"
    });
  };
  S.useEffect(() => {
    _ && _.setAdornedStart(!!Y);
  }, [_, Y]);
  const Ie = {
    ...o,
    color: oe.color || "primary",
    disabled: oe.disabled,
    endAdornment: h,
    error: oe.error,
    focused: oe.focused,
    formControl: _,
    fullWidth: b,
    hiddenLabel: oe.hiddenLabel,
    multiline: O,
    size: oe.size,
    startAdornment: Y,
    type: $
  }, Pe = NA(Ie), Ce = ee.root || u.Root || tu, Oe = L.root || d.root || {}, Be = ee.input || u.Input || nu;
  return be = {
    ...be,
    ...L.input ?? d.input
  }, /* @__PURE__ */ f.jsxs(S.Fragment, {
    children: [!g && typeof Ch == "function" && // For Emotion/Styled-components, InputGlobalStyles will be a function
    // For Pigment CSS, this has no effect because the InputGlobalStyles will be null.
    (xh || (xh = /* @__PURE__ */ f.jsx(Ch, {}))), /* @__PURE__ */ f.jsxs(Ce, {
      ...Oe,
      ref: n,
      onClick: Ve,
      ...X,
      ...!sr(Ce) && {
        ownerState: {
          ...Ie,
          ...Oe.ownerState
        }
      },
      className: fe(Pe.root, Oe.className, l, W && "MuiInputBase-readOnly"),
      children: [Y, /* @__PURE__ */ f.jsx(_a.Provider, {
        value: null,
        children: /* @__PURE__ */ f.jsx(Be, {
          "aria-invalid": oe.error,
          "aria-describedby": i,
          autoComplete: s,
          autoFocus: a,
          defaultValue: p,
          disabled: oe.disabled,
          id: y,
          onAnimationStart: xe,
          name: I,
          placeholder: N,
          readOnly: W,
          required: oe.required,
          rows: B,
          value: Z,
          onKeyDown: M,
          onKeyUp: F,
          type: $,
          ...be,
          ...!sr(Be) && {
            as: ie,
            ownerState: {
              ...Ie,
              ...be.ownerState
            }
          },
          ref: ne,
          className: fe(Pe.input, be.className, W && "MuiInputBase-readOnly"),
          onBlur: ye,
          onChange: Te,
          onFocus: me
        })
      }), h, H ? H({
        ...oe,
        startAdornment: Y
      }) : null]
    })]
  });
});
process.env.NODE_ENV !== "production" && (ou.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  "aria-describedby": r.string,
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: r.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: r.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: r.oneOfType([r.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), r.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: r.shape({
    Input: r.elementType,
    Root: r.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: r.shape({
    input: r.object,
    root: r.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: r.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: r.bool,
  /**
   * If `true`, GlobalStyles for the auto-fill keyframes will not be injected/removed on mount/unmount. Make sure to inject them at the top of your application.
   * This option is intended to help with boosting the initial rendering performance if you are loading a big amount of Input components at once.
   * @default false
   */
  disableInjectingGlobalStyles: r.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: r.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: r.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: r.bool,
  /**
   * The id of the `input` element.
   */
  id: r.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: Fa,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: r.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: In,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: r.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: r.oneOfType([r.number, r.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: r.oneOfType([r.number, r.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: r.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: r.string,
  /**
   * Callback fired when the `input` is blurred.
   *
   * Notice that the first argument (event) might be undefined.
   */
  onBlur: r.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: r.func,
  /**
   * @ignore
   */
  onClick: r.func,
  /**
   * @ignore
   */
  onFocus: r.func,
  /**
   * Callback fired when the `input` doesn't satisfy its constraints.
   */
  onInvalid: r.func,
  /**
   * @ignore
   */
  onKeyDown: r.func,
  /**
   * @ignore
   */
  onKeyUp: r.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: r.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: r.bool,
  /**
   * @ignore
   */
  renderSuffix: r.func,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: r.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: r.oneOfType([r.number, r.string]),
  /**
   * The size of the component.
   */
  size: r.oneOfType([r.oneOf(["medium", "small"]), r.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: r.shape({
    input: r.object,
    root: r.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: r.shape({
    input: r.elementType,
    root: r.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: r.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: r.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: r.any
});
function VA(e) {
  return We("MuiInput", e);
}
const Tr = {
  ...Xn,
  ..._e("MuiInput", ["root", "underline", "input"])
};
function $A(e) {
  return We("MuiOutlinedInput", e);
}
const uo = {
  ...Xn,
  ..._e("MuiOutlinedInput", ["root", "notchedOutline", "input"])
};
function LA(e) {
  return We("MuiFilledInput", e);
}
const Yn = {
  ...Xn,
  ..._e("MuiFilledInput", ["root", "underline", "input", "adornedStart", "adornedEnd", "sizeSmall", "multiline", "hiddenLabel"])
}, u0 = He(/* @__PURE__ */ f.jsx("path", {
  d: "M7 10l5 5 5-5z"
}), "ArrowDropDown");
function _A(e) {
  return We("MuiAutocomplete", e);
}
const ft = _e("MuiAutocomplete", ["root", "expanded", "fullWidth", "focused", "focusVisible", "tag", "tagSizeSmall", "tagSizeMedium", "hasPopupIcon", "hasClearIcon", "inputRoot", "input", "inputFocused", "endAdornment", "clearIndicator", "popupIndicator", "popupIndicatorOpen", "popper", "popperDisablePortal", "paper", "listbox", "loading", "noOptions", "option", "groupLabel", "groupUl"]);
var Sh, wh;
const BA = (e) => {
  const {
    classes: t,
    disablePortal: n,
    expanded: o,
    focused: i,
    fullWidth: s,
    hasClearIcon: a,
    hasPopupIcon: l,
    inputFocused: c,
    popupOpen: u,
    size: d
  } = e, p = {
    root: ["root", o && "expanded", i && "focused", s && "fullWidth", a && "hasClearIcon", l && "hasPopupIcon"],
    inputRoot: ["inputRoot"],
    input: ["input", c && "inputFocused"],
    tag: ["tag", `tagSize${ue(d)}`],
    endAdornment: ["endAdornment"],
    clearIndicator: ["clearIndicator"],
    popupIndicator: ["popupIndicator", u && "popupIndicatorOpen"],
    popper: ["popper", n && "popperDisablePortal"],
    paper: ["paper"],
    listbox: ["listbox"],
    loading: ["loading"],
    noOptions: ["noOptions"],
    option: ["option"],
    groupLabel: ["groupLabel"],
    groupUl: ["groupUl"]
  };
  return Ue(p, _A, t);
}, zA = Q("div", {
  name: "MuiAutocomplete",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e, {
      fullWidth: o,
      hasClearIcon: i,
      hasPopupIcon: s,
      inputFocused: a,
      size: l
    } = n;
    return [{
      [`& .${ft.tag}`]: t.tag
    }, {
      [`& .${ft.tag}`]: t[`tagSize${ue(l)}`]
    }, {
      [`& .${ft.inputRoot}`]: t.inputRoot
    }, {
      [`& .${ft.input}`]: t.input
    }, {
      [`& .${ft.input}`]: a && t.inputFocused
    }, t.root, o && t.fullWidth, s && t.hasPopupIcon, i && t.hasClearIcon];
  }
})({
  [`&.${ft.focused} .${ft.clearIndicator}`]: {
    visibility: "visible"
  },
  /* Avoid double tap issue on iOS */
  "@media (pointer: fine)": {
    [`&:hover .${ft.clearIndicator}`]: {
      visibility: "visible"
    }
  },
  [`& .${ft.tag}`]: {
    margin: 3,
    maxWidth: "calc(100% - 6px)"
  },
  [`& .${ft.inputRoot}`]: {
    [`.${ft.hasPopupIcon}&, .${ft.hasClearIcon}&`]: {
      paddingRight: 30
    },
    [`.${ft.hasPopupIcon}.${ft.hasClearIcon}&`]: {
      paddingRight: 56
    },
    [`& .${ft.input}`]: {
      width: 0,
      minWidth: 30
    }
  },
  [`& .${Tr.root}`]: {
    paddingBottom: 1,
    "& .MuiInput-input": {
      padding: "4px 4px 4px 0px"
    }
  },
  [`& .${Tr.root}.${Xn.sizeSmall}`]: {
    [`& .${Tr.input}`]: {
      padding: "2px 4px 3px 0"
    }
  },
  [`& .${uo.root}`]: {
    padding: 9,
    [`.${ft.hasPopupIcon}&, .${ft.hasClearIcon}&`]: {
      paddingRight: 39
    },
    [`.${ft.hasPopupIcon}.${ft.hasClearIcon}&`]: {
      paddingRight: 65
    },
    [`& .${ft.input}`]: {
      padding: "7.5px 4px 7.5px 5px"
    },
    [`& .${ft.endAdornment}`]: {
      right: 9
    }
  },
  [`& .${uo.root}.${Xn.sizeSmall}`]: {
    // Don't specify paddingRight, as it overrides the default value set when there is only
    // one of the popup or clear icon as the specificity is equal so the latter one wins
    paddingTop: 6,
    paddingBottom: 6,
    paddingLeft: 6,
    [`& .${ft.input}`]: {
      padding: "2.5px 4px 2.5px 8px"
    }
  },
  [`& .${Yn.root}`]: {
    paddingTop: 19,
    paddingLeft: 8,
    [`.${ft.hasPopupIcon}&, .${ft.hasClearIcon}&`]: {
      paddingRight: 39
    },
    [`.${ft.hasPopupIcon}.${ft.hasClearIcon}&`]: {
      paddingRight: 65
    },
    [`& .${Yn.input}`]: {
      padding: "7px 4px"
    },
    [`& .${ft.endAdornment}`]: {
      right: 9
    }
  },
  [`& .${Yn.root}.${Xn.sizeSmall}`]: {
    paddingBottom: 1,
    [`& .${Yn.input}`]: {
      padding: "2.5px 4px"
    }
  },
  [`& .${Xn.hiddenLabel}`]: {
    paddingTop: 8
  },
  [`& .${Yn.root}.${Xn.hiddenLabel}`]: {
    paddingTop: 0,
    paddingBottom: 0,
    [`& .${ft.input}`]: {
      paddingTop: 16,
      paddingBottom: 17
    }
  },
  [`& .${Yn.root}.${Xn.hiddenLabel}.${Xn.sizeSmall}`]: {
    [`& .${ft.input}`]: {
      paddingTop: 8,
      paddingBottom: 9
    }
  },
  [`& .${ft.input}`]: {
    flexGrow: 1,
    textOverflow: "ellipsis",
    opacity: 0
  },
  variants: [{
    props: {
      fullWidth: !0
    },
    style: {
      width: "100%"
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      [`& .${ft.tag}`]: {
        margin: 2,
        maxWidth: "calc(100% - 4px)"
      }
    }
  }, {
    props: {
      inputFocused: !0
    },
    style: {
      [`& .${ft.input}`]: {
        opacity: 1
      }
    }
  }, {
    props: {
      multiple: !0
    },
    style: {
      [`& .${ft.inputRoot}`]: {
        flexWrap: "wrap"
      }
    }
  }]
}), WA = Q("div", {
  name: "MuiAutocomplete",
  slot: "EndAdornment",
  overridesResolver: (e, t) => t.endAdornment
})({
  // We use a position absolute to support wrapping tags.
  position: "absolute",
  right: 0,
  top: "50%",
  transform: "translate(0, -50%)"
}), HA = Q(lt, {
  name: "MuiAutocomplete",
  slot: "ClearIndicator",
  overridesResolver: (e, t) => t.clearIndicator
})({
  marginRight: -2,
  padding: 4,
  visibility: "hidden"
}), GA = Q(lt, {
  name: "MuiAutocomplete",
  slot: "PopupIndicator",
  overridesResolver: ({
    ownerState: e
  }, t) => ({
    ...t.popupIndicator,
    ...e.popupOpen && t.popupIndicatorOpen
  })
})({
  padding: 2,
  marginRight: -2,
  variants: [{
    props: {
      popupOpen: !0
    },
    style: {
      transform: "rotate(180deg)"
    }
  }]
}), UA = Q(as, {
  name: "MuiAutocomplete",
  slot: "Popper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [{
      [`& .${ft.option}`]: t.option
    }, t.popper, n.disablePortal && t.popperDisablePortal];
  }
})($e(({
  theme: e
}) => ({
  zIndex: (e.vars || e).zIndex.modal,
  variants: [{
    props: {
      disablePortal: !0
    },
    style: {
      position: "absolute"
    }
  }]
}))), XA = Q(yn, {
  name: "MuiAutocomplete",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})($e(({
  theme: e
}) => ({
  ...e.typography.body1,
  overflow: "auto"
}))), YA = Q("div", {
  name: "MuiAutocomplete",
  slot: "Loading",
  overridesResolver: (e, t) => t.loading
})($e(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  padding: "14px 16px"
}))), ZA = Q("div", {
  name: "MuiAutocomplete",
  slot: "NoOptions",
  overridesResolver: (e, t) => t.noOptions
})($e(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  padding: "14px 16px"
}))), qA = Q("div", {
  name: "MuiAutocomplete",
  slot: "Listbox",
  overridesResolver: (e, t) => t.listbox
})($e(({
  theme: e
}) => ({
  listStyle: "none",
  margin: 0,
  padding: "8px 0",
  maxHeight: "40vh",
  overflow: "auto",
  position: "relative",
  [`& .${ft.option}`]: {
    minHeight: 48,
    display: "flex",
    overflow: "hidden",
    justifyContent: "flex-start",
    alignItems: "center",
    cursor: "pointer",
    paddingTop: 6,
    boxSizing: "border-box",
    outline: "0",
    WebkitTapHighlightColor: "transparent",
    paddingBottom: 6,
    paddingLeft: 16,
    paddingRight: 16,
    [e.breakpoints.up("sm")]: {
      minHeight: "auto"
    },
    [`&.${ft.focused}`]: {
      backgroundColor: (e.vars || e).palette.action.hover,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: "transparent"
      }
    },
    '&[aria-disabled="true"]': {
      opacity: (e.vars || e).palette.action.disabledOpacity,
      pointerEvents: "none"
    },
    [`&.${ft.focusVisible}`]: {
      backgroundColor: (e.vars || e).palette.action.focus
    },
    '&[aria-selected="true"]': {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : ze(e.palette.primary.main, e.palette.action.selectedOpacity),
      [`&.${ft.focused}`]: {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : ze(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity),
        // Reset on touch devices, it doesn't add specificity
        "@media (hover: none)": {
          backgroundColor: (e.vars || e).palette.action.selected
        }
      },
      [`&.${ft.focusVisible}`]: {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : ze(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
      }
    }
  }
}))), JA = Q(sc, {
  name: "MuiAutocomplete",
  slot: "GroupLabel",
  overridesResolver: (e, t) => t.groupLabel
})($e(({
  theme: e
}) => ({
  backgroundColor: (e.vars || e).palette.background.paper,
  top: -8
}))), KA = Q("ul", {
  name: "MuiAutocomplete",
  slot: "GroupUl",
  overridesResolver: (e, t) => t.groupUl
})({
  padding: 0,
  [`& .${ft.option}`]: {
    paddingLeft: 24
  }
}), d0 = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiAutocomplete"
  }), {
    autoComplete: i = !1,
    autoHighlight: s = !1,
    autoSelect: a = !1,
    blurOnSelect: l = !1,
    ChipProps: c,
    className: u,
    clearIcon: d = Sh || (Sh = /* @__PURE__ */ f.jsx(Zy, {
      fontSize: "small"
    })),
    clearOnBlur: p = !o.freeSolo,
    clearOnEscape: m = !1,
    clearText: g = "Clear",
    closeText: h = "Close",
    componentsProps: v,
    defaultValue: b = o.multiple ? [] : null,
    disableClearable: y = !1,
    disableCloseOnSelect: C = !1,
    disabled: x = !1,
    disabledItemsFocusable: T = !1,
    disableListWrap: w = !1,
    disablePortal: R = !1,
    filterOptions: E,
    filterSelectedOptions: O = !1,
    forcePopupIcon: I = "auto",
    freeSolo: P = !1,
    fullWidth: A = !1,
    getLimitTagsText: D = (Ct) => `+${Ct}`,
    getOptionDisabled: k,
    getOptionKey: M,
    getOptionLabel: F,
    isOptionEqualToValue: N,
    groupBy: W,
    handleHomeEndKeys: H = !o.freeSolo,
    id: B,
    includeInputInList: j = !1,
    inputValue: L,
    limitTags: ee = -1,
    ListboxComponent: Y,
    ListboxProps: $,
    loading: U = !1,
    loadingText: X = "Loading…",
    multiple: Z = !1,
    noOptionsText: G = "No options",
    onChange: K,
    onClose: re,
    onHighlightChange: ne,
    onInputChange: z,
    onOpen: q,
    open: _,
    openOnFocus: oe = !1,
    openText: te = "Open",
    options: se,
    PaperComponent: ae,
    PopperComponent: me,
    popupIcon: ye = wh || (wh = /* @__PURE__ */ f.jsx(u0, {})),
    readOnly: Te = !1,
    renderGroup: Ve,
    renderInput: ie,
    renderOption: be,
    renderTags: xe,
    selectOnFocus: Ie = !o.freeSolo,
    size: Pe = "medium",
    slots: Ce = {},
    slotProps: Oe = {},
    value: Be,
    ...Ae
  } = o, {
    getRootProps: nt,
    getInputProps: Ze,
    getInputLabelProps: dt,
    getPopupIndicatorProps: de,
    getClearProps: we,
    getTagProps: pe,
    getListboxProps: Me,
    getOptionProps: je,
    value: st,
    dirty: pt,
    expanded: it,
    id: bt,
    popupOpen: Zt,
    focused: xn,
    focusedTag: qt,
    anchorEl: ot,
    setAnchorEl: ln,
    inputValue: Qo,
    groupedOptions: No
  } = cP({
    ...o,
    componentName: "Autocomplete"
  }), er = !y && !x && pt && !Te, Vo = (!P || I === !0) && I !== !1, {
    onMouseDown: qe
  } = Ze(), {
    ref: br,
    ...Bt
  } = Me(), fn = F || ((Ct) => Ct.label ?? Ct), J = {
    ...o,
    disablePortal: R,
    expanded: it,
    focused: xn,
    fullWidth: A,
    getOptionLabel: fn,
    hasClearIcon: er,
    hasPopupIcon: Vo,
    inputFocused: qt === -1,
    popupOpen: Zt,
    size: Pe
  }, he = BA(J), ke = {
    slots: {
      listbox: Y,
      paper: ae,
      popper: me,
      ...Ce
    },
    slotProps: {
      chip: c,
      listbox: $,
      ...v,
      ...Oe
    }
  }, [le, ce] = nn("listbox", {
    elementType: "ul",
    externalForwardedProps: ke,
    ownerState: J,
    className: he.listbox,
    additionalProps: Bt,
    ref: br
  }), [Ee, Le] = nn("paper", {
    elementType: yn,
    externalForwardedProps: ke,
    ownerState: J,
    className: he.paper
  }), [Ne, ct] = nn("popper", {
    elementType: as,
    externalForwardedProps: ke,
    ownerState: J,
    className: he.popper,
    additionalProps: {
      disablePortal: R,
      style: {
        width: ot ? ot.clientWidth : null
      },
      role: "presentation",
      anchorEl: ot,
      open: Zt
    }
  });
  let rt;
  if (Z && st.length > 0) {
    const Ct = ($o) => ({
      className: he.tag,
      disabled: x,
      ...pe($o)
    });
    xe ? rt = xe(st, Ct, J) : rt = st.map(($o, yr) => {
      const {
        key: vs,
        ...pw
      } = Ct({
        index: yr
      });
      return /* @__PURE__ */ f.jsx(Ji, {
        label: fn($o),
        size: Pe,
        ...pw,
        ...ke.slotProps.chip
      }, vs);
    });
  }
  if (ee > -1 && Array.isArray(rt)) {
    const Ct = rt.length - ee;
    !xn && Ct > 0 && (rt = rt.splice(0, ee), rt.push(/* @__PURE__ */ f.jsx("span", {
      className: he.tag,
      children: D(Ct)
    }, rt.length)));
  }
  const mn = Ve || ((Ct) => /* @__PURE__ */ f.jsxs("li", {
    children: [/* @__PURE__ */ f.jsx(JA, {
      className: he.groupLabel,
      ownerState: J,
      component: "div",
      children: Ct.group
    }), /* @__PURE__ */ f.jsx(KA, {
      className: he.groupUl,
      ownerState: J,
      children: Ct.children
    })]
  }, Ct.key)), tr = be || ((Ct, $o) => {
    const {
      key: yr,
      ...vs
    } = Ct;
    return /* @__PURE__ */ f.jsx("li", {
      ...vs,
      children: fn($o)
    }, yr);
  }), Cn = (Ct, $o) => {
    const yr = je({
      option: Ct,
      index: $o
    });
    return tr({
      ...yr,
      className: he.option
    }, Ct, {
      selected: yr["aria-selected"],
      index: $o,
      inputValue: Qo
    }, J);
  }, vr = ke.slotProps.clearIndicator, vi = ke.slotProps.popupIndicator, bs = (Ct) => /* @__PURE__ */ f.jsx(UA, {
    as: Ne,
    ...ct,
    children: /* @__PURE__ */ f.jsx(XA, {
      as: Ee,
      ...Le,
      children: Ct
    })
  });
  let Ka = null;
  return No.length > 0 ? Ka = bs(/* @__PURE__ */ f.jsx(qA, {
    as: le,
    ...ce,
    children: No.map((Ct, $o) => W ? mn({
      key: Ct.key,
      group: Ct.group,
      children: Ct.options.map((yr, vs) => Cn(yr, Ct.index + vs))
    }) : Cn(Ct, $o))
  })) : U && No.length === 0 ? Ka = bs(/* @__PURE__ */ f.jsx(YA, {
    className: he.loading,
    ownerState: J,
    children: X
  })) : No.length === 0 && !P && !U && (Ka = bs(/* @__PURE__ */ f.jsx(ZA, {
    className: he.noOptions,
    ownerState: J,
    role: "presentation",
    onMouseDown: (Ct) => {
      Ct.preventDefault();
    },
    children: G
  }))), /* @__PURE__ */ f.jsxs(S.Fragment, {
    children: [/* @__PURE__ */ f.jsx(zA, {
      ref: n,
      className: fe(he.root, u),
      ownerState: J,
      ...nt(Ae),
      children: ie({
        id: bt,
        disabled: x,
        fullWidth: !0,
        size: Pe === "small" ? "small" : void 0,
        InputLabelProps: dt(),
        InputProps: {
          ref: ln,
          className: he.inputRoot,
          startAdornment: rt,
          onClick: (Ct) => {
            Ct.target === Ct.currentTarget && qe(Ct);
          },
          ...(er || Vo) && {
            endAdornment: /* @__PURE__ */ f.jsxs(WA, {
              className: he.endAdornment,
              ownerState: J,
              children: [er ? /* @__PURE__ */ f.jsx(HA, {
                ...we(),
                "aria-label": g,
                title: g,
                ownerState: J,
                ...vr,
                className: fe(he.clearIndicator, vr == null ? void 0 : vr.className),
                children: d
              }) : null, Vo ? /* @__PURE__ */ f.jsx(GA, {
                ...de(),
                disabled: x,
                "aria-label": Zt ? h : te,
                title: Zt ? h : te,
                ownerState: J,
                ...vi,
                className: fe(he.popupIndicator, vi == null ? void 0 : vi.className),
                children: ye
              }) : null]
            })
          }
        },
        inputProps: {
          className: he.input,
          disabled: x,
          readOnly: Te,
          ...Ze()
        }
      })
    }), ot ? Ka : null]
  });
});
process.env.NODE_ENV !== "production" && (d0.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the portion of the selected suggestion that the user hasn't typed,
   * known as the completion string, appears inline after the input cursor in the textbox.
   * The inline completion string is visually highlighted and has a selected state.
   * @default false
   */
  autoComplete: r.bool,
  /**
   * If `true`, the first option is automatically highlighted.
   * @default false
   */
  autoHighlight: r.bool,
  /**
   * If `true`, the selected option becomes the value of the input
   * when the Autocomplete loses focus unless the user chooses
   * a different option or changes the character string in the input.
   *
   * When using the `freeSolo` mode, the typed value will be the input value
   * if the Autocomplete loses focus without highlighting an option.
   * @default false
   */
  autoSelect: r.bool,
  /**
   * Control if the input should be blurred when an option is selected:
   *
   * - `false` the input is not blurred.
   * - `true` the input is always blurred.
   * - `touch` the input is blurred after a touch event.
   * - `mouse` the input is blurred after a mouse event.
   * @default false
   */
  blurOnSelect: r.oneOfType([r.oneOf(["mouse", "touch"]), r.bool]),
  /**
   * Props applied to the [`Chip`](https://mui.com/material-ui/api/chip/) element.
   */
  ChipProps: r.object,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The icon to display in place of the default clear icon.
   * @default <ClearIcon fontSize="small" />
   */
  clearIcon: r.node,
  /**
   * If `true`, the input's text is cleared on blur if no value is selected.
   *
   * Set it to `true` if you want to help the user enter a new value.
   * Set it to `false` if you want to help the user resume their search.
   * @default !props.freeSolo
   */
  clearOnBlur: r.bool,
  /**
   * If `true`, clear all values when the user presses escape and the popup is closed.
   * @default false
   */
  clearOnEscape: r.bool,
  /**
   * Override the default text for the *clear* icon button.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Clear'
   */
  clearText: r.string,
  /**
   * Override the default text for the *close popup* icon button.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Close'
   */
  closeText: r.string,
  /**
   * The props used for each slot inside.
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  componentsProps: r.shape({
    clearIndicator: r.object,
    paper: r.object,
    popper: r.object,
    popupIndicator: r.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   * @default props.multiple ? [] : null
   */
  defaultValue: oo(r.any, (e) => e.multiple && e.defaultValue !== void 0 && !Array.isArray(e.defaultValue) ? new Error(["MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.", `However, ${e.defaultValue} was provided.`].join(`
`)) : null),
  /**
   * If `true`, the input can't be cleared.
   * @default false
   */
  disableClearable: r.bool,
  /**
   * If `true`, the popup won't close when a value is selected.
   * @default false
   */
  disableCloseOnSelect: r.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: r.bool,
  /**
   * If `true`, will allow focus on disabled items.
   * @default false
   */
  disabledItemsFocusable: r.bool,
  /**
   * If `true`, the list box in the popup will not wrap focus.
   * @default false
   */
  disableListWrap: r.bool,
  /**
   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: r.bool,
  /**
   * A function that determines the filtered options to be rendered on search.
   *
   * @default createFilterOptions()
   * @param {Value[]} options The options to render.
   * @param {object} state The state of the component.
   * @returns {Value[]}
   */
  filterOptions: r.func,
  /**
   * If `true`, hide the selected options from the list box.
   * @default false
   */
  filterSelectedOptions: r.bool,
  /**
   * Force the visibility display of the popup icon.
   * @default 'auto'
   */
  forcePopupIcon: r.oneOfType([r.oneOf(["auto"]), r.bool]),
  /**
   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.
   * @default false
   */
  freeSolo: r.bool,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: r.bool,
  /**
   * The label to display when the tags are truncated (`limitTags`).
   *
   * @param {number} more The number of truncated tags.
   * @returns {ReactNode}
   * @default (more) => `+${more}`
   */
  getLimitTagsText: r.func,
  /**
   * Used to determine the disabled state for a given option.
   *
   * @param {Value} option The option to test.
   * @returns {boolean}
   */
  getOptionDisabled: r.func,
  /**
   * Used to determine the key for a given option.
   * This can be useful when the labels of options are not unique (since labels are used as keys by default).
   *
   * @param {Value} option The option to get the key for.
   * @returns {string | number}
   */
  getOptionKey: r.func,
  /**
   * Used to determine the string value for a given option.
   * It's used to fill the input (and the list box options if `renderOption` is not provided).
   *
   * If used in free solo mode, it must accept both the type of the options and a string.
   *
   * @param {Value} option
   * @returns {string}
   * @default (option) => option.label ?? option
   */
  getOptionLabel: r.func,
  /**
   * If provided, the options will be grouped under the returned string.
   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.
   *
   * @param {Value} options The options to group.
   * @returns {string}
   */
  groupBy: r.func,
  /**
   * If `true`, the component handles the "Home" and "End" keys when the popup is open.
   * It should move focus to the first option and last option, respectively.
   * @default !props.freeSolo
   */
  handleHomeEndKeys: r.bool,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide an id it will fall back to a randomly generated one.
   */
  id: r.string,
  /**
   * If `true`, the highlight can move to the input.
   * @default false
   */
  includeInputInList: r.bool,
  /**
   * The input value.
   */
  inputValue: r.string,
  /**
   * Used to determine if the option represents the given value.
   * Uses strict equality by default.
   * ⚠️ Both arguments need to be handled, an option can only match with one value.
   *
   * @param {Value} option The option to test.
   * @param {Value} value The value to test against.
   * @returns {boolean}
   */
  isOptionEqualToValue: r.func,
  /**
   * The maximum number of tags that will be visible when not focused.
   * Set `-1` to disable the limit.
   * @default -1
   */
  limitTags: wr,
  /**
   * The component used to render the listbox.
   * @default 'ul'
   */
  ListboxComponent: r.elementType,
  /**
   * Props applied to the Listbox element.
   */
  ListboxProps: r.object,
  /**
   * If `true`, the component is in a loading state.
   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, for example `options` are empty).
   * @default false
   */
  loading: r.bool,
  /**
   * Text to display when in a loading state.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Loading…'
   */
  loadingText: r.node,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   * @default false
   */
  multiple: r.bool,
  /**
   * Text to display when there are no options.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'No options'
   */
  noOptionsText: r.node,
  /**
   * Callback fired when the value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {Value|Value[]} value The new value of the component.
   * @param {string} reason One of "createOption", "selectOption", "removeOption", "blur" or "clear".
   * @param {string} [details]
   */
  onChange: r.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see open).
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {string} reason Can be: `"toggleInput"`, `"escape"`, `"selectOption"`, `"removeOption"`, `"blur"`.
   */
  onClose: r.func,
  /**
   * Callback fired when the highlight option changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {Value} option The highlighted option.
   * @param {string} reason Can be: `"keyboard"`, `"auto"`, `"mouse"`, `"touch"`.
   */
  onHighlightChange: r.func,
  /**
   * Callback fired when the input value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * @param {string} value The new value of the text input.
   * @param {string} reason Can be: `"input"` (user input), `"reset"` (programmatic change), `"clear"`, `"blur"`, `"selectOption"`, `"removeOption"`
   */
  onInputChange: r.func,
  /**
   * @ignore
   */
  onKeyDown: r.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see open).
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onOpen: r.func,
  /**
   * If `true`, the component is shown.
   */
  open: r.bool,
  /**
   * If `true`, the popup will open on input focus.
   * @default false
   */
  openOnFocus: r.bool,
  /**
   * Override the default text for the *open popup* icon button.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @default 'Open'
   */
  openText: r.string,
  /**
   * A list of options that will be shown in the Autocomplete.
   */
  options: r.array.isRequired,
  /**
   * The component used to render the body of the popup.
   * @default Paper
   */
  PaperComponent: r.elementType,
  /**
   * The component used to position the popup.
   * @default Popper
   */
  PopperComponent: r.elementType,
  /**
   * The icon to display in place of the default popup icon.
   * @default <ArrowDropDownIcon />
   */
  popupIcon: r.node,
  /**
   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.
   * @default false
   */
  readOnly: r.bool,
  /**
   * Render the group.
   *
   * @param {AutocompleteRenderGroupParams} params The group to render.
   * @returns {ReactNode}
   */
  renderGroup: r.func,
  /**
   * Render the input.
   *
   * @param {object} params
   * @returns {ReactNode}
   */
  renderInput: r.func.isRequired,
  /**
   * Render the option, use `getOptionLabel` by default.
   *
   * @param {object} props The props to apply on the li element.
   * @param {Value} option The option to render.
   * @param {object} state The state of each option.
   * @param {object} ownerState The state of the Autocomplete component.
   * @returns {ReactNode}
   */
  renderOption: r.func,
  /**
   * Render the selected value.
   *
   * @param {Value[]} value The `value` provided to the component.
   * @param {function} getTagProps A tag props getter.
   * @param {object} ownerState The state of the Autocomplete component.
   * @returns {ReactNode}
   */
  renderTags: r.func,
  /**
   * If `true`, the input's text is selected on focus.
   * It helps the user clear the selected value.
   * @default !props.freeSolo
   */
  selectOnFocus: r.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: r.oneOfType([r.oneOf(["small", "medium"]), r.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: r.shape({
    chip: r.oneOfType([r.func, r.object]),
    clearIndicator: r.oneOfType([r.func, r.object]),
    listbox: r.oneOfType([r.func, r.object]),
    paper: r.oneOfType([r.func, r.object]),
    popper: r.oneOfType([r.func, r.object]),
    popupIndicator: r.oneOfType([r.func, r.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: r.shape({
    listbox: r.elementType,
    paper: r.elementType,
    popper: r.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * The value of the autocomplete.
   *
   * The value must have reference equality with the option in order to be selected.
   * You can customize the equality behavior with the `isOptionEqualToValue` prop.
   */
  value: oo(r.any, (e) => e.multiple && e.value !== void 0 && !Array.isArray(e.value) ? new Error(["MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.", `However, ${e.value} was provided.`].join(`
`)) : null)
});
const QA = He(/* @__PURE__ */ f.jsx("path", {
  d: "M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
}), "Person");
function eD(e) {
  return We("MuiAvatar", e);
}
_e("MuiAvatar", ["root", "colorDefault", "circular", "rounded", "square", "img", "fallback"]);
const tD = (e) => {
  const {
    classes: t,
    variant: n,
    colorDefault: o
  } = e;
  return Ue({
    root: ["root", n, o && "colorDefault"],
    img: ["img"],
    fallback: ["fallback"]
  }, eD, t);
}, nD = Q("div", {
  name: "MuiAvatar",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], n.colorDefault && t.colorDefault];
  }
})($e(({
  theme: e
}) => ({
  position: "relative",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  flexShrink: 0,
  width: 40,
  height: 40,
  fontFamily: e.typography.fontFamily,
  fontSize: e.typography.pxToRem(20),
  lineHeight: 1,
  borderRadius: "50%",
  overflow: "hidden",
  userSelect: "none",
  variants: [{
    props: {
      variant: "rounded"
    },
    style: {
      borderRadius: (e.vars || e).shape.borderRadius
    }
  }, {
    props: {
      variant: "square"
    },
    style: {
      borderRadius: 0
    }
  }, {
    props: {
      colorDefault: !0
    },
    style: {
      color: (e.vars || e).palette.background.default,
      ...e.vars ? {
        backgroundColor: e.vars.palette.Avatar.defaultBg
      } : {
        backgroundColor: e.palette.grey[400],
        ...e.applyStyles("dark", {
          backgroundColor: e.palette.grey[600]
        })
      }
    }
  }]
}))), oD = Q("img", {
  name: "MuiAvatar",
  slot: "Img",
  overridesResolver: (e, t) => t.img
})({
  width: "100%",
  height: "100%",
  textAlign: "center",
  // Handle non-square image.
  objectFit: "cover",
  // Hide alt text.
  color: "transparent",
  // Hide the image broken icon, only works on Chrome.
  textIndent: 1e4
}), rD = Q(QA, {
  name: "MuiAvatar",
  slot: "Fallback",
  overridesResolver: (e, t) => t.fallback
})({
  width: "75%",
  height: "75%"
});
function iD({
  crossOrigin: e,
  referrerPolicy: t,
  src: n,
  srcSet: o
}) {
  const [i, s] = S.useState(!1);
  return S.useEffect(() => {
    if (!n && !o)
      return;
    s(!1);
    let a = !0;
    const l = new Image();
    return l.onload = () => {
      a && s("loaded");
    }, l.onerror = () => {
      a && s("error");
    }, l.crossOrigin = e, l.referrerPolicy = t, l.src = n, o && (l.srcset = o), () => {
      a = !1;
    };
  }, [e, t, n, o]), i;
}
const Ef = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiAvatar"
  }), {
    alt: i,
    children: s,
    className: a,
    component: l = "div",
    slots: c = {},
    slotProps: u = {},
    imgProps: d,
    sizes: p,
    src: m,
    srcSet: g,
    variant: h = "circular",
    ...v
  } = o;
  let b = null;
  const y = iD({
    ...d,
    src: m,
    srcSet: g
  }), C = m || g, x = C && y !== "error", T = {
    ...o,
    colorDefault: !x,
    component: l,
    variant: h
  };
  delete T.ownerState;
  const w = tD(T), [R, E] = nn("img", {
    className: w.img,
    elementType: oD,
    externalForwardedProps: {
      slots: c,
      slotProps: {
        img: {
          ...d,
          ...u.img
        }
      }
    },
    additionalProps: {
      alt: i,
      src: m,
      srcSet: g,
      sizes: p
    },
    ownerState: T
  });
  return x ? b = /* @__PURE__ */ f.jsx(R, {
    ...E
  }) : s || s === 0 ? b = s : C && i ? b = i[0] : b = /* @__PURE__ */ f.jsx(rD, {
    ownerState: T,
    className: w.fallback
  }), /* @__PURE__ */ f.jsx(nD, {
    as: l,
    className: fe(w.root, a),
    ref: n,
    ...v,
    ownerState: T,
    children: b
  });
});
process.env.NODE_ENV !== "production" && (Ef.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Used in combination with `src` or `srcSet` to
   * provide an alt attribute for the rendered `img` element.
   */
  alt: r.string,
  /**
   * Used to render icon or text elements inside the Avatar if `src` is not set.
   * This can be an element, or just a string.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.
   * It can be used to listen for the loading error event.
   */
  imgProps: r.object,
  /**
   * The `sizes` attribute for the `img` element.
   */
  sizes: r.string,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: r.shape({
    img: r.oneOfType([r.func, r.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: r.shape({
    img: r.elementType
  }),
  /**
   * The `src` attribute for the `img` element.
   */
  src: r.string,
  /**
   * The `srcSet` attribute for the `img` element.
   * Use this attribute for responsive image display.
   */
  srcSet: r.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * The shape of the avatar.
   * @default 'circular'
   */
  variant: r.oneOfType([r.oneOf(["circular", "rounded", "square"]), r.string])
});
const sD = {
  entering: {
    opacity: 1
  },
  entered: {
    opacity: 1
  }
}, $r = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = vn(), i = {
    enter: o.transitions.duration.enteringScreen,
    exit: o.transitions.duration.leavingScreen
  }, {
    addEndListener: s,
    appear: a = !0,
    children: l,
    easing: c,
    in: u,
    onEnter: d,
    onEntered: p,
    onEntering: m,
    onExit: g,
    onExited: h,
    onExiting: v,
    style: b,
    timeout: y = i,
    // eslint-disable-next-line react/prop-types
    TransitionComponent: C = so,
    ...x
  } = t, T = S.useRef(null), w = Yt(T, ss(l), n), R = (M) => (F) => {
    if (M) {
      const N = T.current;
      F === void 0 ? M(N) : M(N, F);
    }
  }, E = R(m), O = R((M, F) => {
    Uy(M);
    const N = Ui({
      style: b,
      timeout: y,
      easing: c
    }, {
      mode: "enter"
    });
    M.style.webkitTransition = o.transitions.create("opacity", N), M.style.transition = o.transitions.create("opacity", N), d && d(M, F);
  }), I = R(p), P = R(v), A = R((M) => {
    const F = Ui({
      style: b,
      timeout: y,
      easing: c
    }, {
      mode: "exit"
    });
    M.style.webkitTransition = o.transitions.create("opacity", F), M.style.transition = o.transitions.create("opacity", F), g && g(M);
  }), D = R(h), k = (M) => {
    s && s(T.current, M);
  };
  return /* @__PURE__ */ f.jsx(C, {
    appear: a,
    in: u,
    nodeRef: T,
    onEnter: O,
    onEntered: I,
    onEntering: E,
    onExit: A,
    onExited: D,
    onExiting: P,
    addEndListener: k,
    timeout: y,
    ...x,
    children: (M, F) => /* @__PURE__ */ S.cloneElement(l, {
      style: {
        opacity: 0,
        visibility: M === "exited" && !u ? "hidden" : void 0,
        ...sD[M],
        ...b,
        ...l.props.style
      },
      ref: w,
      ...F
    })
  });
});
process.env.NODE_ENV !== "production" && ($r.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: r.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: r.bool,
  /**
   * A single child content element.
   */
  children: rs.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: r.oneOfType([r.shape({
    enter: r.string,
    exit: r.string
  }), r.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: r.bool,
  /**
   * @ignore
   */
  onEnter: r.func,
  /**
   * @ignore
   */
  onEntered: r.func,
  /**
   * @ignore
   */
  onEntering: r.func,
  /**
   * @ignore
   */
  onExit: r.func,
  /**
   * @ignore
   */
  onExited: r.func,
  /**
   * @ignore
   */
  onExiting: r.func,
  /**
   * @ignore
   */
  style: r.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  timeout: r.oneOfType([r.number, r.shape({
    appear: r.number,
    enter: r.number,
    exit: r.number
  })])
});
function aD(e) {
  return We("MuiBackdrop", e);
}
_e("MuiBackdrop", ["root", "invisible"]);
const lD = (e) => {
  const {
    ownerState: t,
    ...n
  } = e;
  return n;
}, cD = (e) => {
  const {
    classes: t,
    invisible: n
  } = e;
  return Ue({
    root: ["root", n && "invisible"]
  }, aD, t);
}, uD = Q("div", {
  name: "MuiBackdrop",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.invisible && t.invisible];
  }
})({
  position: "fixed",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  backgroundColor: "rgba(0, 0, 0, 0.5)",
  WebkitTapHighlightColor: "transparent",
  variants: [{
    props: {
      invisible: !0
    },
    style: {
      backgroundColor: "transparent"
    }
  }]
}), Pf = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiBackdrop"
  }), {
    children: i,
    className: s,
    component: a = "div",
    invisible: l = !1,
    open: c,
    components: u = {},
    componentsProps: d = {},
    slotProps: p = {},
    slots: m = {},
    TransitionComponent: g,
    transitionDuration: h,
    ...v
  } = o, b = {
    ...o,
    component: a,
    invisible: l
  }, y = cD(b), C = {
    transition: g,
    root: u.Root,
    ...m
  }, x = {
    ...d,
    ...p
  }, T = {
    slots: C,
    slotProps: x
  }, [w, R] = nn("root", {
    elementType: uD,
    externalForwardedProps: T,
    className: fe(y.root, s),
    ownerState: b
  }), [E, O] = nn("transition", {
    elementType: $r,
    externalForwardedProps: T,
    ownerState: b
  }), I = lD(O);
  return /* @__PURE__ */ f.jsx(E, {
    in: c,
    timeout: h,
    ...v,
    ...I,
    children: /* @__PURE__ */ f.jsx(w, {
      "aria-hidden": !0,
      ...R,
      classes: y,
      ref: n,
      children: i
    })
  });
});
process.env.NODE_ENV !== "production" && (Pf.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: r.shape({
    Root: r.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: r.shape({
    root: r.object
  }),
  /**
   * If `true`, the backdrop is invisible.
   * It can be used when rendering a popover or a custom select component.
   * @default false
   */
  invisible: r.bool,
  /**
   * If `true`, the component is shown.
   */
  open: r.bool.isRequired,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: r.shape({
    root: r.oneOfType([r.func, r.object]),
    transition: r.oneOfType([r.func, r.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: r.shape({
    root: r.elementType,
    transition: r.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   */
  TransitionComponent: r.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   */
  transitionDuration: r.oneOfType([r.number, r.shape({
    appear: r.number,
    enter: r.number,
    exit: r.number
  })])
});
function dD(e) {
  const {
    badgeContent: t,
    invisible: n = !1,
    max: o = 99,
    showZero: i = !1
  } = e, s = pf({
    badgeContent: t,
    max: o
  });
  let a = n;
  n === !1 && t === 0 && !i && (a = !0);
  const {
    badgeContent: l,
    max: c = o
  } = a ? s : e, u = l && Number(l) > c ? `${c}+` : l;
  return {
    badgeContent: l,
    invisible: a,
    max: c,
    displayValue: u
  };
}
function pD(e) {
  return We("MuiBadge", e);
}
const xr = _e("MuiBadge", [
  "root",
  "badge",
  "dot",
  "standard",
  "anchorOriginTopRight",
  "anchorOriginBottomRight",
  "anchorOriginTopLeft",
  "anchorOriginBottomLeft",
  "invisible",
  "colorError",
  "colorInfo",
  "colorPrimary",
  "colorSecondary",
  "colorSuccess",
  "colorWarning",
  "overlapRectangular",
  "overlapCircular",
  // TODO: v6 remove the overlap value from these class keys
  "anchorOriginTopLeftCircular",
  "anchorOriginTopLeftRectangular",
  "anchorOriginTopRightCircular",
  "anchorOriginTopRightRectangular",
  "anchorOriginBottomLeftCircular",
  "anchorOriginBottomLeftRectangular",
  "anchorOriginBottomRightCircular",
  "anchorOriginBottomRightRectangular"
]), ud = 10, dd = 4, fD = (e) => {
  const {
    color: t,
    anchorOrigin: n,
    invisible: o,
    overlap: i,
    variant: s,
    classes: a = {}
  } = e, l = {
    root: ["root"],
    badge: ["badge", s, o && "invisible", `anchorOrigin${ue(n.vertical)}${ue(n.horizontal)}`, `anchorOrigin${ue(n.vertical)}${ue(n.horizontal)}${ue(i)}`, `overlap${ue(i)}`, t !== "default" && `color${ue(t)}`]
  };
  return Ue(l, pD, a);
}, mD = Q("span", {
  name: "MuiBadge",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  position: "relative",
  display: "inline-flex",
  // For correct alignment with the text.
  verticalAlign: "middle",
  flexShrink: 0
}), gD = Q("span", {
  name: "MuiBadge",
  slot: "Badge",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.badge, t[n.variant], t[`anchorOrigin${ue(n.anchorOrigin.vertical)}${ue(n.anchorOrigin.horizontal)}${ue(n.overlap)}`], n.color !== "default" && t[`color${ue(n.color)}`], n.invisible && t.invisible];
  }
})($e(({
  theme: e
}) => ({
  display: "flex",
  flexDirection: "row",
  flexWrap: "wrap",
  justifyContent: "center",
  alignContent: "center",
  alignItems: "center",
  position: "absolute",
  boxSizing: "border-box",
  fontFamily: e.typography.fontFamily,
  fontWeight: e.typography.fontWeightMedium,
  fontSize: e.typography.pxToRem(12),
  minWidth: ud * 2,
  lineHeight: 1,
  padding: "0 6px",
  height: ud * 2,
  borderRadius: ud,
  zIndex: 1,
  // Render the badge on top of potential ripples.
  transition: e.transitions.create("transform", {
    easing: e.transitions.easing.easeInOut,
    duration: e.transitions.duration.enteringScreen
  }),
  variants: [...Object.entries(e.palette).filter(wt(["contrastText"])).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: (e.vars || e).palette[t].main,
      color: (e.vars || e).palette[t].contrastText
    }
  })), {
    props: {
      variant: "dot"
    },
    style: {
      borderRadius: dd,
      height: dd * 2,
      minWidth: dd * 2,
      padding: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "right" && t.overlap === "rectangular",
    style: {
      top: 0,
      right: 0,
      transform: "scale(1) translate(50%, -50%)",
      transformOrigin: "100% 0%",
      [`&.${xr.invisible}`]: {
        transform: "scale(0) translate(50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "right" && t.overlap === "rectangular",
    style: {
      bottom: 0,
      right: 0,
      transform: "scale(1) translate(50%, 50%)",
      transformOrigin: "100% 100%",
      [`&.${xr.invisible}`]: {
        transform: "scale(0) translate(50%, 50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "left" && t.overlap === "rectangular",
    style: {
      top: 0,
      left: 0,
      transform: "scale(1) translate(-50%, -50%)",
      transformOrigin: "0% 0%",
      [`&.${xr.invisible}`]: {
        transform: "scale(0) translate(-50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "left" && t.overlap === "rectangular",
    style: {
      bottom: 0,
      left: 0,
      transform: "scale(1) translate(-50%, 50%)",
      transformOrigin: "0% 100%",
      [`&.${xr.invisible}`]: {
        transform: "scale(0) translate(-50%, 50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "right" && t.overlap === "circular",
    style: {
      top: "14%",
      right: "14%",
      transform: "scale(1) translate(50%, -50%)",
      transformOrigin: "100% 0%",
      [`&.${xr.invisible}`]: {
        transform: "scale(0) translate(50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "right" && t.overlap === "circular",
    style: {
      bottom: "14%",
      right: "14%",
      transform: "scale(1) translate(50%, 50%)",
      transformOrigin: "100% 100%",
      [`&.${xr.invisible}`]: {
        transform: "scale(0) translate(50%, 50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "top" && t.anchorOrigin.horizontal === "left" && t.overlap === "circular",
    style: {
      top: "14%",
      left: "14%",
      transform: "scale(1) translate(-50%, -50%)",
      transformOrigin: "0% 0%",
      [`&.${xr.invisible}`]: {
        transform: "scale(0) translate(-50%, -50%)"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.anchorOrigin.vertical === "bottom" && t.anchorOrigin.horizontal === "left" && t.overlap === "circular",
    style: {
      bottom: "14%",
      left: "14%",
      transform: "scale(1) translate(-50%, 50%)",
      transformOrigin: "0% 100%",
      [`&.${xr.invisible}`]: {
        transform: "scale(0) translate(-50%, 50%)"
      }
    }
  }, {
    props: {
      invisible: !0
    },
    style: {
      transition: e.transitions.create("transform", {
        easing: e.transitions.easing.easeInOut,
        duration: e.transitions.duration.leavingScreen
      })
    }
  }]
}))), p0 = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiBadge"
  }), {
    anchorOrigin: i = {
      vertical: "top",
      horizontal: "right"
    },
    className: s,
    classes: a,
    component: l,
    components: c = {},
    componentsProps: u = {},
    children: d,
    overlap: p = "rectangular",
    color: m = "default",
    invisible: g = !1,
    max: h = 99,
    badgeContent: v,
    slots: b,
    slotProps: y,
    showZero: C = !1,
    variant: x = "standard",
    ...T
  } = o, {
    badgeContent: w,
    invisible: R,
    max: E,
    displayValue: O
  } = dD({
    max: h,
    invisible: g,
    badgeContent: v,
    showZero: C
  }), I = pf({
    anchorOrigin: i,
    color: m,
    overlap: p,
    variant: x,
    badgeContent: v
  }), P = R || w == null && x !== "dot", {
    color: A = m,
    overlap: D = p,
    anchorOrigin: k = i,
    variant: M = x
  } = P ? I : o, F = M !== "dot" ? O : void 0, N = {
    ...o,
    badgeContent: w,
    invisible: P,
    max: E,
    displayValue: F,
    showZero: C,
    anchorOrigin: k,
    color: A,
    overlap: D,
    variant: M
  }, W = fD(N), H = (b == null ? void 0 : b.root) ?? c.Root ?? mD, B = (b == null ? void 0 : b.badge) ?? c.Badge ?? gD, j = (y == null ? void 0 : y.root) ?? u.root, L = (y == null ? void 0 : y.badge) ?? u.badge, ee = Sn({
    elementType: H,
    externalSlotProps: j,
    externalForwardedProps: T,
    additionalProps: {
      ref: n,
      as: l
    },
    ownerState: N,
    className: fe(j == null ? void 0 : j.className, W.root, s)
  }), Y = Sn({
    elementType: B,
    externalSlotProps: L,
    ownerState: N,
    className: fe(W.badge, L == null ? void 0 : L.className)
  });
  return /* @__PURE__ */ f.jsxs(H, {
    ...ee,
    children: [d, /* @__PURE__ */ f.jsx(B, {
      ...Y,
      children: F
    })]
  });
});
process.env.NODE_ENV !== "production" && (p0.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The anchor of the badge.
   * @default {
   *   vertical: 'top',
   *   horizontal: 'right',
   * }
   */
  anchorOrigin: r.shape({
    horizontal: r.oneOf(["left", "right"]).isRequired,
    vertical: r.oneOf(["bottom", "top"]).isRequired
  }),
  /**
   * The content rendered within the badge.
   */
  badgeContent: r.node,
  /**
   * The badge will be added relative to this node.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'default'
   */
  color: r.oneOfType([r.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), r.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: r.shape({
    Badge: r.elementType,
    Root: r.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: r.shape({
    badge: r.oneOfType([r.func, r.object]),
    root: r.oneOfType([r.func, r.object])
  }),
  /**
   * If `true`, the badge is invisible.
   * @default false
   */
  invisible: r.bool,
  /**
   * Max count to show.
   * @default 99
   */
  max: r.number,
  /**
   * Wrapped shape the badge should overlap.
   * @default 'rectangular'
   */
  overlap: r.oneOf(["circular", "rectangular"]),
  /**
   * Controls whether the badge is hidden when `badgeContent` is zero.
   * @default false
   */
  showZero: r.bool,
  /**
   * The props used for each slot inside the Badge.
   * @default {}
   */
  slotProps: r.shape({
    badge: r.oneOfType([r.func, r.object]),
    root: r.oneOfType([r.func, r.object])
  }),
  /**
   * The components used for each slot inside the Badge.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: r.shape({
    badge: r.elementType,
    root: r.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * The variant to use.
   * @default 'standard'
   */
  variant: r.oneOfType([r.oneOf(["dot", "standard"]), r.string])
});
const hD = _e("MuiBox", ["root"]), bD = Xc(), De = vR({
  themeId: Po,
  defaultTheme: bD,
  defaultClassName: hD.root,
  generateClassName: vy.generate
});
process.env.NODE_ENV !== "production" && (De.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: r.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object])
});
function vD(e) {
  return We("MuiButton", e);
}
const Ii = _e("MuiButton", ["root", "text", "textInherit", "textPrimary", "textSecondary", "textSuccess", "textError", "textInfo", "textWarning", "outlined", "outlinedInherit", "outlinedPrimary", "outlinedSecondary", "outlinedSuccess", "outlinedError", "outlinedInfo", "outlinedWarning", "contained", "containedInherit", "containedPrimary", "containedSecondary", "containedSuccess", "containedError", "containedInfo", "containedWarning", "disableElevation", "focusVisible", "disabled", "colorInherit", "colorPrimary", "colorSecondary", "colorSuccess", "colorError", "colorInfo", "colorWarning", "textSizeSmall", "textSizeMedium", "textSizeLarge", "outlinedSizeSmall", "outlinedSizeMedium", "outlinedSizeLarge", "containedSizeSmall", "containedSizeMedium", "containedSizeLarge", "sizeMedium", "sizeSmall", "sizeLarge", "fullWidth", "startIcon", "endIcon", "icon", "iconSizeSmall", "iconSizeMedium", "iconSizeLarge"]), f0 = /* @__PURE__ */ S.createContext({});
process.env.NODE_ENV !== "production" && (f0.displayName = "ButtonGroupContext");
const m0 = /* @__PURE__ */ S.createContext(void 0);
process.env.NODE_ENV !== "production" && (m0.displayName = "ButtonGroupButtonContext");
const yD = (e) => {
  const {
    color: t,
    disableElevation: n,
    fullWidth: o,
    size: i,
    variant: s,
    classes: a
  } = e, l = {
    root: ["root", s, `${s}${ue(t)}`, `size${ue(i)}`, `${s}Size${ue(i)}`, `color${ue(t)}`, n && "disableElevation", o && "fullWidth"],
    label: ["label"],
    startIcon: ["icon", "startIcon", `iconSize${ue(i)}`],
    endIcon: ["icon", "endIcon", `iconSize${ue(i)}`]
  }, c = Ue(l, vD, a);
  return {
    ...a,
    // forward the focused, disabled, etc. classes to the ButtonBase
    ...c
  };
}, g0 = [{
  props: {
    size: "small"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 18
    }
  }
}, {
  props: {
    size: "medium"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 20
    }
  }
}, {
  props: {
    size: "large"
  },
  style: {
    "& > *:nth-of-type(1)": {
      fontSize: 22
    }
  }
}], xD = Q(yo, {
  shouldForwardProp: (e) => Mn(e) || e === "classes",
  name: "MuiButton",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], t[`${n.variant}${ue(n.color)}`], t[`size${ue(n.size)}`], t[`${n.variant}Size${ue(n.size)}`], n.color === "inherit" && t.colorInherit, n.disableElevation && t.disableElevation, n.fullWidth && t.fullWidth];
  }
})($e(({
  theme: e
}) => {
  var o, i;
  const t = e.palette.mode === "light" ? e.palette.grey[300] : e.palette.grey[800], n = e.palette.mode === "light" ? e.palette.grey.A100 : e.palette.grey[700];
  return {
    ...e.typography.button,
    minWidth: 64,
    padding: "6px 16px",
    border: 0,
    borderRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create(["background-color", "box-shadow", "border-color", "color"], {
      duration: e.transitions.duration.short
    }),
    "&:hover": {
      textDecoration: "none"
    },
    [`&.${Ii.disabled}`]: {
      color: (e.vars || e).palette.action.disabled
    },
    variants: [{
      props: {
        variant: "contained"
      },
      style: {
        color: "var(--variant-containedColor)",
        backgroundColor: "var(--variant-containedBg)",
        boxShadow: (e.vars || e).shadows[2],
        "&:hover": {
          boxShadow: (e.vars || e).shadows[4],
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            boxShadow: (e.vars || e).shadows[2]
          }
        },
        "&:active": {
          boxShadow: (e.vars || e).shadows[8]
        },
        [`&.${Ii.focusVisible}`]: {
          boxShadow: (e.vars || e).shadows[6]
        },
        [`&.${Ii.disabled}`]: {
          color: (e.vars || e).palette.action.disabled,
          boxShadow: (e.vars || e).shadows[0],
          backgroundColor: (e.vars || e).palette.action.disabledBackground
        }
      }
    }, {
      props: {
        variant: "outlined"
      },
      style: {
        padding: "5px 15px",
        border: "1px solid currentColor",
        borderColor: "var(--variant-outlinedBorder, currentColor)",
        backgroundColor: "var(--variant-outlinedBg)",
        color: "var(--variant-outlinedColor)",
        [`&.${Ii.disabled}`]: {
          border: `1px solid ${(e.vars || e).palette.action.disabledBackground}`
        }
      }
    }, {
      props: {
        variant: "text"
      },
      style: {
        padding: "6px 8px",
        color: "var(--variant-textColor)",
        backgroundColor: "var(--variant-textBg)"
      }
    }, ...Object.entries(e.palette).filter(wt(["dark", "contrastText"])).map(([s]) => ({
      props: {
        color: s
      },
      style: {
        "--variant-textColor": (e.vars || e).palette[s].main,
        "--variant-outlinedColor": (e.vars || e).palette[s].main,
        "--variant-outlinedBorder": e.vars ? `rgba(${e.vars.palette[s].mainChannel} / 0.5)` : ze(e.palette[s].main, 0.5),
        "--variant-containedColor": (e.vars || e).palette[s].contrastText,
        "--variant-containedBg": (e.vars || e).palette[s].main,
        "@media (hover: hover)": {
          "&:hover": {
            "--variant-containedBg": (e.vars || e).palette[s].dark,
            "--variant-textBg": e.vars ? `rgba(${e.vars.palette[s].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : ze(e.palette[s].main, e.palette.action.hoverOpacity),
            "--variant-outlinedBorder": (e.vars || e).palette[s].main,
            "--variant-outlinedBg": e.vars ? `rgba(${e.vars.palette[s].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : ze(e.palette[s].main, e.palette.action.hoverOpacity)
          }
        }
      }
    })), {
      props: {
        color: "inherit"
      },
      style: {
        "--variant-containedColor": e.vars ? (
          // this is safe because grey does not change between default light/dark mode
          e.vars.palette.text.primary
        ) : (i = (o = e.palette).getContrastText) == null ? void 0 : i.call(o, t),
        "--variant-containedBg": e.vars ? e.vars.palette.Button.inheritContainedBg : t,
        "@media (hover: hover)": {
          "&:hover": {
            "--variant-containedBg": e.vars ? e.vars.palette.Button.inheritContainedHoverBg : n,
            "--variant-textBg": e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})` : ze(e.palette.text.primary, e.palette.action.hoverOpacity),
            "--variant-outlinedBg": e.vars ? `rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})` : ze(e.palette.text.primary, e.palette.action.hoverOpacity)
          }
        }
      }
    }, {
      props: {
        size: "small",
        variant: "text"
      },
      style: {
        padding: "4px 5px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "text"
      },
      style: {
        padding: "8px 11px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        size: "small",
        variant: "outlined"
      },
      style: {
        padding: "3px 9px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "outlined"
      },
      style: {
        padding: "7px 21px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        size: "small",
        variant: "contained"
      },
      style: {
        padding: "4px 10px",
        fontSize: e.typography.pxToRem(13)
      }
    }, {
      props: {
        size: "large",
        variant: "contained"
      },
      style: {
        padding: "8px 22px",
        fontSize: e.typography.pxToRem(15)
      }
    }, {
      props: {
        disableElevation: !0
      },
      style: {
        boxShadow: "none",
        "&:hover": {
          boxShadow: "none"
        },
        [`&.${Ii.focusVisible}`]: {
          boxShadow: "none"
        },
        "&:active": {
          boxShadow: "none"
        },
        [`&.${Ii.disabled}`]: {
          boxShadow: "none"
        }
      }
    }, {
      props: {
        fullWidth: !0
      },
      style: {
        width: "100%"
      }
    }]
  };
})), CD = Q("span", {
  name: "MuiButton",
  slot: "StartIcon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.startIcon, t[`iconSize${ue(n.size)}`]];
  }
})({
  display: "inherit",
  marginRight: 8,
  marginLeft: -4,
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginLeft: -2
    }
  }, ...g0]
}), SD = Q("span", {
  name: "MuiButton",
  slot: "EndIcon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.endIcon, t[`iconSize${ue(n.size)}`]];
  }
})({
  display: "inherit",
  marginRight: -4,
  marginLeft: 8,
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginRight: -2
    }
  }, ...g0]
}), vt = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = S.useContext(f0), i = S.useContext(m0), s = ca(o, t), a = Ye({
    props: s,
    name: "MuiButton"
  }), {
    children: l,
    color: c = "primary",
    component: u = "button",
    className: d,
    disabled: p = !1,
    disableElevation: m = !1,
    disableFocusRipple: g = !1,
    endIcon: h,
    focusVisibleClassName: v,
    fullWidth: b = !1,
    size: y = "medium",
    startIcon: C,
    type: x,
    variant: T = "text",
    ...w
  } = a, R = {
    ...a,
    color: c,
    component: u,
    disabled: p,
    disableElevation: m,
    disableFocusRipple: g,
    fullWidth: b,
    size: y,
    type: x,
    variant: T
  }, E = yD(R), O = C && /* @__PURE__ */ f.jsx(CD, {
    className: E.startIcon,
    ownerState: R,
    children: C
  }), I = h && /* @__PURE__ */ f.jsx(SD, {
    className: E.endIcon,
    ownerState: R,
    children: h
  }), P = i || "";
  return /* @__PURE__ */ f.jsxs(xD, {
    ownerState: R,
    className: fe(o.className, E.root, d, P),
    component: u,
    disabled: p,
    focusRipple: !g,
    focusVisibleClassName: fe(E.focusVisible, v),
    ref: n,
    type: x,
    ...w,
    classes: E,
    children: [O, l, I]
  });
});
process.env.NODE_ENV !== "production" && (vt.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: r.oneOfType([r.oneOf(["inherit", "primary", "secondary", "success", "error", "info", "warning"]), r.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: r.bool,
  /**
   * If `true`, no elevation is used.
   * @default false
   */
  disableElevation: r.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: r.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: r.bool,
  /**
   * Element placed after the children.
   */
  endIcon: r.node,
  /**
   * @ignore
   */
  focusVisibleClassName: r.string,
  /**
   * If `true`, the button will take up the full width of its container.
   * @default false
   */
  fullWidth: r.bool,
  /**
   * The URL to link to when the button is clicked.
   * If defined, an `a` element will be used as the root node.
   */
  href: r.string,
  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: r.oneOfType([r.oneOf(["small", "medium", "large"]), r.string]),
  /**
   * Element placed before the children.
   */
  startIcon: r.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * @ignore
   */
  type: r.oneOfType([r.oneOf(["button", "reset", "submit"]), r.string]),
  /**
   * The variant to use.
   * @default 'text'
   */
  variant: r.oneOfType([r.oneOf(["contained", "outlined", "text"]), r.string])
});
function wD(e) {
  return We("PrivateSwitchBase", e);
}
_e("PrivateSwitchBase", ["root", "checked", "disabled", "input", "edgeStart", "edgeEnd"]);
const TD = (e) => {
  const {
    classes: t,
    checked: n,
    disabled: o,
    edge: i
  } = e, s = {
    root: ["root", n && "checked", o && "disabled", i && `edge${ue(i)}`],
    input: ["input"]
  };
  return Ue(s, wD, t);
}, ID = Q(yo)({
  padding: 9,
  borderRadius: "50%",
  variants: [{
    props: {
      edge: "start",
      size: "small"
    },
    style: {
      marginLeft: -3
    }
  }, {
    props: ({
      edge: e,
      ownerState: t
    }) => e === "start" && t.size !== "small",
    style: {
      marginLeft: -12
    }
  }, {
    props: {
      edge: "end",
      size: "small"
    },
    style: {
      marginRight: -3
    }
  }, {
    props: ({
      edge: e,
      ownerState: t
    }) => e === "end" && t.size !== "small",
    style: {
      marginRight: -12
    }
  }]
}), RD = Q("input", {
  shouldForwardProp: Mn
})({
  cursor: "inherit",
  position: "absolute",
  opacity: 0,
  width: "100%",
  height: "100%",
  top: 0,
  left: 0,
  margin: 0,
  padding: 0,
  zIndex: 1
}), ru = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const {
    autoFocus: o,
    checked: i,
    checkedIcon: s,
    className: a,
    defaultChecked: l,
    disabled: c,
    disableFocusRipple: u = !1,
    edge: d = !1,
    icon: p,
    id: m,
    inputProps: g,
    inputRef: h,
    name: v,
    onBlur: b,
    onChange: y,
    onFocus: C,
    readOnly: x,
    required: T = !1,
    tabIndex: w,
    type: R,
    value: E,
    ...O
  } = t, [I, P] = ir({
    controlled: i,
    default: !!l,
    name: "SwitchBase",
    state: "checked"
  }), A = Gn(), D = (B) => {
    C && C(B), A && A.onFocus && A.onFocus(B);
  }, k = (B) => {
    b && b(B), A && A.onBlur && A.onBlur(B);
  }, M = (B) => {
    if (B.nativeEvent.defaultPrevented)
      return;
    const j = B.target.checked;
    P(j), y && y(B, j);
  };
  let F = c;
  A && typeof F > "u" && (F = A.disabled);
  const N = R === "checkbox" || R === "radio", W = {
    ...t,
    checked: I,
    disabled: F,
    disableFocusRipple: u,
    edge: d
  }, H = TD(W);
  return /* @__PURE__ */ f.jsxs(ID, {
    component: "span",
    className: fe(H.root, a),
    centerRipple: !0,
    focusRipple: !u,
    disabled: F,
    tabIndex: null,
    role: void 0,
    onFocus: D,
    onBlur: k,
    ownerState: W,
    ref: n,
    ...O,
    children: [/* @__PURE__ */ f.jsx(RD, {
      autoFocus: o,
      checked: i,
      defaultChecked: l,
      className: H.input,
      disabled: F,
      id: N ? m : void 0,
      name: v,
      onChange: M,
      readOnly: x,
      ref: h,
      required: T,
      ownerState: W,
      tabIndex: w,
      type: R,
      ...R === "checkbox" && E === void 0 ? {} : {
        value: E
      },
      ...g
    }), I ? s : p]
  });
});
process.env.NODE_ENV !== "production" && (ru.propTypes = {
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: r.bool,
  /**
   * If `true`, the component is checked.
   */
  checked: r.bool,
  /**
   * The icon to display when the component is checked.
   */
  checkedIcon: r.node.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * @ignore
   */
  defaultChecked: r.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: r.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: r.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: r.oneOf(["end", "start", !1]),
  /**
   * The icon to display when the component is unchecked.
   */
  icon: r.node.isRequired,
  /**
   * The id of the `input` element.
   */
  id: r.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: r.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: In,
  /*
   * @ignore
   */
  name: r.string,
  /**
   * @ignore
   */
  onBlur: r.func,
  /**
   * Callback fired when the state is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: r.func,
  /**
   * @ignore
   */
  onFocus: r.func,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: r.bool,
  /**
   * If `true`, the `input` element is required.
   */
  required: r.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.object,
  /**
   * @ignore
   */
  tabIndex: r.oneOfType([r.number, r.string]),
  /**
   * The input component prop `type`.
   */
  type: r.string.isRequired,
  /**
   * The value of the component.
   */
  value: r.any
});
const OD = He(/* @__PURE__ */ f.jsx("path", {
  d: "M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
}), "CheckBoxOutlineBlank"), ED = He(/* @__PURE__ */ f.jsx("path", {
  d: "M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
}), "CheckBox"), PD = He(/* @__PURE__ */ f.jsx("path", {
  d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"
}), "IndeterminateCheckBox");
function AD(e) {
  return We("MuiCheckbox", e);
}
const pd = _e("MuiCheckbox", ["root", "checked", "disabled", "indeterminate", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium"]), DD = (e) => {
  const {
    classes: t,
    indeterminate: n,
    color: o,
    size: i
  } = e, s = {
    root: ["root", n && "indeterminate", `color${ue(o)}`, `size${ue(i)}`]
  }, a = Ue(s, AD, t);
  return {
    ...t,
    // forward the disabled and checked classes to the SwitchBase
    ...a
  };
}, MD = Q(ru, {
  shouldForwardProp: (e) => Mn(e) || e === "classes",
  name: "MuiCheckbox",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.indeterminate && t.indeterminate, t[`size${ue(n.size)}`], n.color !== "default" && t[`color${ue(n.color)}`]];
  }
})($e(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  variants: [{
    props: {
      color: "default",
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : ze(e.palette.action.active, e.palette.action.hoverOpacity)
      }
    }
  }, ...Object.entries(e.palette).filter(wt()).map(([t]) => ({
    props: {
      color: t,
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : ze(e.palette[t].main, e.palette.action.hoverOpacity)
      }
    }
  })), ...Object.entries(e.palette).filter(wt()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${pd.checked}, &.${pd.indeterminate}`]: {
        color: (e.vars || e).palette[t].main
      },
      [`&.${pd.disabled}`]: {
        color: (e.vars || e).palette.action.disabled
      }
    }
  })), {
    // Should be last to override other colors
    props: {
      disableRipple: !1
    },
    style: {
      // Reset on touch devices, it doesn't add specificity
      "&:hover": {
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  }]
}))), jD = /* @__PURE__ */ f.jsx(ED, {}), kD = /* @__PURE__ */ f.jsx(OD, {}), FD = /* @__PURE__ */ f.jsx(PD, {}), ls = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiCheckbox"
  }), {
    checkedIcon: i = jD,
    color: s = "primary",
    icon: a = kD,
    indeterminate: l = !1,
    indeterminateIcon: c = FD,
    inputProps: u,
    size: d = "medium",
    disableRipple: p = !1,
    className: m,
    ...g
  } = o, h = l ? c : a, v = l ? c : i, b = {
    ...o,
    disableRipple: p,
    color: s,
    indeterminate: l,
    size: d
  }, y = DD(b);
  return /* @__PURE__ */ f.jsx(MD, {
    type: "checkbox",
    inputProps: {
      "data-indeterminate": l,
      ...u
    },
    icon: /* @__PURE__ */ S.cloneElement(h, {
      fontSize: h.props.fontSize ?? d
    }),
    checkedIcon: /* @__PURE__ */ S.cloneElement(v, {
      fontSize: v.props.fontSize ?? d
    }),
    ownerState: b,
    ref: n,
    className: fe(y.root, m),
    ...g,
    classes: y
  });
});
process.env.NODE_ENV !== "production" && (ls.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: r.bool,
  /**
   * The icon to display when the component is checked.
   * @default <CheckBoxIcon />
   */
  checkedIcon: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: r.oneOfType([r.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), r.string]),
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: r.bool,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: r.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: r.bool,
  /**
   * The icon to display when the component is unchecked.
   * @default <CheckBoxOutlineBlankIcon />
   */
  icon: r.node,
  /**
   * The id of the `input` element.
   */
  id: r.string,
  /**
   * If `true`, the component appears indeterminate.
   * This does not set the native input element to indeterminate due
   * to inconsistent behavior across browsers.
   * However, we set a `data-indeterminate` attribute on the `input`.
   * @default false
   */
  indeterminate: r.bool,
  /**
   * The icon to display when the component is indeterminate.
   * @default <IndeterminateCheckBoxIcon />
   */
  indeterminateIcon: r.node,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: r.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: In,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: r.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: r.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense checkbox styling.
   * @default 'medium'
   */
  size: r.oneOfType([r.oneOf(["medium", "small"]), r.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */
  value: r.any
});
function ND(e) {
  return We("MuiCircularProgress", e);
}
_e("MuiCircularProgress", ["root", "determinate", "indeterminate", "colorPrimary", "colorSecondary", "svg", "circle", "circleDeterminate", "circleIndeterminate", "circleDisableShrink"]);
const Cr = 44, fp = ko`
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
`, mp = ko`
  0% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -15px;
  }

  100% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -125px;
  }
`, VD = typeof fp != "string" ? Ko`
        animation: ${fp} 1.4s linear infinite;
      ` : null, $D = typeof mp != "string" ? Ko`
        animation: ${mp} 1.4s ease-in-out infinite;
      ` : null, LD = (e) => {
  const {
    classes: t,
    variant: n,
    color: o,
    disableShrink: i
  } = e, s = {
    root: ["root", n, `color${ue(o)}`],
    svg: ["svg"],
    circle: ["circle", `circle${ue(n)}`, i && "circleDisableShrink"]
  };
  return Ue(s, ND, t);
}, _D = Q("span", {
  name: "MuiCircularProgress",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], t[`color${ue(n.color)}`]];
  }
})($e(({
  theme: e
}) => ({
  display: "inline-block",
  variants: [{
    props: {
      variant: "determinate"
    },
    style: {
      transition: e.transitions.create("transform")
    }
  }, {
    props: {
      variant: "indeterminate"
    },
    style: VD || {
      animation: `${fp} 1.4s linear infinite`
    }
  }, ...Object.entries(e.palette).filter(wt()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      color: (e.vars || e).palette[t].main
    }
  }))]
}))), BD = Q("svg", {
  name: "MuiCircularProgress",
  slot: "Svg",
  overridesResolver: (e, t) => t.svg
})({
  display: "block"
  // Keeps the progress centered
}), zD = Q("circle", {
  name: "MuiCircularProgress",
  slot: "Circle",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.circle, t[`circle${ue(n.variant)}`], n.disableShrink && t.circleDisableShrink];
  }
})($e(({
  theme: e
}) => ({
  stroke: "currentColor",
  variants: [{
    props: {
      variant: "determinate"
    },
    style: {
      transition: e.transitions.create("stroke-dashoffset")
    }
  }, {
    props: {
      variant: "indeterminate"
    },
    style: {
      // Some default value that looks fine waiting for the animation to kicks in.
      strokeDasharray: "80px, 200px",
      strokeDashoffset: 0
      // Add the unit to fix a Edge 16 and below bug.
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" && !t.disableShrink,
    style: $D || {
      // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.
      animation: `${mp} 1.4s ease-in-out infinite`
    }
  }]
}))), ii = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiCircularProgress"
  }), {
    className: i,
    color: s = "primary",
    disableShrink: a = !1,
    size: l = 40,
    style: c,
    thickness: u = 3.6,
    value: d = 0,
    variant: p = "indeterminate",
    ...m
  } = o, g = {
    ...o,
    color: s,
    disableShrink: a,
    size: l,
    thickness: u,
    value: d,
    variant: p
  }, h = LD(g), v = {}, b = {}, y = {};
  if (p === "determinate") {
    const C = 2 * Math.PI * ((Cr - u) / 2);
    v.strokeDasharray = C.toFixed(3), y["aria-valuenow"] = Math.round(d), v.strokeDashoffset = `${((100 - d) / 100 * C).toFixed(3)}px`, b.transform = "rotate(-90deg)";
  }
  return /* @__PURE__ */ f.jsx(_D, {
    className: fe(h.root, i),
    style: {
      width: l,
      height: l,
      ...b,
      ...c
    },
    ownerState: g,
    ref: n,
    role: "progressbar",
    ...y,
    ...m,
    children: /* @__PURE__ */ f.jsx(BD, {
      className: h.svg,
      ownerState: g,
      viewBox: `${Cr / 2} ${Cr / 2} ${Cr} ${Cr}`,
      children: /* @__PURE__ */ f.jsx(zD, {
        className: h.circle,
        style: v,
        ownerState: g,
        cx: Cr,
        cy: Cr,
        r: (Cr - u) / 2,
        fill: "none",
        strokeWidth: u
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (ii.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: r.oneOfType([r.oneOf(["inherit", "primary", "secondary", "error", "info", "success", "warning"]), r.string]),
  /**
   * If `true`, the shrink animation is disabled.
   * This only works if variant is `indeterminate`.
   * @default false
   */
  disableShrink: oo(r.bool, (e) => e.disableShrink && e.variant && e.variant !== "indeterminate" ? new Error("MUI: You have provided the `disableShrink` prop with a variant other than `indeterminate`. This will have no effect.") : null),
  /**
   * The size of the component.
   * If using a number, the pixel unit is assumed.
   * If using a string, you need to provide the CSS unit, for example '3rem'.
   * @default 40
   */
  size: r.oneOfType([r.number, r.string]),
  /**
   * @ignore
   */
  style: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * The thickness of the circle.
   * @default 3.6
   */
  thickness: r.number,
  /**
   * The value of the progress indicator for the determinate variant.
   * Value between 0 and 100.
   * @default 0
   */
  value: r.number,
  /**
   * The variant to use.
   * Use indeterminate when there is no progress value.
   * @default 'indeterminate'
   */
  variant: r.oneOf(["determinate", "indeterminate"])
});
function WD(e) {
  const t = dn(e);
  return t.body === e ? dr(e).innerWidth > t.documentElement.clientWidth : e.scrollHeight > e.clientHeight;
}
function Ys(e, t) {
  t ? e.setAttribute("aria-hidden", "true") : e.removeAttribute("aria-hidden");
}
function Th(e) {
  return parseInt(dr(e).getComputedStyle(e).paddingRight, 10) || 0;
}
function HD(e) {
  const n = ["TEMPLATE", "SCRIPT", "STYLE", "LINK", "MAP", "META", "NOSCRIPT", "PICTURE", "COL", "COLGROUP", "PARAM", "SLOT", "SOURCE", "TRACK"].includes(e.tagName), o = e.tagName === "INPUT" && e.getAttribute("type") === "hidden";
  return n || o;
}
function Ih(e, t, n, o, i) {
  const s = [t, n, ...o];
  [].forEach.call(e.children, (a) => {
    const l = !s.includes(a), c = !HD(a);
    l && c && Ys(a, i);
  });
}
function fd(e, t) {
  let n = -1;
  return e.some((o, i) => t(o) ? (n = i, !0) : !1), n;
}
function GD(e, t) {
  const n = [], o = e.container;
  if (!t.disableScrollLock) {
    if (WD(o)) {
      const a = Py(dn(o));
      n.push({
        value: o.style.paddingRight,
        property: "padding-right",
        el: o
      }), o.style.paddingRight = `${Th(o) + a}px`;
      const l = dn(o).querySelectorAll(".mui-fixed");
      [].forEach.call(l, (c) => {
        n.push({
          value: c.style.paddingRight,
          property: "padding-right",
          el: c
        }), c.style.paddingRight = `${Th(c) + a}px`;
      });
    }
    let s;
    if (o.parentNode instanceof DocumentFragment)
      s = dn(o).body;
    else {
      const a = o.parentElement, l = dr(o);
      s = (a == null ? void 0 : a.nodeName) === "HTML" && l.getComputedStyle(a).overflowY === "scroll" ? a : o;
    }
    n.push({
      value: s.style.overflow,
      property: "overflow",
      el: s
    }, {
      value: s.style.overflowX,
      property: "overflow-x",
      el: s
    }, {
      value: s.style.overflowY,
      property: "overflow-y",
      el: s
    }), s.style.overflow = "hidden";
  }
  return () => {
    n.forEach(({
      value: s,
      el: a,
      property: l
    }) => {
      s ? a.style.setProperty(l, s) : a.style.removeProperty(l);
    });
  };
}
function UD(e) {
  const t = [];
  return [].forEach.call(e.children, (n) => {
    n.getAttribute("aria-hidden") === "true" && t.push(n);
  }), t;
}
class XD {
  constructor() {
    this.modals = [], this.containers = [];
  }
  add(t, n) {
    let o = this.modals.indexOf(t);
    if (o !== -1)
      return o;
    o = this.modals.length, this.modals.push(t), t.modalRef && Ys(t.modalRef, !1);
    const i = UD(n);
    Ih(n, t.mount, t.modalRef, i, !0);
    const s = fd(this.containers, (a) => a.container === n);
    return s !== -1 ? (this.containers[s].modals.push(t), o) : (this.containers.push({
      modals: [t],
      container: n,
      restore: null,
      hiddenSiblings: i
    }), o);
  }
  mount(t, n) {
    const o = fd(this.containers, (s) => s.modals.includes(t)), i = this.containers[o];
    i.restore || (i.restore = GD(i, n));
  }
  remove(t, n = !0) {
    const o = this.modals.indexOf(t);
    if (o === -1)
      return o;
    const i = fd(this.containers, (a) => a.modals.includes(t)), s = this.containers[i];
    if (s.modals.splice(s.modals.indexOf(t), 1), this.modals.splice(o, 1), s.modals.length === 0)
      s.restore && s.restore(), t.modalRef && Ys(t.modalRef, n), Ih(s.container, t.mount, t.modalRef, s.hiddenSiblings, !1), this.containers.splice(i, 1);
    else {
      const a = s.modals[s.modals.length - 1];
      a.modalRef && Ys(a.modalRef, !1);
    }
    return o;
  }
  isTopModal(t) {
    return this.modals.length > 0 && this.modals[this.modals.length - 1] === t;
  }
}
const YD = ["input", "select", "textarea", "a[href]", "button", "[tabindex]", "audio[controls]", "video[controls]", '[contenteditable]:not([contenteditable="false"])'].join(",");
function ZD(e) {
  const t = parseInt(e.getAttribute("tabindex") || "", 10);
  return Number.isNaN(t) ? e.contentEditable === "true" || (e.nodeName === "AUDIO" || e.nodeName === "VIDEO" || e.nodeName === "DETAILS") && e.getAttribute("tabindex") === null ? 0 : e.tabIndex : t;
}
function qD(e) {
  if (e.tagName !== "INPUT" || e.type !== "radio" || !e.name)
    return !1;
  const t = (o) => e.ownerDocument.querySelector(`input[type="radio"]${o}`);
  let n = t(`[name="${e.name}"]:checked`);
  return n || (n = t(`[name="${e.name}"]`)), n !== e;
}
function JD(e) {
  return !(e.disabled || e.tagName === "INPUT" && e.type === "hidden" || qD(e));
}
function KD(e) {
  const t = [], n = [];
  return Array.from(e.querySelectorAll(YD)).forEach((o, i) => {
    const s = ZD(o);
    s === -1 || !JD(o) || (s === 0 ? t.push(o) : n.push({
      documentOrder: i,
      tabIndex: s,
      node: o
    }));
  }), n.sort((o, i) => o.tabIndex === i.tabIndex ? o.documentOrder - i.documentOrder : o.tabIndex - i.tabIndex).map((o) => o.node).concat(t);
}
function QD() {
  return !0;
}
function ha(e) {
  const {
    children: t,
    disableAutoFocus: n = !1,
    disableEnforceFocus: o = !1,
    disableRestoreFocus: i = !1,
    getTabbable: s = KD,
    isEnabled: a = QD,
    open: l
  } = e, c = S.useRef(!1), u = S.useRef(null), d = S.useRef(null), p = S.useRef(null), m = S.useRef(null), g = S.useRef(!1), h = S.useRef(null), v = Yt(ss(t), h), b = S.useRef(null);
  S.useEffect(() => {
    !l || !h.current || (g.current = !n);
  }, [n, l]), S.useEffect(() => {
    if (!l || !h.current)
      return;
    const x = dn(h.current);
    return h.current.contains(x.activeElement) || (h.current.hasAttribute("tabIndex") || (process.env.NODE_ENV !== "production" && console.error(["MUI: The modal content node does not accept focus.", 'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".'].join(`
`)), h.current.setAttribute("tabIndex", "-1")), g.current && h.current.focus()), () => {
      i || (p.current && p.current.focus && (c.current = !0, p.current.focus()), p.current = null);
    };
  }, [l]), S.useEffect(() => {
    if (!l || !h.current)
      return;
    const x = dn(h.current), T = (E) => {
      b.current = E, !(o || !a() || E.key !== "Tab") && x.activeElement === h.current && E.shiftKey && (c.current = !0, d.current && d.current.focus());
    }, w = () => {
      var I, P;
      const E = h.current;
      if (E === null)
        return;
      if (!x.hasFocus() || !a() || c.current) {
        c.current = !1;
        return;
      }
      if (E.contains(x.activeElement) || o && x.activeElement !== u.current && x.activeElement !== d.current)
        return;
      if (x.activeElement !== m.current)
        m.current = null;
      else if (m.current !== null)
        return;
      if (!g.current)
        return;
      let O = [];
      if ((x.activeElement === u.current || x.activeElement === d.current) && (O = s(h.current)), O.length > 0) {
        const A = !!((I = b.current) != null && I.shiftKey && ((P = b.current) == null ? void 0 : P.key) === "Tab"), D = O[0], k = O[O.length - 1];
        typeof D != "string" && typeof k != "string" && (A ? k.focus() : D.focus());
      } else
        E.focus();
    };
    x.addEventListener("focusin", w), x.addEventListener("keydown", T, !0);
    const R = setInterval(() => {
      x.activeElement && x.activeElement.tagName === "BODY" && w();
    }, 50);
    return () => {
      clearInterval(R), x.removeEventListener("focusin", w), x.removeEventListener("keydown", T, !0);
    };
  }, [n, o, i, a, l, s]);
  const y = (x) => {
    p.current === null && (p.current = x.relatedTarget), g.current = !0, m.current = x.target;
    const T = t.props.onFocus;
    T && T(x);
  }, C = (x) => {
    p.current === null && (p.current = x.relatedTarget), g.current = !0;
  };
  return /* @__PURE__ */ f.jsxs(S.Fragment, {
    children: [/* @__PURE__ */ f.jsx("div", {
      tabIndex: l ? 0 : -1,
      onFocus: C,
      ref: u,
      "data-testid": "sentinelStart"
    }), /* @__PURE__ */ S.cloneElement(t, {
      ref: v,
      onFocus: y
    }), /* @__PURE__ */ f.jsx("div", {
      tabIndex: l ? 0 : -1,
      onFocus: C,
      ref: d,
      "data-testid": "sentinelEnd"
    })]
  });
}
process.env.NODE_ENV !== "production" && (ha.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A single child content element.
   */
  children: rs,
  /**
   * If `true`, the focus trap will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any focus trap children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: r.bool,
  /**
   * If `true`, the focus trap will not prevent focus from leaving the focus trap while open.
   *
   * Generally this should never be set to `true` as it makes the focus trap less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: r.bool,
  /**
   * If `true`, the focus trap will not restore focus to previously focused element once
   * focus trap is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: r.bool,
  /**
   * Returns an array of ordered tabbable nodes (i.e. in tab order) within the root.
   * For instance, you can provide the "tabbable" npm dependency.
   * @param {HTMLElement} root
   */
  getTabbable: r.func,
  /**
   * This prop extends the `open` prop.
   * It allows to toggle the open state without having to wait for a rerender when changing the `open` prop.
   * This prop should be memoized.
   * It can be used to support multiple focus trap mounted at the same time.
   * @default function defaultIsEnabled(): boolean {
   *   return true;
   * }
   */
  isEnabled: r.func,
  /**
   * If `true`, focus is locked.
   */
  open: r.bool.isRequired
});
process.env.NODE_ENV !== "production" && (ha.propTypes = Gc(ha.propTypes));
function eM(e) {
  return typeof e == "function" ? e() : e;
}
function tM(e) {
  return e ? e.props.hasOwnProperty("in") : !1;
}
const nM = new XD();
function oM(e) {
  const {
    container: t,
    disableEscapeKeyDown: n = !1,
    disableScrollLock: o = !1,
    // @ts-ignore internal logic - Base UI supports the manager as a prop too
    manager: i = nM,
    closeAfterTransition: s = !1,
    onTransitionEnter: a,
    onTransitionExited: l,
    children: c,
    onClose: u,
    open: d,
    rootRef: p
  } = e, m = S.useRef({}), g = S.useRef(null), h = S.useRef(null), v = Yt(h, p), [b, y] = S.useState(!d), C = tM(c);
  let x = !0;
  (e["aria-hidden"] === "false" || e["aria-hidden"] === !1) && (x = !1);
  const T = () => dn(g.current), w = () => (m.current.modalRef = h.current, m.current.mount = g.current, m.current), R = () => {
    i.mount(w(), {
      disableScrollLock: o
    }), h.current && (h.current.scrollTop = 0);
  }, E = hn(() => {
    const N = eM(t) || T().body;
    i.add(w(), N), h.current && R();
  }), O = S.useCallback(() => i.isTopModal(w()), [i]), I = hn((N) => {
    g.current = N, N && (d && O() ? R() : h.current && Ys(h.current, x));
  }), P = S.useCallback(() => {
    i.remove(w(), x);
  }, [x, i]);
  S.useEffect(() => () => {
    P();
  }, [P]), S.useEffect(() => {
    d ? E() : (!C || !s) && P();
  }, [d, P, C, s, E]);
  const A = (N) => (W) => {
    var H;
    (H = N.onKeyDown) == null || H.call(N, W), !(W.key !== "Escape" || W.which === 229 || // Wait until IME is settled.
    !O()) && (n || (W.stopPropagation(), u && u(W, "escapeKeyDown")));
  }, D = (N) => (W) => {
    var H;
    (H = N.onClick) == null || H.call(N, W), W.target === W.currentTarget && u && u(W, "backdropClick");
  };
  return {
    getRootProps: (N = {}) => {
      const W = Gs(e);
      delete W.onTransitionEnter, delete W.onTransitionExited;
      const H = {
        ...W,
        ...N
      };
      return {
        role: "presentation",
        ...H,
        onKeyDown: A(H),
        ref: v
      };
    },
    getBackdropProps: (N = {}) => {
      const W = N;
      return {
        "aria-hidden": !0,
        ...W,
        onClick: D(W),
        open: d
      };
    },
    getTransitionProps: () => {
      const N = () => {
        y(!1), a && a();
      }, W = () => {
        y(!0), l && l(), s && P();
      };
      return {
        onEnter: rp(N, c == null ? void 0 : c.props.onEnter),
        onExited: rp(W, c == null ? void 0 : c.props.onExited)
      };
    },
    rootRef: v,
    portalRef: I,
    isTopModal: O,
    exited: b,
    hasTransition: C
  };
}
function rM(e) {
  return We("MuiModal", e);
}
_e("MuiModal", ["root", "hidden", "backdrop"]);
const iM = (e) => {
  const {
    open: t,
    exited: n,
    classes: o
  } = e;
  return Ue({
    root: ["root", !t && n && "hidden"],
    backdrop: ["backdrop"]
  }, rM, o);
}, sM = Q("div", {
  name: "MuiModal",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.open && n.exited && t.hidden];
  }
})($e(({
  theme: e
}) => ({
  position: "fixed",
  zIndex: (e.vars || e).zIndex.modal,
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  variants: [{
    props: ({
      ownerState: t
    }) => !t.open && t.exited,
    style: {
      visibility: "hidden"
    }
  }]
}))), aM = Q(Pf, {
  name: "MuiModal",
  slot: "Backdrop",
  overridesResolver: (e, t) => t.backdrop
})({
  zIndex: -1
}), Ba = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    name: "MuiModal",
    props: t
  }), {
    BackdropComponent: i = aM,
    BackdropProps: s,
    classes: a,
    className: l,
    closeAfterTransition: c = !1,
    children: u,
    container: d,
    component: p,
    components: m = {},
    componentsProps: g = {},
    disableAutoFocus: h = !1,
    disableEnforceFocus: v = !1,
    disableEscapeKeyDown: b = !1,
    disablePortal: y = !1,
    disableRestoreFocus: C = !1,
    disableScrollLock: x = !1,
    hideBackdrop: T = !1,
    keepMounted: w = !1,
    onBackdropClick: R,
    onClose: E,
    onTransitionEnter: O,
    onTransitionExited: I,
    open: P,
    slotProps: A = {},
    slots: D = {},
    // eslint-disable-next-line react/prop-types
    theme: k,
    ...M
  } = o, F = {
    ...o,
    closeAfterTransition: c,
    disableAutoFocus: h,
    disableEnforceFocus: v,
    disableEscapeKeyDown: b,
    disablePortal: y,
    disableRestoreFocus: C,
    disableScrollLock: x,
    hideBackdrop: T,
    keepMounted: w
  }, {
    getRootProps: N,
    getBackdropProps: W,
    getTransitionProps: H,
    portalRef: B,
    isTopModal: j,
    exited: L,
    hasTransition: ee
  } = oM({
    ...F,
    rootRef: n
  }), Y = {
    ...F,
    exited: L
  }, $ = iM(Y), U = {};
  if (u.props.tabIndex === void 0 && (U.tabIndex = "-1"), ee) {
    const {
      onEnter: z,
      onExited: q
    } = H();
    U.onEnter = z, U.onExited = q;
  }
  const X = {
    ...M,
    slots: {
      root: m.Root,
      backdrop: m.Backdrop,
      ...D
    },
    slotProps: {
      ...g,
      ...A
    }
  }, [Z, G] = nn("root", {
    elementType: sM,
    externalForwardedProps: X,
    getSlotProps: N,
    additionalProps: {
      ref: n,
      as: p
    },
    ownerState: Y,
    className: fe(l, $ == null ? void 0 : $.root, !Y.open && Y.exited && ($ == null ? void 0 : $.hidden))
  }), [K, re] = nn("backdrop", {
    elementType: i,
    externalForwardedProps: X,
    additionalProps: s,
    getSlotProps: (z) => W({
      ...z,
      onClick: (q) => {
        R && R(q), z != null && z.onClick && z.onClick(q);
      }
    }),
    className: fe(s == null ? void 0 : s.className, $ == null ? void 0 : $.backdrop),
    ownerState: Y
  }), ne = Yt(s == null ? void 0 : s.ref, re.ref);
  return !w && !P && (!ee || L) ? null : /* @__PURE__ */ f.jsx(ga, {
    ref: B,
    container: d,
    disablePortal: y,
    children: /* @__PURE__ */ f.jsxs(Z, {
      ...G,
      children: [!T && i ? /* @__PURE__ */ f.jsx(K, {
        ...re,
        ref: ne
      }) : null, /* @__PURE__ */ f.jsx(ha, {
        disableEnforceFocus: v,
        disableAutoFocus: h,
        disableRestoreFocus: C,
        isEnabled: j,
        open: P,
        children: /* @__PURE__ */ S.cloneElement(u, U)
      })]
    })
  });
});
process.env.NODE_ENV !== "production" && (Ba.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: r.elementType,
  /**
   * Props applied to the [`Backdrop`](https://mui.com/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.backdrop` instead.
   */
  BackdropProps: r.object,
  /**
   * A single child content element.
   */
  children: rs.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * When set to true the Modal waits until a nested Transition is completed before closing.
   * @default false
   */
  closeAfterTransition: r.bool,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: r.shape({
    Backdrop: r.elementType,
    Root: r.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: r.shape({
    backdrop: r.oneOfType([r.func, r.object]),
    root: r.oneOfType([r.func, r.object])
  }),
  /**
   * An HTML element or function that returns one.
   * The `container` will have the portal children appended to it.
   *
   * You can also provide a callback, which is called in a React layout effect.
   * This lets you set the container from a ref, and also makes server-side rendering possible.
   *
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: r.oneOfType([ur, r.func]),
  /**
   * If `true`, the modal will not automatically shift focus to itself when it opens, and
   * replace it to the last focused element when it closes.
   * This also works correctly with any modal children that have the `disableAutoFocus` prop.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableAutoFocus: r.bool,
  /**
   * If `true`, the modal will not prevent focus from leaving the modal while open.
   *
   * Generally this should never be set to `true` as it makes the modal less
   * accessible to assistive technologies, like screen readers.
   * @default false
   */
  disableEnforceFocus: r.bool,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: r.bool,
  /**
   * The `children` will be under the DOM hierarchy of the parent component.
   * @default false
   */
  disablePortal: r.bool,
  /**
   * If `true`, the modal will not restore focus to previously focused element once
   * modal is hidden or unmounted.
   * @default false
   */
  disableRestoreFocus: r.bool,
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: r.bool,
  /**
   * If `true`, the backdrop is not rendered.
   * @default false
   */
  hideBackdrop: r.bool,
  /**
   * Always keep the children in the DOM.
   * This prop can be useful in SEO situation or
   * when you want to maximize the responsiveness of the Modal.
   * @default false
   */
  keepMounted: r.bool,
  /**
   * Callback fired when the backdrop is clicked.
   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.
   */
  onBackdropClick: r.func,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: r.func,
  /**
   * A function called when a transition enters.
   */
  onTransitionEnter: r.func,
  /**
   * A function called when a transition has exited.
   */
  onTransitionExited: r.func,
  /**
   * If `true`, the component is shown.
   */
  open: r.bool.isRequired,
  /**
   * The props used for each slot inside the Modal.
   * @default {}
   */
  slotProps: r.shape({
    backdrop: r.oneOfType([r.func, r.object]),
    root: r.oneOfType([r.func, r.object])
  }),
  /**
   * The components used for each slot inside the Modal.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: r.shape({
    backdrop: r.elementType,
    root: r.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object])
});
function lM(e) {
  return We("MuiDialog", e);
}
const Zs = _e("MuiDialog", ["root", "scrollPaper", "scrollBody", "container", "paper", "paperScrollPaper", "paperScrollBody", "paperWidthFalse", "paperWidthXs", "paperWidthSm", "paperWidthMd", "paperWidthLg", "paperWidthXl", "paperFullWidth", "paperFullScreen"]), Af = /* @__PURE__ */ S.createContext({});
process.env.NODE_ENV !== "production" && (Af.displayName = "DialogContext");
const cM = Q(Pf, {
  name: "MuiDialog",
  slot: "Backdrop",
  overrides: (e, t) => t.backdrop
})({
  // Improve scrollable dialog support.
  zIndex: -1
}), uM = (e) => {
  const {
    classes: t,
    scroll: n,
    maxWidth: o,
    fullWidth: i,
    fullScreen: s
  } = e, a = {
    root: ["root"],
    container: ["container", `scroll${ue(n)}`],
    paper: ["paper", `paperScroll${ue(n)}`, `paperWidth${ue(String(o))}`, i && "paperFullWidth", s && "paperFullScreen"]
  };
  return Ue(a, lM, t);
}, dM = Q(Ba, {
  name: "MuiDialog",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  "@media print": {
    // Use !important to override the Modal inline-style.
    position: "absolute !important"
  }
}), pM = Q("div", {
  name: "MuiDialog",
  slot: "Container",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.container, t[`scroll${ue(n.scroll)}`]];
  }
})({
  height: "100%",
  "@media print": {
    height: "auto"
  },
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  variants: [{
    props: {
      scroll: "paper"
    },
    style: {
      display: "flex",
      justifyContent: "center",
      alignItems: "center"
    }
  }, {
    props: {
      scroll: "body"
    },
    style: {
      overflowY: "auto",
      overflowX: "hidden",
      textAlign: "center",
      "&::after": {
        content: '""',
        display: "inline-block",
        verticalAlign: "middle",
        height: "100%",
        width: "0"
      }
    }
  }]
}), fM = Q(yn, {
  name: "MuiDialog",
  slot: "Paper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.paper, t[`scrollPaper${ue(n.scroll)}`], t[`paperWidth${ue(String(n.maxWidth))}`], n.fullWidth && t.paperFullWidth, n.fullScreen && t.paperFullScreen];
  }
})($e(({
  theme: e
}) => ({
  margin: 32,
  position: "relative",
  overflowY: "auto",
  "@media print": {
    overflowY: "visible",
    boxShadow: "none"
  },
  variants: [{
    props: {
      scroll: "paper"
    },
    style: {
      display: "flex",
      flexDirection: "column",
      maxHeight: "calc(100% - 64px)"
    }
  }, {
    props: {
      scroll: "body"
    },
    style: {
      display: "inline-block",
      verticalAlign: "middle",
      textAlign: "initial"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.maxWidth,
    style: {
      maxWidth: "calc(100% - 64px)"
    }
  }, {
    props: {
      maxWidth: "xs"
    },
    style: {
      maxWidth: e.breakpoints.unit === "px" ? Math.max(e.breakpoints.values.xs, 444) : `max(${e.breakpoints.values.xs}${e.breakpoints.unit}, 444px)`,
      [`&.${Zs.paperScrollBody}`]: {
        [e.breakpoints.down(Math.max(e.breakpoints.values.xs, 444) + 32 * 2)]: {
          maxWidth: "calc(100% - 64px)"
        }
      }
    }
  }, ...Object.keys(e.breakpoints.values).filter((t) => t !== "xs").map((t) => ({
    props: {
      maxWidth: t
    },
    style: {
      maxWidth: `${e.breakpoints.values[t]}${e.breakpoints.unit}`,
      [`&.${Zs.paperScrollBody}`]: {
        [e.breakpoints.down(e.breakpoints.values[t] + 32 * 2)]: {
          maxWidth: "calc(100% - 64px)"
        }
      }
    }
  })), {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      width: "calc(100% - 64px)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullScreen,
    style: {
      margin: 0,
      width: "100%",
      maxWidth: "100%",
      height: "100%",
      maxHeight: "none",
      borderRadius: 0,
      [`&.${Zs.paperScrollBody}`]: {
        margin: 0,
        maxWidth: "100%"
      }
    }
  }]
}))), Df = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiDialog"
  }), i = vn(), s = {
    enter: i.transitions.duration.enteringScreen,
    exit: i.transitions.duration.leavingScreen
  }, {
    "aria-describedby": a,
    "aria-labelledby": l,
    BackdropComponent: c,
    BackdropProps: u,
    children: d,
    className: p,
    disableEscapeKeyDown: m = !1,
    fullScreen: g = !1,
    fullWidth: h = !1,
    maxWidth: v = "sm",
    onBackdropClick: b,
    onClick: y,
    onClose: C,
    open: x,
    PaperComponent: T = yn,
    PaperProps: w = {},
    scroll: R = "paper",
    TransitionComponent: E = $r,
    transitionDuration: O = s,
    TransitionProps: I,
    ...P
  } = o, A = {
    ...o,
    disableEscapeKeyDown: m,
    fullScreen: g,
    fullWidth: h,
    maxWidth: v,
    scroll: R
  }, D = uM(A), k = S.useRef(), M = (H) => {
    k.current = H.target === H.currentTarget;
  }, F = (H) => {
    y && y(H), k.current && (k.current = null, b && b(H), C && C(H, "backdropClick"));
  }, N = Na(l), W = S.useMemo(() => ({
    titleId: N
  }), [N]);
  return /* @__PURE__ */ f.jsx(dM, {
    className: fe(D.root, p),
    closeAfterTransition: !0,
    components: {
      Backdrop: cM
    },
    componentsProps: {
      backdrop: {
        transitionDuration: O,
        as: c,
        ...u
      }
    },
    disableEscapeKeyDown: m,
    onClose: C,
    open: x,
    ref: n,
    onClick: F,
    ownerState: A,
    ...P,
    children: /* @__PURE__ */ f.jsx(E, {
      appear: !0,
      in: x,
      timeout: O,
      role: "presentation",
      ...I,
      children: /* @__PURE__ */ f.jsx(pM, {
        className: fe(D.container),
        onMouseDown: M,
        ownerState: A,
        children: /* @__PURE__ */ f.jsx(fM, {
          as: T,
          elevation: 24,
          role: "dialog",
          "aria-describedby": a,
          "aria-labelledby": N,
          ...w,
          className: fe(D.paper, w.className),
          ownerState: A,
          children: /* @__PURE__ */ f.jsx(Af.Provider, {
            value: W,
            children: d
          })
        })
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (Df.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The id(s) of the element(s) that describe the dialog.
   */
  "aria-describedby": r.string,
  /**
   * The id(s) of the element(s) that label the dialog.
   */
  "aria-labelledby": r.string,
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: r.elementType,
  /**
   * @ignore
   */
  BackdropProps: r.object,
  /**
   * Dialog children, usually the included sub-components.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * If `true`, hitting escape will not fire the `onClose` callback.
   * @default false
   */
  disableEscapeKeyDown: r.bool,
  /**
   * If `true`, the dialog is full-screen.
   * @default false
   */
  fullScreen: r.bool,
  /**
   * If `true`, the dialog stretches to `maxWidth`.
   *
   * Notice that the dialog width grow is limited by the default margin.
   * @default false
   */
  fullWidth: r.bool,
  /**
   * Determine the max-width of the dialog.
   * The dialog width grows with the size of the screen.
   * Set to `false` to disable `maxWidth`.
   * @default 'sm'
   */
  maxWidth: r.oneOfType([r.oneOf(["xs", "sm", "md", "lg", "xl", !1]), r.string]),
  /**
   * Callback fired when the backdrop is clicked.
   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.
   */
  onBackdropClick: r.func,
  /**
   * @ignore
   */
  onClick: r.func,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`.
   */
  onClose: r.func,
  /**
   * If `true`, the component is shown.
   */
  open: r.bool.isRequired,
  /**
   * The component used to render the body of the dialog.
   * @default Paper
   */
  PaperComponent: r.elementType,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   * @default {}
   */
  PaperProps: r.object,
  /**
   * Determine the container for scrolling the dialog.
   * @default 'paper'
   */
  scroll: r.oneOf(["body", "paper"]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Fade
   */
  TransitionComponent: r.elementType,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   * @default {
   *   enter: theme.transitions.duration.enteringScreen,
   *   exit: theme.transitions.duration.leavingScreen,
   * }
   */
  transitionDuration: r.oneOfType([r.number, r.shape({
    appear: r.number,
    enter: r.number,
    exit: r.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   */
  TransitionProps: r.object
});
function mM(e) {
  return We("MuiDialogActions", e);
}
_e("MuiDialogActions", ["root", "spacing"]);
const gM = (e) => {
  const {
    classes: t,
    disableSpacing: n
  } = e;
  return Ue({
    root: ["root", !n && "spacing"]
  }, mM, t);
}, hM = Q("div", {
  name: "MuiDialogActions",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.disableSpacing && t.spacing];
  }
})({
  display: "flex",
  alignItems: "center",
  padding: 8,
  justifyContent: "flex-end",
  flex: "0 0 auto",
  variants: [{
    props: ({
      ownerState: e
    }) => !e.disableSpacing,
    style: {
      "& > :not(style) ~ :not(style)": {
        marginLeft: 8
      }
    }
  }]
}), Mf = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiDialogActions"
  }), {
    className: i,
    disableSpacing: s = !1,
    ...a
  } = o, l = {
    ...o,
    disableSpacing: s
  }, c = gM(l);
  return /* @__PURE__ */ f.jsx(hM, {
    className: fe(c.root, i),
    ownerState: l,
    ref: n,
    ...a
  });
});
process.env.NODE_ENV !== "production" && (Mf.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * If `true`, the actions do not have additional margin.
   * @default false
   */
  disableSpacing: r.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object])
});
function bM(e) {
  return We("MuiDialogContent", e);
}
_e("MuiDialogContent", ["root", "dividers"]);
function vM(e) {
  return We("MuiDialogTitle", e);
}
const yM = _e("MuiDialogTitle", ["root"]), xM = (e) => {
  const {
    classes: t,
    dividers: n
  } = e;
  return Ue({
    root: ["root", n && "dividers"]
  }, bM, t);
}, CM = Q("div", {
  name: "MuiDialogContent",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.dividers && t.dividers];
  }
})($e(({
  theme: e
}) => ({
  flex: "1 1 auto",
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch",
  overflowY: "auto",
  padding: "20px 24px",
  variants: [{
    props: ({
      ownerState: t
    }) => t.dividers,
    style: {
      padding: "16px 24px",
      borderTop: `1px solid ${(e.vars || e).palette.divider}`,
      borderBottom: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.dividers,
    style: {
      [`.${yM.root} + &`]: {
        paddingTop: 0
      }
    }
  }]
}))), jf = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiDialogContent"
  }), {
    className: i,
    dividers: s = !1,
    ...a
  } = o, l = {
    ...o,
    dividers: s
  }, c = xM(l);
  return /* @__PURE__ */ f.jsx(CM, {
    className: fe(c.root, i),
    ownerState: l,
    ref: n,
    ...a
  });
});
process.env.NODE_ENV !== "production" && (jf.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * Display the top and bottom dividers.
   * @default false
   */
  dividers: r.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object])
});
const SM = (e) => {
  const {
    classes: t
  } = e;
  return Ue({
    root: ["root"]
  }, vM, t);
}, wM = Q(Fe, {
  name: "MuiDialogTitle",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  padding: "16px 24px",
  flex: "0 0 auto"
}), h0 = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiDialogTitle"
  }), {
    className: i,
    id: s,
    ...a
  } = o, l = o, c = SM(l), {
    titleId: u = s
  } = S.useContext(Af);
  return /* @__PURE__ */ f.jsx(wM, {
    component: "h2",
    className: fe(c.root, i),
    ownerState: l,
    ref: n,
    variant: "h6",
    id: s ?? u,
    ...a
  });
});
process.env.NODE_ENV !== "production" && (h0.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * @ignore
   */
  id: r.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object])
});
function TM(e) {
  return We("MuiDivider", e);
}
const Rh = _e("MuiDivider", ["root", "absolute", "fullWidth", "inset", "middle", "flexItem", "light", "vertical", "withChildren", "withChildrenVertical", "textAlignRight", "textAlignLeft", "wrapper", "wrapperVertical"]), IM = (e) => {
  const {
    absolute: t,
    children: n,
    classes: o,
    flexItem: i,
    light: s,
    orientation: a,
    textAlign: l,
    variant: c
  } = e;
  return Ue({
    root: ["root", t && "absolute", c, s && "light", a === "vertical" && "vertical", i && "flexItem", n && "withChildren", n && a === "vertical" && "withChildrenVertical", l === "right" && a !== "vertical" && "textAlignRight", l === "left" && a !== "vertical" && "textAlignLeft"],
    wrapper: ["wrapper", a === "vertical" && "wrapperVertical"]
  }, TM, o);
}, RM = Q("div", {
  name: "MuiDivider",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.absolute && t.absolute, t[n.variant], n.light && t.light, n.orientation === "vertical" && t.vertical, n.flexItem && t.flexItem, n.children && t.withChildren, n.children && n.orientation === "vertical" && t.withChildrenVertical, n.textAlign === "right" && n.orientation !== "vertical" && t.textAlignRight, n.textAlign === "left" && n.orientation !== "vertical" && t.textAlignLeft];
  }
})($e(({
  theme: e
}) => ({
  margin: 0,
  // Reset browser default style.
  flexShrink: 0,
  borderWidth: 0,
  borderStyle: "solid",
  borderColor: (e.vars || e).palette.divider,
  borderBottomWidth: "thin",
  variants: [{
    props: {
      absolute: !0
    },
    style: {
      position: "absolute",
      bottom: 0,
      left: 0,
      width: "100%"
    }
  }, {
    props: {
      light: !0
    },
    style: {
      borderColor: e.vars ? `rgba(${e.vars.palette.dividerChannel} / 0.08)` : ze(e.palette.divider, 0.08)
    }
  }, {
    props: {
      variant: "inset"
    },
    style: {
      marginLeft: 72
    }
  }, {
    props: {
      variant: "middle",
      orientation: "horizontal"
    },
    style: {
      marginLeft: e.spacing(2),
      marginRight: e.spacing(2)
    }
  }, {
    props: {
      variant: "middle",
      orientation: "vertical"
    },
    style: {
      marginTop: e.spacing(1),
      marginBottom: e.spacing(1)
    }
  }, {
    props: {
      orientation: "vertical"
    },
    style: {
      height: "100%",
      borderBottomWidth: 0,
      borderRightWidth: "thin"
    }
  }, {
    props: {
      flexItem: !0
    },
    style: {
      alignSelf: "stretch",
      height: "auto"
    }
  }, {
    props: ({
      ownerState: t
    }) => !!t.children,
    style: {
      display: "flex",
      whiteSpace: "nowrap",
      textAlign: "center",
      border: 0,
      borderTopStyle: "solid",
      borderLeftStyle: "solid",
      "&::before, &::after": {
        content: '""',
        alignSelf: "center"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.children && t.orientation !== "vertical",
    style: {
      "&::before, &::after": {
        width: "100%",
        borderTop: `thin solid ${(e.vars || e).palette.divider}`,
        borderTopStyle: "inherit"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.orientation === "vertical" && t.children,
    style: {
      flexDirection: "column",
      "&::before, &::after": {
        height: "100%",
        borderLeft: `thin solid ${(e.vars || e).palette.divider}`,
        borderLeftStyle: "inherit"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.textAlign === "right" && t.orientation !== "vertical",
    style: {
      "&::before": {
        width: "90%"
      },
      "&::after": {
        width: "10%"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.textAlign === "left" && t.orientation !== "vertical",
    style: {
      "&::before": {
        width: "10%"
      },
      "&::after": {
        width: "90%"
      }
    }
  }]
}))), OM = Q("span", {
  name: "MuiDivider",
  slot: "Wrapper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.wrapper, n.orientation === "vertical" && t.wrapperVertical];
  }
})($e(({
  theme: e
}) => ({
  display: "inline-block",
  paddingLeft: `calc(${e.spacing(1)} * 1.2)`,
  paddingRight: `calc(${e.spacing(1)} * 1.2)`,
  variants: [{
    props: {
      orientation: "vertical"
    },
    style: {
      paddingTop: `calc(${e.spacing(1)} * 1.2)`,
      paddingBottom: `calc(${e.spacing(1)} * 1.2)`
    }
  }]
}))), Ao = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiDivider"
  }), {
    absolute: i = !1,
    children: s,
    className: a,
    orientation: l = "horizontal",
    component: c = s || l === "vertical" ? "div" : "hr",
    flexItem: u = !1,
    light: d = !1,
    role: p = c !== "hr" ? "separator" : void 0,
    textAlign: m = "center",
    variant: g = "fullWidth",
    ...h
  } = o, v = {
    ...o,
    absolute: i,
    component: c,
    flexItem: u,
    light: d,
    orientation: l,
    role: p,
    textAlign: m,
    variant: g
  }, b = IM(v);
  return /* @__PURE__ */ f.jsx(RM, {
    as: c,
    className: fe(b.root, a),
    role: p,
    ref: n,
    ownerState: v,
    "aria-orientation": p === "separator" && (c !== "hr" || l === "vertical") ? l : void 0,
    ...h,
    children: s ? /* @__PURE__ */ f.jsx(OM, {
      className: b.wrapper,
      ownerState: v,
      children: s
    }) : null
  });
});
Ao && (Ao.muiSkipListHighlight = !0);
process.env.NODE_ENV !== "production" && (Ao.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Absolutely position the element.
   * @default false
   */
  absolute: r.bool,
  /**
   * The content of the component.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * If `true`, a vertical divider will have the correct height when used in flex container.
   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)
   * @default false
   */
  flexItem: r.bool,
  /**
   * If `true`, the divider will have a lighter color.
   * @default false
   * @deprecated Use <Divider sx={{ opacity: 0.6 }} /> (or any opacity or color) instead. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  light: r.bool,
  /**
   * The component orientation.
   * @default 'horizontal'
   */
  orientation: r.oneOf(["horizontal", "vertical"]),
  /**
   * @ignore
   */
  role: r.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * The text alignment.
   * @default 'center'
   */
  textAlign: r.oneOf(["center", "left", "right"]),
  /**
   * The variant to use.
   * @default 'fullWidth'
   */
  variant: r.oneOfType([r.oneOf(["fullWidth", "inset", "middle"]), r.string])
});
const EM = (e) => {
  const {
    classes: t,
    disableUnderline: n,
    startAdornment: o,
    endAdornment: i,
    size: s,
    hiddenLabel: a,
    multiline: l
  } = e, c = {
    root: ["root", !n && "underline", o && "adornedStart", i && "adornedEnd", s === "small" && `size${ue(s)}`, a && "hiddenLabel", l && "multiline"],
    input: ["input"]
  }, u = Ue(c, LA, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...u
  };
}, PM = Q(tu, {
  shouldForwardProp: (e) => Mn(e) || e === "classes",
  name: "MuiFilledInput",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [...Qc(e, t), !n.disableUnderline && t.underline];
  }
})($e(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = t ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)", o = t ? "rgba(0, 0, 0, 0.06)" : "rgba(255, 255, 255, 0.09)", i = t ? "rgba(0, 0, 0, 0.09)" : "rgba(255, 255, 255, 0.13)", s = t ? "rgba(0, 0, 0, 0.12)" : "rgba(255, 255, 255, 0.12)";
  return {
    position: "relative",
    backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : o,
    borderTopLeftRadius: (e.vars || e).shape.borderRadius,
    borderTopRightRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create("background-color", {
      duration: e.transitions.duration.shorter,
      easing: e.transitions.easing.easeOut
    }),
    "&:hover": {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.hoverBg : i,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : o
      }
    },
    [`&.${Yn.focused}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : o
    },
    [`&.${Yn.disabled}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.disabledBg : s
    },
    variants: [{
      props: ({
        ownerState: a
      }) => !a.disableUnderline,
      style: {
        "&::after": {
          left: 0,
          bottom: 0,
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e.transitions.create("transform", {
            duration: e.transitions.duration.shorter,
            easing: e.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${Yn.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${Yn.error}`]: {
          "&::before, &::after": {
            borderBottomColor: (e.vars || e).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})` : n}`,
          left: 0,
          bottom: 0,
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e.transitions.create("border-bottom-color", {
            duration: e.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${Yn.disabled}, .${Yn.error}):before`]: {
          borderBottom: `1px solid ${(e.vars || e).palette.text.primary}`
        },
        [`&.${Yn.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }, ...Object.entries(e.palette).filter(wt()).map(([a]) => {
      var l;
      return {
        props: {
          disableUnderline: !1,
          color: a
        },
        style: {
          "&::after": {
            borderBottom: `2px solid ${(l = (e.vars || e).palette[a]) == null ? void 0 : l.main}`
          }
        }
      };
    }), {
      props: ({
        ownerState: a
      }) => a.startAdornment,
      style: {
        paddingLeft: 12
      }
    }, {
      props: ({
        ownerState: a
      }) => a.endAdornment,
      style: {
        paddingRight: 12
      }
    }, {
      props: ({
        ownerState: a
      }) => a.multiline,
      style: {
        padding: "25px 12px 8px"
      }
    }, {
      props: ({
        ownerState: a,
        size: l
      }) => a.multiline && l === "small",
      style: {
        paddingTop: 21,
        paddingBottom: 4
      }
    }, {
      props: ({
        ownerState: a
      }) => a.multiline && a.hiddenLabel,
      style: {
        paddingTop: 16,
        paddingBottom: 17
      }
    }, {
      props: ({
        ownerState: a
      }) => a.multiline && a.hiddenLabel && a.size === "small",
      style: {
        paddingTop: 8,
        paddingBottom: 9
      }
    }]
  };
})), AM = Q(nu, {
  name: "MuiFilledInput",
  slot: "Input",
  overridesResolver: eu
})($e(({
  theme: e
}) => ({
  paddingTop: 25,
  paddingRight: 12,
  paddingBottom: 8,
  paddingLeft: 12,
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderTopLeftRadius: "inherit",
      borderTopRightRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderTopLeftRadius: "inherit",
      borderTopRightRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      paddingTop: 21,
      paddingBottom: 4
    }
  }, {
    props: ({
      ownerState: t
    }) => t.hiddenLabel,
    style: {
      paddingTop: 16,
      paddingBottom: 17
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.hiddenLabel && t.size === "small",
    style: {
      paddingTop: 8,
      paddingBottom: 9
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      paddingTop: 0,
      paddingBottom: 0,
      paddingLeft: 0,
      paddingRight: 0
    }
  }]
}))), ba = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiFilledInput"
  }), {
    disableUnderline: i = !1,
    components: s = {},
    componentsProps: a,
    fullWidth: l = !1,
    hiddenLabel: c,
    // declare here to prevent spreading to DOM
    inputComponent: u = "input",
    multiline: d = !1,
    slotProps: p,
    slots: m = {},
    type: g = "text",
    ...h
  } = o, v = {
    ...o,
    disableUnderline: i,
    fullWidth: l,
    inputComponent: u,
    multiline: d,
    type: g
  }, b = EM(o), y = {
    root: {
      ownerState: v
    },
    input: {
      ownerState: v
    }
  }, C = p ?? a ? bn(y, p ?? a) : y, x = m.root ?? s.Root ?? PM, T = m.input ?? s.Input ?? AM;
  return /* @__PURE__ */ f.jsx(ou, {
    slots: {
      root: x,
      input: T
    },
    componentsProps: C,
    fullWidth: l,
    inputComponent: u,
    multiline: d,
    ref: n,
    type: g,
    ...h,
    classes: b
  });
});
process.env.NODE_ENV !== "production" && (ba.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: r.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: r.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: r.oneOfType([r.oneOf(["primary", "secondary"]), r.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: r.shape({
    Input: r.elementType,
    Root: r.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: r.shape({
    input: r.object,
    root: r.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: r.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: r.bool,
  /**
   * If `true`, the input will not have an underline.
   * @default false
   */
  disableUnderline: r.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: r.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: r.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: r.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: r.bool,
  /**
   * The id of the `input` element.
   */
  id: r.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: r.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: r.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: In,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: r.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: r.oneOfType([r.number, r.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: r.oneOfType([r.number, r.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: r.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: r.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: r.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: r.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: r.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: r.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: r.oneOfType([r.number, r.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: r.shape({
    input: r.object,
    root: r.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: r.shape({
    input: r.elementType,
    root: r.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: r.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: r.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: r.any
});
ba && (ba.muiName = "Input");
function DM(e) {
  return We("MuiFormControl", e);
}
_e("MuiFormControl", ["root", "marginNone", "marginNormal", "marginDense", "fullWidth", "disabled"]);
const MM = (e) => {
  const {
    classes: t,
    margin: n,
    fullWidth: o
  } = e, i = {
    root: ["root", n !== "none" && `margin${ue(n)}`, o && "fullWidth"]
  };
  return Ue(i, DM, t);
}, jM = Q("div", {
  name: "MuiFormControl",
  slot: "Root",
  overridesResolver: ({
    ownerState: e
  }, t) => ({
    ...t.root,
    ...t[`margin${ue(e.margin)}`],
    ...e.fullWidth && t.fullWidth
  })
})({
  display: "inline-flex",
  flexDirection: "column",
  position: "relative",
  // Reset fieldset default style.
  minWidth: 0,
  padding: 0,
  margin: 0,
  border: 0,
  verticalAlign: "top",
  // Fix alignment issue on Safari.
  variants: [{
    props: {
      margin: "normal"
    },
    style: {
      marginTop: 16,
      marginBottom: 8
    }
  }, {
    props: {
      margin: "dense"
    },
    style: {
      marginTop: 8,
      marginBottom: 4
    }
  }, {
    props: {
      fullWidth: !0
    },
    style: {
      width: "100%"
    }
  }]
}), go = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiFormControl"
  }), {
    children: i,
    className: s,
    color: a = "primary",
    component: l = "div",
    disabled: c = !1,
    error: u = !1,
    focused: d,
    fullWidth: p = !1,
    hiddenLabel: m = !1,
    margin: g = "none",
    required: h = !1,
    size: v = "medium",
    variant: b = "outlined",
    ...y
  } = o, C = {
    ...o,
    color: a,
    component: l,
    disabled: c,
    error: u,
    fullWidth: p,
    hiddenLabel: m,
    margin: g,
    required: h,
    size: v,
    variant: b
  }, x = MM(C), [T, w] = S.useState(() => {
    let M = !1;
    return i && S.Children.forEach(i, (F) => {
      if (!Hs(F, ["Input", "Select"]))
        return;
      const N = Hs(F, ["Select"]) ? F.props.input : F;
      N && kA(N.props) && (M = !0);
    }), M;
  }), [R, E] = S.useState(() => {
    let M = !1;
    return i && S.Children.forEach(i, (F) => {
      Hs(F, ["Input", "Select"]) && (ac(F.props, !0) || ac(F.props.inputProps, !0)) && (M = !0);
    }), M;
  }), [O, I] = S.useState(!1);
  c && O && I(!1);
  const P = d !== void 0 && !c ? d : O;
  let A;
  const D = S.useRef(!1);
  process.env.NODE_ENV !== "production" && (A = () => (D.current && console.error(["MUI: There are multiple `InputBase` components inside a FormControl.", "This creates visual inconsistencies, only use one `InputBase`."].join(`
`)), D.current = !0, () => {
    D.current = !1;
  }));
  const k = S.useMemo(() => ({
    adornedStart: T,
    setAdornedStart: w,
    color: a,
    disabled: c,
    error: u,
    filled: R,
    focused: P,
    fullWidth: p,
    hiddenLabel: m,
    size: v,
    onBlur: () => {
      I(!1);
    },
    onEmpty: () => {
      E(!1);
    },
    onFilled: () => {
      E(!0);
    },
    onFocus: () => {
      I(!0);
    },
    registerEffect: A,
    required: h,
    variant: b
  }), [T, a, c, u, R, P, p, m, A, h, v, b]);
  return /* @__PURE__ */ f.jsx(_a.Provider, {
    value: k,
    children: /* @__PURE__ */ f.jsx(jM, {
      as: l,
      ownerState: C,
      className: fe(x.root, s),
      ref: n,
      ...y,
      children: i
    })
  });
});
process.env.NODE_ENV !== "production" && (go.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: r.oneOfType([r.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), r.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * If `true`, the label, input and helper text should be displayed in a disabled state.
   * @default false
   */
  disabled: r.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: r.bool,
  /**
   * If `true`, the component is displayed in focused state.
   */
  focused: r.bool,
  /**
   * If `true`, the component will take up the full width of its container.
   * @default false
   */
  fullWidth: r.bool,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: r.bool,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: r.oneOf(["dense", "none", "normal"]),
  /**
   * If `true`, the label will indicate that the `input` is required.
   * @default false
   */
  required: r.bool,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: r.oneOfType([r.oneOf(["medium", "small"]), r.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: r.oneOf(["filled", "outlined", "standard"])
});
function kM(e) {
  return We("MuiFormControlLabel", e);
}
const Ls = _e("MuiFormControlLabel", ["root", "labelPlacementStart", "labelPlacementTop", "labelPlacementBottom", "disabled", "label", "error", "required", "asterisk"]), FM = (e) => {
  const {
    classes: t,
    disabled: n,
    labelPlacement: o,
    error: i,
    required: s
  } = e, a = {
    root: ["root", n && "disabled", `labelPlacement${ue(o)}`, i && "error", s && "required"],
    label: ["label", n && "disabled"],
    asterisk: ["asterisk", i && "error"]
  };
  return Ue(a, kM, t);
}, NM = Q("label", {
  name: "MuiFormControlLabel",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [{
      [`& .${Ls.label}`]: t.label
    }, t.root, t[`labelPlacement${ue(n.labelPlacement)}`]];
  }
})($e(({
  theme: e
}) => ({
  display: "inline-flex",
  alignItems: "center",
  cursor: "pointer",
  // For correct alignment with the text.
  verticalAlign: "middle",
  WebkitTapHighlightColor: "transparent",
  marginLeft: -11,
  marginRight: 16,
  // used for row presentation of radio/checkbox
  [`&.${Ls.disabled}`]: {
    cursor: "default"
  },
  [`& .${Ls.label}`]: {
    [`&.${Ls.disabled}`]: {
      color: (e.vars || e).palette.text.disabled
    }
  },
  variants: [{
    props: {
      labelPlacement: "start"
    },
    style: {
      flexDirection: "row-reverse",
      marginRight: -11
    }
  }, {
    props: {
      labelPlacement: "top"
    },
    style: {
      flexDirection: "column-reverse"
    }
  }, {
    props: {
      labelPlacement: "bottom"
    },
    style: {
      flexDirection: "column"
    }
  }, {
    props: ({
      labelPlacement: t
    }) => t === "start" || t === "top" || t === "bottom",
    style: {
      marginLeft: 16
      // used for row presentation of radio/checkbox
    }
  }]
}))), VM = Q("span", {
  name: "MuiFormControlLabel",
  slot: "Asterisk",
  overridesResolver: (e, t) => t.asterisk
})($e(({
  theme: e
}) => ({
  [`&.${Ls.error}`]: {
    color: (e.vars || e).palette.error.main
  }
}))), iu = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiFormControlLabel"
  }), {
    checked: i,
    className: s,
    componentsProps: a = {},
    control: l,
    disabled: c,
    disableTypography: u,
    inputRef: d,
    label: p,
    labelPlacement: m = "end",
    name: g,
    onChange: h,
    required: v,
    slots: b = {},
    slotProps: y = {},
    value: C,
    ...x
  } = o, T = Gn(), w = c ?? l.props.disabled ?? (T == null ? void 0 : T.disabled), R = v ?? l.props.required, E = {
    disabled: w,
    required: R
  };
  ["checked", "name", "onChange", "value", "inputRef"].forEach((F) => {
    typeof l.props[F] > "u" && typeof o[F] < "u" && (E[F] = o[F]);
  });
  const O = fi({
    props: o,
    muiFormControl: T,
    states: ["error"]
  }), I = {
    ...o,
    disabled: w,
    labelPlacement: m,
    required: R,
    error: O.error
  }, P = FM(I), A = {
    slots: b,
    slotProps: {
      ...a,
      ...y
    }
  }, [D, k] = nn("typography", {
    elementType: Fe,
    externalForwardedProps: A,
    ownerState: I
  });
  let M = p;
  return M != null && M.type !== Fe && !u && (M = /* @__PURE__ */ f.jsx(D, {
    component: "span",
    ...k,
    className: fe(P.label, k == null ? void 0 : k.className),
    children: M
  })), /* @__PURE__ */ f.jsxs(NM, {
    className: fe(P.root, s),
    ownerState: I,
    ref: n,
    ...x,
    children: [/* @__PURE__ */ S.cloneElement(l, E), R ? /* @__PURE__ */ f.jsxs("div", {
      children: [M, /* @__PURE__ */ f.jsxs(VM, {
        ownerState: I,
        "aria-hidden": !0,
        className: P.asterisk,
        children: [" ", "*"]
      })]
    }) : M]
  });
});
process.env.NODE_ENV !== "production" && (iu.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component appears selected.
   */
  checked: r.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The props used for each slot inside.
   * @default {}
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  componentsProps: r.shape({
    typography: r.object
  }),
  /**
   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.
   */
  control: r.element.isRequired,
  /**
   * If `true`, the control is disabled.
   */
  disabled: r.bool,
  /**
   * If `true`, the label is rendered as it is passed without an additional typography node.
   */
  disableTypography: r.bool,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: In,
  /**
   * A text or an element to be used in an enclosing label element.
   */
  label: r.node,
  /**
   * The position of the label.
   * @default 'end'
   */
  labelPlacement: r.oneOf(["bottom", "end", "start", "top"]),
  /**
   * @ignore
   */
  name: r.string,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: r.func,
  /**
   * If `true`, the label will indicate that the `input` is required.
   */
  required: r.bool,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: r.shape({
    typography: r.oneOfType([r.func, r.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: r.shape({
    typography: r.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * The value of the component.
   */
  value: r.any
});
function $M(e) {
  return We("MuiFormHelperText", e);
}
const Oh = _e("MuiFormHelperText", ["root", "error", "disabled", "sizeSmall", "sizeMedium", "contained", "focused", "filled", "required"]);
var Eh;
const LM = (e) => {
  const {
    classes: t,
    contained: n,
    size: o,
    disabled: i,
    error: s,
    filled: a,
    focused: l,
    required: c
  } = e, u = {
    root: ["root", i && "disabled", s && "error", o && `size${ue(o)}`, n && "contained", l && "focused", a && "filled", c && "required"]
  };
  return Ue(u, $M, t);
}, _M = Q("p", {
  name: "MuiFormHelperText",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.size && t[`size${ue(n.size)}`], n.contained && t.contained, n.filled && t.filled];
  }
})($e(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  ...e.typography.caption,
  textAlign: "left",
  marginTop: 3,
  marginRight: 0,
  marginBottom: 0,
  marginLeft: 0,
  [`&.${Oh.disabled}`]: {
    color: (e.vars || e).palette.text.disabled
  },
  [`&.${Oh.error}`]: {
    color: (e.vars || e).palette.error.main
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      marginTop: 4
    }
  }, {
    props: ({
      ownerState: t
    }) => t.contained,
    style: {
      marginLeft: 14,
      marginRight: 14
    }
  }]
}))), su = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiFormHelperText"
  }), {
    children: i,
    className: s,
    component: a = "p",
    disabled: l,
    error: c,
    filled: u,
    focused: d,
    margin: p,
    required: m,
    variant: g,
    ...h
  } = o, v = Gn(), b = fi({
    props: o,
    muiFormControl: v,
    states: ["variant", "size", "disabled", "error", "filled", "focused", "required"]
  }), y = {
    ...o,
    component: a,
    contained: b.variant === "filled" || b.variant === "outlined",
    variant: b.variant,
    size: b.size,
    disabled: b.disabled,
    error: b.error,
    filled: b.filled,
    focused: b.focused,
    required: b.required
  };
  delete y.ownerState;
  const C = LM(y);
  return /* @__PURE__ */ f.jsx(_M, {
    as: a,
    className: fe(C.root, s),
    ref: n,
    ...h,
    ownerState: y,
    children: i === " " ? (
      // notranslate needed while Google Translate will not fix zero-width space issue
      Eh || (Eh = /* @__PURE__ */ f.jsx("span", {
        className: "notranslate",
        children: "​"
      }))
    ) : i
  });
});
process.env.NODE_ENV !== "production" && (su.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   *
   * If `' '` is provided, the component reserves one line height for displaying a future message.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * If `true`, the helper text should be displayed in a disabled state.
   */
  disabled: r.bool,
  /**
   * If `true`, helper text should be displayed in an error state.
   */
  error: r.bool,
  /**
   * If `true`, the helper text should use filled classes key.
   */
  filled: r.bool,
  /**
   * If `true`, the helper text should use focused classes key.
   */
  focused: r.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: r.oneOf(["dense"]),
  /**
   * If `true`, the helper text should use required classes key.
   */
  required: r.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * The variant to use.
   */
  variant: r.oneOfType([r.oneOf(["filled", "outlined", "standard"]), r.string])
});
function BM(e) {
  return We("MuiFormLabel", e);
}
const qs = _e("MuiFormLabel", ["root", "colorSecondary", "focused", "disabled", "error", "filled", "required", "asterisk"]), zM = (e) => {
  const {
    classes: t,
    color: n,
    focused: o,
    disabled: i,
    error: s,
    filled: a,
    required: l
  } = e, c = {
    root: ["root", `color${ue(n)}`, i && "disabled", s && "error", a && "filled", o && "focused", l && "required"],
    asterisk: ["asterisk", s && "error"]
  };
  return Ue(c, BM, t);
}, WM = Q("label", {
  name: "MuiFormLabel",
  slot: "Root",
  overridesResolver: ({
    ownerState: e
  }, t) => ({
    ...t.root,
    ...e.color === "secondary" && t.colorSecondary,
    ...e.filled && t.filled
  })
})($e(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  ...e.typography.body1,
  lineHeight: "1.4375em",
  padding: 0,
  position: "relative",
  variants: [...Object.entries(e.palette).filter(wt()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${qs.focused}`]: {
        color: (e.vars || e).palette[t].main
      }
    }
  })), {
    props: {},
    style: {
      [`&.${qs.disabled}`]: {
        color: (e.vars || e).palette.text.disabled
      },
      [`&.${qs.error}`]: {
        color: (e.vars || e).palette.error.main
      }
    }
  }]
}))), HM = Q("span", {
  name: "MuiFormLabel",
  slot: "Asterisk",
  overridesResolver: (e, t) => t.asterisk
})($e(({
  theme: e
}) => ({
  [`&.${qs.error}`]: {
    color: (e.vars || e).palette.error.main
  }
}))), b0 = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiFormLabel"
  }), {
    children: i,
    className: s,
    color: a,
    component: l = "label",
    disabled: c,
    error: u,
    filled: d,
    focused: p,
    required: m,
    ...g
  } = o, h = Gn(), v = fi({
    props: o,
    muiFormControl: h,
    states: ["color", "required", "focused", "disabled", "error", "filled"]
  }), b = {
    ...o,
    color: v.color || "primary",
    component: l,
    disabled: v.disabled,
    error: v.error,
    filled: v.filled,
    focused: v.focused,
    required: v.required
  }, y = zM(b);
  return /* @__PURE__ */ f.jsxs(WM, {
    as: l,
    ownerState: b,
    className: fe(y.root, s),
    ref: n,
    ...g,
    children: [i, v.required && /* @__PURE__ */ f.jsxs(HM, {
      ownerState: b,
      "aria-hidden": !0,
      className: y.asterisk,
      children: [" ", "*"]
    })]
  });
});
process.env.NODE_ENV !== "production" && (b0.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: r.oneOfType([r.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), r.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * If `true`, the label should be displayed in a disabled state.
   */
  disabled: r.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: r.bool,
  /**
   * If `true`, the label should use filled classes key.
   */
  filled: r.bool,
  /**
   * If `true`, the input of this label is focused (used by `FormGroup` components).
   */
  focused: r.bool,
  /**
   * If `true`, the label will indicate that the `input` is required.
   */
  required: r.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object])
});
const gp = /* @__PURE__ */ S.createContext();
process.env.NODE_ENV !== "production" && (gp.displayName = "GridContext");
function GM(e) {
  return We("MuiGrid", e);
}
const UM = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], XM = ["column-reverse", "column", "row-reverse", "row"], YM = ["nowrap", "wrap-reverse", "wrap"], Ts = ["auto", !0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], va = _e("MuiGrid", [
  "root",
  "container",
  "item",
  "zeroMinWidth",
  // spacings
  ...UM.map((e) => `spacing-xs-${e}`),
  // direction values
  ...XM.map((e) => `direction-xs-${e}`),
  // wrap values
  ...YM.map((e) => `wrap-xs-${e}`),
  // grid sizes for all breakpoints
  ...Ts.map((e) => `grid-xs-${e}`),
  ...Ts.map((e) => `grid-sm-${e}`),
  ...Ts.map((e) => `grid-md-${e}`),
  ...Ts.map((e) => `grid-lg-${e}`),
  ...Ts.map((e) => `grid-xl-${e}`)
]);
function ZM({
  theme: e,
  ownerState: t
}) {
  let n;
  return e.breakpoints.keys.reduce((o, i) => {
    let s = {};
    if (t[i] && (n = t[i]), !n)
      return o;
    if (n === !0)
      s = {
        flexBasis: 0,
        flexGrow: 1,
        maxWidth: "100%"
      };
    else if (n === "auto")
      s = {
        flexBasis: "auto",
        flexGrow: 0,
        flexShrink: 0,
        maxWidth: "none",
        width: "auto"
      };
    else {
      const a = Qr({
        values: t.columns,
        breakpoints: e.breakpoints.values
      }), l = typeof a == "object" ? a[i] : a;
      if (l == null)
        return o;
      const c = `${Math.round(n / l * 1e8) / 1e6}%`;
      let u = {};
      if (t.container && t.item && t.columnSpacing !== 0) {
        const d = e.spacing(t.columnSpacing);
        if (d !== "0px") {
          const p = `calc(${c} + ${d})`;
          u = {
            flexBasis: p,
            maxWidth: p
          };
        }
      }
      s = {
        flexBasis: c,
        flexGrow: 0,
        maxWidth: c,
        ...u
      };
    }
    return e.breakpoints.values[i] === 0 ? Object.assign(o, s) : o[e.breakpoints.up(i)] = s, o;
  }, {});
}
function qM({
  theme: e,
  ownerState: t
}) {
  const n = Qr({
    values: t.direction,
    breakpoints: e.breakpoints.values
  });
  return Hn({
    theme: e
  }, n, (o) => {
    const i = {
      flexDirection: o
    };
    return o.startsWith("column") && (i[`& > .${va.item}`] = {
      maxWidth: "none"
    }), i;
  });
}
function v0({
  breakpoints: e,
  values: t
}) {
  let n = "";
  Object.keys(t).forEach((i) => {
    n === "" && t[i] !== 0 && (n = i);
  });
  const o = Object.keys(e).sort((i, s) => e[i] - e[s]);
  return o.slice(0, o.indexOf(n));
}
function JM({
  theme: e,
  ownerState: t
}) {
  const {
    container: n,
    rowSpacing: o
  } = t;
  let i = {};
  if (n && o !== 0) {
    const s = Qr({
      values: o,
      breakpoints: e.breakpoints.values
    });
    let a;
    typeof s == "object" && (a = v0({
      breakpoints: e.breakpoints.values,
      values: s
    })), i = Hn({
      theme: e
    }, s, (l, c) => {
      const u = e.spacing(l);
      return u !== "0px" ? {
        marginTop: e.spacing(-l),
        [`& > .${va.item}`]: {
          paddingTop: u
        }
      } : a != null && a.includes(c) ? {} : {
        marginTop: 0,
        [`& > .${va.item}`]: {
          paddingTop: 0
        }
      };
    });
  }
  return i;
}
function KM({
  theme: e,
  ownerState: t
}) {
  const {
    container: n,
    columnSpacing: o
  } = t;
  let i = {};
  if (n && o !== 0) {
    const s = Qr({
      values: o,
      breakpoints: e.breakpoints.values
    });
    let a;
    typeof s == "object" && (a = v0({
      breakpoints: e.breakpoints.values,
      values: s
    })), i = Hn({
      theme: e
    }, s, (l, c) => {
      const u = e.spacing(l);
      if (u !== "0px") {
        const d = e.spacing(-l);
        return {
          width: `calc(100% + ${u})`,
          marginLeft: d,
          [`& > .${va.item}`]: {
            paddingLeft: u
          }
        };
      }
      return a != null && a.includes(c) ? {} : {
        width: "100%",
        marginLeft: 0,
        [`& > .${va.item}`]: {
          paddingLeft: 0
        }
      };
    });
  }
  return i;
}
function QM(e, t, n = {}) {
  if (!e || e <= 0)
    return [];
  if (typeof e == "string" && !Number.isNaN(Number(e)) || typeof e == "number")
    return [n[`spacing-xs-${String(e)}`]];
  const o = [];
  return t.forEach((i) => {
    const s = e[i];
    Number(s) > 0 && o.push(n[`spacing-${i}-${String(s)}`]);
  }), o;
}
const ej = Q("div", {
  name: "MuiGrid",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e, {
      container: o,
      direction: i,
      item: s,
      spacing: a,
      wrap: l,
      zeroMinWidth: c,
      breakpoints: u
    } = n;
    let d = [];
    o && (d = QM(a, u, t));
    const p = [];
    return u.forEach((m) => {
      const g = n[m];
      g && p.push(t[`grid-${m}-${String(g)}`]);
    }), [t.root, o && t.container, s && t.item, c && t.zeroMinWidth, ...d, i !== "row" && t[`direction-xs-${String(i)}`], l !== "wrap" && t[`wrap-xs-${String(l)}`], ...p];
  }
})(
  // FIXME(romgrk): Can't use memoTheme here
  ({
    ownerState: e
  }) => ({
    boxSizing: "border-box",
    ...e.container && {
      display: "flex",
      flexWrap: "wrap",
      width: "100%"
    },
    ...e.item && {
      margin: 0
      // For instance, it's useful when used with a `figure` element.
    },
    ...e.zeroMinWidth && {
      minWidth: 0
    },
    ...e.wrap !== "wrap" && {
      flexWrap: e.wrap
    }
  }),
  qM,
  JM,
  KM,
  ZM
);
function tj(e, t) {
  if (!e || e <= 0)
    return [];
  if (typeof e == "string" && !Number.isNaN(Number(e)) || typeof e == "number")
    return [`spacing-xs-${String(e)}`];
  const n = [];
  return t.forEach((o) => {
    const i = e[o];
    if (Number(i) > 0) {
      const s = `spacing-${o}-${String(i)}`;
      n.push(s);
    }
  }), n;
}
const nj = (e) => {
  const {
    classes: t,
    container: n,
    direction: o,
    item: i,
    spacing: s,
    wrap: a,
    zeroMinWidth: l,
    breakpoints: c
  } = e;
  let u = [];
  n && (u = tj(s, c));
  const d = [];
  c.forEach((m) => {
    const g = e[m];
    g && d.push(`grid-${m}-${String(g)}`);
  });
  const p = {
    root: ["root", n && "container", i && "item", l && "zeroMinWidth", ...u, o !== "row" && `direction-xs-${String(o)}`, a !== "wrap" && `wrap-xs-${String(a)}`, ...d]
  };
  return Ue(p, GM, t);
}, Ht = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiGrid"
  }), {
    breakpoints: i
  } = vn(), s = Wc(o), {
    className: a,
    columns: l,
    columnSpacing: c,
    component: u = "div",
    container: d = !1,
    direction: p = "row",
    item: m = !1,
    rowSpacing: g,
    spacing: h = 0,
    wrap: v = "wrap",
    zeroMinWidth: b = !1,
    ...y
  } = s, C = g || h, x = c || h, T = S.useContext(gp), w = d ? l || 12 : T, R = {}, E = {
    ...y
  };
  i.keys.forEach((P) => {
    y[P] != null && (R[P] = y[P], delete E[P]);
  });
  const O = {
    ...s,
    columns: w,
    container: d,
    direction: p,
    item: m,
    rowSpacing: C,
    columnSpacing: x,
    wrap: v,
    zeroMinWidth: b,
    spacing: h,
    ...R,
    breakpoints: i.keys
  }, I = nj(O);
  return /* @__PURE__ */ f.jsx(gp.Provider, {
    value: w,
    children: /* @__PURE__ */ f.jsx(ej, {
      ownerState: O,
      className: fe(I.root, a),
      as: u,
      ref: n,
      ...E
    })
  });
});
process.env.NODE_ENV !== "production" && (Ht.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The number of columns.
   * @default 12
   */
  columns: r.oneOfType([r.arrayOf(r.number), r.number, r.object]),
  /**
   * Defines the horizontal space between the type `item` components.
   * It overrides the value of the `spacing` prop.
   */
  columnSpacing: r.oneOfType([r.arrayOf(r.oneOfType([r.number, r.string])), r.number, r.object, r.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * If `true`, the component will have the flex *container* behavior.
   * You should be wrapping *items* with a *container*.
   * @default false
   */
  container: r.bool,
  /**
   * Defines the `flex-direction` style property.
   * It is applied for all screen sizes.
   * @default 'row'
   */
  direction: r.oneOfType([r.oneOf(["column-reverse", "column", "row-reverse", "row"]), r.arrayOf(r.oneOf(["column-reverse", "column", "row-reverse", "row"])), r.object]),
  /**
   * If `true`, the component will have the flex *item* behavior.
   * You should be wrapping *items* with a *container*.
   * @default false
   */
  item: r.bool,
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for the `lg` breakpoint and wider screens if not overridden.
   * @default false
   */
  lg: r.oneOfType([r.oneOf(["auto"]), r.number, r.bool]),
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for the `md` breakpoint and wider screens if not overridden.
   * @default false
   */
  md: r.oneOfType([r.oneOf(["auto"]), r.number, r.bool]),
  /**
   * Defines the vertical space between the type `item` components.
   * It overrides the value of the `spacing` prop.
   */
  rowSpacing: r.oneOfType([r.arrayOf(r.oneOfType([r.number, r.string])), r.number, r.object, r.string]),
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for the `sm` breakpoint and wider screens if not overridden.
   * @default false
   */
  sm: r.oneOfType([r.oneOf(["auto"]), r.number, r.bool]),
  /**
   * Defines the space between the type `item` components.
   * It can only be used on a type `container` component.
   * @default 0
   */
  spacing: r.oneOfType([r.arrayOf(r.oneOfType([r.number, r.string])), r.number, r.object, r.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * Defines the `flex-wrap` style property.
   * It's applied for all screen sizes.
   * @default 'wrap'
   */
  wrap: r.oneOf(["nowrap", "wrap-reverse", "wrap"]),
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for the `xl` breakpoint and wider screens if not overridden.
   * @default false
   */
  xl: r.oneOfType([r.oneOf(["auto"]), r.number, r.bool]),
  /**
   * If a number, it sets the number of columns the grid item uses.
   * It can't be greater than the total number of columns of the container (12 by default).
   * If 'auto', the grid item's width matches its content.
   * If false, the prop is ignored.
   * If true, the grid item's width grows to use the space available in the grid container.
   * The value is applied for all the screen sizes with the lowest priority.
   * @default false
   */
  xs: r.oneOfType([r.oneOf(["auto"]), r.number, r.bool]),
  /**
   * If `true`, it sets `min-width: 0` on the item.
   * Refer to the limitations section of the documentation to better understand the use case.
   * @default false
   */
  zeroMinWidth: r.bool
});
if (process.env.NODE_ENV !== "production") {
  const e = $R("Grid", Ht);
  Ht.propTypes = {
    // eslint-disable-next-line react/forbid-foreign-prop-types
    ...Ht.propTypes,
    direction: e("container"),
    lg: e("item"),
    md: e("item"),
    sm: e("item"),
    spacing: e("container"),
    wrap: e("container"),
    xs: e("item"),
    zeroMinWidth: e("item")
  };
}
function hp(e) {
  return `scale(${e}, ${e ** 2})`;
}
const oj = {
  entering: {
    opacity: 1,
    transform: hp(1)
  },
  entered: {
    opacity: 1,
    transform: "none"
  }
}, md = typeof navigator < "u" && /^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent) && /(os |version\/)15(.|_)4/i.test(navigator.userAgent), Mr = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const {
    addEndListener: o,
    appear: i = !0,
    children: s,
    easing: a,
    in: l,
    onEnter: c,
    onEntered: u,
    onEntering: d,
    onExit: p,
    onExited: m,
    onExiting: g,
    style: h,
    timeout: v = "auto",
    // eslint-disable-next-line react/prop-types
    TransitionComponent: b = so,
    ...y
  } = t, C = qr(), x = S.useRef(), T = vn(), w = S.useRef(null), R = Yt(w, ss(s), n), E = (F) => (N) => {
    if (F) {
      const W = w.current;
      N === void 0 ? F(W) : F(W, N);
    }
  }, O = E(d), I = E((F, N) => {
    Uy(F);
    const {
      duration: W,
      delay: H,
      easing: B
    } = Ui({
      style: h,
      timeout: v,
      easing: a
    }, {
      mode: "enter"
    });
    let j;
    v === "auto" ? (j = T.transitions.getAutoHeightDuration(F.clientHeight), x.current = j) : j = W, F.style.transition = [T.transitions.create("opacity", {
      duration: j,
      delay: H
    }), T.transitions.create("transform", {
      duration: md ? j : j * 0.666,
      delay: H,
      easing: B
    })].join(","), c && c(F, N);
  }), P = E(u), A = E(g), D = E((F) => {
    const {
      duration: N,
      delay: W,
      easing: H
    } = Ui({
      style: h,
      timeout: v,
      easing: a
    }, {
      mode: "exit"
    });
    let B;
    v === "auto" ? (B = T.transitions.getAutoHeightDuration(F.clientHeight), x.current = B) : B = N, F.style.transition = [T.transitions.create("opacity", {
      duration: B,
      delay: W
    }), T.transitions.create("transform", {
      duration: md ? B : B * 0.666,
      delay: md ? W : W || B * 0.333,
      easing: H
    })].join(","), F.style.opacity = 0, F.style.transform = hp(0.75), p && p(F);
  }), k = E(m), M = (F) => {
    v === "auto" && C.start(x.current || 0, F), o && o(w.current, F);
  };
  return /* @__PURE__ */ f.jsx(b, {
    appear: i,
    in: l,
    nodeRef: w,
    onEnter: I,
    onEntered: P,
    onEntering: O,
    onExit: D,
    onExited: k,
    onExiting: A,
    addEndListener: M,
    timeout: v === "auto" ? null : v,
    ...y,
    children: (F, N) => /* @__PURE__ */ S.cloneElement(s, {
      style: {
        opacity: 0,
        transform: hp(0.75),
        visibility: F === "exited" && !l ? "hidden" : void 0,
        ...oj[F],
        ...h,
        ...s.props.style
      },
      ref: R,
      ...N
    })
  });
});
process.env.NODE_ENV !== "production" && (Mr.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Add a custom transition end trigger. Called with the transitioning DOM
   * node and a done callback. Allows for more fine grained transition end
   * logic. Note: Timeouts are still used as a fallback if provided.
   */
  addEndListener: r.func,
  /**
   * Perform the enter transition when it first mounts if `in` is also `true`.
   * Set this to `false` to disable this behavior.
   * @default true
   */
  appear: r.bool,
  /**
   * A single child content element.
   */
  children: rs.isRequired,
  /**
   * The transition timing function.
   * You may specify a single easing or a object containing enter and exit values.
   */
  easing: r.oneOfType([r.shape({
    enter: r.string,
    exit: r.string
  }), r.string]),
  /**
   * If `true`, the component will transition in.
   */
  in: r.bool,
  /**
   * @ignore
   */
  onEnter: r.func,
  /**
   * @ignore
   */
  onEntered: r.func,
  /**
   * @ignore
   */
  onEntering: r.func,
  /**
   * @ignore
   */
  onExit: r.func,
  /**
   * @ignore
   */
  onExited: r.func,
  /**
   * @ignore
   */
  onExiting: r.func,
  /**
   * @ignore
   */
  style: r.object,
  /**
   * The duration for the transition, in milliseconds.
   * You may specify a single timeout for all transitions, or individually with an object.
   *
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  timeout: r.oneOfType([r.oneOf(["auto"]), r.number, r.shape({
    appear: r.number,
    enter: r.number,
    exit: r.number
  })])
});
Mr && (Mr.muiSupportAuto = !0);
const rj = (e) => {
  const {
    classes: t,
    disableUnderline: n
  } = e, i = Ue({
    root: ["root", !n && "underline"],
    input: ["input"]
  }, VA, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...i
  };
}, ij = Q(tu, {
  shouldForwardProp: (e) => Mn(e) || e === "classes",
  name: "MuiInput",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [...Qc(e, t), !n.disableUnderline && t.underline];
  }
})($e(({
  theme: e
}) => {
  let n = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)";
  return e.vars && (n = `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})`), {
    position: "relative",
    variants: [{
      props: ({
        ownerState: o
      }) => o.formControl,
      style: {
        "label + &": {
          marginTop: 16
        }
      }
    }, {
      props: ({
        ownerState: o
      }) => !o.disableUnderline,
      style: {
        "&::after": {
          left: 0,
          bottom: 0,
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e.transitions.create("transform", {
            duration: e.transitions.duration.shorter,
            easing: e.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${Tr.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${Tr.error}`]: {
          "&::before, &::after": {
            borderBottomColor: (e.vars || e).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${n}`,
          left: 0,
          bottom: 0,
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e.transitions.create("border-bottom-color", {
            duration: e.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${Tr.disabled}, .${Tr.error}):before`]: {
          borderBottom: `2px solid ${(e.vars || e).palette.text.primary}`,
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            borderBottom: `1px solid ${n}`
          }
        },
        [`&.${Tr.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }, ...Object.entries(e.palette).filter(wt()).map(([o]) => ({
      props: {
        color: o,
        disableUnderline: !1
      },
      style: {
        "&::after": {
          borderBottom: `2px solid ${(e.vars || e).palette[o].main}`
        }
      }
    }))]
  };
})), sj = Q(nu, {
  name: "MuiInput",
  slot: "Input",
  overridesResolver: eu
})({}), ya = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiInput"
  }), {
    disableUnderline: i = !1,
    components: s = {},
    componentsProps: a,
    fullWidth: l = !1,
    inputComponent: c = "input",
    multiline: u = !1,
    slotProps: d,
    slots: p = {},
    type: m = "text",
    ...g
  } = o, h = rj(o), b = {
    root: {
      ownerState: {
        disableUnderline: i
      }
    }
  }, y = d ?? a ? bn(d ?? a, b) : b, C = p.root ?? s.Root ?? ij, x = p.input ?? s.Input ?? sj;
  return /* @__PURE__ */ f.jsx(ou, {
    slots: {
      root: C,
      input: x
    },
    slotProps: y,
    fullWidth: l,
    inputComponent: c,
    multiline: u,
    ref: n,
    type: m,
    ...g,
    classes: h
  });
});
process.env.NODE_ENV !== "production" && (ya.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: r.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: r.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: r.oneOfType([r.oneOf(["primary", "secondary"]), r.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: r.shape({
    Input: r.elementType,
    Root: r.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: r.shape({
    input: r.object,
    root: r.object
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: r.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: r.bool,
  /**
   * If `true`, the `input` will not have an underline.
   * @default false
   */
  disableUnderline: r.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: r.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: r.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: r.bool,
  /**
   * The id of the `input` element.
   */
  id: r.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: r.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: r.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: In,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: r.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: r.oneOfType([r.number, r.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: r.oneOfType([r.number, r.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: r.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: r.string,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: r.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: r.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: r.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: r.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: r.oneOfType([r.number, r.string]),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: r.shape({
    input: r.object,
    root: r.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: r.shape({
    input: r.elementType,
    root: r.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: r.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: r.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: r.any
});
ya && (ya.muiName = "Input");
function aj(e) {
  return We("MuiInputAdornment", e);
}
const Ph = _e("MuiInputAdornment", ["root", "filled", "standard", "outlined", "positionStart", "positionEnd", "disablePointerEvents", "hiddenLabel", "sizeSmall"]);
var Ah;
const lj = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, t[`position${ue(n.position)}`], n.disablePointerEvents === !0 && t.disablePointerEvents, t[n.variant]];
}, cj = (e) => {
  const {
    classes: t,
    disablePointerEvents: n,
    hiddenLabel: o,
    position: i,
    size: s,
    variant: a
  } = e, l = {
    root: ["root", n && "disablePointerEvents", i && `position${ue(i)}`, a, o && "hiddenLabel", s && `size${ue(s)}`]
  };
  return Ue(l, aj, t);
}, uj = Q("div", {
  name: "MuiInputAdornment",
  slot: "Root",
  overridesResolver: lj
})($e(({
  theme: e
}) => ({
  display: "flex",
  maxHeight: "2em",
  alignItems: "center",
  whiteSpace: "nowrap",
  color: (e.vars || e).palette.action.active,
  variants: [{
    props: {
      variant: "filled"
    },
    style: {
      [`&.${Ph.positionStart}&:not(.${Ph.hiddenLabel})`]: {
        marginTop: 16
      }
    }
  }, {
    props: {
      position: "start"
    },
    style: {
      marginRight: 8
    }
  }, {
    props: {
      position: "end"
    },
    style: {
      marginLeft: 8
    }
  }, {
    props: {
      disablePointerEvents: !0
    },
    style: {
      pointerEvents: "none"
    }
  }]
}))), si = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiInputAdornment"
  }), {
    children: i,
    className: s,
    component: a = "div",
    disablePointerEvents: l = !1,
    disableTypography: c = !1,
    position: u,
    variant: d,
    ...p
  } = o, m = Gn() || {};
  let g = d;
  d && m.variant && process.env.NODE_ENV !== "production" && d === m.variant && console.error("MUI: The `InputAdornment` variant infers the variant prop you do not have to provide one."), m && !g && (g = m.variant);
  const h = {
    ...o,
    hiddenLabel: m.hiddenLabel,
    size: m.size,
    disablePointerEvents: l,
    position: u,
    variant: g
  }, v = cj(h);
  return /* @__PURE__ */ f.jsx(_a.Provider, {
    value: null,
    children: /* @__PURE__ */ f.jsx(uj, {
      as: a,
      ownerState: h,
      className: fe(v.root, s),
      ref: n,
      ...p,
      children: typeof i == "string" && !c ? /* @__PURE__ */ f.jsx(Fe, {
        color: "textSecondary",
        children: i
      }) : /* @__PURE__ */ f.jsxs(S.Fragment, {
        children: [u === "start" ? (
          /* notranslate needed while Google Translate will not fix zero-width space issue */
          Ah || (Ah = /* @__PURE__ */ f.jsx("span", {
            className: "notranslate",
            children: "​"
          }))
        ) : null, i]
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (si.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally an `IconButton` or string.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * Disable pointer events on the root.
   * This allows for the content of the adornment to focus the `input` on click.
   * @default false
   */
  disablePointerEvents: r.bool,
  /**
   * If children is a string then disable wrapping in a Typography component.
   * @default false
   */
  disableTypography: r.bool,
  /**
   * The position this adornment should appear relative to the `Input`.
   */
  position: r.oneOf(["end", "start"]).isRequired,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * The variant to use.
   * Note: If you are using the `TextField` component or the `FormControl` component
   * you do not have to set this manually.
   */
  variant: r.oneOf(["filled", "outlined", "standard"])
});
function dj(e) {
  return We("MuiInputLabel", e);
}
_e("MuiInputLabel", ["root", "focused", "disabled", "error", "required", "asterisk", "formControl", "sizeSmall", "shrink", "animated", "standard", "filled", "outlined"]);
const pj = (e) => {
  const {
    classes: t,
    formControl: n,
    size: o,
    shrink: i,
    disableAnimation: s,
    variant: a,
    required: l
  } = e, c = {
    root: ["root", n && "formControl", !s && "animated", i && "shrink", o && o !== "normal" && `size${ue(o)}`, a],
    asterisk: [l && "asterisk"]
  }, u = Ue(c, dj, t);
  return {
    ...t,
    // forward the focused, disabled, etc. classes to the FormLabel
    ...u
  };
}, fj = Q(b0, {
  shouldForwardProp: (e) => Mn(e) || e === "classes",
  name: "MuiInputLabel",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [{
      [`& .${qs.asterisk}`]: t.asterisk
    }, t.root, n.formControl && t.formControl, n.size === "small" && t.sizeSmall, n.shrink && t.shrink, !n.disableAnimation && t.animated, n.focused && t.focused, t[n.variant]];
  }
})($e(({
  theme: e
}) => ({
  display: "block",
  transformOrigin: "top left",
  whiteSpace: "nowrap",
  overflow: "hidden",
  textOverflow: "ellipsis",
  maxWidth: "100%",
  variants: [{
    props: ({
      ownerState: t
    }) => t.formControl,
    style: {
      position: "absolute",
      left: 0,
      top: 0,
      // slight alteration to spec spacing to match visual spec result
      transform: "translate(0, 20px) scale(1)"
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      // Compensation for the `Input.inputSizeSmall` style.
      transform: "translate(0, 17px) scale(1)"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.shrink,
    style: {
      transform: "translate(0, -1.5px) scale(0.75)",
      transformOrigin: "top left",
      maxWidth: "133%"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disableAnimation,
    style: {
      transition: e.transitions.create(["color", "transform", "max-width"], {
        duration: e.transitions.duration.shorter,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      // Chrome's autofill feature gives the input field a yellow background.
      // Since the input field is behind the label in the HTML tree,
      // the input field is drawn last and hides the label with an opaque background color.
      // zIndex: 1 will raise the label above opaque background-colors of input.
      zIndex: 1,
      pointerEvents: "none",
      transform: "translate(12px, 16px) scale(1)",
      maxWidth: "calc(100% - 24px)"
    }
  }, {
    props: {
      variant: "filled",
      size: "small"
    },
    style: {
      transform: "translate(12px, 13px) scale(1)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n
    }) => t === "filled" && n.shrink,
    style: {
      userSelect: "none",
      pointerEvents: "auto",
      transform: "translate(12px, 7px) scale(0.75)",
      maxWidth: "calc(133% - 24px)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n,
      size: o
    }) => t === "filled" && n.shrink && o === "small",
    style: {
      transform: "translate(12px, 4px) scale(0.75)"
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      // see comment above on filled.zIndex
      zIndex: 1,
      pointerEvents: "none",
      transform: "translate(14px, 16px) scale(1)",
      maxWidth: "calc(100% - 24px)"
    }
  }, {
    props: {
      variant: "outlined",
      size: "small"
    },
    style: {
      transform: "translate(14px, 9px) scale(1)"
    }
  }, {
    props: ({
      variant: t,
      ownerState: n
    }) => t === "outlined" && n.shrink,
    style: {
      userSelect: "none",
      pointerEvents: "auto",
      // Theoretically, we should have (8+5)*2/0.75 = 34px
      // but it feels a better when it bleeds a bit on the left, so 32px.
      maxWidth: "calc(133% - 32px)",
      transform: "translate(14px, -9px) scale(0.75)"
    }
  }]
}))), au = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    name: "MuiInputLabel",
    props: t
  }), {
    disableAnimation: i = !1,
    margin: s,
    shrink: a,
    variant: l,
    className: c,
    ...u
  } = o, d = Gn();
  let p = a;
  typeof p > "u" && d && (p = d.filled || d.focused || d.adornedStart);
  const m = fi({
    props: o,
    muiFormControl: d,
    states: ["size", "variant", "required", "focused"]
  }), g = {
    ...o,
    disableAnimation: i,
    formControl: d,
    shrink: p,
    size: m.size,
    variant: m.variant,
    required: m.required,
    focused: m.focused
  }, h = pj(g);
  return /* @__PURE__ */ f.jsx(fj, {
    "data-shrink": p,
    ref: n,
    className: fe(h.root, c),
    ...u,
    ownerState: g,
    classes: h
  });
});
process.env.NODE_ENV !== "production" && (au.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   */
  color: r.oneOfType([r.oneOf(["error", "info", "primary", "secondary", "success", "warning"]), r.string]),
  /**
   * If `true`, the transition animation is disabled.
   * @default false
   */
  disableAnimation: r.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: r.bool,
  /**
   * If `true`, the label is displayed in an error state.
   */
  error: r.bool,
  /**
   * If `true`, the `input` of this label is focused.
   */
  focused: r.bool,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   */
  margin: r.oneOf(["dense"]),
  /**
   * if `true`, the label will indicate that the `input` is required.
   */
  required: r.bool,
  /**
   * If `true`, the label is shrunk.
   */
  shrink: r.bool,
  /**
   * The size of the component.
   * @default 'normal'
   */
  size: r.oneOfType([r.oneOf(["normal", "small"]), r.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * The variant to use.
   */
  variant: r.oneOf(["filled", "outlined", "standard"])
});
function mj(e) {
  return We("MuiLinearProgress", e);
}
_e("MuiLinearProgress", ["root", "colorPrimary", "colorSecondary", "determinate", "indeterminate", "buffer", "query", "dashed", "dashedColorPrimary", "dashedColorSecondary", "bar", "barColorPrimary", "barColorSecondary", "bar1Indeterminate", "bar1Determinate", "bar1Buffer", "bar2Indeterminate", "bar2Buffer"]);
const bp = 4, vp = ko`
  0% {
    left: -35%;
    right: 100%;
  }

  60% {
    left: 100%;
    right: -90%;
  }

  100% {
    left: 100%;
    right: -90%;
  }
`, gj = typeof vp != "string" ? Ko`
        animation: ${vp} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;
      ` : null, yp = ko`
  0% {
    left: -200%;
    right: 100%;
  }

  60% {
    left: 107%;
    right: -8%;
  }

  100% {
    left: 107%;
    right: -8%;
  }
`, hj = typeof yp != "string" ? Ko`
        animation: ${yp} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;
      ` : null, xp = ko`
  0% {
    opacity: 1;
    background-position: 0 -23px;
  }

  60% {
    opacity: 0;
    background-position: 0 -23px;
  }

  100% {
    opacity: 1;
    background-position: -200px -23px;
  }
`, bj = typeof xp != "string" ? Ko`
        animation: ${xp} 3s infinite linear;
      ` : null, vj = (e) => {
  const {
    classes: t,
    variant: n,
    color: o
  } = e, i = {
    root: ["root", `color${ue(o)}`, n],
    dashed: ["dashed", `dashedColor${ue(o)}`],
    bar1: ["bar", `barColor${ue(o)}`, (n === "indeterminate" || n === "query") && "bar1Indeterminate", n === "determinate" && "bar1Determinate", n === "buffer" && "bar1Buffer"],
    bar2: ["bar", n !== "buffer" && `barColor${ue(o)}`, n === "buffer" && `color${ue(o)}`, (n === "indeterminate" || n === "query") && "bar2Indeterminate", n === "buffer" && "bar2Buffer"]
  };
  return Ue(i, mj, t);
}, kf = (e, t) => e.vars ? e.vars.palette.LinearProgress[`${t}Bg`] : e.palette.mode === "light" ? $n(e.palette[t].main, 0.62) : no(e.palette[t].main, 0.5), yj = Q("span", {
  name: "MuiLinearProgress",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`color${ue(n.color)}`], t[n.variant]];
  }
})($e(({
  theme: e
}) => ({
  position: "relative",
  overflow: "hidden",
  display: "block",
  height: 4,
  // Fix Safari's bug during composition of different paint.
  zIndex: 0,
  "@media print": {
    colorAdjust: "exact"
  },
  variants: [...Object.entries(e.palette).filter(wt()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: kf(e, t)
    }
  })), {
    props: ({
      ownerState: t
    }) => t.color === "inherit" && t.variant !== "buffer",
    style: {
      "&::before": {
        content: '""',
        position: "absolute",
        left: 0,
        top: 0,
        right: 0,
        bottom: 0,
        backgroundColor: "currentColor",
        opacity: 0.3
      }
    }
  }, {
    props: {
      variant: "buffer"
    },
    style: {
      backgroundColor: "transparent"
    }
  }, {
    props: {
      variant: "query"
    },
    style: {
      transform: "rotate(180deg)"
    }
  }]
}))), xj = Q("span", {
  name: "MuiLinearProgress",
  slot: "Dashed",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.dashed, t[`dashedColor${ue(n.color)}`]];
  }
})($e(({
  theme: e
}) => ({
  position: "absolute",
  marginTop: 0,
  height: "100%",
  width: "100%",
  backgroundSize: "10px 10px",
  backgroundPosition: "0 -23px",
  variants: [{
    props: {
      color: "inherit"
    },
    style: {
      opacity: 0.3,
      backgroundImage: "radial-gradient(currentColor 0%, currentColor 16%, transparent 42%)"
    }
  }, ...Object.entries(e.palette).filter(wt()).map(([t]) => {
    const n = kf(e, t);
    return {
      props: {
        color: t
      },
      style: {
        backgroundImage: `radial-gradient(${n} 0%, ${n} 16%, transparent 42%)`
      }
    };
  })]
})), bj || {
  // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.
  animation: `${xp} 3s infinite linear`
}), Cj = Q("span", {
  name: "MuiLinearProgress",
  slot: "Bar1",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.bar, t[`barColor${ue(n.color)}`], (n.variant === "indeterminate" || n.variant === "query") && t.bar1Indeterminate, n.variant === "determinate" && t.bar1Determinate, n.variant === "buffer" && t.bar1Buffer];
  }
})($e(({
  theme: e
}) => ({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left",
  variants: [{
    props: {
      color: "inherit"
    },
    style: {
      backgroundColor: "currentColor"
    }
  }, ...Object.entries(e.palette).filter(wt()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      backgroundColor: (e.vars || e).palette[t].main
    }
  })), {
    props: {
      variant: "determinate"
    },
    style: {
      transition: `transform .${bp}s linear`
    }
  }, {
    props: {
      variant: "buffer"
    },
    style: {
      zIndex: 1,
      transition: `transform .${bp}s linear`
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: {
      width: "auto"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: gj || {
      animation: `${vp} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite`
    }
  }]
}))), Sj = Q("span", {
  name: "MuiLinearProgress",
  slot: "Bar2",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.bar, t[`barColor${ue(n.color)}`], (n.variant === "indeterminate" || n.variant === "query") && t.bar2Indeterminate, n.variant === "buffer" && t.bar2Buffer];
  }
})($e(({
  theme: e
}) => ({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left",
  variants: [...Object.entries(e.palette).filter(wt()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      "--LinearProgressBar2-barColor": (e.vars || e).palette[t].main
    }
  })), {
    props: ({
      ownerState: t
    }) => t.variant !== "buffer" && t.color !== "inherit",
    style: {
      backgroundColor: "var(--LinearProgressBar2-barColor, currentColor)"
    }
  }, {
    props: {
      color: "inherit"
    },
    style: {
      opacity: 0.3
    }
  }, ...Object.entries(e.palette).filter(wt()).map(([t]) => ({
    props: {
      color: t,
      variant: "buffer"
    },
    style: {
      backgroundColor: kf(e, t),
      transition: `transform .${bp}s linear`
    }
  })), {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: {
      width: "auto"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.variant === "indeterminate" || t.variant === "query",
    style: hj || {
      animation: `${yp} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite`
    }
  }]
}))), y0 = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiLinearProgress"
  }), {
    className: i,
    color: s = "primary",
    value: a,
    valueBuffer: l,
    variant: c = "indeterminate",
    ...u
  } = o, d = {
    ...o,
    color: s,
    variant: c
  }, p = vj(d), m = Nr(), g = {}, h = {
    bar1: {},
    bar2: {}
  };
  if (c === "determinate" || c === "buffer")
    if (a !== void 0) {
      g["aria-valuenow"] = Math.round(a), g["aria-valuemin"] = 0, g["aria-valuemax"] = 100;
      let v = a - 100;
      m && (v = -v), h.bar1.transform = `translateX(${v}%)`;
    } else process.env.NODE_ENV !== "production" && console.error("MUI: You need to provide a value prop when using the determinate or buffer variant of LinearProgress .");
  if (c === "buffer")
    if (l !== void 0) {
      let v = (l || 0) - 100;
      m && (v = -v), h.bar2.transform = `translateX(${v}%)`;
    } else process.env.NODE_ENV !== "production" && console.error("MUI: You need to provide a valueBuffer prop when using the buffer variant of LinearProgress.");
  return /* @__PURE__ */ f.jsxs(yj, {
    className: fe(p.root, i),
    ownerState: d,
    role: "progressbar",
    ...g,
    ref: n,
    ...u,
    children: [c === "buffer" ? /* @__PURE__ */ f.jsx(xj, {
      className: p.dashed,
      ownerState: d
    }) : null, /* @__PURE__ */ f.jsx(Cj, {
      className: p.bar1,
      ownerState: d,
      style: h.bar1
    }), c === "determinate" ? null : /* @__PURE__ */ f.jsx(Sj, {
      className: p.bar2,
      ownerState: d,
      style: h.bar2
    })]
  });
});
process.env.NODE_ENV !== "production" && (y0.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: r.oneOfType([r.oneOf(["inherit", "primary", "secondary"]), r.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * The value of the progress indicator for the determinate and buffer variants.
   * Value between 0 and 100.
   */
  value: r.number,
  /**
   * The value for the buffer variant.
   * Value between 0 and 100.
   */
  valueBuffer: r.number,
  /**
   * The variant to use.
   * Use indeterminate or query when there is no progress value.
   * @default 'indeterminate'
   */
  variant: r.oneOf(["buffer", "determinate", "indeterminate", "query"])
});
const ar = /* @__PURE__ */ S.createContext({});
process.env.NODE_ENV !== "production" && (ar.displayName = "ListContext");
function wj(e) {
  return We("MuiList", e);
}
_e("MuiList", ["root", "padding", "dense", "subheader"]);
const Tj = (e) => {
  const {
    classes: t,
    disablePadding: n,
    dense: o,
    subheader: i
  } = e;
  return Ue({
    root: ["root", !n && "padding", o && "dense", i && "subheader"]
  }, wj, t);
}, Ij = Q("ul", {
  name: "MuiList",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, !n.disablePadding && t.padding, n.dense && t.dense, n.subheader && t.subheader];
  }
})({
  listStyle: "none",
  margin: 0,
  padding: 0,
  position: "relative",
  variants: [{
    props: ({
      ownerState: e
    }) => !e.disablePadding,
    style: {
      paddingTop: 8,
      paddingBottom: 8
    }
  }, {
    props: ({
      ownerState: e
    }) => e.subheader,
    style: {
      paddingTop: 0
    }
  }]
}), Ff = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiList"
  }), {
    children: i,
    className: s,
    component: a = "ul",
    dense: l = !1,
    disablePadding: c = !1,
    subheader: u,
    ...d
  } = o, p = S.useMemo(() => ({
    dense: l
  }), [l]), m = {
    ...o,
    component: a,
    dense: l,
    disablePadding: c
  }, g = Tj(m);
  return /* @__PURE__ */ f.jsx(ar.Provider, {
    value: p,
    children: /* @__PURE__ */ f.jsxs(Ij, {
      as: a,
      className: fe(g.root, s),
      ref: n,
      ownerState: m,
      ...d,
      children: [u, i]
    })
  });
});
process.env.NODE_ENV !== "production" && (Ff.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used for
   * the list and list items.
   * The prop is available to descendant components as the `dense` context.
   * @default false
   */
  dense: r.bool,
  /**
   * If `true`, vertical padding is removed from the list.
   * @default false
   */
  disablePadding: r.bool,
  /**
   * The content of the subheader, normally `ListSubheader`.
   */
  subheader: r.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object])
});
function Rj(e) {
  return We("MuiListItem", e);
}
_e("MuiListItem", ["root", "container", "dense", "alignItemsFlexStart", "divider", "gutters", "padding", "secondaryAction"]);
const Oj = _e("MuiListItemButton", ["root", "focusVisible", "dense", "alignItemsFlexStart", "disabled", "divider", "gutters", "selected"]);
function Ej(e) {
  return We("MuiListItemSecondaryAction", e);
}
_e("MuiListItemSecondaryAction", ["root", "disableGutters"]);
const Pj = (e) => {
  const {
    disableGutters: t,
    classes: n
  } = e;
  return Ue({
    root: ["root", t && "disableGutters"]
  }, Ej, n);
}, Aj = Q("div", {
  name: "MuiListItemSecondaryAction",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.disableGutters && t.disableGutters];
  }
})({
  position: "absolute",
  right: 16,
  top: "50%",
  transform: "translateY(-50%)",
  variants: [{
    props: ({
      ownerState: e
    }) => e.disableGutters,
    style: {
      right: 0
    }
  }]
}), Nf = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiListItemSecondaryAction"
  }), {
    className: i,
    ...s
  } = o, a = S.useContext(ar), l = {
    ...o,
    disableGutters: a.disableGutters
  }, c = Pj(l);
  return /* @__PURE__ */ f.jsx(Aj, {
    className: fe(c.root, i),
    ownerState: l,
    ref: n,
    ...s
  });
});
process.env.NODE_ENV !== "production" && (Nf.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally an `IconButton` or selection control.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object])
});
Nf.muiName = "ListItemSecondaryAction";
const Dj = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, n.dense && t.dense, n.alignItems === "flex-start" && t.alignItemsFlexStart, n.divider && t.divider, !n.disableGutters && t.gutters, !n.disablePadding && t.padding, n.hasSecondaryAction && t.secondaryAction];
}, Mj = (e) => {
  const {
    alignItems: t,
    classes: n,
    dense: o,
    disableGutters: i,
    disablePadding: s,
    divider: a,
    hasSecondaryAction: l
  } = e;
  return Ue({
    root: ["root", o && "dense", !i && "gutters", !s && "padding", a && "divider", t === "flex-start" && "alignItemsFlexStart", l && "secondaryAction"],
    container: ["container"]
  }, Rj, n);
}, jj = Q("div", {
  name: "MuiListItem",
  slot: "Root",
  overridesResolver: Dj
})($e(({
  theme: e
}) => ({
  display: "flex",
  justifyContent: "flex-start",
  alignItems: "center",
  position: "relative",
  textDecoration: "none",
  width: "100%",
  boxSizing: "border-box",
  textAlign: "left",
  variants: [{
    props: ({
      ownerState: t
    }) => !t.disablePadding,
    style: {
      paddingTop: 8,
      paddingBottom: 8
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disablePadding && t.dense,
    style: {
      paddingTop: 4,
      paddingBottom: 4
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disablePadding && !t.disableGutters,
    style: {
      paddingLeft: 16,
      paddingRight: 16
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.disablePadding && !!t.secondaryAction,
    style: {
      // Add some space to avoid collision as `ListItemSecondaryAction`
      // is absolutely positioned.
      paddingRight: 48
    }
  }, {
    props: ({
      ownerState: t
    }) => !!t.secondaryAction,
    style: {
      [`& > .${Oj.root}`]: {
        paddingRight: 48
      }
    }
  }, {
    props: {
      alignItems: "flex-start"
    },
    style: {
      alignItems: "flex-start"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.divider,
    style: {
      borderBottom: `1px solid ${(e.vars || e).palette.divider}`,
      backgroundClip: "padding-box"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.button,
    style: {
      transition: e.transitions.create("background-color", {
        duration: e.transitions.duration.shortest
      }),
      "&:hover": {
        textDecoration: "none",
        backgroundColor: (e.vars || e).palette.action.hover,
        // Reset on touch devices, it doesn't add specificity
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.hasSecondaryAction,
    style: {
      // Add some space to avoid collision as `ListItemSecondaryAction`
      // is absolutely positioned.
      paddingRight: 48
    }
  }]
}))), kj = Q("li", {
  name: "MuiListItem",
  slot: "Container",
  overridesResolver: (e, t) => t.container
})({
  position: "relative"
}), x0 = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiListItem"
  }), {
    alignItems: i = "center",
    children: s,
    className: a,
    component: l,
    components: c = {},
    componentsProps: u = {},
    ContainerComponent: d = "li",
    ContainerProps: {
      className: p,
      ...m
    } = {},
    dense: g = !1,
    disableGutters: h = !1,
    disablePadding: v = !1,
    divider: b = !1,
    secondaryAction: y,
    slotProps: C = {},
    slots: x = {},
    ...T
  } = o, w = S.useContext(ar), R = S.useMemo(() => ({
    dense: g || w.dense || !1,
    alignItems: i,
    disableGutters: h
  }), [i, w.dense, g, h]), E = S.useRef(null), O = S.Children.toArray(s), I = O.length && Hs(O[O.length - 1], ["ListItemSecondaryAction"]), P = {
    ...o,
    alignItems: i,
    dense: R.dense,
    disableGutters: h,
    disablePadding: v,
    divider: b,
    hasSecondaryAction: I
  }, A = Mj(P), D = Yt(E, n), k = x.root || c.Root || jj, M = C.root || u.root || {}, F = {
    className: fe(A.root, M.className, a),
    ...T
  };
  let N = l || "li";
  return I ? (N = !F.component && !l ? "div" : N, d === "li" && (N === "li" ? N = "div" : F.component === "li" && (F.component = "div")), /* @__PURE__ */ f.jsx(ar.Provider, {
    value: R,
    children: /* @__PURE__ */ f.jsxs(kj, {
      as: d,
      className: fe(A.container, p),
      ref: D,
      ownerState: P,
      ...m,
      children: [/* @__PURE__ */ f.jsx(k, {
        ...M,
        ...!sr(k) && {
          as: N,
          ownerState: {
            ...P,
            ...M.ownerState
          }
        },
        ...F,
        children: O
      }), O.pop()]
    })
  })) : /* @__PURE__ */ f.jsx(ar.Provider, {
    value: R,
    children: /* @__PURE__ */ f.jsxs(k, {
      ...M,
      as: N,
      ref: D,
      ...!sr(k) && {
        ownerState: {
          ...P,
          ...M.ownerState
        }
      },
      ...F,
      children: [O, y && /* @__PURE__ */ f.jsx(Nf, {
        children: y
      })]
    })
  });
});
process.env.NODE_ENV !== "production" && (x0.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Defines the `align-items` style property.
   * @default 'center'
   */
  alignItems: r.oneOf(["center", "flex-start"]),
  /**
   * The content of the component if a `ListItemSecondaryAction` is used it must
   * be the last child.
   */
  children: oo(r.node, (e) => {
    const t = S.Children.toArray(e.children);
    let n = -1;
    for (let o = t.length - 1; o >= 0; o -= 1) {
      const i = t[o];
      if (Hs(i, ["ListItemSecondaryAction"])) {
        n = o;
        break;
      }
    }
    return n !== -1 && n !== t.length - 1 ? new Error("MUI: You used an element after ListItemSecondaryAction. For ListItem to detect that it has a secondary action you must pass it as the last child to ListItem.") : null;
  }),
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * The components used for each slot inside.
   *
   * @deprecated Use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  components: r.shape({
    Root: r.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated Use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   * @default {}
   */
  componentsProps: r.shape({
    root: r.object
  }),
  /**
   * The container component used when a `ListItemSecondaryAction` is the last child.
   * @default 'li'
   * @deprecated Use the `component` or `slots.root` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  ContainerComponent: Fa,
  /**
   * Props applied to the container component if used.
   * @default {}
   * @deprecated Use the `slotProps.root` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  ContainerProps: r.object,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used.
   * The prop defaults to the value inherited from the parent List component.
   * @default false
   */
  dense: r.bool,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: r.bool,
  /**
   * If `true`, all padding is removed.
   * @default false
   */
  disablePadding: r.bool,
  /**
   * If `true`, a 1px light border is added to the bottom of the list item.
   * @default false
   */
  divider: r.bool,
  /**
   * The element to display at the end of ListItem.
   */
  secondaryAction: r.node,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @default {}
   */
  slotProps: r.shape({
    root: r.object
  }),
  /**
   * The components used for each slot inside.
   *
   * @default {}
   */
  slots: r.shape({
    root: r.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object])
});
function Fj(e) {
  return We("MuiListItemIcon", e);
}
const Dh = _e("MuiListItemIcon", ["root", "alignItemsFlexStart"]), Nj = (e) => {
  const {
    alignItems: t,
    classes: n
  } = e;
  return Ue({
    root: ["root", t === "flex-start" && "alignItemsFlexStart"]
  }, Fj, n);
}, Vj = Q("div", {
  name: "MuiListItemIcon",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.alignItems === "flex-start" && t.alignItemsFlexStart];
  }
})($e(({
  theme: e
}) => ({
  minWidth: 56,
  color: (e.vars || e).palette.action.active,
  flexShrink: 0,
  display: "inline-flex",
  variants: [{
    props: {
      alignItems: "flex-start"
    },
    style: {
      marginTop: 8
    }
  }]
}))), C0 = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiListItemIcon"
  }), {
    className: i,
    ...s
  } = o, a = S.useContext(ar), l = {
    ...o,
    alignItems: a.alignItems
  }, c = Nj(l);
  return /* @__PURE__ */ f.jsx(Vj, {
    className: fe(c.root, i),
    ownerState: l,
    ref: n,
    ...s
  });
});
process.env.NODE_ENV !== "production" && (C0.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally `Icon`, `SvgIcon`,
   * or a `@mui/icons-material` SVG icon element.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object])
});
const Mh = _e("MuiListItemText", ["root", "multiline", "dense", "inset", "primary", "secondary"]);
function gd(e, t, n) {
  return e === t ? e.firstChild : t && t.nextElementSibling ? t.nextElementSibling : n ? null : e.firstChild;
}
function jh(e, t, n) {
  return e === t ? n ? e.firstChild : e.lastChild : t && t.previousElementSibling ? t.previousElementSibling : n ? null : e.lastChild;
}
function S0(e, t) {
  if (t === void 0)
    return !0;
  let n = e.innerText;
  return n === void 0 && (n = e.textContent), n = n.trim().toLowerCase(), n.length === 0 ? !1 : t.repeating ? n[0] === t.keys[0] : n.startsWith(t.keys.join(""));
}
function Is(e, t, n, o, i, s) {
  let a = !1, l = i(e, t, t ? n : !1);
  for (; l; ) {
    if (l === e.firstChild) {
      if (a)
        return !1;
      a = !0;
    }
    const c = o ? !1 : l.disabled || l.getAttribute("aria-disabled") === "true";
    if (!l.hasAttribute("tabindex") || !S0(l, s) || c)
      l = i(e, l, n);
    else
      return l.focus(), !0;
  }
  return !1;
}
const lu = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const {
    // private
    // eslint-disable-next-line react/prop-types
    actions: o,
    autoFocus: i = !1,
    autoFocusItem: s = !1,
    children: a,
    className: l,
    disabledItemsFocusable: c = !1,
    disableListWrap: u = !1,
    onKeyDown: d,
    variant: p = "selectedMenu",
    ...m
  } = t, g = S.useRef(null), h = S.useRef({
    keys: [],
    repeating: !0,
    previousKeyMatched: !0,
    lastTime: null
  });
  to(() => {
    i && g.current.focus();
  }, [i]), S.useImperativeHandle(o, () => ({
    adjustStyleForScrollbar: (x, {
      direction: T
    }) => {
      const w = !g.current.style.width;
      if (x.clientHeight < g.current.clientHeight && w) {
        const R = `${Py(dn(x))}px`;
        g.current.style[T === "rtl" ? "paddingLeft" : "paddingRight"] = R, g.current.style.width = `calc(100% + ${R})`;
      }
      return g.current;
    }
  }), []);
  const v = (x) => {
    const T = g.current, w = x.key;
    if (x.ctrlKey || x.metaKey || x.altKey) {
      d && d(x);
      return;
    }
    const E = dn(T).activeElement;
    if (w === "ArrowDown")
      x.preventDefault(), Is(T, E, u, c, gd);
    else if (w === "ArrowUp")
      x.preventDefault(), Is(T, E, u, c, jh);
    else if (w === "Home")
      x.preventDefault(), Is(T, null, u, c, gd);
    else if (w === "End")
      x.preventDefault(), Is(T, null, u, c, jh);
    else if (w.length === 1) {
      const O = h.current, I = w.toLowerCase(), P = performance.now();
      O.keys.length > 0 && (P - O.lastTime > 500 ? (O.keys = [], O.repeating = !0, O.previousKeyMatched = !0) : O.repeating && I !== O.keys[0] && (O.repeating = !1)), O.lastTime = P, O.keys.push(I);
      const A = E && !O.repeating && S0(E, O);
      O.previousKeyMatched && (A || Is(T, E, !1, c, gd, O)) ? x.preventDefault() : O.previousKeyMatched = !1;
    }
    d && d(x);
  }, b = Yt(g, n);
  let y = -1;
  S.Children.forEach(a, (x, T) => {
    if (!/* @__PURE__ */ S.isValidElement(x)) {
      y === T && (y += 1, y >= a.length && (y = -1));
      return;
    }
    process.env.NODE_ENV !== "production" && qc.isFragment(x) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), x.props.disabled || (p === "selectedMenu" && x.props.selected || y === -1) && (y = T), y === T && (x.props.disabled || x.props.muiSkipListHighlight || x.type.muiSkipListHighlight) && (y += 1, y >= a.length && (y = -1));
  });
  const C = S.Children.map(a, (x, T) => {
    if (T === y) {
      const w = {};
      return s && (w.autoFocus = !0), x.props.tabIndex === void 0 && p === "selectedMenu" && (w.tabIndex = 0), /* @__PURE__ */ S.cloneElement(x, w);
    }
    return x;
  });
  return /* @__PURE__ */ f.jsx(Ff, {
    role: "menu",
    ref: b,
    className: l,
    onKeyDown: v,
    tabIndex: i ? 0 : -1,
    ...m,
    children: C
  });
});
process.env.NODE_ENV !== "production" && (lu.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, will focus the `[role="menu"]` container and move into tab order.
   * @default false
   */
  autoFocus: r.bool,
  /**
   * If `true`, will focus the first menuitem if `variant="menu"` or selected item
   * if `variant="selectedMenu"`.
   * @default false
   */
  autoFocusItem: r.bool,
  /**
   * MenuList contents, normally `MenuItem`s.
   */
  children: r.node,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * If `true`, will allow focus on disabled items.
   * @default false
   */
  disabledItemsFocusable: r.bool,
  /**
   * If `true`, the menu items will not wrap focus.
   * @default false
   */
  disableListWrap: r.bool,
  /**
   * @ignore
   */
  onKeyDown: r.func,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus
   * and the vertical alignment relative to the anchor element.
   * @default 'selectedMenu'
   */
  variant: r.oneOf(["menu", "selectedMenu"])
});
function $j(e) {
  return We("MuiPopover", e);
}
_e("MuiPopover", ["root", "paper"]);
function kh(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.height / 2 : t === "bottom" && (n = e.height), n;
}
function Fh(e, t) {
  let n = 0;
  return typeof t == "number" ? n = t : t === "center" ? n = e.width / 2 : t === "right" && (n = e.width), n;
}
function Nh(e) {
  return [e.horizontal, e.vertical].map((t) => typeof t == "number" ? `${t}px` : t).join(" ");
}
function Bl(e) {
  return typeof e == "function" ? e() : e;
}
const Lj = (e) => {
  const {
    classes: t
  } = e;
  return Ue({
    root: ["root"],
    paper: ["paper"]
  }, $j, t);
}, _j = Q(Ba, {
  name: "MuiPopover",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), w0 = Q(yn, {
  name: "MuiPopover",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  position: "absolute",
  overflowY: "auto",
  overflowX: "hidden",
  // So we see the popover when it's empty.
  // It's most likely on issue on userland.
  minWidth: 16,
  minHeight: 16,
  maxWidth: "calc(100% - 32px)",
  maxHeight: "calc(100% - 32px)",
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), Vf = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiPopover"
  }), {
    action: i,
    anchorEl: s,
    anchorOrigin: a = {
      vertical: "top",
      horizontal: "left"
    },
    anchorPosition: l,
    anchorReference: c = "anchorEl",
    children: u,
    className: d,
    container: p,
    elevation: m = 8,
    marginThreshold: g = 16,
    open: h,
    PaperProps: v = {},
    slots: b = {},
    slotProps: y = {},
    transformOrigin: C = {
      vertical: "top",
      horizontal: "left"
    },
    TransitionComponent: x = Mr,
    transitionDuration: T = "auto",
    TransitionProps: {
      onEntering: w,
      ...R
    } = {},
    disableScrollLock: E = !1,
    ...O
  } = o, I = (y == null ? void 0 : y.paper) ?? v, P = S.useRef(), A = {
    ...o,
    anchorOrigin: a,
    anchorReference: c,
    elevation: m,
    marginThreshold: g,
    externalPaperSlotProps: I,
    transformOrigin: C,
    TransitionComponent: x,
    transitionDuration: T,
    TransitionProps: R
  }, D = Lj(A), k = S.useCallback(() => {
    if (c === "anchorPosition")
      return process.env.NODE_ENV !== "production" && (l || console.error('MUI: You need to provide a `anchorPosition` prop when using <Popover anchorReference="anchorPosition" />.')), l;
    const re = Bl(s), ne = re && re.nodeType === 1 ? re : dn(P.current).body, z = ne.getBoundingClientRect();
    if (process.env.NODE_ENV !== "production") {
      const q = ne.getBoundingClientRect();
      process.env.NODE_ENV !== "test" && q.top === 0 && q.left === 0 && q.right === 0 && q.bottom === 0 && console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
    }
    return {
      top: z.top + kh(z, a.vertical),
      left: z.left + Fh(z, a.horizontal)
    };
  }, [s, a.horizontal, a.vertical, l, c]), M = S.useCallback((re) => ({
    vertical: kh(re, C.vertical),
    horizontal: Fh(re, C.horizontal)
  }), [C.horizontal, C.vertical]), F = S.useCallback((re) => {
    const ne = {
      width: re.offsetWidth,
      height: re.offsetHeight
    }, z = M(ne);
    if (c === "none")
      return {
        top: null,
        left: null,
        transformOrigin: Nh(z)
      };
    const q = k();
    let _ = q.top - z.vertical, oe = q.left - z.horizontal;
    const te = _ + ne.height, se = oe + ne.width, ae = dr(Bl(s)), me = ae.innerHeight - g, ye = ae.innerWidth - g;
    if (g !== null && _ < g) {
      const Te = _ - g;
      _ -= Te, z.vertical += Te;
    } else if (g !== null && te > me) {
      const Te = te - me;
      _ -= Te, z.vertical += Te;
    }
    if (process.env.NODE_ENV !== "production" && ne.height > me && ne.height && me && console.error(["MUI: The popover component is too tall.", `Some part of it can not be seen on the screen (${ne.height - me}px).`, "Please consider adding a `max-height` to improve the user-experience."].join(`
`)), g !== null && oe < g) {
      const Te = oe - g;
      oe -= Te, z.horizontal += Te;
    } else if (se > ye) {
      const Te = se - ye;
      oe -= Te, z.horizontal += Te;
    }
    return {
      top: `${Math.round(_)}px`,
      left: `${Math.round(oe)}px`,
      transformOrigin: Nh(z)
    };
  }, [s, c, k, M, g]), [N, W] = S.useState(h), H = S.useCallback(() => {
    const re = P.current;
    if (!re)
      return;
    const ne = F(re);
    ne.top !== null && re.style.setProperty("top", ne.top), ne.left !== null && (re.style.left = ne.left), re.style.transformOrigin = ne.transformOrigin, W(!0);
  }, [F]);
  S.useEffect(() => (E && window.addEventListener("scroll", H), () => window.removeEventListener("scroll", H)), [s, E, H]);
  const B = (re, ne) => {
    w && w(re, ne), H();
  }, j = () => {
    W(!1);
  };
  S.useEffect(() => {
    h && H();
  }), S.useImperativeHandle(i, () => h ? {
    updatePosition: () => {
      H();
    }
  } : null, [h, H]), S.useEffect(() => {
    if (!h)
      return;
    const re = is(() => {
      H();
    }), ne = dr(s);
    return ne.addEventListener("resize", re), () => {
      re.clear(), ne.removeEventListener("resize", re);
    };
  }, [s, h, H]);
  let L = T;
  T === "auto" && !x.muiSupportAuto && (L = void 0);
  const ee = p || (s ? dn(Bl(s)).body : void 0), Y = {
    slots: b,
    slotProps: {
      ...y,
      paper: I
    }
  }, [$, U] = nn("paper", {
    elementType: w0,
    externalForwardedProps: Y,
    additionalProps: {
      elevation: m,
      className: fe(D.paper, I == null ? void 0 : I.className),
      style: N ? I.style : {
        ...I.style,
        opacity: 0
      }
    },
    ownerState: A
  }), [X, {
    slotProps: Z,
    ...G
  }] = nn("root", {
    elementType: _j,
    externalForwardedProps: Y,
    additionalProps: {
      slotProps: {
        backdrop: {
          invisible: !0
        }
      },
      container: ee,
      open: h
    },
    ownerState: A,
    className: fe(D.root, d)
  }), K = Yt(P, U.ref);
  return /* @__PURE__ */ f.jsx(X, {
    ...G,
    ...!sr(X) && {
      slotProps: Z,
      disableScrollLock: E
    },
    ...O,
    ref: n,
    children: /* @__PURE__ */ f.jsx(x, {
      appear: !0,
      in: h,
      onEntering: B,
      onExited: j,
      timeout: L,
      ...R,
      children: /* @__PURE__ */ f.jsx($, {
        ...U,
        ref: K,
        children: u
      })
    })
  });
});
process.env.NODE_ENV !== "production" && (Vf.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * A ref for imperative actions.
   * It currently only supports updatePosition() action.
   */
  action: In,
  /**
   * An HTML element, [PopoverVirtualElement](https://mui.com/material-ui/react-popover/#virtual-element),
   * or a function that returns either.
   * It's used to set the position of the popover.
   */
  anchorEl: oo(r.oneOfType([ur, r.func]), (e) => {
    if (e.open && (!e.anchorReference || e.anchorReference === "anchorEl")) {
      const t = Bl(e.anchorEl);
      if (t && t.nodeType === 1) {
        const n = t.getBoundingClientRect();
        if (process.env.NODE_ENV !== "test" && n.top === 0 && n.left === 0 && n.right === 0 && n.bottom === 0)
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join(`
`));
      } else
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", `It should be an Element or PopoverVirtualElement instance but it's \`${t}\` instead.`].join(`
`));
    }
    return null;
  }),
  /**
   * This is the point on the anchor where the popover's
   * `anchorEl` will attach to. This is not used when the
   * anchorReference is 'anchorPosition'.
   *
   * Options:
   * vertical: [top, center, bottom];
   * horizontal: [left, center, right].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  anchorOrigin: r.shape({
    horizontal: r.oneOfType([r.oneOf(["center", "left", "right"]), r.number]).isRequired,
    vertical: r.oneOfType([r.oneOf(["bottom", "center", "top"]), r.number]).isRequired
  }),
  /**
   * This is the position that may be used to set the position of the popover.
   * The coordinates are relative to the application's client area.
   */
  anchorPosition: r.shape({
    left: r.number.isRequired,
    top: r.number.isRequired
  }),
  /**
   * This determines which anchor prop to refer to when setting
   * the position of the popover.
   * @default 'anchorEl'
   */
  anchorReference: r.oneOf(["anchorEl", "anchorPosition", "none"]),
  /**
   * A backdrop component. This prop enables custom backdrop rendering.
   * @deprecated Use `slotProps.root.slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.
   * Use the `slotProps.root.slots.backdrop` prop to make your application ready for the next version of Material UI.
   * @default styled(Backdrop, {
   *   name: 'MuiModal',
   *   slot: 'Backdrop',
   *   overridesResolver: (props, styles) => {
   *     return styles.backdrop;
   *   },
   * })({
   *   zIndex: -1,
   * })
   */
  BackdropComponent: r.elementType,
  /**
   * Props applied to the [`Backdrop`](/material-ui/api/backdrop/) element.
   * @deprecated Use `slotProps.root.slotProps.backdrop` instead.
   */
  BackdropProps: r.object,
  /**
   * The content of the component.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * An HTML element, component instance, or function that returns either.
   * The `container` will passed to the Modal component.
   *
   * By default, it uses the body of the anchorEl's top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: r.oneOfType([ur, r.func]),
  /**
   * Disable the scroll lock behavior.
   * @default false
   */
  disableScrollLock: r.bool,
  /**
   * The elevation of the popover.
   * @default 8
   */
  elevation: wr,
  /**
   * Specifies how close to the edge of the window the popover can appear.
   * If null, the popover will not be constrained by the window.
   * @default 16
   */
  marginThreshold: r.number,
  /**
   * Callback fired when the component requests to be closed.
   * The `reason` parameter can optionally be used to control the response to `onClose`.
   */
  onClose: r.func,
  /**
   * If `true`, the component is shown.
   */
  open: r.bool.isRequired,
  /**
   * Props applied to the [`Paper`](https://mui.com/material-ui/api/paper/) element.
   *
   * This prop is an alias for `slotProps.paper` and will be overriden by it if both are used.
   * @deprecated Use `slotProps.paper` instead.
   *
   * @default {}
   */
  PaperProps: r.shape({
    component: Fa
  }),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: r.shape({
    paper: r.oneOfType([r.func, r.object]),
    root: r.oneOfType([r.func, r.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: r.shape({
    paper: r.elementType,
    root: r.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * This is the point on the popover which
   * will attach to the anchor's origin.
   *
   * Options:
   * vertical: [top, center, bottom, x(px)];
   * horizontal: [left, center, right, x(px)].
   * @default {
   *   vertical: 'top',
   *   horizontal: 'left',
   * }
   */
  transformOrigin: r.shape({
    horizontal: r.oneOfType([r.oneOf(["center", "left", "right"]), r.number]).isRequired,
    vertical: r.oneOfType([r.oneOf(["bottom", "center", "top"]), r.number]).isRequired
  }),
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Grow
   */
  TransitionComponent: r.elementType,
  /**
   * Set to 'auto' to automatically calculate transition time based on height.
   * @default 'auto'
   */
  transitionDuration: r.oneOfType([r.oneOf(["auto"]), r.number, r.shape({
    appear: r.number,
    enter: r.number,
    exit: r.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @default {}
   */
  TransitionProps: r.object
});
function Bj(e) {
  return We("MuiMenu", e);
}
_e("MuiMenu", ["root", "paper", "list"]);
const zj = {
  vertical: "top",
  horizontal: "right"
}, Wj = {
  vertical: "top",
  horizontal: "left"
}, Hj = (e) => {
  const {
    classes: t
  } = e;
  return Ue({
    root: ["root"],
    paper: ["paper"],
    list: ["list"]
  }, Bj, t);
}, Gj = Q(Vf, {
  shouldForwardProp: (e) => Mn(e) || e === "classes",
  name: "MuiMenu",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), Uj = Q(w0, {
  name: "MuiMenu",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  // specZ: The maximum height of a simple menu should be one or more rows less than the view
  // height. This ensures a tappable area outside of the simple menu with which to dismiss
  // the menu.
  maxHeight: "calc(100% - 96px)",
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch"
}), Xj = Q(lu, {
  name: "MuiMenu",
  slot: "List",
  overridesResolver: (e, t) => t.list
})({
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0
}), Lr = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiMenu"
  }), {
    autoFocus: i = !0,
    children: s,
    className: a,
    disableAutoFocusItem: l = !1,
    MenuListProps: c = {},
    onClose: u,
    open: d,
    PaperProps: p = {},
    PopoverClasses: m,
    transitionDuration: g = "auto",
    TransitionProps: {
      onEntering: h,
      ...v
    } = {},
    variant: b = "selectedMenu",
    slots: y = {},
    slotProps: C = {},
    ...x
  } = o, T = Nr(), w = {
    ...o,
    autoFocus: i,
    disableAutoFocusItem: l,
    MenuListProps: c,
    onEntering: h,
    PaperProps: p,
    transitionDuration: g,
    TransitionProps: v,
    variant: b
  }, R = Hj(w), E = i && !l && d, O = S.useRef(null), I = (N, W) => {
    O.current && O.current.adjustStyleForScrollbar(N, {
      direction: T ? "rtl" : "ltr"
    }), h && h(N, W);
  }, P = (N) => {
    N.key === "Tab" && (N.preventDefault(), u && u(N, "tabKeyDown"));
  };
  let A = -1;
  S.Children.map(s, (N, W) => {
    /* @__PURE__ */ S.isValidElement(N) && (process.env.NODE_ENV !== "production" && qc.isFragment(N) && console.error(["MUI: The Menu component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`)), N.props.disabled || (b === "selectedMenu" && N.props.selected || A === -1) && (A = W));
  });
  const D = y.paper ?? Uj, k = C.paper ?? p, M = Sn({
    elementType: y.root,
    externalSlotProps: C.root,
    ownerState: w,
    className: [R.root, a]
  }), F = Sn({
    elementType: D,
    externalSlotProps: k,
    ownerState: w,
    className: R.paper
  });
  return /* @__PURE__ */ f.jsx(Gj, {
    onClose: u,
    anchorOrigin: {
      vertical: "bottom",
      horizontal: T ? "right" : "left"
    },
    transformOrigin: T ? zj : Wj,
    slots: {
      paper: D,
      root: y.root
    },
    slotProps: {
      root: M,
      paper: F
    },
    open: d,
    ref: n,
    transitionDuration: g,
    TransitionProps: {
      onEntering: I,
      ...v
    },
    ownerState: w,
    ...x,
    classes: m,
    children: /* @__PURE__ */ f.jsx(Xj, {
      onKeyDown: P,
      actions: O,
      autoFocus: i && (A === -1 || l),
      autoFocusItem: E,
      variant: b,
      ...c,
      className: fe(R.list, c.className),
      children: s
    })
  });
});
process.env.NODE_ENV !== "production" && (Lr.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * An HTML element, or a function that returns one.
   * It's used to set the position of the menu.
   */
  anchorEl: r.oneOfType([ur, r.func]),
  /**
   * If `true` (Default) will focus the `[role="menu"]` if no focusable child is found. Disabled
   * children are not focusable. If you set this prop to `false` focus will be placed
   * on the parent modal container. This has severe accessibility implications
   * and should only be considered if you manage focus otherwise.
   * @default true
   */
  autoFocus: r.bool,
  /**
   * Menu contents, normally `MenuItem`s.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * When opening the menu will not focus the active item but the `[role="menu"]`
   * unless `autoFocus` is also set to `false`. Not using the default means not
   * following WAI-ARIA authoring practices. Please be considerate about possible
   * accessibility implications.
   * @default false
   */
  disableAutoFocusItem: r.bool,
  /**
   * Props applied to the [`MenuList`](https://mui.com/material-ui/api/menu-list/) element.
   * @default {}
   */
  MenuListProps: r.object,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {object} event The event source of the callback.
   * @param {string} reason Can be: `"escapeKeyDown"`, `"backdropClick"`, `"tabKeyDown"`.
   */
  onClose: r.func,
  /**
   * If `true`, the component is shown.
   */
  open: r.bool.isRequired,
  /**
   * @ignore
   */
  PaperProps: r.object,
  /**
   * `classes` prop applied to the [`Popover`](https://mui.com/material-ui/api/popover/) element.
   */
  PopoverClasses: r.object,
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: r.shape({
    paper: r.oneOfType([r.func, r.object]),
    root: r.oneOfType([r.func, r.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: r.shape({
    paper: r.elementType,
    root: r.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * The length of the transition in `ms`, or 'auto'
   * @default 'auto'
   */
  transitionDuration: r.oneOfType([r.oneOf(["auto"]), r.number, r.shape({
    appear: r.number,
    enter: r.number,
    exit: r.number
  })]),
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   * @default {}
   */
  TransitionProps: r.object,
  /**
   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.
   * @default 'selectedMenu'
   */
  variant: r.oneOf(["menu", "selectedMenu"])
});
function Yj(e) {
  return We("MuiMenuItem", e);
}
const Rs = _e("MuiMenuItem", ["root", "focusVisible", "dense", "disabled", "divider", "gutters", "selected"]), Zj = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, n.dense && t.dense, n.divider && t.divider, !n.disableGutters && t.gutters];
}, qj = (e) => {
  const {
    disabled: t,
    dense: n,
    divider: o,
    disableGutters: i,
    selected: s,
    classes: a
  } = e, c = Ue({
    root: ["root", n && "dense", t && "disabled", !i && "gutters", o && "divider", s && "selected"]
  }, Yj, a);
  return {
    ...a,
    ...c
  };
}, Jj = Q(yo, {
  shouldForwardProp: (e) => Mn(e) || e === "classes",
  name: "MuiMenuItem",
  slot: "Root",
  overridesResolver: Zj
})($e(({
  theme: e
}) => ({
  ...e.typography.body1,
  display: "flex",
  justifyContent: "flex-start",
  alignItems: "center",
  position: "relative",
  textDecoration: "none",
  minHeight: 48,
  paddingTop: 6,
  paddingBottom: 6,
  boxSizing: "border-box",
  whiteSpace: "nowrap",
  "&:hover": {
    textDecoration: "none",
    backgroundColor: (e.vars || e).palette.action.hover,
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  [`&.${Rs.selected}`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : ze(e.palette.primary.main, e.palette.action.selectedOpacity),
    [`&.${Rs.focusVisible}`]: {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : ze(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
    }
  },
  [`&.${Rs.selected}:hover`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : ze(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : ze(e.palette.primary.main, e.palette.action.selectedOpacity)
    }
  },
  [`&.${Rs.focusVisible}`]: {
    backgroundColor: (e.vars || e).palette.action.focus
  },
  [`&.${Rs.disabled}`]: {
    opacity: (e.vars || e).palette.action.disabledOpacity
  },
  [`& + .${Rh.root}`]: {
    marginTop: e.spacing(1),
    marginBottom: e.spacing(1)
  },
  [`& + .${Rh.inset}`]: {
    marginLeft: 52
  },
  [`& .${Mh.root}`]: {
    marginTop: 0,
    marginBottom: 0
  },
  [`& .${Mh.inset}`]: {
    paddingLeft: 36
  },
  [`& .${Dh.root}`]: {
    minWidth: 36
  },
  variants: [{
    props: ({
      ownerState: t
    }) => !t.disableGutters,
    style: {
      paddingLeft: 16,
      paddingRight: 16
    }
  }, {
    props: ({
      ownerState: t
    }) => t.divider,
    style: {
      borderBottom: `1px solid ${(e.vars || e).palette.divider}`,
      backgroundClip: "padding-box"
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.dense,
    style: {
      [e.breakpoints.up("sm")]: {
        minHeight: "auto"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.dense,
    style: {
      minHeight: 32,
      // https://m2.material.io/components/menus#specs > Dense
      paddingTop: 4,
      paddingBottom: 4,
      ...e.typography.body2,
      [`& .${Dh.root} svg`]: {
        fontSize: "1.25rem"
      }
    }
  }]
}))), Mo = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiMenuItem"
  }), {
    autoFocus: i = !1,
    component: s = "li",
    dense: a = !1,
    divider: l = !1,
    disableGutters: c = !1,
    focusVisibleClassName: u,
    role: d = "menuitem",
    tabIndex: p,
    className: m,
    ...g
  } = o, h = S.useContext(ar), v = S.useMemo(() => ({
    dense: a || h.dense || !1,
    disableGutters: c
  }), [h.dense, a, c]), b = S.useRef(null);
  to(() => {
    i && (b.current ? b.current.focus() : process.env.NODE_ENV !== "production" && console.error("MUI: Unable to set focus to a MenuItem whose component has not been rendered."));
  }, [i]);
  const y = {
    ...o,
    dense: v.dense,
    divider: l,
    disableGutters: c
  }, C = qj(o), x = Yt(b, n);
  let T;
  return o.disabled || (T = p !== void 0 ? p : -1), /* @__PURE__ */ f.jsx(ar.Provider, {
    value: v,
    children: /* @__PURE__ */ f.jsx(Jj, {
      ref: x,
      role: d,
      tabIndex: T,
      component: s,
      focusVisibleClassName: fe(C.focusVisible, u),
      className: fe(C.root, m),
      ...g,
      ownerState: y,
      classes: C
    })
  });
});
process.env.NODE_ENV !== "production" && (Mo.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the list item is focused during the first mount.
   * Focus will also be triggered if the value changes from false to true.
   * @default false
   */
  autoFocus: r.bool,
  /**
   * The content of the component.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used.
   * The prop defaults to the value inherited from the parent Menu component.
   * @default false
   */
  dense: r.bool,
  /**
   * @ignore
   */
  disabled: r.bool,
  /**
   * If `true`, the left and right padding is removed.
   * @default false
   */
  disableGutters: r.bool,
  /**
   * If `true`, a 1px light border is added to the bottom of the menu item.
   * @default false
   */
  divider: r.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: r.string,
  /**
   * @ignore
   */
  role: r.string,
  /**
   * If `true`, the component is selected.
   * @default false
   */
  selected: r.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * @default 0
   */
  tabIndex: r.number
});
function Kj(e) {
  return We("MuiNativeSelect", e);
}
const $f = _e("MuiNativeSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]), Qj = (e) => {
  const {
    classes: t,
    variant: n,
    disabled: o,
    multiple: i,
    open: s,
    error: a
  } = e, l = {
    select: ["select", n, o && "disabled", i && "multiple", a && "error"],
    icon: ["icon", `icon${ue(n)}`, s && "iconOpen", o && "disabled"]
  };
  return Ue(l, Kj, t);
}, T0 = Q("select")(({
  theme: e
}) => ({
  // Reset
  MozAppearance: "none",
  // Reset
  WebkitAppearance: "none",
  // When interacting quickly, the text can end up selected.
  // Native select can't be selected either.
  userSelect: "none",
  // Reset
  borderRadius: 0,
  cursor: "pointer",
  "&:focus": {
    // Reset Chrome style
    borderRadius: 0
  },
  [`&.${$f.disabled}`]: {
    cursor: "default"
  },
  "&[multiple]": {
    height: "auto"
  },
  "&:not([multiple]) option, &:not([multiple]) optgroup": {
    backgroundColor: (e.vars || e).palette.background.paper
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.variant !== "filled" && t.variant !== "outlined",
    style: {
      // Bump specificity to allow extending custom inputs
      "&&&": {
        paddingRight: 24,
        minWidth: 16
        // So it doesn't collapse.
      }
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      "&&&": {
        paddingRight: 32
      }
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      borderRadius: (e.vars || e).shape.borderRadius,
      "&:focus": {
        borderRadius: (e.vars || e).shape.borderRadius
        // Reset the reset for Chrome style
      },
      "&&&": {
        paddingRight: 32
      }
    }
  }]
})), ek = Q(T0, {
  name: "MuiNativeSelect",
  slot: "Select",
  shouldForwardProp: Mn,
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.select, t[n.variant], n.error && t.error, {
      [`&.${$f.multiple}`]: t.multiple
    }];
  }
})({}), I0 = Q("svg")(({
  theme: e
}) => ({
  // We use a position absolute over a flexbox in order to forward the pointer events
  // to the input and to support wrapping tags..
  position: "absolute",
  right: 0,
  // Center vertically, height is 1em
  top: "calc(50% - .5em)",
  // Don't block pointer events on the select under the icon.
  pointerEvents: "none",
  color: (e.vars || e).palette.action.active,
  [`&.${$f.disabled}`]: {
    color: (e.vars || e).palette.action.disabled
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.open,
    style: {
      transform: "rotate(180deg)"
    }
  }, {
    props: {
      variant: "filled"
    },
    style: {
      right: 7
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      right: 7
    }
  }]
})), tk = Q(I0, {
  name: "MuiNativeSelect",
  slot: "Icon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.icon, n.variant && t[`icon${ue(n.variant)}`], n.open && t.iconOpen];
  }
})({}), R0 = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const {
    className: o,
    disabled: i,
    error: s,
    IconComponent: a,
    inputRef: l,
    variant: c = "standard",
    ...u
  } = t, d = {
    ...t,
    disabled: i,
    variant: c,
    error: s
  }, p = Qj(d);
  return /* @__PURE__ */ f.jsxs(S.Fragment, {
    children: [/* @__PURE__ */ f.jsx(ek, {
      ownerState: d,
      className: fe(p.select, o),
      disabled: i,
      ref: l || n,
      ...u
    }), t.multiple ? null : /* @__PURE__ */ f.jsx(tk, {
      as: a,
      ownerState: d,
      className: p.icon
    })]
  });
});
process.env.NODE_ENV !== "production" && (R0.propTypes = {
  /**
   * The option elements to populate the select with.
   * Can be some `<option>` elements.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * The CSS class name of the select element.
   */
  className: r.string,
  /**
   * If `true`, the select is disabled.
   */
  disabled: r.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: r.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: r.elementType.isRequired,
  /**
   * Use that prop to pass a ref to the native select element.
   * @deprecated
   */
  inputRef: In,
  /**
   * @ignore
   */
  multiple: r.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: r.string,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: r.func,
  /**
   * The input value.
   */
  value: r.any,
  /**
   * The variant to use.
   */
  variant: r.oneOf(["standard", "outlined", "filled"])
});
var Vh;
const nk = Q("fieldset", {
  shouldForwardProp: Mn
})({
  textAlign: "left",
  position: "absolute",
  bottom: 0,
  right: 0,
  top: -5,
  left: 0,
  margin: 0,
  padding: "0 8px",
  pointerEvents: "none",
  borderRadius: "inherit",
  borderStyle: "solid",
  borderWidth: 1,
  overflow: "hidden",
  minWidth: "0%"
}), ok = Q("legend", {
  shouldForwardProp: Mn
})($e(({
  theme: e
}) => ({
  float: "unset",
  // Fix conflict with bootstrap
  width: "auto",
  // Fix conflict with bootstrap
  overflow: "hidden",
  // Fix Horizontal scroll when label too long
  variants: [{
    props: ({
      ownerState: t
    }) => !t.withLabel,
    style: {
      padding: 0,
      lineHeight: "11px",
      // sync with `height` in `legend` styles
      transition: e.transitions.create("width", {
        duration: 150,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel,
    style: {
      display: "block",
      // Fix conflict with normalize.css and sanitize.css
      padding: 0,
      height: 11,
      // sync with `lineHeight` in `legend` styles
      fontSize: "0.75em",
      visibility: "hidden",
      maxWidth: 0.01,
      transition: e.transitions.create("max-width", {
        duration: 50,
        easing: e.transitions.easing.easeOut
      }),
      whiteSpace: "nowrap",
      "& > span": {
        paddingLeft: 5,
        paddingRight: 5,
        display: "inline-block",
        opacity: 0,
        visibility: "visible"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.withLabel && t.notched,
    style: {
      maxWidth: "100%",
      transition: e.transitions.create("max-width", {
        duration: 100,
        easing: e.transitions.easing.easeOut,
        delay: 50
      })
    }
  }]
})));
function O0(e) {
  const {
    children: t,
    classes: n,
    className: o,
    label: i,
    notched: s,
    ...a
  } = e, l = i != null && i !== "", c = {
    ...e,
    notched: s,
    withLabel: l
  };
  return /* @__PURE__ */ f.jsx(nk, {
    "aria-hidden": !0,
    className: o,
    ownerState: c,
    ...a,
    children: /* @__PURE__ */ f.jsx(ok, {
      ownerState: c,
      children: l ? /* @__PURE__ */ f.jsx("span", {
        children: i
      }) : (
        // notranslate needed while Google Translate will not fix zero-width space issue
        Vh || (Vh = /* @__PURE__ */ f.jsx("span", {
          className: "notranslate",
          children: "​"
        }))
      )
    })
  });
}
process.env.NODE_ENV !== "production" && (O0.propTypes = {
  /**
   * The content of the component.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The label.
   */
  label: r.node,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: r.bool.isRequired,
  /**
   * @ignore
   */
  style: r.object
});
const rk = (e) => {
  const {
    classes: t
  } = e, o = Ue({
    root: ["root"],
    notchedOutline: ["notchedOutline"],
    input: ["input"]
  }, $A, t);
  return {
    ...t,
    // forward classes to the InputBase
    ...o
  };
}, ik = Q(tu, {
  shouldForwardProp: (e) => Mn(e) || e === "classes",
  name: "MuiOutlinedInput",
  slot: "Root",
  overridesResolver: Qc
})($e(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    position: "relative",
    borderRadius: (e.vars || e).shape.borderRadius,
    [`&:hover .${uo.notchedOutline}`]: {
      borderColor: (e.vars || e).palette.text.primary
    },
    [`&.${uo.focused} .${uo.notchedOutline}`]: {
      borderWidth: 2
    },
    variants: [...Object.entries(e.palette).filter(wt()).map(([n]) => ({
      props: {
        color: n
      },
      style: {
        [`&.${uo.focused} .${uo.notchedOutline}`]: {
          borderColor: (e.vars || e).palette[n].main
        }
      }
    })), {
      props: {},
      // to overide the above style
      style: {
        // Reset on touch devices, it doesn't add specificity
        "@media (hover: none)": {
          [`&:hover .${uo.notchedOutline}`]: {
            borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
          }
        },
        [`&.${uo.error} .${uo.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.error.main
        },
        [`&.${uo.disabled} .${uo.notchedOutline}`]: {
          borderColor: (e.vars || e).palette.action.disabled
        }
      }
    }, {
      props: ({
        ownerState: n
      }) => n.startAdornment,
      style: {
        paddingLeft: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.endAdornment,
      style: {
        paddingRight: 14
      }
    }, {
      props: ({
        ownerState: n
      }) => n.multiline,
      style: {
        padding: "16.5px 14px"
      }
    }, {
      props: ({
        ownerState: n,
        size: o
      }) => n.multiline && o === "small",
      style: {
        padding: "8.5px 14px"
      }
    }]
  };
})), sk = Q(O0, {
  name: "MuiOutlinedInput",
  slot: "NotchedOutline",
  overridesResolver: (e, t) => t.notchedOutline
})($e(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
  };
})), ak = Q(nu, {
  name: "MuiOutlinedInput",
  slot: "Input",
  overridesResolver: eu
})($e(({
  theme: e
}) => ({
  padding: "16.5px 14px",
  ...!e.vars && {
    "&:-webkit-autofill": {
      WebkitBoxShadow: e.palette.mode === "light" ? null : "0 0 0 100px #266798 inset",
      WebkitTextFillColor: e.palette.mode === "light" ? null : "#fff",
      caretColor: e.palette.mode === "light" ? null : "#fff",
      borderRadius: "inherit"
    }
  },
  ...e.vars && {
    "&:-webkit-autofill": {
      borderRadius: "inherit"
    },
    [e.getColorSchemeSelector("dark")]: {
      "&:-webkit-autofill": {
        WebkitBoxShadow: "0 0 0 100px #266798 inset",
        WebkitTextFillColor: "#fff",
        caretColor: "#fff"
      }
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      padding: "8.5px 14px"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.multiline,
    style: {
      padding: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.startAdornment,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.endAdornment,
    style: {
      paddingRight: 0
    }
  }]
}))), xa = /* @__PURE__ */ S.forwardRef(function(t, n) {
  var o;
  const i = Ye({
    props: t,
    name: "MuiOutlinedInput"
  }), {
    components: s = {},
    fullWidth: a = !1,
    inputComponent: l = "input",
    label: c,
    multiline: u = !1,
    notched: d,
    slots: p = {},
    type: m = "text",
    ...g
  } = i, h = rk(i), v = Gn(), b = fi({
    props: i,
    muiFormControl: v,
    states: ["color", "disabled", "error", "focused", "hiddenLabel", "size", "required"]
  }), y = {
    ...i,
    color: b.color || "primary",
    disabled: b.disabled,
    error: b.error,
    focused: b.focused,
    formControl: v,
    fullWidth: a,
    hiddenLabel: b.hiddenLabel,
    multiline: u,
    size: b.size,
    type: m
  }, C = p.root ?? s.Root ?? ik, x = p.input ?? s.Input ?? ak;
  return /* @__PURE__ */ f.jsx(ou, {
    slots: {
      root: C,
      input: x
    },
    renderSuffix: (T) => /* @__PURE__ */ f.jsx(sk, {
      ownerState: y,
      className: h.notchedOutline,
      label: c != null && c !== "" && b.required ? o || (o = /* @__PURE__ */ f.jsxs(S.Fragment, {
        children: [c, " ", "*"]
      })) : c,
      notched: typeof d < "u" ? d : !!(T.startAdornment || T.filled || T.focused)
    }),
    fullWidth: a,
    inputComponent: l,
    multiline: u,
    ref: n,
    type: m,
    ...g,
    classes: {
      ...h,
      notchedOutline: null
    }
  });
});
process.env.NODE_ENV !== "production" && (xa.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: r.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   */
  autoFocus: r.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.
   */
  color: r.oneOfType([r.oneOf(["primary", "secondary"]), r.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: r.shape({
    Input: r.elementType,
    Root: r.elementType
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: r.any,
  /**
   * If `true`, the component is disabled.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  disabled: r.bool,
  /**
   * End `InputAdornment` for this component.
   */
  endAdornment: r.node,
  /**
   * If `true`, the `input` will indicate an error.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  error: r.bool,
  /**
   * If `true`, the `input` will take up the full width of its container.
   * @default false
   */
  fullWidth: r.bool,
  /**
   * The id of the `input` element.
   */
  id: r.string,
  /**
   * The component used for the `input` element.
   * Either a string to use a HTML element or a component.
   * @default 'input'
   */
  inputComponent: r.elementType,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @default {}
   */
  inputProps: r.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: In,
  /**
   * The label of the `input`. It is only used for layout. The actual labelling
   * is handled by `InputLabel`.
   */
  label: r.node,
  /**
   * If `dense`, will adjust vertical spacing. This is normally obtained via context from
   * FormControl.
   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.
   */
  margin: r.oneOf(["dense", "none"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: r.oneOfType([r.number, r.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: r.oneOfType([r.number, r.string]),
  /**
   * If `true`, a [TextareaAutosize](https://mui.com/material-ui/react-textarea-autosize/) element is rendered.
   * @default false
   */
  multiline: r.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: r.string,
  /**
   * If `true`, the outline is notched to accommodate the label.
   */
  notched: r.bool,
  /**
   * Callback fired when the value is changed.
   *
   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: r.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: r.string,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   */
  readOnly: r.bool,
  /**
   * If `true`, the `input` element is required.
   * The prop defaults to the value (`false`) inherited from the parent FormControl component.
   */
  required: r.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: r.oneOfType([r.number, r.string]),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: r.shape({
    input: r.elementType,
    root: r.elementType
  }),
  /**
   * Start `InputAdornment` for this component.
   */
  startAdornment: r.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   * @default 'text'
   */
  type: r.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: r.any
});
xa && (xa.muiName = "Input");
function lk(e) {
  return We("MuiPagination", e);
}
_e("MuiPagination", ["root", "ul", "outlined", "text"]);
function ck(e = {}) {
  const {
    boundaryCount: t = 1,
    componentName: n = "usePagination",
    count: o = 1,
    defaultPage: i = 1,
    disabled: s = !1,
    hideNextButton: a = !1,
    hidePrevButton: l = !1,
    onChange: c,
    page: u,
    showFirstButton: d = !1,
    showLastButton: p = !1,
    siblingCount: m = 1,
    ...g
  } = e, [h, v] = ir({
    controlled: u,
    default: i,
    name: n,
    state: "page"
  }), b = (I, P) => {
    u || v(P), c && c(I, P);
  }, y = (I, P) => {
    const A = P - I + 1;
    return Array.from({
      length: A
    }, (D, k) => I + k);
  }, C = y(1, Math.min(t, o)), x = y(Math.max(o - t + 1, t + 1), o), T = Math.max(
    Math.min(
      // Natural start
      h - m,
      // Lower boundary when page is high
      o - t - m * 2 - 1
    ),
    // Greater than startPages
    t + 2
  ), w = Math.min(
    Math.max(
      // Natural end
      h + m,
      // Upper boundary when page is low
      t + m * 2 + 2
    ),
    // Less than endPages
    o - t - 1
  ), R = [
    ...d ? ["first"] : [],
    ...l ? [] : ["previous"],
    ...C,
    // Start ellipsis
    // eslint-disable-next-line no-nested-ternary
    ...T > t + 2 ? ["start-ellipsis"] : t + 1 < o - t ? [t + 1] : [],
    // Sibling pages
    ...y(T, w),
    // End ellipsis
    // eslint-disable-next-line no-nested-ternary
    ...w < o - t - 1 ? ["end-ellipsis"] : o - t > t ? [o - t] : [],
    ...x,
    ...a ? [] : ["next"],
    ...p ? ["last"] : []
  ], E = (I) => {
    switch (I) {
      case "first":
        return 1;
      case "previous":
        return h - 1;
      case "next":
        return h + 1;
      case "last":
        return o;
      default:
        return null;
    }
  };
  return {
    items: R.map((I) => typeof I == "number" ? {
      onClick: (P) => {
        b(P, I);
      },
      type: "page",
      page: I,
      selected: I === h,
      disabled: s,
      "aria-current": I === h ? "true" : void 0
    } : {
      onClick: (P) => {
        b(P, E(I));
      },
      type: I,
      page: E(I),
      selected: !1,
      disabled: s || !I.includes("ellipsis") && (I === "next" || I === "last" ? h >= o : h <= 1)
    }),
    ...g
  };
}
function uk(e) {
  return We("MuiPaginationItem", e);
}
const jn = _e("MuiPaginationItem", ["root", "page", "sizeSmall", "sizeLarge", "text", "textPrimary", "textSecondary", "outlined", "outlinedPrimary", "outlinedSecondary", "rounded", "ellipsis", "firstLast", "previousNext", "focusVisible", "disabled", "selected", "icon", "colorPrimary", "colorSecondary"]), dk = He(/* @__PURE__ */ f.jsx("path", {
  d: "M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z"
}), "FirstPage"), pk = He(/* @__PURE__ */ f.jsx("path", {
  d: "M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z"
}), "LastPage"), fk = He(/* @__PURE__ */ f.jsx("path", {
  d: "M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"
}), "NavigateBefore"), mk = He(/* @__PURE__ */ f.jsx("path", {
  d: "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
}), "NavigateNext"), E0 = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, t[n.variant], t[`size${ue(n.size)}`], n.variant === "text" && t[`text${ue(n.color)}`], n.variant === "outlined" && t[`outlined${ue(n.color)}`], n.shape === "rounded" && t.rounded, n.type === "page" && t.page, (n.type === "start-ellipsis" || n.type === "end-ellipsis") && t.ellipsis, (n.type === "previous" || n.type === "next") && t.previousNext, (n.type === "first" || n.type === "last") && t.firstLast];
}, gk = (e) => {
  const {
    classes: t,
    color: n,
    disabled: o,
    selected: i,
    size: s,
    shape: a,
    type: l,
    variant: c
  } = e, u = {
    root: ["root", `size${ue(s)}`, c, a, n !== "standard" && `color${ue(n)}`, n !== "standard" && `${c}${ue(n)}`, o && "disabled", i && "selected", {
      page: "page",
      first: "firstLast",
      last: "firstLast",
      "start-ellipsis": "ellipsis",
      "end-ellipsis": "ellipsis",
      previous: "previousNext",
      next: "previousNext"
    }[l]],
    icon: ["icon"]
  };
  return Ue(u, uk, t);
}, hk = Q("div", {
  name: "MuiPaginationItem",
  slot: "Root",
  overridesResolver: E0
})($e(({
  theme: e
}) => ({
  ...e.typography.body2,
  borderRadius: 32 / 2,
  textAlign: "center",
  boxSizing: "border-box",
  minWidth: 32,
  padding: "0 6px",
  margin: "0 3px",
  color: (e.vars || e).palette.text.primary,
  height: "auto",
  [`&.${jn.disabled}`]: {
    opacity: (e.vars || e).palette.action.disabledOpacity
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      minWidth: 26,
      borderRadius: 26 / 2,
      margin: "0 1px",
      padding: "0 4px"
    }
  }, {
    props: {
      size: "large"
    },
    style: {
      minWidth: 40,
      borderRadius: 40 / 2,
      padding: "0 10px",
      fontSize: e.typography.pxToRem(15)
    }
  }]
}))), bk = Q(yo, {
  name: "MuiPaginationItem",
  slot: "Root",
  overridesResolver: E0
})($e(({
  theme: e
}) => ({
  ...e.typography.body2,
  borderRadius: 32 / 2,
  textAlign: "center",
  boxSizing: "border-box",
  minWidth: 32,
  height: 32,
  padding: "0 6px",
  margin: "0 3px",
  color: (e.vars || e).palette.text.primary,
  [`&.${jn.focusVisible}`]: {
    backgroundColor: (e.vars || e).palette.action.focus
  },
  [`&.${jn.disabled}`]: {
    opacity: (e.vars || e).palette.action.disabledOpacity
  },
  transition: e.transitions.create(["color", "background-color"], {
    duration: e.transitions.duration.short
  }),
  "&:hover": {
    backgroundColor: (e.vars || e).palette.action.hover,
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  [`&.${jn.selected}`]: {
    backgroundColor: (e.vars || e).palette.action.selected,
    "&:hover": {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : ze(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity),
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: (e.vars || e).palette.action.selected
      }
    },
    [`&.${jn.focusVisible}`]: {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.action.selectedChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))` : ze(e.palette.action.selected, e.palette.action.selectedOpacity + e.palette.action.focusOpacity)
    },
    [`&.${jn.disabled}`]: {
      opacity: 1,
      color: (e.vars || e).palette.action.disabled,
      backgroundColor: (e.vars || e).palette.action.selected
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      minWidth: 26,
      height: 26,
      borderRadius: 26 / 2,
      margin: "0 1px",
      padding: "0 4px"
    }
  }, {
    props: {
      size: "large"
    },
    style: {
      minWidth: 40,
      height: 40,
      borderRadius: 40 / 2,
      padding: "0 10px",
      fontSize: e.typography.pxToRem(15)
    }
  }, {
    props: {
      shape: "rounded"
    },
    style: {
      borderRadius: (e.vars || e).shape.borderRadius
    }
  }, {
    props: {
      variant: "outlined"
    },
    style: {
      border: e.vars ? `1px solid rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : `1px solid ${e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)"}`,
      [`&.${jn.selected}`]: {
        [`&.${jn.disabled}`]: {
          borderColor: (e.vars || e).palette.action.disabledBackground,
          color: (e.vars || e).palette.action.disabled
        }
      }
    }
  }, {
    props: {
      variant: "text"
    },
    style: {
      [`&.${jn.selected}`]: {
        [`&.${jn.disabled}`]: {
          color: (e.vars || e).palette.action.disabled
        }
      }
    }
  }, ...Object.entries(e.palette).filter(wt(["dark", "contrastText"])).map(([t]) => ({
    props: {
      variant: "text",
      color: t
    },
    style: {
      [`&.${jn.selected}`]: {
        color: (e.vars || e).palette[t].contrastText,
        backgroundColor: (e.vars || e).palette[t].main,
        "&:hover": {
          backgroundColor: (e.vars || e).palette[t].dark,
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            backgroundColor: (e.vars || e).palette[t].main
          }
        },
        [`&.${jn.focusVisible}`]: {
          backgroundColor: (e.vars || e).palette[t].dark
        },
        [`&.${jn.disabled}`]: {
          color: (e.vars || e).palette.action.disabled
        }
      }
    }
  })), ...Object.entries(e.palette).filter(wt(["light"])).map(([t]) => ({
    props: {
      variant: "outlined",
      color: t
    },
    style: {
      [`&.${jn.selected}`]: {
        color: (e.vars || e).palette[t].main,
        border: `1px solid ${e.vars ? `rgba(${e.vars.palette[t].mainChannel} / 0.5)` : ze(e.palette[t].main, 0.5)}`,
        backgroundColor: e.vars ? `rgba(${e.vars.palette[t].mainChannel} / ${e.vars.palette.action.activatedOpacity})` : ze(e.palette[t].main, e.palette.action.activatedOpacity),
        "&:hover": {
          backgroundColor: e.vars ? `rgba(${e.vars.palette[t].mainChannel} / calc(${e.vars.palette.action.activatedOpacity} + ${e.vars.palette.action.focusOpacity}))` : ze(e.palette[t].main, e.palette.action.activatedOpacity + e.palette.action.focusOpacity),
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            backgroundColor: "transparent"
          }
        },
        [`&.${jn.focusVisible}`]: {
          backgroundColor: e.vars ? `rgba(${e.vars.palette[t].mainChannel} / calc(${e.vars.palette.action.activatedOpacity} + ${e.vars.palette.action.focusOpacity}))` : ze(e.palette[t].main, e.palette.action.activatedOpacity + e.palette.action.focusOpacity)
        }
      }
    }
  }))]
}))), vk = Q("div", {
  name: "MuiPaginationItem",
  slot: "Icon",
  overridesResolver: (e, t) => t.icon
})($e(({
  theme: e
}) => ({
  fontSize: e.typography.pxToRem(20),
  margin: "0 -8px",
  variants: [{
    props: {
      size: "small"
    },
    style: {
      fontSize: e.typography.pxToRem(18)
    }
  }, {
    props: {
      size: "large"
    },
    style: {
      fontSize: e.typography.pxToRem(22)
    }
  }]
}))), Lf = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiPaginationItem"
  }), {
    className: i,
    color: s = "standard",
    component: a,
    components: l = {},
    disabled: c = !1,
    page: u,
    selected: d = !1,
    shape: p = "circular",
    size: m = "medium",
    slots: g = {},
    slotProps: h = {},
    type: v = "page",
    variant: b = "text",
    ...y
  } = o, C = {
    ...o,
    color: s,
    disabled: c,
    selected: d,
    shape: p,
    size: m,
    type: v,
    variant: b
  }, x = Nr(), T = gk(C), w = {
    slots: {
      previous: g.previous ?? l.previous,
      next: g.next ?? l.next,
      first: g.first ?? l.first,
      last: g.last ?? l.last
    },
    slotProps: h
  }, [R, E] = nn("previous", {
    elementType: fk,
    externalForwardedProps: w,
    ownerState: C
  }), [O, I] = nn("next", {
    elementType: mk,
    externalForwardedProps: w,
    ownerState: C
  }), [P, A] = nn("first", {
    elementType: dk,
    externalForwardedProps: w,
    ownerState: C
  }), [D, k] = nn("last", {
    elementType: pk,
    externalForwardedProps: w,
    ownerState: C
  }), M = x ? {
    previous: "next",
    next: "previous",
    first: "last",
    last: "first"
  }[v] : v, F = {
    previous: R,
    next: O,
    first: P,
    last: D
  }[M], N = {
    previous: E,
    next: I,
    first: A,
    last: k
  }[M];
  return v === "start-ellipsis" || v === "end-ellipsis" ? /* @__PURE__ */ f.jsx(hk, {
    ref: n,
    ownerState: C,
    className: fe(T.root, i),
    children: "…"
  }) : /* @__PURE__ */ f.jsxs(bk, {
    ref: n,
    ownerState: C,
    component: a,
    disabled: c,
    className: fe(T.root, i),
    ...y,
    children: [v === "page" && u, F ? /* @__PURE__ */ f.jsx(vk, {
      ...N,
      className: T.icon,
      as: F
    }) : null]
  });
});
process.env.NODE_ENV !== "production" && (Lf.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * @ignore
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The active color.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'standard'
   */
  color: r.oneOfType([r.oneOf(["primary", "secondary", "standard"]), r.string]),
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `slots` prop.
   * It's recommended to use the `slots` prop instead.
   *
   * @default {}
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  components: r.shape({
    first: r.elementType,
    last: r.elementType,
    next: r.elementType,
    previous: r.elementType
  }),
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: r.bool,
  /**
   * The current page number.
   */
  page: r.node,
  /**
   * If `true` the pagination item is selected.
   * @default false
   */
  selected: r.bool,
  /**
   * The shape of the pagination item.
   * @default 'circular'
   */
  shape: r.oneOf(["circular", "rounded"]),
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: r.oneOfType([r.oneOf(["small", "medium", "large"]), r.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: r.shape({
    first: r.oneOfType([r.func, r.object]),
    last: r.oneOfType([r.func, r.object]),
    next: r.oneOfType([r.func, r.object]),
    previous: r.oneOfType([r.func, r.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: r.shape({
    first: r.elementType,
    last: r.elementType,
    next: r.elementType,
    previous: r.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * The type of pagination item.
   * @default 'page'
   */
  type: r.oneOf(["end-ellipsis", "first", "last", "next", "page", "previous", "start-ellipsis"]),
  /**
   * The variant to use.
   * @default 'text'
   */
  variant: r.oneOfType([r.oneOf(["outlined", "text"]), r.string])
});
const yk = (e) => {
  const {
    classes: t,
    variant: n
  } = e;
  return Ue({
    root: ["root", n],
    ul: ["ul"]
  }, lk, t);
}, xk = Q("nav", {
  name: "MuiPagination",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant]];
  }
})({}), Ck = Q("ul", {
  name: "MuiPagination",
  slot: "Ul",
  overridesResolver: (e, t) => t.ul
})({
  display: "flex",
  flexWrap: "wrap",
  alignItems: "center",
  padding: 0,
  margin: 0,
  listStyle: "none"
});
function Sk(e, t, n) {
  return e === "page" ? `${n ? "" : "Go to "}page ${t}` : `Go to ${e} page`;
}
const _f = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiPagination"
  }), {
    boundaryCount: i = 1,
    className: s,
    color: a = "standard",
    count: l = 1,
    defaultPage: c = 1,
    disabled: u = !1,
    getItemAriaLabel: d = Sk,
    hideNextButton: p = !1,
    hidePrevButton: m = !1,
    onChange: g,
    page: h,
    renderItem: v = (P) => /* @__PURE__ */ f.jsx(Lf, {
      ...P
    }),
    shape: b = "circular",
    showFirstButton: y = !1,
    showLastButton: C = !1,
    siblingCount: x = 1,
    size: T = "medium",
    variant: w = "text",
    ...R
  } = o, {
    items: E
  } = ck({
    ...o,
    componentName: "Pagination"
  }), O = {
    ...o,
    boundaryCount: i,
    color: a,
    count: l,
    defaultPage: c,
    disabled: u,
    getItemAriaLabel: d,
    hideNextButton: p,
    hidePrevButton: m,
    renderItem: v,
    shape: b,
    showFirstButton: y,
    showLastButton: C,
    siblingCount: x,
    size: T,
    variant: w
  }, I = yk(O);
  return /* @__PURE__ */ f.jsx(xk, {
    "aria-label": "pagination navigation",
    className: fe(I.root, s),
    ownerState: O,
    ref: n,
    ...R,
    children: /* @__PURE__ */ f.jsx(Ck, {
      className: I.ul,
      ownerState: O,
      children: E.map((P, A) => /* @__PURE__ */ f.jsx("li", {
        children: v({
          ...P,
          color: a,
          "aria-label": d(P.type, P.page, P.selected),
          shape: b,
          size: T,
          variant: w
        })
      }, A))
    })
  });
});
process.env.NODE_ENV !== "production" && (_f.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Number of always visible pages at the beginning and end.
   * @default 1
   */
  boundaryCount: wr,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The active color.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'standard'
   */
  color: r.oneOfType([r.oneOf(["primary", "secondary", "standard"]), r.string]),
  /**
   * The total number of pages.
   * @default 1
   */
  count: wr,
  /**
   * The page selected by default when the component is uncontrolled.
   * @default 1
   */
  defaultPage: wr,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: r.bool,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current page.
   * This is important for screen reader users.
   *
   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous' | 'start-ellipsis' | 'end-ellipsis'). Defaults to 'page'.
   * @param {number | null} page The page number to format.
   * @param {boolean} selected If true, the current page is selected.
   * @returns {string}
   */
  getItemAriaLabel: r.func,
  /**
   * If `true`, hide the next-page button.
   * @default false
   */
  hideNextButton: r.bool,
  /**
   * If `true`, hide the previous-page button.
   * @default false
   */
  hidePrevButton: r.bool,
  /**
   * Callback fired when the page is changed.
   *
   * @param {React.ChangeEvent<unknown>} event The event source of the callback.
   * @param {number} page The page selected.
   */
  onChange: r.func,
  /**
   * The current page. Unlike `TablePagination`, which starts numbering from `0`, this pagination starts from `1`.
   */
  page: wr,
  /**
   * Render the item.
   * @param {PaginationRenderItemParams} params The props to spread on a PaginationItem.
   * @returns {ReactNode}
   * @default (item) => <PaginationItem {...item} />
   */
  renderItem: r.func,
  /**
   * The shape of the pagination items.
   * @default 'circular'
   */
  shape: r.oneOf(["circular", "rounded"]),
  /**
   * If `true`, show the first-page button.
   * @default false
   */
  showFirstButton: r.bool,
  /**
   * If `true`, show the last-page button.
   * @default false
   */
  showLastButton: r.bool,
  /**
   * Number of always visible pages before and after the current page.
   * @default 1
   */
  siblingCount: wr,
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: r.oneOfType([r.oneOf(["small", "medium", "large"]), r.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * The variant to use.
   * @default 'text'
   */
  variant: r.oneOfType([r.oneOf(["outlined", "text"]), r.string])
});
const wk = He(/* @__PURE__ */ f.jsx("path", {
  d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
}), "RadioButtonUnchecked"), Tk = He(/* @__PURE__ */ f.jsx("path", {
  d: "M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"
}), "RadioButtonChecked"), Ik = Q("span", {
  shouldForwardProp: Mn
})({
  position: "relative",
  display: "flex"
}), Rk = Q(wk)({
  // Scale applied to prevent dot misalignment in Safari
  transform: "scale(1)"
}), Ok = Q(Tk)($e(({
  theme: e
}) => ({
  left: 0,
  position: "absolute",
  transform: "scale(0)",
  transition: e.transitions.create("transform", {
    easing: e.transitions.easing.easeIn,
    duration: e.transitions.duration.shortest
  }),
  variants: [{
    props: {
      checked: !0
    },
    style: {
      transform: "scale(1)",
      transition: e.transitions.create("transform", {
        easing: e.transitions.easing.easeOut,
        duration: e.transitions.duration.shortest
      })
    }
  }]
})));
function Bf(e) {
  const {
    checked: t = !1,
    classes: n = {},
    fontSize: o
  } = e, i = {
    ...e,
    checked: t
  };
  return /* @__PURE__ */ f.jsxs(Ik, {
    className: n.root,
    ownerState: i,
    children: [/* @__PURE__ */ f.jsx(Rk, {
      fontSize: o,
      className: n.background,
      ownerState: i
    }), /* @__PURE__ */ f.jsx(Ok, {
      fontSize: o,
      className: n.dot,
      ownerState: i
    })]
  });
}
process.env.NODE_ENV !== "production" && (Bf.propTypes = {
  /**
   * If `true`, the component is checked.
   */
  checked: r.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * The size of the component.
   * `small` is equivalent to the dense radio styling.
   */
  fontSize: r.oneOf(["small", "medium"])
});
const P0 = /* @__PURE__ */ S.createContext(void 0);
process.env.NODE_ENV !== "production" && (P0.displayName = "RadioGroupContext");
function Ek() {
  return S.useContext(P0);
}
function Pk(e) {
  return We("MuiRadio", e);
}
const $h = _e("MuiRadio", ["root", "checked", "disabled", "colorPrimary", "colorSecondary", "sizeSmall"]), Ak = (e) => {
  const {
    classes: t,
    color: n,
    size: o
  } = e, i = {
    root: ["root", `color${ue(n)}`, o !== "medium" && `size${ue(o)}`]
  };
  return {
    ...t,
    ...Ue(i, Pk, t)
  };
}, Dk = Q(ru, {
  shouldForwardProp: (e) => Mn(e) || e === "classes",
  name: "MuiRadio",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.size !== "medium" && t[`size${ue(n.size)}`], t[`color${ue(n.color)}`]];
  }
})($e(({
  theme: e
}) => ({
  color: (e.vars || e).palette.text.secondary,
  [`&.${$h.disabled}`]: {
    color: (e.vars || e).palette.action.disabled
  },
  variants: [{
    props: {
      color: "default",
      disabled: !1,
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : ze(e.palette.action.active, e.palette.action.hoverOpacity)
      }
    }
  }, ...Object.entries(e.palette).filter(wt()).map(([t]) => ({
    props: {
      color: t,
      disabled: !1,
      disableRipple: !1
    },
    style: {
      "&:hover": {
        backgroundColor: e.vars ? `rgba(${e.vars.palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : ze(e.palette[t].main, e.palette.action.hoverOpacity)
      }
    }
  })), ...Object.entries(e.palette).filter(wt()).map(([t]) => ({
    props: {
      color: t,
      disabled: !1
    },
    style: {
      [`&.${$h.checked}`]: {
        color: (e.vars || e).palette[t].main
      }
    }
  })), {
    // Should be last to override other colors
    props: {
      disableRipple: !1
    },
    style: {
      // Reset on touch devices, it doesn't add specificity
      "&:hover": {
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }
  }]
})));
function Mk(e, t) {
  return typeof t == "object" && t !== null ? e === t : String(e) === String(t);
}
const Lh = /* @__PURE__ */ f.jsx(Bf, {
  checked: !0
}), _h = /* @__PURE__ */ f.jsx(Bf, {}), A0 = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiRadio"
  }), {
    checked: i,
    checkedIcon: s = Lh,
    color: a = "primary",
    icon: l = _h,
    name: c,
    onChange: u,
    size: d = "medium",
    className: p,
    disabled: m,
    disableRipple: g = !1,
    ...h
  } = o, v = Gn();
  let b = m;
  v && typeof b > "u" && (b = v.disabled), b ?? (b = !1);
  const y = {
    ...o,
    disabled: b,
    disableRipple: g,
    color: a,
    size: d
  }, C = Ak(y), x = Ek();
  let T = i;
  const w = rp(u, x && x.onChange);
  let R = c;
  return x && (typeof T > "u" && (T = Mk(x.value, o.value)), typeof R > "u" && (R = x.name)), /* @__PURE__ */ f.jsx(Dk, {
    type: "radio",
    icon: /* @__PURE__ */ S.cloneElement(l, {
      fontSize: _h.props.fontSize ?? d
    }),
    checkedIcon: /* @__PURE__ */ S.cloneElement(s, {
      fontSize: Lh.props.fontSize ?? d
    }),
    disabled: b,
    ownerState: y,
    classes: C,
    name: R,
    checked: T,
    onChange: w,
    ref: n,
    className: fe(C.root, p),
    ...h
  });
});
process.env.NODE_ENV !== "production" && (A0.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: r.bool,
  /**
   * The icon to display when the component is checked.
   * @default <RadioButtonIcon checked />
   */
  checkedIcon: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: r.oneOfType([r.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), r.string]),
  /**
   * If `true`, the component is disabled.
   */
  disabled: r.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: r.bool,
  /**
   * The icon to display when the component is unchecked.
   * @default <RadioButtonIcon />
   */
  icon: r.node,
  /**
   * The id of the `input` element.
   */
  id: r.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: r.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: In,
  /**
   * Name attribute of the `input` element.
   */
  name: r.string,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: r.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: r.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense radio styling.
   * @default 'medium'
   */
  size: r.oneOfType([r.oneOf(["medium", "small"]), r.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   */
  value: r.any
});
function jk(e) {
  return We("MuiSelect", e);
}
const Os = _e("MuiSelect", ["root", "select", "multiple", "filled", "outlined", "standard", "disabled", "focused", "icon", "iconOpen", "iconFilled", "iconOutlined", "iconStandard", "nativeInput", "error"]);
var Bh;
const kk = Q(T0, {
  name: "MuiSelect",
  slot: "Select",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [
      // Win specificity over the input base
      {
        [`&.${Os.select}`]: t.select
      },
      {
        [`&.${Os.select}`]: t[n.variant]
      },
      {
        [`&.${Os.error}`]: t.error
      },
      {
        [`&.${Os.multiple}`]: t.multiple
      }
    ];
  }
})({
  // Win specificity over the input base
  [`&.${Os.select}`]: {
    height: "auto",
    // Resets for multiple select with chips
    minHeight: "1.4375em",
    // Required for select\text-field height consistency
    textOverflow: "ellipsis",
    whiteSpace: "nowrap",
    overflow: "hidden"
  }
}), Fk = Q(I0, {
  name: "MuiSelect",
  slot: "Icon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.icon, n.variant && t[`icon${ue(n.variant)}`], n.open && t.iconOpen];
  }
})({}), Nk = Q("input", {
  shouldForwardProp: (e) => Zc(e) && e !== "classes",
  name: "MuiSelect",
  slot: "NativeInput",
  overridesResolver: (e, t) => t.nativeInput
})({
  bottom: 0,
  left: 0,
  position: "absolute",
  opacity: 0,
  pointerEvents: "none",
  width: "100%",
  boxSizing: "border-box"
});
function zh(e, t) {
  return typeof t == "object" && t !== null ? e === t : String(e) === String(t);
}
function Vk(e) {
  return e == null || typeof e == "string" && !e.trim();
}
const $k = (e) => {
  const {
    classes: t,
    variant: n,
    disabled: o,
    multiple: i,
    open: s,
    error: a
  } = e, l = {
    select: ["select", n, o && "disabled", i && "multiple", a && "error"],
    icon: ["icon", `icon${ue(n)}`, s && "iconOpen", o && "disabled"],
    nativeInput: ["nativeInput"]
  };
  return Ue(l, jk, t);
}, D0 = /* @__PURE__ */ S.forwardRef(function(t, n) {
  var dt;
  const {
    "aria-describedby": o,
    "aria-label": i,
    autoFocus: s,
    autoWidth: a,
    children: l,
    className: c,
    defaultOpen: u,
    defaultValue: d,
    disabled: p,
    displayEmpty: m,
    error: g = !1,
    IconComponent: h,
    inputRef: v,
    labelId: b,
    MenuProps: y = {},
    multiple: C,
    name: x,
    onBlur: T,
    onChange: w,
    onClose: R,
    onFocus: E,
    onOpen: O,
    open: I,
    readOnly: P,
    renderValue: A,
    SelectDisplayProps: D = {},
    tabIndex: k,
    // catching `type` from Input which makes no sense for SelectInput
    type: M,
    value: F,
    variant: N = "standard",
    ...W
  } = t, [H, B] = ir({
    controlled: F,
    default: d,
    name: "Select"
  }), [j, L] = ir({
    controlled: I,
    default: u,
    name: "Select"
  }), ee = S.useRef(null), Y = S.useRef(null), [$, U] = S.useState(null), {
    current: X
  } = S.useRef(I != null), [Z, G] = S.useState(), K = Yt(n, v), re = S.useCallback((de) => {
    Y.current = de, de && U(de);
  }, []), ne = $ == null ? void 0 : $.parentNode;
  S.useImperativeHandle(K, () => ({
    focus: () => {
      Y.current.focus();
    },
    node: ee.current,
    value: H
  }), [H]), S.useEffect(() => {
    u && j && $ && !X && (G(a ? null : ne.clientWidth), Y.current.focus());
  }, [$, a]), S.useEffect(() => {
    s && Y.current.focus();
  }, [s]), S.useEffect(() => {
    if (!b)
      return;
    const de = dn(Y.current).getElementById(b);
    if (de) {
      const we = () => {
        getSelection().isCollapsed && Y.current.focus();
      };
      return de.addEventListener("click", we), () => {
        de.removeEventListener("click", we);
      };
    }
  }, [b]);
  const z = (de, we) => {
    de ? O && O(we) : R && R(we), X || (G(a ? null : ne.clientWidth), L(de));
  }, q = (de) => {
    de.button === 0 && (de.preventDefault(), Y.current.focus(), z(!0, de));
  }, _ = (de) => {
    z(!1, de);
  }, oe = S.Children.toArray(l), te = (de) => {
    const we = oe.find((pe) => pe.props.value === de.target.value);
    we !== void 0 && (B(we.props.value), w && w(de, we));
  }, se = (de) => (we) => {
    let pe;
    if (we.currentTarget.hasAttribute("tabindex")) {
      if (C) {
        pe = Array.isArray(H) ? H.slice() : [];
        const Me = H.indexOf(de.props.value);
        Me === -1 ? pe.push(de.props.value) : pe.splice(Me, 1);
      } else
        pe = de.props.value;
      if (de.props.onClick && de.props.onClick(we), H !== pe && (B(pe), w)) {
        const Me = we.nativeEvent || we, je = new Me.constructor(Me.type, Me);
        Object.defineProperty(je, "target", {
          writable: !0,
          value: {
            value: pe,
            name: x
          }
        }), w(je, de);
      }
      C || z(!1, we);
    }
  }, ae = (de) => {
    P || [
      " ",
      "ArrowUp",
      "ArrowDown",
      // The native select doesn't respond to enter on macOS, but it's recommended by
      // https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-select-only/
      "Enter"
    ].includes(de.key) && (de.preventDefault(), z(!0, de));
  }, me = $ !== null && j, ye = (de) => {
    !me && T && (Object.defineProperty(de, "target", {
      writable: !0,
      value: {
        value: H,
        name: x
      }
    }), T(de));
  };
  delete W["aria-invalid"];
  let Te, Ve;
  const ie = [];
  let be = !1, xe = !1;
  (ac({
    value: H
  }) || m) && (A ? Te = A(H) : be = !0);
  const Ie = oe.map((de) => {
    if (!/* @__PURE__ */ S.isValidElement(de))
      return null;
    process.env.NODE_ENV !== "production" && qc.isFragment(de) && console.error(["MUI: The Select component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`));
    let we;
    if (C) {
      if (!Array.isArray(H))
        throw new Error(process.env.NODE_ENV !== "production" ? "MUI: The `value` prop must be an array when using the `Select` component with `multiple`." : Yo(2));
      we = H.some((pe) => zh(pe, de.props.value)), we && be && ie.push(de.props.children);
    } else
      we = zh(H, de.props.value), we && be && (Ve = de.props.children);
    return we && (xe = !0), /* @__PURE__ */ S.cloneElement(de, {
      "aria-selected": we ? "true" : "false",
      onClick: se(de),
      onKeyUp: (pe) => {
        pe.key === " " && pe.preventDefault(), de.props.onKeyUp && de.props.onKeyUp(pe);
      },
      role: "option",
      selected: we,
      value: void 0,
      // The value is most likely not a valid HTML attribute.
      "data-value": de.props.value
      // Instead, we provide it as a data attribute.
    });
  });
  process.env.NODE_ENV !== "production" && S.useEffect(() => {
    if (!xe && !C && H !== "") {
      const de = oe.map((we) => we.props.value);
      console.warn([`MUI: You have provided an out-of-range value \`${H}\` for the select ${x ? `(name="${x}") ` : ""}component.`, "Consider providing a value that matches one of the available options or ''.", `The available values are ${de.filter((we) => we != null).map((we) => `\`${we}\``).join(", ") || '""'}.`].join(`
`));
    }
  }, [xe, oe, C, x, H]), be && (C ? ie.length === 0 ? Te = null : Te = ie.reduce((de, we, pe) => (de.push(we), pe < ie.length - 1 && de.push(", "), de), []) : Te = Ve);
  let Pe = Z;
  !a && X && $ && (Pe = ne.clientWidth);
  let Ce;
  typeof k < "u" ? Ce = k : Ce = p ? null : 0;
  const Oe = D.id || (x ? `mui-component-select-${x}` : void 0), Be = {
    ...t,
    variant: N,
    value: H,
    open: me,
    error: g
  }, Ae = $k(Be), nt = {
    ...y.PaperProps,
    ...(dt = y.slotProps) == null ? void 0 : dt.paper
  }, Ze = Na();
  return /* @__PURE__ */ f.jsxs(S.Fragment, {
    children: [/* @__PURE__ */ f.jsx(kk, {
      as: "div",
      ref: re,
      tabIndex: Ce,
      role: "combobox",
      "aria-controls": Ze,
      "aria-disabled": p ? "true" : void 0,
      "aria-expanded": me ? "true" : "false",
      "aria-haspopup": "listbox",
      "aria-label": i,
      "aria-labelledby": [b, Oe].filter(Boolean).join(" ") || void 0,
      "aria-describedby": o,
      onKeyDown: ae,
      onMouseDown: p || P ? null : q,
      onBlur: ye,
      onFocus: E,
      ...D,
      ownerState: Be,
      className: fe(D.className, Ae.select, c),
      id: Oe,
      children: Vk(Te) ? (
        // notranslate needed while Google Translate will not fix zero-width space issue
        Bh || (Bh = /* @__PURE__ */ f.jsx("span", {
          className: "notranslate",
          children: "​"
        }))
      ) : Te
    }), /* @__PURE__ */ f.jsx(Nk, {
      "aria-invalid": g,
      value: Array.isArray(H) ? H.join(",") : H,
      name: x,
      ref: ee,
      "aria-hidden": !0,
      onChange: te,
      tabIndex: -1,
      disabled: p,
      className: Ae.nativeInput,
      autoFocus: s,
      ...W,
      ownerState: Be
    }), /* @__PURE__ */ f.jsx(Fk, {
      as: h,
      className: Ae.icon,
      ownerState: Be
    }), /* @__PURE__ */ f.jsx(Lr, {
      id: `menu-${x || ""}`,
      anchorEl: ne,
      open: me,
      onClose: _,
      anchorOrigin: {
        vertical: "bottom",
        horizontal: "center"
      },
      transformOrigin: {
        vertical: "top",
        horizontal: "center"
      },
      ...y,
      MenuListProps: {
        "aria-labelledby": b,
        role: "listbox",
        "aria-multiselectable": C ? "true" : void 0,
        disableListWrap: !0,
        id: Ze,
        ...y.MenuListProps
      },
      slotProps: {
        ...y.slotProps,
        paper: {
          ...nt,
          style: {
            minWidth: Pe,
            ...nt != null ? nt.style : null
          }
        }
      },
      children: Ie
    })]
  });
});
process.env.NODE_ENV !== "production" && (D0.propTypes = {
  /**
   * @ignore
   */
  "aria-describedby": r.string,
  /**
   * @ignore
   */
  "aria-label": r.string,
  /**
   * @ignore
   */
  autoFocus: r.bool,
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   */
  autoWidth: r.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `<MenuItem>` elements.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * The CSS class name of the select element.
   */
  className: r.string,
  /**
   * If `true`, the component is toggled on mount. Use when the component open state is not controlled.
   * You can only use it when the `native` prop is `false` (default).
   */
  defaultOpen: r.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: r.any,
  /**
   * If `true`, the select is disabled.
   */
  disabled: r.bool,
  /**
   * If `true`, the selected item is displayed even if its value is empty.
   */
  displayEmpty: r.bool,
  /**
   * If `true`, the `select input` will indicate an error.
   */
  error: r.bool,
  /**
   * The icon that displays the arrow.
   */
  IconComponent: r.elementType.isRequired,
  /**
   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`
   * Equivalent to `ref`
   */
  inputRef: In,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: r.string,
  /**
   * Props applied to the [`Menu`](/material-ui/api/menu/) element.
   */
  MenuProps: r.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   */
  multiple: r.bool,
  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: r.string,
  /**
   * @ignore
   */
  onBlur: r.func,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * @param {object} [child] The react element that was selected.
   */
  onChange: r.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: r.func,
  /**
   * @ignore
   */
  onFocus: r.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use in controlled mode (see open).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: r.func,
  /**
   * If `true`, the component is shown.
   */
  open: r.bool,
  /**
   * @ignore
   */
  readOnly: r.bool,
  /**
   * Render the selected value.
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: r.func,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: r.object,
  /**
   * @ignore
   */
  tabIndex: r.oneOfType([r.number, r.string]),
  /**
   * @ignore
   */
  type: r.any,
  /**
   * The input value.
   */
  value: r.any,
  /**
   * The variant to use.
   */
  variant: r.oneOf(["standard", "outlined", "filled"])
});
const Lk = (e) => {
  const {
    classes: t
  } = e;
  return t;
}, zf = {
  name: "MuiSelect",
  overridesResolver: (e, t) => t.root,
  shouldForwardProp: (e) => Mn(e) && e !== "variant",
  slot: "Root"
}, _k = Q(ya, zf)(""), Bk = Q(xa, zf)(""), zk = Q(ba, zf)(""), za = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = at({
    name: "MuiSelect",
    props: t
  }), {
    autoWidth: i = !1,
    children: s,
    classes: a = {},
    className: l,
    defaultOpen: c = !1,
    displayEmpty: u = !1,
    IconComponent: d = u0,
    id: p,
    input: m,
    inputProps: g,
    label: h,
    labelId: v,
    MenuProps: b,
    multiple: y = !1,
    native: C = !1,
    onClose: x,
    onOpen: T,
    open: w,
    renderValue: R,
    SelectDisplayProps: E,
    variant: O = "outlined",
    ...I
  } = o, P = C ? R0 : D0, A = Gn(), D = fi({
    props: o,
    muiFormControl: A,
    states: ["variant", "error"]
  }), k = D.variant || O, M = {
    ...o,
    variant: k,
    classes: a
  }, F = Lk(M), {
    root: N,
    ...W
  } = F, H = m || {
    standard: /* @__PURE__ */ f.jsx(_k, {
      ownerState: M
    }),
    outlined: /* @__PURE__ */ f.jsx(Bk, {
      label: h,
      ownerState: M
    }),
    filled: /* @__PURE__ */ f.jsx(zk, {
      ownerState: M
    })
  }[k], B = Yt(n, ss(H));
  return /* @__PURE__ */ f.jsx(S.Fragment, {
    children: /* @__PURE__ */ S.cloneElement(H, {
      // Most of the logic is implemented in `SelectInput`.
      // The `Select` component is a simple API wrapper to expose something better to play with.
      inputComponent: P,
      inputProps: {
        children: s,
        error: D.error,
        IconComponent: d,
        variant: k,
        type: void 0,
        // We render a select. We can ignore the type provided by the `Input`.
        multiple: y,
        ...C ? {
          id: p
        } : {
          autoWidth: i,
          defaultOpen: c,
          displayEmpty: u,
          labelId: v,
          MenuProps: b,
          onClose: x,
          onOpen: T,
          open: w,
          renderValue: R,
          SelectDisplayProps: {
            id: p,
            ...E
          }
        },
        ...g,
        classes: g ? bn(W, g.classes) : W,
        ...m ? m.props.inputProps : {}
      },
      ...(y && C || u) && k === "outlined" ? {
        notched: !0
      } : {},
      ref: B,
      className: fe(H.props.className, l, F.root),
      // If a custom input is provided via 'input' prop, do not allow 'variant' to be propagated to it's root element. See https://github.com/mui/material-ui/issues/33894.
      ...!m && {
        variant: k
      },
      ...I
    })
  });
});
process.env.NODE_ENV !== "production" && (za.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the width of the popover will automatically be set according to the items inside the
   * menu, otherwise it will be at least the width of the select input.
   * @default false
   */
  autoWidth: r.bool,
  /**
   * The option elements to populate the select with.
   * Can be some `MenuItem` when `native` is false and `option` when `native` is true.
   *
   * ⚠️The `MenuItem` elements **must** be direct descendants when `native` is false.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   * @default {}
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * If `true`, the component is initially open. Use when the component open state is not controlled (i.e. the `open` prop is not defined).
   * You can only use it when the `native` prop is `false` (default).
   * @default false
   */
  defaultOpen: r.bool,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: r.any,
  /**
   * If `true`, a value is displayed even if no items are selected.
   *
   * In order to display a meaningful value, a function can be passed to the `renderValue` prop which
   * returns the value to be displayed when no items are selected.
   *
   * ⚠️ When using this prop, make sure the label doesn't overlap with the empty displayed value.
   * The label should either be hidden or forced to a shrunk state.
   * @default false
   */
  displayEmpty: r.bool,
  /**
   * The icon that displays the arrow.
   * @default ArrowDropDownIcon
   */
  IconComponent: r.elementType,
  /**
   * The `id` of the wrapper element or the `select` element when `native`.
   */
  id: r.string,
  /**
   * An `Input` element; does not have to be a material-ui specific `Input`.
   */
  input: r.element,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * When `native` is `true`, the attributes are applied on the `select` element.
   */
  inputProps: r.object,
  /**
   * See [OutlinedInput#label](https://mui.com/material-ui/api/outlined-input/#props)
   */
  label: r.node,
  /**
   * The ID of an element that acts as an additional label. The Select will
   * be labelled by the additional label and the selected value.
   */
  labelId: r.string,
  /**
   * Props applied to the [`Menu`](https://mui.com/material-ui/api/menu/) element.
   */
  MenuProps: r.object,
  /**
   * If `true`, `value` must be an array and the menu will support multiple selections.
   * @default false
   */
  multiple: r.bool,
  /**
   * If `true`, the component uses a native `select` element.
   * @default false
   */
  native: r.bool,
  /**
   * Callback fired when a menu item is selected.
   *
   * @param {SelectChangeEvent<Value>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * **Warning**: This is a generic event, not a change event, unless the change event is caused by browser autofill.
   * @param {object} [child] The react element that was selected when `native` is `false` (default).
   */
  onChange: r.func,
  /**
   * Callback fired when the component requests to be closed.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select collapses).
   *
   * @param {object} event The event source of the callback.
   */
  onClose: r.func,
  /**
   * Callback fired when the component requests to be opened.
   * Use it in either controlled (see the `open` prop), or uncontrolled mode (to detect when the Select expands).
   *
   * @param {object} event The event source of the callback.
   */
  onOpen: r.func,
  /**
   * If `true`, the component is shown.
   * You can only use it when the `native` prop is `false` (default).
   */
  open: r.bool,
  /**
   * Render the selected value.
   * You can only use it when the `native` prop is `false` (default).
   *
   * @param {any} value The `value` provided to the component.
   * @returns {ReactNode}
   */
  renderValue: r.func,
  /**
   * Props applied to the clickable div element.
   */
  SelectDisplayProps: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * The `input` value. Providing an empty string will select no options.
   * Set to an empty string `''` if you don't want any of the available options to be selected.
   *
   * If the value is an object it must have reference equality with the option in order to be selected.
   * If the value is not an object, the string representation must match with the string representation of the option in order to be selected.
   */
  value: r.oneOfType([r.oneOf([""]), r.any]),
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: r.oneOf(["filled", "outlined", "standard"])
});
za.muiName = "Select";
function Wk(e) {
  return We("MuiSkeleton", e);
}
_e("MuiSkeleton", ["root", "text", "rectangular", "rounded", "circular", "pulse", "wave", "withChildren", "fitContent", "heightAuto"]);
const Hk = (e) => {
  const {
    classes: t,
    variant: n,
    animation: o,
    hasChildren: i,
    width: s,
    height: a
  } = e;
  return Ue({
    root: ["root", n, o, i && "withChildren", i && !s && "fitContent", i && !a && "heightAuto"]
  }, Wk, t);
}, Cp = ko`
  0% {
    opacity: 1;
  }

  50% {
    opacity: 0.4;
  }

  100% {
    opacity: 1;
  }
`, Sp = ko`
  0% {
    transform: translateX(-100%);
  }

  50% {
    /* +0.5s of delay between each loop */
    transform: translateX(100%);
  }

  100% {
    transform: translateX(100%);
  }
`, Gk = typeof Cp != "string" ? Ko`
        animation: ${Cp} 2s ease-in-out 0.5s infinite;
      ` : null, Uk = typeof Sp != "string" ? Ko`
        &::after {
          animation: ${Sp} 2s linear 0.5s infinite;
        }
      ` : null, Xk = Q("span", {
  name: "MuiSkeleton",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], n.animation !== !1 && t[n.animation], n.hasChildren && t.withChildren, n.hasChildren && !n.width && t.fitContent, n.hasChildren && !n.height && t.heightAuto];
  }
})($e(({
  theme: e
}) => {
  const t = HO(e.shape.borderRadius) || "px", n = GO(e.shape.borderRadius);
  return {
    display: "block",
    // Create a "on paper" color with sufficient contrast retaining the color
    backgroundColor: e.vars ? e.vars.palette.Skeleton.bg : ze(e.palette.text.primary, e.palette.mode === "light" ? 0.11 : 0.13),
    height: "1.2em",
    variants: [{
      props: {
        variant: "text"
      },
      style: {
        marginTop: 0,
        marginBottom: 0,
        height: "auto",
        transformOrigin: "0 55%",
        transform: "scale(1, 0.60)",
        borderRadius: `${n}${t}/${Math.round(n / 0.6 * 10) / 10}${t}`,
        "&:empty:before": {
          content: '"\\00a0"'
        }
      }
    }, {
      props: {
        variant: "circular"
      },
      style: {
        borderRadius: "50%"
      }
    }, {
      props: {
        variant: "rounded"
      },
      style: {
        borderRadius: (e.vars || e).shape.borderRadius
      }
    }, {
      props: ({
        ownerState: o
      }) => o.hasChildren,
      style: {
        "& > *": {
          visibility: "hidden"
        }
      }
    }, {
      props: ({
        ownerState: o
      }) => o.hasChildren && !o.width,
      style: {
        maxWidth: "fit-content"
      }
    }, {
      props: ({
        ownerState: o
      }) => o.hasChildren && !o.height,
      style: {
        height: "auto"
      }
    }, {
      props: {
        animation: "pulse"
      },
      style: Gk || {
        animation: `${Cp} 2s ease-in-out 0.5s infinite`
      }
    }, {
      props: {
        animation: "wave"
      },
      style: {
        position: "relative",
        overflow: "hidden",
        /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */
        WebkitMaskImage: "-webkit-radial-gradient(white, black)",
        "&::after": {
          background: `linear-gradient(
                90deg,
                transparent,
                ${(e.vars || e).palette.action.hover},
                transparent
              )`,
          content: '""',
          position: "absolute",
          transform: "translateX(-100%)",
          bottom: 0,
          left: 0,
          right: 0,
          top: 0
        }
      }
    }, {
      props: {
        animation: "wave"
      },
      style: Uk || {
        "&::after": {
          animation: `${Sp} 2s linear 0.5s infinite`
        }
      }
    }]
  };
})), Ca = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiSkeleton"
  }), {
    animation: i = "pulse",
    className: s,
    component: a = "span",
    height: l,
    style: c,
    variant: u = "text",
    width: d,
    ...p
  } = o, m = {
    ...o,
    animation: i,
    component: a,
    variant: u,
    hasChildren: !!p.children
  }, g = Hk(m);
  return /* @__PURE__ */ f.jsx(Xk, {
    as: a,
    ref: n,
    className: fe(g.root, s),
    ownerState: m,
    ...p,
    style: {
      width: d,
      height: l,
      ...c
    }
  });
});
process.env.NODE_ENV !== "production" && (Ca.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The animation.
   * If `false` the animation effect is disabled.
   * @default 'pulse'
   */
  animation: r.oneOf(["pulse", "wave", !1]),
  /**
   * Optional children to infer width and height from.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * Height of the skeleton.
   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.
   */
  height: r.oneOfType([r.number, r.string]),
  /**
   * @ignore
   */
  style: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * The type of content that will be rendered.
   * @default 'text'
   */
  variant: r.oneOfType([r.oneOf(["circular", "rectangular", "rounded", "text"]), r.string]),
  /**
   * Width of the skeleton.
   * Useful when the skeleton is inside an inline element with no width of its own.
   */
  width: r.oneOfType([r.number, r.string])
});
function Yk(e, t, n = (o, i) => o === i) {
  return e.length === t.length && e.every((o, i) => n(o, t[i]));
}
const Zk = 2;
function M0(e, t) {
  return e - t;
}
function Wh(e, t) {
  const {
    index: n
  } = e.reduce((o, i, s) => {
    const a = Math.abs(t - i);
    return o === null || a < o.distance || a === o.distance ? {
      distance: a,
      index: s
    } : o;
  }, null) ?? {};
  return n;
}
function ll(e, t) {
  if (t.current !== void 0 && e.changedTouches) {
    const n = e;
    for (let o = 0; o < n.changedTouches.length; o += 1) {
      const i = n.changedTouches[o];
      if (i.identifier === t.current)
        return {
          x: i.clientX,
          y: i.clientY
        };
    }
    return !1;
  }
  return {
    x: e.clientX,
    y: e.clientY
  };
}
function lc(e, t, n) {
  return (e - t) * 100 / (n - t);
}
function qk(e, t, n) {
  return (n - t) * e + t;
}
function Jk(e) {
  if (Math.abs(e) < 1) {
    const n = e.toExponential().split("e-"), o = n[0].split(".")[1];
    return (o ? o.length : 0) + parseInt(n[1], 10);
  }
  const t = e.toString().split(".")[1];
  return t ? t.length : 0;
}
function Kk(e, t, n) {
  const o = Math.round((e - n) / t) * t + n;
  return Number(o.toFixed(Jk(t)));
}
function Hh({
  values: e,
  newValue: t,
  index: n
}) {
  const o = e.slice();
  return o[n] = t, o.sort(M0);
}
function cl({
  sliderRef: e,
  activeIndex: t,
  setActive: n
}) {
  var i, s, a;
  const o = dn(e.current);
  (!((i = e.current) != null && i.contains(o.activeElement)) || Number((s = o == null ? void 0 : o.activeElement) == null ? void 0 : s.getAttribute("data-index")) !== t) && ((a = e.current) == null || a.querySelector(`[type="range"][data-index="${t}"]`).focus()), n && n(t);
}
function ul(e, t) {
  return typeof e == "number" && typeof t == "number" ? e === t : typeof e == "object" && typeof t == "object" ? Yk(e, t) : !1;
}
const Qk = {
  horizontal: {
    offset: (e) => ({
      left: `${e}%`
    }),
    leap: (e) => ({
      width: `${e}%`
    })
  },
  "horizontal-reverse": {
    offset: (e) => ({
      right: `${e}%`
    }),
    leap: (e) => ({
      width: `${e}%`
    })
  },
  vertical: {
    offset: (e) => ({
      bottom: `${e}%`
    }),
    leap: (e) => ({
      height: `${e}%`
    })
  }
}, eF = (e) => e;
let dl;
function Gh() {
  return dl === void 0 && (typeof CSS < "u" && typeof CSS.supports == "function" ? dl = CSS.supports("touch-action", "none") : dl = !0), dl;
}
function tF(e) {
  const {
    "aria-labelledby": t,
    defaultValue: n,
    disabled: o = !1,
    disableSwap: i = !1,
    isRtl: s = !1,
    marks: a = !1,
    max: l = 100,
    min: c = 0,
    name: u,
    onChange: d,
    onChangeCommitted: p,
    orientation: m = "horizontal",
    rootRef: g,
    scale: h = eF,
    step: v = 1,
    shiftStep: b = 10,
    tabIndex: y,
    value: C
  } = e, x = S.useRef(void 0), [T, w] = S.useState(-1), [R, E] = S.useState(-1), [O, I] = S.useState(!1), P = S.useRef(0), [A, D] = ir({
    controlled: C,
    default: n ?? c,
    name: "Slider"
  }), k = d && ((ie, be, xe) => {
    const Ie = ie.nativeEvent || ie, Pe = new Ie.constructor(Ie.type, Ie);
    Object.defineProperty(Pe, "target", {
      writable: !0,
      value: {
        value: be,
        name: u
      }
    }), d(Pe, be, xe);
  }), M = Array.isArray(A);
  let F = M ? A.slice().sort(M0) : [A];
  F = F.map((ie) => ie == null ? c : Pi(ie, c, l));
  const N = a === !0 && v !== null ? [...Array(Math.floor((l - c) / v) + 1)].map((ie, be) => ({
    value: c + v * be
  })) : a || [], W = N.map((ie) => ie.value), [H, B] = S.useState(-1), j = S.useRef(null), L = Yt(g, j), ee = (ie) => (be) => {
    var Ie;
    const xe = Number(be.currentTarget.getAttribute("data-index"));
    Gi(be.target) && B(xe), E(xe), (Ie = ie == null ? void 0 : ie.onFocus) == null || Ie.call(ie, be);
  }, Y = (ie) => (be) => {
    var xe;
    Gi(be.target) || B(-1), E(-1), (xe = ie == null ? void 0 : ie.onBlur) == null || xe.call(ie, be);
  }, $ = (ie, be) => {
    const xe = Number(ie.currentTarget.getAttribute("data-index")), Ie = F[xe], Pe = W.indexOf(Ie);
    let Ce = be;
    if (N && v == null) {
      const Oe = W[W.length - 1];
      Ce > Oe ? Ce = Oe : Ce < W[0] ? Ce = W[0] : Ce = Ce < Ie ? W[Pe - 1] : W[Pe + 1];
    }
    if (Ce = Pi(Ce, c, l), M) {
      i && (Ce = Pi(Ce, F[xe - 1] || -1 / 0, F[xe + 1] || 1 / 0));
      const Oe = Ce;
      Ce = Hh({
        values: F,
        newValue: Ce,
        index: xe
      });
      let Be = xe;
      i || (Be = Ce.indexOf(Oe)), cl({
        sliderRef: j,
        activeIndex: Be
      });
    }
    D(Ce), B(xe), k && !ul(Ce, A) && k(ie, Ce, xe), p && p(ie, Ce);
  }, U = (ie) => (be) => {
    var xe;
    if (v !== null) {
      const Ie = Number(be.currentTarget.getAttribute("data-index")), Pe = F[Ie];
      let Ce = null;
      (be.key === "ArrowLeft" || be.key === "ArrowDown") && be.shiftKey || be.key === "PageDown" ? Ce = Math.max(Pe - b, c) : ((be.key === "ArrowRight" || be.key === "ArrowUp") && be.shiftKey || be.key === "PageUp") && (Ce = Math.min(Pe + b, l)), Ce !== null && ($(be, Ce), be.preventDefault());
    }
    (xe = ie == null ? void 0 : ie.onKeyDown) == null || xe.call(ie, be);
  };
  to(() => {
    var ie;
    o && j.current.contains(document.activeElement) && ((ie = document.activeElement) == null || ie.blur());
  }, [o]), o && T !== -1 && w(-1), o && H !== -1 && B(-1);
  const X = (ie) => (be) => {
    var xe;
    (xe = ie.onChange) == null || xe.call(ie, be), $(be, be.target.valueAsNumber);
  }, Z = S.useRef(void 0);
  let G = m;
  s && m === "horizontal" && (G += "-reverse");
  const K = ({
    finger: ie,
    move: be = !1
  }) => {
    const {
      current: xe
    } = j, {
      width: Ie,
      height: Pe,
      bottom: Ce,
      left: Oe
    } = xe.getBoundingClientRect();
    let Be;
    G.startsWith("vertical") ? Be = (Ce - ie.y) / Pe : Be = (ie.x - Oe) / Ie, G.includes("-reverse") && (Be = 1 - Be);
    let Ae;
    if (Ae = qk(Be, c, l), v)
      Ae = Kk(Ae, v, c);
    else {
      const Ze = Wh(W, Ae);
      Ae = W[Ze];
    }
    Ae = Pi(Ae, c, l);
    let nt = 0;
    if (M) {
      be ? nt = Z.current : nt = Wh(F, Ae), i && (Ae = Pi(Ae, F[nt - 1] || -1 / 0, F[nt + 1] || 1 / 0));
      const Ze = Ae;
      Ae = Hh({
        values: F,
        newValue: Ae,
        index: nt
      }), i && be || (nt = Ae.indexOf(Ze), Z.current = nt);
    }
    return {
      newValue: Ae,
      activeIndex: nt
    };
  }, re = hn((ie) => {
    const be = ll(ie, x);
    if (!be)
      return;
    if (P.current += 1, ie.type === "mousemove" && ie.buttons === 0) {
      ne(ie);
      return;
    }
    const {
      newValue: xe,
      activeIndex: Ie
    } = K({
      finger: be,
      move: !0
    });
    cl({
      sliderRef: j,
      activeIndex: Ie,
      setActive: w
    }), D(xe), !O && P.current > Zk && I(!0), k && !ul(xe, A) && k(ie, xe, Ie);
  }), ne = hn((ie) => {
    const be = ll(ie, x);
    if (I(!1), !be)
      return;
    const {
      newValue: xe
    } = K({
      finger: be,
      move: !0
    });
    w(-1), ie.type === "touchend" && E(-1), p && p(ie, xe), x.current = void 0, q();
  }), z = hn((ie) => {
    if (o)
      return;
    Gh() || ie.preventDefault();
    const be = ie.changedTouches[0];
    be != null && (x.current = be.identifier);
    const xe = ll(ie, x);
    if (xe !== !1) {
      const {
        newValue: Pe,
        activeIndex: Ce
      } = K({
        finger: xe
      });
      cl({
        sliderRef: j,
        activeIndex: Ce,
        setActive: w
      }), D(Pe), k && !ul(Pe, A) && k(ie, Pe, Ce);
    }
    P.current = 0;
    const Ie = dn(j.current);
    Ie.addEventListener("touchmove", re, {
      passive: !0
    }), Ie.addEventListener("touchend", ne, {
      passive: !0
    });
  }), q = S.useCallback(() => {
    const ie = dn(j.current);
    ie.removeEventListener("mousemove", re), ie.removeEventListener("mouseup", ne), ie.removeEventListener("touchmove", re), ie.removeEventListener("touchend", ne);
  }, [ne, re]);
  S.useEffect(() => {
    const {
      current: ie
    } = j;
    return ie.addEventListener("touchstart", z, {
      passive: Gh()
    }), () => {
      ie.removeEventListener("touchstart", z), q();
    };
  }, [q, z]), S.useEffect(() => {
    o && q();
  }, [o, q]);
  const _ = (ie) => (be) => {
    var Pe;
    if ((Pe = ie.onMouseDown) == null || Pe.call(ie, be), o || be.defaultPrevented || be.button !== 0)
      return;
    be.preventDefault();
    const xe = ll(be, x);
    if (xe !== !1) {
      const {
        newValue: Ce,
        activeIndex: Oe
      } = K({
        finger: xe
      });
      cl({
        sliderRef: j,
        activeIndex: Oe,
        setActive: w
      }), D(Ce), k && !ul(Ce, A) && k(be, Ce, Oe);
    }
    P.current = 0;
    const Ie = dn(j.current);
    Ie.addEventListener("mousemove", re, {
      passive: !0
    }), Ie.addEventListener("mouseup", ne);
  }, oe = lc(M ? F[0] : c, c, l), te = lc(F[F.length - 1], c, l) - oe, se = (ie = {}) => {
    const be = Gs(ie), xe = {
      onMouseDown: _(be || {})
    }, Ie = {
      ...be,
      ...xe
    };
    return {
      ...ie,
      ref: L,
      ...Ie
    };
  }, ae = (ie) => (be) => {
    var Ie;
    (Ie = ie.onMouseOver) == null || Ie.call(ie, be);
    const xe = Number(be.currentTarget.getAttribute("data-index"));
    E(xe);
  }, me = (ie) => (be) => {
    var xe;
    (xe = ie.onMouseLeave) == null || xe.call(ie, be), E(-1);
  };
  return {
    active: T,
    axis: G,
    axisProps: Qk,
    dragging: O,
    focusedThumbIndex: H,
    getHiddenInputProps: (ie = {}) => {
      const be = Gs(ie), xe = {
        onChange: X(be || {}),
        onFocus: ee(be || {}),
        onBlur: Y(be || {}),
        onKeyDown: U(be || {})
      }, Ie = {
        ...be,
        ...xe
      };
      return {
        tabIndex: y,
        "aria-labelledby": t,
        "aria-orientation": m,
        "aria-valuemax": h(l),
        "aria-valuemin": h(c),
        name: u,
        type: "range",
        min: e.min,
        max: e.max,
        step: e.step === null && e.marks ? "any" : e.step ?? void 0,
        disabled: o,
        ...ie,
        ...Ie,
        style: {
          ...WR,
          direction: s ? "rtl" : "ltr",
          // So that VoiceOver's focus indicator matches the thumb's dimensions
          width: "100%",
          height: "100%"
        }
      };
    },
    getRootProps: se,
    getThumbProps: (ie = {}) => {
      const be = Gs(ie), xe = {
        onMouseOver: ae(be || {}),
        onMouseLeave: me(be || {})
      };
      return {
        ...ie,
        ...be,
        ...xe
      };
    },
    marks: N,
    open: R,
    range: M,
    rootRef: L,
    trackLeap: te,
    trackOffset: oe,
    values: F,
    getThumbStyle: (ie) => ({
      // So the non active thumb doesn't show its label on hover.
      pointerEvents: T !== -1 && T !== ie ? "none" : void 0
    })
  };
}
const nF = (e) => !e || !sr(e);
function oF(e) {
  return We("MuiSlider", e);
}
const ho = _e("MuiSlider", ["root", "active", "colorPrimary", "colorSecondary", "colorError", "colorInfo", "colorSuccess", "colorWarning", "disabled", "dragging", "focusVisible", "mark", "markActive", "marked", "markLabel", "markLabelActive", "rail", "sizeSmall", "thumb", "thumbColorPrimary", "thumbColorSecondary", "thumbColorError", "thumbColorSuccess", "thumbColorInfo", "thumbColorWarning", "track", "trackInverted", "trackFalse", "thumbSizeSmall", "valueLabel", "valueLabelOpen", "valueLabelCircle", "valueLabelLabel", "vertical"]), rF = (e) => {
  const {
    open: t
  } = e;
  return {
    offset: fe(t && ho.valueLabelOpen),
    circle: ho.valueLabelCircle,
    label: ho.valueLabelLabel
  };
};
function j0(e) {
  const {
    children: t,
    className: n,
    value: o
  } = e, i = rF(e);
  return t ? /* @__PURE__ */ S.cloneElement(t, {
    className: fe(t.props.className)
  }, /* @__PURE__ */ f.jsxs(S.Fragment, {
    children: [t.props.children, /* @__PURE__ */ f.jsx("span", {
      className: fe(i.offset, n),
      "aria-hidden": !0,
      children: /* @__PURE__ */ f.jsx("span", {
        className: i.circle,
        children: /* @__PURE__ */ f.jsx("span", {
          className: i.label,
          children: o
        })
      })
    })]
  })) : null;
}
process.env.NODE_ENV !== "production" && (j0.propTypes = {
  children: r.element.isRequired,
  className: r.string,
  value: r.node
});
function Uh(e) {
  return e;
}
const iF = Q("span", {
  name: "MuiSlider",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[`color${ue(n.color)}`], n.size !== "medium" && t[`size${ue(n.size)}`], n.marked && t.marked, n.orientation === "vertical" && t.vertical, n.track === "inverted" && t.trackInverted, n.track === !1 && t.trackFalse];
  }
})($e(({
  theme: e
}) => ({
  borderRadius: 12,
  boxSizing: "content-box",
  display: "inline-block",
  position: "relative",
  cursor: "pointer",
  touchAction: "none",
  WebkitTapHighlightColor: "transparent",
  "@media print": {
    colorAdjust: "exact"
  },
  [`&.${ho.disabled}`]: {
    pointerEvents: "none",
    cursor: "default",
    color: (e.vars || e).palette.grey[400]
  },
  [`&.${ho.dragging}`]: {
    [`& .${ho.thumb}, & .${ho.track}`]: {
      transition: "none"
    }
  },
  variants: [...Object.entries(e.palette).filter(wt()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      color: (e.vars || e).palette[t].main
    }
  })), {
    props: {
      orientation: "horizontal"
    },
    style: {
      height: 4,
      width: "100%",
      padding: "13px 0",
      // The primary input mechanism of the device includes a pointing device of limited accuracy.
      "@media (pointer: coarse)": {
        // Reach 42px touch target, about ~8mm on screen.
        padding: "20px 0"
      }
    }
  }, {
    props: {
      orientation: "horizontal",
      size: "small"
    },
    style: {
      height: 2
    }
  }, {
    props: {
      orientation: "horizontal",
      marked: !0
    },
    style: {
      marginBottom: 20
    }
  }, {
    props: {
      orientation: "vertical"
    },
    style: {
      height: "100%",
      width: 4,
      padding: "0 13px",
      // The primary input mechanism of the device includes a pointing device of limited accuracy.
      "@media (pointer: coarse)": {
        // Reach 42px touch target, about ~8mm on screen.
        padding: "0 20px"
      }
    }
  }, {
    props: {
      orientation: "vertical",
      size: "small"
    },
    style: {
      width: 2
    }
  }, {
    props: {
      orientation: "vertical",
      marked: !0
    },
    style: {
      marginRight: 44
    }
  }]
}))), sF = Q("span", {
  name: "MuiSlider",
  slot: "Rail",
  overridesResolver: (e, t) => t.rail
})({
  display: "block",
  position: "absolute",
  borderRadius: "inherit",
  backgroundColor: "currentColor",
  opacity: 0.38,
  variants: [{
    props: {
      orientation: "horizontal"
    },
    style: {
      width: "100%",
      height: "inherit",
      top: "50%",
      transform: "translateY(-50%)"
    }
  }, {
    props: {
      orientation: "vertical"
    },
    style: {
      height: "100%",
      width: "inherit",
      left: "50%",
      transform: "translateX(-50%)"
    }
  }, {
    props: {
      track: "inverted"
    },
    style: {
      opacity: 1
    }
  }]
}), aF = Q("span", {
  name: "MuiSlider",
  slot: "Track",
  overridesResolver: (e, t) => t.track
})($e(({
  theme: e
}) => ({
  display: "block",
  position: "absolute",
  borderRadius: "inherit",
  border: "1px solid currentColor",
  backgroundColor: "currentColor",
  transition: e.transitions.create(["left", "width", "bottom", "height"], {
    duration: e.transitions.duration.shortest
  }),
  variants: [{
    props: {
      size: "small"
    },
    style: {
      border: "none"
    }
  }, {
    props: {
      orientation: "horizontal"
    },
    style: {
      height: "inherit",
      top: "50%",
      transform: "translateY(-50%)"
    }
  }, {
    props: {
      orientation: "vertical"
    },
    style: {
      width: "inherit",
      left: "50%",
      transform: "translateX(-50%)"
    }
  }, {
    props: {
      track: !1
    },
    style: {
      display: "none"
    }
  }, ...Object.entries(e.palette).filter(wt()).map(([t]) => ({
    props: {
      color: t,
      track: "inverted"
    },
    style: {
      ...e.vars ? {
        backgroundColor: e.vars.palette.Slider[`${t}Track`],
        borderColor: e.vars.palette.Slider[`${t}Track`]
      } : {
        backgroundColor: $n(e.palette[t].main, 0.62),
        borderColor: $n(e.palette[t].main, 0.62),
        ...e.applyStyles("dark", {
          backgroundColor: no(e.palette[t].main, 0.5)
        }),
        ...e.applyStyles("dark", {
          borderColor: no(e.palette[t].main, 0.5)
        })
      }
    }
  }))]
}))), lF = Q("span", {
  name: "MuiSlider",
  slot: "Thumb",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.thumb, t[`thumbColor${ue(n.color)}`], n.size !== "medium" && t[`thumbSize${ue(n.size)}`]];
  }
})($e(({
  theme: e
}) => ({
  position: "absolute",
  width: 20,
  height: 20,
  boxSizing: "border-box",
  borderRadius: "50%",
  outline: 0,
  backgroundColor: "currentColor",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  transition: e.transitions.create(["box-shadow", "left", "bottom"], {
    duration: e.transitions.duration.shortest
  }),
  "&::before": {
    position: "absolute",
    content: '""',
    borderRadius: "inherit",
    width: "100%",
    height: "100%",
    boxShadow: (e.vars || e).shadows[2]
  },
  "&::after": {
    position: "absolute",
    content: '""',
    borderRadius: "50%",
    // 42px is the hit target
    width: 42,
    height: 42,
    top: "50%",
    left: "50%",
    transform: "translate(-50%, -50%)"
  },
  [`&.${ho.disabled}`]: {
    "&:hover": {
      boxShadow: "none"
    }
  },
  variants: [{
    props: {
      size: "small"
    },
    style: {
      width: 12,
      height: 12,
      "&::before": {
        boxShadow: "none"
      }
    }
  }, {
    props: {
      orientation: "horizontal"
    },
    style: {
      top: "50%",
      transform: "translate(-50%, -50%)"
    }
  }, {
    props: {
      orientation: "vertical"
    },
    style: {
      left: "50%",
      transform: "translate(-50%, 50%)"
    }
  }, ...Object.entries(e.palette).filter(wt()).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&:hover, &.${ho.focusVisible}`]: {
        ...e.vars ? {
          boxShadow: `0px 0px 0px 8px rgba(${e.vars.palette[t].mainChannel} / 0.16)`
        } : {
          boxShadow: `0px 0px 0px 8px ${ze(e.palette[t].main, 0.16)}`
        },
        "@media (hover: none)": {
          boxShadow: "none"
        }
      },
      [`&.${ho.active}`]: {
        ...e.vars ? {
          boxShadow: `0px 0px 0px 14px rgba(${e.vars.palette[t].mainChannel} / 0.16)`
        } : {
          boxShadow: `0px 0px 0px 14px ${ze(e.palette[t].main, 0.16)}`
        }
      }
    }
  }))]
}))), cF = Q(j0, {
  name: "MuiSlider",
  slot: "ValueLabel",
  overridesResolver: (e, t) => t.valueLabel
})($e(({
  theme: e
}) => ({
  zIndex: 1,
  whiteSpace: "nowrap",
  ...e.typography.body2,
  fontWeight: 500,
  transition: e.transitions.create(["transform"], {
    duration: e.transitions.duration.shortest
  }),
  position: "absolute",
  backgroundColor: (e.vars || e).palette.grey[600],
  borderRadius: 2,
  color: (e.vars || e).palette.common.white,
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  padding: "0.25rem 0.75rem",
  variants: [{
    props: {
      orientation: "horizontal"
    },
    style: {
      transform: "translateY(-100%) scale(0)",
      top: "-10px",
      transformOrigin: "bottom center",
      "&::before": {
        position: "absolute",
        content: '""',
        width: 8,
        height: 8,
        transform: "translate(-50%, 50%) rotate(45deg)",
        backgroundColor: "inherit",
        bottom: 0,
        left: "50%"
      },
      [`&.${ho.valueLabelOpen}`]: {
        transform: "translateY(-100%) scale(1)"
      }
    }
  }, {
    props: {
      orientation: "vertical"
    },
    style: {
      transform: "translateY(-50%) scale(0)",
      right: "30px",
      top: "50%",
      transformOrigin: "right center",
      "&::before": {
        position: "absolute",
        content: '""',
        width: 8,
        height: 8,
        transform: "translate(-50%, -50%) rotate(45deg)",
        backgroundColor: "inherit",
        right: -8,
        top: "50%"
      },
      [`&.${ho.valueLabelOpen}`]: {
        transform: "translateY(-50%) scale(1)"
      }
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      fontSize: e.typography.pxToRem(12),
      padding: "0.25rem 0.5rem"
    }
  }, {
    props: {
      orientation: "vertical",
      size: "small"
    },
    style: {
      right: "20px"
    }
  }]
}))), uF = Q("span", {
  name: "MuiSlider",
  slot: "Mark",
  shouldForwardProp: (e) => Zc(e) && e !== "markActive",
  overridesResolver: (e, t) => {
    const {
      markActive: n
    } = e;
    return [t.mark, n && t.markActive];
  }
})($e(({
  theme: e
}) => ({
  position: "absolute",
  width: 2,
  height: 2,
  borderRadius: 1,
  backgroundColor: "currentColor",
  variants: [{
    props: {
      orientation: "horizontal"
    },
    style: {
      top: "50%",
      transform: "translate(-1px, -50%)"
    }
  }, {
    props: {
      orientation: "vertical"
    },
    style: {
      left: "50%",
      transform: "translate(-50%, 1px)"
    }
  }, {
    props: {
      markActive: !0
    },
    style: {
      backgroundColor: (e.vars || e).palette.background.paper,
      opacity: 0.8
    }
  }]
}))), dF = Q("span", {
  name: "MuiSlider",
  slot: "MarkLabel",
  shouldForwardProp: (e) => Zc(e) && e !== "markLabelActive",
  overridesResolver: (e, t) => t.markLabel
})($e(({
  theme: e
}) => ({
  ...e.typography.body2,
  color: (e.vars || e).palette.text.secondary,
  position: "absolute",
  whiteSpace: "nowrap",
  variants: [{
    props: {
      orientation: "horizontal"
    },
    style: {
      top: 30,
      transform: "translateX(-50%)",
      "@media (pointer: coarse)": {
        top: 40
      }
    }
  }, {
    props: {
      orientation: "vertical"
    },
    style: {
      left: 36,
      transform: "translateY(50%)",
      "@media (pointer: coarse)": {
        left: 44
      }
    }
  }, {
    props: {
      markLabelActive: !0
    },
    style: {
      color: (e.vars || e).palette.text.primary
    }
  }]
}))), pF = (e) => {
  const {
    disabled: t,
    dragging: n,
    marked: o,
    orientation: i,
    track: s,
    classes: a,
    color: l,
    size: c
  } = e, u = {
    root: ["root", t && "disabled", n && "dragging", o && "marked", i === "vertical" && "vertical", s === "inverted" && "trackInverted", s === !1 && "trackFalse", l && `color${ue(l)}`, c && `size${ue(c)}`],
    rail: ["rail"],
    track: ["track"],
    mark: ["mark"],
    markActive: ["markActive"],
    markLabel: ["markLabel"],
    markLabelActive: ["markLabelActive"],
    valueLabel: ["valueLabel"],
    thumb: ["thumb", t && "disabled", c && `thumbSize${ue(c)}`, l && `thumbColor${ue(l)}`],
    active: ["active"],
    disabled: ["disabled"],
    focusVisible: ["focusVisible"]
  };
  return Ue(u, oF, a);
}, fF = ({
  children: e
}) => e, k0 = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiSlider"
  }), i = Nr(), {
    "aria-label": s,
    "aria-valuetext": a,
    "aria-labelledby": l,
    // eslint-disable-next-line react/prop-types
    component: c = "span",
    components: u = {},
    componentsProps: d = {},
    color: p = "primary",
    classes: m,
    className: g,
    disableSwap: h = !1,
    disabled: v = !1,
    getAriaLabel: b,
    getAriaValueText: y,
    marks: C = !1,
    max: x = 100,
    min: T = 0,
    name: w,
    onChange: R,
    onChangeCommitted: E,
    orientation: O = "horizontal",
    shiftStep: I = 10,
    size: P = "medium",
    step: A = 1,
    scale: D = Uh,
    slotProps: k,
    slots: M,
    tabIndex: F,
    track: N = "normal",
    value: W,
    valueLabelDisplay: H = "off",
    valueLabelFormat: B = Uh,
    ...j
  } = o, L = {
    ...o,
    isRtl: i,
    max: x,
    min: T,
    classes: m,
    disabled: v,
    disableSwap: h,
    orientation: O,
    marks: C,
    color: p,
    size: P,
    step: A,
    shiftStep: I,
    scale: D,
    track: N,
    valueLabelDisplay: H,
    valueLabelFormat: B
  }, {
    axisProps: ee,
    getRootProps: Y,
    getHiddenInputProps: $,
    getThumbProps: U,
    open: X,
    active: Z,
    axis: G,
    focusedThumbIndex: K,
    range: re,
    dragging: ne,
    marks: z,
    values: q,
    trackOffset: _,
    trackLeap: oe,
    getThumbStyle: te
  } = tF({
    ...L,
    rootRef: n
  });
  L.marked = z.length > 0 && z.some((it) => it.label), L.dragging = ne, L.focusedThumbIndex = K;
  const se = pF(L), ae = (M == null ? void 0 : M.root) ?? u.Root ?? iF, me = (M == null ? void 0 : M.rail) ?? u.Rail ?? sF, ye = (M == null ? void 0 : M.track) ?? u.Track ?? aF, Te = (M == null ? void 0 : M.thumb) ?? u.Thumb ?? lF, Ve = (M == null ? void 0 : M.valueLabel) ?? u.ValueLabel ?? cF, ie = (M == null ? void 0 : M.mark) ?? u.Mark ?? uF, be = (M == null ? void 0 : M.markLabel) ?? u.MarkLabel ?? dF, xe = (M == null ? void 0 : M.input) ?? u.Input ?? "input", Ie = (k == null ? void 0 : k.root) ?? d.root, Pe = (k == null ? void 0 : k.rail) ?? d.rail, Ce = (k == null ? void 0 : k.track) ?? d.track, Oe = (k == null ? void 0 : k.thumb) ?? d.thumb, Be = (k == null ? void 0 : k.valueLabel) ?? d.valueLabel, Ae = (k == null ? void 0 : k.mark) ?? d.mark, nt = (k == null ? void 0 : k.markLabel) ?? d.markLabel, Ze = (k == null ? void 0 : k.input) ?? d.input, dt = Sn({
    elementType: ae,
    getSlotProps: Y,
    externalSlotProps: Ie,
    externalForwardedProps: j,
    additionalProps: {
      ...nF(ae) && {
        as: c
      }
    },
    ownerState: {
      ...L,
      ...Ie == null ? void 0 : Ie.ownerState
    },
    className: [se.root, g]
  }), de = Sn({
    elementType: me,
    externalSlotProps: Pe,
    ownerState: L,
    className: se.rail
  }), we = Sn({
    elementType: ye,
    externalSlotProps: Ce,
    additionalProps: {
      style: {
        ...ee[G].offset(_),
        ...ee[G].leap(oe)
      }
    },
    ownerState: {
      ...L,
      ...Ce == null ? void 0 : Ce.ownerState
    },
    className: se.track
  }), pe = Sn({
    elementType: Te,
    getSlotProps: U,
    externalSlotProps: Oe,
    ownerState: {
      ...L,
      ...Oe == null ? void 0 : Oe.ownerState
    },
    className: se.thumb
  }), Me = Sn({
    elementType: Ve,
    externalSlotProps: Be,
    ownerState: {
      ...L,
      ...Be == null ? void 0 : Be.ownerState
    },
    className: se.valueLabel
  }), je = Sn({
    elementType: ie,
    externalSlotProps: Ae,
    ownerState: L,
    className: se.mark
  }), st = Sn({
    elementType: be,
    externalSlotProps: nt,
    ownerState: L,
    className: se.markLabel
  }), pt = Sn({
    elementType: xe,
    getSlotProps: $,
    externalSlotProps: Ze,
    ownerState: L
  });
  return /* @__PURE__ */ f.jsxs(ae, {
    ...dt,
    children: [/* @__PURE__ */ f.jsx(me, {
      ...de
    }), /* @__PURE__ */ f.jsx(ye, {
      ...we
    }), z.filter((it) => it.value >= T && it.value <= x).map((it, bt) => {
      const Zt = lc(it.value, T, x), xn = ee[G].offset(Zt);
      let qt;
      return N === !1 ? qt = q.includes(it.value) : qt = N === "normal" && (re ? it.value >= q[0] && it.value <= q[q.length - 1] : it.value <= q[0]) || N === "inverted" && (re ? it.value <= q[0] || it.value >= q[q.length - 1] : it.value >= q[0]), /* @__PURE__ */ f.jsxs(S.Fragment, {
        children: [/* @__PURE__ */ f.jsx(ie, {
          "data-index": bt,
          ...je,
          ...!sr(ie) && {
            markActive: qt
          },
          style: {
            ...xn,
            ...je.style
          },
          className: fe(je.className, qt && se.markActive)
        }), it.label != null ? /* @__PURE__ */ f.jsx(be, {
          "aria-hidden": !0,
          "data-index": bt,
          ...st,
          ...!sr(be) && {
            markLabelActive: qt
          },
          style: {
            ...xn,
            ...st.style
          },
          className: fe(se.markLabel, st.className, qt && se.markLabelActive),
          children: it.label
        }) : null]
      }, bt);
    }), q.map((it, bt) => {
      const Zt = lc(it, T, x), xn = ee[G].offset(Zt), qt = H === "off" ? fF : Ve;
      return (
        /* TODO v6: Change component structure. It will help in avoiding the complicated React.cloneElement API added in SliderValueLabel component. Should be: Thumb -> Input, ValueLabel. Follow Joy UI's Slider structure. */
        /* @__PURE__ */ f.jsx(qt, {
          ...!sr(qt) && {
            valueLabelFormat: B,
            valueLabelDisplay: H,
            value: typeof B == "function" ? B(D(it), bt) : B,
            index: bt,
            open: X === bt || Z === bt || H === "on",
            disabled: v
          },
          ...Me,
          children: /* @__PURE__ */ f.jsx(Te, {
            "data-index": bt,
            ...pe,
            className: fe(se.thumb, pe.className, Z === bt && se.active, K === bt && se.focusVisible),
            style: {
              ...xn,
              ...te(bt),
              ...pe.style
            },
            children: /* @__PURE__ */ f.jsx(xe, {
              "data-index": bt,
              "aria-label": b ? b(bt) : s,
              "aria-valuenow": D(it),
              "aria-labelledby": l,
              "aria-valuetext": y ? y(D(it), bt) : a,
              value: q[bt],
              ...pt
            })
          })
        }, bt)
      );
    })]
  });
});
process.env.NODE_ENV !== "production" && (k0.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The label of the slider.
   */
  "aria-label": oo(r.string, (e) => Array.isArray(e.value || e.defaultValue) && e["aria-label"] != null ? new Error("MUI: You need to use the `getAriaLabel` prop instead of `aria-label` when using a range slider.") : null),
  /**
   * The id of the element containing a label for the slider.
   */
  "aria-labelledby": r.string,
  /**
   * A string value that provides a user-friendly name for the current value of the slider.
   */
  "aria-valuetext": oo(r.string, (e) => Array.isArray(e.value || e.defaultValue) && e["aria-valuetext"] != null ? new Error("MUI: You need to use the `getAriaValueText` prop instead of `aria-valuetext` when using a range slider.") : null),
  /**
   * @ignore
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: r.oneOfType([r.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), r.string]),
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  components: r.shape({
    Input: r.elementType,
    Mark: r.elementType,
    MarkLabel: r.elementType,
    Rail: r.elementType,
    Root: r.elementType,
    Thumb: r.elementType,
    Track: r.elementType,
    ValueLabel: r.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   *
   * @default {}
   */
  componentsProps: r.shape({
    input: r.oneOfType([r.func, r.object]),
    mark: r.oneOfType([r.func, r.object]),
    markLabel: r.oneOfType([r.func, r.object]),
    rail: r.oneOfType([r.func, r.object]),
    root: r.oneOfType([r.func, r.object]),
    thumb: r.oneOfType([r.func, r.object]),
    track: r.oneOfType([r.func, r.object]),
    valueLabel: r.oneOfType([r.func, r.shape({
      children: r.element,
      className: r.string,
      open: r.bool,
      style: r.object,
      value: r.number,
      valueLabelDisplay: r.oneOf(["auto", "off", "on"])
    })])
  }),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: r.oneOfType([r.arrayOf(r.number), r.number]),
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: r.bool,
  /**
   * If `true`, the active thumb doesn't swap when moving pointer over a thumb while dragging another thumb.
   * @default false
   */
  disableSwap: r.bool,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the thumb labels of the slider.
   * This is important for screen reader users.
   * @param {number} index The thumb label's index to format.
   * @returns {string}
   */
  getAriaLabel: r.func,
  /**
   * Accepts a function which returns a string value that provides a user-friendly name for the current value of the slider.
   * This is important for screen reader users.
   * @param {number} value The thumb label's value to format.
   * @param {number} index The thumb label's index to format.
   * @returns {string}
   */
  getAriaValueText: r.func,
  /**
   * Marks indicate predetermined values to which the user can move the slider.
   * If `true` the marks are spaced according the value of the `step` prop.
   * If an array, it should contain objects with `value` and an optional `label` keys.
   * @default false
   */
  marks: r.oneOfType([r.arrayOf(r.shape({
    label: r.node,
    value: r.number.isRequired
  })), r.bool]),
  /**
   * The maximum allowed value of the slider.
   * Should not be equal to min.
   * @default 100
   */
  max: r.number,
  /**
   * The minimum allowed value of the slider.
   * Should not be equal to max.
   * @default 0
   */
  min: r.number,
  /**
   * Name attribute of the hidden `input` element.
   */
  name: r.string,
  /**
   * Callback function that is fired when the slider's value changed.
   *
   * @param {Event} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (any).
   * **Warning**: This is a generic event not a change event.
   * @param {number | number[]} value The new value.
   * @param {number} activeThumb Index of the currently moved thumb.
   */
  onChange: r.func,
  /**
   * Callback function that is fired when the `mouseup` is triggered.
   *
   * @param {React.SyntheticEvent | Event} event The event source of the callback. **Warning**: This is a generic event not a change event.
   * @param {number | number[]} value The new value.
   */
  onChangeCommitted: r.func,
  /**
   * The component orientation.
   * @default 'horizontal'
   */
  orientation: r.oneOf(["horizontal", "vertical"]),
  /**
   * A transformation function, to change the scale of the slider.
   * @param {any} x
   * @returns {any}
   * @default function Identity(x) {
   *   return x;
   * }
   */
  scale: r.func,
  /**
   * The granularity with which the slider can step through values when using Page Up/Page Down or Shift + Arrow Up/Arrow Down.
   * @default 10
   */
  shiftStep: r.number,
  /**
   * The size of the slider.
   * @default 'medium'
   */
  size: r.oneOfType([r.oneOf(["small", "medium"]), r.string]),
  /**
   * The props used for each slot inside the Slider.
   * @default {}
   */
  slotProps: r.shape({
    input: r.oneOfType([r.func, r.object]),
    mark: r.oneOfType([r.func, r.object]),
    markLabel: r.oneOfType([r.func, r.object]),
    rail: r.oneOfType([r.func, r.object]),
    root: r.oneOfType([r.func, r.object]),
    thumb: r.oneOfType([r.func, r.object]),
    track: r.oneOfType([r.func, r.object]),
    valueLabel: r.oneOfType([r.func, r.shape({
      children: r.element,
      className: r.string,
      open: r.bool,
      style: r.object,
      value: r.number,
      valueLabelDisplay: r.oneOf(["auto", "off", "on"])
    })])
  }),
  /**
   * The components used for each slot inside the Slider.
   * Either a string to use a HTML element or a component.
   * @default {}
   */
  slots: r.shape({
    input: r.elementType,
    mark: r.elementType,
    markLabel: r.elementType,
    rail: r.elementType,
    root: r.elementType,
    thumb: r.elementType,
    track: r.elementType,
    valueLabel: r.elementType
  }),
  /**
   * The granularity with which the slider can step through values. (A "discrete" slider.)
   * The `min` prop serves as the origin for the valid values.
   * We recommend (max - min) to be evenly divisible by the step.
   *
   * When step is `null`, the thumb can only be slid onto marks provided with the `marks` prop.
   * @default 1
   */
  step: r.number,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * Tab index attribute of the hidden `input` element.
   */
  tabIndex: r.number,
  /**
   * The track presentation:
   *
   * - `normal` the track will render a bar representing the slider value.
   * - `inverted` the track will render a bar representing the remaining slider value.
   * - `false` the track will render without a bar.
   * @default 'normal'
   */
  track: r.oneOf(["inverted", "normal", !1]),
  /**
   * The value of the slider.
   * For ranged sliders, provide an array with two values.
   */
  value: r.oneOfType([r.arrayOf(r.number), r.number]),
  /**
   * Controls when the value label is displayed:
   *
   * - `auto` the value label will display when the thumb is hovered or focused.
   * - `on` will display persistently.
   * - `off` will never display.
   * @default 'off'
   */
  valueLabelDisplay: r.oneOf(["auto", "off", "on"]),
  /**
   * The format function the value label's value.
   *
   * When a function is provided, it should have the following signature:
   *
   * - {number} value The value label's value to format
   * - {number} index The value label's index to format
   * @param {any} x
   * @returns {any}
   * @default function Identity(x) {
   *   return x;
   * }
   */
  valueLabelFormat: r.oneOfType([r.func, r.string])
});
function mF(e) {
  return We("MuiTooltip", e);
}
const tn = _e("MuiTooltip", ["popper", "popperInteractive", "popperArrow", "popperClose", "tooltip", "tooltipArrow", "touch", "tooltipPlacementLeft", "tooltipPlacementRight", "tooltipPlacementTop", "tooltipPlacementBottom", "arrow"]);
function gF(e) {
  return Math.round(e * 1e5) / 1e5;
}
const hF = (e) => {
  const {
    classes: t,
    disableInteractive: n,
    arrow: o,
    touch: i,
    placement: s
  } = e, a = {
    popper: ["popper", !n && "popperInteractive", o && "popperArrow"],
    tooltip: ["tooltip", o && "tooltipArrow", i && "touch", `tooltipPlacement${ue(s.split("-")[0])}`],
    arrow: ["arrow"]
  };
  return Ue(a, mF, t);
}, bF = Q(as, {
  name: "MuiTooltip",
  slot: "Popper",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.popper, !n.disableInteractive && t.popperInteractive, n.arrow && t.popperArrow, !n.open && t.popperClose];
  }
})($e(({
  theme: e
}) => ({
  zIndex: (e.vars || e).zIndex.tooltip,
  pointerEvents: "none",
  variants: [{
    props: ({
      ownerState: t
    }) => !t.disableInteractive,
    style: {
      pointerEvents: "auto"
    }
  }, {
    props: ({
      open: t
    }) => !t,
    style: {
      pointerEvents: "none"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow,
    style: {
      [`&[data-popper-placement*="bottom"] .${tn.arrow}`]: {
        top: 0,
        marginTop: "-0.71em",
        "&::before": {
          transformOrigin: "0 100%"
        }
      },
      [`&[data-popper-placement*="top"] .${tn.arrow}`]: {
        bottom: 0,
        marginBottom: "-0.71em",
        "&::before": {
          transformOrigin: "100% 0"
        }
      },
      [`&[data-popper-placement*="right"] .${tn.arrow}`]: {
        height: "1em",
        width: "0.71em",
        "&::before": {
          transformOrigin: "100% 100%"
        }
      },
      [`&[data-popper-placement*="left"] .${tn.arrow}`]: {
        height: "1em",
        width: "0.71em",
        "&::before": {
          transformOrigin: "0 0"
        }
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !t.isRtl,
    style: {
      [`&[data-popper-placement*="right"] .${tn.arrow}`]: {
        left: 0,
        marginLeft: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !!t.isRtl,
    style: {
      [`&[data-popper-placement*="right"] .${tn.arrow}`]: {
        right: 0,
        marginRight: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !t.isRtl,
    style: {
      [`&[data-popper-placement*="left"] .${tn.arrow}`]: {
        right: 0,
        marginRight: "-0.71em"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.arrow && !!t.isRtl,
    style: {
      [`&[data-popper-placement*="left"] .${tn.arrow}`]: {
        left: 0,
        marginLeft: "-0.71em"
      }
    }
  }]
}))), vF = Q("div", {
  name: "MuiTooltip",
  slot: "Tooltip",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.tooltip, n.touch && t.touch, n.arrow && t.tooltipArrow, t[`tooltipPlacement${ue(n.placement.split("-")[0])}`]];
  }
})($e(({
  theme: e
}) => ({
  backgroundColor: e.vars ? e.vars.palette.Tooltip.bg : ze(e.palette.grey[700], 0.92),
  borderRadius: (e.vars || e).shape.borderRadius,
  color: (e.vars || e).palette.common.white,
  fontFamily: e.typography.fontFamily,
  padding: "4px 8px",
  fontSize: e.typography.pxToRem(11),
  maxWidth: 300,
  margin: 2,
  wordWrap: "break-word",
  fontWeight: e.typography.fontWeightMedium,
  [`.${tn.popper}[data-popper-placement*="left"] &`]: {
    transformOrigin: "right center"
  },
  [`.${tn.popper}[data-popper-placement*="right"] &`]: {
    transformOrigin: "left center"
  },
  [`.${tn.popper}[data-popper-placement*="top"] &`]: {
    transformOrigin: "center bottom",
    marginBottom: "14px"
  },
  [`.${tn.popper}[data-popper-placement*="bottom"] &`]: {
    transformOrigin: "center top",
    marginTop: "14px"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.arrow,
    style: {
      position: "relative",
      margin: 0
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      padding: "8px 16px",
      fontSize: e.typography.pxToRem(14),
      lineHeight: `${gF(16 / 14)}em`,
      fontWeight: e.typography.fontWeightRegular
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.isRtl,
    style: {
      [`.${tn.popper}[data-popper-placement*="left"] &`]: {
        marginRight: "14px"
      },
      [`.${tn.popper}[data-popper-placement*="right"] &`]: {
        marginLeft: "14px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !t.isRtl && t.touch,
    style: {
      [`.${tn.popper}[data-popper-placement*="left"] &`]: {
        marginRight: "24px"
      },
      [`.${tn.popper}[data-popper-placement*="right"] &`]: {
        marginLeft: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !!t.isRtl,
    style: {
      [`.${tn.popper}[data-popper-placement*="left"] &`]: {
        marginLeft: "14px"
      },
      [`.${tn.popper}[data-popper-placement*="right"] &`]: {
        marginRight: "14px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => !!t.isRtl && t.touch,
    style: {
      [`.${tn.popper}[data-popper-placement*="left"] &`]: {
        marginLeft: "24px"
      },
      [`.${tn.popper}[data-popper-placement*="right"] &`]: {
        marginRight: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      [`.${tn.popper}[data-popper-placement*="top"] &`]: {
        marginBottom: "24px"
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.touch,
    style: {
      [`.${tn.popper}[data-popper-placement*="bottom"] &`]: {
        marginTop: "24px"
      }
    }
  }]
}))), yF = Q("span", {
  name: "MuiTooltip",
  slot: "Arrow",
  overridesResolver: (e, t) => t.arrow
})($e(({
  theme: e
}) => ({
  overflow: "hidden",
  position: "absolute",
  width: "1em",
  height: "0.71em",
  boxSizing: "border-box",
  color: e.vars ? e.vars.palette.Tooltip.bg : ze(e.palette.grey[700], 0.9),
  "&::before": {
    content: '""',
    margin: "auto",
    display: "block",
    width: "100%",
    height: "100%",
    backgroundColor: "currentColor",
    transform: "rotate(45deg)"
  }
})));
let pl = !1;
const Xh = new Uc();
let Es = {
  x: 0,
  y: 0
};
function fl(e, t) {
  return (n, ...o) => {
    t && t(n, ...o), e(n, ...o);
  };
}
const Tt = /* @__PURE__ */ S.forwardRef(function(t, n) {
  var Zt, xn, qt;
  const o = Ye({
    props: t,
    name: "MuiTooltip"
  }), {
    arrow: i = !1,
    children: s,
    classes: a,
    components: l = {},
    componentsProps: c = {},
    describeChild: u = !1,
    disableFocusListener: d = !1,
    disableHoverListener: p = !1,
    disableInteractive: m = !1,
    disableTouchListener: g = !1,
    enterDelay: h = 100,
    enterNextDelay: v = 0,
    enterTouchDelay: b = 700,
    followCursor: y = !1,
    id: C,
    leaveDelay: x = 0,
    leaveTouchDelay: T = 1500,
    onClose: w,
    onOpen: R,
    open: E,
    placement: O = "bottom",
    PopperComponent: I,
    PopperProps: P = {},
    slotProps: A = {},
    slots: D = {},
    title: k,
    TransitionComponent: M = Mr,
    TransitionProps: F,
    ...N
  } = o, W = /* @__PURE__ */ S.isValidElement(s) ? s : /* @__PURE__ */ f.jsx("span", {
    children: s
  }), H = vn(), B = Nr(), [j, L] = S.useState(), [ee, Y] = S.useState(null), $ = S.useRef(!1), U = m || y, X = qr(), Z = qr(), G = qr(), K = qr(), [re, ne] = ir({
    controlled: E,
    default: !1,
    name: "Tooltip",
    state: "open"
  });
  let z = re;
  if (process.env.NODE_ENV !== "production") {
    const {
      current: ot
    } = S.useRef(E !== void 0);
    S.useEffect(() => {
      j && j.disabled && !ot && k !== "" && j.tagName.toLowerCase() === "button" && console.error(["MUI: You are providing a disabled `button` child to the Tooltip component.", "A disabled element does not fire events.", "Tooltip needs to listen to the child element's events to display the title.", "", "Add a simple wrapper element, such as a `span`."].join(`
`));
    }, [k, j, ot]);
  }
  const q = Na(C), _ = S.useRef(), oe = hn(() => {
    _.current !== void 0 && (document.body.style.WebkitUserSelect = _.current, _.current = void 0), K.clear();
  });
  S.useEffect(() => oe, [oe]);
  const te = (ot) => {
    Xh.clear(), pl = !0, ne(!0), R && !z && R(ot);
  }, se = hn(
    /**
     * @param {React.SyntheticEvent | Event} event
     */
    (ot) => {
      Xh.start(800 + x, () => {
        pl = !1;
      }), ne(!1), w && z && w(ot), X.start(H.transitions.duration.shortest, () => {
        $.current = !1;
      });
    }
  ), ae = (ot) => {
    $.current && ot.type !== "touchstart" || (j && j.removeAttribute("title"), Z.clear(), G.clear(), h || pl && v ? Z.start(pl ? v : h, () => {
      te(ot);
    }) : te(ot));
  }, me = (ot) => {
    Z.clear(), G.start(x, () => {
      se(ot);
    });
  }, [, ye] = S.useState(!1), Te = (ot) => {
    Gi(ot.target) || (ye(!1), me(ot));
  }, Ve = (ot) => {
    j || L(ot.currentTarget), Gi(ot.target) && (ye(!0), ae(ot));
  }, ie = (ot) => {
    $.current = !0;
    const ln = W.props;
    ln.onTouchStart && ln.onTouchStart(ot);
  }, be = (ot) => {
    ie(ot), G.clear(), X.clear(), oe(), _.current = document.body.style.WebkitUserSelect, document.body.style.WebkitUserSelect = "none", K.start(b, () => {
      document.body.style.WebkitUserSelect = _.current, ae(ot);
    });
  }, xe = (ot) => {
    W.props.onTouchEnd && W.props.onTouchEnd(ot), oe(), G.start(T, () => {
      se(ot);
    });
  };
  S.useEffect(() => {
    if (!z)
      return;
    function ot(ln) {
      ln.key === "Escape" && se(ln);
    }
    return document.addEventListener("keydown", ot), () => {
      document.removeEventListener("keydown", ot);
    };
  }, [se, z]);
  const Ie = Yt(ss(W), L, n);
  !k && k !== 0 && (z = !1);
  const Pe = S.useRef(), Ce = (ot) => {
    const ln = W.props;
    ln.onMouseMove && ln.onMouseMove(ot), Es = {
      x: ot.clientX,
      y: ot.clientY
    }, Pe.current && Pe.current.update();
  }, Oe = {}, Be = typeof k == "string";
  u ? (Oe.title = !z && Be && !p ? k : null, Oe["aria-describedby"] = z ? q : null) : (Oe["aria-label"] = Be ? k : null, Oe["aria-labelledby"] = z && !Be ? q : null);
  const Ae = {
    ...Oe,
    ...N,
    ...W.props,
    className: fe(N.className, W.props.className),
    onTouchStart: ie,
    ref: Ie,
    ...y ? {
      onMouseMove: Ce
    } : {}
  };
  process.env.NODE_ENV !== "production" && (Ae["data-mui-internal-clone-element"] = !0, S.useEffect(() => {
    j && !j.getAttribute("data-mui-internal-clone-element") && console.error(["MUI: The `children` component of the Tooltip is not forwarding its props correctly.", "Please make sure that props are spread on the same element that the ref is applied to."].join(`
`));
  }, [j]));
  const nt = {};
  g || (Ae.onTouchStart = be, Ae.onTouchEnd = xe), p || (Ae.onMouseOver = fl(ae, Ae.onMouseOver), Ae.onMouseLeave = fl(me, Ae.onMouseLeave), U || (nt.onMouseOver = ae, nt.onMouseLeave = me)), d || (Ae.onFocus = fl(Ve, Ae.onFocus), Ae.onBlur = fl(Te, Ae.onBlur), U || (nt.onFocus = Ve, nt.onBlur = Te)), process.env.NODE_ENV !== "production" && W.props.title && console.error(["MUI: You have provided a `title` prop to the child of <Tooltip />.", `Remove this title prop \`${W.props.title}\` or the Tooltip component.`].join(`
`));
  const Ze = S.useMemo(() => {
    var ln;
    let ot = [{
      name: "arrow",
      enabled: !!ee,
      options: {
        element: ee,
        padding: 4
      }
    }];
    return (ln = P.popperOptions) != null && ln.modifiers && (ot = ot.concat(P.popperOptions.modifiers)), {
      ...P.popperOptions,
      modifiers: ot
    };
  }, [ee, P]), dt = {
    ...o,
    isRtl: B,
    arrow: i,
    disableInteractive: U,
    placement: O,
    PopperComponentProp: I,
    touch: $.current
  }, de = hF(dt), we = D.popper ?? l.Popper ?? bF, pe = D.transition ?? l.Transition ?? M ?? Mr, Me = D.tooltip ?? l.Tooltip ?? vF, je = D.arrow ?? l.Arrow ?? yF, st = ji(we, {
    ...P,
    ...A.popper ?? c.popper,
    className: fe(de.popper, P == null ? void 0 : P.className, (Zt = A.popper ?? c.popper) == null ? void 0 : Zt.className)
  }, dt), pt = ji(pe, {
    ...F,
    ...A.transition ?? c.transition
  }, dt), it = ji(Me, {
    ...A.tooltip ?? c.tooltip,
    className: fe(de.tooltip, (xn = A.tooltip ?? c.tooltip) == null ? void 0 : xn.className)
  }, dt), bt = ji(je, {
    ...A.arrow ?? c.arrow,
    className: fe(de.arrow, (qt = A.arrow ?? c.arrow) == null ? void 0 : qt.className)
  }, dt);
  return /* @__PURE__ */ f.jsxs(S.Fragment, {
    children: [/* @__PURE__ */ S.cloneElement(W, Ae), /* @__PURE__ */ f.jsx(we, {
      as: I ?? as,
      placement: O,
      anchorEl: y ? {
        getBoundingClientRect: () => ({
          top: Es.y,
          left: Es.x,
          right: Es.x,
          bottom: Es.y,
          width: 0,
          height: 0
        })
      } : j,
      popperRef: Pe,
      open: j ? z : !1,
      id: q,
      transition: !0,
      ...nt,
      ...st,
      popperOptions: Ze,
      children: ({
        TransitionProps: ot
      }) => /* @__PURE__ */ f.jsx(pe, {
        timeout: H.transitions.duration.shorter,
        ...ot,
        ...pt,
        children: /* @__PURE__ */ f.jsxs(Me, {
          ...it,
          children: [k, i ? /* @__PURE__ */ f.jsx(je, {
            ...bt,
            ref: Y
          }) : null]
        })
      })
    })]
  });
});
process.env.NODE_ENV !== "production" && (Tt.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, adds an arrow to the tooltip.
   * @default false
   */
  arrow: r.bool,
  /**
   * Tooltip reference element.
   */
  children: rs.isRequired,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The components used for each slot inside.
   *
   * @deprecated use the `slots` prop instead. This prop will be removed in v7. [How to migrate](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/).
   *
   * @default {}
   */
  components: r.shape({
    Arrow: r.elementType,
    Popper: r.elementType,
    Tooltip: r.elementType,
    Transition: r.elementType
  }),
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. [How to migrate](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/).
   *
   * @default {}
   */
  componentsProps: r.shape({
    arrow: r.object,
    popper: r.object,
    tooltip: r.object,
    transition: r.object
  }),
  /**
   * Set to `true` if the `title` acts as an accessible description.
   * By default the `title` acts as an accessible label for the child.
   * @default false
   */
  describeChild: r.bool,
  /**
   * Do not respond to focus-visible events.
   * @default false
   */
  disableFocusListener: r.bool,
  /**
   * Do not respond to hover events.
   * @default false
   */
  disableHoverListener: r.bool,
  /**
   * Makes a tooltip not interactive, i.e. it will close when the user
   * hovers over the tooltip before the `leaveDelay` is expired.
   * @default false
   */
  disableInteractive: r.bool,
  /**
   * Do not respond to long press touch events.
   * @default false
   */
  disableTouchListener: r.bool,
  /**
   * The number of milliseconds to wait before showing the tooltip.
   * This prop won't impact the enter touch delay (`enterTouchDelay`).
   * @default 100
   */
  enterDelay: r.number,
  /**
   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.
   * @default 0
   */
  enterNextDelay: r.number,
  /**
   * The number of milliseconds a user must touch the element before showing the tooltip.
   * @default 700
   */
  enterTouchDelay: r.number,
  /**
   * If `true`, the tooltip follow the cursor over the wrapped element.
   * @default false
   */
  followCursor: r.bool,
  /**
   * This prop is used to help implement the accessibility logic.
   * If you don't provide this prop. It falls back to a randomly generated id.
   */
  id: r.string,
  /**
   * The number of milliseconds to wait before hiding the tooltip.
   * This prop won't impact the leave touch delay (`leaveTouchDelay`).
   * @default 0
   */
  leaveDelay: r.number,
  /**
   * The number of milliseconds after the user stops touching an element before hiding the tooltip.
   * @default 1500
   */
  leaveTouchDelay: r.number,
  /**
   * Callback fired when the component requests to be closed.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onClose: r.func,
  /**
   * Callback fired when the component requests to be open.
   *
   * @param {React.SyntheticEvent} event The event source of the callback.
   */
  onOpen: r.func,
  /**
   * If `true`, the component is shown.
   */
  open: r.bool,
  /**
   * Tooltip placement.
   * @default 'bottom'
   */
  placement: r.oneOf(["bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  /**
   * The component used for the popper.
   * @default Popper
   */
  PopperComponent: r.elementType,
  /**
   * Props applied to the [`Popper`](https://mui.com/material-ui/api/popper/) element.
   * @default {}
   */
  PopperProps: r.object,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   *
   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slotProps: r.shape({
    arrow: r.object,
    popper: r.object,
    tooltip: r.object,
    transition: r.object
  }),
  /**
   * The components used for each slot inside.
   *
   * This prop is an alias for the `components` prop, which will be deprecated in the future.
   *
   * @default {}
   */
  slots: r.shape({
    arrow: r.elementType,
    popper: r.elementType,
    tooltip: r.elementType,
    transition: r.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * Tooltip title. Zero-length titles string, undefined, null and false are never displayed.
   */
  title: r.node,
  /**
   * The component used for the transition.
   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.
   * @default Grow
   */
  TransitionComponent: r.elementType,
  /**
   * Props applied to the transition element.
   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.
   */
  TransitionProps: r.object
});
const Nn = mO({
  createStyledComponent: Q("div", {
    name: "MuiStack",
    slot: "Root",
    overridesResolver: (e, t) => t.root
  }),
  useThemeProps: (e) => at({
    props: e,
    name: "MuiStack"
  })
});
process.env.NODE_ENV !== "production" && (Nn.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: r.node,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * Defines the `flex-direction` style property.
   * It is applied for all screen sizes.
   * @default 'column'
   */
  direction: r.oneOfType([r.oneOf(["column-reverse", "column", "row-reverse", "row"]), r.arrayOf(r.oneOf(["column-reverse", "column", "row-reverse", "row"])), r.object]),
  /**
   * Add an element between each child.
   */
  divider: r.node,
  /**
   * Defines the space between immediate children.
   * @default 0
   */
  spacing: r.oneOfType([r.arrayOf(r.oneOfType([r.number, r.string])), r.number, r.object, r.string]),
  /**
   * The system prop, which allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * If `true`, the CSS flexbox `gap` is used instead of applying `margin` to children.
   *
   * While CSS `gap` removes the [known limitations](https://mui.com/joy-ui/react-stack/#limitations),
   * it is not fully supported in some browsers. We recommend checking https://caniuse.com/?search=flex%20gap before using this flag.
   *
   * To enable this flag globally, follow the [theme's default props](https://mui.com/material-ui/customization/theme-components/#default-props) configuration.
   * @default false
   */
  useFlexGap: r.bool
});
function xF(e) {
  return We("MuiSwitch", e);
}
const kn = _e("MuiSwitch", ["root", "edgeStart", "edgeEnd", "switchBase", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium", "checked", "disabled", "input", "thumb", "track"]), CF = (e) => {
  const {
    classes: t,
    edge: n,
    size: o,
    color: i,
    checked: s,
    disabled: a
  } = e, l = {
    root: ["root", n && `edge${ue(n)}`, `size${ue(o)}`],
    switchBase: ["switchBase", `color${ue(i)}`, s && "checked", a && "disabled"],
    thumb: ["thumb"],
    track: ["track"],
    input: ["input"]
  }, c = Ue(l, xF, t);
  return {
    ...t,
    // forward the disabled and checked classes to the SwitchBase
    ...c
  };
}, SF = Q("span", {
  name: "MuiSwitch",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.edge && t[`edge${ue(n.edge)}`], t[`size${ue(n.size)}`]];
  }
})({
  display: "inline-flex",
  width: 34 + 12 * 2,
  height: 14 + 12 * 2,
  overflow: "hidden",
  padding: 12,
  boxSizing: "border-box",
  position: "relative",
  flexShrink: 0,
  zIndex: 0,
  // Reset the stacking context.
  verticalAlign: "middle",
  // For correct alignment with the text.
  "@media print": {
    colorAdjust: "exact"
  },
  variants: [{
    props: {
      edge: "start"
    },
    style: {
      marginLeft: -8
    }
  }, {
    props: {
      edge: "end"
    },
    style: {
      marginRight: -8
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      width: 40,
      height: 24,
      padding: 7,
      [`& .${kn.thumb}`]: {
        width: 16,
        height: 16
      },
      [`& .${kn.switchBase}`]: {
        padding: 4,
        [`&.${kn.checked}`]: {
          transform: "translateX(16px)"
        }
      }
    }
  }]
}), wF = Q(ru, {
  name: "MuiSwitch",
  slot: "SwitchBase",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.switchBase, {
      [`& .${kn.input}`]: t.input
    }, n.color !== "default" && t[`color${ue(n.color)}`]];
  }
})($e(({
  theme: e
}) => ({
  position: "absolute",
  top: 0,
  left: 0,
  zIndex: 1,
  // Render above the focus ripple.
  color: e.vars ? e.vars.palette.Switch.defaultColor : `${e.palette.mode === "light" ? e.palette.common.white : e.palette.grey[300]}`,
  transition: e.transitions.create(["left", "transform"], {
    duration: e.transitions.duration.shortest
  }),
  [`&.${kn.checked}`]: {
    transform: "translateX(20px)"
  },
  [`&.${kn.disabled}`]: {
    color: e.vars ? e.vars.palette.Switch.defaultDisabledColor : `${e.palette.mode === "light" ? e.palette.grey[100] : e.palette.grey[600]}`
  },
  [`&.${kn.checked} + .${kn.track}`]: {
    opacity: 0.5
  },
  [`&.${kn.disabled} + .${kn.track}`]: {
    opacity: e.vars ? e.vars.opacity.switchTrackDisabled : `${e.palette.mode === "light" ? 0.12 : 0.2}`
  },
  [`& .${kn.input}`]: {
    left: "-100%",
    width: "300%"
  }
})), $e(({
  theme: e
}) => ({
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : ze(e.palette.action.active, e.palette.action.hoverOpacity),
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      backgroundColor: "transparent"
    }
  },
  variants: [...Object.entries(e.palette).filter(wt(["light"])).map(([t]) => ({
    props: {
      color: t
    },
    style: {
      [`&.${kn.checked}`]: {
        color: (e.vars || e).palette[t].main,
        "&:hover": {
          backgroundColor: e.vars ? `rgba(${e.vars.palette[t].mainChannel} / ${e.vars.palette.action.hoverOpacity})` : ze(e.palette[t].main, e.palette.action.hoverOpacity),
          "@media (hover: none)": {
            backgroundColor: "transparent"
          }
        },
        [`&.${kn.disabled}`]: {
          color: e.vars ? e.vars.palette.Switch[`${t}DisabledColor`] : `${e.palette.mode === "light" ? $n(e.palette[t].main, 0.62) : no(e.palette[t].main, 0.55)}`
        }
      },
      [`&.${kn.checked} + .${kn.track}`]: {
        backgroundColor: (e.vars || e).palette[t].main
      }
    }
  }))]
}))), TF = Q("span", {
  name: "MuiSwitch",
  slot: "Track",
  overridesResolver: (e, t) => t.track
})($e(({
  theme: e
}) => ({
  height: "100%",
  width: "100%",
  borderRadius: 14 / 2,
  zIndex: -1,
  transition: e.transitions.create(["opacity", "background-color"], {
    duration: e.transitions.duration.shortest
  }),
  backgroundColor: e.vars ? e.vars.palette.common.onBackground : `${e.palette.mode === "light" ? e.palette.common.black : e.palette.common.white}`,
  opacity: e.vars ? e.vars.opacity.switchTrack : `${e.palette.mode === "light" ? 0.38 : 0.3}`
}))), IF = Q("span", {
  name: "MuiSwitch",
  slot: "Thumb",
  overridesResolver: (e, t) => t.thumb
})($e(({
  theme: e
}) => ({
  boxShadow: (e.vars || e).shadows[1],
  backgroundColor: "currentColor",
  width: 20,
  height: 20,
  borderRadius: "50%"
}))), F0 = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiSwitch"
  }), {
    className: i,
    color: s = "primary",
    edge: a = !1,
    size: l = "medium",
    sx: c,
    ...u
  } = o, d = {
    ...o,
    color: s,
    edge: a,
    size: l
  }, p = CF(d), m = /* @__PURE__ */ f.jsx(IF, {
    className: p.thumb,
    ownerState: d
  });
  return /* @__PURE__ */ f.jsxs(SF, {
    className: fe(p.root, i),
    sx: c,
    ownerState: d,
    children: [/* @__PURE__ */ f.jsx(wF, {
      type: "checkbox",
      icon: m,
      checkedIcon: m,
      ref: n,
      ownerState: d,
      ...u,
      classes: {
        ...p,
        root: p.switchBase
      }
    }), /* @__PURE__ */ f.jsx(TF, {
      className: p.track,
      ownerState: d
    })]
  });
});
process.env.NODE_ENV !== "production" && (F0.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the component is checked.
   */
  checked: r.bool,
  /**
   * The icon to display when the component is checked.
   */
  checkedIcon: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: r.oneOfType([r.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), r.string]),
  /**
   * The default checked state. Use when the component is not controlled.
   */
  defaultChecked: r.bool,
  /**
   * If `true`, the component is disabled.
   */
  disabled: r.bool,
  /**
   * If `true`, the ripple effect is disabled.
   * @default false
   */
  disableRipple: r.bool,
  /**
   * If given, uses a negative margin to counteract the padding on one
   * side (this is often helpful for aligning the left or right
   * side of the icon with content above or below, without ruining the border
   * size and shape).
   * @default false
   */
  edge: r.oneOf(["end", "start", !1]),
  /**
   * The icon to display when the component is unchecked.
   */
  icon: r.node,
  /**
   * The id of the `input` element.
   */
  id: r.string,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: r.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: In,
  /**
   * Callback fired when the state is changed.
   *
   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   * You can pull out the new checked state by accessing `event.target.checked` (boolean).
   */
  onChange: r.func,
  /**
   * If `true`, the `input` element is required.
   * @default false
   */
  required: r.bool,
  /**
   * The size of the component.
   * `small` is equivalent to the dense switch styling.
   * @default 'medium'
   */
  size: r.oneOfType([r.oneOf(["medium", "small"]), r.string]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * The value of the component. The DOM API casts this to a string.
   * The browser uses "on" as the default value.
   */
  value: r.any
});
function RF(e) {
  return We("MuiTab", e);
}
const lo = _e("MuiTab", ["root", "labelIcon", "textColorInherit", "textColorPrimary", "textColorSecondary", "selected", "disabled", "fullWidth", "wrapped", "iconWrapper", "icon"]), OF = (e) => {
  const {
    classes: t,
    textColor: n,
    fullWidth: o,
    wrapped: i,
    icon: s,
    label: a,
    selected: l,
    disabled: c
  } = e, u = {
    root: ["root", s && a && "labelIcon", `textColor${ue(n)}`, o && "fullWidth", i && "wrapped", l && "selected", c && "disabled"],
    icon: ["iconWrapper", "icon"]
  };
  return Ue(u, RF, t);
}, EF = Q(yo, {
  name: "MuiTab",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.label && n.icon && t.labelIcon, t[`textColor${ue(n.textColor)}`], n.fullWidth && t.fullWidth, n.wrapped && t.wrapped, {
      [`& .${lo.iconWrapper}`]: t.iconWrapper
    }, {
      [`& .${lo.icon}`]: t.icon
    }];
  }
})($e(({
  theme: e
}) => ({
  ...e.typography.button,
  maxWidth: 360,
  minWidth: 90,
  position: "relative",
  minHeight: 48,
  flexShrink: 0,
  padding: "12px 16px",
  overflow: "hidden",
  whiteSpace: "normal",
  textAlign: "center",
  lineHeight: 1.25,
  variants: [{
    props: ({
      ownerState: t
    }) => t.label && (t.iconPosition === "top" || t.iconPosition === "bottom"),
    style: {
      flexDirection: "column"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.label && t.iconPosition !== "top" && t.iconPosition !== "bottom",
    style: {
      flexDirection: "row"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.icon && t.label,
    style: {
      minHeight: 72,
      paddingTop: 9,
      paddingBottom: 9
    }
  }, {
    props: ({
      ownerState: t,
      iconPosition: n
    }) => t.icon && t.label && n === "top",
    style: {
      [`& > .${lo.icon}`]: {
        marginBottom: 6
      }
    }
  }, {
    props: ({
      ownerState: t,
      iconPosition: n
    }) => t.icon && t.label && n === "bottom",
    style: {
      [`& > .${lo.icon}`]: {
        marginTop: 6
      }
    }
  }, {
    props: ({
      ownerState: t,
      iconPosition: n
    }) => t.icon && t.label && n === "start",
    style: {
      [`& > .${lo.icon}`]: {
        marginRight: e.spacing(1)
      }
    }
  }, {
    props: ({
      ownerState: t,
      iconPosition: n
    }) => t.icon && t.label && n === "end",
    style: {
      [`& > .${lo.icon}`]: {
        marginLeft: e.spacing(1)
      }
    }
  }, {
    props: {
      textColor: "inherit"
    },
    style: {
      color: "inherit",
      opacity: 0.6,
      // same opacity as theme.palette.text.secondary
      [`&.${lo.selected}`]: {
        opacity: 1
      },
      [`&.${lo.disabled}`]: {
        opacity: (e.vars || e).palette.action.disabledOpacity
      }
    }
  }, {
    props: {
      textColor: "primary"
    },
    style: {
      color: (e.vars || e).palette.text.secondary,
      [`&.${lo.selected}`]: {
        color: (e.vars || e).palette.primary.main
      },
      [`&.${lo.disabled}`]: {
        color: (e.vars || e).palette.text.disabled
      }
    }
  }, {
    props: {
      textColor: "secondary"
    },
    style: {
      color: (e.vars || e).palette.text.secondary,
      [`&.${lo.selected}`]: {
        color: (e.vars || e).palette.secondary.main
      },
      [`&.${lo.disabled}`]: {
        color: (e.vars || e).palette.text.disabled
      }
    }
  }, {
    props: ({
      ownerState: t
    }) => t.fullWidth,
    style: {
      flexShrink: 1,
      flexGrow: 1,
      flexBasis: 0,
      maxWidth: "none"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.wrapped,
    style: {
      fontSize: e.typography.pxToRem(12)
    }
  }]
}))), wp = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiTab"
  }), {
    className: i,
    disabled: s = !1,
    disableFocusRipple: a = !1,
    // eslint-disable-next-line react/prop-types
    fullWidth: l,
    icon: c,
    iconPosition: u = "top",
    // eslint-disable-next-line react/prop-types
    indicator: d,
    label: p,
    onChange: m,
    onClick: g,
    onFocus: h,
    // eslint-disable-next-line react/prop-types
    selected: v,
    // eslint-disable-next-line react/prop-types
    selectionFollowsFocus: b,
    // eslint-disable-next-line react/prop-types
    textColor: y = "inherit",
    value: C,
    wrapped: x = !1,
    ...T
  } = o, w = {
    ...o,
    disabled: s,
    disableFocusRipple: a,
    selected: v,
    icon: !!c,
    iconPosition: u,
    label: !!p,
    fullWidth: l,
    textColor: y,
    wrapped: x
  }, R = OF(w), E = c && p && /* @__PURE__ */ S.isValidElement(c) ? /* @__PURE__ */ S.cloneElement(c, {
    className: fe(R.icon, c.props.className)
  }) : c, O = (P) => {
    !v && m && m(P, C), g && g(P);
  }, I = (P) => {
    b && !v && m && m(P, C), h && h(P);
  };
  return /* @__PURE__ */ f.jsxs(EF, {
    focusRipple: !a,
    className: fe(R.root, i),
    ref: n,
    role: "tab",
    "aria-selected": v,
    disabled: s,
    onClick: O,
    onFocus: I,
    ownerState: w,
    tabIndex: v ? 0 : -1,
    ...T,
    children: [u === "top" || u === "start" ? /* @__PURE__ */ f.jsxs(S.Fragment, {
      children: [E, p]
    }) : /* @__PURE__ */ f.jsxs(S.Fragment, {
      children: [p, E]
    }), d]
  });
});
process.env.NODE_ENV !== "production" && (wp.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop isn't supported.
   * Use the `component` prop if you need to change the children structure.
   */
  children: Oy,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: r.bool,
  /**
   * If `true`, the  keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: r.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: r.bool,
  /**
   * The icon to display.
   */
  icon: r.oneOfType([r.element, r.string]),
  /**
   * The position of the icon relative to the label.
   * @default 'top'
   */
  iconPosition: r.oneOf(["bottom", "end", "start", "top"]),
  /**
   * The label element.
   */
  label: r.node,
  /**
   * @ignore
   */
  onChange: r.func,
  /**
   * @ignore
   */
  onClick: r.func,
  /**
   * @ignore
   */
  onFocus: r.func,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * You can provide your own value. Otherwise, we fallback to the child position index.
   */
  value: r.any,
  /**
   * Tab labels appear in a single row.
   * They can use a second line if needed.
   * @default false
   */
  wrapped: r.bool
});
const Wf = /* @__PURE__ */ S.createContext();
process.env.NODE_ENV !== "production" && (Wf.displayName = "TableContext");
function PF(e) {
  return We("MuiTable", e);
}
_e("MuiTable", ["root", "stickyHeader"]);
const AF = (e) => {
  const {
    classes: t,
    stickyHeader: n
  } = e;
  return Ue({
    root: ["root", n && "stickyHeader"]
  }, PF, t);
}, DF = Q("table", {
  name: "MuiTable",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.stickyHeader && t.stickyHeader];
  }
})($e(({
  theme: e
}) => ({
  display: "table",
  width: "100%",
  borderCollapse: "collapse",
  borderSpacing: 0,
  "& caption": {
    ...e.typography.body2,
    padding: e.spacing(2),
    color: (e.vars || e).palette.text.secondary,
    textAlign: "left",
    captionSide: "bottom"
  },
  variants: [{
    props: ({
      ownerState: t
    }) => t.stickyHeader,
    style: {
      borderCollapse: "separate"
    }
  }]
}))), Yh = "table", cu = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiTable"
  }), {
    className: i,
    component: s = Yh,
    padding: a = "normal",
    size: l = "medium",
    stickyHeader: c = !1,
    ...u
  } = o, d = {
    ...o,
    component: s,
    padding: a,
    size: l,
    stickyHeader: c
  }, p = AF(d), m = S.useMemo(() => ({
    padding: a,
    size: l,
    stickyHeader: c
  }), [a, l, c]);
  return /* @__PURE__ */ f.jsx(Wf.Provider, {
    value: m,
    children: /* @__PURE__ */ f.jsx(DF, {
      as: s,
      role: s === Yh ? null : "table",
      ref: n,
      className: fe(p.root, i),
      ownerState: d,
      ...u
    })
  });
});
process.env.NODE_ENV !== "production" && (cu.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the table, normally `TableHead` and `TableBody`.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * Allows TableCells to inherit padding of the Table.
   * @default 'normal'
   */
  padding: r.oneOf(["checkbox", "none", "normal"]),
  /**
   * Allows TableCells to inherit size of the Table.
   * @default 'medium'
   */
  size: r.oneOfType([r.oneOf(["medium", "small"]), r.string]),
  /**
   * Set the header sticky.
   * @default false
   */
  stickyHeader: r.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object])
});
const cs = /* @__PURE__ */ S.createContext();
process.env.NODE_ENV !== "production" && (cs.displayName = "Tablelvl2Context");
function MF(e) {
  return We("MuiTableBody", e);
}
_e("MuiTableBody", ["root"]);
const jF = (e) => {
  const {
    classes: t
  } = e;
  return Ue({
    root: ["root"]
  }, MF, t);
}, kF = Q("tbody", {
  name: "MuiTableBody",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  display: "table-row-group"
}), FF = {
  variant: "body"
}, Zh = "tbody", Vi = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiTableBody"
  }), {
    className: i,
    component: s = Zh,
    ...a
  } = o, l = {
    ...o,
    component: s
  }, c = jF(l);
  return /* @__PURE__ */ f.jsx(cs.Provider, {
    value: FF,
    children: /* @__PURE__ */ f.jsx(kF, {
      className: fe(c.root, i),
      as: s,
      ref: n,
      role: s === Zh ? null : "rowgroup",
      ownerState: l,
      ...a
    })
  });
});
process.env.NODE_ENV !== "production" && (Vi.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally `TableRow`.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object])
});
function NF(e) {
  return We("MuiTableCell", e);
}
const VF = _e("MuiTableCell", ["root", "head", "body", "footer", "sizeSmall", "sizeMedium", "paddingCheckbox", "paddingNone", "alignLeft", "alignCenter", "alignRight", "alignJustify", "stickyHeader"]), $F = (e) => {
  const {
    classes: t,
    variant: n,
    align: o,
    padding: i,
    size: s,
    stickyHeader: a
  } = e, l = {
    root: ["root", n, a && "stickyHeader", o !== "inherit" && `align${ue(o)}`, i !== "normal" && `padding${ue(i)}`, `size${ue(s)}`]
  };
  return Ue(l, NF, t);
}, LF = Q("td", {
  name: "MuiTableCell",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, t[n.variant], t[`size${ue(n.size)}`], n.padding !== "normal" && t[`padding${ue(n.padding)}`], n.align !== "inherit" && t[`align${ue(n.align)}`], n.stickyHeader && t.stickyHeader];
  }
})($e(({
  theme: e
}) => ({
  ...e.typography.body2,
  display: "table-cell",
  verticalAlign: "inherit",
  // Workaround for a rendering bug with spanned columns in Chrome 62.0.
  // Removes the alpha (sets it to 1), and lightens or darkens the theme color.
  borderBottom: e.vars ? `1px solid ${e.vars.palette.TableCell.border}` : `1px solid
    ${e.palette.mode === "light" ? $n(ze(e.palette.divider, 1), 0.88) : no(ze(e.palette.divider, 1), 0.68)}`,
  textAlign: "left",
  padding: 16,
  variants: [{
    props: {
      variant: "head"
    },
    style: {
      color: (e.vars || e).palette.text.primary,
      lineHeight: e.typography.pxToRem(24),
      fontWeight: e.typography.fontWeightMedium
    }
  }, {
    props: {
      variant: "body"
    },
    style: {
      color: (e.vars || e).palette.text.primary
    }
  }, {
    props: {
      variant: "footer"
    },
    style: {
      color: (e.vars || e).palette.text.secondary,
      lineHeight: e.typography.pxToRem(21),
      fontSize: e.typography.pxToRem(12)
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      padding: "6px 16px",
      [`&.${VF.paddingCheckbox}`]: {
        width: 24,
        // prevent the checkbox column from growing
        padding: "0 12px 0 16px",
        "& > *": {
          padding: 0
        }
      }
    }
  }, {
    props: {
      padding: "checkbox"
    },
    style: {
      width: 48,
      // prevent the checkbox column from growing
      padding: "0 0 0 4px"
    }
  }, {
    props: {
      padding: "none"
    },
    style: {
      padding: 0
    }
  }, {
    props: {
      align: "left"
    },
    style: {
      textAlign: "left"
    }
  }, {
    props: {
      align: "center"
    },
    style: {
      textAlign: "center"
    }
  }, {
    props: {
      align: "right"
    },
    style: {
      textAlign: "right",
      flexDirection: "row-reverse"
    }
  }, {
    props: {
      align: "justify"
    },
    style: {
      textAlign: "justify"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.stickyHeader,
    style: {
      position: "sticky",
      top: 0,
      zIndex: 2,
      backgroundColor: (e.vars || e).palette.background.default
    }
  }]
}))), Lt = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiTableCell"
  }), {
    align: i = "inherit",
    className: s,
    component: a,
    padding: l,
    scope: c,
    size: u,
    sortDirection: d,
    variant: p,
    ...m
  } = o, g = S.useContext(Wf), h = S.useContext(cs), v = h && h.variant === "head";
  let b;
  a ? b = a : b = v ? "th" : "td";
  let y = c;
  b === "td" ? y = void 0 : !y && v && (y = "col");
  const C = p || h && h.variant, x = {
    ...o,
    align: i,
    component: b,
    padding: l || (g && g.padding ? g.padding : "normal"),
    size: u || (g && g.size ? g.size : "medium"),
    sortDirection: d,
    stickyHeader: C === "head" && g && g.stickyHeader,
    variant: C
  }, T = $F(x);
  let w = null;
  return d && (w = d === "asc" ? "ascending" : "descending"), /* @__PURE__ */ f.jsx(LF, {
    as: b,
    ref: n,
    className: fe(T.root, s),
    "aria-sort": w,
    scope: y,
    ownerState: x,
    ...m
  });
});
process.env.NODE_ENV !== "production" && (Lt.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Set the text-align on the table cell content.
   *
   * Monetary or generally number fields **should be right aligned** as that allows
   * you to add them up quickly in your head without having to worry about decimals.
   * @default 'inherit'
   */
  align: r.oneOf(["center", "inherit", "justify", "left", "right"]),
  /**
   * The content of the component.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * Sets the padding applied to the cell.
   * The prop defaults to the value (`'default'`) inherited from the parent Table component.
   */
  padding: r.oneOf(["checkbox", "none", "normal"]),
  /**
   * Set scope attribute.
   */
  scope: r.string,
  /**
   * Specify the size of the cell.
   * The prop defaults to the value (`'medium'`) inherited from the parent Table component.
   */
  size: r.oneOfType([r.oneOf(["medium", "small"]), r.string]),
  /**
   * Set aria-sort direction.
   */
  sortDirection: r.oneOf(["asc", "desc", !1]),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * Specify the cell type.
   * The prop defaults to the value inherited from the parent TableHead, TableBody, or TableFooter components.
   */
  variant: r.oneOfType([r.oneOf(["body", "footer", "head"]), r.string])
});
function _F(e) {
  return We("MuiTableContainer", e);
}
_e("MuiTableContainer", ["root"]);
const BF = (e) => {
  const {
    classes: t
  } = e;
  return Ue({
    root: ["root"]
  }, _F, t);
}, zF = Q("div", {
  name: "MuiTableContainer",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  width: "100%",
  overflowX: "auto"
}), uu = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiTableContainer"
  }), {
    className: i,
    component: s = "div",
    ...a
  } = o, l = {
    ...o,
    component: s
  }, c = BF(l);
  return /* @__PURE__ */ f.jsx(zF, {
    ref: n,
    as: s,
    className: fe(c.root, i),
    ownerState: l,
    ...a
  });
});
process.env.NODE_ENV !== "production" && (uu.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally `Table`.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object])
});
function WF(e) {
  return We("MuiTableFooter", e);
}
_e("MuiTableFooter", ["root"]);
const HF = (e) => {
  const {
    classes: t
  } = e;
  return Ue({
    root: ["root"]
  }, WF, t);
}, GF = Q("tfoot", {
  name: "MuiTableFooter",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  display: "table-footer-group"
}), UF = {
  variant: "footer"
}, qh = "tfoot", N0 = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiTableFooter"
  }), {
    className: i,
    component: s = qh,
    ...a
  } = o, l = {
    ...o,
    component: s
  }, c = HF(l);
  return /* @__PURE__ */ f.jsx(cs.Provider, {
    value: UF,
    children: /* @__PURE__ */ f.jsx(GF, {
      as: s,
      className: fe(c.root, i),
      ref: n,
      role: s === qh ? null : "rowgroup",
      ownerState: l,
      ...a
    })
  });
});
process.env.NODE_ENV !== "production" && (N0.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally `TableRow`.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object])
});
function XF(e) {
  return We("MuiTableHead", e);
}
_e("MuiTableHead", ["root"]);
const YF = (e) => {
  const {
    classes: t
  } = e;
  return Ue({
    root: ["root"]
  }, XF, t);
}, ZF = Q("thead", {
  name: "MuiTableHead",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  display: "table-header-group"
}), qF = {
  variant: "head"
}, Jh = "thead", du = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiTableHead"
  }), {
    className: i,
    component: s = Jh,
    ...a
  } = o, l = {
    ...o,
    component: s
  }, c = YF(l);
  return /* @__PURE__ */ f.jsx(cs.Provider, {
    value: qF,
    children: /* @__PURE__ */ f.jsx(ZF, {
      as: s,
      className: fe(c.root, i),
      ref: n,
      role: s === Jh ? null : "rowgroup",
      ownerState: l,
      ...a
    })
  });
});
process.env.NODE_ENV !== "production" && (du.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component, normally `TableRow`.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object])
});
const JF = He(/* @__PURE__ */ f.jsx("path", {
  d: "M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
}), "KeyboardArrowLeft"), KF = He(/* @__PURE__ */ f.jsx("path", {
  d: "M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
}), "KeyboardArrowRight");
function QF(e) {
  return We("MuiTableRow", e);
}
const Kh = _e("MuiTableRow", ["root", "selected", "hover", "head", "footer"]), eN = (e) => {
  const {
    classes: t,
    selected: n,
    hover: o,
    head: i,
    footer: s
  } = e;
  return Ue({
    root: ["root", n && "selected", o && "hover", i && "head", s && "footer"]
  }, QF, t);
}, tN = Q("tr", {
  name: "MuiTableRow",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.head && t.head, n.footer && t.footer];
  }
})($e(({
  theme: e
}) => ({
  color: "inherit",
  display: "table-row",
  verticalAlign: "middle",
  // We disable the focus ring for mouse, touch and keyboard users.
  outline: 0,
  [`&.${Kh.hover}:hover`]: {
    backgroundColor: (e.vars || e).palette.action.hover
  },
  [`&.${Kh.selected}`]: {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})` : ze(e.palette.primary.main, e.palette.action.selectedOpacity),
    "&:hover": {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))` : ze(e.palette.primary.main, e.palette.action.selectedOpacity + e.palette.action.hoverOpacity)
    }
  }
}))), Qh = "tr", fr = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiTableRow"
  }), {
    className: i,
    component: s = Qh,
    hover: a = !1,
    selected: l = !1,
    ...c
  } = o, u = S.useContext(cs), d = {
    ...o,
    component: s,
    hover: a,
    selected: l,
    head: u && u.variant === "head",
    footer: u && u.variant === "footer"
  }, p = eN(d);
  return /* @__PURE__ */ f.jsx(tN, {
    as: s,
    ref: n,
    className: fe(p.root, i),
    role: s === Qh ? null : "row",
    ownerState: d,
    ...c
  });
});
process.env.NODE_ENV !== "production" && (fr.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Should be valid `<tr>` children such as `TableCell`.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * If `true`, the table row will shade on hover.
   * @default false
   */
  hover: r.bool,
  /**
   * If `true`, the table row will have the selected shading.
   * @default false
   */
  selected: r.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object])
});
const nN = He(/* @__PURE__ */ f.jsx("path", {
  d: "M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
}), "ArrowDownward");
function oN(e) {
  return We("MuiTableSortLabel", e);
}
const hd = _e("MuiTableSortLabel", ["root", "active", "icon", "iconDirectionDesc", "iconDirectionAsc", "directionDesc", "directionAsc"]), rN = (e) => {
  const {
    classes: t,
    direction: n,
    active: o
  } = e, i = {
    root: ["root", o && "active", `direction${ue(n)}`],
    icon: ["icon", `iconDirection${ue(n)}`]
  };
  return Ue(i, oN, t);
}, iN = Q(yo, {
  name: "MuiTableSortLabel",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.active && t.active];
  }
})($e(({
  theme: e
}) => ({
  cursor: "pointer",
  display: "inline-flex",
  justifyContent: "flex-start",
  flexDirection: "inherit",
  alignItems: "center",
  "&:focus": {
    color: (e.vars || e).palette.text.secondary
  },
  "&:hover": {
    color: (e.vars || e).palette.text.secondary,
    [`& .${hd.icon}`]: {
      opacity: 0.5
    }
  },
  [`&.${hd.active}`]: {
    color: (e.vars || e).palette.text.primary,
    [`& .${hd.icon}`]: {
      opacity: 1,
      color: (e.vars || e).palette.text.secondary
    }
  }
}))), sN = Q("span", {
  name: "MuiTableSortLabel",
  slot: "Icon",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.icon, t[`iconDirection${ue(n.direction)}`]];
  }
})($e(({
  theme: e
}) => ({
  fontSize: 18,
  marginRight: 4,
  marginLeft: 4,
  opacity: 0,
  transition: e.transitions.create(["opacity", "transform"], {
    duration: e.transitions.duration.shorter
  }),
  userSelect: "none",
  variants: [{
    props: {
      direction: "desc"
    },
    style: {
      transform: "rotate(0deg)"
    }
  }, {
    props: {
      direction: "asc"
    },
    style: {
      transform: "rotate(180deg)"
    }
  }]
}))), V0 = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiTableSortLabel"
  }), {
    active: i = !1,
    children: s,
    className: a,
    direction: l = "asc",
    hideSortIcon: c = !1,
    IconComponent: u = nN,
    ...d
  } = o, p = {
    ...o,
    active: i,
    direction: l,
    hideSortIcon: c,
    IconComponent: u
  }, m = rN(p);
  return /* @__PURE__ */ f.jsxs(iN, {
    className: fe(m.root, a),
    component: "span",
    disableRipple: !0,
    ownerState: p,
    ref: n,
    ...d,
    children: [s, c && !i ? null : /* @__PURE__ */ f.jsx(sN, {
      as: u,
      className: fe(m.icon),
      ownerState: p
    })]
  });
});
process.env.NODE_ENV !== "production" && (V0.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * If `true`, the label will have the active styling (should be true for the sorted column).
   * @default false
   */
  active: r.bool,
  /**
   * Label contents, the arrow will be appended automatically.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The current sort direction.
   * @default 'asc'
   */
  direction: r.oneOf(["asc", "desc"]),
  /**
   * Hide sort icon when active is false.
   * @default false
   */
  hideSortIcon: r.bool,
  /**
   * Sort icon to use.
   * @default ArrowDownwardIcon
   */
  IconComponent: r.elementType,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object])
});
function aN(e) {
  return (1 + Math.sin(Math.PI * e - Math.PI / 2)) / 2;
}
function lN(e, t, n, o = {}, i = () => {
}) {
  const {
    ease: s = aN,
    duration: a = 300
    // standard
  } = o;
  let l = null;
  const c = t[e];
  let u = !1;
  const d = () => {
    u = !0;
  }, p = (m) => {
    if (u) {
      i(new Error("Animation cancelled"));
      return;
    }
    l === null && (l = m);
    const g = Math.min(1, (m - l) / a);
    if (t[e] = s(g) * (n - c) + c, g >= 1) {
      requestAnimationFrame(() => {
        i(null);
      });
      return;
    }
    requestAnimationFrame(p);
  };
  return c === n ? (i(new Error("Element already at target position")), d) : (requestAnimationFrame(p), d);
}
const cN = {
  width: 99,
  height: 99,
  position: "absolute",
  top: -9999,
  overflow: "scroll"
};
function $0(e) {
  const {
    onChange: t,
    ...n
  } = e, o = S.useRef(), i = S.useRef(null), s = () => {
    o.current = i.current.offsetHeight - i.current.clientHeight;
  };
  return to(() => {
    const a = is(() => {
      const c = o.current;
      s(), c !== o.current && t(o.current);
    }), l = dr(i.current);
    return l.addEventListener("resize", a), () => {
      a.clear(), l.removeEventListener("resize", a);
    };
  }, [t]), S.useEffect(() => {
    s(), t(o.current);
  }, [t]), /* @__PURE__ */ f.jsx("div", {
    style: cN,
    ref: i,
    ...n
  });
}
process.env.NODE_ENV !== "production" && ($0.propTypes = {
  onChange: r.func.isRequired
});
function uN(e) {
  return We("MuiTabScrollButton", e);
}
const dN = _e("MuiTabScrollButton", ["root", "vertical", "horizontal", "disabled"]), pN = (e) => {
  const {
    classes: t,
    orientation: n,
    disabled: o
  } = e;
  return Ue({
    root: ["root", n, o && "disabled"]
  }, uN, t);
}, fN = Q(yo, {
  name: "MuiTabScrollButton",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.root, n.orientation && t[n.orientation]];
  }
})({
  width: 40,
  flexShrink: 0,
  opacity: 0.8,
  [`&.${dN.disabled}`]: {
    opacity: 0
  },
  variants: [{
    props: {
      orientation: "vertical"
    },
    style: {
      width: "100%",
      height: 40,
      "& svg": {
        transform: "var(--TabScrollButton-svgRotate)"
      }
    }
  }]
}), L0 = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiTabScrollButton"
  }), {
    className: i,
    slots: s = {},
    slotProps: a = {},
    direction: l,
    orientation: c,
    disabled: u,
    ...d
  } = o, p = Nr(), m = {
    isRtl: p,
    ...o
  }, g = pN(m), h = s.StartScrollButtonIcon ?? JF, v = s.EndScrollButtonIcon ?? KF, b = Sn({
    elementType: h,
    externalSlotProps: a.startScrollButtonIcon,
    additionalProps: {
      fontSize: "small"
    },
    ownerState: m
  }), y = Sn({
    elementType: v,
    externalSlotProps: a.endScrollButtonIcon,
    additionalProps: {
      fontSize: "small"
    },
    ownerState: m
  });
  return /* @__PURE__ */ f.jsx(fN, {
    component: "div",
    className: fe(g.root, i),
    ref: n,
    role: null,
    ownerState: m,
    tabIndex: null,
    ...d,
    style: {
      ...d.style,
      ...c === "vertical" && {
        "--TabScrollButton-svgRotate": `rotate(${p ? -90 : 90}deg)`
      }
    },
    children: l === "left" ? /* @__PURE__ */ f.jsx(h, {
      ...b
    }) : /* @__PURE__ */ f.jsx(v, {
      ...y
    })
  });
});
process.env.NODE_ENV !== "production" && (L0.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * The content of the component.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The direction the button should indicate.
   */
  direction: r.oneOf(["left", "right"]).isRequired,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: r.bool,
  /**
   * The component orientation (layout flow direction).
   */
  orientation: r.oneOf(["horizontal", "vertical"]).isRequired,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   * @default {}
   */
  slotProps: r.shape({
    endScrollButtonIcon: r.oneOfType([r.func, r.object]),
    startScrollButtonIcon: r.oneOfType([r.func, r.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: r.shape({
    EndScrollButtonIcon: r.elementType,
    StartScrollButtonIcon: r.elementType
  }),
  /**
   * @ignore
   */
  style: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object])
});
function mN(e) {
  return We("MuiTabs", e);
}
const zl = _e("MuiTabs", ["root", "vertical", "flexContainer", "flexContainerVertical", "centered", "scroller", "fixed", "scrollableX", "scrollableY", "hideScrollbar", "scrollButtons", "scrollButtonsHideMobile", "indicator"]), eb = (e, t) => e === t ? e.firstChild : t && t.nextElementSibling ? t.nextElementSibling : e.firstChild, tb = (e, t) => e === t ? e.lastChild : t && t.previousElementSibling ? t.previousElementSibling : e.lastChild, ml = (e, t, n) => {
  let o = !1, i = n(e, t);
  for (; i; ) {
    if (i === e.firstChild) {
      if (o)
        return;
      o = !0;
    }
    const s = i.disabled || i.getAttribute("aria-disabled") === "true";
    if (!i.hasAttribute("tabindex") || s)
      i = n(e, i);
    else {
      i.focus();
      return;
    }
  }
}, gN = (e) => {
  const {
    vertical: t,
    fixed: n,
    hideScrollbar: o,
    scrollableX: i,
    scrollableY: s,
    centered: a,
    scrollButtonsHideMobile: l,
    classes: c
  } = e;
  return Ue({
    root: ["root", t && "vertical"],
    scroller: ["scroller", n && "fixed", o && "hideScrollbar", i && "scrollableX", s && "scrollableY"],
    flexContainer: ["flexContainer", t && "flexContainerVertical", a && "centered"],
    indicator: ["indicator"],
    scrollButtons: ["scrollButtons", l && "scrollButtonsHideMobile"],
    scrollableX: [i && "scrollableX"],
    hideScrollbar: [o && "hideScrollbar"]
  }, mN, c);
}, hN = Q("div", {
  name: "MuiTabs",
  slot: "Root",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [{
      [`& .${zl.scrollButtons}`]: t.scrollButtons
    }, {
      [`& .${zl.scrollButtons}`]: n.scrollButtonsHideMobile && t.scrollButtonsHideMobile
    }, t.root, n.vertical && t.vertical];
  }
})($e(({
  theme: e
}) => ({
  overflow: "hidden",
  minHeight: 48,
  // Add iOS momentum scrolling for iOS < 13.0
  WebkitOverflowScrolling: "touch",
  display: "flex",
  variants: [{
    props: ({
      ownerState: t
    }) => t.vertical,
    style: {
      flexDirection: "column"
    }
  }, {
    props: ({
      ownerState: t
    }) => t.scrollButtonsHideMobile,
    style: {
      [`& .${zl.scrollButtons}`]: {
        [e.breakpoints.down("sm")]: {
          display: "none"
        }
      }
    }
  }]
}))), bN = Q("div", {
  name: "MuiTabs",
  slot: "Scroller",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.scroller, n.fixed && t.fixed, n.hideScrollbar && t.hideScrollbar, n.scrollableX && t.scrollableX, n.scrollableY && t.scrollableY];
  }
})({
  position: "relative",
  display: "inline-block",
  flex: "1 1 auto",
  whiteSpace: "nowrap",
  variants: [{
    props: ({
      ownerState: e
    }) => e.fixed,
    style: {
      overflowX: "hidden",
      width: "100%"
    }
  }, {
    props: ({
      ownerState: e
    }) => e.hideScrollbar,
    style: {
      // Hide dimensionless scrollbar on macOS
      scrollbarWidth: "none",
      // Firefox
      "&::-webkit-scrollbar": {
        display: "none"
        // Safari + Chrome
      }
    }
  }, {
    props: ({
      ownerState: e
    }) => e.scrollableX,
    style: {
      overflowX: "auto",
      overflowY: "hidden"
    }
  }, {
    props: ({
      ownerState: e
    }) => e.scrollableY,
    style: {
      overflowY: "auto",
      overflowX: "hidden"
    }
  }]
}), vN = Q("div", {
  name: "MuiTabs",
  slot: "FlexContainer",
  overridesResolver: (e, t) => {
    const {
      ownerState: n
    } = e;
    return [t.flexContainer, n.vertical && t.flexContainerVertical, n.centered && t.centered];
  }
})({
  display: "flex",
  variants: [{
    props: ({
      ownerState: e
    }) => e.vertical,
    style: {
      flexDirection: "column"
    }
  }, {
    props: ({
      ownerState: e
    }) => e.centered,
    style: {
      justifyContent: "center"
    }
  }]
}), yN = Q("span", {
  name: "MuiTabs",
  slot: "Indicator",
  overridesResolver: (e, t) => t.indicator
})($e(({
  theme: e
}) => ({
  position: "absolute",
  height: 2,
  bottom: 0,
  width: "100%",
  transition: e.transitions.create(),
  variants: [{
    props: {
      indicatorColor: "primary"
    },
    style: {
      backgroundColor: (e.vars || e).palette.primary.main
    }
  }, {
    props: {
      indicatorColor: "secondary"
    },
    style: {
      backgroundColor: (e.vars || e).palette.secondary.main
    }
  }, {
    props: ({
      ownerState: t
    }) => t.vertical,
    style: {
      height: "100%",
      width: 2,
      right: 0
    }
  }]
}))), xN = Q($0)({
  overflowX: "auto",
  overflowY: "hidden",
  // Hide dimensionless scrollbar on macOS
  scrollbarWidth: "none",
  // Firefox
  "&::-webkit-scrollbar": {
    display: "none"
    // Safari + Chrome
  }
}), nb = {};
let ob = !1;
const _0 = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiTabs"
  }), i = vn(), s = Nr(), {
    "aria-label": a,
    "aria-labelledby": l,
    action: c,
    centered: u = !1,
    children: d,
    className: p,
    component: m = "div",
    allowScrollButtonsMobile: g = !1,
    indicatorColor: h = "primary",
    onChange: v,
    orientation: b = "horizontal",
    ScrollButtonComponent: y = L0,
    scrollButtons: C = "auto",
    selectionFollowsFocus: x,
    slots: T = {},
    slotProps: w = {},
    TabIndicatorProps: R = {},
    TabScrollButtonProps: E = {},
    textColor: O = "primary",
    value: I,
    variant: P = "standard",
    visibleScrollbar: A = !1,
    ...D
  } = o, k = P === "scrollable", M = b === "vertical", F = M ? "scrollTop" : "scrollLeft", N = M ? "top" : "left", W = M ? "bottom" : "right", H = M ? "clientHeight" : "clientWidth", B = M ? "height" : "width", j = {
    ...o,
    component: m,
    allowScrollButtonsMobile: g,
    indicatorColor: h,
    orientation: b,
    vertical: M,
    scrollButtons: C,
    textColor: O,
    variant: P,
    visibleScrollbar: A,
    fixed: !k,
    hideScrollbar: k && !A,
    scrollableX: k && !M,
    scrollableY: k && M,
    centered: u && !k,
    scrollButtonsHideMobile: !g
  }, L = gN(j), ee = Sn({
    elementType: T.StartScrollButtonIcon,
    externalSlotProps: w.startScrollButtonIcon,
    ownerState: j
  }), Y = Sn({
    elementType: T.EndScrollButtonIcon,
    externalSlotProps: w.endScrollButtonIcon,
    ownerState: j
  });
  process.env.NODE_ENV !== "production" && u && k && console.error('MUI: You can not use the `centered={true}` and `variant="scrollable"` properties at the same time on a `Tabs` component.');
  const [$, U] = S.useState(!1), [X, Z] = S.useState(nb), [G, K] = S.useState(!1), [re, ne] = S.useState(!1), [z, q] = S.useState(!1), [_, oe] = S.useState({
    overflow: "hidden",
    scrollbarWidth: 0
  }), te = /* @__PURE__ */ new Map(), se = S.useRef(null), ae = S.useRef(null), me = () => {
    const de = se.current;
    let we;
    if (de) {
      const Me = de.getBoundingClientRect();
      we = {
        clientWidth: de.clientWidth,
        scrollLeft: de.scrollLeft,
        scrollTop: de.scrollTop,
        scrollWidth: de.scrollWidth,
        top: Me.top,
        bottom: Me.bottom,
        left: Me.left,
        right: Me.right
      };
    }
    let pe;
    if (de && I !== !1) {
      const Me = ae.current.children;
      if (Me.length > 0) {
        const je = Me[te.get(I)];
        process.env.NODE_ENV !== "production" && (je || console.error(["MUI: The `value` provided to the Tabs component is invalid.", `None of the Tabs' children match with "${I}".`, te.keys ? `You can provide one of the following values: ${Array.from(te.keys()).join(", ")}.` : null].join(`
`))), pe = je ? je.getBoundingClientRect() : null, process.env.NODE_ENV !== "production" && process.env.NODE_ENV !== "test" && !ob && pe && pe.width === 0 && pe.height === 0 && // if the whole Tabs component is hidden, don't warn
        we.clientWidth !== 0 && (we = null, console.error(["MUI: The `value` provided to the Tabs component is invalid.", `The Tab with this \`value\` ("${I}") is not part of the document layout.`, "Make sure the tab item is present in the document or that it's not `display: none`."].join(`
`)), ob = !0);
      }
    }
    return {
      tabsMeta: we,
      tabMeta: pe
    };
  }, ye = hn(() => {
    const {
      tabsMeta: de,
      tabMeta: we
    } = me();
    let pe = 0, Me;
    M ? (Me = "top", we && de && (pe = we.top - de.top + de.scrollTop)) : (Me = s ? "right" : "left", we && de && (pe = (s ? -1 : 1) * (we[Me] - de[Me] + de.scrollLeft)));
    const je = {
      [Me]: pe,
      // May be wrong until the font is loaded.
      [B]: we ? we[B] : 0
    };
    if (typeof X[Me] != "number" || typeof X[B] != "number")
      Z(je);
    else {
      const st = Math.abs(X[Me] - je[Me]), pt = Math.abs(X[B] - je[B]);
      (st >= 1 || pt >= 1) && Z(je);
    }
  }), Te = (de, {
    animation: we = !0
  } = {}) => {
    we ? lN(F, se.current, de, {
      duration: i.transitions.duration.standard
    }) : se.current[F] = de;
  }, Ve = (de) => {
    let we = se.current[F];
    M ? we += de : we += de * (s ? -1 : 1), Te(we);
  }, ie = () => {
    const de = se.current[H];
    let we = 0;
    const pe = Array.from(ae.current.children);
    for (let Me = 0; Me < pe.length; Me += 1) {
      const je = pe[Me];
      if (we + je[H] > de) {
        Me === 0 && (we = de);
        break;
      }
      we += je[H];
    }
    return we;
  }, be = () => {
    Ve(-1 * ie());
  }, xe = () => {
    Ve(ie());
  }, Ie = S.useCallback((de) => {
    oe({
      overflow: null,
      scrollbarWidth: de
    });
  }, []), Pe = () => {
    const de = {};
    de.scrollbarSizeListener = k ? /* @__PURE__ */ f.jsx(xN, {
      onChange: Ie,
      className: fe(L.scrollableX, L.hideScrollbar)
    }) : null;
    const pe = k && (C === "auto" && (G || re) || C === !0);
    return de.scrollButtonStart = pe ? /* @__PURE__ */ f.jsx(y, {
      slots: {
        StartScrollButtonIcon: T.StartScrollButtonIcon
      },
      slotProps: {
        startScrollButtonIcon: ee
      },
      orientation: b,
      direction: s ? "right" : "left",
      onClick: be,
      disabled: !G,
      ...E,
      className: fe(L.scrollButtons, E.className)
    }) : null, de.scrollButtonEnd = pe ? /* @__PURE__ */ f.jsx(y, {
      slots: {
        EndScrollButtonIcon: T.EndScrollButtonIcon
      },
      slotProps: {
        endScrollButtonIcon: Y
      },
      orientation: b,
      direction: s ? "left" : "right",
      onClick: xe,
      disabled: !re,
      ...E,
      className: fe(L.scrollButtons, E.className)
    }) : null, de;
  }, Ce = hn((de) => {
    const {
      tabsMeta: we,
      tabMeta: pe
    } = me();
    if (!(!pe || !we)) {
      if (pe[N] < we[N]) {
        const Me = we[F] + (pe[N] - we[N]);
        Te(Me, {
          animation: de
        });
      } else if (pe[W] > we[W]) {
        const Me = we[F] + (pe[W] - we[W]);
        Te(Me, {
          animation: de
        });
      }
    }
  }), Oe = hn(() => {
    k && C !== !1 && q(!z);
  });
  S.useEffect(() => {
    const de = is(() => {
      se.current && ye();
    });
    let we;
    const pe = (st) => {
      st.forEach((pt) => {
        pt.removedNodes.forEach((it) => {
          we == null || we.unobserve(it);
        }), pt.addedNodes.forEach((it) => {
          we == null || we.observe(it);
        });
      }), de(), Oe();
    }, Me = dr(se.current);
    Me.addEventListener("resize", de);
    let je;
    return typeof ResizeObserver < "u" && (we = new ResizeObserver(de), Array.from(ae.current.children).forEach((st) => {
      we.observe(st);
    })), typeof MutationObserver < "u" && (je = new MutationObserver(pe), je.observe(ae.current, {
      childList: !0
    })), () => {
      de.clear(), Me.removeEventListener("resize", de), je == null || je.disconnect(), we == null || we.disconnect();
    };
  }, [ye, Oe]), S.useEffect(() => {
    const de = Array.from(ae.current.children), we = de.length;
    if (typeof IntersectionObserver < "u" && we > 0 && k && C !== !1) {
      const pe = de[0], Me = de[we - 1], je = {
        root: se.current,
        threshold: 0.99
      }, st = (Zt) => {
        K(!Zt[0].isIntersecting);
      }, pt = new IntersectionObserver(st, je);
      pt.observe(pe);
      const it = (Zt) => {
        ne(!Zt[0].isIntersecting);
      }, bt = new IntersectionObserver(it, je);
      return bt.observe(Me), () => {
        pt.disconnect(), bt.disconnect();
      };
    }
  }, [k, C, z, d == null ? void 0 : d.length]), S.useEffect(() => {
    U(!0);
  }, []), S.useEffect(() => {
    ye();
  }), S.useEffect(() => {
    Ce(nb !== X);
  }, [Ce, X]), S.useImperativeHandle(c, () => ({
    updateIndicator: ye,
    updateScrollButtons: Oe
  }), [ye, Oe]);
  const Be = /* @__PURE__ */ f.jsx(yN, {
    ...R,
    className: fe(L.indicator, R.className),
    ownerState: j,
    style: {
      ...X,
      ...R.style
    }
  });
  let Ae = 0;
  const nt = S.Children.map(d, (de) => {
    if (!/* @__PURE__ */ S.isValidElement(de))
      return null;
    process.env.NODE_ENV !== "production" && qc.isFragment(de) && console.error(["MUI: The Tabs component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join(`
`));
    const we = de.props.value === void 0 ? Ae : de.props.value;
    te.set(we, Ae);
    const pe = we === I;
    return Ae += 1, /* @__PURE__ */ S.cloneElement(de, {
      fullWidth: P === "fullWidth",
      indicator: pe && !$ && Be,
      selected: pe,
      selectionFollowsFocus: x,
      onChange: v,
      textColor: O,
      value: we,
      ...Ae === 1 && I === !1 && !de.props.tabIndex ? {
        tabIndex: 0
      } : {}
    });
  }), Ze = (de) => {
    const we = ae.current, pe = dn(we).activeElement;
    if (pe.getAttribute("role") !== "tab")
      return;
    let je = b === "horizontal" ? "ArrowLeft" : "ArrowUp", st = b === "horizontal" ? "ArrowRight" : "ArrowDown";
    switch (b === "horizontal" && s && (je = "ArrowRight", st = "ArrowLeft"), de.key) {
      case je:
        de.preventDefault(), ml(we, pe, tb);
        break;
      case st:
        de.preventDefault(), ml(we, pe, eb);
        break;
      case "Home":
        de.preventDefault(), ml(we, null, eb);
        break;
      case "End":
        de.preventDefault(), ml(we, null, tb);
        break;
    }
  }, dt = Pe();
  return /* @__PURE__ */ f.jsxs(hN, {
    className: fe(L.root, p),
    ownerState: j,
    ref: n,
    as: m,
    ...D,
    children: [dt.scrollButtonStart, dt.scrollbarSizeListener, /* @__PURE__ */ f.jsxs(bN, {
      className: L.scroller,
      ownerState: j,
      style: {
        overflow: _.overflow,
        [M ? `margin${s ? "Left" : "Right"}` : "marginBottom"]: A ? void 0 : -_.scrollbarWidth
      },
      ref: se,
      children: [/* @__PURE__ */ f.jsx(vN, {
        "aria-label": a,
        "aria-labelledby": l,
        "aria-orientation": b === "vertical" ? "vertical" : null,
        className: L.flexContainer,
        ownerState: j,
        onKeyDown: Ze,
        ref: ae,
        role: "tablist",
        children: nt
      }), $ && Be]
    }), dt.scrollButtonEnd]
  });
});
process.env.NODE_ENV !== "production" && (_0.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * Callback fired when the component mounts.
   * This is useful when you want to trigger an action programmatically.
   * It supports two actions: `updateIndicator()` and `updateScrollButtons()`
   *
   * @param {object} actions This object contains all possible actions
   * that can be triggered programmatically.
   */
  action: In,
  /**
   * If `true`, the scroll buttons aren't forced hidden on mobile.
   * By default the scroll buttons are hidden on mobile and takes precedence over `scrollButtons`.
   * @default false
   */
  allowScrollButtonsMobile: r.bool,
  /**
   * The label for the Tabs as a string.
   */
  "aria-label": r.string,
  /**
   * An id or list of ids separated by a space that label the Tabs.
   */
  "aria-labelledby": r.string,
  /**
   * If `true`, the tabs are centered.
   * This prop is intended for large views.
   * @default false
   */
  centered: r.bool,
  /**
   * The content of the component.
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * Determines the color of the indicator.
   * @default 'primary'
   */
  indicatorColor: r.oneOfType([r.oneOf(["primary", "secondary"]), r.string]),
  /**
   * Callback fired when the value changes.
   *
   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.
   * @param {any} value We default to the index of the child (number)
   */
  onChange: r.func,
  /**
   * The component orientation (layout flow direction).
   * @default 'horizontal'
   */
  orientation: r.oneOf(["horizontal", "vertical"]),
  /**
   * The component used to render the scroll buttons.
   * @default TabScrollButton
   */
  ScrollButtonComponent: r.elementType,
  /**
   * Determine behavior of scroll buttons when tabs are set to scroll:
   *
   * - `auto` will only present them when not all the items are visible.
   * - `true` will always present them.
   * - `false` will never present them.
   *
   * By default the scroll buttons are hidden on mobile.
   * This behavior can be disabled with `allowScrollButtonsMobile`.
   * @default 'auto'
   */
  scrollButtons: r.oneOf(["auto", !1, !0]),
  /**
   * If `true` the selected tab changes on focus. Otherwise it only
   * changes on activation.
   */
  selectionFollowsFocus: r.bool,
  /**
   * The extra props for the slot components.
   * You can override the existing props or add new ones.
   * @default {}
   */
  slotProps: r.shape({
    endScrollButtonIcon: r.oneOfType([r.func, r.object]),
    startScrollButtonIcon: r.oneOfType([r.func, r.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: r.shape({
    EndScrollButtonIcon: r.elementType,
    StartScrollButtonIcon: r.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * Props applied to the tab indicator element.
   * @default  {}
   */
  TabIndicatorProps: r.object,
  /**
   * Props applied to the [`TabScrollButton`](https://mui.com/material-ui/api/tab-scroll-button/) element.
   * @default {}
   */
  TabScrollButtonProps: r.object,
  /**
   * Determines the color of the `Tab`.
   * @default 'primary'
   */
  textColor: r.oneOf(["inherit", "primary", "secondary"]),
  /**
   * The value of the currently selected `Tab`.
   * If you don't want any selected `Tab`, you can set this prop to `false`.
   */
  value: r.any,
  /**
   * Determines additional display behavior of the tabs:
   *
   *  - `scrollable` will invoke scrolling properties and allow for horizontally
   *  scrolling (or swiping) of the tab bar.
   *  - `fullWidth` will make the tabs grow to use all the available space,
   *  which should be used for small views, like on mobile.
   *  - `standard` will render the default state.
   * @default 'standard'
   */
  variant: r.oneOf(["fullWidth", "scrollable", "standard"]),
  /**
   * If `true`, the scrollbar is visible. It can be useful when displaying
   * a long vertical list of tabs.
   * @default false
   */
  visibleScrollbar: r.bool
});
function CN(e) {
  return We("MuiTextField", e);
}
_e("MuiTextField", ["root"]);
const SN = {
  standard: ya,
  filled: ba,
  outlined: xa
}, wN = (e) => {
  const {
    classes: t
  } = e;
  return Ue({
    root: ["root"]
  }, CN, t);
}, TN = Q(go, {
  name: "MuiTextField",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), Kn = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Ye({
    props: t,
    name: "MuiTextField"
  }), {
    autoComplete: i,
    autoFocus: s = !1,
    children: a,
    className: l,
    color: c = "primary",
    defaultValue: u,
    disabled: d = !1,
    error: p = !1,
    FormHelperTextProps: m,
    fullWidth: g = !1,
    helperText: h,
    id: v,
    InputLabelProps: b,
    inputProps: y,
    InputProps: C,
    inputRef: x,
    label: T,
    maxRows: w,
    minRows: R,
    multiline: E = !1,
    name: O,
    onBlur: I,
    onChange: P,
    onFocus: A,
    placeholder: D,
    required: k = !1,
    rows: M,
    select: F = !1,
    SelectProps: N,
    slots: W = {},
    slotProps: H = {},
    type: B,
    value: j,
    variant: L = "outlined",
    ...ee
  } = o, Y = {
    ...o,
    autoFocus: s,
    color: c,
    disabled: d,
    error: p,
    fullWidth: g,
    multiline: E,
    required: k,
    select: F,
    variant: L
  }, $ = wN(Y);
  process.env.NODE_ENV !== "production" && F && !a && console.error("MUI: `children` must be passed when using the `TextField` component with `select`.");
  const U = Na(v), X = h && U ? `${U}-helper-text` : void 0, Z = T && U ? `${U}-label` : void 0, G = SN[L], K = {
    slots: W,
    slotProps: {
      input: C,
      inputLabel: b,
      htmlInput: y,
      formHelperText: m,
      select: N,
      ...H
    }
  }, re = {}, ne = K.slotProps.inputLabel;
  L === "outlined" && (ne && typeof ne.shrink < "u" && (re.notched = ne.shrink), re.label = T), F && ((!N || !N.native) && (re.id = void 0), re["aria-describedby"] = void 0);
  const [z, q] = nn("input", {
    elementType: G,
    externalForwardedProps: K,
    additionalProps: re,
    ownerState: Y
  }), [_, oe] = nn("inputLabel", {
    elementType: au,
    externalForwardedProps: K,
    ownerState: Y
  }), [te, se] = nn("htmlInput", {
    elementType: "input",
    externalForwardedProps: K,
    ownerState: Y
  }), [ae, me] = nn("formHelperText", {
    elementType: su,
    externalForwardedProps: K,
    ownerState: Y
  }), [ye, Te] = nn("select", {
    elementType: za,
    externalForwardedProps: K,
    ownerState: Y
  }), Ve = /* @__PURE__ */ f.jsx(z, {
    "aria-describedby": X,
    autoComplete: i,
    autoFocus: s,
    defaultValue: u,
    fullWidth: g,
    multiline: E,
    name: O,
    rows: M,
    maxRows: w,
    minRows: R,
    type: B,
    value: j,
    id: U,
    inputRef: x,
    onBlur: I,
    onChange: P,
    onFocus: A,
    placeholder: D,
    inputProps: se,
    slots: {
      input: W.htmlInput ? te : void 0
    },
    ...q
  });
  return /* @__PURE__ */ f.jsxs(TN, {
    className: fe($.root, l),
    disabled: d,
    error: p,
    fullWidth: g,
    ref: n,
    required: k,
    color: c,
    variant: L,
    ownerState: Y,
    ...ee,
    children: [T != null && T !== "" && /* @__PURE__ */ f.jsx(_, {
      htmlFor: U,
      id: Z,
      ...oe,
      children: T
    }), F ? /* @__PURE__ */ f.jsx(ye, {
      "aria-describedby": X,
      id: U,
      labelId: Z,
      value: j,
      input: Ve,
      ...Te,
      children: a
    }) : Ve, h && /* @__PURE__ */ f.jsx(ae, {
      id: X,
      ...me,
      children: h
    })]
  });
});
process.env.NODE_ENV !== "production" && (Kn.propTypes = {
  // ┌────────────────────────────── Warning ──────────────────────────────┐
  // │ These PropTypes are generated from the TypeScript type definitions. │
  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
  // └─────────────────────────────────────────────────────────────────────┘
  /**
   * This prop helps users to fill forms faster, especially on mobile devices.
   * The name can be confusing, as it's more like an autofill.
   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).
   */
  autoComplete: r.string,
  /**
   * If `true`, the `input` element is focused during the first mount.
   * @default false
   */
  autoFocus: r.bool,
  /**
   * @ignore
   */
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * @ignore
   */
  className: r.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: r.oneOfType([r.oneOf(["primary", "secondary", "error", "info", "success", "warning"]), r.string]),
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: r.any,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: r.bool,
  /**
   * If `true`, the label is displayed in an error state.
   * @default false
   */
  error: r.bool,
  /**
   * Props applied to the [`FormHelperText`](https://mui.com/material-ui/api/form-helper-text/) element.
   * @deprecated Use `slotProps.formHelperText` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  FormHelperTextProps: r.object,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: r.bool,
  /**
   * The helper text content.
   */
  helperText: r.node,
  /**
   * The id of the `input` element.
   * Use this prop to make `label` and `helperText` accessible for screen readers.
   */
  id: r.string,
  /**
   * Props applied to the [`InputLabel`](https://mui.com/material-ui/api/input-label/) element.
   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.
   * @deprecated Use `slotProps.inputLabel` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  InputLabelProps: r.object,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   * @deprecated Use `slotProps.htmlInput` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  inputProps: r.object,
  /**
   * Props applied to the Input element.
   * It will be a [`FilledInput`](https://mui.com/material-ui/api/filled-input/),
   * [`OutlinedInput`](https://mui.com/material-ui/api/outlined-input/) or [`Input`](https://mui.com/material-ui/api/input/)
   * component depending on the `variant` prop value.
   * @deprecated Use `slotProps.input` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  InputProps: r.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: In,
  /**
   * The label content.
   */
  label: r.node,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: r.oneOf(["dense", "none", "normal"]),
  /**
   * Maximum number of rows to display when multiline option is set to true.
   */
  maxRows: r.oneOfType([r.number, r.string]),
  /**
   * Minimum number of rows to display when multiline option is set to true.
   */
  minRows: r.oneOfType([r.number, r.string]),
  /**
   * If `true`, a `textarea` element is rendered instead of an input.
   * @default false
   */
  multiline: r.bool,
  /**
   * Name attribute of the `input` element.
   */
  name: r.string,
  /**
   * @ignore
   */
  onBlur: r.func,
  /**
   * Callback fired when the value is changed.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: r.func,
  /**
   * @ignore
   */
  onFocus: r.func,
  /**
   * The short hint displayed in the `input` before the user enters a value.
   */
  placeholder: r.string,
  /**
   * If `true`, the label is displayed as required and the `input` element is required.
   * @default false
   */
  required: r.bool,
  /**
   * Number of rows to display when multiline option is set to true.
   */
  rows: r.oneOfType([r.number, r.string]),
  /**
   * Render a [`Select`](https://mui.com/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.
   * If this option is set you must pass the options of the select as children.
   * @default false
   */
  select: r.bool,
  /**
   * Props applied to the [`Select`](https://mui.com/material-ui/api/select/) element.
   * @deprecated Use `slotProps.select` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.
   */
  SelectProps: r.object,
  /**
   * The size of the component.
   */
  size: r.oneOfType([r.oneOf(["medium", "small"]), r.string]),
  /**
   * The props used for each slot inside.
   * @default {}
   */
  slotProps: r.shape({
    formHelperText: r.oneOfType([r.func, r.object]),
    htmlInput: r.oneOfType([r.func, r.object]),
    input: r.oneOfType([r.func, r.object]),
    inputLabel: r.oneOfType([r.func, r.object]),
    select: r.oneOfType([r.func, r.object])
  }),
  /**
   * The components used for each slot inside.
   * @default {}
   */
  slots: r.shape({
    formHelperText: r.elementType,
    htmlInput: r.elementType,
    input: r.elementType,
    inputLabel: r.elementType,
    select: r.elementType
  }),
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).
   */
  type: r.string,
  /**
   * The value of the `input` element, required for a controlled component.
   */
  value: r.any,
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: r.oneOf(["filled", "outlined", "standard"])
});
const Hf = He(/* @__PURE__ */ f.jsx("path", {
  d: "M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z"
}), "Add"), IN = He(/* @__PURE__ */ f.jsx("path", {
  d: "m20 12-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8z"
}), "ArrowDownward"), RN = He(/* @__PURE__ */ f.jsx("path", {
  d: "m10 17 5-5-5-5z"
}), "ArrowRight"), ON = He(/* @__PURE__ */ f.jsx("path", {
  d: "M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2m5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12z"
}), "Cancel"), EN = He(/* @__PURE__ */ f.jsx("path", {
  d: "M15.41 7.41 14 6l-6 6 6 6 1.41-1.41L10.83 12z"
}), "ChevronLeft"), PN = He(/* @__PURE__ */ f.jsx("path", {
  d: "M10 6 8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
}), "ChevronRight"), AN = He(/* @__PURE__ */ f.jsx("path", {
  d: "M5 13h14v-2H5zm-2 4h14v-2H3zM7 7v2h14V7z"
}), "ClearAll"), pu = He(/* @__PURE__ */ f.jsx("path", {
  d: "M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}), "Close"), DN = He(/* @__PURE__ */ f.jsx("path", {
  d: "M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2m0 16H8V7h11z"
}), "ContentCopy"), fu = He(/* @__PURE__ */ f.jsx("path", {
  d: "M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z"
}), "Delete"), MN = He(/* @__PURE__ */ f.jsx("path", {
  d: "M3 3h18v2H3zm0 16h18v2H3z"
}), "DensityLarge"), jN = He(/* @__PURE__ */ f.jsx("path", {
  d: "M3 3h18v2H3zm0 16h18v2H3zm0-8h18v2H3z"
}), "DensityMedium"), kN = He(/* @__PURE__ */ f.jsx("path", {
  d: "M3 2h18v2H3zm0 18h18v2H3zm0-6h18v2H3zm0-6h18v2H3z"
}), "DensitySmall"), FN = He(/* @__PURE__ */ f.jsx("path", {
  d: "M5 20h14v-2H5zM19 9h-4V3H9v6H5l7 7z"
}), "Download"), NN = He(/* @__PURE__ */ f.jsx("path", {
  d: "M20 9H4v2h16zM4 15h16v-2H4z"
}), "DragHandle"), VN = He([/* @__PURE__ */ f.jsx("path", {
  d: "M8 8H6v7c0 1.1.9 2 2 2h9v-2H8z"
}, "0"), /* @__PURE__ */ f.jsx("path", {
  d: "M20 3h-8c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2m0 8h-8V7h8zM4 12H2v7c0 1.1.9 2 2 2h9v-2H4z"
}, "1")], "DynamicFeed"), B0 = He(/* @__PURE__ */ f.jsx("path", {
  d: "M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.996.996 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z"
}), "Edit"), $N = He(/* @__PURE__ */ f.jsx("path", {
  d: "M10.09 15.59 11.5 17l5-5-5-5-1.41 1.41L12.67 11H3v2h9.67zM19 3H5c-1.11 0-2 .9-2 2v4h2V5h14v14H5v-4H3v4c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2"
}), "ExitToApp"), LN = He(/* @__PURE__ */ f.jsx("path", {
  d: "M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z"
}), "ExpandMore"), _N = He(/* @__PURE__ */ f.jsx("path", {
  d: "M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61"
}), "FilterAlt"), BN = He(/* @__PURE__ */ f.jsx("path", {
  d: "M10 18h4v-2h-4zM3 6v2h18V6zm3 7h12v-2H6z"
}), "FilterList"), zN = He(/* @__PURE__ */ f.jsx("path", {
  d: "M10.83 8H21V6H8.83zm5 5H18v-2h-4.17zM14 16.83V18h-4v-2h3.17l-3-3H6v-2h2.17l-3-3H3V6h.17L1.39 4.22 2.8 2.81l18.38 18.38-1.41 1.41z"
}), "FilterListOff"), WN = He(/* @__PURE__ */ f.jsx("path", {
  d: "M18.41 16.59 13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z"
}), "FirstPage"), HN = He(/* @__PURE__ */ f.jsx("path", {
  d: "M7 14H5v5h5v-2H7zm-2-4h2V7h3V5H5zm12 7h-3v2h5v-5h-2zM14 5v2h3v3h2V5z"
}), "Fullscreen"), GN = He(/* @__PURE__ */ f.jsx("path", {
  d: "M5 16h3v3h2v-5H5zm3-8H5v2h5V5H8zm6 11h2v-3h3v-2h-5zm2-11V5h-2v5h5V8z"
}), "FullscreenExit"), UN = He([/* @__PURE__ */ f.jsx("path", {
  d: "M18 6.41 16.59 5 12 9.58 7.41 5 6 6.41l6 6z"
}, "0"), /* @__PURE__ */ f.jsx("path", {
  d: "m18 13-1.41-1.41L12 16.17l-4.59-4.58L6 13l6 6z"
}, "1")], "KeyboardDoubleArrowDown"), XN = He(/* @__PURE__ */ f.jsx("path", {
  d: "M5.59 7.41 10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z"
}), "LastPage"), YN = He(/* @__PURE__ */ f.jsx("path", {
  d: "M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2m12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2m-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2"
}), "MoreHoriz"), ZN = He(/* @__PURE__ */ f.jsx("path", {
  d: "M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2m0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2m0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2"
}), "MoreVert"), qN = He(/* @__PURE__ */ f.jsx("path", {
  fillRule: "evenodd",
  d: "M16 9V4h1c.55 0 1-.45 1-1s-.45-1-1-1H7c-.55 0-1 .45-1 1s.45 1 1 1h1v5c0 1.66-1.34 3-3 3v2h5.97v7l1 1 1-1v-7H19v-2c-1.66 0-3-1.34-3-3"
}), "PushPin"), JN = He(/* @__PURE__ */ f.jsx("path", {
  d: "M12 5V2L8 6l4 4V7c3.31 0 6 2.69 6 6 0 2.97-2.17 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93 0-4.42-3.58-8-8-8m-6 8c0-1.65.67-3.15 1.76-4.24L6.34 7.34C4.9 8.79 4 10.79 4 13c0 4.08 3.05 7.44 7 7.93v-2.02c-2.83-.48-5-2.94-5-5.91"
}), "RestartAlt"), KN = He(/* @__PURE__ */ f.jsx("path", {
  d: "M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3m3-10H5V5h10z"
}), "Save"), QN = He(/* @__PURE__ */ f.jsx("path", {
  d: "M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14"
}), "Search"), e2 = He([/* @__PURE__ */ f.jsx("path", {
  d: "M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3 6.08 3 3.28 5.64 3.03 9h2.02C5.3 6.75 7.18 5 9.5 5 11.99 5 14 7.01 14 9.5S11.99 14 9.5 14c-.17 0-.33-.03-.5-.05v2.02c.17.02.33.03.5.03 1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19z"
}, "0"), /* @__PURE__ */ f.jsx("path", {
  d: "M6.47 10.82 4 13.29l-2.47-2.47-.71.71L3.29 14 .82 16.47l.71.71L4 14.71l2.47 2.47.71-.71L4.71 14l2.47-2.47z"
}, "1")], "SearchOff"), t2 = He(/* @__PURE__ */ f.jsx("path", {
  d: "M3 18h6v-2H3zM3 6v2h18V6zm0 7h12v-2H3z"
}), "Sort"), n2 = He(/* @__PURE__ */ f.jsx("path", {
  d: "M15 19v-2H8.41L20 5.41 18.59 4 7 15.59V9H5v10z"
}), "SouthWest"), o2 = He(/* @__PURE__ */ f.jsx("path", {
  d: "m18 12 4-4-4-4v3H3v2h15zM6 12l-4 4 4 4v-3h15v-2H6z"
}), "SyncAlt"), r2 = He(/* @__PURE__ */ f.jsx("path", {
  d: "M14.67 5v14H9.33V5zm1 14H21V5h-5.33zm-7.34 0V5H3v14z"
}), "ViewColumn"), i2 = He(/* @__PURE__ */ f.jsx("path", {
  d: "M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3"
}), "Visibility"), s2 = He(/* @__PURE__ */ f.jsx("path", {
  d: "M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7M2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2m4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3z"
}), "VisibilityOff");
function z0(e, t) {
  return function() {
    return e.apply(t, arguments);
  };
}
const { toString: a2 } = Object.prototype, { getPrototypeOf: Gf } = Object, mu = /* @__PURE__ */ ((e) => (t) => {
  const n = a2.call(t);
  return e[n] || (e[n] = n.slice(8, -1).toLowerCase());
})(/* @__PURE__ */ Object.create(null)), Fo = (e) => (e = e.toLowerCase(), (t) => mu(t) === e), gu = (e) => (t) => typeof t === e, { isArray: us } = Array, Sa = gu("undefined");
function l2(e) {
  return e !== null && !Sa(e) && e.constructor !== null && !Sa(e.constructor) && eo(e.constructor.isBuffer) && e.constructor.isBuffer(e);
}
const W0 = Fo("ArrayBuffer");
function c2(e) {
  let t;
  return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? t = ArrayBuffer.isView(e) : t = e && e.buffer && W0(e.buffer), t;
}
const u2 = gu("string"), eo = gu("function"), H0 = gu("number"), hu = (e) => e !== null && typeof e == "object", d2 = (e) => e === !0 || e === !1, Wl = (e) => {
  if (mu(e) !== "object")
    return !1;
  const t = Gf(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}, p2 = Fo("Date"), f2 = Fo("File"), m2 = Fo("Blob"), g2 = Fo("FileList"), h2 = (e) => hu(e) && eo(e.pipe), b2 = (e) => {
  let t;
  return e && (typeof FormData == "function" && e instanceof FormData || eo(e.append) && ((t = mu(e)) === "formdata" || // detect form-data instance
  t === "object" && eo(e.toString) && e.toString() === "[object FormData]"));
}, v2 = Fo("URLSearchParams"), [y2, x2, C2, S2] = ["ReadableStream", "Request", "Response", "Headers"].map(Fo), w2 = (e) => e.trim ? e.trim() : e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
function Wa(e, t, { allOwnKeys: n = !1 } = {}) {
  if (e === null || typeof e > "u")
    return;
  let o, i;
  if (typeof e != "object" && (e = [e]), us(e))
    for (o = 0, i = e.length; o < i; o++)
      t.call(null, e[o], o, e);
  else {
    const s = n ? Object.getOwnPropertyNames(e) : Object.keys(e), a = s.length;
    let l;
    for (o = 0; o < a; o++)
      l = s[o], t.call(null, e[l], l, e);
  }
}
function G0(e, t) {
  t = t.toLowerCase();
  const n = Object.keys(e);
  let o = n.length, i;
  for (; o-- > 0; )
    if (i = n[o], t === i.toLowerCase())
      return i;
  return null;
}
const Kr = typeof globalThis < "u" ? globalThis : typeof self < "u" ? self : typeof window < "u" ? window : global, U0 = (e) => !Sa(e) && e !== Kr;
function Tp() {
  const { caseless: e } = U0(this) && this || {}, t = {}, n = (o, i) => {
    const s = e && G0(t, i) || i;
    Wl(t[s]) && Wl(o) ? t[s] = Tp(t[s], o) : Wl(o) ? t[s] = Tp({}, o) : us(o) ? t[s] = o.slice() : t[s] = o;
  };
  for (let o = 0, i = arguments.length; o < i; o++)
    arguments[o] && Wa(arguments[o], n);
  return t;
}
const T2 = (e, t, n, { allOwnKeys: o } = {}) => (Wa(t, (i, s) => {
  n && eo(i) ? e[s] = z0(i, n) : e[s] = i;
}, { allOwnKeys: o }), e), I2 = (e) => (e.charCodeAt(0) === 65279 && (e = e.slice(1)), e), R2 = (e, t, n, o) => {
  e.prototype = Object.create(t.prototype, o), e.prototype.constructor = e, Object.defineProperty(e, "super", {
    value: t.prototype
  }), n && Object.assign(e.prototype, n);
}, O2 = (e, t, n, o) => {
  let i, s, a;
  const l = {};
  if (t = t || {}, e == null) return t;
  do {
    for (i = Object.getOwnPropertyNames(e), s = i.length; s-- > 0; )
      a = i[s], (!o || o(a, e, t)) && !l[a] && (t[a] = e[a], l[a] = !0);
    e = n !== !1 && Gf(e);
  } while (e && (!n || n(e, t)) && e !== Object.prototype);
  return t;
}, E2 = (e, t, n) => {
  e = String(e), (n === void 0 || n > e.length) && (n = e.length), n -= t.length;
  const o = e.indexOf(t, n);
  return o !== -1 && o === n;
}, P2 = (e) => {
  if (!e) return null;
  if (us(e)) return e;
  let t = e.length;
  if (!H0(t)) return null;
  const n = new Array(t);
  for (; t-- > 0; )
    n[t] = e[t];
  return n;
}, A2 = /* @__PURE__ */ ((e) => (t) => e && t instanceof e)(typeof Uint8Array < "u" && Gf(Uint8Array)), D2 = (e, t) => {
  const o = (e && e[Symbol.iterator]).call(e);
  let i;
  for (; (i = o.next()) && !i.done; ) {
    const s = i.value;
    t.call(e, s[0], s[1]);
  }
}, M2 = (e, t) => {
  let n;
  const o = [];
  for (; (n = e.exec(t)) !== null; )
    o.push(n);
  return o;
}, j2 = Fo("HTMLFormElement"), k2 = (e) => e.toLowerCase().replace(
  /[-_\s]([a-z\d])(\w*)/g,
  function(n, o, i) {
    return o.toUpperCase() + i;
  }
), rb = (({ hasOwnProperty: e }) => (t, n) => e.call(t, n))(Object.prototype), F2 = Fo("RegExp"), X0 = (e, t) => {
  const n = Object.getOwnPropertyDescriptors(e), o = {};
  Wa(n, (i, s) => {
    let a;
    (a = t(i, s, e)) !== !1 && (o[s] = a || i);
  }), Object.defineProperties(e, o);
}, N2 = (e) => {
  X0(e, (t, n) => {
    if (eo(e) && ["arguments", "caller", "callee"].indexOf(n) !== -1)
      return !1;
    const o = e[n];
    if (eo(o)) {
      if (t.enumerable = !1, "writable" in t) {
        t.writable = !1;
        return;
      }
      t.set || (t.set = () => {
        throw Error("Can not rewrite read-only method '" + n + "'");
      });
    }
  });
}, V2 = (e, t) => {
  const n = {}, o = (i) => {
    i.forEach((s) => {
      n[s] = !0;
    });
  };
  return us(e) ? o(e) : o(String(e).split(t)), n;
}, $2 = () => {
}, L2 = (e, t) => e != null && Number.isFinite(e = +e) ? e : t, bd = "abcdefghijklmnopqrstuvwxyz", ib = "0123456789", Y0 = {
  DIGIT: ib,
  ALPHA: bd,
  ALPHA_DIGIT: bd + bd.toUpperCase() + ib
}, _2 = (e = 16, t = Y0.ALPHA_DIGIT) => {
  let n = "";
  const { length: o } = t;
  for (; e--; )
    n += t[Math.random() * o | 0];
  return n;
};
function B2(e) {
  return !!(e && eo(e.append) && e[Symbol.toStringTag] === "FormData" && e[Symbol.iterator]);
}
const z2 = (e) => {
  const t = new Array(10), n = (o, i) => {
    if (hu(o)) {
      if (t.indexOf(o) >= 0)
        return;
      if (!("toJSON" in o)) {
        t[i] = o;
        const s = us(o) ? [] : {};
        return Wa(o, (a, l) => {
          const c = n(a, i + 1);
          !Sa(c) && (s[l] = c);
        }), t[i] = void 0, s;
      }
    }
    return o;
  };
  return n(e, 0);
}, W2 = Fo("AsyncFunction"), H2 = (e) => e && (hu(e) || eo(e)) && eo(e.then) && eo(e.catch), Z0 = ((e, t) => e ? setImmediate : t ? ((n, o) => (Kr.addEventListener("message", ({ source: i, data: s }) => {
  i === Kr && s === n && o.length && o.shift()();
}, !1), (i) => {
  o.push(i), Kr.postMessage(n, "*");
}))(`axios@${Math.random()}`, []) : (n) => setTimeout(n))(
  typeof setImmediate == "function",
  eo(Kr.postMessage)
), G2 = typeof queueMicrotask < "u" ? queueMicrotask.bind(Kr) : typeof process < "u" && process.nextTick || Z0, ge = {
  isArray: us,
  isArrayBuffer: W0,
  isBuffer: l2,
  isFormData: b2,
  isArrayBufferView: c2,
  isString: u2,
  isNumber: H0,
  isBoolean: d2,
  isObject: hu,
  isPlainObject: Wl,
  isReadableStream: y2,
  isRequest: x2,
  isResponse: C2,
  isHeaders: S2,
  isUndefined: Sa,
  isDate: p2,
  isFile: f2,
  isBlob: m2,
  isRegExp: F2,
  isFunction: eo,
  isStream: h2,
  isURLSearchParams: v2,
  isTypedArray: A2,
  isFileList: g2,
  forEach: Wa,
  merge: Tp,
  extend: T2,
  trim: w2,
  stripBOM: I2,
  inherits: R2,
  toFlatObject: O2,
  kindOf: mu,
  kindOfTest: Fo,
  endsWith: E2,
  toArray: P2,
  forEachEntry: D2,
  matchAll: M2,
  isHTMLForm: j2,
  hasOwnProperty: rb,
  hasOwnProp: rb,
  // an alias to avoid ESLint no-prototype-builtins detection
  reduceDescriptors: X0,
  freezeMethods: N2,
  toObjectSet: V2,
  toCamelCase: k2,
  noop: $2,
  toFiniteNumber: L2,
  findKey: G0,
  global: Kr,
  isContextDefined: U0,
  ALPHABET: Y0,
  generateString: _2,
  isSpecCompliantForm: B2,
  toJSONObject: z2,
  isAsyncFn: W2,
  isThenable: H2,
  setImmediate: Z0,
  asap: G2
};
function ut(e, t, n, o, i) {
  Error.call(this), Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : this.stack = new Error().stack, this.message = e, this.name = "AxiosError", t && (this.code = t), n && (this.config = n), o && (this.request = o), i && (this.response = i, this.status = i.status ? i.status : null);
}
ge.inherits(ut, Error, {
  toJSON: function() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: ge.toJSONObject(this.config),
      code: this.code,
      status: this.status
    };
  }
});
const q0 = ut.prototype, J0 = {};
[
  "ERR_BAD_OPTION_VALUE",
  "ERR_BAD_OPTION",
  "ECONNABORTED",
  "ETIMEDOUT",
  "ERR_NETWORK",
  "ERR_FR_TOO_MANY_REDIRECTS",
  "ERR_DEPRECATED",
  "ERR_BAD_RESPONSE",
  "ERR_BAD_REQUEST",
  "ERR_CANCELED",
  "ERR_NOT_SUPPORT",
  "ERR_INVALID_URL"
  // eslint-disable-next-line func-names
].forEach((e) => {
  J0[e] = { value: e };
});
Object.defineProperties(ut, J0);
Object.defineProperty(q0, "isAxiosError", { value: !0 });
ut.from = (e, t, n, o, i, s) => {
  const a = Object.create(q0);
  return ge.toFlatObject(e, a, function(c) {
    return c !== Error.prototype;
  }, (l) => l !== "isAxiosError"), ut.call(a, e.message, t, n, o, i), a.cause = e, a.name = e.name, s && Object.assign(a, s), a;
};
const U2 = null;
function Ip(e) {
  return ge.isPlainObject(e) || ge.isArray(e);
}
function K0(e) {
  return ge.endsWith(e, "[]") ? e.slice(0, -2) : e;
}
function sb(e, t, n) {
  return e ? e.concat(t).map(function(i, s) {
    return i = K0(i), !n && s ? "[" + i + "]" : i;
  }).join(n ? "." : "") : t;
}
function X2(e) {
  return ge.isArray(e) && !e.some(Ip);
}
const Y2 = ge.toFlatObject(ge, {}, null, function(t) {
  return /^is[A-Z]/.test(t);
});
function bu(e, t, n) {
  if (!ge.isObject(e))
    throw new TypeError("target must be an object");
  t = t || new FormData(), n = ge.toFlatObject(n, {
    metaTokens: !0,
    dots: !1,
    indexes: !1
  }, !1, function(v, b) {
    return !ge.isUndefined(b[v]);
  });
  const o = n.metaTokens, i = n.visitor || d, s = n.dots, a = n.indexes, c = (n.Blob || typeof Blob < "u" && Blob) && ge.isSpecCompliantForm(t);
  if (!ge.isFunction(i))
    throw new TypeError("visitor must be a function");
  function u(h) {
    if (h === null) return "";
    if (ge.isDate(h))
      return h.toISOString();
    if (!c && ge.isBlob(h))
      throw new ut("Blob is not supported. Use a Buffer instead.");
    return ge.isArrayBuffer(h) || ge.isTypedArray(h) ? c && typeof Blob == "function" ? new Blob([h]) : Buffer.from(h) : h;
  }
  function d(h, v, b) {
    let y = h;
    if (h && !b && typeof h == "object") {
      if (ge.endsWith(v, "{}"))
        v = o ? v : v.slice(0, -2), h = JSON.stringify(h);
      else if (ge.isArray(h) && X2(h) || (ge.isFileList(h) || ge.endsWith(v, "[]")) && (y = ge.toArray(h)))
        return v = K0(v), y.forEach(function(x, T) {
          !(ge.isUndefined(x) || x === null) && t.append(
            // eslint-disable-next-line no-nested-ternary
            a === !0 ? sb([v], T, s) : a === null ? v : v + "[]",
            u(x)
          );
        }), !1;
    }
    return Ip(h) ? !0 : (t.append(sb(b, v, s), u(h)), !1);
  }
  const p = [], m = Object.assign(Y2, {
    defaultVisitor: d,
    convertValue: u,
    isVisitable: Ip
  });
  function g(h, v) {
    if (!ge.isUndefined(h)) {
      if (p.indexOf(h) !== -1)
        throw Error("Circular reference detected in " + v.join("."));
      p.push(h), ge.forEach(h, function(y, C) {
        (!(ge.isUndefined(y) || y === null) && i.call(
          t,
          y,
          ge.isString(C) ? C.trim() : C,
          v,
          m
        )) === !0 && g(y, v ? v.concat(C) : [C]);
      }), p.pop();
    }
  }
  if (!ge.isObject(e))
    throw new TypeError("data must be an object");
  return g(e), t;
}
function ab(e) {
  const t = {
    "!": "%21",
    "'": "%27",
    "(": "%28",
    ")": "%29",
    "~": "%7E",
    "%20": "+",
    "%00": "\0"
  };
  return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g, function(o) {
    return t[o];
  });
}
function Uf(e, t) {
  this._pairs = [], e && bu(e, this, t);
}
const Q0 = Uf.prototype;
Q0.append = function(t, n) {
  this._pairs.push([t, n]);
};
Q0.toString = function(t) {
  const n = t ? function(o) {
    return t.call(this, o, ab);
  } : ab;
  return this._pairs.map(function(i) {
    return n(i[0]) + "=" + n(i[1]);
  }, "").join("&");
};
function Z2(e) {
  return encodeURIComponent(e).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
}
function ex(e, t, n) {
  if (!t)
    return e;
  const o = n && n.encode || Z2, i = n && n.serialize;
  let s;
  if (i ? s = i(t, n) : s = ge.isURLSearchParams(t) ? t.toString() : new Uf(t, n).toString(o), s) {
    const a = e.indexOf("#");
    a !== -1 && (e = e.slice(0, a)), e += (e.indexOf("?") === -1 ? "?" : "&") + s;
  }
  return e;
}
class lb {
  constructor() {
    this.handlers = [];
  }
  /**
   * Add a new interceptor to the stack
   *
   * @param {Function} fulfilled The function to handle `then` for a `Promise`
   * @param {Function} rejected The function to handle `reject` for a `Promise`
   *
   * @return {Number} An ID used to remove interceptor later
   */
  use(t, n, o) {
    return this.handlers.push({
      fulfilled: t,
      rejected: n,
      synchronous: o ? o.synchronous : !1,
      runWhen: o ? o.runWhen : null
    }), this.handlers.length - 1;
  }
  /**
   * Remove an interceptor from the stack
   *
   * @param {Number} id The ID that was returned by `use`
   *
   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise
   */
  eject(t) {
    this.handlers[t] && (this.handlers[t] = null);
  }
  /**
   * Clear all interceptors from the stack
   *
   * @returns {void}
   */
  clear() {
    this.handlers && (this.handlers = []);
  }
  /**
   * Iterate over all the registered interceptors
   *
   * This method is particularly useful for skipping over any
   * interceptors that may have become `null` calling `eject`.
   *
   * @param {Function} fn The function to call for each interceptor
   *
   * @returns {void}
   */
  forEach(t) {
    ge.forEach(this.handlers, function(o) {
      o !== null && t(o);
    });
  }
}
const tx = {
  silentJSONParsing: !0,
  forcedJSONParsing: !0,
  clarifyTimeoutError: !1
}, q2 = typeof URLSearchParams < "u" ? URLSearchParams : Uf, J2 = typeof FormData < "u" ? FormData : null, K2 = typeof Blob < "u" ? Blob : null, Q2 = {
  isBrowser: !0,
  classes: {
    URLSearchParams: q2,
    FormData: J2,
    Blob: K2
  },
  protocols: ["http", "https", "file", "blob", "url", "data"]
}, Xf = typeof window < "u" && typeof document < "u", Rp = typeof navigator == "object" && navigator || void 0, eV = Xf && (!Rp || ["ReactNative", "NativeScript", "NS"].indexOf(Rp.product) < 0), tV = typeof WorkerGlobalScope < "u" && // eslint-disable-next-line no-undef
self instanceof WorkerGlobalScope && typeof self.importScripts == "function", nV = Xf && window.location.href || "http://localhost", oV = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  hasBrowserEnv: Xf,
  hasStandardBrowserEnv: eV,
  hasStandardBrowserWebWorkerEnv: tV,
  navigator: Rp,
  origin: nV
}, Symbol.toStringTag, { value: "Module" })), Bn = {
  ...oV,
  ...Q2
};
function rV(e, t) {
  return bu(e, new Bn.classes.URLSearchParams(), Object.assign({
    visitor: function(n, o, i, s) {
      return Bn.isNode && ge.isBuffer(n) ? (this.append(o, n.toString("base64")), !1) : s.defaultVisitor.apply(this, arguments);
    }
  }, t));
}
function iV(e) {
  return ge.matchAll(/\w+|\[(\w*)]/g, e).map((t) => t[0] === "[]" ? "" : t[1] || t[0]);
}
function sV(e) {
  const t = {}, n = Object.keys(e);
  let o;
  const i = n.length;
  let s;
  for (o = 0; o < i; o++)
    s = n[o], t[s] = e[s];
  return t;
}
function nx(e) {
  function t(n, o, i, s) {
    let a = n[s++];
    if (a === "__proto__") return !0;
    const l = Number.isFinite(+a), c = s >= n.length;
    return a = !a && ge.isArray(i) ? i.length : a, c ? (ge.hasOwnProp(i, a) ? i[a] = [i[a], o] : i[a] = o, !l) : ((!i[a] || !ge.isObject(i[a])) && (i[a] = []), t(n, o, i[a], s) && ge.isArray(i[a]) && (i[a] = sV(i[a])), !l);
  }
  if (ge.isFormData(e) && ge.isFunction(e.entries)) {
    const n = {};
    return ge.forEachEntry(e, (o, i) => {
      t(iV(o), i, n, 0);
    }), n;
  }
  return null;
}
function aV(e, t, n) {
  if (ge.isString(e))
    try {
      return (t || JSON.parse)(e), ge.trim(e);
    } catch (o) {
      if (o.name !== "SyntaxError")
        throw o;
    }
  return (0, JSON.stringify)(e);
}
const Ha = {
  transitional: tx,
  adapter: ["xhr", "http", "fetch"],
  transformRequest: [function(t, n) {
    const o = n.getContentType() || "", i = o.indexOf("application/json") > -1, s = ge.isObject(t);
    if (s && ge.isHTMLForm(t) && (t = new FormData(t)), ge.isFormData(t))
      return i ? JSON.stringify(nx(t)) : t;
    if (ge.isArrayBuffer(t) || ge.isBuffer(t) || ge.isStream(t) || ge.isFile(t) || ge.isBlob(t) || ge.isReadableStream(t))
      return t;
    if (ge.isArrayBufferView(t))
      return t.buffer;
    if (ge.isURLSearchParams(t))
      return n.setContentType("application/x-www-form-urlencoded;charset=utf-8", !1), t.toString();
    let l;
    if (s) {
      if (o.indexOf("application/x-www-form-urlencoded") > -1)
        return rV(t, this.formSerializer).toString();
      if ((l = ge.isFileList(t)) || o.indexOf("multipart/form-data") > -1) {
        const c = this.env && this.env.FormData;
        return bu(
          l ? { "files[]": t } : t,
          c && new c(),
          this.formSerializer
        );
      }
    }
    return s || i ? (n.setContentType("application/json", !1), aV(t)) : t;
  }],
  transformResponse: [function(t) {
    const n = this.transitional || Ha.transitional, o = n && n.forcedJSONParsing, i = this.responseType === "json";
    if (ge.isResponse(t) || ge.isReadableStream(t))
      return t;
    if (t && ge.isString(t) && (o && !this.responseType || i)) {
      const a = !(n && n.silentJSONParsing) && i;
      try {
        return JSON.parse(t);
      } catch (l) {
        if (a)
          throw l.name === "SyntaxError" ? ut.from(l, ut.ERR_BAD_RESPONSE, this, null, this.response) : l;
      }
    }
    return t;
  }],
  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,
  xsrfCookieName: "XSRF-TOKEN",
  xsrfHeaderName: "X-XSRF-TOKEN",
  maxContentLength: -1,
  maxBodyLength: -1,
  env: {
    FormData: Bn.classes.FormData,
    Blob: Bn.classes.Blob
  },
  validateStatus: function(t) {
    return t >= 200 && t < 300;
  },
  headers: {
    common: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": void 0
    }
  }
};
ge.forEach(["delete", "get", "head", "post", "put", "patch"], (e) => {
  Ha.headers[e] = {};
});
const lV = ge.toObjectSet([
  "age",
  "authorization",
  "content-length",
  "content-type",
  "etag",
  "expires",
  "from",
  "host",
  "if-modified-since",
  "if-unmodified-since",
  "last-modified",
  "location",
  "max-forwards",
  "proxy-authorization",
  "referer",
  "retry-after",
  "user-agent"
]), cV = (e) => {
  const t = {};
  let n, o, i;
  return e && e.split(`
`).forEach(function(a) {
    i = a.indexOf(":"), n = a.substring(0, i).trim().toLowerCase(), o = a.substring(i + 1).trim(), !(!n || t[n] && lV[n]) && (n === "set-cookie" ? t[n] ? t[n].push(o) : t[n] = [o] : t[n] = t[n] ? t[n] + ", " + o : o);
  }), t;
}, cb = Symbol("internals");
function Ps(e) {
  return e && String(e).trim().toLowerCase();
}
function Hl(e) {
  return e === !1 || e == null ? e : ge.isArray(e) ? e.map(Hl) : String(e);
}
function uV(e) {
  const t = /* @__PURE__ */ Object.create(null), n = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
  let o;
  for (; o = n.exec(e); )
    t[o[1]] = o[2];
  return t;
}
const dV = (e) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim());
function vd(e, t, n, o, i) {
  if (ge.isFunction(o))
    return o.call(this, t, n);
  if (i && (t = n), !!ge.isString(t)) {
    if (ge.isString(o))
      return t.indexOf(o) !== -1;
    if (ge.isRegExp(o))
      return o.test(t);
  }
}
function pV(e) {
  return e.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (t, n, o) => n.toUpperCase() + o);
}
function fV(e, t) {
  const n = ge.toCamelCase(" " + t);
  ["get", "set", "has"].forEach((o) => {
    Object.defineProperty(e, o + n, {
      value: function(i, s, a) {
        return this[o].call(this, t, i, s, a);
      },
      configurable: !0
    });
  });
}
class zn {
  constructor(t) {
    t && this.set(t);
  }
  set(t, n, o) {
    const i = this;
    function s(l, c, u) {
      const d = Ps(c);
      if (!d)
        throw new Error("header name must be a non-empty string");
      const p = ge.findKey(i, d);
      (!p || i[p] === void 0 || u === !0 || u === void 0 && i[p] !== !1) && (i[p || c] = Hl(l));
    }
    const a = (l, c) => ge.forEach(l, (u, d) => s(u, d, c));
    if (ge.isPlainObject(t) || t instanceof this.constructor)
      a(t, n);
    else if (ge.isString(t) && (t = t.trim()) && !dV(t))
      a(cV(t), n);
    else if (ge.isHeaders(t))
      for (const [l, c] of t.entries())
        s(c, l, o);
    else
      t != null && s(n, t, o);
    return this;
  }
  get(t, n) {
    if (t = Ps(t), t) {
      const o = ge.findKey(this, t);
      if (o) {
        const i = this[o];
        if (!n)
          return i;
        if (n === !0)
          return uV(i);
        if (ge.isFunction(n))
          return n.call(this, i, o);
        if (ge.isRegExp(n))
          return n.exec(i);
        throw new TypeError("parser must be boolean|regexp|function");
      }
    }
  }
  has(t, n) {
    if (t = Ps(t), t) {
      const o = ge.findKey(this, t);
      return !!(o && this[o] !== void 0 && (!n || vd(this, this[o], o, n)));
    }
    return !1;
  }
  delete(t, n) {
    const o = this;
    let i = !1;
    function s(a) {
      if (a = Ps(a), a) {
        const l = ge.findKey(o, a);
        l && (!n || vd(o, o[l], l, n)) && (delete o[l], i = !0);
      }
    }
    return ge.isArray(t) ? t.forEach(s) : s(t), i;
  }
  clear(t) {
    const n = Object.keys(this);
    let o = n.length, i = !1;
    for (; o--; ) {
      const s = n[o];
      (!t || vd(this, this[s], s, t, !0)) && (delete this[s], i = !0);
    }
    return i;
  }
  normalize(t) {
    const n = this, o = {};
    return ge.forEach(this, (i, s) => {
      const a = ge.findKey(o, s);
      if (a) {
        n[a] = Hl(i), delete n[s];
        return;
      }
      const l = t ? pV(s) : String(s).trim();
      l !== s && delete n[s], n[l] = Hl(i), o[l] = !0;
    }), this;
  }
  concat(...t) {
    return this.constructor.concat(this, ...t);
  }
  toJSON(t) {
    const n = /* @__PURE__ */ Object.create(null);
    return ge.forEach(this, (o, i) => {
      o != null && o !== !1 && (n[i] = t && ge.isArray(o) ? o.join(", ") : o);
    }), n;
  }
  [Symbol.iterator]() {
    return Object.entries(this.toJSON())[Symbol.iterator]();
  }
  toString() {
    return Object.entries(this.toJSON()).map(([t, n]) => t + ": " + n).join(`
`);
  }
  get [Symbol.toStringTag]() {
    return "AxiosHeaders";
  }
  static from(t) {
    return t instanceof this ? t : new this(t);
  }
  static concat(t, ...n) {
    const o = new this(t);
    return n.forEach((i) => o.set(i)), o;
  }
  static accessor(t) {
    const o = (this[cb] = this[cb] = {
      accessors: {}
    }).accessors, i = this.prototype;
    function s(a) {
      const l = Ps(a);
      o[l] || (fV(i, a), o[l] = !0);
    }
    return ge.isArray(t) ? t.forEach(s) : s(t), this;
  }
}
zn.accessor(["Content-Type", "Content-Length", "Accept", "Accept-Encoding", "User-Agent", "Authorization"]);
ge.reduceDescriptors(zn.prototype, ({ value: e }, t) => {
  let n = t[0].toUpperCase() + t.slice(1);
  return {
    get: () => e,
    set(o) {
      this[n] = o;
    }
  };
});
ge.freezeMethods(zn);
function yd(e, t) {
  const n = this || Ha, o = t || n, i = zn.from(o.headers);
  let s = o.data;
  return ge.forEach(e, function(l) {
    s = l.call(n, s, i.normalize(), t ? t.status : void 0);
  }), i.normalize(), s;
}
function ox(e) {
  return !!(e && e.__CANCEL__);
}
function ds(e, t, n) {
  ut.call(this, e ?? "canceled", ut.ERR_CANCELED, t, n), this.name = "CanceledError";
}
ge.inherits(ds, ut, {
  __CANCEL__: !0
});
function rx(e, t, n) {
  const o = n.config.validateStatus;
  !n.status || !o || o(n.status) ? e(n) : t(new ut(
    "Request failed with status code " + n.status,
    [ut.ERR_BAD_REQUEST, ut.ERR_BAD_RESPONSE][Math.floor(n.status / 100) - 4],
    n.config,
    n.request,
    n
  ));
}
function mV(e) {
  const t = /^([-+\w]{1,25})(:?\/\/|:)/.exec(e);
  return t && t[1] || "";
}
function gV(e, t) {
  e = e || 10;
  const n = new Array(e), o = new Array(e);
  let i = 0, s = 0, a;
  return t = t !== void 0 ? t : 1e3, function(c) {
    const u = Date.now(), d = o[s];
    a || (a = u), n[i] = c, o[i] = u;
    let p = s, m = 0;
    for (; p !== i; )
      m += n[p++], p = p % e;
    if (i = (i + 1) % e, i === s && (s = (s + 1) % e), u - a < t)
      return;
    const g = d && u - d;
    return g ? Math.round(m * 1e3 / g) : void 0;
  };
}
function hV(e, t) {
  let n = 0, o = 1e3 / t, i, s;
  const a = (u, d = Date.now()) => {
    n = d, i = null, s && (clearTimeout(s), s = null), e.apply(null, u);
  };
  return [(...u) => {
    const d = Date.now(), p = d - n;
    p >= o ? a(u, d) : (i = u, s || (s = setTimeout(() => {
      s = null, a(i);
    }, o - p)));
  }, () => i && a(i)];
}
const cc = (e, t, n = 3) => {
  let o = 0;
  const i = gV(50, 250);
  return hV((s) => {
    const a = s.loaded, l = s.lengthComputable ? s.total : void 0, c = a - o, u = i(c), d = a <= l;
    o = a;
    const p = {
      loaded: a,
      total: l,
      progress: l ? a / l : void 0,
      bytes: c,
      rate: u || void 0,
      estimated: u && l && d ? (l - a) / u : void 0,
      event: s,
      lengthComputable: l != null,
      [t ? "download" : "upload"]: !0
    };
    e(p);
  }, n);
}, ub = (e, t) => {
  const n = e != null;
  return [(o) => t[0]({
    lengthComputable: n,
    total: e,
    loaded: o
  }), t[1]];
}, db = (e) => (...t) => ge.asap(() => e(...t)), bV = Bn.hasStandardBrowserEnv ? (
  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
  function() {
    const t = Bn.navigator && /(msie|trident)/i.test(Bn.navigator.userAgent), n = document.createElement("a");
    let o;
    function i(s) {
      let a = s;
      return t && (n.setAttribute("href", a), a = n.href), n.setAttribute("href", a), {
        href: n.href,
        protocol: n.protocol ? n.protocol.replace(/:$/, "") : "",
        host: n.host,
        search: n.search ? n.search.replace(/^\?/, "") : "",
        hash: n.hash ? n.hash.replace(/^#/, "") : "",
        hostname: n.hostname,
        port: n.port,
        pathname: n.pathname.charAt(0) === "/" ? n.pathname : "/" + n.pathname
      };
    }
    return o = i(window.location.href), function(a) {
      const l = ge.isString(a) ? i(a) : a;
      return l.protocol === o.protocol && l.host === o.host;
    };
  }()
) : (
  // Non standard browser envs (web workers, react-native) lack needed support.
  /* @__PURE__ */ function() {
    return function() {
      return !0;
    };
  }()
), vV = Bn.hasStandardBrowserEnv ? (
  // Standard browser envs support document.cookie
  {
    write(e, t, n, o, i, s) {
      const a = [e + "=" + encodeURIComponent(t)];
      ge.isNumber(n) && a.push("expires=" + new Date(n).toGMTString()), ge.isString(o) && a.push("path=" + o), ge.isString(i) && a.push("domain=" + i), s === !0 && a.push("secure"), document.cookie = a.join("; ");
    },
    read(e) {
      const t = document.cookie.match(new RegExp("(^|;\\s*)(" + e + ")=([^;]*)"));
      return t ? decodeURIComponent(t[3]) : null;
    },
    remove(e) {
      this.write(e, "", Date.now() - 864e5);
    }
  }
) : (
  // Non-standard browser env (web workers, react-native) lack needed support.
  {
    write() {
    },
    read() {
      return null;
    },
    remove() {
    }
  }
);
function yV(e) {
  return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(e);
}
function xV(e, t) {
  return t ? e.replace(/\/?\/$/, "") + "/" + t.replace(/^\/+/, "") : e;
}
function ix(e, t) {
  return e && !yV(t) ? xV(e, t) : t;
}
const pb = (e) => e instanceof zn ? { ...e } : e;
function ai(e, t) {
  t = t || {};
  const n = {};
  function o(u, d, p) {
    return ge.isPlainObject(u) && ge.isPlainObject(d) ? ge.merge.call({ caseless: p }, u, d) : ge.isPlainObject(d) ? ge.merge({}, d) : ge.isArray(d) ? d.slice() : d;
  }
  function i(u, d, p) {
    if (ge.isUndefined(d)) {
      if (!ge.isUndefined(u))
        return o(void 0, u, p);
    } else return o(u, d, p);
  }
  function s(u, d) {
    if (!ge.isUndefined(d))
      return o(void 0, d);
  }
  function a(u, d) {
    if (ge.isUndefined(d)) {
      if (!ge.isUndefined(u))
        return o(void 0, u);
    } else return o(void 0, d);
  }
  function l(u, d, p) {
    if (p in t)
      return o(u, d);
    if (p in e)
      return o(void 0, u);
  }
  const c = {
    url: s,
    method: s,
    data: s,
    baseURL: a,
    transformRequest: a,
    transformResponse: a,
    paramsSerializer: a,
    timeout: a,
    timeoutMessage: a,
    withCredentials: a,
    withXSRFToken: a,
    adapter: a,
    responseType: a,
    xsrfCookieName: a,
    xsrfHeaderName: a,
    onUploadProgress: a,
    onDownloadProgress: a,
    decompress: a,
    maxContentLength: a,
    maxBodyLength: a,
    beforeRedirect: a,
    transport: a,
    httpAgent: a,
    httpsAgent: a,
    cancelToken: a,
    socketPath: a,
    responseEncoding: a,
    validateStatus: l,
    headers: (u, d) => i(pb(u), pb(d), !0)
  };
  return ge.forEach(Object.keys(Object.assign({}, e, t)), function(d) {
    const p = c[d] || i, m = p(e[d], t[d], d);
    ge.isUndefined(m) && p !== l || (n[d] = m);
  }), n;
}
const sx = (e) => {
  const t = ai({}, e);
  let { data: n, withXSRFToken: o, xsrfHeaderName: i, xsrfCookieName: s, headers: a, auth: l } = t;
  t.headers = a = zn.from(a), t.url = ex(ix(t.baseURL, t.url), e.params, e.paramsSerializer), l && a.set(
    "Authorization",
    "Basic " + btoa((l.username || "") + ":" + (l.password ? unescape(encodeURIComponent(l.password)) : ""))
  );
  let c;
  if (ge.isFormData(n)) {
    if (Bn.hasStandardBrowserEnv || Bn.hasStandardBrowserWebWorkerEnv)
      a.setContentType(void 0);
    else if ((c = a.getContentType()) !== !1) {
      const [u, ...d] = c ? c.split(";").map((p) => p.trim()).filter(Boolean) : [];
      a.setContentType([u || "multipart/form-data", ...d].join("; "));
    }
  }
  if (Bn.hasStandardBrowserEnv && (o && ge.isFunction(o) && (o = o(t)), o || o !== !1 && bV(t.url))) {
    const u = i && s && vV.read(s);
    u && a.set(i, u);
  }
  return t;
}, CV = typeof XMLHttpRequest < "u", SV = CV && function(e) {
  return new Promise(function(n, o) {
    const i = sx(e);
    let s = i.data;
    const a = zn.from(i.headers).normalize();
    let { responseType: l, onUploadProgress: c, onDownloadProgress: u } = i, d, p, m, g, h;
    function v() {
      g && g(), h && h(), i.cancelToken && i.cancelToken.unsubscribe(d), i.signal && i.signal.removeEventListener("abort", d);
    }
    let b = new XMLHttpRequest();
    b.open(i.method.toUpperCase(), i.url, !0), b.timeout = i.timeout;
    function y() {
      if (!b)
        return;
      const x = zn.from(
        "getAllResponseHeaders" in b && b.getAllResponseHeaders()
      ), w = {
        data: !l || l === "text" || l === "json" ? b.responseText : b.response,
        status: b.status,
        statusText: b.statusText,
        headers: x,
        config: e,
        request: b
      };
      rx(function(E) {
        n(E), v();
      }, function(E) {
        o(E), v();
      }, w), b = null;
    }
    "onloadend" in b ? b.onloadend = y : b.onreadystatechange = function() {
      !b || b.readyState !== 4 || b.status === 0 && !(b.responseURL && b.responseURL.indexOf("file:") === 0) || setTimeout(y);
    }, b.onabort = function() {
      b && (o(new ut("Request aborted", ut.ECONNABORTED, e, b)), b = null);
    }, b.onerror = function() {
      o(new ut("Network Error", ut.ERR_NETWORK, e, b)), b = null;
    }, b.ontimeout = function() {
      let T = i.timeout ? "timeout of " + i.timeout + "ms exceeded" : "timeout exceeded";
      const w = i.transitional || tx;
      i.timeoutErrorMessage && (T = i.timeoutErrorMessage), o(new ut(
        T,
        w.clarifyTimeoutError ? ut.ETIMEDOUT : ut.ECONNABORTED,
        e,
        b
      )), b = null;
    }, s === void 0 && a.setContentType(null), "setRequestHeader" in b && ge.forEach(a.toJSON(), function(T, w) {
      b.setRequestHeader(w, T);
    }), ge.isUndefined(i.withCredentials) || (b.withCredentials = !!i.withCredentials), l && l !== "json" && (b.responseType = i.responseType), u && ([m, h] = cc(u, !0), b.addEventListener("progress", m)), c && b.upload && ([p, g] = cc(c), b.upload.addEventListener("progress", p), b.upload.addEventListener("loadend", g)), (i.cancelToken || i.signal) && (d = (x) => {
      b && (o(!x || x.type ? new ds(null, e, b) : x), b.abort(), b = null);
    }, i.cancelToken && i.cancelToken.subscribe(d), i.signal && (i.signal.aborted ? d() : i.signal.addEventListener("abort", d)));
    const C = mV(i.url);
    if (C && Bn.protocols.indexOf(C) === -1) {
      o(new ut("Unsupported protocol " + C + ":", ut.ERR_BAD_REQUEST, e));
      return;
    }
    b.send(s || null);
  });
}, wV = (e, t) => {
  const { length: n } = e = e ? e.filter(Boolean) : [];
  if (t || n) {
    let o = new AbortController(), i;
    const s = function(u) {
      if (!i) {
        i = !0, l();
        const d = u instanceof Error ? u : this.reason;
        o.abort(d instanceof ut ? d : new ds(d instanceof Error ? d.message : d));
      }
    };
    let a = t && setTimeout(() => {
      a = null, s(new ut(`timeout ${t} of ms exceeded`, ut.ETIMEDOUT));
    }, t);
    const l = () => {
      e && (a && clearTimeout(a), a = null, e.forEach((u) => {
        u.unsubscribe ? u.unsubscribe(s) : u.removeEventListener("abort", s);
      }), e = null);
    };
    e.forEach((u) => u.addEventListener("abort", s));
    const { signal: c } = o;
    return c.unsubscribe = () => ge.asap(l), c;
  }
}, TV = function* (e, t) {
  let n = e.byteLength;
  if (n < t) {
    yield e;
    return;
  }
  let o = 0, i;
  for (; o < n; )
    i = o + t, yield e.slice(o, i), o = i;
}, IV = async function* (e, t) {
  for await (const n of RV(e))
    yield* TV(n, t);
}, RV = async function* (e) {
  if (e[Symbol.asyncIterator]) {
    yield* e;
    return;
  }
  const t = e.getReader();
  try {
    for (; ; ) {
      const { done: n, value: o } = await t.read();
      if (n)
        break;
      yield o;
    }
  } finally {
    await t.cancel();
  }
}, fb = (e, t, n, o) => {
  const i = IV(e, t);
  let s = 0, a, l = (c) => {
    a || (a = !0, o && o(c));
  };
  return new ReadableStream({
    async pull(c) {
      try {
        const { done: u, value: d } = await i.next();
        if (u) {
          l(), c.close();
          return;
        }
        let p = d.byteLength;
        if (n) {
          let m = s += p;
          n(m);
        }
        c.enqueue(new Uint8Array(d));
      } catch (u) {
        throw l(u), u;
      }
    },
    cancel(c) {
      return l(c), i.return();
    }
  }, {
    highWaterMark: 2
  });
}, vu = typeof fetch == "function" && typeof Request == "function" && typeof Response == "function", ax = vu && typeof ReadableStream == "function", OV = vu && (typeof TextEncoder == "function" ? /* @__PURE__ */ ((e) => (t) => e.encode(t))(new TextEncoder()) : async (e) => new Uint8Array(await new Response(e).arrayBuffer())), lx = (e, ...t) => {
  try {
    return !!e(...t);
  } catch {
    return !1;
  }
}, EV = ax && lx(() => {
  let e = !1;
  const t = new Request(Bn.origin, {
    body: new ReadableStream(),
    method: "POST",
    get duplex() {
      return e = !0, "half";
    }
  }).headers.has("Content-Type");
  return e && !t;
}), mb = 64 * 1024, Op = ax && lx(() => ge.isReadableStream(new Response("").body)), uc = {
  stream: Op && ((e) => e.body)
};
vu && ((e) => {
  ["text", "arrayBuffer", "blob", "formData", "stream"].forEach((t) => {
    !uc[t] && (uc[t] = ge.isFunction(e[t]) ? (n) => n[t]() : (n, o) => {
      throw new ut(`Response type '${t}' is not supported`, ut.ERR_NOT_SUPPORT, o);
    });
  });
})(new Response());
const PV = async (e) => {
  if (e == null)
    return 0;
  if (ge.isBlob(e))
    return e.size;
  if (ge.isSpecCompliantForm(e))
    return (await new Request(Bn.origin, {
      method: "POST",
      body: e
    }).arrayBuffer()).byteLength;
  if (ge.isArrayBufferView(e) || ge.isArrayBuffer(e))
    return e.byteLength;
  if (ge.isURLSearchParams(e) && (e = e + ""), ge.isString(e))
    return (await OV(e)).byteLength;
}, AV = async (e, t) => {
  const n = ge.toFiniteNumber(e.getContentLength());
  return n ?? PV(t);
}, DV = vu && (async (e) => {
  let {
    url: t,
    method: n,
    data: o,
    signal: i,
    cancelToken: s,
    timeout: a,
    onDownloadProgress: l,
    onUploadProgress: c,
    responseType: u,
    headers: d,
    withCredentials: p = "same-origin",
    fetchOptions: m
  } = sx(e);
  u = u ? (u + "").toLowerCase() : "text";
  let g = wV([i, s && s.toAbortSignal()], a), h;
  const v = g && g.unsubscribe && (() => {
    g.unsubscribe();
  });
  let b;
  try {
    if (c && EV && n !== "get" && n !== "head" && (b = await AV(d, o)) !== 0) {
      let w = new Request(t, {
        method: "POST",
        body: o,
        duplex: "half"
      }), R;
      if (ge.isFormData(o) && (R = w.headers.get("content-type")) && d.setContentType(R), w.body) {
        const [E, O] = ub(
          b,
          cc(db(c))
        );
        o = fb(w.body, mb, E, O);
      }
    }
    ge.isString(p) || (p = p ? "include" : "omit");
    const y = "credentials" in Request.prototype;
    h = new Request(t, {
      ...m,
      signal: g,
      method: n.toUpperCase(),
      headers: d.normalize().toJSON(),
      body: o,
      duplex: "half",
      credentials: y ? p : void 0
    });
    let C = await fetch(h);
    const x = Op && (u === "stream" || u === "response");
    if (Op && (l || x && v)) {
      const w = {};
      ["status", "statusText", "headers"].forEach((I) => {
        w[I] = C[I];
      });
      const R = ge.toFiniteNumber(C.headers.get("content-length")), [E, O] = l && ub(
        R,
        cc(db(l), !0)
      ) || [];
      C = new Response(
        fb(C.body, mb, E, () => {
          O && O(), v && v();
        }),
        w
      );
    }
    u = u || "text";
    let T = await uc[ge.findKey(uc, u) || "text"](C, e);
    return !x && v && v(), await new Promise((w, R) => {
      rx(w, R, {
        data: T,
        headers: zn.from(C.headers),
        status: C.status,
        statusText: C.statusText,
        config: e,
        request: h
      });
    });
  } catch (y) {
    throw v && v(), y && y.name === "TypeError" && /fetch/i.test(y.message) ? Object.assign(
      new ut("Network Error", ut.ERR_NETWORK, e, h),
      {
        cause: y.cause || y
      }
    ) : ut.from(y, y && y.code, e, h);
  }
}), Ep = {
  http: U2,
  xhr: SV,
  fetch: DV
};
ge.forEach(Ep, (e, t) => {
  if (e) {
    try {
      Object.defineProperty(e, "name", { value: t });
    } catch {
    }
    Object.defineProperty(e, "adapterName", { value: t });
  }
});
const gb = (e) => `- ${e}`, MV = (e) => ge.isFunction(e) || e === null || e === !1, cx = {
  getAdapter: (e) => {
    e = ge.isArray(e) ? e : [e];
    const { length: t } = e;
    let n, o;
    const i = {};
    for (let s = 0; s < t; s++) {
      n = e[s];
      let a;
      if (o = n, !MV(n) && (o = Ep[(a = String(n)).toLowerCase()], o === void 0))
        throw new ut(`Unknown adapter '${a}'`);
      if (o)
        break;
      i[a || "#" + s] = o;
    }
    if (!o) {
      const s = Object.entries(i).map(
        ([l, c]) => `adapter ${l} ` + (c === !1 ? "is not supported by the environment" : "is not available in the build")
      );
      let a = t ? s.length > 1 ? `since :
` + s.map(gb).join(`
`) : " " + gb(s[0]) : "as no adapter specified";
      throw new ut(
        "There is no suitable adapter to dispatch the request " + a,
        "ERR_NOT_SUPPORT"
      );
    }
    return o;
  },
  adapters: Ep
};
function xd(e) {
  if (e.cancelToken && e.cancelToken.throwIfRequested(), e.signal && e.signal.aborted)
    throw new ds(null, e);
}
function hb(e) {
  return xd(e), e.headers = zn.from(e.headers), e.data = yd.call(
    e,
    e.transformRequest
  ), ["post", "put", "patch"].indexOf(e.method) !== -1 && e.headers.setContentType("application/x-www-form-urlencoded", !1), cx.getAdapter(e.adapter || Ha.adapter)(e).then(function(o) {
    return xd(e), o.data = yd.call(
      e,
      e.transformResponse,
      o
    ), o.headers = zn.from(o.headers), o;
  }, function(o) {
    return ox(o) || (xd(e), o && o.response && (o.response.data = yd.call(
      e,
      e.transformResponse,
      o.response
    ), o.response.headers = zn.from(o.response.headers))), Promise.reject(o);
  });
}
const ux = "1.7.7", Yf = {};
["object", "boolean", "number", "function", "string", "symbol"].forEach((e, t) => {
  Yf[e] = function(o) {
    return typeof o === e || "a" + (t < 1 ? "n " : " ") + e;
  };
});
const bb = {};
Yf.transitional = function(t, n, o) {
  function i(s, a) {
    return "[Axios v" + ux + "] Transitional option '" + s + "'" + a + (o ? ". " + o : "");
  }
  return (s, a, l) => {
    if (t === !1)
      throw new ut(
        i(a, " has been removed" + (n ? " in " + n : "")),
        ut.ERR_DEPRECATED
      );
    return n && !bb[a] && (bb[a] = !0, console.warn(
      i(
        a,
        " has been deprecated since v" + n + " and will be removed in the near future"
      )
    )), t ? t(s, a, l) : !0;
  };
};
function jV(e, t, n) {
  if (typeof e != "object")
    throw new ut("options must be an object", ut.ERR_BAD_OPTION_VALUE);
  const o = Object.keys(e);
  let i = o.length;
  for (; i-- > 0; ) {
    const s = o[i], a = t[s];
    if (a) {
      const l = e[s], c = l === void 0 || a(l, s, e);
      if (c !== !0)
        throw new ut("option " + s + " must be " + c, ut.ERR_BAD_OPTION_VALUE);
      continue;
    }
    if (n !== !0)
      throw new ut("Unknown option " + s, ut.ERR_BAD_OPTION);
  }
}
const Pp = {
  assertOptions: jV,
  validators: Yf
}, Sr = Pp.validators;
class ti {
  constructor(t) {
    this.defaults = t, this.interceptors = {
      request: new lb(),
      response: new lb()
    };
  }
  /**
   * Dispatch a request
   *
   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)
   * @param {?Object} config
   *
   * @returns {Promise} The Promise to be fulfilled
   */
  async request(t, n) {
    try {
      return await this._request(t, n);
    } catch (o) {
      if (o instanceof Error) {
        let i;
        Error.captureStackTrace ? Error.captureStackTrace(i = {}) : i = new Error();
        const s = i.stack ? i.stack.replace(/^.+\n/, "") : "";
        try {
          o.stack ? s && !String(o.stack).endsWith(s.replace(/^.+\n.+\n/, "")) && (o.stack += `
` + s) : o.stack = s;
        } catch {
        }
      }
      throw o;
    }
  }
  _request(t, n) {
    typeof t == "string" ? (n = n || {}, n.url = t) : n = t || {}, n = ai(this.defaults, n);
    const { transitional: o, paramsSerializer: i, headers: s } = n;
    o !== void 0 && Pp.assertOptions(o, {
      silentJSONParsing: Sr.transitional(Sr.boolean),
      forcedJSONParsing: Sr.transitional(Sr.boolean),
      clarifyTimeoutError: Sr.transitional(Sr.boolean)
    }, !1), i != null && (ge.isFunction(i) ? n.paramsSerializer = {
      serialize: i
    } : Pp.assertOptions(i, {
      encode: Sr.function,
      serialize: Sr.function
    }, !0)), n.method = (n.method || this.defaults.method || "get").toLowerCase();
    let a = s && ge.merge(
      s.common,
      s[n.method]
    );
    s && ge.forEach(
      ["delete", "get", "head", "post", "put", "patch", "common"],
      (h) => {
        delete s[h];
      }
    ), n.headers = zn.concat(a, s);
    const l = [];
    let c = !0;
    this.interceptors.request.forEach(function(v) {
      typeof v.runWhen == "function" && v.runWhen(n) === !1 || (c = c && v.synchronous, l.unshift(v.fulfilled, v.rejected));
    });
    const u = [];
    this.interceptors.response.forEach(function(v) {
      u.push(v.fulfilled, v.rejected);
    });
    let d, p = 0, m;
    if (!c) {
      const h = [hb.bind(this), void 0];
      for (h.unshift.apply(h, l), h.push.apply(h, u), m = h.length, d = Promise.resolve(n); p < m; )
        d = d.then(h[p++], h[p++]);
      return d;
    }
    m = l.length;
    let g = n;
    for (p = 0; p < m; ) {
      const h = l[p++], v = l[p++];
      try {
        g = h(g);
      } catch (b) {
        v.call(this, b);
        break;
      }
    }
    try {
      d = hb.call(this, g);
    } catch (h) {
      return Promise.reject(h);
    }
    for (p = 0, m = u.length; p < m; )
      d = d.then(u[p++], u[p++]);
    return d;
  }
  getUri(t) {
    t = ai(this.defaults, t);
    const n = ix(t.baseURL, t.url);
    return ex(n, t.params, t.paramsSerializer);
  }
}
ge.forEach(["delete", "get", "head", "options"], function(t) {
  ti.prototype[t] = function(n, o) {
    return this.request(ai(o || {}, {
      method: t,
      url: n,
      data: (o || {}).data
    }));
  };
});
ge.forEach(["post", "put", "patch"], function(t) {
  function n(o) {
    return function(s, a, l) {
      return this.request(ai(l || {}, {
        method: t,
        headers: o ? {
          "Content-Type": "multipart/form-data"
        } : {},
        url: s,
        data: a
      }));
    };
  }
  ti.prototype[t] = n(), ti.prototype[t + "Form"] = n(!0);
});
class Zf {
  constructor(t) {
    if (typeof t != "function")
      throw new TypeError("executor must be a function.");
    let n;
    this.promise = new Promise(function(s) {
      n = s;
    });
    const o = this;
    this.promise.then((i) => {
      if (!o._listeners) return;
      let s = o._listeners.length;
      for (; s-- > 0; )
        o._listeners[s](i);
      o._listeners = null;
    }), this.promise.then = (i) => {
      let s;
      const a = new Promise((l) => {
        o.subscribe(l), s = l;
      }).then(i);
      return a.cancel = function() {
        o.unsubscribe(s);
      }, a;
    }, t(function(s, a, l) {
      o.reason || (o.reason = new ds(s, a, l), n(o.reason));
    });
  }
  /**
   * Throws a `CanceledError` if cancellation has been requested.
   */
  throwIfRequested() {
    if (this.reason)
      throw this.reason;
  }
  /**
   * Subscribe to the cancel signal
   */
  subscribe(t) {
    if (this.reason) {
      t(this.reason);
      return;
    }
    this._listeners ? this._listeners.push(t) : this._listeners = [t];
  }
  /**
   * Unsubscribe from the cancel signal
   */
  unsubscribe(t) {
    if (!this._listeners)
      return;
    const n = this._listeners.indexOf(t);
    n !== -1 && this._listeners.splice(n, 1);
  }
  toAbortSignal() {
    const t = new AbortController(), n = (o) => {
      t.abort(o);
    };
    return this.subscribe(n), t.signal.unsubscribe = () => this.unsubscribe(n), t.signal;
  }
  /**
   * Returns an object that contains a new `CancelToken` and a function that, when called,
   * cancels the `CancelToken`.
   */
  static source() {
    let t;
    return {
      token: new Zf(function(i) {
        t = i;
      }),
      cancel: t
    };
  }
}
function kV(e) {
  return function(n) {
    return e.apply(null, n);
  };
}
function FV(e) {
  return ge.isObject(e) && e.isAxiosError === !0;
}
const Ap = {
  Continue: 100,
  SwitchingProtocols: 101,
  Processing: 102,
  EarlyHints: 103,
  Ok: 200,
  Created: 201,
  Accepted: 202,
  NonAuthoritativeInformation: 203,
  NoContent: 204,
  ResetContent: 205,
  PartialContent: 206,
  MultiStatus: 207,
  AlreadyReported: 208,
  ImUsed: 226,
  MultipleChoices: 300,
  MovedPermanently: 301,
  Found: 302,
  SeeOther: 303,
  NotModified: 304,
  UseProxy: 305,
  Unused: 306,
  TemporaryRedirect: 307,
  PermanentRedirect: 308,
  BadRequest: 400,
  Unauthorized: 401,
  PaymentRequired: 402,
  Forbidden: 403,
  NotFound: 404,
  MethodNotAllowed: 405,
  NotAcceptable: 406,
  ProxyAuthenticationRequired: 407,
  RequestTimeout: 408,
  Conflict: 409,
  Gone: 410,
  LengthRequired: 411,
  PreconditionFailed: 412,
  PayloadTooLarge: 413,
  UriTooLong: 414,
  UnsupportedMediaType: 415,
  RangeNotSatisfiable: 416,
  ExpectationFailed: 417,
  ImATeapot: 418,
  MisdirectedRequest: 421,
  UnprocessableEntity: 422,
  Locked: 423,
  FailedDependency: 424,
  TooEarly: 425,
  UpgradeRequired: 426,
  PreconditionRequired: 428,
  TooManyRequests: 429,
  RequestHeaderFieldsTooLarge: 431,
  UnavailableForLegalReasons: 451,
  InternalServerError: 500,
  NotImplemented: 501,
  BadGateway: 502,
  ServiceUnavailable: 503,
  GatewayTimeout: 504,
  HttpVersionNotSupported: 505,
  VariantAlsoNegotiates: 506,
  InsufficientStorage: 507,
  LoopDetected: 508,
  NotExtended: 510,
  NetworkAuthenticationRequired: 511
};
Object.entries(Ap).forEach(([e, t]) => {
  Ap[t] = e;
});
function dx(e) {
  const t = new ti(e), n = z0(ti.prototype.request, t);
  return ge.extend(n, ti.prototype, t, { allOwnKeys: !0 }), ge.extend(n, t, null, { allOwnKeys: !0 }), n.create = function(i) {
    return dx(ai(e, i));
  }, n;
}
const _t = dx(Ha);
_t.Axios = ti;
_t.CanceledError = ds;
_t.CancelToken = Zf;
_t.isCancel = ox;
_t.VERSION = ux;
_t.toFormData = bu;
_t.AxiosError = ut;
_t.Cancel = _t.CanceledError;
_t.all = function(t) {
  return Promise.all(t);
};
_t.spread = kV;
_t.isAxiosError = FV;
_t.mergeConfig = ai;
_t.AxiosHeaders = zn;
_t.formToJSON = (e) => nx(ge.isHTMLForm(e) ? new FormData(e) : e);
_t.getAdapter = cx.getAdapter;
_t.HttpStatusCode = Ap;
_t.default = _t;
const px = async (e, t) => {
  try {
    return (await _t.get(`${t}/invoice/summary`, { params: e })).data;
  } catch (n) {
    throw console.error("Error fetching invoice summary:", n), n;
  }
}, qf = async (e, t) => {
  try {
    return console.log(`${t}/invoice`, { params: e }), (await _t.get(`${t}/invoice`, { params: e })).data;
  } catch (n) {
    throw console.error("Error fetching all invoices list:", n), n;
  }
}, NV = async (e, t) => {
  try {
    return (await _t.post(`${t}/invoice`, e)).data;
  } catch (n) {
    throw console.error("Error saving invoice:", n), n;
  }
}, VV = async (e, t) => {
  try {
    return (await _t.patch(`${t}/invoice`, e)).data;
  } catch (n) {
    throw console.error("Error saving invoice:", n), n;
  }
}, $V = async (e, t) => {
  try {
    return (await _t.post(`${t}/invoice/send-mail`, e, {
      headers: {
        "Content-Type": "multipart/form-data"
        // Important for file uploads
      }
    })).data;
  } catch (n) {
    throw console.error("Error sending email:", n), n;
  }
}, fx = async (e, t) => await _t.get(`${t}/invoice/${e}`), mx = async (e, t) => {
  try {
    return (await _t.post(`${t}/paymentterm`, e)).data;
  } catch (n) {
    throw console.error("Error adding payment term:", n), n;
  }
}, gx = async (e) => {
  try {
    return (await _t.get(`${e}/paymentterm`)).data;
  } catch (t) {
    throw console.error("Error fetching payment terms:", t), t;
  }
}, LV = async (e, t) => {
  try {
    return await _t.get(`${t}/invoice/download/${e}`, {
      responseType: "blob"
      // Important for downloading files
    });
  } catch (n) {
    throw console.error("Error downloading invoice:", n), n;
  }
}, _V = async (e, t) => {
  try {
    return (await _t.get(`${t}/invoice/html/${e}`)).data;
  } catch (n) {
    throw console.error("Error fetching HTML content:", n), n;
  }
}, hx = async (e, t) => {
  try {
    return (await _t.delete(`${t}/invoice/${e}`)).data;
  } catch (n) {
    throw console.error("Error deleting invoice:", n), n;
  }
};
/**
   * table-core
   *
   * Copyright (c) TanStack
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   */
function Rr(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function io(e, t) {
  return (n) => {
    t.setState((o) => ({
      ...o,
      [e]: Rr(n, o[e])
    }));
  };
}
function yu(e) {
  return e instanceof Function;
}
function BV(e) {
  return Array.isArray(e) && e.every((t) => typeof t == "number");
}
function bx(e, t) {
  const n = [], o = (i) => {
    i.forEach((s) => {
      n.push(s);
      const a = t(s);
      a != null && a.length && o(a);
    });
  };
  return o(e), n;
}
function Ke(e, t, n) {
  let o = [], i;
  return (s) => {
    let a;
    n.key && n.debug && (a = Date.now());
    const l = e(s);
    if (!(l.length !== o.length || l.some((d, p) => o[p] !== d)))
      return i;
    o = l;
    let u;
    if (n.key && n.debug && (u = Date.now()), i = t(...l), n == null || n.onChange == null || n.onChange(i), n.key && n.debug && n != null && n.debug()) {
      const d = Math.round((Date.now() - a) * 100) / 100, p = Math.round((Date.now() - u) * 100) / 100, m = p / 16, g = (h, v) => {
        for (h = String(h); h.length < v; )
          h = " " + h;
        return h;
      };
      console.info(`%c⏱ ${g(p, 5)} /${g(d, 5)} ms`, `
            font-size: .6rem;
            font-weight: bold;
            color: hsl(${Math.max(0, Math.min(120 - 120 * m, 120))}deg 100% 31%);`, n == null ? void 0 : n.key);
    }
    return i;
  };
}
function Qe(e, t, n, o) {
  return {
    debug: () => {
      var i;
      return (i = e == null ? void 0 : e.debugAll) != null ? i : e[t];
    },
    key: process.env.NODE_ENV === "development" && n,
    onChange: o
  };
}
function zV(e, t, n, o) {
  const i = () => {
    var a;
    return (a = s.getValue()) != null ? a : e.options.renderFallbackValue;
  }, s = {
    id: `${t.id}_${n.id}`,
    row: t,
    column: n,
    getValue: () => t.getValue(o),
    renderValue: i,
    getContext: Ke(() => [e, n, t, s], (a, l, c, u) => ({
      table: a,
      column: l,
      row: c,
      cell: u,
      getValue: u.getValue,
      renderValue: u.renderValue
    }), Qe(e.options, "debugCells", "cell.getContext"))
  };
  return e._features.forEach((a) => {
    a.createCell == null || a.createCell(s, n, t, e);
  }, {}), s;
}
function WV(e, t, n, o) {
  var i, s;
  const l = {
    ...e._getDefaultColumnDef(),
    ...t
  }, c = l.accessorKey;
  let u = (i = (s = l.id) != null ? s : c ? typeof String.prototype.replaceAll == "function" ? c.replaceAll(".", "_") : c.replace(/\./g, "_") : void 0) != null ? i : typeof l.header == "string" ? l.header : void 0, d;
  if (l.accessorFn ? d = l.accessorFn : c && (c.includes(".") ? d = (m) => {
    let g = m;
    for (const v of c.split(".")) {
      var h;
      g = (h = g) == null ? void 0 : h[v], process.env.NODE_ENV !== "production" && g === void 0 && console.warn(`"${v}" in deeply nested key "${c}" returned undefined.`);
    }
    return g;
  } : d = (m) => m[l.accessorKey]), !u)
    throw process.env.NODE_ENV !== "production" ? new Error(l.accessorFn ? "Columns require an id when using an accessorFn" : "Columns require an id when using a non-string header") : new Error();
  let p = {
    id: `${String(u)}`,
    accessorFn: d,
    parent: o,
    depth: n,
    columnDef: l,
    columns: [],
    getFlatColumns: Ke(() => [!0], () => {
      var m;
      return [p, ...(m = p.columns) == null ? void 0 : m.flatMap((g) => g.getFlatColumns())];
    }, Qe(e.options, "debugColumns", "column.getFlatColumns")),
    getLeafColumns: Ke(() => [e._getOrderColumnsFn()], (m) => {
      var g;
      if ((g = p.columns) != null && g.length) {
        let h = p.columns.flatMap((v) => v.getLeafColumns());
        return m(h);
      }
      return [p];
    }, Qe(e.options, "debugColumns", "column.getLeafColumns"))
  };
  for (const m of e._features)
    m.createColumn == null || m.createColumn(p, e);
  return p;
}
const On = "debugHeaders";
function vb(e, t, n) {
  var o;
  let s = {
    id: (o = n.id) != null ? o : t.id,
    column: t,
    index: n.index,
    isPlaceholder: !!n.isPlaceholder,
    placeholderId: n.placeholderId,
    depth: n.depth,
    subHeaders: [],
    colSpan: 0,
    rowSpan: 0,
    headerGroup: null,
    getLeafHeaders: () => {
      const a = [], l = (c) => {
        c.subHeaders && c.subHeaders.length && c.subHeaders.map(l), a.push(c);
      };
      return l(s), a;
    },
    getContext: () => ({
      table: e,
      header: s,
      column: t
    })
  };
  return e._features.forEach((a) => {
    a.createHeader == null || a.createHeader(s, e);
  }), s;
}
const HV = {
  createTable: (e) => {
    e.getHeaderGroups = Ke(() => [e.getAllColumns(), e.getVisibleLeafColumns(), e.getState().columnPinning.left, e.getState().columnPinning.right], (t, n, o, i) => {
      var s, a;
      const l = (s = o == null ? void 0 : o.map((p) => n.find((m) => m.id === p)).filter(Boolean)) != null ? s : [], c = (a = i == null ? void 0 : i.map((p) => n.find((m) => m.id === p)).filter(Boolean)) != null ? a : [], u = n.filter((p) => !(o != null && o.includes(p.id)) && !(i != null && i.includes(p.id)));
      return gl(t, [...l, ...u, ...c], e);
    }, Qe(e.options, On, "getHeaderGroups")), e.getCenterHeaderGroups = Ke(() => [e.getAllColumns(), e.getVisibleLeafColumns(), e.getState().columnPinning.left, e.getState().columnPinning.right], (t, n, o, i) => (n = n.filter((s) => !(o != null && o.includes(s.id)) && !(i != null && i.includes(s.id))), gl(t, n, e, "center")), Qe(e.options, On, "getCenterHeaderGroups")), e.getLeftHeaderGroups = Ke(() => [e.getAllColumns(), e.getVisibleLeafColumns(), e.getState().columnPinning.left], (t, n, o) => {
      var i;
      const s = (i = o == null ? void 0 : o.map((a) => n.find((l) => l.id === a)).filter(Boolean)) != null ? i : [];
      return gl(t, s, e, "left");
    }, Qe(e.options, On, "getLeftHeaderGroups")), e.getRightHeaderGroups = Ke(() => [e.getAllColumns(), e.getVisibleLeafColumns(), e.getState().columnPinning.right], (t, n, o) => {
      var i;
      const s = (i = o == null ? void 0 : o.map((a) => n.find((l) => l.id === a)).filter(Boolean)) != null ? i : [];
      return gl(t, s, e, "right");
    }, Qe(e.options, On, "getRightHeaderGroups")), e.getFooterGroups = Ke(() => [e.getHeaderGroups()], (t) => [...t].reverse(), Qe(e.options, On, "getFooterGroups")), e.getLeftFooterGroups = Ke(() => [e.getLeftHeaderGroups()], (t) => [...t].reverse(), Qe(e.options, On, "getLeftFooterGroups")), e.getCenterFooterGroups = Ke(() => [e.getCenterHeaderGroups()], (t) => [...t].reverse(), Qe(e.options, On, "getCenterFooterGroups")), e.getRightFooterGroups = Ke(() => [e.getRightHeaderGroups()], (t) => [...t].reverse(), Qe(e.options, On, "getRightFooterGroups")), e.getFlatHeaders = Ke(() => [e.getHeaderGroups()], (t) => t.map((n) => n.headers).flat(), Qe(e.options, On, "getFlatHeaders")), e.getLeftFlatHeaders = Ke(() => [e.getLeftHeaderGroups()], (t) => t.map((n) => n.headers).flat(), Qe(e.options, On, "getLeftFlatHeaders")), e.getCenterFlatHeaders = Ke(() => [e.getCenterHeaderGroups()], (t) => t.map((n) => n.headers).flat(), Qe(e.options, On, "getCenterFlatHeaders")), e.getRightFlatHeaders = Ke(() => [e.getRightHeaderGroups()], (t) => t.map((n) => n.headers).flat(), Qe(e.options, On, "getRightFlatHeaders")), e.getCenterLeafHeaders = Ke(() => [e.getCenterFlatHeaders()], (t) => t.filter((n) => {
      var o;
      return !((o = n.subHeaders) != null && o.length);
    }), Qe(e.options, On, "getCenterLeafHeaders")), e.getLeftLeafHeaders = Ke(() => [e.getLeftFlatHeaders()], (t) => t.filter((n) => {
      var o;
      return !((o = n.subHeaders) != null && o.length);
    }), Qe(e.options, On, "getLeftLeafHeaders")), e.getRightLeafHeaders = Ke(() => [e.getRightFlatHeaders()], (t) => t.filter((n) => {
      var o;
      return !((o = n.subHeaders) != null && o.length);
    }), Qe(e.options, On, "getRightLeafHeaders")), e.getLeafHeaders = Ke(() => [e.getLeftHeaderGroups(), e.getCenterHeaderGroups(), e.getRightHeaderGroups()], (t, n, o) => {
      var i, s, a, l, c, u;
      return [...(i = (s = t[0]) == null ? void 0 : s.headers) != null ? i : [], ...(a = (l = n[0]) == null ? void 0 : l.headers) != null ? a : [], ...(c = (u = o[0]) == null ? void 0 : u.headers) != null ? c : []].map((d) => d.getLeafHeaders()).flat();
    }, Qe(e.options, On, "getLeafHeaders"));
  }
};
function gl(e, t, n, o) {
  var i, s;
  let a = 0;
  const l = function(m, g) {
    g === void 0 && (g = 1), a = Math.max(a, g), m.filter((h) => h.getIsVisible()).forEach((h) => {
      var v;
      (v = h.columns) != null && v.length && l(h.columns, g + 1);
    }, 0);
  };
  l(e);
  let c = [];
  const u = (m, g) => {
    const h = {
      depth: g,
      id: [o, `${g}`].filter(Boolean).join("_"),
      headers: []
    }, v = [];
    m.forEach((b) => {
      const y = [...v].reverse()[0], C = b.column.depth === h.depth;
      let x, T = !1;
      if (C && b.column.parent ? x = b.column.parent : (x = b.column, T = !0), y && (y == null ? void 0 : y.column) === x)
        y.subHeaders.push(b);
      else {
        const w = vb(n, x, {
          id: [o, g, x.id, b == null ? void 0 : b.id].filter(Boolean).join("_"),
          isPlaceholder: T,
          placeholderId: T ? `${v.filter((R) => R.column === x).length}` : void 0,
          depth: g,
          index: v.length
        });
        w.subHeaders.push(b), v.push(w);
      }
      h.headers.push(b), b.headerGroup = h;
    }), c.push(h), g > 0 && u(v, g - 1);
  }, d = t.map((m, g) => vb(n, m, {
    depth: a,
    index: g
  }));
  u(d, a - 1), c.reverse();
  const p = (m) => m.filter((h) => h.column.getIsVisible()).map((h) => {
    let v = 0, b = 0, y = [0];
    h.subHeaders && h.subHeaders.length ? (y = [], p(h.subHeaders).forEach((x) => {
      let {
        colSpan: T,
        rowSpan: w
      } = x;
      v += T, y.push(w);
    })) : v = 1;
    const C = Math.min(...y);
    return b = b + C, h.colSpan = v, h.rowSpan = b, {
      colSpan: v,
      rowSpan: b
    };
  });
  return p((i = (s = c[0]) == null ? void 0 : s.headers) != null ? i : []), c;
}
const Ga = (e, t, n, o, i, s, a) => {
  let l = {
    id: t,
    index: o,
    original: n,
    depth: i,
    parentId: a,
    _valuesCache: {},
    _uniqueValuesCache: {},
    getValue: (c) => {
      if (l._valuesCache.hasOwnProperty(c))
        return l._valuesCache[c];
      const u = e.getColumn(c);
      if (u != null && u.accessorFn)
        return l._valuesCache[c] = u.accessorFn(l.original, o), l._valuesCache[c];
    },
    getUniqueValues: (c) => {
      if (l._uniqueValuesCache.hasOwnProperty(c))
        return l._uniqueValuesCache[c];
      const u = e.getColumn(c);
      if (u != null && u.accessorFn)
        return u.columnDef.getUniqueValues ? (l._uniqueValuesCache[c] = u.columnDef.getUniqueValues(l.original, o), l._uniqueValuesCache[c]) : (l._uniqueValuesCache[c] = [l.getValue(c)], l._uniqueValuesCache[c]);
    },
    renderValue: (c) => {
      var u;
      return (u = l.getValue(c)) != null ? u : e.options.renderFallbackValue;
    },
    subRows: s ?? [],
    getLeafRows: () => bx(l.subRows, (c) => c.subRows),
    getParentRow: () => l.parentId ? e.getRow(l.parentId, !0) : void 0,
    getParentRows: () => {
      let c = [], u = l;
      for (; ; ) {
        const d = u.getParentRow();
        if (!d) break;
        c.push(d), u = d;
      }
      return c.reverse();
    },
    getAllCells: Ke(() => [e.getAllLeafColumns()], (c) => c.map((u) => zV(e, l, u, u.id)), Qe(e.options, "debugRows", "getAllCells")),
    _getAllCellsByColumnId: Ke(() => [l.getAllCells()], (c) => c.reduce((u, d) => (u[d.column.id] = d, u), {}), Qe(e.options, "debugRows", "getAllCellsByColumnId"))
  };
  for (let c = 0; c < e._features.length; c++) {
    const u = e._features[c];
    u == null || u.createRow == null || u.createRow(l, e);
  }
  return l;
}, GV = {
  createColumn: (e, t) => {
    e._getFacetedRowModel = t.options.getFacetedRowModel && t.options.getFacetedRowModel(t, e.id), e.getFacetedRowModel = () => e._getFacetedRowModel ? e._getFacetedRowModel() : t.getPreFilteredRowModel(), e._getFacetedUniqueValues = t.options.getFacetedUniqueValues && t.options.getFacetedUniqueValues(t, e.id), e.getFacetedUniqueValues = () => e._getFacetedUniqueValues ? e._getFacetedUniqueValues() : /* @__PURE__ */ new Map(), e._getFacetedMinMaxValues = t.options.getFacetedMinMaxValues && t.options.getFacetedMinMaxValues(t, e.id), e.getFacetedMinMaxValues = () => {
      if (e._getFacetedMinMaxValues)
        return e._getFacetedMinMaxValues();
    };
  }
}, vx = (e, t, n) => {
  var o, i;
  const s = n == null || (o = n.toString()) == null ? void 0 : o.toLowerCase();
  return !!(!((i = e.getValue(t)) == null || (i = i.toString()) == null || (i = i.toLowerCase()) == null) && i.includes(s));
};
vx.autoRemove = (e) => Do(e);
const yx = (e, t, n) => {
  var o;
  return !!(!((o = e.getValue(t)) == null || (o = o.toString()) == null) && o.includes(n));
};
yx.autoRemove = (e) => Do(e);
const xx = (e, t, n) => {
  var o;
  return ((o = e.getValue(t)) == null || (o = o.toString()) == null ? void 0 : o.toLowerCase()) === (n == null ? void 0 : n.toLowerCase());
};
xx.autoRemove = (e) => Do(e);
const Cx = (e, t, n) => {
  var o;
  return (o = e.getValue(t)) == null ? void 0 : o.includes(n);
};
Cx.autoRemove = (e) => Do(e) || !(e != null && e.length);
const Sx = (e, t, n) => !n.some((o) => {
  var i;
  return !((i = e.getValue(t)) != null && i.includes(o));
});
Sx.autoRemove = (e) => Do(e) || !(e != null && e.length);
const wx = (e, t, n) => n.some((o) => {
  var i;
  return (i = e.getValue(t)) == null ? void 0 : i.includes(o);
});
wx.autoRemove = (e) => Do(e) || !(e != null && e.length);
const Tx = (e, t, n) => e.getValue(t) === n;
Tx.autoRemove = (e) => Do(e);
const Ix = (e, t, n) => e.getValue(t) == n;
Ix.autoRemove = (e) => Do(e);
const Jf = (e, t, n) => {
  let [o, i] = n;
  const s = e.getValue(t);
  return s >= o && s <= i;
};
Jf.resolveFilterValue = (e) => {
  let [t, n] = e, o = typeof t != "number" ? parseFloat(t) : t, i = typeof n != "number" ? parseFloat(n) : n, s = t === null || Number.isNaN(o) ? -1 / 0 : o, a = n === null || Number.isNaN(i) ? 1 / 0 : i;
  if (s > a) {
    const l = s;
    s = a, a = l;
  }
  return [s, a];
};
Jf.autoRemove = (e) => Do(e) || Do(e[0]) && Do(e[1]);
const _o = {
  includesString: vx,
  includesStringSensitive: yx,
  equalsString: xx,
  arrIncludes: Cx,
  arrIncludesAll: Sx,
  arrIncludesSome: wx,
  equals: Tx,
  weakEquals: Ix,
  inNumberRange: Jf
};
function Do(e) {
  return e == null || e === "";
}
const UV = {
  getDefaultColumnDef: () => ({
    filterFn: "auto"
  }),
  getInitialState: (e) => ({
    columnFilters: [],
    ...e
  }),
  getDefaultOptions: (e) => ({
    onColumnFiltersChange: io("columnFilters", e),
    filterFromLeafRows: !1,
    maxLeafRowFilterDepth: 100
  }),
  createColumn: (e, t) => {
    e.getAutoFilterFn = () => {
      const n = t.getCoreRowModel().flatRows[0], o = n == null ? void 0 : n.getValue(e.id);
      return typeof o == "string" ? _o.includesString : typeof o == "number" ? _o.inNumberRange : typeof o == "boolean" || o !== null && typeof o == "object" ? _o.equals : Array.isArray(o) ? _o.arrIncludes : _o.weakEquals;
    }, e.getFilterFn = () => {
      var n, o;
      return yu(e.columnDef.filterFn) ? e.columnDef.filterFn : e.columnDef.filterFn === "auto" ? e.getAutoFilterFn() : (
        // @ts-ignore
        (n = (o = t.options.filterFns) == null ? void 0 : o[e.columnDef.filterFn]) != null ? n : _o[e.columnDef.filterFn]
      );
    }, e.getCanFilter = () => {
      var n, o, i;
      return ((n = e.columnDef.enableColumnFilter) != null ? n : !0) && ((o = t.options.enableColumnFilters) != null ? o : !0) && ((i = t.options.enableFilters) != null ? i : !0) && !!e.accessorFn;
    }, e.getIsFiltered = () => e.getFilterIndex() > -1, e.getFilterValue = () => {
      var n;
      return (n = t.getState().columnFilters) == null || (n = n.find((o) => o.id === e.id)) == null ? void 0 : n.value;
    }, e.getFilterIndex = () => {
      var n, o;
      return (n = (o = t.getState().columnFilters) == null ? void 0 : o.findIndex((i) => i.id === e.id)) != null ? n : -1;
    }, e.setFilterValue = (n) => {
      t.setColumnFilters((o) => {
        const i = e.getFilterFn(), s = o == null ? void 0 : o.find((d) => d.id === e.id), a = Rr(n, s ? s.value : void 0);
        if (yb(i, a, e)) {
          var l;
          return (l = o == null ? void 0 : o.filter((d) => d.id !== e.id)) != null ? l : [];
        }
        const c = {
          id: e.id,
          value: a
        };
        if (s) {
          var u;
          return (u = o == null ? void 0 : o.map((d) => d.id === e.id ? c : d)) != null ? u : [];
        }
        return o != null && o.length ? [...o, c] : [c];
      });
    };
  },
  createRow: (e, t) => {
    e.columnFilters = {}, e.columnFiltersMeta = {};
  },
  createTable: (e) => {
    e.setColumnFilters = (t) => {
      const n = e.getAllLeafColumns(), o = (i) => {
        var s;
        return (s = Rr(t, i)) == null ? void 0 : s.filter((a) => {
          const l = n.find((c) => c.id === a.id);
          if (l) {
            const c = l.getFilterFn();
            if (yb(c, a.value, l))
              return !1;
          }
          return !0;
        });
      };
      e.options.onColumnFiltersChange == null || e.options.onColumnFiltersChange(o);
    }, e.resetColumnFilters = (t) => {
      var n, o;
      e.setColumnFilters(t ? [] : (n = (o = e.initialState) == null ? void 0 : o.columnFilters) != null ? n : []);
    }, e.getPreFilteredRowModel = () => e.getCoreRowModel(), e.getFilteredRowModel = () => (!e._getFilteredRowModel && e.options.getFilteredRowModel && (e._getFilteredRowModel = e.options.getFilteredRowModel(e)), e.options.manualFiltering || !e._getFilteredRowModel ? e.getPreFilteredRowModel() : e._getFilteredRowModel());
  }
};
function yb(e, t, n) {
  return (e && e.autoRemove ? e.autoRemove(t, n) : !1) || typeof t > "u" || typeof t == "string" && !t;
}
const XV = (e, t, n) => n.reduce((o, i) => {
  const s = i.getValue(e);
  return o + (typeof s == "number" ? s : 0);
}, 0), YV = (e, t, n) => {
  let o;
  return n.forEach((i) => {
    const s = i.getValue(e);
    s != null && (o > s || o === void 0 && s >= s) && (o = s);
  }), o;
}, ZV = (e, t, n) => {
  let o;
  return n.forEach((i) => {
    const s = i.getValue(e);
    s != null && (o < s || o === void 0 && s >= s) && (o = s);
  }), o;
}, qV = (e, t, n) => {
  let o, i;
  return n.forEach((s) => {
    const a = s.getValue(e);
    a != null && (o === void 0 ? a >= a && (o = i = a) : (o > a && (o = a), i < a && (i = a)));
  }), [o, i];
}, JV = (e, t) => {
  let n = 0, o = 0;
  if (t.forEach((i) => {
    let s = i.getValue(e);
    s != null && (s = +s) >= s && (++n, o += s);
  }), n) return o / n;
}, KV = (e, t) => {
  if (!t.length)
    return;
  const n = t.map((s) => s.getValue(e));
  if (!BV(n))
    return;
  if (n.length === 1)
    return n[0];
  const o = Math.floor(n.length / 2), i = n.sort((s, a) => s - a);
  return n.length % 2 !== 0 ? i[o] : (i[o - 1] + i[o]) / 2;
}, QV = (e, t) => Array.from(new Set(t.map((n) => n.getValue(e))).values()), e$ = (e, t) => new Set(t.map((n) => n.getValue(e))).size, t$ = (e, t) => t.length, Gl = {
  sum: XV,
  min: YV,
  max: ZV,
  extent: qV,
  mean: JV,
  median: KV,
  unique: QV,
  uniqueCount: e$,
  count: t$
}, n$ = {
  getDefaultColumnDef: () => ({
    aggregatedCell: (e) => {
      var t, n;
      return (t = (n = e.getValue()) == null || n.toString == null ? void 0 : n.toString()) != null ? t : null;
    },
    aggregationFn: "auto"
  }),
  getInitialState: (e) => ({
    grouping: [],
    ...e
  }),
  getDefaultOptions: (e) => ({
    onGroupingChange: io("grouping", e),
    groupedColumnMode: "reorder"
  }),
  createColumn: (e, t) => {
    e.toggleGrouping = () => {
      t.setGrouping((n) => n != null && n.includes(e.id) ? n.filter((o) => o !== e.id) : [...n ?? [], e.id]);
    }, e.getCanGroup = () => {
      var n, o;
      return ((n = e.columnDef.enableGrouping) != null ? n : !0) && ((o = t.options.enableGrouping) != null ? o : !0) && (!!e.accessorFn || !!e.columnDef.getGroupingValue);
    }, e.getIsGrouped = () => {
      var n;
      return (n = t.getState().grouping) == null ? void 0 : n.includes(e.id);
    }, e.getGroupedIndex = () => {
      var n;
      return (n = t.getState().grouping) == null ? void 0 : n.indexOf(e.id);
    }, e.getToggleGroupingHandler = () => {
      const n = e.getCanGroup();
      return () => {
        n && e.toggleGrouping();
      };
    }, e.getAutoAggregationFn = () => {
      const n = t.getCoreRowModel().flatRows[0], o = n == null ? void 0 : n.getValue(e.id);
      if (typeof o == "number")
        return Gl.sum;
      if (Object.prototype.toString.call(o) === "[object Date]")
        return Gl.extent;
    }, e.getAggregationFn = () => {
      var n, o;
      if (!e)
        throw new Error();
      return yu(e.columnDef.aggregationFn) ? e.columnDef.aggregationFn : e.columnDef.aggregationFn === "auto" ? e.getAutoAggregationFn() : (n = (o = t.options.aggregationFns) == null ? void 0 : o[e.columnDef.aggregationFn]) != null ? n : Gl[e.columnDef.aggregationFn];
    };
  },
  createTable: (e) => {
    e.setGrouping = (t) => e.options.onGroupingChange == null ? void 0 : e.options.onGroupingChange(t), e.resetGrouping = (t) => {
      var n, o;
      e.setGrouping(t ? [] : (n = (o = e.initialState) == null ? void 0 : o.grouping) != null ? n : []);
    }, e.getPreGroupedRowModel = () => e.getFilteredRowModel(), e.getGroupedRowModel = () => (!e._getGroupedRowModel && e.options.getGroupedRowModel && (e._getGroupedRowModel = e.options.getGroupedRowModel(e)), e.options.manualGrouping || !e._getGroupedRowModel ? e.getPreGroupedRowModel() : e._getGroupedRowModel());
  },
  createRow: (e, t) => {
    e.getIsGrouped = () => !!e.groupingColumnId, e.getGroupingValue = (n) => {
      if (e._groupingValuesCache.hasOwnProperty(n))
        return e._groupingValuesCache[n];
      const o = t.getColumn(n);
      return o != null && o.columnDef.getGroupingValue ? (e._groupingValuesCache[n] = o.columnDef.getGroupingValue(e.original), e._groupingValuesCache[n]) : e.getValue(n);
    }, e._groupingValuesCache = {};
  },
  createCell: (e, t, n, o) => {
    e.getIsGrouped = () => t.getIsGrouped() && t.id === n.groupingColumnId, e.getIsPlaceholder = () => !e.getIsGrouped() && t.getIsGrouped(), e.getIsAggregated = () => {
      var i;
      return !e.getIsGrouped() && !e.getIsPlaceholder() && !!((i = n.subRows) != null && i.length);
    };
  }
};
function o$(e, t, n) {
  if (!(t != null && t.length) || !n)
    return e;
  const o = e.filter((s) => !t.includes(s.id));
  return n === "remove" ? o : [...t.map((s) => e.find((a) => a.id === s)).filter(Boolean), ...o];
}
const r$ = {
  getInitialState: (e) => ({
    columnOrder: [],
    ...e
  }),
  getDefaultOptions: (e) => ({
    onColumnOrderChange: io("columnOrder", e)
  }),
  createColumn: (e, t) => {
    e.getIndex = Ke((n) => [Js(t, n)], (n) => n.findIndex((o) => o.id === e.id), Qe(t.options, "debugColumns", "getIndex")), e.getIsFirstColumn = (n) => {
      var o;
      return ((o = Js(t, n)[0]) == null ? void 0 : o.id) === e.id;
    }, e.getIsLastColumn = (n) => {
      var o;
      const i = Js(t, n);
      return ((o = i[i.length - 1]) == null ? void 0 : o.id) === e.id;
    };
  },
  createTable: (e) => {
    e.setColumnOrder = (t) => e.options.onColumnOrderChange == null ? void 0 : e.options.onColumnOrderChange(t), e.resetColumnOrder = (t) => {
      var n;
      e.setColumnOrder(t ? [] : (n = e.initialState.columnOrder) != null ? n : []);
    }, e._getOrderColumnsFn = Ke(() => [e.getState().columnOrder, e.getState().grouping, e.options.groupedColumnMode], (t, n, o) => (i) => {
      let s = [];
      if (!(t != null && t.length))
        s = i;
      else {
        const a = [...t], l = [...i];
        for (; l.length && a.length; ) {
          const c = a.shift(), u = l.findIndex((d) => d.id === c);
          u > -1 && s.push(l.splice(u, 1)[0]);
        }
        s = [...s, ...l];
      }
      return o$(s, n, o);
    }, Qe(e.options, "debugTable", "_getOrderColumnsFn"));
  }
}, Cd = () => ({
  left: [],
  right: []
}), i$ = {
  getInitialState: (e) => ({
    columnPinning: Cd(),
    ...e
  }),
  getDefaultOptions: (e) => ({
    onColumnPinningChange: io("columnPinning", e)
  }),
  createColumn: (e, t) => {
    e.pin = (n) => {
      const o = e.getLeafColumns().map((i) => i.id).filter(Boolean);
      t.setColumnPinning((i) => {
        var s, a;
        if (n === "right") {
          var l, c;
          return {
            left: ((l = i == null ? void 0 : i.left) != null ? l : []).filter((p) => !(o != null && o.includes(p))),
            right: [...((c = i == null ? void 0 : i.right) != null ? c : []).filter((p) => !(o != null && o.includes(p))), ...o]
          };
        }
        if (n === "left") {
          var u, d;
          return {
            left: [...((u = i == null ? void 0 : i.left) != null ? u : []).filter((p) => !(o != null && o.includes(p))), ...o],
            right: ((d = i == null ? void 0 : i.right) != null ? d : []).filter((p) => !(o != null && o.includes(p)))
          };
        }
        return {
          left: ((s = i == null ? void 0 : i.left) != null ? s : []).filter((p) => !(o != null && o.includes(p))),
          right: ((a = i == null ? void 0 : i.right) != null ? a : []).filter((p) => !(o != null && o.includes(p)))
        };
      });
    }, e.getCanPin = () => e.getLeafColumns().some((o) => {
      var i, s, a;
      return ((i = o.columnDef.enablePinning) != null ? i : !0) && ((s = (a = t.options.enableColumnPinning) != null ? a : t.options.enablePinning) != null ? s : !0);
    }), e.getIsPinned = () => {
      const n = e.getLeafColumns().map((l) => l.id), {
        left: o,
        right: i
      } = t.getState().columnPinning, s = n.some((l) => o == null ? void 0 : o.includes(l)), a = n.some((l) => i == null ? void 0 : i.includes(l));
      return s ? "left" : a ? "right" : !1;
    }, e.getPinnedIndex = () => {
      var n, o;
      const i = e.getIsPinned();
      return i ? (n = (o = t.getState().columnPinning) == null || (o = o[i]) == null ? void 0 : o.indexOf(e.id)) != null ? n : -1 : 0;
    };
  },
  createRow: (e, t) => {
    e.getCenterVisibleCells = Ke(() => [e._getAllVisibleCells(), t.getState().columnPinning.left, t.getState().columnPinning.right], (n, o, i) => {
      const s = [...o ?? [], ...i ?? []];
      return n.filter((a) => !s.includes(a.column.id));
    }, Qe(t.options, "debugRows", "getCenterVisibleCells")), e.getLeftVisibleCells = Ke(() => [e._getAllVisibleCells(), t.getState().columnPinning.left], (n, o) => (o ?? []).map((s) => n.find((a) => a.column.id === s)).filter(Boolean).map((s) => ({
      ...s,
      position: "left"
    })), Qe(t.options, "debugRows", "getLeftVisibleCells")), e.getRightVisibleCells = Ke(() => [e._getAllVisibleCells(), t.getState().columnPinning.right], (n, o) => (o ?? []).map((s) => n.find((a) => a.column.id === s)).filter(Boolean).map((s) => ({
      ...s,
      position: "right"
    })), Qe(t.options, "debugRows", "getRightVisibleCells"));
  },
  createTable: (e) => {
    e.setColumnPinning = (t) => e.options.onColumnPinningChange == null ? void 0 : e.options.onColumnPinningChange(t), e.resetColumnPinning = (t) => {
      var n, o;
      return e.setColumnPinning(t ? Cd() : (n = (o = e.initialState) == null ? void 0 : o.columnPinning) != null ? n : Cd());
    }, e.getIsSomeColumnsPinned = (t) => {
      var n;
      const o = e.getState().columnPinning;
      if (!t) {
        var i, s;
        return !!((i = o.left) != null && i.length || (s = o.right) != null && s.length);
      }
      return !!((n = o[t]) != null && n.length);
    }, e.getLeftLeafColumns = Ke(() => [e.getAllLeafColumns(), e.getState().columnPinning.left], (t, n) => (n ?? []).map((o) => t.find((i) => i.id === o)).filter(Boolean), Qe(e.options, "debugColumns", "getLeftLeafColumns")), e.getRightLeafColumns = Ke(() => [e.getAllLeafColumns(), e.getState().columnPinning.right], (t, n) => (n ?? []).map((o) => t.find((i) => i.id === o)).filter(Boolean), Qe(e.options, "debugColumns", "getRightLeafColumns")), e.getCenterLeafColumns = Ke(() => [e.getAllLeafColumns(), e.getState().columnPinning.left, e.getState().columnPinning.right], (t, n, o) => {
      const i = [...n ?? [], ...o ?? []];
      return t.filter((s) => !i.includes(s.id));
    }, Qe(e.options, "debugColumns", "getCenterLeafColumns"));
  }
}, hl = {
  size: 150,
  minSize: 20,
  maxSize: Number.MAX_SAFE_INTEGER
}, Sd = () => ({
  startOffset: null,
  startSize: null,
  deltaOffset: null,
  deltaPercentage: null,
  isResizingColumn: !1,
  columnSizingStart: []
}), s$ = {
  getDefaultColumnDef: () => hl,
  getInitialState: (e) => ({
    columnSizing: {},
    columnSizingInfo: Sd(),
    ...e
  }),
  getDefaultOptions: (e) => ({
    columnResizeMode: "onEnd",
    columnResizeDirection: "ltr",
    onColumnSizingChange: io("columnSizing", e),
    onColumnSizingInfoChange: io("columnSizingInfo", e)
  }),
  createColumn: (e, t) => {
    e.getSize = () => {
      var n, o, i;
      const s = t.getState().columnSizing[e.id];
      return Math.min(Math.max((n = e.columnDef.minSize) != null ? n : hl.minSize, (o = s ?? e.columnDef.size) != null ? o : hl.size), (i = e.columnDef.maxSize) != null ? i : hl.maxSize);
    }, e.getStart = Ke((n) => [n, Js(t, n), t.getState().columnSizing], (n, o) => o.slice(0, e.getIndex(n)).reduce((i, s) => i + s.getSize(), 0), Qe(t.options, "debugColumns", "getStart")), e.getAfter = Ke((n) => [n, Js(t, n), t.getState().columnSizing], (n, o) => o.slice(e.getIndex(n) + 1).reduce((i, s) => i + s.getSize(), 0), Qe(t.options, "debugColumns", "getAfter")), e.resetSize = () => {
      t.setColumnSizing((n) => {
        let {
          [e.id]: o,
          ...i
        } = n;
        return i;
      });
    }, e.getCanResize = () => {
      var n, o;
      return ((n = e.columnDef.enableResizing) != null ? n : !0) && ((o = t.options.enableColumnResizing) != null ? o : !0);
    }, e.getIsResizing = () => t.getState().columnSizingInfo.isResizingColumn === e.id;
  },
  createHeader: (e, t) => {
    e.getSize = () => {
      let n = 0;
      const o = (i) => {
        if (i.subHeaders.length)
          i.subHeaders.forEach(o);
        else {
          var s;
          n += (s = i.column.getSize()) != null ? s : 0;
        }
      };
      return o(e), n;
    }, e.getStart = () => {
      if (e.index > 0) {
        const n = e.headerGroup.headers[e.index - 1];
        return n.getStart() + n.getSize();
      }
      return 0;
    }, e.getResizeHandler = (n) => {
      const o = t.getColumn(e.column.id), i = o == null ? void 0 : o.getCanResize();
      return (s) => {
        if (!o || !i || (s.persist == null || s.persist(), wd(s) && s.touches && s.touches.length > 1))
          return;
        const a = e.getSize(), l = e ? e.getLeafHeaders().map((y) => [y.column.id, y.column.getSize()]) : [[o.id, o.getSize()]], c = wd(s) ? Math.round(s.touches[0].clientX) : s.clientX, u = {}, d = (y, C) => {
          typeof C == "number" && (t.setColumnSizingInfo((x) => {
            var T, w;
            const R = t.options.columnResizeDirection === "rtl" ? -1 : 1, E = (C - ((T = x == null ? void 0 : x.startOffset) != null ? T : 0)) * R, O = Math.max(E / ((w = x == null ? void 0 : x.startSize) != null ? w : 0), -0.999999);
            return x.columnSizingStart.forEach((I) => {
              let [P, A] = I;
              u[P] = Math.round(Math.max(A + A * O, 0) * 100) / 100;
            }), {
              ...x,
              deltaOffset: E,
              deltaPercentage: O
            };
          }), (t.options.columnResizeMode === "onChange" || y === "end") && t.setColumnSizing((x) => ({
            ...x,
            ...u
          })));
        }, p = (y) => d("move", y), m = (y) => {
          d("end", y), t.setColumnSizingInfo((C) => ({
            ...C,
            isResizingColumn: !1,
            startOffset: null,
            startSize: null,
            deltaOffset: null,
            deltaPercentage: null,
            columnSizingStart: []
          }));
        }, g = n || typeof document < "u" ? document : null, h = {
          moveHandler: (y) => p(y.clientX),
          upHandler: (y) => {
            g == null || g.removeEventListener("mousemove", h.moveHandler), g == null || g.removeEventListener("mouseup", h.upHandler), m(y.clientX);
          }
        }, v = {
          moveHandler: (y) => (y.cancelable && (y.preventDefault(), y.stopPropagation()), p(y.touches[0].clientX), !1),
          upHandler: (y) => {
            var C;
            g == null || g.removeEventListener("touchmove", v.moveHandler), g == null || g.removeEventListener("touchend", v.upHandler), y.cancelable && (y.preventDefault(), y.stopPropagation()), m((C = y.touches[0]) == null ? void 0 : C.clientX);
          }
        }, b = a$() ? {
          passive: !1
        } : !1;
        wd(s) ? (g == null || g.addEventListener("touchmove", v.moveHandler, b), g == null || g.addEventListener("touchend", v.upHandler, b)) : (g == null || g.addEventListener("mousemove", h.moveHandler, b), g == null || g.addEventListener("mouseup", h.upHandler, b)), t.setColumnSizingInfo((y) => ({
          ...y,
          startOffset: c,
          startSize: a,
          deltaOffset: 0,
          deltaPercentage: 0,
          columnSizingStart: l,
          isResizingColumn: o.id
        }));
      };
    };
  },
  createTable: (e) => {
    e.setColumnSizing = (t) => e.options.onColumnSizingChange == null ? void 0 : e.options.onColumnSizingChange(t), e.setColumnSizingInfo = (t) => e.options.onColumnSizingInfoChange == null ? void 0 : e.options.onColumnSizingInfoChange(t), e.resetColumnSizing = (t) => {
      var n;
      e.setColumnSizing(t ? {} : (n = e.initialState.columnSizing) != null ? n : {});
    }, e.resetHeaderSizeInfo = (t) => {
      var n;
      e.setColumnSizingInfo(t ? Sd() : (n = e.initialState.columnSizingInfo) != null ? n : Sd());
    }, e.getTotalSize = () => {
      var t, n;
      return (t = (n = e.getHeaderGroups()[0]) == null ? void 0 : n.headers.reduce((o, i) => o + i.getSize(), 0)) != null ? t : 0;
    }, e.getLeftTotalSize = () => {
      var t, n;
      return (t = (n = e.getLeftHeaderGroups()[0]) == null ? void 0 : n.headers.reduce((o, i) => o + i.getSize(), 0)) != null ? t : 0;
    }, e.getCenterTotalSize = () => {
      var t, n;
      return (t = (n = e.getCenterHeaderGroups()[0]) == null ? void 0 : n.headers.reduce((o, i) => o + i.getSize(), 0)) != null ? t : 0;
    }, e.getRightTotalSize = () => {
      var t, n;
      return (t = (n = e.getRightHeaderGroups()[0]) == null ? void 0 : n.headers.reduce((o, i) => o + i.getSize(), 0)) != null ? t : 0;
    };
  }
};
let bl = null;
function a$() {
  if (typeof bl == "boolean") return bl;
  let e = !1;
  try {
    const t = {
      get passive() {
        return e = !0, !1;
      }
    }, n = () => {
    };
    window.addEventListener("test", n, t), window.removeEventListener("test", n);
  } catch {
    e = !1;
  }
  return bl = e, bl;
}
function wd(e) {
  return e.type === "touchstart";
}
const l$ = {
  getInitialState: (e) => ({
    columnVisibility: {},
    ...e
  }),
  getDefaultOptions: (e) => ({
    onColumnVisibilityChange: io("columnVisibility", e)
  }),
  createColumn: (e, t) => {
    e.toggleVisibility = (n) => {
      e.getCanHide() && t.setColumnVisibility((o) => ({
        ...o,
        [e.id]: n ?? !e.getIsVisible()
      }));
    }, e.getIsVisible = () => {
      var n, o;
      const i = e.columns;
      return (n = i.length ? i.some((s) => s.getIsVisible()) : (o = t.getState().columnVisibility) == null ? void 0 : o[e.id]) != null ? n : !0;
    }, e.getCanHide = () => {
      var n, o;
      return ((n = e.columnDef.enableHiding) != null ? n : !0) && ((o = t.options.enableHiding) != null ? o : !0);
    }, e.getToggleVisibilityHandler = () => (n) => {
      e.toggleVisibility == null || e.toggleVisibility(n.target.checked);
    };
  },
  createRow: (e, t) => {
    e._getAllVisibleCells = Ke(() => [e.getAllCells(), t.getState().columnVisibility], (n) => n.filter((o) => o.column.getIsVisible()), Qe(t.options, "debugRows", "_getAllVisibleCells")), e.getVisibleCells = Ke(() => [e.getLeftVisibleCells(), e.getCenterVisibleCells(), e.getRightVisibleCells()], (n, o, i) => [...n, ...o, ...i], Qe(t.options, "debugRows", "getVisibleCells"));
  },
  createTable: (e) => {
    const t = (n, o) => Ke(() => [o(), o().filter((i) => i.getIsVisible()).map((i) => i.id).join("_")], (i) => i.filter((s) => s.getIsVisible == null ? void 0 : s.getIsVisible()), Qe(e.options, "debugColumns", n));
    e.getVisibleFlatColumns = t("getVisibleFlatColumns", () => e.getAllFlatColumns()), e.getVisibleLeafColumns = t("getVisibleLeafColumns", () => e.getAllLeafColumns()), e.getLeftVisibleLeafColumns = t("getLeftVisibleLeafColumns", () => e.getLeftLeafColumns()), e.getRightVisibleLeafColumns = t("getRightVisibleLeafColumns", () => e.getRightLeafColumns()), e.getCenterVisibleLeafColumns = t("getCenterVisibleLeafColumns", () => e.getCenterLeafColumns()), e.setColumnVisibility = (n) => e.options.onColumnVisibilityChange == null ? void 0 : e.options.onColumnVisibilityChange(n), e.resetColumnVisibility = (n) => {
      var o;
      e.setColumnVisibility(n ? {} : (o = e.initialState.columnVisibility) != null ? o : {});
    }, e.toggleAllColumnsVisible = (n) => {
      var o;
      n = (o = n) != null ? o : !e.getIsAllColumnsVisible(), e.setColumnVisibility(e.getAllLeafColumns().reduce((i, s) => ({
        ...i,
        [s.id]: n || !(s.getCanHide != null && s.getCanHide())
      }), {}));
    }, e.getIsAllColumnsVisible = () => !e.getAllLeafColumns().some((n) => !(n.getIsVisible != null && n.getIsVisible())), e.getIsSomeColumnsVisible = () => e.getAllLeafColumns().some((n) => n.getIsVisible == null ? void 0 : n.getIsVisible()), e.getToggleAllColumnsVisibilityHandler = () => (n) => {
      var o;
      e.toggleAllColumnsVisible((o = n.target) == null ? void 0 : o.checked);
    };
  }
};
function Js(e, t) {
  return t ? t === "center" ? e.getCenterVisibleLeafColumns() : t === "left" ? e.getLeftVisibleLeafColumns() : e.getRightVisibleLeafColumns() : e.getVisibleLeafColumns();
}
const c$ = {
  createTable: (e) => {
    e._getGlobalFacetedRowModel = e.options.getFacetedRowModel && e.options.getFacetedRowModel(e, "__global__"), e.getGlobalFacetedRowModel = () => e.options.manualFiltering || !e._getGlobalFacetedRowModel ? e.getPreFilteredRowModel() : e._getGlobalFacetedRowModel(), e._getGlobalFacetedUniqueValues = e.options.getFacetedUniqueValues && e.options.getFacetedUniqueValues(e, "__global__"), e.getGlobalFacetedUniqueValues = () => e._getGlobalFacetedUniqueValues ? e._getGlobalFacetedUniqueValues() : /* @__PURE__ */ new Map(), e._getGlobalFacetedMinMaxValues = e.options.getFacetedMinMaxValues && e.options.getFacetedMinMaxValues(e, "__global__"), e.getGlobalFacetedMinMaxValues = () => {
      if (e._getGlobalFacetedMinMaxValues)
        return e._getGlobalFacetedMinMaxValues();
    };
  }
}, u$ = {
  getInitialState: (e) => ({
    globalFilter: void 0,
    ...e
  }),
  getDefaultOptions: (e) => ({
    onGlobalFilterChange: io("globalFilter", e),
    globalFilterFn: "auto",
    getColumnCanGlobalFilter: (t) => {
      var n;
      const o = (n = e.getCoreRowModel().flatRows[0]) == null || (n = n._getAllCellsByColumnId()[t.id]) == null ? void 0 : n.getValue();
      return typeof o == "string" || typeof o == "number";
    }
  }),
  createColumn: (e, t) => {
    e.getCanGlobalFilter = () => {
      var n, o, i, s;
      return ((n = e.columnDef.enableGlobalFilter) != null ? n : !0) && ((o = t.options.enableGlobalFilter) != null ? o : !0) && ((i = t.options.enableFilters) != null ? i : !0) && ((s = t.options.getColumnCanGlobalFilter == null ? void 0 : t.options.getColumnCanGlobalFilter(e)) != null ? s : !0) && !!e.accessorFn;
    };
  },
  createTable: (e) => {
    e.getGlobalAutoFilterFn = () => _o.includesString, e.getGlobalFilterFn = () => {
      var t, n;
      const {
        globalFilterFn: o
      } = e.options;
      return yu(o) ? o : o === "auto" ? e.getGlobalAutoFilterFn() : (t = (n = e.options.filterFns) == null ? void 0 : n[o]) != null ? t : _o[o];
    }, e.setGlobalFilter = (t) => {
      e.options.onGlobalFilterChange == null || e.options.onGlobalFilterChange(t);
    }, e.resetGlobalFilter = (t) => {
      e.setGlobalFilter(t ? void 0 : e.initialState.globalFilter);
    };
  }
}, d$ = {
  getInitialState: (e) => ({
    expanded: {},
    ...e
  }),
  getDefaultOptions: (e) => ({
    onExpandedChange: io("expanded", e),
    paginateExpandedRows: !0
  }),
  createTable: (e) => {
    let t = !1, n = !1;
    e._autoResetExpanded = () => {
      var o, i;
      if (!t) {
        e._queue(() => {
          t = !0;
        });
        return;
      }
      if ((o = (i = e.options.autoResetAll) != null ? i : e.options.autoResetExpanded) != null ? o : !e.options.manualExpanding) {
        if (n) return;
        n = !0, e._queue(() => {
          e.resetExpanded(), n = !1;
        });
      }
    }, e.setExpanded = (o) => e.options.onExpandedChange == null ? void 0 : e.options.onExpandedChange(o), e.toggleAllRowsExpanded = (o) => {
      o ?? !e.getIsAllRowsExpanded() ? e.setExpanded(!0) : e.setExpanded({});
    }, e.resetExpanded = (o) => {
      var i, s;
      e.setExpanded(o ? {} : (i = (s = e.initialState) == null ? void 0 : s.expanded) != null ? i : {});
    }, e.getCanSomeRowsExpand = () => e.getPrePaginationRowModel().flatRows.some((o) => o.getCanExpand()), e.getToggleAllRowsExpandedHandler = () => (o) => {
      o.persist == null || o.persist(), e.toggleAllRowsExpanded();
    }, e.getIsSomeRowsExpanded = () => {
      const o = e.getState().expanded;
      return o === !0 || Object.values(o).some(Boolean);
    }, e.getIsAllRowsExpanded = () => {
      const o = e.getState().expanded;
      return typeof o == "boolean" ? o === !0 : !(!Object.keys(o).length || e.getRowModel().flatRows.some((i) => !i.getIsExpanded()));
    }, e.getExpandedDepth = () => {
      let o = 0;
      return (e.getState().expanded === !0 ? Object.keys(e.getRowModel().rowsById) : Object.keys(e.getState().expanded)).forEach((s) => {
        const a = s.split(".");
        o = Math.max(o, a.length);
      }), o;
    }, e.getPreExpandedRowModel = () => e.getSortedRowModel(), e.getExpandedRowModel = () => (!e._getExpandedRowModel && e.options.getExpandedRowModel && (e._getExpandedRowModel = e.options.getExpandedRowModel(e)), e.options.manualExpanding || !e._getExpandedRowModel ? e.getPreExpandedRowModel() : e._getExpandedRowModel());
  },
  createRow: (e, t) => {
    e.toggleExpanded = (n) => {
      t.setExpanded((o) => {
        var i;
        const s = o === !0 ? !0 : !!(o != null && o[e.id]);
        let a = {};
        if (o === !0 ? Object.keys(t.getRowModel().rowsById).forEach((l) => {
          a[l] = !0;
        }) : a = o, n = (i = n) != null ? i : !s, !s && n)
          return {
            ...a,
            [e.id]: !0
          };
        if (s && !n) {
          const {
            [e.id]: l,
            ...c
          } = a;
          return c;
        }
        return o;
      });
    }, e.getIsExpanded = () => {
      var n;
      const o = t.getState().expanded;
      return !!((n = t.options.getIsRowExpanded == null ? void 0 : t.options.getIsRowExpanded(e)) != null ? n : o === !0 || o != null && o[e.id]);
    }, e.getCanExpand = () => {
      var n, o, i;
      return (n = t.options.getRowCanExpand == null ? void 0 : t.options.getRowCanExpand(e)) != null ? n : ((o = t.options.enableExpanding) != null ? o : !0) && !!((i = e.subRows) != null && i.length);
    }, e.getIsAllParentsExpanded = () => {
      let n = !0, o = e;
      for (; n && o.parentId; )
        o = t.getRow(o.parentId, !0), n = o.getIsExpanded();
      return n;
    }, e.getToggleExpandedHandler = () => {
      const n = e.getCanExpand();
      return () => {
        n && e.toggleExpanded();
      };
    };
  }
}, Dp = 0, Mp = 10, Td = () => ({
  pageIndex: Dp,
  pageSize: Mp
}), p$ = {
  getInitialState: (e) => ({
    ...e,
    pagination: {
      ...Td(),
      ...e == null ? void 0 : e.pagination
    }
  }),
  getDefaultOptions: (e) => ({
    onPaginationChange: io("pagination", e)
  }),
  createTable: (e) => {
    let t = !1, n = !1;
    e._autoResetPageIndex = () => {
      var o, i;
      if (!t) {
        e._queue(() => {
          t = !0;
        });
        return;
      }
      if ((o = (i = e.options.autoResetAll) != null ? i : e.options.autoResetPageIndex) != null ? o : !e.options.manualPagination) {
        if (n) return;
        n = !0, e._queue(() => {
          e.resetPageIndex(), n = !1;
        });
      }
    }, e.setPagination = (o) => {
      const i = (s) => Rr(o, s);
      return e.options.onPaginationChange == null ? void 0 : e.options.onPaginationChange(i);
    }, e.resetPagination = (o) => {
      var i;
      e.setPagination(o ? Td() : (i = e.initialState.pagination) != null ? i : Td());
    }, e.setPageIndex = (o) => {
      e.setPagination((i) => {
        let s = Rr(o, i.pageIndex);
        const a = typeof e.options.pageCount > "u" || e.options.pageCount === -1 ? Number.MAX_SAFE_INTEGER : e.options.pageCount - 1;
        return s = Math.max(0, Math.min(s, a)), {
          ...i,
          pageIndex: s
        };
      });
    }, e.resetPageIndex = (o) => {
      var i, s;
      e.setPageIndex(o ? Dp : (i = (s = e.initialState) == null || (s = s.pagination) == null ? void 0 : s.pageIndex) != null ? i : Dp);
    }, e.resetPageSize = (o) => {
      var i, s;
      e.setPageSize(o ? Mp : (i = (s = e.initialState) == null || (s = s.pagination) == null ? void 0 : s.pageSize) != null ? i : Mp);
    }, e.setPageSize = (o) => {
      e.setPagination((i) => {
        const s = Math.max(1, Rr(o, i.pageSize)), a = i.pageSize * i.pageIndex, l = Math.floor(a / s);
        return {
          ...i,
          pageIndex: l,
          pageSize: s
        };
      });
    }, e.setPageCount = (o) => e.setPagination((i) => {
      var s;
      let a = Rr(o, (s = e.options.pageCount) != null ? s : -1);
      return typeof a == "number" && (a = Math.max(-1, a)), {
        ...i,
        pageCount: a
      };
    }), e.getPageOptions = Ke(() => [e.getPageCount()], (o) => {
      let i = [];
      return o && o > 0 && (i = [...new Array(o)].fill(null).map((s, a) => a)), i;
    }, Qe(e.options, "debugTable", "getPageOptions")), e.getCanPreviousPage = () => e.getState().pagination.pageIndex > 0, e.getCanNextPage = () => {
      const {
        pageIndex: o
      } = e.getState().pagination, i = e.getPageCount();
      return i === -1 ? !0 : i === 0 ? !1 : o < i - 1;
    }, e.previousPage = () => e.setPageIndex((o) => o - 1), e.nextPage = () => e.setPageIndex((o) => o + 1), e.firstPage = () => e.setPageIndex(0), e.lastPage = () => e.setPageIndex(e.getPageCount() - 1), e.getPrePaginationRowModel = () => e.getExpandedRowModel(), e.getPaginationRowModel = () => (!e._getPaginationRowModel && e.options.getPaginationRowModel && (e._getPaginationRowModel = e.options.getPaginationRowModel(e)), e.options.manualPagination || !e._getPaginationRowModel ? e.getPrePaginationRowModel() : e._getPaginationRowModel()), e.getPageCount = () => {
      var o;
      return (o = e.options.pageCount) != null ? o : Math.ceil(e.getRowCount() / e.getState().pagination.pageSize);
    }, e.getRowCount = () => {
      var o;
      return (o = e.options.rowCount) != null ? o : e.getPrePaginationRowModel().rows.length;
    };
  }
}, Id = () => ({
  top: [],
  bottom: []
}), f$ = {
  getInitialState: (e) => ({
    rowPinning: Id(),
    ...e
  }),
  getDefaultOptions: (e) => ({
    onRowPinningChange: io("rowPinning", e)
  }),
  createRow: (e, t) => {
    e.pin = (n, o, i) => {
      const s = o ? e.getLeafRows().map((c) => {
        let {
          id: u
        } = c;
        return u;
      }) : [], a = i ? e.getParentRows().map((c) => {
        let {
          id: u
        } = c;
        return u;
      }) : [], l = /* @__PURE__ */ new Set([...a, e.id, ...s]);
      t.setRowPinning((c) => {
        var u, d;
        if (n === "bottom") {
          var p, m;
          return {
            top: ((p = c == null ? void 0 : c.top) != null ? p : []).filter((v) => !(l != null && l.has(v))),
            bottom: [...((m = c == null ? void 0 : c.bottom) != null ? m : []).filter((v) => !(l != null && l.has(v))), ...Array.from(l)]
          };
        }
        if (n === "top") {
          var g, h;
          return {
            top: [...((g = c == null ? void 0 : c.top) != null ? g : []).filter((v) => !(l != null && l.has(v))), ...Array.from(l)],
            bottom: ((h = c == null ? void 0 : c.bottom) != null ? h : []).filter((v) => !(l != null && l.has(v)))
          };
        }
        return {
          top: ((u = c == null ? void 0 : c.top) != null ? u : []).filter((v) => !(l != null && l.has(v))),
          bottom: ((d = c == null ? void 0 : c.bottom) != null ? d : []).filter((v) => !(l != null && l.has(v)))
        };
      });
    }, e.getCanPin = () => {
      var n;
      const {
        enableRowPinning: o,
        enablePinning: i
      } = t.options;
      return typeof o == "function" ? o(e) : (n = o ?? i) != null ? n : !0;
    }, e.getIsPinned = () => {
      const n = [e.id], {
        top: o,
        bottom: i
      } = t.getState().rowPinning, s = n.some((l) => o == null ? void 0 : o.includes(l)), a = n.some((l) => i == null ? void 0 : i.includes(l));
      return s ? "top" : a ? "bottom" : !1;
    }, e.getPinnedIndex = () => {
      var n, o;
      const i = e.getIsPinned();
      if (!i) return -1;
      const s = (n = i === "top" ? t.getTopRows() : t.getBottomRows()) == null ? void 0 : n.map((a) => {
        let {
          id: l
        } = a;
        return l;
      });
      return (o = s == null ? void 0 : s.indexOf(e.id)) != null ? o : -1;
    };
  },
  createTable: (e) => {
    e.setRowPinning = (t) => e.options.onRowPinningChange == null ? void 0 : e.options.onRowPinningChange(t), e.resetRowPinning = (t) => {
      var n, o;
      return e.setRowPinning(t ? Id() : (n = (o = e.initialState) == null ? void 0 : o.rowPinning) != null ? n : Id());
    }, e.getIsSomeRowsPinned = (t) => {
      var n;
      const o = e.getState().rowPinning;
      if (!t) {
        var i, s;
        return !!((i = o.top) != null && i.length || (s = o.bottom) != null && s.length);
      }
      return !!((n = o[t]) != null && n.length);
    }, e._getPinnedRows = (t, n, o) => {
      var i;
      return ((i = e.options.keepPinnedRows) == null || i ? (
        //get all rows that are pinned even if they would not be otherwise visible
        //account for expanded parent rows, but not pagination or filtering
        (n ?? []).map((a) => {
          const l = e.getRow(a, !0);
          return l.getIsAllParentsExpanded() ? l : null;
        })
      ) : (
        //else get only visible rows that are pinned
        (n ?? []).map((a) => t.find((l) => l.id === a))
      )).filter(Boolean).map((a) => ({
        ...a,
        position: o
      }));
    }, e.getTopRows = Ke(() => [e.getRowModel().rows, e.getState().rowPinning.top], (t, n) => e._getPinnedRows(t, n, "top"), Qe(e.options, "debugRows", "getTopRows")), e.getBottomRows = Ke(() => [e.getRowModel().rows, e.getState().rowPinning.bottom], (t, n) => e._getPinnedRows(t, n, "bottom"), Qe(e.options, "debugRows", "getBottomRows")), e.getCenterRows = Ke(() => [e.getRowModel().rows, e.getState().rowPinning.top, e.getState().rowPinning.bottom], (t, n, o) => {
      const i = /* @__PURE__ */ new Set([...n ?? [], ...o ?? []]);
      return t.filter((s) => !i.has(s.id));
    }, Qe(e.options, "debugRows", "getCenterRows"));
  }
}, m$ = {
  getInitialState: (e) => ({
    rowSelection: {},
    ...e
  }),
  getDefaultOptions: (e) => ({
    onRowSelectionChange: io("rowSelection", e),
    enableRowSelection: !0,
    enableMultiRowSelection: !0,
    enableSubRowSelection: !0
    // enableGroupingRowSelection: false,
    // isAdditiveSelectEvent: (e: unknown) => !!e.metaKey,
    // isInclusiveSelectEvent: (e: unknown) => !!e.shiftKey,
  }),
  createTable: (e) => {
    e.setRowSelection = (t) => e.options.onRowSelectionChange == null ? void 0 : e.options.onRowSelectionChange(t), e.resetRowSelection = (t) => {
      var n;
      return e.setRowSelection(t ? {} : (n = e.initialState.rowSelection) != null ? n : {});
    }, e.toggleAllRowsSelected = (t) => {
      e.setRowSelection((n) => {
        t = typeof t < "u" ? t : !e.getIsAllRowsSelected();
        const o = {
          ...n
        }, i = e.getPreGroupedRowModel().flatRows;
        return t ? i.forEach((s) => {
          s.getCanSelect() && (o[s.id] = !0);
        }) : i.forEach((s) => {
          delete o[s.id];
        }), o;
      });
    }, e.toggleAllPageRowsSelected = (t) => e.setRowSelection((n) => {
      const o = typeof t < "u" ? t : !e.getIsAllPageRowsSelected(), i = {
        ...n
      };
      return e.getRowModel().rows.forEach((s) => {
        jp(i, s.id, o, !0, e);
      }), i;
    }), e.getPreSelectedRowModel = () => e.getCoreRowModel(), e.getSelectedRowModel = Ke(() => [e.getState().rowSelection, e.getCoreRowModel()], (t, n) => Object.keys(t).length ? Rd(e, n) : {
      rows: [],
      flatRows: [],
      rowsById: {}
    }, Qe(e.options, "debugTable", "getSelectedRowModel")), e.getFilteredSelectedRowModel = Ke(() => [e.getState().rowSelection, e.getFilteredRowModel()], (t, n) => Object.keys(t).length ? Rd(e, n) : {
      rows: [],
      flatRows: [],
      rowsById: {}
    }, Qe(e.options, "debugTable", "getFilteredSelectedRowModel")), e.getGroupedSelectedRowModel = Ke(() => [e.getState().rowSelection, e.getSortedRowModel()], (t, n) => Object.keys(t).length ? Rd(e, n) : {
      rows: [],
      flatRows: [],
      rowsById: {}
    }, Qe(e.options, "debugTable", "getGroupedSelectedRowModel")), e.getIsAllRowsSelected = () => {
      const t = e.getFilteredRowModel().flatRows, {
        rowSelection: n
      } = e.getState();
      let o = !!(t.length && Object.keys(n).length);
      return o && t.some((i) => i.getCanSelect() && !n[i.id]) && (o = !1), o;
    }, e.getIsAllPageRowsSelected = () => {
      const t = e.getPaginationRowModel().flatRows.filter((i) => i.getCanSelect()), {
        rowSelection: n
      } = e.getState();
      let o = !!t.length;
      return o && t.some((i) => !n[i.id]) && (o = !1), o;
    }, e.getIsSomeRowsSelected = () => {
      var t;
      const n = Object.keys((t = e.getState().rowSelection) != null ? t : {}).length;
      return n > 0 && n < e.getFilteredRowModel().flatRows.length;
    }, e.getIsSomePageRowsSelected = () => {
      const t = e.getPaginationRowModel().flatRows;
      return e.getIsAllPageRowsSelected() ? !1 : t.filter((n) => n.getCanSelect()).some((n) => n.getIsSelected() || n.getIsSomeSelected());
    }, e.getToggleAllRowsSelectedHandler = () => (t) => {
      e.toggleAllRowsSelected(t.target.checked);
    }, e.getToggleAllPageRowsSelectedHandler = () => (t) => {
      e.toggleAllPageRowsSelected(t.target.checked);
    };
  },
  createRow: (e, t) => {
    e.toggleSelected = (n, o) => {
      const i = e.getIsSelected();
      t.setRowSelection((s) => {
        var a;
        if (n = typeof n < "u" ? n : !i, e.getCanSelect() && i === n)
          return s;
        const l = {
          ...s
        };
        return jp(l, e.id, n, (a = o == null ? void 0 : o.selectChildren) != null ? a : !0, t), l;
      });
    }, e.getIsSelected = () => {
      const {
        rowSelection: n
      } = t.getState();
      return Kf(e, n);
    }, e.getIsSomeSelected = () => {
      const {
        rowSelection: n
      } = t.getState();
      return kp(e, n) === "some";
    }, e.getIsAllSubRowsSelected = () => {
      const {
        rowSelection: n
      } = t.getState();
      return kp(e, n) === "all";
    }, e.getCanSelect = () => {
      var n;
      return typeof t.options.enableRowSelection == "function" ? t.options.enableRowSelection(e) : (n = t.options.enableRowSelection) != null ? n : !0;
    }, e.getCanSelectSubRows = () => {
      var n;
      return typeof t.options.enableSubRowSelection == "function" ? t.options.enableSubRowSelection(e) : (n = t.options.enableSubRowSelection) != null ? n : !0;
    }, e.getCanMultiSelect = () => {
      var n;
      return typeof t.options.enableMultiRowSelection == "function" ? t.options.enableMultiRowSelection(e) : (n = t.options.enableMultiRowSelection) != null ? n : !0;
    }, e.getToggleSelectedHandler = () => {
      const n = e.getCanSelect();
      return (o) => {
        var i;
        n && e.toggleSelected((i = o.target) == null ? void 0 : i.checked);
      };
    };
  }
}, jp = (e, t, n, o, i) => {
  var s;
  const a = i.getRow(t, !0);
  n ? (a.getCanMultiSelect() || Object.keys(e).forEach((l) => delete e[l]), a.getCanSelect() && (e[t] = !0)) : delete e[t], o && (s = a.subRows) != null && s.length && a.getCanSelectSubRows() && a.subRows.forEach((l) => jp(e, l.id, n, o, i));
};
function Rd(e, t) {
  const n = e.getState().rowSelection, o = [], i = {}, s = function(a, l) {
    return a.map((c) => {
      var u;
      const d = Kf(c, n);
      if (d && (o.push(c), i[c.id] = c), (u = c.subRows) != null && u.length && (c = {
        ...c,
        subRows: s(c.subRows)
      }), d)
        return c;
    }).filter(Boolean);
  };
  return {
    rows: s(t.rows),
    flatRows: o,
    rowsById: i
  };
}
function Kf(e, t) {
  var n;
  return (n = t[e.id]) != null ? n : !1;
}
function kp(e, t, n) {
  var o;
  if (!((o = e.subRows) != null && o.length)) return !1;
  let i = !0, s = !1;
  return e.subRows.forEach((a) => {
    if (!(s && !i) && (a.getCanSelect() && (Kf(a, t) ? s = !0 : i = !1), a.subRows && a.subRows.length)) {
      const l = kp(a, t);
      l === "all" ? s = !0 : (l === "some" && (s = !0), i = !1);
    }
  }), i ? "all" : s ? "some" : !1;
}
const Fp = /([0-9]+)/gm, g$ = (e, t, n) => Rx(jr(e.getValue(n)).toLowerCase(), jr(t.getValue(n)).toLowerCase()), h$ = (e, t, n) => Rx(jr(e.getValue(n)), jr(t.getValue(n))), b$ = (e, t, n) => Qf(jr(e.getValue(n)).toLowerCase(), jr(t.getValue(n)).toLowerCase()), v$ = (e, t, n) => Qf(jr(e.getValue(n)), jr(t.getValue(n))), y$ = (e, t, n) => {
  const o = e.getValue(n), i = t.getValue(n);
  return o > i ? 1 : o < i ? -1 : 0;
}, x$ = (e, t, n) => Qf(e.getValue(n), t.getValue(n));
function Qf(e, t) {
  return e === t ? 0 : e > t ? 1 : -1;
}
function jr(e) {
  return typeof e == "number" ? isNaN(e) || e === 1 / 0 || e === -1 / 0 ? "" : String(e) : typeof e == "string" ? e : "";
}
function Rx(e, t) {
  const n = e.split(Fp).filter(Boolean), o = t.split(Fp).filter(Boolean);
  for (; n.length && o.length; ) {
    const i = n.shift(), s = o.shift(), a = parseInt(i, 10), l = parseInt(s, 10), c = [a, l].sort();
    if (isNaN(c[0])) {
      if (i > s)
        return 1;
      if (s > i)
        return -1;
      continue;
    }
    if (isNaN(c[1]))
      return isNaN(a) ? -1 : 1;
    if (a > l)
      return 1;
    if (l > a)
      return -1;
  }
  return n.length - o.length;
}
const Zr = {
  alphanumeric: g$,
  alphanumericCaseSensitive: h$,
  text: b$,
  textCaseSensitive: v$,
  datetime: y$,
  basic: x$
}, C$ = {
  getInitialState: (e) => ({
    sorting: [],
    ...e
  }),
  getDefaultColumnDef: () => ({
    sortingFn: "auto",
    sortUndefined: 1
  }),
  getDefaultOptions: (e) => ({
    onSortingChange: io("sorting", e),
    isMultiSortEvent: (t) => t.shiftKey
  }),
  createColumn: (e, t) => {
    e.getAutoSortingFn = () => {
      const n = t.getFilteredRowModel().flatRows.slice(10);
      let o = !1;
      for (const i of n) {
        const s = i == null ? void 0 : i.getValue(e.id);
        if (Object.prototype.toString.call(s) === "[object Date]")
          return Zr.datetime;
        if (typeof s == "string" && (o = !0, s.split(Fp).length > 1))
          return Zr.alphanumeric;
      }
      return o ? Zr.text : Zr.basic;
    }, e.getAutoSortDir = () => {
      const n = t.getFilteredRowModel().flatRows[0];
      return typeof (n == null ? void 0 : n.getValue(e.id)) == "string" ? "asc" : "desc";
    }, e.getSortingFn = () => {
      var n, o;
      if (!e)
        throw new Error();
      return yu(e.columnDef.sortingFn) ? e.columnDef.sortingFn : e.columnDef.sortingFn === "auto" ? e.getAutoSortingFn() : (n = (o = t.options.sortingFns) == null ? void 0 : o[e.columnDef.sortingFn]) != null ? n : Zr[e.columnDef.sortingFn];
    }, e.toggleSorting = (n, o) => {
      const i = e.getNextSortingOrder(), s = typeof n < "u" && n !== null;
      t.setSorting((a) => {
        const l = a == null ? void 0 : a.find((g) => g.id === e.id), c = a == null ? void 0 : a.findIndex((g) => g.id === e.id);
        let u = [], d, p = s ? n : i === "desc";
        if (a != null && a.length && e.getCanMultiSort() && o ? l ? d = "toggle" : d = "add" : a != null && a.length && c !== a.length - 1 ? d = "replace" : l ? d = "toggle" : d = "replace", d === "toggle" && (s || i || (d = "remove")), d === "add") {
          var m;
          u = [...a, {
            id: e.id,
            desc: p
          }], u.splice(0, u.length - ((m = t.options.maxMultiSortColCount) != null ? m : Number.MAX_SAFE_INTEGER));
        } else d === "toggle" ? u = a.map((g) => g.id === e.id ? {
          ...g,
          desc: p
        } : g) : d === "remove" ? u = a.filter((g) => g.id !== e.id) : u = [{
          id: e.id,
          desc: p
        }];
        return u;
      });
    }, e.getFirstSortDir = () => {
      var n, o;
      return ((n = (o = e.columnDef.sortDescFirst) != null ? o : t.options.sortDescFirst) != null ? n : e.getAutoSortDir() === "desc") ? "desc" : "asc";
    }, e.getNextSortingOrder = (n) => {
      var o, i;
      const s = e.getFirstSortDir(), a = e.getIsSorted();
      return a ? a !== s && ((o = t.options.enableSortingRemoval) == null || o) && // If enableSortRemove, enable in general
      (!(n && (i = t.options.enableMultiRemove) != null) || i) ? !1 : a === "desc" ? "asc" : "desc" : s;
    }, e.getCanSort = () => {
      var n, o;
      return ((n = e.columnDef.enableSorting) != null ? n : !0) && ((o = t.options.enableSorting) != null ? o : !0) && !!e.accessorFn;
    }, e.getCanMultiSort = () => {
      var n, o;
      return (n = (o = e.columnDef.enableMultiSort) != null ? o : t.options.enableMultiSort) != null ? n : !!e.accessorFn;
    }, e.getIsSorted = () => {
      var n;
      const o = (n = t.getState().sorting) == null ? void 0 : n.find((i) => i.id === e.id);
      return o ? o.desc ? "desc" : "asc" : !1;
    }, e.getSortIndex = () => {
      var n, o;
      return (n = (o = t.getState().sorting) == null ? void 0 : o.findIndex((i) => i.id === e.id)) != null ? n : -1;
    }, e.clearSorting = () => {
      t.setSorting((n) => n != null && n.length ? n.filter((o) => o.id !== e.id) : []);
    }, e.getToggleSortingHandler = () => {
      const n = e.getCanSort();
      return (o) => {
        n && (o.persist == null || o.persist(), e.toggleSorting == null || e.toggleSorting(void 0, e.getCanMultiSort() ? t.options.isMultiSortEvent == null ? void 0 : t.options.isMultiSortEvent(o) : !1));
      };
    };
  },
  createTable: (e) => {
    e.setSorting = (t) => e.options.onSortingChange == null ? void 0 : e.options.onSortingChange(t), e.resetSorting = (t) => {
      var n, o;
      e.setSorting(t ? [] : (n = (o = e.initialState) == null ? void 0 : o.sorting) != null ? n : []);
    }, e.getPreSortedRowModel = () => e.getGroupedRowModel(), e.getSortedRowModel = () => (!e._getSortedRowModel && e.options.getSortedRowModel && (e._getSortedRowModel = e.options.getSortedRowModel(e)), e.options.manualSorting || !e._getSortedRowModel ? e.getPreSortedRowModel() : e._getSortedRowModel());
  }
}, S$ = [
  HV,
  l$,
  r$,
  i$,
  GV,
  UV,
  c$,
  //depends on ColumnFaceting
  u$,
  //depends on ColumnFiltering
  C$,
  n$,
  //depends on RowSorting
  d$,
  p$,
  f$,
  m$,
  s$
];
function w$(e) {
  var t, n;
  process.env.NODE_ENV !== "production" && (e.debugAll || e.debugTable) && console.info("Creating Table Instance...");
  const o = [...S$, ...(t = e._features) != null ? t : []];
  let i = {
    _features: o
  };
  const s = i._features.reduce((m, g) => Object.assign(m, g.getDefaultOptions == null ? void 0 : g.getDefaultOptions(i)), {}), a = (m) => i.options.mergeOptions ? i.options.mergeOptions(s, m) : {
    ...s,
    ...m
  };
  let c = {
    ...{},
    ...(n = e.initialState) != null ? n : {}
  };
  i._features.forEach((m) => {
    var g;
    c = (g = m.getInitialState == null ? void 0 : m.getInitialState(c)) != null ? g : c;
  });
  const u = [];
  let d = !1;
  const p = {
    _features: o,
    options: {
      ...s,
      ...e
    },
    initialState: c,
    _queue: (m) => {
      u.push(m), d || (d = !0, Promise.resolve().then(() => {
        for (; u.length; )
          u.shift()();
        d = !1;
      }).catch((g) => setTimeout(() => {
        throw g;
      })));
    },
    reset: () => {
      i.setState(i.initialState);
    },
    setOptions: (m) => {
      const g = Rr(m, i.options);
      i.options = a(g);
    },
    getState: () => i.options.state,
    setState: (m) => {
      i.options.onStateChange == null || i.options.onStateChange(m);
    },
    _getRowId: (m, g, h) => {
      var v;
      return (v = i.options.getRowId == null ? void 0 : i.options.getRowId(m, g, h)) != null ? v : `${h ? [h.id, g].join(".") : g}`;
    },
    getCoreRowModel: () => (i._getCoreRowModel || (i._getCoreRowModel = i.options.getCoreRowModel(i)), i._getCoreRowModel()),
    // The final calls start at the bottom of the model,
    // expanded rows, which then work their way up
    getRowModel: () => i.getPaginationRowModel(),
    //in next version, we should just pass in the row model as the optional 2nd arg
    getRow: (m, g) => {
      let h = (g ? i.getPrePaginationRowModel() : i.getRowModel()).rowsById[m];
      if (!h && (h = i.getCoreRowModel().rowsById[m], !h))
        throw process.env.NODE_ENV !== "production" ? new Error(`getRow could not find row with ID: ${m}`) : new Error();
      return h;
    },
    _getDefaultColumnDef: Ke(() => [i.options.defaultColumn], (m) => {
      var g;
      return m = (g = m) != null ? g : {}, {
        header: (h) => {
          const v = h.header.column.columnDef;
          return v.accessorKey ? v.accessorKey : v.accessorFn ? v.id : null;
        },
        // footer: props => props.header.column.id,
        cell: (h) => {
          var v, b;
          return (v = (b = h.renderValue()) == null || b.toString == null ? void 0 : b.toString()) != null ? v : null;
        },
        ...i._features.reduce((h, v) => Object.assign(h, v.getDefaultColumnDef == null ? void 0 : v.getDefaultColumnDef()), {}),
        ...m
      };
    }, Qe(e, "debugColumns", "_getDefaultColumnDef")),
    _getColumnDefs: () => i.options.columns,
    getAllColumns: Ke(() => [i._getColumnDefs()], (m) => {
      const g = function(h, v, b) {
        return b === void 0 && (b = 0), h.map((y) => {
          const C = WV(i, y, b, v), x = y;
          return C.columns = x.columns ? g(x.columns, C, b + 1) : [], C;
        });
      };
      return g(m);
    }, Qe(e, "debugColumns", "getAllColumns")),
    getAllFlatColumns: Ke(() => [i.getAllColumns()], (m) => m.flatMap((g) => g.getFlatColumns()), Qe(e, "debugColumns", "getAllFlatColumns")),
    _getAllFlatColumnsById: Ke(() => [i.getAllFlatColumns()], (m) => m.reduce((g, h) => (g[h.id] = h, g), {}), Qe(e, "debugColumns", "getAllFlatColumnsById")),
    getAllLeafColumns: Ke(() => [i.getAllColumns(), i._getOrderColumnsFn()], (m, g) => {
      let h = m.flatMap((v) => v.getLeafColumns());
      return g(h);
    }, Qe(e, "debugColumns", "getAllLeafColumns")),
    getColumn: (m) => {
      const g = i._getAllFlatColumnsById()[m];
      return process.env.NODE_ENV !== "production" && !g && console.error(`[Table] Column with id '${m}' does not exist.`), g;
    }
  };
  Object.assign(i, p);
  for (let m = 0; m < i._features.length; m++) {
    const g = i._features[m];
    g == null || g.createTable == null || g.createTable(i);
  }
  return i;
}
function T$() {
  return (e) => Ke(() => [e.options.data], (t) => {
    const n = {
      rows: [],
      flatRows: [],
      rowsById: {}
    }, o = function(i, s, a) {
      s === void 0 && (s = 0);
      const l = [];
      for (let u = 0; u < i.length; u++) {
        const d = Ga(e, e._getRowId(i[u], u, a), i[u], u, s, void 0, a == null ? void 0 : a.id);
        if (n.flatRows.push(d), n.rowsById[d.id] = d, l.push(d), e.options.getSubRows) {
          var c;
          d.originalSubRows = e.options.getSubRows(i[u], u), (c = d.originalSubRows) != null && c.length && (d.subRows = o(d.originalSubRows, s + 1, d));
        }
      }
      return l;
    };
    return n.rows = o(t), n;
  }, Qe(e.options, "debugTable", "getRowModel", () => e._autoResetPageIndex()));
}
function I$() {
  return (e) => Ke(() => [e.getState().expanded, e.getPreExpandedRowModel(), e.options.paginateExpandedRows], (t, n, o) => !n.rows.length || t !== !0 && !Object.keys(t ?? {}).length || !o ? n : Ox(n), Qe(e.options, "debugTable", "getExpandedRowModel"));
}
function Ox(e) {
  const t = [], n = (o) => {
    var i;
    t.push(o), (i = o.subRows) != null && i.length && o.getIsExpanded() && o.subRows.forEach(n);
  };
  return e.rows.forEach(n), {
    rows: t,
    flatRows: e.flatRows,
    rowsById: e.rowsById
  };
}
function R$() {
  return (e, t) => Ke(() => {
    var n;
    return [(n = e.getColumn(t)) == null ? void 0 : n.getFacetedRowModel()];
  }, (n) => {
    if (!n) return;
    const o = n.flatRows.flatMap((a) => {
      var l;
      return (l = a.getUniqueValues(t)) != null ? l : [];
    }).map(Number).filter((a) => !Number.isNaN(a));
    if (!o.length) return;
    let i = o[0], s = o[o.length - 1];
    for (const a of o)
      a < i ? i = a : a > s && (s = a);
    return [i, s];
  }, Qe(e.options, "debugTable", "getFacetedMinMaxValues"));
}
function Ex(e, t, n) {
  return n.options.filterFromLeafRows ? O$(e, t, n) : E$(e, t, n);
}
function O$(e, t, n) {
  var o;
  const i = [], s = {}, a = (o = n.options.maxLeafRowFilterDepth) != null ? o : 100, l = function(c, u) {
    u === void 0 && (u = 0);
    const d = [];
    for (let m = 0; m < c.length; m++) {
      var p;
      let g = c[m];
      const h = Ga(n, g.id, g.original, g.index, g.depth, void 0, g.parentId);
      if (h.columnFilters = g.columnFilters, (p = g.subRows) != null && p.length && u < a) {
        if (h.subRows = l(g.subRows, u + 1), g = h, t(g) && !h.subRows.length) {
          d.push(g), s[g.id] = g, i.push(g);
          continue;
        }
        if (t(g) || h.subRows.length) {
          d.push(g), s[g.id] = g, i.push(g);
          continue;
        }
      } else
        g = h, t(g) && (d.push(g), s[g.id] = g, i.push(g));
    }
    return d;
  };
  return {
    rows: l(e),
    flatRows: i,
    rowsById: s
  };
}
function E$(e, t, n) {
  var o;
  const i = [], s = {}, a = (o = n.options.maxLeafRowFilterDepth) != null ? o : 100, l = function(c, u) {
    u === void 0 && (u = 0);
    const d = [];
    for (let m = 0; m < c.length; m++) {
      let g = c[m];
      if (t(g)) {
        var p;
        if ((p = g.subRows) != null && p.length && u < a) {
          const v = Ga(n, g.id, g.original, g.index, g.depth, void 0, g.parentId);
          v.subRows = l(g.subRows, u + 1), g = v;
        }
        d.push(g), i.push(g), s[g.id] = g;
      }
    }
    return d;
  };
  return {
    rows: l(e),
    flatRows: i,
    rowsById: s
  };
}
function P$() {
  return (e, t) => Ke(() => [e.getPreFilteredRowModel(), e.getState().columnFilters, e.getState().globalFilter, e.getFilteredRowModel()], (n, o, i) => {
    if (!n.rows.length || !(o != null && o.length) && !i)
      return n;
    const s = [...o.map((l) => l.id).filter((l) => l !== t), i ? "__global__" : void 0].filter(Boolean), a = (l) => {
      for (let c = 0; c < s.length; c++)
        if (l.columnFilters[s[c]] === !1)
          return !1;
      return !0;
    };
    return Ex(n.rows, a, e);
  }, Qe(e.options, "debugTable", "getFacetedRowModel"));
}
function A$() {
  return (e, t) => Ke(() => {
    var n;
    return [(n = e.getColumn(t)) == null ? void 0 : n.getFacetedRowModel()];
  }, (n) => {
    if (!n) return /* @__PURE__ */ new Map();
    let o = /* @__PURE__ */ new Map();
    for (let s = 0; s < n.flatRows.length; s++) {
      const a = n.flatRows[s].getUniqueValues(t);
      for (let l = 0; l < a.length; l++) {
        const c = a[l];
        if (o.has(c)) {
          var i;
          o.set(c, ((i = o.get(c)) != null ? i : 0) + 1);
        } else
          o.set(c, 1);
      }
    }
    return o;
  }, Qe(e.options, "debugTable", `getFacetedUniqueValues_${t}`));
}
function D$() {
  return (e) => Ke(() => [e.getPreFilteredRowModel(), e.getState().columnFilters, e.getState().globalFilter], (t, n, o) => {
    if (!t.rows.length || !(n != null && n.length) && !o) {
      for (let m = 0; m < t.flatRows.length; m++)
        t.flatRows[m].columnFilters = {}, t.flatRows[m].columnFiltersMeta = {};
      return t;
    }
    const i = [], s = [];
    (n ?? []).forEach((m) => {
      var g;
      const h = e.getColumn(m.id);
      if (!h)
        return;
      const v = h.getFilterFn();
      if (!v) {
        process.env.NODE_ENV !== "production" && console.warn(`Could not find a valid 'column.filterFn' for column with the ID: ${h.id}.`);
        return;
      }
      i.push({
        id: m.id,
        filterFn: v,
        resolvedValue: (g = v.resolveFilterValue == null ? void 0 : v.resolveFilterValue(m.value)) != null ? g : m.value
      });
    });
    const a = (n ?? []).map((m) => m.id), l = e.getGlobalFilterFn(), c = e.getAllLeafColumns().filter((m) => m.getCanGlobalFilter());
    o && l && c.length && (a.push("__global__"), c.forEach((m) => {
      var g;
      s.push({
        id: m.id,
        filterFn: l,
        resolvedValue: (g = l.resolveFilterValue == null ? void 0 : l.resolveFilterValue(o)) != null ? g : o
      });
    }));
    let u, d;
    for (let m = 0; m < t.flatRows.length; m++) {
      const g = t.flatRows[m];
      if (g.columnFilters = {}, i.length)
        for (let h = 0; h < i.length; h++) {
          u = i[h];
          const v = u.id;
          g.columnFilters[v] = u.filterFn(g, v, u.resolvedValue, (b) => {
            g.columnFiltersMeta[v] = b;
          });
        }
      if (s.length) {
        for (let h = 0; h < s.length; h++) {
          d = s[h];
          const v = d.id;
          if (d.filterFn(g, v, d.resolvedValue, (b) => {
            g.columnFiltersMeta[v] = b;
          })) {
            g.columnFilters.__global__ = !0;
            break;
          }
        }
        g.columnFilters.__global__ !== !0 && (g.columnFilters.__global__ = !1);
      }
    }
    const p = (m) => {
      for (let g = 0; g < a.length; g++)
        if (m.columnFilters[a[g]] === !1)
          return !1;
      return !0;
    };
    return Ex(t.rows, p, e);
  }, Qe(e.options, "debugTable", "getFilteredRowModel", () => e._autoResetPageIndex()));
}
function M$() {
  return (e) => Ke(() => [e.getState().grouping, e.getPreGroupedRowModel()], (t, n) => {
    if (!n.rows.length || !t.length)
      return n.rows.forEach((c) => {
        c.depth = 0, c.parentId = void 0;
      }), n;
    const o = t.filter((c) => e.getColumn(c)), i = [], s = {}, a = function(c, u, d) {
      if (u === void 0 && (u = 0), u >= o.length)
        return c.map((h) => (h.depth = u, i.push(h), s[h.id] = h, h.subRows && (h.subRows = a(h.subRows, u + 1, h.id)), h));
      const p = o[u], m = j$(c, p);
      return Array.from(m.entries()).map((h, v) => {
        let [b, y] = h, C = `${p}:${b}`;
        C = d ? `${d}>${C}` : C;
        const x = a(y, u + 1, C);
        x.forEach((R) => {
          R.parentId = C;
        });
        const T = u ? bx(y, (R) => R.subRows) : y, w = Ga(e, C, T[0].original, v, u, void 0, d);
        return Object.assign(w, {
          groupingColumnId: p,
          groupingValue: b,
          subRows: x,
          leafRows: T,
          getValue: (R) => {
            if (o.includes(R)) {
              if (w._valuesCache.hasOwnProperty(R))
                return w._valuesCache[R];
              if (y[0]) {
                var E;
                w._valuesCache[R] = (E = y[0].getValue(R)) != null ? E : void 0;
              }
              return w._valuesCache[R];
            }
            if (w._groupingValuesCache.hasOwnProperty(R))
              return w._groupingValuesCache[R];
            const O = e.getColumn(R), I = O == null ? void 0 : O.getAggregationFn();
            if (I)
              return w._groupingValuesCache[R] = I(R, T, y), w._groupingValuesCache[R];
          }
        }), x.forEach((R) => {
          i.push(R), s[R.id] = R;
        }), w;
      });
    }, l = a(n.rows, 0);
    return l.forEach((c) => {
      i.push(c), s[c.id] = c;
    }), {
      rows: l,
      flatRows: i,
      rowsById: s
    };
  }, Qe(e.options, "debugTable", "getGroupedRowModel", () => {
    e._queue(() => {
      e._autoResetExpanded(), e._autoResetPageIndex();
    });
  }));
}
function j$(e, t) {
  const n = /* @__PURE__ */ new Map();
  return e.reduce((o, i) => {
    const s = `${i.getGroupingValue(t)}`, a = o.get(s);
    return a ? a.push(i) : o.set(s, [i]), o;
  }, n);
}
function k$(e) {
  return (t) => Ke(() => [t.getState().pagination, t.getPrePaginationRowModel(), t.options.paginateExpandedRows ? void 0 : t.getState().expanded], (n, o) => {
    if (!o.rows.length)
      return o;
    const {
      pageSize: i,
      pageIndex: s
    } = n;
    let {
      rows: a,
      flatRows: l,
      rowsById: c
    } = o;
    const u = i * s, d = u + i;
    a = a.slice(u, d);
    let p;
    t.options.paginateExpandedRows ? p = {
      rows: a,
      flatRows: l,
      rowsById: c
    } : p = Ox({
      rows: a,
      flatRows: l,
      rowsById: c
    }), p.flatRows = [];
    const m = (g) => {
      p.flatRows.push(g), g.subRows.length && g.subRows.forEach(m);
    };
    return p.rows.forEach(m), p;
  }, Qe(t.options, "debugTable", "getPaginationRowModel"));
}
function F$() {
  return (e) => Ke(() => [e.getState().sorting, e.getPreSortedRowModel()], (t, n) => {
    if (!n.rows.length || !(t != null && t.length))
      return n;
    const o = e.getState().sorting, i = [], s = o.filter((c) => {
      var u;
      return (u = e.getColumn(c.id)) == null ? void 0 : u.getCanSort();
    }), a = {};
    s.forEach((c) => {
      const u = e.getColumn(c.id);
      u && (a[c.id] = {
        sortUndefined: u.columnDef.sortUndefined,
        invertSorting: u.columnDef.invertSorting,
        sortingFn: u.getSortingFn()
      });
    });
    const l = (c) => {
      const u = c.map((d) => ({
        ...d
      }));
      return u.sort((d, p) => {
        for (let g = 0; g < s.length; g += 1) {
          var m;
          const h = s[g], v = a[h.id], b = v.sortUndefined, y = (m = h == null ? void 0 : h.desc) != null ? m : !1;
          let C = 0;
          if (b) {
            const x = d.getValue(h.id), T = p.getValue(h.id), w = x === void 0, R = T === void 0;
            if (w || R) {
              if (b === "first") return w ? -1 : 1;
              if (b === "last") return w ? 1 : -1;
              C = w && R ? 0 : w ? b : -b;
            }
          }
          if (C === 0 && (C = v.sortingFn(d, p, h.id)), C !== 0)
            return y && (C *= -1), v.invertSorting && (C *= -1), C;
        }
        return d.index - p.index;
      }), u.forEach((d) => {
        var p;
        i.push(d), (p = d.subRows) != null && p.length && (d.subRows = l(d.subRows));
      }), u;
    };
    return {
      rows: l(n.rows),
      flatRows: i,
      rowsById: n.rowsById
    };
  }, Qe(e.options, "debugTable", "getSortedRowModel", () => e._autoResetPageIndex()));
}
/**
   * react-table
   *
   * Copyright (c) TanStack
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   */
function N$(e) {
  const t = {
    state: {},
    // Dummy state
    onStateChange: () => {
    },
    // noop
    renderFallbackValue: null,
    ...e
  }, [n] = S.useState(() => ({
    current: w$(t)
  })), [o, i] = S.useState(() => n.current.initialState);
  return n.current.setOptions((s) => ({
    ...s,
    ...e,
    state: {
      ...o,
      ...e.state
    },
    // Similarly, we'll maintain both our internal state and any user-provided
    // state.
    onStateChange: (a) => {
      i(a), e.onStateChange == null || e.onStateChange(a);
    }
  })), n.current;
}
/**
   * match-sorter-utils
   *
   * Copyright (c) TanStack
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   */
const Px = {
  À: "A",
  Á: "A",
  Â: "A",
  Ã: "A",
  Ä: "A",
  Å: "A",
  Ấ: "A",
  Ắ: "A",
  Ẳ: "A",
  Ẵ: "A",
  Ặ: "A",
  Æ: "AE",
  Ầ: "A",
  Ằ: "A",
  Ȃ: "A",
  Ç: "C",
  Ḉ: "C",
  È: "E",
  É: "E",
  Ê: "E",
  Ë: "E",
  Ế: "E",
  Ḗ: "E",
  Ề: "E",
  Ḕ: "E",
  Ḝ: "E",
  Ȇ: "E",
  Ì: "I",
  Í: "I",
  Î: "I",
  Ï: "I",
  Ḯ: "I",
  Ȋ: "I",
  Ð: "D",
  Ñ: "N",
  Ò: "O",
  Ó: "O",
  Ô: "O",
  Õ: "O",
  Ö: "O",
  Ø: "O",
  Ố: "O",
  Ṍ: "O",
  Ṓ: "O",
  Ȏ: "O",
  Ù: "U",
  Ú: "U",
  Û: "U",
  Ü: "U",
  Ý: "Y",
  à: "a",
  á: "a",
  â: "a",
  ã: "a",
  ä: "a",
  å: "a",
  ấ: "a",
  ắ: "a",
  ẳ: "a",
  ẵ: "a",
  ặ: "a",
  æ: "ae",
  ầ: "a",
  ằ: "a",
  ȃ: "a",
  ç: "c",
  ḉ: "c",
  è: "e",
  é: "e",
  ê: "e",
  ë: "e",
  ế: "e",
  ḗ: "e",
  ề: "e",
  ḕ: "e",
  ḝ: "e",
  ȇ: "e",
  ì: "i",
  í: "i",
  î: "i",
  ï: "i",
  ḯ: "i",
  ȋ: "i",
  ð: "d",
  ñ: "n",
  ò: "o",
  ó: "o",
  ô: "o",
  õ: "o",
  ö: "o",
  ø: "o",
  ố: "o",
  ṍ: "o",
  ṓ: "o",
  ȏ: "o",
  ù: "u",
  ú: "u",
  û: "u",
  ü: "u",
  ý: "y",
  ÿ: "y",
  Ā: "A",
  ā: "a",
  Ă: "A",
  ă: "a",
  Ą: "A",
  ą: "a",
  Ć: "C",
  ć: "c",
  Ĉ: "C",
  ĉ: "c",
  Ċ: "C",
  ċ: "c",
  Č: "C",
  č: "c",
  C̆: "C",
  c̆: "c",
  Ď: "D",
  ď: "d",
  Đ: "D",
  đ: "d",
  Ē: "E",
  ē: "e",
  Ĕ: "E",
  ĕ: "e",
  Ė: "E",
  ė: "e",
  Ę: "E",
  ę: "e",
  Ě: "E",
  ě: "e",
  Ĝ: "G",
  Ǵ: "G",
  ĝ: "g",
  ǵ: "g",
  Ğ: "G",
  ğ: "g",
  Ġ: "G",
  ġ: "g",
  Ģ: "G",
  ģ: "g",
  Ĥ: "H",
  ĥ: "h",
  Ħ: "H",
  ħ: "h",
  Ḫ: "H",
  ḫ: "h",
  Ĩ: "I",
  ĩ: "i",
  Ī: "I",
  ī: "i",
  Ĭ: "I",
  ĭ: "i",
  Į: "I",
  į: "i",
  İ: "I",
  ı: "i",
  Ĳ: "IJ",
  ĳ: "ij",
  Ĵ: "J",
  ĵ: "j",
  Ķ: "K",
  ķ: "k",
  Ḱ: "K",
  ḱ: "k",
  K̆: "K",
  k̆: "k",
  Ĺ: "L",
  ĺ: "l",
  Ļ: "L",
  ļ: "l",
  Ľ: "L",
  ľ: "l",
  Ŀ: "L",
  ŀ: "l",
  Ł: "l",
  ł: "l",
  Ḿ: "M",
  ḿ: "m",
  M̆: "M",
  m̆: "m",
  Ń: "N",
  ń: "n",
  Ņ: "N",
  ņ: "n",
  Ň: "N",
  ň: "n",
  ŉ: "n",
  N̆: "N",
  n̆: "n",
  Ō: "O",
  ō: "o",
  Ŏ: "O",
  ŏ: "o",
  Ő: "O",
  ő: "o",
  Œ: "OE",
  œ: "oe",
  P̆: "P",
  p̆: "p",
  Ŕ: "R",
  ŕ: "r",
  Ŗ: "R",
  ŗ: "r",
  Ř: "R",
  ř: "r",
  R̆: "R",
  r̆: "r",
  Ȓ: "R",
  ȓ: "r",
  Ś: "S",
  ś: "s",
  Ŝ: "S",
  ŝ: "s",
  Ş: "S",
  Ș: "S",
  ș: "s",
  ş: "s",
  Š: "S",
  š: "s",
  Ţ: "T",
  ţ: "t",
  ț: "t",
  Ț: "T",
  Ť: "T",
  ť: "t",
  Ŧ: "T",
  ŧ: "t",
  T̆: "T",
  t̆: "t",
  Ũ: "U",
  ũ: "u",
  Ū: "U",
  ū: "u",
  Ŭ: "U",
  ŭ: "u",
  Ů: "U",
  ů: "u",
  Ű: "U",
  ű: "u",
  Ų: "U",
  ų: "u",
  Ȗ: "U",
  ȗ: "u",
  V̆: "V",
  v̆: "v",
  Ŵ: "W",
  ŵ: "w",
  Ẃ: "W",
  ẃ: "w",
  X̆: "X",
  x̆: "x",
  Ŷ: "Y",
  ŷ: "y",
  Ÿ: "Y",
  Y̆: "Y",
  y̆: "y",
  Ź: "Z",
  ź: "z",
  Ż: "Z",
  ż: "z",
  Ž: "Z",
  ž: "z",
  ſ: "s",
  ƒ: "f",
  Ơ: "O",
  ơ: "o",
  Ư: "U",
  ư: "u",
  Ǎ: "A",
  ǎ: "a",
  Ǐ: "I",
  ǐ: "i",
  Ǒ: "O",
  ǒ: "o",
  Ǔ: "U",
  ǔ: "u",
  Ǖ: "U",
  ǖ: "u",
  Ǘ: "U",
  ǘ: "u",
  Ǚ: "U",
  ǚ: "u",
  Ǜ: "U",
  ǜ: "u",
  Ứ: "U",
  ứ: "u",
  Ṹ: "U",
  ṹ: "u",
  Ǻ: "A",
  ǻ: "a",
  Ǽ: "AE",
  ǽ: "ae",
  Ǿ: "O",
  ǿ: "o",
  Þ: "TH",
  þ: "th",
  Ṕ: "P",
  ṕ: "p",
  Ṥ: "S",
  ṥ: "s",
  X́: "X",
  x́: "x",
  Ѓ: "Г",
  ѓ: "г",
  Ќ: "К",
  ќ: "к",
  A̋: "A",
  a̋: "a",
  E̋: "E",
  e̋: "e",
  I̋: "I",
  i̋: "i",
  Ǹ: "N",
  ǹ: "n",
  Ồ: "O",
  ồ: "o",
  Ṑ: "O",
  ṑ: "o",
  Ừ: "U",
  ừ: "u",
  Ẁ: "W",
  ẁ: "w",
  Ỳ: "Y",
  ỳ: "y",
  Ȁ: "A",
  ȁ: "a",
  Ȅ: "E",
  ȅ: "e",
  Ȉ: "I",
  ȉ: "i",
  Ȍ: "O",
  ȍ: "o",
  Ȑ: "R",
  ȑ: "r",
  Ȕ: "U",
  ȕ: "u",
  B̌: "B",
  b̌: "b",
  Č̣: "C",
  č̣: "c",
  Ê̌: "E",
  ê̌: "e",
  F̌: "F",
  f̌: "f",
  Ǧ: "G",
  ǧ: "g",
  Ȟ: "H",
  ȟ: "h",
  J̌: "J",
  ǰ: "j",
  Ǩ: "K",
  ǩ: "k",
  M̌: "M",
  m̌: "m",
  P̌: "P",
  p̌: "p",
  Q̌: "Q",
  q̌: "q",
  Ř̩: "R",
  ř̩: "r",
  Ṧ: "S",
  ṧ: "s",
  V̌: "V",
  v̌: "v",
  W̌: "W",
  w̌: "w",
  X̌: "X",
  x̌: "x",
  Y̌: "Y",
  y̌: "y",
  A̧: "A",
  a̧: "a",
  B̧: "B",
  b̧: "b",
  Ḑ: "D",
  ḑ: "d",
  Ȩ: "E",
  ȩ: "e",
  Ɛ̧: "E",
  ɛ̧: "e",
  Ḩ: "H",
  ḩ: "h",
  I̧: "I",
  i̧: "i",
  Ɨ̧: "I",
  ɨ̧: "i",
  M̧: "M",
  m̧: "m",
  O̧: "O",
  o̧: "o",
  Q̧: "Q",
  q̧: "q",
  U̧: "U",
  u̧: "u",
  X̧: "X",
  x̧: "x",
  Z̧: "Z",
  z̧: "z"
}, V$ = Object.keys(Px).join("|"), $$ = new RegExp(V$, "g");
function L$(e) {
  return e.replace($$, (t) => Px[t]);
}
/**
 * @name match-sorter
 * @license MIT license.
 * @copyright (c) 2099 Kent C. Dodds
 * @author Kent C. Dodds <me@kentcdodds.com> (https://kentcdodds.com)
 */
const Fn = {
  CASE_SENSITIVE_EQUAL: 7,
  EQUAL: 6,
  STARTS_WITH: 5,
  WORD_STARTS_WITH: 4,
  CONTAINS: 3,
  ACRONYM: 2,
  MATCHES: 1,
  NO_MATCH: 0
};
function _$(e, t, n) {
  var o;
  if (n = n || {}, n.threshold = (o = n.threshold) != null ? o : Fn.MATCHES, !n.accessors) {
    const a = xb(e, t, n);
    return {
      // ends up being duplicate of 'item' in matches but consistent
      rankedValue: e,
      rank: a,
      accessorIndex: -1,
      accessorThreshold: n.threshold,
      passed: a >= n.threshold
    };
  }
  const i = G$(e, n.accessors), s = {
    rankedValue: e,
    rank: Fn.NO_MATCH,
    accessorIndex: -1,
    accessorThreshold: n.threshold,
    passed: !1
  };
  for (let a = 0; a < i.length; a++) {
    const l = i[a];
    let c = xb(l.itemValue, t, n);
    const {
      minRanking: u,
      maxRanking: d,
      threshold: p = n.threshold
    } = l.attributes;
    c < u && c >= Fn.MATCHES ? c = u : c > d && (c = d), c = Math.min(c, d), c >= p && c > s.rank && (s.rank = c, s.passed = !0, s.accessorIndex = a, s.accessorThreshold = p, s.rankedValue = l.itemValue);
  }
  return s;
}
function xb(e, t, n) {
  return e = Cb(e, n), t = Cb(t, n), t.length > e.length ? Fn.NO_MATCH : e === t ? Fn.CASE_SENSITIVE_EQUAL : (e = e.toLowerCase(), t = t.toLowerCase(), e === t ? Fn.EQUAL : e.startsWith(t) ? Fn.STARTS_WITH : e.includes(` ${t}`) ? Fn.WORD_STARTS_WITH : e.includes(t) ? Fn.CONTAINS : t.length === 1 ? Fn.NO_MATCH : B$(e).includes(t) ? Fn.ACRONYM : z$(e, t));
}
function B$(e) {
  let t = "";
  return e.split(" ").forEach((o) => {
    o.split("-").forEach((s) => {
      t += s.substr(0, 1);
    });
  }), t;
}
function z$(e, t) {
  let n = 0, o = 0;
  function i(c, u, d) {
    for (let p = d, m = u.length; p < m; p++)
      if (u[p] === c)
        return n += 1, p + 1;
    return -1;
  }
  function s(c) {
    const u = 1 / c, d = n / t.length;
    return Fn.MATCHES + d * u;
  }
  const a = i(t[0], e, 0);
  if (a < 0)
    return Fn.NO_MATCH;
  o = a;
  for (let c = 1, u = t.length; c < u; c++) {
    const d = t[c];
    if (o = i(d, e, o), !(o > -1))
      return Fn.NO_MATCH;
  }
  const l = o - a;
  return s(l);
}
function W$(e, t) {
  return e.rank === t.rank ? 0 : e.rank > t.rank ? -1 : 1;
}
function Cb(e, t) {
  let {
    keepDiacritics: n
  } = t;
  return e = `${e}`, n || (e = L$(e)), e;
}
function H$(e, t) {
  let n = t;
  typeof t == "object" && (n = t.accessor);
  const o = n(e);
  return o == null ? [] : Array.isArray(o) ? o : [String(o)];
}
function G$(e, t) {
  const n = [];
  for (let o = 0, i = t.length; o < i; o++) {
    const s = t[o], a = U$(s), l = H$(e, s);
    for (let c = 0, u = l.length; c < u; c++)
      n.push({
        itemValue: l[c],
        attributes: a
      });
  }
  return n;
}
const Sb = {
  maxRanking: 1 / 0,
  minRanking: -1 / 0
};
function U$(e) {
  return typeof e == "function" ? Sb : {
    ...Sb,
    ...e
  };
}
function Ri(e, t, n) {
  let o = n.initialDeps ?? [], i;
  return () => {
    var s, a, l, c;
    let u;
    n.key && ((s = n.debug) != null && s.call(n)) && (u = Date.now());
    const d = e();
    if (!(d.length !== o.length || d.some((g, h) => o[h] !== g)))
      return i;
    o = d;
    let m;
    if (n.key && ((a = n.debug) != null && a.call(n)) && (m = Date.now()), i = t(...d), n.key && ((l = n.debug) != null && l.call(n))) {
      const g = Math.round((Date.now() - u) * 100) / 100, h = Math.round((Date.now() - m) * 100) / 100, v = h / 16, b = (y, C) => {
        for (y = String(y); y.length < C; )
          y = " " + y;
        return y;
      };
      console.info(
        `%c⏱ ${b(h, 5)} /${b(g, 5)} ms`,
        `
            font-size: .6rem;
            font-weight: bold;
            color: hsl(${Math.max(
          0,
          Math.min(120 - 120 * v, 120)
        )}deg 100% 31%);`,
        n == null ? void 0 : n.key
      );
    }
    return (c = n == null ? void 0 : n.onChange) == null || c.call(n, i), i;
  };
}
function Od(e, t) {
  if (e === void 0)
    throw new Error("Unexpected undefined");
  return e;
}
const X$ = (e, t) => Math.abs(e - t) < 1, Y$ = (e, t, n) => {
  let o;
  return function(...i) {
    e.clearTimeout(o), o = e.setTimeout(() => t.apply(this, i), n);
  };
}, Z$ = (e) => e, Ax = (e) => {
  const t = Math.max(e.startIndex - e.overscan, 0), n = Math.min(e.endIndex + e.overscan, e.count - 1), o = [];
  for (let i = t; i <= n; i++)
    o.push(i);
  return o;
}, q$ = (e, t) => {
  const n = e.scrollElement;
  if (!n)
    return;
  const o = e.targetWindow;
  if (!o)
    return;
  const i = (a) => {
    const { width: l, height: c } = a;
    t({ width: Math.round(l), height: Math.round(c) });
  };
  if (i(n.getBoundingClientRect()), !o.ResizeObserver)
    return () => {
    };
  const s = new o.ResizeObserver((a) => {
    const l = a[0];
    if (l != null && l.borderBoxSize) {
      const c = l.borderBoxSize[0];
      if (c) {
        i({ width: c.inlineSize, height: c.blockSize });
        return;
      }
    }
    i(n.getBoundingClientRect());
  });
  return s.observe(n, { box: "border-box" }), () => {
    s.unobserve(n);
  };
}, wb = {
  passive: !0
}, J$ = typeof window > "u" ? !0 : "onscrollend" in window, K$ = (e, t) => {
  const n = e.scrollElement;
  if (!n)
    return;
  const o = e.targetWindow;
  if (!o)
    return;
  let i = 0;
  const s = J$ ? () => {
  } : Y$(
    o,
    () => {
      t(i, !1);
    },
    e.options.isScrollingResetDelay
  ), a = (u) => () => {
    const { horizontal: d, isRtl: p } = e.options;
    i = d ? n.scrollLeft * (p && -1 || 1) : n.scrollTop, s(), t(i, u);
  }, l = a(!0), c = a(!1);
  return c(), n.addEventListener("scroll", l, wb), n.addEventListener("scrollend", c, wb), () => {
    n.removeEventListener("scroll", l), n.removeEventListener("scrollend", c);
  };
}, Q$ = (e, t, n) => {
  if (t != null && t.borderBoxSize) {
    const o = t.borderBoxSize[0];
    if (o)
      return Math.round(
        o[n.options.horizontal ? "inlineSize" : "blockSize"]
      );
  }
  return Math.round(
    e.getBoundingClientRect()[n.options.horizontal ? "width" : "height"]
  );
}, eL = (e, {
  adjustments: t = 0,
  behavior: n
}, o) => {
  var i, s;
  const a = e + t;
  (s = (i = o.scrollElement) == null ? void 0 : i.scrollTo) == null || s.call(i, {
    [o.options.horizontal ? "left" : "top"]: a,
    behavior: n
  });
};
class tL {
  constructor(t) {
    this.unsubs = [], this.scrollElement = null, this.targetWindow = null, this.isScrolling = !1, this.scrollToIndexTimeoutId = null, this.measurementsCache = [], this.itemSizeCache = /* @__PURE__ */ new Map(), this.pendingMeasuredCacheIndexes = [], this.scrollRect = null, this.scrollOffset = null, this.scrollDirection = null, this.scrollAdjustments = 0, this.elementsCache = /* @__PURE__ */ new Map(), this.observer = /* @__PURE__ */ (() => {
      let n = null;
      const o = () => n || (!this.targetWindow || !this.targetWindow.ResizeObserver ? null : n = new this.targetWindow.ResizeObserver((i) => {
        i.forEach((s) => {
          this._measureElement(s.target, s);
        });
      }));
      return {
        disconnect: () => {
          var i;
          return (i = o()) == null ? void 0 : i.disconnect();
        },
        observe: (i) => {
          var s;
          return (s = o()) == null ? void 0 : s.observe(i, { box: "border-box" });
        },
        unobserve: (i) => {
          var s;
          return (s = o()) == null ? void 0 : s.unobserve(i);
        }
      };
    })(), this.range = null, this.setOptions = (n) => {
      Object.entries(n).forEach(([o, i]) => {
        typeof i > "u" && delete n[o];
      }), this.options = {
        debug: !1,
        initialOffset: 0,
        overscan: 1,
        paddingStart: 0,
        paddingEnd: 0,
        scrollPaddingStart: 0,
        scrollPaddingEnd: 0,
        horizontal: !1,
        getItemKey: Z$,
        rangeExtractor: Ax,
        onChange: () => {
        },
        measureElement: Q$,
        initialRect: { width: 0, height: 0 },
        scrollMargin: 0,
        gap: 0,
        indexAttribute: "data-index",
        initialMeasurementsCache: [],
        lanes: 1,
        isScrollingResetDelay: 150,
        enabled: !0,
        isRtl: !1,
        ...n
      };
    }, this.notify = (n) => {
      var o, i;
      (i = (o = this.options).onChange) == null || i.call(o, this, n);
    }, this.maybeNotify = Ri(
      () => (this.calculateRange(), [
        this.isScrolling,
        this.range ? this.range.startIndex : null,
        this.range ? this.range.endIndex : null
      ]),
      (n) => {
        this.notify(n);
      },
      {
        key: process.env.NODE_ENV !== "production" && "maybeNotify",
        debug: () => this.options.debug,
        initialDeps: [
          this.isScrolling,
          this.range ? this.range.startIndex : null,
          this.range ? this.range.endIndex : null
        ]
      }
    ), this.cleanup = () => {
      this.unsubs.filter(Boolean).forEach((n) => n()), this.unsubs = [], this.scrollElement = null, this.targetWindow = null, this.observer.disconnect(), this.elementsCache.clear();
    }, this._didMount = () => () => {
      this.cleanup();
    }, this._willUpdate = () => {
      var n;
      const o = this.options.enabled ? this.options.getScrollElement() : null;
      if (this.scrollElement !== o) {
        if (this.cleanup(), !o) {
          this.maybeNotify();
          return;
        }
        this.scrollElement = o, this.scrollElement && "ownerDocument" in this.scrollElement ? this.targetWindow = this.scrollElement.ownerDocument.defaultView : this.targetWindow = ((n = this.scrollElement) == null ? void 0 : n.window) ?? null, this._scrollToOffset(this.getScrollOffset(), {
          adjustments: void 0,
          behavior: void 0
        }), this.unsubs.push(
          this.options.observeElementRect(this, (i) => {
            this.scrollRect = i, this.maybeNotify();
          })
        ), this.unsubs.push(
          this.options.observeElementOffset(this, (i, s) => {
            this.scrollAdjustments = 0, this.scrollDirection = s ? this.getScrollOffset() < i ? "forward" : "backward" : null, this.scrollOffset = i, this.isScrolling = s, this.maybeNotify();
          })
        );
      }
    }, this.getSize = () => this.options.enabled ? (this.scrollRect = this.scrollRect ?? this.options.initialRect, this.scrollRect[this.options.horizontal ? "width" : "height"]) : (this.scrollRect = null, 0), this.getScrollOffset = () => this.options.enabled ? (this.scrollOffset = this.scrollOffset ?? (typeof this.options.initialOffset == "function" ? this.options.initialOffset() : this.options.initialOffset), this.scrollOffset) : (this.scrollOffset = null, 0), this.getFurthestMeasurement = (n, o) => {
      const i = /* @__PURE__ */ new Map(), s = /* @__PURE__ */ new Map();
      for (let a = o - 1; a >= 0; a--) {
        const l = n[a];
        if (i.has(l.lane))
          continue;
        const c = s.get(
          l.lane
        );
        if (c == null || l.end > c.end ? s.set(l.lane, l) : l.end < c.end && i.set(l.lane, !0), i.size === this.options.lanes)
          break;
      }
      return s.size === this.options.lanes ? Array.from(s.values()).sort((a, l) => a.end === l.end ? a.index - l.index : a.end - l.end)[0] : void 0;
    }, this.getMeasurementOptions = Ri(
      () => [
        this.options.count,
        this.options.paddingStart,
        this.options.scrollMargin,
        this.options.getItemKey,
        this.options.enabled
      ],
      (n, o, i, s, a) => (this.pendingMeasuredCacheIndexes = [], {
        count: n,
        paddingStart: o,
        scrollMargin: i,
        getItemKey: s,
        enabled: a
      }),
      {
        key: !1
      }
    ), this.getMeasurements = Ri(
      () => [this.getMeasurementOptions(), this.itemSizeCache],
      ({ count: n, paddingStart: o, scrollMargin: i, getItemKey: s, enabled: a }, l) => {
        if (!a)
          return this.measurementsCache = [], this.itemSizeCache.clear(), [];
        this.measurementsCache.length === 0 && (this.measurementsCache = this.options.initialMeasurementsCache, this.measurementsCache.forEach((d) => {
          this.itemSizeCache.set(d.key, d.size);
        }));
        const c = this.pendingMeasuredCacheIndexes.length > 0 ? Math.min(...this.pendingMeasuredCacheIndexes) : 0;
        this.pendingMeasuredCacheIndexes = [];
        const u = this.measurementsCache.slice(0, c);
        for (let d = c; d < n; d++) {
          const p = s(d), m = this.options.lanes === 1 ? u[d - 1] : this.getFurthestMeasurement(u, d), g = m ? m.end + this.options.gap : o + i, h = l.get(p), v = typeof h == "number" ? h : this.options.estimateSize(d), b = g + v, y = m ? m.lane : d % this.options.lanes;
          u[d] = {
            index: d,
            start: g,
            size: v,
            end: b,
            key: p,
            lane: y
          };
        }
        return this.measurementsCache = u, u;
      },
      {
        key: process.env.NODE_ENV !== "production" && "getMeasurements",
        debug: () => this.options.debug
      }
    ), this.calculateRange = Ri(
      () => [this.getMeasurements(), this.getSize(), this.getScrollOffset()],
      (n, o, i) => this.range = n.length > 0 && o > 0 ? nL({
        measurements: n,
        outerSize: o,
        scrollOffset: i
      }) : null,
      {
        key: process.env.NODE_ENV !== "production" && "calculateRange",
        debug: () => this.options.debug
      }
    ), this.getIndexes = Ri(
      () => [
        this.options.rangeExtractor,
        this.calculateRange(),
        this.options.overscan,
        this.options.count
      ],
      (n, o, i, s) => o === null ? [] : n({
        startIndex: o.startIndex,
        endIndex: o.endIndex,
        overscan: i,
        count: s
      }),
      {
        key: process.env.NODE_ENV !== "production" && "getIndexes",
        debug: () => this.options.debug
      }
    ), this.indexFromElement = (n) => {
      const o = this.options.indexAttribute, i = n.getAttribute(o);
      return i ? parseInt(i, 10) : (console.warn(
        `Missing attribute name '${o}={index}' on measured element.`
      ), -1);
    }, this._measureElement = (n, o) => {
      const i = this.indexFromElement(n), s = this.measurementsCache[i];
      if (!s)
        return;
      const a = s.key, l = this.elementsCache.get(a);
      l !== n && (l && this.observer.unobserve(l), this.observer.observe(n), this.elementsCache.set(a, n)), n.isConnected && this.resizeItem(i, this.options.measureElement(n, o, this));
    }, this.resizeItem = (n, o) => {
      const i = this.measurementsCache[n];
      if (!i)
        return;
      const s = this.itemSizeCache.get(i.key) ?? i.size, a = o - s;
      a !== 0 && ((this.shouldAdjustScrollPositionOnItemSizeChange !== void 0 ? this.shouldAdjustScrollPositionOnItemSizeChange(i, a, this) : i.start < this.getScrollOffset() + this.scrollAdjustments) && (process.env.NODE_ENV !== "production" && this.options.debug && console.info("correction", a), this._scrollToOffset(this.getScrollOffset(), {
        adjustments: this.scrollAdjustments += a,
        behavior: void 0
      })), this.pendingMeasuredCacheIndexes.push(i.index), this.itemSizeCache = new Map(this.itemSizeCache.set(i.key, o)), this.notify(!1));
    }, this.measureElement = (n) => {
      if (!n) {
        this.elementsCache.forEach((o, i) => {
          o.isConnected || (this.observer.unobserve(o), this.elementsCache.delete(i));
        });
        return;
      }
      this._measureElement(n, void 0);
    }, this.getVirtualItems = Ri(
      () => [this.getIndexes(), this.getMeasurements()],
      (n, o) => {
        const i = [];
        for (let s = 0, a = n.length; s < a; s++) {
          const l = n[s], c = o[l];
          i.push(c);
        }
        return i;
      },
      {
        key: process.env.NODE_ENV !== "production" && "getVirtualItems",
        debug: () => this.options.debug
      }
    ), this.getVirtualItemForOffset = (n) => {
      const o = this.getMeasurements();
      if (o.length !== 0)
        return Od(
          o[Dx(
            0,
            o.length - 1,
            (i) => Od(o[i]).start,
            n
          )]
        );
    }, this.getOffsetForAlignment = (n, o) => {
      const i = this.getSize(), s = this.getScrollOffset();
      o === "auto" && (n <= s ? o = "start" : n >= s + i ? o = "end" : o = "start"), o === "start" ? n = n : o === "end" ? n = n - i : o === "center" && (n = n - i / 2);
      const a = this.options.horizontal ? "scrollWidth" : "scrollHeight", c = (this.scrollElement ? "document" in this.scrollElement ? this.scrollElement.document.documentElement[a] : this.scrollElement[a] : 0) - i;
      return Math.max(Math.min(c, n), 0);
    }, this.getOffsetForIndex = (n, o = "auto") => {
      n = Math.max(0, Math.min(n, this.options.count - 1));
      const i = this.measurementsCache[n];
      if (!i)
        return;
      const s = this.getSize(), a = this.getScrollOffset();
      if (o === "auto")
        if (i.end >= a + s - this.options.scrollPaddingEnd)
          o = "end";
        else if (i.start <= a + this.options.scrollPaddingStart)
          o = "start";
        else
          return [a, o];
      const l = o === "end" ? i.end + this.options.scrollPaddingEnd : i.start - this.options.scrollPaddingStart;
      return [this.getOffsetForAlignment(l, o), o];
    }, this.isDynamicMode = () => this.elementsCache.size > 0, this.cancelScrollToIndex = () => {
      this.scrollToIndexTimeoutId !== null && this.targetWindow && (this.targetWindow.clearTimeout(this.scrollToIndexTimeoutId), this.scrollToIndexTimeoutId = null);
    }, this.scrollToOffset = (n, { align: o = "start", behavior: i } = {}) => {
      this.cancelScrollToIndex(), i === "smooth" && this.isDynamicMode() && console.warn(
        "The `smooth` scroll behavior is not fully supported with dynamic size."
      ), this._scrollToOffset(this.getOffsetForAlignment(n, o), {
        adjustments: void 0,
        behavior: i
      });
    }, this.scrollToIndex = (n, { align: o = "auto", behavior: i } = {}) => {
      n = Math.max(0, Math.min(n, this.options.count - 1)), this.cancelScrollToIndex(), i === "smooth" && this.isDynamicMode() && console.warn(
        "The `smooth` scroll behavior is not fully supported with dynamic size."
      );
      const s = this.getOffsetForIndex(n, o);
      if (!s) return;
      const [a, l] = s;
      this._scrollToOffset(a, { adjustments: void 0, behavior: i }), i !== "smooth" && this.isDynamicMode() && this.targetWindow && (this.scrollToIndexTimeoutId = this.targetWindow.setTimeout(() => {
        if (this.scrollToIndexTimeoutId = null, this.elementsCache.has(
          this.options.getItemKey(n)
        )) {
          const [u] = Od(
            this.getOffsetForIndex(n, l)
          );
          X$(u, this.getScrollOffset()) || this.scrollToIndex(n, { align: l, behavior: i });
        } else
          this.scrollToIndex(n, { align: l, behavior: i });
      }));
    }, this.scrollBy = (n, { behavior: o } = {}) => {
      this.cancelScrollToIndex(), o === "smooth" && this.isDynamicMode() && console.warn(
        "The `smooth` scroll behavior is not fully supported with dynamic size."
      ), this._scrollToOffset(this.getScrollOffset() + n, {
        adjustments: void 0,
        behavior: o
      });
    }, this.getTotalSize = () => {
      var n;
      const o = this.getMeasurements();
      let i;
      return o.length === 0 ? i = this.options.paddingStart : i = this.options.lanes === 1 ? ((n = o[o.length - 1]) == null ? void 0 : n.end) ?? 0 : Math.max(
        ...o.slice(-this.options.lanes).map((s) => s.end)
      ), i - this.options.scrollMargin + this.options.paddingEnd;
    }, this._scrollToOffset = (n, {
      adjustments: o,
      behavior: i
    }) => {
      this.options.scrollToFn(n, { behavior: i, adjustments: o }, this);
    }, this.measure = () => {
      this.itemSizeCache = /* @__PURE__ */ new Map(), this.notify(!1);
    }, this.setOptions(t);
  }
}
const Dx = (e, t, n, o) => {
  for (; e <= t; ) {
    const i = (e + t) / 2 | 0, s = n(i);
    if (s < o)
      e = i + 1;
    else if (s > o)
      t = i - 1;
    else
      return i;
  }
  return e > 0 ? e - 1 : 0;
};
function nL({
  measurements: e,
  outerSize: t,
  scrollOffset: n
}) {
  const o = e.length - 1, s = Dx(0, o, (l) => e[l].start, n);
  let a = s;
  for (; a < o && e[a].end < n + t; )
    a++;
  return { startIndex: s, endIndex: a };
}
const oL = typeof document < "u" ? S.useLayoutEffect : S.useEffect;
function rL(e) {
  const t = S.useReducer(() => ({}), {})[1], n = {
    ...e,
    onChange: (i, s) => {
      var a;
      s ? Sw(t) : t(), (a = e.onChange) == null || a.call(e, i, s);
    }
  }, [o] = S.useState(
    () => new tL(n)
  );
  return o.setOptions(n), S.useEffect(() => o._didMount(), []), oL(() => o._willUpdate()), o;
}
function Mx(e) {
  return rL({
    observeElementRect: q$,
    observeElementOffset: K$,
    scrollToFn: eL,
    ...e
  });
}
let Tb = 36, jx = "";
for (; Tb--; )
  jx += Tb.toString(36);
function Ib(e = 11) {
  let t = "", n = e;
  for (; n--; )
    t += jx[Math.random() * 36 | 0];
  return t;
}
const iL = (e) => e.replace(/[|\\{}()[\]^$+*?.-]/g, (t) => `\\${t}`), sL = (e) => e.replace(/\s{2,}/g, " ").split(" ").join("|"), aL = ({
  terms: e,
  matchExactly: t = !1
}) => {
  if (typeof e != "string")
    throw new TypeError("Expected a string");
  const n = iL(e.trim());
  return `(${t ? n : sL(n)})`;
}, lL = ({
  terms: e,
  matchExactly: t = !1
}) => {
  try {
    const n = /^([/~@;%#'])(.*?)\1([gimsuy]*)$/.exec(e);
    return n ? new RegExp(n[2], n[3]) : new RegExp(aL({ terms: e, matchExactly: t }), "ig");
  } catch {
    throw new TypeError("Expected terms to be either a string or a RegExp!");
  }
}, cL = (e) => (t) => t !== null && typeof t == "object" && e in t, vl = cL("match"), yl = (e) => typeof e < "u";
function uL({
  curr: e,
  next: t,
  prev: n,
  clipBy: o = 3
}) {
  const i = e.text.split(" "), s = i.length;
  if (e.match || o >= s)
    return e.text;
  const a = "...";
  return yl(t) && yl(n) && vl(n) && vl(t) ? s > o * 2 ? [
    ...i.slice(0, o),
    a,
    ...i.slice(-o)
  ].join(" ") : e.text : yl(t) && vl(t) ? [a, ...i.slice(-o)].join(" ") : yl(n) && vl(n) ? [...i.slice(0, o), a].join(" ") : e.text;
}
var dL = Object.defineProperty, pL = Object.defineProperties, fL = Object.getOwnPropertyDescriptors, Rb = Object.getOwnPropertySymbols, mL = Object.prototype.hasOwnProperty, gL = Object.prototype.propertyIsEnumerable, Ob = (e, t, n) => t in e ? dL(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[t] = n, xl = (e, t) => {
  for (var n in t || (t = {}))
    mL.call(t, n) && Ob(e, n, t[n]);
  if (Rb)
    for (var n of Rb(t))
      gL.call(t, n) && Ob(e, n, t[n]);
  return e;
}, hL = (e, t) => pL(e, fL(t));
const bL = (e) => e.length > 0, Ed = ({
  text: e,
  query: t,
  clipBy: n,
  matchExactly: o = !1
}) => {
  const i = typeof t == "string" ? t.trim() : t;
  if (i === "")
    return [
      {
        key: Ib(),
        text: e,
        match: !1
      }
    ];
  const s = lL({ terms: t, matchExactly: o });
  return e.split(s).filter(bL).map((a) => ({
    // Compose the object for a match
    key: Ib(),
    text: a,
    match: o ? a.toLowerCase() === i.toLowerCase() : s.test(a)
  })).map((a, l, c) => xl(xl({}, a), typeof n == "number" && {
    // We only overwrite the text if there is a clip
    text: uL(hL(xl(xl({
      curr: a
    }, l < c.length - 1 && { next: c[l + 1] }), l > 0 && { prev: c[l - 1] }), {
      // If this wasn't the first chunk, set the previous chunk
      clipBy: n
    }))
  }));
};
function vL(e) {
  let t = "https://mui.com/production-error/?code=" + e;
  for (let n = 1; n < arguments.length; n += 1)
    t += "&args[]=" + encodeURIComponent(arguments[n]);
  return "Minified MUI error #" + e + "; visit " + t + " for the full message.";
}
const Rn = r.oneOfType([r.func, r.object]);
function yL(e) {
  if (typeof e != "string")
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `capitalize(string)` expects a string argument." : vL(7));
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function Pd(e) {
  return e && e.ownerDocument || document;
}
function xL(e, t) {
  typeof e == "function" ? e(t) : e && (e.current = t);
}
const qo = typeof window < "u" ? S.useLayoutEffect : S.useEffect;
let Eb = 0;
function CL(e) {
  const [t, n] = S.useState(e), o = e || t;
  return S.useEffect(() => {
    t == null && (Eb += 1, n(`mui-${Eb}`));
  }, [t]), o;
}
const Pb = S.useId;
function ps(e) {
  if (Pb !== void 0) {
    const t = Pb();
    return e ?? t;
  }
  return CL(e);
}
function li({
  controlled: e,
  default: t,
  name: n,
  state: o = "value"
}) {
  const {
    current: i
  } = S.useRef(e !== void 0), [s, a] = S.useState(t), l = i ? e : s;
  if (process.env.NODE_ENV !== "production") {
    S.useEffect(() => {
      i !== (e !== void 0) && console.error([`MUI: A component is changing the ${i ? "" : "un"}controlled ${o} state of ${n} to be ${i ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", `Decide between using a controlled or uncontrolled ${n} element for the lifetime of the component.`, "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join(`
`));
    }, [o, n, e]);
    const {
      current: u
    } = S.useRef(t);
    S.useEffect(() => {
      !i && !Object.is(u, t) && console.error([`MUI: A component is changing the default ${o} state of an uncontrolled ${n} after being initialized. To suppress this warning opt to use a controlled ${n}.`].join(`
`));
    }, [JSON.stringify(t)]);
  }
  const c = S.useCallback((u) => {
    i || a(u);
  }, []);
  return [l, c];
}
function Ge(e) {
  const t = S.useRef(e);
  return qo(() => {
    t.current = e;
  }), S.useRef((...n) => (
    // @ts-expect-error hide `this`
    (0, t.current)(...n)
  )).current;
}
function Vn(...e) {
  return S.useMemo(() => e.every((t) => t == null) ? null : (t) => {
    e.forEach((n) => {
      xL(n, t);
    });
  }, e);
}
const SL = {
  border: 0,
  clip: "rect(0 0 0 0)",
  height: "1px",
  margin: "-1px",
  overflow: "hidden",
  padding: 0,
  position: "absolute",
  whiteSpace: "nowrap",
  width: "1px"
};
function xt(e, t, n = void 0) {
  const o = {};
  return Object.keys(e).forEach(
    // `Object.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.
    // @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208
    (i) => {
      o[i] = e[i].reduce((s, a) => {
        if (a) {
          const l = t(a);
          l !== "" && s.push(l), n && n[a] && s.push(n[a]);
        }
        return s;
      }, []).join(" ");
    }
  ), o;
}
const Ab = (e) => e, wL = () => {
  let e = Ab;
  return {
    configure(t) {
      e = t;
    },
    generate(t) {
      return e(t);
    },
    reset() {
      e = Ab;
    }
  };
}, TL = wL(), IL = {
  active: "active",
  checked: "checked",
  completed: "completed",
  disabled: "disabled",
  error: "error",
  expanded: "expanded",
  focused: "focused",
  focusVisible: "focusVisible",
  open: "open",
  readOnly: "readOnly",
  required: "required",
  selected: "selected"
};
function It(e, t, n = "Mui") {
  const o = IL[t];
  return o ? `${n}-${o}` : `${TL.generate(e)}-${t}`;
}
function Ot(e, t, n = "Mui") {
  const o = {};
  return t.forEach((i) => {
    o[i] = It(e, i, n);
  }), o;
}
function RL(e) {
  return typeof e == "string";
}
function OL(e, t, n) {
  return e === void 0 || RL(e) ? t : V({}, t, {
    ownerState: V({}, t.ownerState, n)
  });
}
function EL(e, t = []) {
  if (e === void 0)
    return {};
  const n = {};
  return Object.keys(e).filter((o) => o.match(/^on[A-Z]/) && typeof e[o] == "function" && !t.includes(o)).forEach((o) => {
    n[o] = e[o];
  }), n;
}
function Db(e) {
  if (e === void 0)
    return {};
  const t = {};
  return Object.keys(e).filter((n) => !(n.match(/^on[A-Z]/) && typeof e[n] == "function")).forEach((n) => {
    t[n] = e[n];
  }), t;
}
function PL(e) {
  const {
    getSlotProps: t,
    additionalProps: n,
    externalSlotProps: o,
    externalForwardedProps: i,
    className: s
  } = e;
  if (!t) {
    const g = fe(n == null ? void 0 : n.className, s, i == null ? void 0 : i.className, o == null ? void 0 : o.className), h = V({}, n == null ? void 0 : n.style, i == null ? void 0 : i.style, o == null ? void 0 : o.style), v = V({}, n, i, o);
    return g.length > 0 && (v.className = g), Object.keys(h).length > 0 && (v.style = h), {
      props: v,
      internalRef: void 0
    };
  }
  const a = EL(V({}, i, o)), l = Db(o), c = Db(i), u = t(a), d = fe(u == null ? void 0 : u.className, n == null ? void 0 : n.className, s, i == null ? void 0 : i.className, o == null ? void 0 : o.className), p = V({}, u == null ? void 0 : u.style, n == null ? void 0 : n.style, i == null ? void 0 : i.style, o == null ? void 0 : o.style), m = V({}, u, n, c, l);
  return d.length > 0 && (m.className = d), Object.keys(p).length > 0 && (m.style = p), {
    props: m,
    internalRef: u.ref
  };
}
function kr(e, t, n) {
  return typeof e == "function" ? e(t, n) : e;
}
const AL = ["elementType", "externalSlotProps", "ownerState", "skipResolvingSlotProps"];
function Rt(e) {
  var t;
  const {
    elementType: n,
    externalSlotProps: o,
    ownerState: i,
    skipResolvingSlotProps: s = !1
  } = e, a = Xe(e, AL), l = s ? {} : kr(o, i), {
    props: c,
    internalRef: u
  } = PL(V({}, a, {
    externalSlotProps: l
  })), d = Vn(u, l == null ? void 0 : l.ref, (t = e.additionalProps) == null ? void 0 : t.ref);
  return OL(n, V({}, c, {
    ref: d
  }), i);
}
const Ho = (e, t) => e.length !== t.length ? !1 : t.every((n) => e.includes(n)), em = ({
  openTo: e,
  defaultOpenTo: t,
  views: n,
  defaultViews: o
}) => {
  const i = n ?? o;
  let s;
  if (e != null)
    s = e;
  else if (i.includes(t))
    s = t;
  else if (i.length > 0)
    s = i[0];
  else
    throw new Error("MUI X: The `views` prop must contain at least one view.");
  return {
    views: i,
    openTo: s
  };
}, dc = (e, t, n) => {
  let o = t;
  return o = e.setHours(o, e.getHours(n)), o = e.setMinutes(o, e.getMinutes(n)), o = e.setSeconds(o, e.getSeconds(n)), o = e.setMilliseconds(o, e.getMilliseconds(n)), o;
}, Ks = ({
  date: e,
  disableFuture: t,
  disablePast: n,
  maxDate: o,
  minDate: i,
  isDateDisabled: s,
  utils: a,
  timezone: l
}) => {
  const c = dc(a, a.date(void 0, l), e);
  n && a.isBefore(i, c) && (i = c), t && a.isAfter(o, c) && (o = c);
  let u = e, d = e;
  for (a.isBefore(e, i) && (u = i, d = null), a.isAfter(e, o) && (d && (d = o), u = null); u || d; ) {
    if (u && a.isAfter(u, o) && (u = null), d && a.isBefore(d, i) && (d = null), u) {
      if (!s(u))
        return u;
      u = a.addDays(u, 1);
    }
    if (d) {
      if (!s(d))
        return d;
      d = a.addDays(d, -1);
    }
  }
  return null;
}, DL = (e, t) => t == null || !e.isValid(t) ? null : t, Dn = (e, t, n) => t == null || !e.isValid(t) ? n : t, ML = (e, t, n) => !e.isValid(t) && t != null && !e.isValid(n) && n != null ? !0 : e.isEqual(t, n), tm = (e, t) => {
  const o = [e.startOfYear(t)];
  for (; o.length < 12; ) {
    const i = o[o.length - 1];
    o.push(e.addMonths(i, 1));
  }
  return o;
}, nm = (e, t, n) => n === "date" ? e.startOfDay(e.date(void 0, t)) : e.date(void 0, t), Eo = (e, t) => {
  const n = e.setHours(e.date(), t === "am" ? 2 : 14);
  return e.format(n, "meridiem");
}, jL = ["year", "month", "day"], Ki = (e) => jL.includes(e), wa = (e, {
  format: t,
  views: n
}, o) => {
  if (t != null)
    return t;
  const i = e.formats;
  return Ho(n, ["year"]) ? i.year : Ho(n, ["month"]) ? i.month : Ho(n, ["day"]) ? i.dayOfMonth : Ho(n, ["month", "year"]) ? `${i.month} ${i.year}` : Ho(n, ["day", "month"]) ? `${i.month} ${i.dayOfMonth}` : o ? /en/.test(e.getCurrentLocaleCode()) ? i.normalDateWithWeekday : i.normalDate : i.keyboardDate;
}, kL = (e, t) => {
  const n = e.startOfWeek(t);
  return [0, 1, 2, 3, 4, 5, 6].map((o) => e.addDays(n, o));
}, kx = ["hours", "minutes", "seconds"], Qi = (e) => kx.includes(e), _s = (e) => kx.includes(e) || e === "meridiem", FL = (e, t) => e ? t.getHours(e) >= 12 ? "pm" : "am" : null, Ta = (e, t, n) => n && (e >= 12 ? "pm" : "am") !== t ? t === "am" ? e - 12 : e + 12 : e, NL = (e, t, n, o) => {
  const i = Ta(o.getHours(e), t, n);
  return o.setHours(e, i);
}, Mb = (e, t) => t.getHours(e) * 3600 + t.getMinutes(e) * 60 + t.getSeconds(e), Ua = (e, t) => (n, o) => e ? t.isAfter(n, o) : Mb(n, t) > Mb(o, t), pc = (e, {
  format: t,
  views: n,
  ampm: o
}) => {
  if (t != null)
    return t;
  const i = e.formats;
  return Ho(n, ["hours"]) ? o ? `${i.hours12h} ${i.meridiem}` : i.hours24h : Ho(n, ["minutes"]) ? i.minutes : Ho(n, ["seconds"]) ? i.seconds : Ho(n, ["minutes", "seconds"]) ? `${i.minutes}:${i.seconds}` : Ho(n, ["hours", "minutes", "seconds"]) ? o ? `${i.hours12h}:${i.minutes}:${i.seconds} ${i.meridiem}` : `${i.hours24h}:${i.minutes}:${i.seconds}` : o ? `${i.hours12h}:${i.minutes} ${i.meridiem}` : `${i.hours24h}:${i.minutes}`;
}, Oo = {
  year: 1,
  month: 2,
  day: 3,
  hours: 4,
  minutes: 5,
  seconds: 6,
  milliseconds: 7
}, VL = (e) => Math.max(...e.map((t) => Oo[t.type] ?? 1)), As = (e, t, n) => {
  if (t === Oo.year)
    return e.startOfYear(n);
  if (t === Oo.month)
    return e.startOfMonth(n);
  if (t === Oo.day)
    return e.startOfDay(n);
  let o = n;
  return t < Oo.minutes && (o = e.setMinutes(o, 0)), t < Oo.seconds && (o = e.setSeconds(o, 0)), t < Oo.milliseconds && (o = e.setMilliseconds(o, 0)), o;
}, $L = ({
  props: e,
  utils: t,
  granularity: n,
  timezone: o,
  getTodayDate: i
}) => {
  let s = i ? i() : As(t, n, nm(t, o));
  e.minDate != null && t.isAfterDay(e.minDate, s) && (s = As(t, n, e.minDate)), e.maxDate != null && t.isBeforeDay(e.maxDate, s) && (s = As(t, n, e.maxDate));
  const a = Ua(e.disableIgnoringDatePartForTimeValidation ?? !1, t);
  return e.minTime != null && a(e.minTime, s) && (s = As(t, n, e.disableIgnoringDatePartForTimeValidation ? e.minTime : dc(t, s, e.minTime))), e.maxTime != null && a(s, e.maxTime) && (s = As(t, n, e.disableIgnoringDatePartForTimeValidation ? e.maxTime : dc(t, s, e.maxTime))), s;
}, om = (e, t) => {
  const n = e.formatTokenMap[t];
  if (n == null)
    throw new Error([`MUI X: The token "${t}" is not supported by the Date and Time Pickers.`, "Please try using another token or open an issue on https://github.com/mui/mui-x/issues/new/choose if you think it should be supported."].join(`
`));
  return typeof n == "string" ? {
    type: n,
    contentType: n === "meridiem" ? "letter" : "digit",
    maxLength: void 0
  } : {
    type: n.sectionType,
    contentType: n.contentType,
    maxLength: n.maxLength
  };
}, LL = (e) => {
  switch (e) {
    case "ArrowUp":
      return 1;
    case "ArrowDown":
      return -1;
    case "PageUp":
      return 5;
    case "PageDown":
      return -5;
    default:
      return 0;
  }
}, xu = (e, t, n) => {
  const o = [], i = e.date(void 0, t), s = e.startOfWeek(i), a = e.endOfWeek(i);
  let l = s;
  for (; e.isBefore(l, a); )
    o.push(l), l = e.addDays(l, 1);
  return o.map((c) => e.formatByString(c, n));
}, Fx = (e, t, n, o) => {
  switch (n) {
    case "month":
      return tm(e, e.date(void 0, t)).map((i) => e.formatByString(i, o));
    case "weekDay":
      return xu(e, t, o);
    case "meridiem": {
      const i = e.date(void 0, t);
      return [e.startOfDay(i), e.endOfDay(i)].map((s) => e.formatByString(s, o));
    }
    default:
      return [];
  }
}, jb = "s", _L = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"], BL = (e) => {
  const t = e.date(void 0);
  return e.formatByString(e.setSeconds(t, 0), jb) === "0" ? _L : Array.from({
    length: 10
  }).map((o, i) => e.formatByString(e.setSeconds(t, i), jb));
}, ci = (e, t) => {
  if (t[0] === "0")
    return e;
  const n = [];
  let o = "";
  for (let i = 0; i < e.length; i += 1) {
    o += e[i];
    const s = t.indexOf(o);
    s > -1 && (n.push(s.toString()), o = "");
  }
  return n.join("");
}, rm = (e, t) => t[0] === "0" ? e : e.split("").map((n) => t[Number(n)]).join(""), kb = (e, t) => {
  const n = ci(e, t);
  return n !== " " && !Number.isNaN(Number(n));
}, Nx = (e, t) => {
  let n = e;
  for (n = Number(n).toString(); n.length < t; )
    n = `0${n}`;
  return n;
}, Vx = (e, t, n, o, i) => {
  if (process.env.NODE_ENV !== "production" && i.type !== "day" && i.contentType === "digit-with-letter")
    throw new Error([`MUI X: The token "${i.format}" is a digit format with letter in it.'
             This type of format is only supported for 'day' sections`].join(`
`));
  if (i.type === "day" && i.contentType === "digit-with-letter") {
    const a = e.setDate(n.longestMonth, t);
    return e.formatByString(a, i.format);
  }
  let s = t.toString();
  return i.hasLeadingZerosInInput && (s = Nx(s, i.maxLength)), rm(s, o);
}, zL = (e, t, n, o, i, s, a, l) => {
  const c = LL(o), u = o === "Home", d = o === "End", p = n.value === "" || u || d, m = () => {
    const h = i[n.type]({
      currentDate: a,
      format: n.format,
      contentType: n.contentType
    }), v = (x) => Vx(e, x, h, s, n), b = n.type === "minutes" && (l != null && l.minutesStep) ? l.minutesStep : 1;
    let C = parseInt(ci(n.value, s), 10) + c * b;
    if (p) {
      if (n.type === "year" && !d && !u)
        return e.formatByString(e.date(void 0, t), n.format);
      c > 0 || u ? C = h.minimum : C = h.maximum;
    }
    return C % b !== 0 && ((c < 0 || u) && (C += b - (b + C) % b), (c > 0 || d) && (C -= C % b)), C > h.maximum ? v(h.minimum + (C - h.maximum - 1) % (h.maximum - h.minimum + 1)) : C < h.minimum ? v(h.maximum - (h.minimum - C - 1) % (h.maximum - h.minimum + 1)) : v(C);
  }, g = () => {
    const h = Fx(e, t, n.type, n.format);
    if (h.length === 0)
      return n.value;
    if (p)
      return c > 0 || u ? h[0] : h[h.length - 1];
    const y = ((h.indexOf(n.value) + c) % h.length + h.length) % h.length;
    return h[y];
  };
  return n.contentType === "digit" || n.contentType === "digit-with-letter" ? m() : g();
}, im = (e, t, n) => {
  let o = e.value || e.placeholder;
  const i = t === "non-input" ? e.hasLeadingZerosInFormat : e.hasLeadingZerosInInput;
  return t === "non-input" && e.hasLeadingZerosInInput && !e.hasLeadingZerosInFormat && (o = Number(ci(o, n)).toString()), ["input-rtl", "input-ltr"].includes(t) && e.contentType === "digit" && !i && o.length === 1 && (o = `${o}‎`), t === "input-rtl" && (o = `⁨${o}⁩`), o;
}, Fb = (e, t, n, o) => {
  if (process.env.NODE_ENV !== "production" && om(e, n).type === "weekDay")
    throw new Error("changeSectionValueFormat doesn't support week day formats");
  return e.formatByString(e.parse(t, n), o);
}, $x = (e, t, n) => e.formatByString(e.date(void 0, t), n).length === 4, Lx = (e, t, n, o, i) => {
  if (n !== "digit")
    return !1;
  const s = e.date(void 0, t);
  switch (o) {
    case "year":
      return $x(e, t, i) ? e.formatByString(e.setYear(s, 1), i) === "0001" : e.formatByString(e.setYear(s, 2001), i) === "01";
    case "month":
      return e.formatByString(e.startOfYear(s), i).length > 1;
    case "day":
      return e.formatByString(e.startOfMonth(s), i).length > 1;
    case "weekDay":
      return e.formatByString(e.startOfWeek(s), i).length > 1;
    case "hours":
      return e.formatByString(e.setHours(s, 1), i).length > 1;
    case "minutes":
      return e.formatByString(e.setMinutes(s, 1), i).length > 1;
    case "seconds":
      return e.formatByString(e.setSeconds(s, 1), i).length > 1;
    default:
      throw new Error("Invalid section type");
  }
}, WL = (e, t, n) => {
  const o = t.some((c) => c.type === "day"), i = [], s = [];
  for (let c = 0; c < t.length; c += 1) {
    const u = t[c];
    o && u.type === "weekDay" || (i.push(u.format), s.push(im(u, "non-input", n)));
  }
  const a = i.join(" "), l = s.join(" ");
  return e.parse(l, a);
}, HL = (e) => e.map((t) => `${t.startSeparator}${t.value || t.placeholder}${t.endSeparator}`).join(""), GL = (e, t, n) => {
  const i = e.map((s) => {
    const a = im(s, n ? "input-rtl" : "input-ltr", t);
    return `${s.startSeparator}${a}${s.endSeparator}`;
  }).join("");
  return n ? `⁦${i}⁩` : i;
}, UL = (e, t, n) => {
  const o = e.date(void 0, n), i = e.endOfYear(o), s = e.endOfDay(o), {
    maxDaysInMonth: a,
    longestMonth: l
  } = tm(e, o).reduce((c, u) => {
    const d = e.getDaysInMonth(u);
    return d > c.maxDaysInMonth ? {
      maxDaysInMonth: d,
      longestMonth: u
    } : c;
  }, {
    maxDaysInMonth: 0,
    longestMonth: null
  });
  return {
    year: ({
      format: c
    }) => ({
      minimum: 0,
      maximum: $x(e, n, c) ? 9999 : 99
    }),
    month: () => ({
      minimum: 1,
      // Assumption: All years have the same amount of months
      maximum: e.getMonth(i) + 1
    }),
    day: ({
      currentDate: c
    }) => ({
      minimum: 1,
      maximum: c != null && e.isValid(c) ? e.getDaysInMonth(c) : a,
      longestMonth: l
    }),
    weekDay: ({
      format: c,
      contentType: u
    }) => {
      if (u === "digit") {
        const d = xu(e, n, c).map(Number);
        return {
          minimum: Math.min(...d),
          maximum: Math.max(...d)
        };
      }
      return {
        minimum: 1,
        maximum: 7
      };
    },
    hours: ({
      format: c
    }) => {
      const u = e.getHours(s);
      return ci(e.formatByString(e.endOfDay(o), c), t) !== u.toString() ? {
        minimum: 1,
        maximum: Number(ci(e.formatByString(e.startOfDay(o), c), t))
      } : {
        minimum: 0,
        maximum: u
      };
    },
    minutes: () => ({
      minimum: 0,
      // Assumption: All years have the same amount of minutes
      maximum: e.getMinutes(s)
    }),
    seconds: () => ({
      minimum: 0,
      // Assumption: All years have the same amount of seconds
      maximum: e.getSeconds(s)
    }),
    meridiem: () => ({
      minimum: 0,
      maximum: 1
    }),
    empty: () => ({
      minimum: 0,
      maximum: 0
    })
  };
};
let Nb = !1;
const Vb = (e, t) => {
  if (process.env.NODE_ENV !== "production" && !Nb) {
    const n = ["empty"];
    ["date", "date-time"].includes(t) && n.push("weekDay", "day", "month", "year"), ["time", "date-time"].includes(t) && n.push("hours", "minutes", "seconds", "meridiem");
    const o = e.find((i) => !n.includes(i.type));
    o && (console.warn(`MUI X: The field component you are using is not compatible with the "${o.type}" date section.`, `The supported date sections are ["${n.join('", "')}"]\`.`), Nb = !0);
  }
}, XL = (e, t, n, o, i) => {
  switch (n.type) {
    case "year":
      return e.setYear(i, e.getYear(o));
    case "month":
      return e.setMonth(i, e.getMonth(o));
    case "weekDay": {
      const s = xu(e, t, n.format), a = e.formatByString(o, n.format), l = s.indexOf(a), u = s.indexOf(n.value) - l;
      return e.addDays(o, u);
    }
    case "day":
      return e.setDate(i, e.getDate(o));
    case "meridiem": {
      const s = e.getHours(o) < 12, a = e.getHours(i);
      return s && a >= 12 ? e.addHours(i, -12) : !s && a < 12 ? e.addHours(i, 12) : i;
    }
    case "hours":
      return e.setHours(i, e.getHours(o));
    case "minutes":
      return e.setMinutes(i, e.getMinutes(o));
    case "seconds":
      return e.setSeconds(i, e.getSeconds(o));
    default:
      return i;
  }
}, $b = {
  year: 1,
  month: 2,
  day: 3,
  weekDay: 4,
  hours: 5,
  minutes: 6,
  seconds: 7,
  meridiem: 8,
  empty: 9
}, Lb = (e, t, n, o, i, s) => (
  // cloning sections before sort to avoid mutating it
  [...o].sort((a, l) => $b[a.type] - $b[l.type]).reduce((a, l) => !s || l.modified ? XL(e, t, l, n, a) : a, i)
), YL = () => navigator.userAgent.toLowerCase().includes("android"), ZL = (e, t) => {
  const n = {};
  if (!t)
    return e.forEach((c, u) => {
      const d = u === 0 ? null : u - 1, p = u === e.length - 1 ? null : u + 1;
      n[u] = {
        leftIndex: d,
        rightIndex: p
      };
    }), {
      neighbors: n,
      startIndex: 0,
      endIndex: e.length - 1
    };
  const o = {}, i = {};
  let s = 0, a = 0, l = e.length - 1;
  for (; l >= 0; ) {
    a = e.findIndex(
      // eslint-disable-next-line @typescript-eslint/no-loop-func
      (c, u) => {
        var d;
        return u >= s && ((d = c.endSeparator) == null ? void 0 : d.includes(" ")) && // Special case where the spaces were not there in the initial input
        c.endSeparator !== " / ";
      }
    ), a === -1 && (a = e.length - 1);
    for (let c = a; c >= s; c -= 1)
      i[c] = l, o[l] = c, l -= 1;
    s = a + 1;
  }
  return e.forEach((c, u) => {
    const d = i[u], p = d === 0 ? null : o[d - 1], m = d === e.length - 1 ? null : o[d + 1];
    n[u] = {
      leftIndex: p,
      rightIndex: m
    };
  }), {
    neighbors: n,
    startIndex: o[0],
    endIndex: o[e.length - 1]
  };
}, Np = (e, t) => e == null ? null : e === "all" ? "all" : typeof e == "string" ? t.findIndex((n) => n.type === e) : e, qL = (e, t) => {
  if (e.value)
    switch (e.type) {
      case "month": {
        if (e.contentType === "digit")
          return t.format(t.setMonth(t.date(), Number(e.value) - 1), "month");
        const n = t.parse(e.value, e.format);
        return n ? t.format(n, "month") : void 0;
      }
      case "day":
        return e.contentType === "digit" ? t.format(t.setDate(t.startOfYear(t.date()), Number(e.value)), "dayOfMonthFull") : e.value;
      case "weekDay":
        return;
      default:
        return;
    }
}, JL = (e, t) => {
  if (e.value)
    switch (e.type) {
      case "weekDay":
        return e.contentType === "letter" ? void 0 : Number(e.value);
      case "meridiem": {
        const n = t.parse(`01:00 ${e.value}`, `${t.formats.hours12h}:${t.formats.minutes} ${e.format}`);
        return n ? t.getHours(n) >= 12 ? 1 : 0 : void 0;
      }
      case "day":
        return e.contentType === "digit-with-letter" ? parseInt(e.value, 10) : Number(e.value);
      case "month": {
        if (e.contentType === "digit")
          return Number(e.value);
        const n = t.parse(e.value, e.format);
        return n ? t.getMonth(n) + 1 : void 0;
      }
      default:
        return e.contentType !== "letter" ? Number(e.value) : void 0;
    }
}, KL = ["value", "referenceDate"], rn = {
  emptyValue: null,
  getTodayValue: nm,
  getInitialReferenceValue: (e) => {
    let {
      value: t,
      referenceDate: n
    } = e, o = Xe(e, KL);
    return t != null && o.utils.isValid(t) ? t : n ?? $L(o);
  },
  cleanValue: DL,
  areValuesEqual: ML,
  isSameError: (e, t) => e === t,
  hasError: (e) => e != null,
  defaultErrorState: null,
  getTimezone: (e, t) => t == null || !e.isValid(t) ? null : e.getTimezone(t),
  setTimezone: (e, t, n) => n == null ? null : e.setTimezone(n, t)
}, sm = {
  updateReferenceValue: (e, t, n) => t == null || !e.isValid(t) ? n : t,
  getSectionsFromValue: (e, t, n, o) => !e.isValid(t) && !!n ? n : o(t),
  getV7HiddenInputValueFromSections: HL,
  getV6InputValueFromSections: GL,
  getActiveDateManager: (e, t) => ({
    date: t.value,
    referenceDate: t.referenceValue,
    getSections: (n) => n,
    getNewValuesFromNewActiveDate: (n) => ({
      value: n,
      referenceValue: n == null || !e.isValid(n) ? t.referenceValue : n
    })
  }),
  parseValueStr: (e, t, n) => n(e.trim(), t)
}, QL = ["localeText"], fc = /* @__PURE__ */ S.createContext(null);
process.env.NODE_ENV !== "production" && (fc.displayName = "MuiPickersAdapterContext");
const am = function(t) {
  const {
    localeText: n
  } = t, o = Xe(t, QL), {
    utils: i,
    localeText: s
  } = S.useContext(fc) ?? {
    utils: void 0,
    localeText: void 0
  }, a = at({
    // We don't want to pass the `localeText` prop to the theme, that way it will always return the theme value,
    // We will then merge this theme value with our value manually
    props: o,
    name: "MuiLocalizationProvider"
  }), {
    children: l,
    dateAdapter: c,
    dateFormats: u,
    dateLibInstance: d,
    adapterLocale: p,
    localeText: m
  } = a, g = S.useMemo(() => V({}, m, s, n), [m, s, n]), h = S.useMemo(() => {
    if (!c)
      return i || null;
    const y = new c({
      locale: p,
      formats: u,
      instance: d
    });
    if (!y.isMUIAdapter)
      throw new Error(["MUI X: The date adapter should be imported from `@mui/x-date-pickers` or `@mui/x-date-pickers-pro`, not from `@date-io`", "For example, `import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'` instead of `import AdapterDayjs from '@date-io/dayjs'`", "More information on the installation documentation: https://mui.com/x/react-date-pickers/getting-started/#installation"].join(`
`));
    return y;
  }, [c, p, u, d, i]), v = S.useMemo(() => h ? {
    minDate: h.date("1900-01-01T00:00:00.000"),
    maxDate: h.date("2099-12-31T00:00:00.000")
  } : null, [h]), b = S.useMemo(() => ({
    utils: h,
    defaultDates: v,
    localeText: g
  }), [v, h, g]);
  return /* @__PURE__ */ f.jsx(fc.Provider, {
    value: b,
    children: l
  });
};
process.env.NODE_ENV !== "production" && (am.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Locale for the date library you are using
   */
  adapterLocale: r.any,
  children: r.node,
  /**
   * Date library adapter class function.
   * @see See the localization provider {@link https://mui.com/x/react-date-pickers/getting-started/#setup-your-date-library-adapter date adapter setup section} for more details.
   */
  dateAdapter: r.func,
  /**
   * Formats that are used for any child pickers
   */
  dateFormats: r.shape({
    dayOfMonth: r.string,
    dayOfMonthFull: r.string,
    fullDate: r.string,
    fullTime: r.string,
    fullTime12h: r.string,
    fullTime24h: r.string,
    hours12h: r.string,
    hours24h: r.string,
    keyboardDate: r.string,
    keyboardDateTime: r.string,
    keyboardDateTime12h: r.string,
    keyboardDateTime24h: r.string,
    meridiem: r.string,
    minutes: r.string,
    month: r.string,
    monthShort: r.string,
    normalDate: r.string,
    normalDateWithWeekday: r.string,
    seconds: r.string,
    shortDate: r.string,
    weekday: r.string,
    weekdayShort: r.string,
    year: r.string
  }),
  /**
   * Date library instance you are using, if it has some global overrides
   * ```jsx
   * dateLibInstance={momentTimeZone}
   * ```
   */
  dateLibInstance: r.any,
  /**
   * Locale for components texts
   */
  localeText: r.object
});
const e_ = (e) => ({
  components: {
    MuiLocalizationProvider: {
      defaultProps: {
        localeText: V({}, e)
      }
    }
  }
}), fs = (e) => {
  const {
    utils: t,
    formatKey: n,
    contextTranslation: o,
    propsTranslation: i
  } = e;
  return (s) => {
    const a = s !== null && t.isValid(s) ? t.format(s, n) : null;
    return (i ?? o)(s, t, a);
  };
}, _x = {
  // Calendar navigation
  previousMonth: "Previous month",
  nextMonth: "Next month",
  // View navigation
  openPreviousView: "Open previous view",
  openNextView: "Open next view",
  calendarViewSwitchingButtonAriaLabel: (e) => e === "year" ? "year view is open, switch to calendar view" : "calendar view is open, switch to year view",
  // DateRange labels
  start: "Start",
  end: "End",
  startDate: "Start date",
  startTime: "Start time",
  endDate: "End date",
  endTime: "End time",
  // Action bar
  cancelButtonLabel: "Cancel",
  clearButtonLabel: "Clear",
  okButtonLabel: "OK",
  todayButtonLabel: "Today",
  // Toolbar titles
  datePickerToolbarTitle: "Select date",
  dateTimePickerToolbarTitle: "Select date & time",
  timePickerToolbarTitle: "Select time",
  dateRangePickerToolbarTitle: "Select date range",
  // Clock labels
  clockLabelText: (e, t, n, o) => `Select ${e}. ${!o && (t === null || !n.isValid(t)) ? "No time selected" : `Selected time is ${o ?? n.format(t, "fullTime")}`}`,
  hoursClockNumberText: (e) => `${e} hours`,
  minutesClockNumberText: (e) => `${e} minutes`,
  secondsClockNumberText: (e) => `${e} seconds`,
  // Digital clock labels
  selectViewText: (e) => `Select ${e}`,
  // Calendar labels
  calendarWeekNumberHeaderLabel: "Week number",
  calendarWeekNumberHeaderText: "#",
  calendarWeekNumberAriaLabelText: (e) => `Week ${e}`,
  calendarWeekNumberText: (e) => `${e}`,
  // Open picker labels
  openDatePickerDialogue: (e, t, n) => n || e !== null && t.isValid(e) ? `Choose date, selected date is ${n ?? t.format(e, "fullDate")}` : "Choose date",
  openTimePickerDialogue: (e, t, n) => n || e !== null && t.isValid(e) ? `Choose time, selected time is ${n ?? t.format(e, "fullTime")}` : "Choose time",
  fieldClearLabel: "Clear",
  // Table labels
  timeTableLabel: "pick time",
  dateTableLabel: "pick date",
  // Field section placeholders
  fieldYearPlaceholder: (e) => "Y".repeat(e.digitAmount),
  fieldMonthPlaceholder: (e) => e.contentType === "letter" ? "MMMM" : "MM",
  fieldDayPlaceholder: () => "DD",
  fieldWeekDayPlaceholder: (e) => e.contentType === "letter" ? "EEEE" : "EE",
  fieldHoursPlaceholder: () => "hh",
  fieldMinutesPlaceholder: () => "mm",
  fieldSecondsPlaceholder: () => "ss",
  fieldMeridiemPlaceholder: () => "aa",
  // View names
  year: "Year",
  month: "Month",
  day: "Day",
  weekDay: "Week day",
  hours: "Hours",
  minutes: "Minutes",
  seconds: "Seconds",
  meridiem: "Meridiem",
  // Common
  empty: "Empty"
}, t_ = _x;
e_(_x);
const mi = () => {
  const e = S.useContext(fc);
  if (e === null)
    throw new Error(["MUI X: Can not find the date and time pickers localization context.", "It looks like you forgot to wrap your component in LocalizationProvider.", "This can also happen if you are bundling multiple versions of the `@mui/x-date-pickers` package"].join(`
`));
  if (e.utils === null)
    throw new Error(["MUI X: Can not find the date and time pickers adapter from its localization context.", "It looks like you forgot to pass a `dateAdapter` to your LocalizationProvider."].join(`
`));
  const t = S.useMemo(() => V({}, t_, e.localeText), [e.localeText]);
  return S.useMemo(() => V({}, e, {
    localeText: t
  }), [e, t]);
}, gt = () => mi().utils, gi = () => mi().defaultDates, hi = (e) => {
  const t = gt(), n = S.useRef();
  return n.current === void 0 && (n.current = t.date(void 0, e)), n.current;
};
function Bx(e) {
  return It("MuiPickersToolbar", e);
}
const n_ = Ot("MuiPickersToolbar", ["root", "content"]), o_ = ["children", "className", "toolbarTitle", "hidden", "titleId", "isLandscape", "classes", "landscapeDirection"], r_ = (e) => {
  const {
    classes: t,
    isLandscape: n
  } = e;
  return xt({
    root: ["root"],
    content: ["content"],
    penIconButton: ["penIconButton", n && "penIconButtonLandscape"]
  }, Bx, t);
}, i_ = Q("div", {
  name: "MuiPickersToolbar",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})(({
  theme: e
}) => ({
  display: "flex",
  flexDirection: "column",
  alignItems: "flex-start",
  justifyContent: "space-between",
  padding: e.spacing(2, 3),
  variants: [{
    props: {
      isLandscape: !0
    },
    style: {
      height: "auto",
      maxWidth: 160,
      padding: 16,
      justifyContent: "flex-start",
      flexWrap: "wrap"
    }
  }]
})), s_ = Q("div", {
  name: "MuiPickersToolbar",
  slot: "Content",
  overridesResolver: (e, t) => t.content
})({
  display: "flex",
  flexWrap: "wrap",
  width: "100%",
  flex: 1,
  justifyContent: "space-between",
  alignItems: "center",
  flexDirection: "row",
  variants: [{
    props: {
      isLandscape: !0
    },
    style: {
      justifyContent: "flex-start",
      alignItems: "flex-start",
      flexDirection: "column"
    }
  }, {
    props: {
      isLandscape: !0,
      landscapeDirection: "row"
    },
    style: {
      flexDirection: "row"
    }
  }]
}), lm = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiPickersToolbar"
  }), {
    children: i,
    className: s,
    toolbarTitle: a,
    hidden: l,
    titleId: c
  } = o, u = Xe(o, o_), d = o, p = r_(d);
  return l ? null : /* @__PURE__ */ f.jsxs(i_, V({
    ref: n,
    className: fe(p.root, s),
    ownerState: d
  }, u, {
    children: [/* @__PURE__ */ f.jsx(Fe, {
      color: "text.secondary",
      variant: "overline",
      id: c,
      children: a
    }), /* @__PURE__ */ f.jsx(s_, {
      className: p.content,
      ownerState: d,
      children: i
    })]
  }));
}), pn = () => mi().localeText;
function a_(e) {
  return It("MuiDatePickerToolbar", e);
}
Ot("MuiDatePickerToolbar", ["root", "title"]);
const l_ = ["value", "isLandscape", "onChange", "toolbarFormat", "toolbarPlaceholder", "views", "className", "onViewChange", "view"], c_ = (e) => {
  const {
    classes: t
  } = e;
  return xt({
    root: ["root"],
    title: ["title"]
  }, a_, t);
}, u_ = Q(lm, {
  name: "MuiDatePickerToolbar",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), d_ = Q(Fe, {
  name: "MuiDatePickerToolbar",
  slot: "Title",
  overridesResolver: (e, t) => t.title
})({
  variants: [{
    props: {
      isLandscape: !0
    },
    style: {
      margin: "auto 16px auto auto"
    }
  }]
}), zx = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiDatePickerToolbar"
  }), {
    value: i,
    isLandscape: s,
    toolbarFormat: a,
    toolbarPlaceholder: l = "––",
    views: c,
    className: u
  } = o, d = Xe(o, l_), p = gt(), m = pn(), g = c_(o), h = S.useMemo(() => {
    if (!i)
      return l;
    const b = wa(p, {
      format: a,
      views: c
    }, !0);
    return p.formatByString(i, b);
  }, [i, a, l, p, c]), v = o;
  return /* @__PURE__ */ f.jsx(u_, V({
    ref: n,
    toolbarTitle: m.datePickerToolbarTitle,
    isLandscape: s,
    className: fe(g.root, u)
  }, d, {
    children: /* @__PURE__ */ f.jsx(d_, {
      variant: "h4",
      align: s ? "left" : "center",
      ownerState: v,
      className: g.title,
      children: h
    })
  }));
});
process.env.NODE_ENV !== "production" && (zx.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  className: r.string,
  disabled: r.bool,
  /**
   * If `true`, show the toolbar even in desktop mode.
   * @default `true` for Desktop, `false` for Mobile.
   */
  hidden: r.bool,
  isLandscape: r.bool.isRequired,
  onChange: r.func.isRequired,
  /**
   * Callback called when a toolbar is clicked
   * @template TView
   * @param {TView} view The view to open
   */
  onViewChange: r.func.isRequired,
  readOnly: r.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  titleId: r.string,
  /**
   * Toolbar date format.
   */
  toolbarFormat: r.string,
  /**
   * Toolbar value placeholder—it is displayed when the value is empty.
   * @default "––"
   */
  toolbarPlaceholder: r.node,
  value: r.object,
  /**
   * Currently visible picker view.
   */
  view: r.oneOf(["day", "month", "year"]).isRequired,
  /**
   * Available views.
   */
  views: r.arrayOf(r.oneOf(["day", "month", "year"]).isRequired).isRequired
});
function Wx(e, t) {
  const n = gt(), o = gi(), i = at({
    props: e,
    name: t
  }), s = S.useMemo(() => {
    var a;
    return ((a = i.localeText) == null ? void 0 : a.toolbarTitle) == null ? i.localeText : V({}, i.localeText, {
      datePickerToolbarTitle: i.localeText.toolbarTitle
    });
  }, [i.localeText]);
  return V({}, i, {
    localeText: s
  }, em({
    views: i.views,
    openTo: i.openTo,
    defaultViews: ["year", "day"],
    defaultOpenTo: "day"
  }), {
    disableFuture: i.disableFuture ?? !1,
    disablePast: i.disablePast ?? !1,
    minDate: Dn(n, i.minDate, o.minDate),
    maxDate: Dn(n, i.maxDate, o.maxDate),
    slots: V({
      toolbar: zx
    }, i.slots)
  });
}
const ms = ({
  props: e,
  value: t,
  timezone: n,
  adapter: o
}) => {
  if (t === null)
    return null;
  const {
    shouldDisableDate: i,
    shouldDisableMonth: s,
    shouldDisableYear: a,
    disablePast: l,
    disableFuture: c
  } = e, u = o.utils.date(void 0, n), d = Dn(o.utils, e.minDate, o.defaultDates.minDate), p = Dn(o.utils, e.maxDate, o.defaultDates.maxDate);
  switch (!0) {
    case !o.utils.isValid(t):
      return "invalidDate";
    case !!(i && i(t)):
      return "shouldDisableDate";
    case !!(s && s(t)):
      return "shouldDisableMonth";
    case !!(a && a(t)):
      return "shouldDisableYear";
    case !!(c && o.utils.isAfterDay(t, u)):
      return "disableFuture";
    case !!(l && o.utils.isBeforeDay(t, u)):
      return "disablePast";
    case !!(d && o.utils.isBeforeDay(t, d)):
      return "minDate";
    case !!(p && o.utils.isAfterDay(t, p)):
      return "maxDate";
    default:
      return null;
  }
};
ms.valueManager = rn;
const Xa = ({
  adapter: e,
  value: t,
  timezone: n,
  props: o
}) => {
  if (t === null)
    return null;
  const {
    minTime: i,
    maxTime: s,
    minutesStep: a,
    shouldDisableTime: l,
    disableIgnoringDatePartForTimeValidation: c = !1,
    disablePast: u,
    disableFuture: d
  } = o, p = e.utils.date(void 0, n), m = Ua(c, e.utils);
  switch (!0) {
    case !e.utils.isValid(t):
      return "invalidDate";
    case !!(i && m(i, t)):
      return "minTime";
    case !!(s && m(t, s)):
      return "maxTime";
    case !!(d && e.utils.isAfter(t, p)):
      return "disableFuture";
    case !!(u && e.utils.isBefore(t, p)):
      return "disablePast";
    case !!(l && l(t, "hours")):
      return "shouldDisableTime-hours";
    case !!(l && l(t, "minutes")):
      return "shouldDisableTime-minutes";
    case !!(l && l(t, "seconds")):
      return "shouldDisableTime-seconds";
    case !!(a && e.utils.getMinutes(t) % a !== 0):
      return "minutesStep";
    default:
      return null;
  }
};
Xa.valueManager = rn;
const Cu = ({
  adapter: e,
  value: t,
  timezone: n,
  props: o
}) => {
  const i = ms({
    adapter: e,
    value: t,
    timezone: n,
    props: o
  });
  return i !== null ? i : Xa({
    adapter: e,
    value: t,
    timezone: n,
    props: o
  });
};
Cu.valueManager = rn;
const Vp = ["disablePast", "disableFuture", "minDate", "maxDate", "shouldDisableDate", "shouldDisableMonth", "shouldDisableYear"], $p = ["disablePast", "disableFuture", "minTime", "maxTime", "shouldDisableTime", "minutesStep", "ampm", "disableIgnoringDatePartForTimeValidation"], Hx = ["minDateTime", "maxDateTime"], p_ = [...Vp, ...$p, ...Hx], gs = (e) => p_.reduce((t, n) => (e.hasOwnProperty(n) && (t[n] = e[n]), t), {});
function Gx(e) {
  const {
    props: t,
    validator: n,
    value: o,
    timezone: i,
    onError: s
  } = e, a = mi(), l = S.useRef(n.valueManager.defaultErrorState), c = n({
    adapter: a,
    value: o,
    timezone: i,
    props: t
  }), u = n.valueManager.hasError(c);
  S.useEffect(() => {
    s && !n.valueManager.isSameError(c, l.current) && s(c, o), l.current = c;
  }, [n, s, c, o]);
  const d = Ge((p) => n({
    adapter: a,
    value: p,
    timezone: i,
    props: t
  }));
  return {
    validationError: c,
    hasValidationError: u,
    getValidationErrorForNewValue: d
  };
}
function f_(e) {
  return It("MuiPickersPopper", e);
}
Ot("MuiPickersPopper", ["root", "paper"]);
function Di(e, t) {
  return Array.isArray(t) ? t.every((n) => e.indexOf(n) !== -1) : e.indexOf(t) !== -1;
}
const m_ = (e, t) => (n) => {
  (n.key === "Enter" || n.key === " ") && (e(n), n.preventDefault(), n.stopPropagation());
}, Zn = (e = document) => {
  const t = e.activeElement;
  return t ? t.shadowRoot ? Zn(t.shadowRoot) : t : null;
}, cm = "@media (pointer: fine)", g_ = "@media (prefers-reduced-motion: reduce)", $i = typeof navigator < "u" && navigator.userAgent.match(/android\s(\d+)|OS\s(\d+)/i), _b = $i && $i[1] ? parseInt($i[1], 10) : null, Bb = $i && $i[2] ? parseInt($i[2], 10) : null, h_ = _b && _b < 10 || Bb && Bb < 13 || !1, Ux = () => Pr(g_, {
  defaultMatches: !1
}) || h_, b_ = ["PaperComponent", "popperPlacement", "ownerState", "children", "paperSlotProps", "paperClasses", "onPaperClick", "onPaperTouchStart"], v_ = (e) => {
  const {
    classes: t
  } = e;
  return xt({
    root: ["root"],
    paper: ["paper"]
  }, f_, t);
}, y_ = Q(as, {
  name: "MuiPickersPopper",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})(({
  theme: e
}) => ({
  zIndex: e.zIndex.modal
})), x_ = Q(yn, {
  name: "MuiPickersPopper",
  slot: "Paper",
  overridesResolver: (e, t) => t.paper
})({
  outline: 0,
  transformOrigin: "top center",
  variants: [{
    props: ({
      placement: e
    }) => ["top", "top-start", "top-end"].includes(e),
    style: {
      transformOrigin: "bottom center"
    }
  }]
});
function C_(e, t) {
  return t.documentElement.clientWidth < e.clientX || t.documentElement.clientHeight < e.clientY;
}
function S_(e, t) {
  const n = S.useRef(!1), o = S.useRef(!1), i = S.useRef(null), s = S.useRef(!1);
  S.useEffect(() => {
    if (!e)
      return;
    function c() {
      s.current = !0;
    }
    return document.addEventListener("mousedown", c, !0), document.addEventListener("touchstart", c, !0), () => {
      document.removeEventListener("mousedown", c, !0), document.removeEventListener("touchstart", c, !0), s.current = !1;
    };
  }, [e]);
  const a = Ge((c) => {
    if (!s.current)
      return;
    const u = o.current;
    o.current = !1;
    const d = Pd(i.current);
    if (!i.current || // is a TouchEvent?
    "clientX" in c && C_(c, d))
      return;
    if (n.current) {
      n.current = !1;
      return;
    }
    let p;
    c.composedPath ? p = c.composedPath().indexOf(i.current) > -1 : p = !d.documentElement.contains(c.target) || i.current.contains(c.target), !p && !u && t(c);
  }), l = () => {
    o.current = !0;
  };
  return S.useEffect(() => {
    if (e) {
      const c = Pd(i.current), u = () => {
        n.current = !0;
      };
      return c.addEventListener("touchstart", a), c.addEventListener("touchmove", u), () => {
        c.removeEventListener("touchstart", a), c.removeEventListener("touchmove", u);
      };
    }
  }, [e, a]), S.useEffect(() => {
    if (e) {
      const c = Pd(i.current);
      return c.addEventListener("click", a), () => {
        c.removeEventListener("click", a), o.current = !1;
      };
    }
  }, [e, a]), [i, l, l];
}
const w_ = /* @__PURE__ */ S.forwardRef((e, t) => {
  const {
    PaperComponent: n,
    popperPlacement: o,
    ownerState: i,
    children: s,
    paperSlotProps: a,
    paperClasses: l,
    onPaperClick: c,
    onPaperTouchStart: u
    // picks up the style props provided by `Transition`
    // https://mui.com/material-ui/transitions/#child-requirement
  } = e, d = Xe(e, b_), p = V({}, i, {
    placement: o
  }), m = Rt({
    elementType: n,
    externalSlotProps: a,
    additionalProps: {
      tabIndex: -1,
      elevation: 8,
      ref: t
    },
    className: l,
    ownerState: p
  });
  return /* @__PURE__ */ f.jsx(n, V({}, d, m, {
    onClick: (g) => {
      var h;
      c(g), (h = m.onClick) == null || h.call(m, g);
    },
    onTouchStart: (g) => {
      var h;
      u(g), (h = m.onTouchStart) == null || h.call(m, g);
    },
    ownerState: p,
    children: s
  }));
});
function T_(e) {
  const t = at({
    props: e,
    name: "MuiPickersPopper"
  }), {
    anchorEl: n,
    children: o,
    containerRef: i = null,
    shouldRestoreFocus: s,
    onBlur: a,
    onDismiss: l,
    open: c,
    role: u,
    placement: d,
    slots: p,
    slotProps: m,
    reduceAnimations: g
  } = t;
  S.useEffect(() => {
    function F(N) {
      c && N.key === "Escape" && l();
    }
    return document.addEventListener("keydown", F), () => {
      document.removeEventListener("keydown", F);
    };
  }, [l, c]);
  const h = S.useRef(null);
  S.useEffect(() => {
    u === "tooltip" || s && !s() || (c ? h.current = Zn(document) : h.current && h.current instanceof HTMLElement && setTimeout(() => {
      h.current instanceof HTMLElement && h.current.focus();
    }));
  }, [c, u, s]);
  const [v, b, y] = S_(c, a ?? l), C = S.useRef(null), x = Vn(C, i), T = Vn(x, v), w = t, R = v_(w), E = Ux(), O = g ?? E, I = (F) => {
    F.key === "Escape" && (F.stopPropagation(), l());
  }, P = (p == null ? void 0 : p.desktopTransition) ?? O ? $r : Mr, A = (p == null ? void 0 : p.desktopTrapFocus) ?? ha, D = (p == null ? void 0 : p.desktopPaper) ?? x_, k = (p == null ? void 0 : p.popper) ?? y_, M = Rt({
    elementType: k,
    externalSlotProps: m == null ? void 0 : m.popper,
    additionalProps: {
      transition: !0,
      role: u,
      open: c,
      anchorEl: n,
      placement: d,
      onKeyDown: I
    },
    className: R.root,
    ownerState: t
  });
  return /* @__PURE__ */ f.jsx(k, V({}, M, {
    children: ({
      TransitionProps: F,
      placement: N
    }) => /* @__PURE__ */ f.jsx(A, V({
      open: c,
      disableAutoFocus: !0,
      disableRestoreFocus: !0,
      disableEnforceFocus: u === "tooltip",
      isEnabled: () => !0
    }, m == null ? void 0 : m.desktopTrapFocus, {
      children: /* @__PURE__ */ f.jsx(P, V({}, F, m == null ? void 0 : m.desktopTransition, {
        children: /* @__PURE__ */ f.jsx(w_, {
          PaperComponent: D,
          ownerState: w,
          popperPlacement: N,
          ref: T,
          onPaperClick: b,
          onPaperTouchStart: y,
          paperClasses: R.paper,
          paperSlotProps: m == null ? void 0 : m.desktopPaper,
          children: o
        })
      }))
    }))
  }));
}
const zb = /* @__PURE__ */ new Set();
function I_(e, t = "warning") {
  if (process.env.NODE_ENV === "production")
    return;
  const n = Array.isArray(e) ? e.join(`
`) : e;
  zb.has(n) || (zb.add(n), t === "error" ? console.error(n) : console.warn(n));
}
const R_ = ({
  open: e,
  onOpen: t,
  onClose: n
}) => {
  const o = S.useRef(typeof e == "boolean").current, [i, s] = S.useState(!1);
  S.useEffect(() => {
    if (o) {
      if (typeof e != "boolean")
        throw new Error("You must not mix controlling and uncontrolled mode for `open` prop");
      s(e);
    }
  }, [o, e]);
  const a = S.useCallback((l) => {
    o || s(l), l && t && t(), !l && n && n();
  }, [o, t, n]);
  return {
    isOpen: i,
    setIsOpen: a
  };
}, um = ({
  timezone: e,
  value: t,
  defaultValue: n,
  onChange: o,
  valueManager: i
}) => {
  const s = gt(), a = S.useRef(n), l = t ?? a.current ?? i.emptyValue, c = S.useMemo(() => i.getTimezone(s, l), [s, i, l]), u = Ge((g) => c == null ? g : i.setTimezone(s, c, g)), d = e ?? c ?? "default", p = S.useMemo(() => i.setTimezone(s, d, l), [i, s, d, l]), m = Ge((g, ...h) => {
    const v = u(g);
    o == null || o(v, ...h);
  });
  return {
    value: p,
    handleValueChange: m,
    timezone: d
  };
}, hs = ({
  name: e,
  timezone: t,
  value: n,
  defaultValue: o,
  onChange: i,
  valueManager: s
}) => {
  const [a, l] = li({
    name: e,
    state: "value",
    controlled: n,
    default: o ?? s.emptyValue
  }), c = Ge((u, ...d) => {
    l(u), i == null || i(u, ...d);
  });
  return um({
    timezone: t,
    value: a,
    defaultValue: void 0,
    onChange: c,
    valueManager: s
  });
}, O_ = (e) => {
  const {
    action: t,
    hasChanged: n,
    dateState: o,
    isControlled: i
  } = e, s = !i && !o.hasBeenModifiedSinceMount;
  return t.name === "setValueFromField" ? !0 : t.name === "setValueFromAction" ? s && ["accept", "today", "clear"].includes(t.pickerAction) ? !0 : n(o.lastPublishedValue) : t.name === "setValueFromView" && t.selectionState !== "shallow" || t.name === "setValueFromShortcut" ? s ? !0 : n(o.lastPublishedValue) : !1;
}, E_ = (e) => {
  const {
    action: t,
    hasChanged: n,
    dateState: o,
    isControlled: i,
    closeOnSelect: s
  } = e, a = !i && !o.hasBeenModifiedSinceMount;
  return t.name === "setValueFromAction" ? a && ["accept", "today", "clear"].includes(t.pickerAction) ? !0 : n(o.lastCommittedValue) : t.name === "setValueFromView" && t.selectionState === "finish" && s ? a ? !0 : n(o.lastCommittedValue) : t.name === "setValueFromShortcut" ? t.changeImportance === "accept" && n(o.lastCommittedValue) : !1;
}, P_ = (e) => {
  const {
    action: t,
    closeOnSelect: n
  } = e;
  return t.name === "setValueFromAction" ? !0 : t.name === "setValueFromView" ? t.selectionState === "finish" && n : t.name === "setValueFromShortcut" ? t.changeImportance === "accept" : !1;
}, A_ = ({
  props: e,
  valueManager: t,
  valueType: n,
  wrapperVariant: o,
  validator: i
}) => {
  const {
    onAccept: s,
    onChange: a,
    value: l,
    defaultValue: c,
    closeOnSelect: u = o === "desktop",
    timezone: d
  } = e, {
    current: p
  } = S.useRef(c), {
    current: m
  } = S.useRef(l !== void 0);
  process.env.NODE_ENV !== "production" && (S.useEffect(() => {
    m !== (l !== void 0) && console.error([`MUI X: A component is changing the ${m ? "" : "un"}controlled value of a picker to be ${m ? "un" : ""}controlled.`, "Elements should not switch from uncontrolled to controlled (or vice versa).", "Decide between using a controlled or uncontrolled valuefor the lifetime of the component.", "The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join(`
`));
  }, [l]), S.useEffect(() => {
    !m && p !== c && console.error(["MUI X: A component is changing the defaultValue of an uncontrolled picker after being initialized. To suppress this warning opt to use a controlled value."].join(`
`));
  }, [JSON.stringify(p)]));
  const g = gt(), h = mi(), {
    isOpen: v,
    setIsOpen: b
  } = R_(e), {
    timezone: y,
    value: C,
    handleValueChange: x
  } = um({
    timezone: d,
    value: l,
    defaultValue: p,
    onChange: a,
    valueManager: t
  }), [T, w] = S.useState(() => {
    let $;
    return C !== void 0 ? $ = C : p !== void 0 ? $ = p : $ = t.emptyValue, {
      draft: $,
      lastPublishedValue: $,
      lastCommittedValue: $,
      lastControlledValue: C,
      hasBeenModifiedSinceMount: !1
    };
  }), {
    getValidationErrorForNewValue: R
  } = Gx({
    props: e,
    validator: i,
    timezone: y,
    value: T.draft,
    onError: e.onError
  }), E = Ge(($) => {
    const U = {
      action: $,
      dateState: T,
      hasChanged: (ne) => !t.areValuesEqual(g, $.value, ne),
      isControlled: m,
      closeOnSelect: u
    }, X = O_(U), Z = E_(U), G = P_(U);
    w((ne) => V({}, ne, {
      draft: $.value,
      lastPublishedValue: X ? $.value : ne.lastPublishedValue,
      lastCommittedValue: Z ? $.value : ne.lastCommittedValue,
      hasBeenModifiedSinceMount: !0
    }));
    let K = null;
    const re = () => (K || (K = {
      validationError: $.name === "setValueFromField" ? $.context.validationError : R($.value)
    }, $.name === "setValueFromShortcut" && (K.shortcut = $.shortcut)), K);
    X && x($.value, re()), Z && s && s($.value, re()), G && b(!1);
  });
  if (C !== void 0 && (T.lastControlledValue === void 0 || !t.areValuesEqual(g, T.lastControlledValue, C))) {
    const $ = t.areValuesEqual(g, T.draft, C);
    w((U) => V({}, U, {
      lastControlledValue: C
    }, $ ? {} : {
      lastCommittedValue: C,
      lastPublishedValue: C,
      draft: C,
      hasBeenModifiedSinceMount: !0
    }));
  }
  const O = Ge(() => {
    E({
      value: t.emptyValue,
      name: "setValueFromAction",
      pickerAction: "clear"
    });
  }), I = Ge(() => {
    E({
      value: T.lastPublishedValue,
      name: "setValueFromAction",
      pickerAction: "accept"
    });
  }), P = Ge(() => {
    E({
      value: T.lastPublishedValue,
      name: "setValueFromAction",
      pickerAction: "dismiss"
    });
  }), A = Ge(() => {
    E({
      value: T.lastCommittedValue,
      name: "setValueFromAction",
      pickerAction: "cancel"
    });
  }), D = Ge(() => {
    E({
      value: t.getTodayValue(g, y, n),
      name: "setValueFromAction",
      pickerAction: "today"
    });
  }), k = Ge(($) => {
    $.preventDefault(), b(!0);
  }), M = Ge(($) => {
    $ == null || $.preventDefault(), b(!1);
  }), F = Ge(($, U = "partial") => E({
    name: "setValueFromView",
    value: $,
    selectionState: U
  })), N = Ge(($, U, X) => E({
    name: "setValueFromShortcut",
    value: $,
    changeImportance: U,
    shortcut: X
  })), W = Ge(($, U) => E({
    name: "setValueFromField",
    value: $,
    context: U
  })), H = {
    onClear: O,
    onAccept: I,
    onDismiss: P,
    onCancel: A,
    onSetToday: D,
    onOpen: k,
    onClose: M
  }, B = {
    value: T.draft,
    onChange: W
  }, j = S.useMemo(() => t.cleanValue(g, T.draft), [g, t, T.draft]), L = {
    value: j,
    onChange: F,
    onClose: M,
    open: v
  }, Y = V({}, H, {
    value: j,
    onChange: F,
    onSelectShortcut: N,
    isValid: ($) => {
      const U = i({
        adapter: h,
        value: $,
        timezone: y,
        props: e
      });
      return !t.hasError(U);
    }
  });
  return {
    open: v,
    fieldProps: B,
    viewProps: L,
    layoutProps: Y,
    actions: H
  };
};
let Ad = !1;
function Ya({
  onChange: e,
  onViewChange: t,
  openTo: n,
  view: o,
  views: i,
  autoFocus: s,
  focusedView: a,
  onFocusedViewChange: l
}) {
  process.env.NODE_ENV !== "production" && (Ad || (o != null && !i.includes(o) && (console.warn(`MUI X: \`view="${o}"\` is not a valid prop.`, `It must be an element of \`views=["${i.join('", "')}"]\`.`), Ad = !0), o == null && n != null && !i.includes(n) && (console.warn(`MUI X: \`openTo="${n}"\` is not a valid prop.`, `It must be an element of \`views=["${i.join('", "')}"]\`.`), Ad = !0)));
  const c = S.useRef(n), u = S.useRef(i), d = S.useRef(i.includes(n) ? n : i[0]), [p, m] = li({
    name: "useViews",
    state: "view",
    controlled: o,
    default: d.current
  }), g = S.useRef(s ? p : null), [h, v] = li({
    name: "useViews",
    state: "focusedView",
    controlled: a,
    default: g.current
  });
  S.useEffect(() => {
    (c.current && c.current !== n || u.current && u.current.some((E) => !i.includes(E))) && (m(i.includes(n) ? n : i[0]), u.current = i, c.current = n);
  }, [n, m, p, i]);
  const b = i.indexOf(p), y = i[b - 1] ?? null, C = i[b + 1] ?? null, x = Ge((E, O) => {
    v(O ? E : (I) => E === I ? null : I), l == null || l(E, O);
  }), T = Ge((E) => {
    x(E, !0), E !== p && (m(E), t && t(E));
  }), w = Ge(() => {
    C && T(C);
  }), R = Ge((E, O, I) => {
    const P = O === "finish", A = I ? (
      // handles case like `DateTimePicker`, where a view might return a `finish` selection state
      // but when it's not the final view given all `views` -> overall selection state should be `partial`.
      i.indexOf(I) < i.length - 1
    ) : !!C;
    if (e(E, P && A ? "partial" : O, I), I && I !== p) {
      const k = i[i.indexOf(I) + 1];
      k && T(k);
    } else P && w();
  });
  return {
    view: p,
    setView: T,
    focusedView: h,
    setFocusedView: x,
    nextView: C,
    previousView: y,
    // Always return up-to-date default view instead of the initial one (i.e. defaultView.current)
    defaultView: i.includes(n) ? n : i[0],
    goToNextView: w,
    setValueAndGoToNextView: R
  };
}
const D_ = ["className", "sx"], M_ = ({
  props: e,
  propsFromPickerValue: t,
  additionalViewProps: n,
  autoFocusView: o,
  rendererInterceptor: i,
  fieldRef: s
}) => {
  const {
    onChange: a,
    open: l,
    onClose: c
  } = t, {
    view: u,
    views: d,
    openTo: p,
    onViewChange: m,
    viewRenderers: g,
    timezone: h
  } = e, v = Xe(e, D_), {
    view: b,
    setView: y,
    defaultView: C,
    focusedView: x,
    setFocusedView: T,
    setValueAndGoToNextView: w
  } = Ya({
    view: u,
    views: d,
    openTo: p,
    onChange: a,
    onViewChange: m,
    autoFocus: o
  }), {
    hasUIView: R,
    viewModeLookup: E
  } = S.useMemo(() => d.reduce((M, F) => {
    let N;
    return g[F] != null ? N = "UI" : N = "field", M.viewModeLookup[F] = N, N === "UI" && (M.hasUIView = !0), M;
  }, {
    hasUIView: !1,
    viewModeLookup: {}
  }), [g, d]), O = S.useMemo(() => d.reduce((M, F) => g[F] != null && Qi(F) ? M + 1 : M, 0), [g, d]), I = E[b], P = Ge(() => I === "UI"), [A, D] = S.useState(I === "UI" ? b : null);
  return A !== b && E[b] === "UI" && D(b), qo(() => {
    I === "field" && l && (c(), setTimeout(() => {
      var M, F;
      (M = s == null ? void 0 : s.current) == null || M.setSelectedSections(b), (F = s == null ? void 0 : s.current) == null || F.focusField(b);
    }));
  }, [b]), qo(() => {
    if (!l)
      return;
    let M = b;
    I === "field" && A != null && (M = A), M !== C && E[M] === "UI" && E[C] === "UI" && (M = C), M !== b && y(M), T(M, !0);
  }, [l]), {
    hasUIView: R,
    shouldRestoreFocus: P,
    layoutProps: {
      views: d,
      view: A,
      onViewChange: y
    },
    renderCurrentView: () => {
      if (A == null)
        return null;
      const M = g[A];
      if (M == null)
        return null;
      const F = V({}, v, n, t, {
        views: d,
        timezone: h,
        onChange: w,
        view: A,
        onViewChange: y,
        focusedView: x,
        onFocusedViewChange: T,
        showViewSwitcher: O > 1,
        timeViewsCount: O
      });
      return i ? i(g, A, F) : M(F);
    }
  };
}, j_ = /* @__PURE__ */ S.createContext();
process.env.NODE_ENV !== "production" && (r.node, r.bool);
const ao = () => {
  const e = S.useContext(j_);
  return e ?? !1;
};
function Wb() {
  return typeof window > "u" ? "portrait" : window.screen && window.screen.orientation && window.screen.orientation.angle ? Math.abs(window.screen.orientation.angle) === 90 ? "landscape" : "portrait" : window.orientation && Math.abs(Number(window.orientation)) === 90 ? "landscape" : "portrait";
}
const k_ = (e, t) => {
  const [n, o] = S.useState(Wb);
  return qo(() => {
    const s = () => {
      o(Wb());
    };
    return window.addEventListener("orientationchange", s), () => {
      window.removeEventListener("orientationchange", s);
    };
  }, []), Di(e, ["hours", "minutes", "seconds"]) ? !1 : (t || n) === "landscape";
}, F_ = ({
  props: e,
  propsFromPickerValue: t,
  propsFromPickerViews: n,
  wrapperVariant: o
}) => {
  const {
    orientation: i
  } = e, s = k_(n.views, i), a = ao();
  return {
    layoutProps: V({}, n, t, {
      isLandscape: s,
      isRtl: a,
      wrapperVariant: o,
      disabled: e.disabled,
      readOnly: e.readOnly
    })
  };
}, Xx = ({
  props: e,
  valueManager: t,
  valueType: n,
  wrapperVariant: o,
  additionalViewProps: i,
  validator: s,
  autoFocusView: a,
  rendererInterceptor: l,
  fieldRef: c
}) => {
  process.env.NODE_ENV !== "production" && e.renderInput != null && I_(["MUI X: The `renderInput` prop has been removed in version 6.0 of the Date and Time Pickers.", "You can replace it with the `textField` component slot in most cases.", "For more information, please have a look at the migration guide (https://mui.com/x/migration/migration-pickers-v5/#input-renderer-required-in-v5)."]);
  const u = A_({
    props: e,
    valueManager: t,
    valueType: n,
    wrapperVariant: o,
    validator: s
  }), d = M_({
    props: e,
    additionalViewProps: i,
    autoFocusView: a,
    fieldRef: c,
    propsFromPickerValue: u.viewProps,
    rendererInterceptor: l
  }), p = F_({
    props: e,
    wrapperVariant: o,
    propsFromPickerValue: u.layoutProps,
    propsFromPickerViews: d.layoutProps
  });
  return {
    // Picker value
    open: u.open,
    actions: u.actions,
    fieldProps: u.fieldProps,
    // Picker views
    renderCurrentView: d.renderCurrentView,
    hasUIView: d.hasUIView,
    shouldRestoreFocus: d.shouldRestoreFocus,
    // Picker layout
    layoutProps: p.layoutProps
  };
};
function Yx(e) {
  return It("MuiPickersLayout", e);
}
const Ro = Ot("MuiPickersLayout", ["root", "landscape", "contentWrapper", "toolbar", "actionBar", "tabs", "shortcuts"]), N_ = ["onAccept", "onClear", "onCancel", "onSetToday", "actions"];
function Zx(e) {
  const {
    onAccept: t,
    onClear: n,
    onCancel: o,
    onSetToday: i,
    actions: s
  } = e, a = Xe(e, N_), l = pn();
  if (s == null || s.length === 0)
    return null;
  const c = s == null ? void 0 : s.map((u) => {
    switch (u) {
      case "clear":
        return /* @__PURE__ */ f.jsx(vt, {
          onClick: n,
          children: l.clearButtonLabel
        }, u);
      case "cancel":
        return /* @__PURE__ */ f.jsx(vt, {
          onClick: o,
          children: l.cancelButtonLabel
        }, u);
      case "accept":
        return /* @__PURE__ */ f.jsx(vt, {
          onClick: t,
          children: l.okButtonLabel
        }, u);
      case "today":
        return /* @__PURE__ */ f.jsx(vt, {
          onClick: i,
          children: l.todayButtonLabel
        }, u);
      default:
        return null;
    }
  });
  return /* @__PURE__ */ f.jsx(Mf, V({}, a, {
    children: c
  }));
}
process.env.NODE_ENV !== "production" && (Zx.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Ordered array of actions to display.
   * If empty, does not display that action bar.
   * @default `['cancel', 'accept']` for mobile and `[]` for desktop
   */
  actions: r.arrayOf(r.oneOf(["accept", "cancel", "clear", "today"]).isRequired),
  /**
   * If `true`, the actions do not have additional margin.
   * @default false
   */
  disableSpacing: r.bool,
  onAccept: r.func.isRequired,
  onCancel: r.func.isRequired,
  onClear: r.func.isRequired,
  onSetToday: r.func.isRequired,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object])
});
const Ia = 36, Su = 2, wu = 320, V_ = 280, Tu = 336, qx = 232, Bs = 48, $_ = ["items", "changeImportance", "isLandscape", "onChange", "isValid"], L_ = ["getValue"];
function Jx(e) {
  const {
    items: t,
    changeImportance: n = "accept",
    onChange: o,
    isValid: i
  } = e, s = Xe(e, $_);
  if (t == null || t.length === 0)
    return null;
  const a = t.map((l) => {
    let {
      getValue: c
    } = l, u = Xe(l, L_);
    const d = c({
      isValid: i
    });
    return V({}, u, {
      label: u.label,
      onClick: () => {
        o(d, n, u);
      },
      disabled: !i(d)
    });
  });
  return /* @__PURE__ */ f.jsx(Ff, V({
    dense: !0,
    sx: [{
      maxHeight: Tu,
      maxWidth: 200,
      overflow: "auto"
    }, ...Array.isArray(s.sx) ? s.sx : [s.sx]]
  }, s, {
    children: a.map((l) => /* @__PURE__ */ f.jsx(x0, {
      children: /* @__PURE__ */ f.jsx(Ji, V({}, l))
    }, l.id ?? l.label))
  }));
}
process.env.NODE_ENV !== "production" && (Jx.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Importance of the change when picking a shortcut:
   * - "accept": fires `onChange`, fires `onAccept` and closes the picker.
   * - "set": fires `onChange` but do not fire `onAccept` and does not close the picker.
   * @default "accept"
   */
  changeImportance: r.oneOf(["accept", "set"]),
  className: r.string,
  component: r.elementType,
  /**
   * If `true`, compact vertical padding designed for keyboard and mouse input is used for
   * the list and list items.
   * The prop is available to descendant components as the `dense` context.
   * @default false
   */
  dense: r.bool,
  /**
   * If `true`, vertical padding is removed from the list.
   * @default false
   */
  disablePadding: r.bool,
  isLandscape: r.bool.isRequired,
  isValid: r.func.isRequired,
  /**
   * Ordered array of shortcuts to display.
   * If empty, does not display the shortcuts.
   * @default []
   */
  items: r.arrayOf(r.shape({
    getValue: r.func.isRequired,
    id: r.string,
    label: r.string.isRequired
  })),
  onChange: r.func.isRequired,
  style: r.object,
  /**
   * The content of the subheader, normally `ListSubheader`.
   */
  subheader: r.node,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object])
});
function __(e) {
  return e.view !== null;
}
const B_ = (e) => {
  const {
    classes: t,
    isLandscape: n
  } = e;
  return xt({
    root: ["root", n && "landscape"],
    contentWrapper: ["contentWrapper"],
    toolbar: ["toolbar"],
    actionBar: ["actionBar"],
    tabs: ["tabs"],
    landscape: ["landscape"],
    shortcuts: ["shortcuts"]
  }, Yx, t);
}, Kx = (e) => {
  const {
    wrapperVariant: t,
    onAccept: n,
    onClear: o,
    onCancel: i,
    onSetToday: s,
    view: a,
    views: l,
    onViewChange: c,
    value: u,
    onChange: d,
    onSelectShortcut: p,
    isValid: m,
    isLandscape: g,
    disabled: h,
    readOnly: v,
    children: b,
    slots: y,
    slotProps: C
    // TODO: Remove this "as" hack. It get introduced to mark `value` prop in PickersLayoutProps as not required.
    // The true type should be
    // - For pickers value: TDate | null
    // - For range pickers value: [TDate | null, TDate | null]
  } = e, x = B_(e), T = (y == null ? void 0 : y.actionBar) ?? Zx, w = Rt({
    elementType: T,
    externalSlotProps: C == null ? void 0 : C.actionBar,
    additionalProps: {
      onAccept: n,
      onClear: o,
      onCancel: i,
      onSetToday: s,
      actions: t === "desktop" ? [] : ["cancel", "accept"]
    },
    className: x.actionBar,
    ownerState: V({}, e, {
      wrapperVariant: t
    })
  }), R = /* @__PURE__ */ f.jsx(T, V({}, w)), E = y == null ? void 0 : y.toolbar, O = Rt({
    elementType: E,
    externalSlotProps: C == null ? void 0 : C.toolbar,
    additionalProps: {
      isLandscape: g,
      onChange: d,
      value: u,
      view: a,
      onViewChange: c,
      views: l,
      disabled: h,
      readOnly: v
    },
    className: x.toolbar,
    ownerState: V({}, e, {
      wrapperVariant: t
    })
  }), I = __(O) && E ? /* @__PURE__ */ f.jsx(E, V({}, O)) : null, P = b, A = y == null ? void 0 : y.tabs, D = a && A ? /* @__PURE__ */ f.jsx(A, V({
    view: a,
    onViewChange: c,
    className: x.tabs
  }, C == null ? void 0 : C.tabs)) : null, k = (y == null ? void 0 : y.shortcuts) ?? Jx, M = Rt({
    elementType: k,
    externalSlotProps: C == null ? void 0 : C.shortcuts,
    additionalProps: {
      isValid: m,
      isLandscape: g,
      onChange: p
    },
    className: x.shortcuts,
    ownerState: {
      isValid: m,
      isLandscape: g,
      onChange: p,
      wrapperVariant: t
    }
  }), F = a && k ? /* @__PURE__ */ f.jsx(k, V({}, M)) : null;
  return {
    toolbar: I,
    content: P,
    tabs: D,
    actionBar: R,
    shortcuts: F
  };
}, z_ = (e) => {
  const {
    isLandscape: t,
    classes: n
  } = e;
  return xt({
    root: ["root", t && "landscape"],
    contentWrapper: ["contentWrapper"]
  }, Yx, n);
}, Qx = Q("div", {
  name: "MuiPickersLayout",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  display: "grid",
  gridAutoColumns: "max-content auto max-content",
  gridAutoRows: "max-content auto max-content",
  [`& .${Ro.actionBar}`]: {
    gridColumn: "1 / 4",
    gridRow: 3
  },
  variants: [{
    props: {
      isLandscape: !0
    },
    style: {
      [`& .${Ro.toolbar}`]: {
        gridColumn: 1,
        gridRow: "2 / 3"
      },
      [`.${Ro.shortcuts}`]: {
        gridColumn: "2 / 4",
        gridRow: 1
      }
    }
  }, {
    props: {
      isLandscape: !0,
      isRtl: !0
    },
    style: {
      [`& .${Ro.toolbar}`]: {
        gridColumn: 3
      }
    }
  }, {
    props: {
      isLandscape: !1
    },
    style: {
      [`& .${Ro.toolbar}`]: {
        gridColumn: "2 / 4",
        gridRow: 1
      },
      [`& .${Ro.shortcuts}`]: {
        gridColumn: 1,
        gridRow: "2 / 3"
      }
    }
  }, {
    props: {
      isLandscape: !1,
      isRtl: !0
    },
    style: {
      [`& .${Ro.shortcuts}`]: {
        gridColumn: 3
      }
    }
  }]
}), eC = Q("div", {
  name: "MuiPickersLayout",
  slot: "ContentWrapper",
  overridesResolver: (e, t) => t.contentWrapper
})({
  gridColumn: 2,
  gridRow: 2,
  display: "flex",
  flexDirection: "column"
}), dm = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiPickersLayout"
  }), {
    toolbar: i,
    content: s,
    tabs: a,
    actionBar: l,
    shortcuts: c
  } = Kx(o), {
    sx: u,
    className: d,
    isLandscape: p,
    wrapperVariant: m
  } = o, g = z_(o);
  return /* @__PURE__ */ f.jsxs(Qx, {
    ref: n,
    sx: u,
    className: fe(d, g.root),
    ownerState: o,
    children: [p ? c : i, p ? i : c, /* @__PURE__ */ f.jsx(eC, {
      className: g.contentWrapper,
      children: m === "desktop" ? /* @__PURE__ */ f.jsxs(S.Fragment, {
        children: [s, a]
      }) : /* @__PURE__ */ f.jsxs(S.Fragment, {
        children: [a, s]
      })
    }), l]
  });
});
process.env.NODE_ENV !== "production" && (dm.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  className: r.string,
  disabled: r.bool,
  isLandscape: r.bool.isRequired,
  /**
   * `true` if the application is in right-to-left direction.
   */
  isRtl: r.bool.isRequired,
  isValid: r.func.isRequired,
  onAccept: r.func.isRequired,
  onCancel: r.func.isRequired,
  onChange: r.func.isRequired,
  onClear: r.func.isRequired,
  onClose: r.func.isRequired,
  onDismiss: r.func.isRequired,
  onOpen: r.func.isRequired,
  onSelectShortcut: r.func.isRequired,
  onSetToday: r.func.isRequired,
  onViewChange: r.func.isRequired,
  /**
   * Force rendering in particular orientation.
   */
  orientation: r.oneOf(["landscape", "portrait"]),
  readOnly: r.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: r.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  value: r.any,
  view: r.oneOf(["day", "hours", "meridiem", "minutes", "month", "seconds", "year"]),
  views: r.arrayOf(r.oneOf(["day", "hours", "meridiem", "minutes", "month", "seconds", "year"]).isRequired).isRequired,
  wrapperVariant: r.oneOf(["desktop", "mobile"])
});
const W_ = ["props", "getOpenDialogAriaText"], H_ = ["ownerState"], G_ = ["ownerState"], pm = (e) => {
  var _;
  let {
    props: t,
    getOpenDialogAriaText: n
  } = e, o = Xe(e, W_);
  const {
    slots: i,
    slotProps: s,
    className: a,
    sx: l,
    format: c,
    formatDensity: u,
    enableAccessibleFieldDOMStructure: d,
    selectedSections: p,
    onSelectedSectionsChange: m,
    timezone: g,
    name: h,
    label: v,
    inputRef: b,
    readOnly: y,
    disabled: C,
    autoFocus: x,
    localeText: T,
    reduceAnimations: w
  } = t, R = S.useRef(null), E = S.useRef(null), O = ps(), I = ((_ = s == null ? void 0 : s.toolbar) == null ? void 0 : _.hidden) ?? !1, {
    open: P,
    actions: A,
    hasUIView: D,
    layoutProps: k,
    renderCurrentView: M,
    shouldRestoreFocus: F,
    fieldProps: N
  } = Xx(V({}, o, {
    props: t,
    fieldRef: E,
    autoFocusView: !0,
    additionalViewProps: {},
    wrapperVariant: "desktop"
  })), W = {
    open: P
  }, H = i.inputAdornment ?? si, B = Rt({
    elementType: H,
    externalSlotProps: s == null ? void 0 : s.inputAdornment,
    additionalProps: {
      position: "end"
    },
    ownerState: t
  }), j = Xe(B, H_), L = i.openPickerButton ?? lt, ee = Rt({
    elementType: L,
    externalSlotProps: s == null ? void 0 : s.openPickerButton,
    additionalProps: {
      disabled: C || y,
      onClick: P ? A.onClose : A.onOpen,
      "aria-label": n(N.value),
      edge: j.position
    },
    ownerState: t
  }), Y = Xe(ee, G_), $ = i.openPickerIcon, U = Rt({
    elementType: $,
    externalSlotProps: s == null ? void 0 : s.openPickerIcon,
    ownerState: W
  }), X = i.field, Z = Rt({
    elementType: X,
    externalSlotProps: s == null ? void 0 : s.field,
    additionalProps: V({}, N, I && {
      id: O
    }, {
      readOnly: y,
      disabled: C,
      className: a,
      sx: l,
      format: c,
      formatDensity: u,
      enableAccessibleFieldDOMStructure: d,
      selectedSections: p,
      onSelectedSectionsChange: m,
      timezone: g,
      label: v,
      name: h,
      autoFocus: x && !t.open,
      focused: P ? !0 : void 0
    }, b ? {
      inputRef: b
    } : {}),
    ownerState: t
  });
  D && (Z.InputProps = V({}, Z.InputProps, {
    ref: R
  }, !t.disableOpenPicker && {
    [`${j.position}Adornment`]: /* @__PURE__ */ f.jsx(H, V({}, j, {
      children: /* @__PURE__ */ f.jsx(L, V({}, Y, {
        children: /* @__PURE__ */ f.jsx($, V({}, U))
      }))
    }))
  }));
  const G = V({
    textField: i.textField,
    clearIcon: i.clearIcon,
    clearButton: i.clearButton
  }, Z.slots), K = i.layout ?? dm;
  let re = O;
  I && (v ? re = `${O}-label` : re = void 0);
  const ne = V({}, s, {
    toolbar: V({}, s == null ? void 0 : s.toolbar, {
      titleId: O
    }),
    popper: V({
      "aria-labelledby": re
    }, s == null ? void 0 : s.popper)
  }), z = Vn(E, Z.unstableFieldRef);
  return {
    renderPicker: () => /* @__PURE__ */ f.jsxs(am, {
      localeText: T,
      children: [/* @__PURE__ */ f.jsx(X, V({}, Z, {
        slots: G,
        slotProps: ne,
        unstableFieldRef: z
      })), /* @__PURE__ */ f.jsx(T_, V({
        role: "dialog",
        placement: "bottom-start",
        anchorEl: R.current
      }, A, {
        open: P,
        slots: i,
        slotProps: ne,
        shouldRestoreFocus: F,
        reduceAnimations: w,
        children: /* @__PURE__ */ f.jsx(K, V({}, k, ne == null ? void 0 : ne.layout, {
          slots: i,
          slotProps: ne,
          children: M()
        }))
      }))]
    })
  };
}, U_ = He(/* @__PURE__ */ f.jsx("path", {
  d: "M7 10l5 5 5-5z"
}), "ArrowDropDown"), X_ = He(/* @__PURE__ */ f.jsx("path", {
  d: "M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z"
}), "ArrowLeft"), Y_ = He(/* @__PURE__ */ f.jsx("path", {
  d: "M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"
}), "ArrowRight"), tC = He(/* @__PURE__ */ f.jsx("path", {
  d: "M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z"
}), "Calendar"), Z_ = He(/* @__PURE__ */ f.jsxs(S.Fragment, {
  children: [/* @__PURE__ */ f.jsx("path", {
    d: "M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
  }), /* @__PURE__ */ f.jsx("path", {
    d: "M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z"
  })]
}), "Clock"), q_ = He(/* @__PURE__ */ f.jsx("path", {
  d: "M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z"
}), "DateRange"), J_ = He(/* @__PURE__ */ f.jsxs(S.Fragment, {
  children: [/* @__PURE__ */ f.jsx("path", {
    d: "M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
  }), /* @__PURE__ */ f.jsx("path", {
    d: "M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z"
  })]
}), "Time"), K_ = He(/* @__PURE__ */ f.jsx("path", {
  d: "M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}), "Clear"), Q_ = ({
  utils: e,
  format: t
}) => {
  let n = 10, o = t, i = e.expandFormat(t);
  for (; i !== o; )
    if (o = i, i = e.expandFormat(o), n -= 1, n < 0)
      throw new Error("MUI X: The format expansion seems to be in an infinite loop. Please open an issue with the format passed to the picker component.");
  return i;
}, eB = ({
  utils: e,
  expandedFormat: t
}) => {
  const n = [], {
    start: o,
    end: i
  } = e.escapedCharacters, s = new RegExp(`(\\${o}[^\\${i}]*\\${i})+`, "g");
  let a = null;
  for (; a = s.exec(t); )
    n.push({
      start: a.index,
      end: s.lastIndex - 1
    });
  return n;
}, tB = (e, t, n, o, i) => {
  switch (o.type) {
    case "year":
      return n.fieldYearPlaceholder({
        digitAmount: e.formatByString(e.date(void 0, t), i).length,
        format: i
      });
    case "month":
      return n.fieldMonthPlaceholder({
        contentType: o.contentType,
        format: i
      });
    case "day":
      return n.fieldDayPlaceholder({
        format: i
      });
    case "weekDay":
      return n.fieldWeekDayPlaceholder({
        contentType: o.contentType,
        format: i
      });
    case "hours":
      return n.fieldHoursPlaceholder({
        format: i
      });
    case "minutes":
      return n.fieldMinutesPlaceholder({
        format: i
      });
    case "seconds":
      return n.fieldSecondsPlaceholder({
        format: i
      });
    case "meridiem":
      return n.fieldMeridiemPlaceholder({
        format: i
      });
    default:
      return i;
  }
}, nB = ({
  utils: e,
  timezone: t,
  date: n,
  shouldRespectLeadingZeros: o,
  localeText: i,
  localizedDigits: s,
  now: a,
  token: l,
  startSeparator: c
}) => {
  if (l === "")
    throw new Error("MUI X: Should not call `commitToken` with an empty token");
  const u = om(e, l), d = Lx(e, t, u.contentType, u.type, l), p = o ? d : u.contentType === "digit", m = n != null && e.isValid(n);
  let g = m ? e.formatByString(n, l) : "", h = null;
  if (p)
    if (d)
      h = g === "" ? e.formatByString(a, l).length : g.length;
    else {
      if (u.maxLength == null)
        throw new Error(`MUI X: The token ${l} should have a 'maxDigitNumber' property on it's adapter`);
      h = u.maxLength, m && (g = rm(Nx(ci(g, s), h), s));
    }
  return V({}, u, {
    format: l,
    maxLength: h,
    value: g,
    placeholder: tB(e, t, i, u, l),
    hasLeadingZerosInFormat: d,
    hasLeadingZerosInInput: p,
    startSeparator: c,
    endSeparator: "",
    modified: !1
  });
}, oB = (e) => {
  var g;
  const {
    utils: t,
    expandedFormat: n,
    escapedParts: o
  } = e, i = t.date(void 0), s = [];
  let a = "";
  const l = Object.keys(t.formatTokenMap).sort((h, v) => v.length - h.length), c = /^([a-zA-Z]+)/, u = new RegExp(`^(${l.join("|")})*$`), d = new RegExp(`^(${l.join("|")})`), p = (h) => o.find((v) => v.start <= h && v.end >= h);
  let m = 0;
  for (; m < n.length; ) {
    const h = p(m), v = h != null, b = (g = c.exec(n.slice(m))) == null ? void 0 : g[1];
    if (!v && b != null && u.test(b)) {
      let y = b;
      for (; y.length > 0; ) {
        const C = d.exec(y)[1];
        y = y.slice(C.length), s.push(nB(V({}, e, {
          now: i,
          token: C,
          startSeparator: a
        }))), a = "";
      }
      m += b.length;
    } else {
      const y = n[m];
      v && (h == null ? void 0 : h.start) === m || (h == null ? void 0 : h.end) === m || (s.length === 0 ? a += y : s[s.length - 1].endSeparator += y), m += 1;
    }
  }
  return s.length === 0 && a.length > 0 && s.push({
    type: "empty",
    contentType: "letter",
    maxLength: null,
    format: "",
    value: "",
    placeholder: "",
    hasLeadingZerosInFormat: !1,
    hasLeadingZerosInInput: !1,
    startSeparator: a,
    endSeparator: "",
    modified: !1
  }), s;
}, rB = ({
  isRtl: e,
  formatDensity: t,
  sections: n
}) => n.map((o) => {
  const i = (s) => {
    let a = s;
    return e && a !== null && a.includes(" ") && (a = `⁩${a}⁦`), t === "spacious" && ["/", ".", "-"].includes(a) && (a = ` ${a} `), a;
  };
  return o.startSeparator = i(o.startSeparator), o.endSeparator = i(o.endSeparator), o;
}), Hb = (e) => {
  let t = Q_(e);
  e.isRtl && e.enableAccessibleFieldDOMStructure && (t = t.split(" ").reverse().join(" "));
  const n = eB(V({}, e, {
    expandedFormat: t
  })), o = oB(V({}, e, {
    expandedFormat: t,
    escapedParts: n
  }));
  return rB(V({}, e, {
    sections: o
  }));
}, iB = (e) => {
  const t = gt(), n = pn(), o = mi(), i = ao(), {
    valueManager: s,
    fieldValueManager: a,
    valueType: l,
    validator: c,
    internalProps: u,
    internalProps: {
      value: d,
      defaultValue: p,
      referenceDate: m,
      onChange: g,
      format: h,
      formatDensity: v = "dense",
      selectedSections: b,
      onSelectedSectionsChange: y,
      shouldRespectLeadingZeros: C = !1,
      timezone: x,
      enableAccessibleFieldDOMStructure: T = !1
    }
  } = e, {
    timezone: w,
    value: R,
    handleValueChange: E
  } = um({
    timezone: x,
    value: d,
    defaultValue: p,
    onChange: g,
    valueManager: s
  }), O = S.useMemo(() => BL(t), [t]), I = S.useMemo(() => UL(t, O, w), [t, O, w]), P = S.useCallback((U, X = null) => a.getSectionsFromValue(t, U, X, (Z) => Hb({
    utils: t,
    timezone: w,
    localeText: n,
    localizedDigits: O,
    format: h,
    date: Z,
    formatDensity: v,
    shouldRespectLeadingZeros: C,
    enableAccessibleFieldDOMStructure: T,
    isRtl: i
  })), [a, h, n, O, i, C, t, v, w, T]), [A, D] = S.useState(() => {
    const U = P(R);
    Vb(U, l);
    const X = {
      sections: U,
      value: R,
      referenceValue: s.emptyValue,
      tempValueStrAndroid: null
    }, Z = VL(U), G = s.getInitialReferenceValue({
      referenceDate: m,
      value: R,
      utils: t,
      props: u,
      granularity: Z,
      timezone: w
    });
    return V({}, X, {
      referenceValue: G
    });
  }), [k, M] = li({
    controlled: b,
    default: null,
    name: "useField",
    state: "selectedSections"
  }), F = (U) => {
    M(U), y == null || y(U);
  }, N = S.useMemo(() => Np(k, A.sections), [k, A.sections]), W = N === "all" ? 0 : N, H = ({
    value: U,
    referenceValue: X,
    sections: Z
  }) => {
    if (D((K) => V({}, K, {
      sections: Z,
      value: U,
      referenceValue: X,
      tempValueStrAndroid: null
    })), s.areValuesEqual(t, A.value, U))
      return;
    const G = {
      validationError: c({
        adapter: o,
        value: U,
        timezone: w,
        props: u
      })
    };
    E(U, G);
  }, B = (U, X) => {
    const Z = [...A.sections];
    return Z[U] = V({}, Z[U], {
      value: X,
      modified: !0
    }), Z;
  }, j = () => {
    H({
      value: s.emptyValue,
      referenceValue: A.referenceValue,
      sections: P(s.emptyValue)
    });
  }, L = () => {
    if (W == null)
      return;
    const U = A.sections[W], X = a.getActiveDateManager(t, A, U), G = X.getSections(A.sections).filter((z) => z.value !== "").length === (U.value === "" ? 0 : 1), K = B(W, ""), re = G ? null : t.getInvalidDate(), ne = X.getNewValuesFromNewActiveDate(re);
    H(V({}, ne, {
      sections: K
    }));
  }, ee = (U) => {
    const X = (K, re) => {
      const ne = t.parse(K, h);
      if (ne == null || !t.isValid(ne))
        return null;
      const z = Hb({
        utils: t,
        timezone: w,
        localeText: n,
        localizedDigits: O,
        format: h,
        date: ne,
        formatDensity: v,
        shouldRespectLeadingZeros: C,
        enableAccessibleFieldDOMStructure: T,
        isRtl: i
      });
      return Lb(t, w, ne, z, re, !1);
    }, Z = a.parseValueStr(U, A.referenceValue, X), G = a.updateReferenceValue(t, Z, A.referenceValue);
    H({
      value: Z,
      referenceValue: G,
      sections: P(Z, A.sections)
    });
  }, Y = ({
    activeSection: U,
    newSectionValue: X,
    shouldGoToNextSection: Z
  }) => {
    Z && W < A.sections.length - 1 && F(W + 1);
    const G = a.getActiveDateManager(t, A, U), K = B(W, X), re = G.getSections(K), ne = WL(t, re, O);
    let z, q;
    if (ne != null && t.isValid(ne)) {
      const _ = Lb(t, w, ne, re, G.referenceDate, !0);
      z = G.getNewValuesFromNewActiveDate(_), q = !0;
    } else
      z = G.getNewValuesFromNewActiveDate(ne), q = (ne != null && !t.isValid(ne)) != (G.date != null && !t.isValid(G.date));
    return q ? H(V({}, z, {
      sections: K
    })) : D((_) => V({}, _, z, {
      sections: K,
      tempValueStrAndroid: null
    }));
  }, $ = (U) => D((X) => V({}, X, {
    tempValueStrAndroid: U
  }));
  return S.useEffect(() => {
    const U = P(A.value);
    Vb(U, l), D((X) => V({}, X, {
      sections: U
    }));
  }, [h, t.locale, i]), S.useEffect(() => {
    let U;
    s.areValuesEqual(t, A.value, R) ? U = s.getTimezone(t, A.value) !== s.getTimezone(t, R) : U = !0, U && D((X) => V({}, X, {
      value: R,
      referenceValue: a.updateReferenceValue(t, R, X.referenceValue),
      sections: P(R)
    }));
  }, [R]), {
    state: A,
    activeSectionIndex: W,
    parsedSelectedSections: N,
    setSelectedSections: F,
    clearValue: j,
    clearActiveSection: L,
    updateSectionValue: Y,
    updateValueFromValueStr: ee,
    setTempAndroidValueStr: $,
    getSectionsFromValue: P,
    sectionsValueBoundaries: I,
    localizedDigits: O,
    timezone: w
  };
}, sB = 5e3, Oi = (e) => e.saveQuery != null, aB = ({
  sections: e,
  updateSectionValue: t,
  sectionsValueBoundaries: n,
  localizedDigits: o,
  setTempAndroidValueStr: i,
  timezone: s
}) => {
  const a = gt(), [l, c] = S.useState(null), u = Ge(() => c(null));
  S.useEffect(() => {
    var h;
    l != null && ((h = e[l.sectionIndex]) == null ? void 0 : h.type) !== l.sectionType && u();
  }, [e, l, u]), S.useEffect(() => {
    if (l != null) {
      const h = setTimeout(() => u(), sB);
      return () => {
        clearTimeout(h);
      };
    }
    return () => {
    };
  }, [l, u]);
  const d = ({
    keyPressed: h,
    sectionIndex: v
  }, b, y) => {
    const C = h.toLowerCase(), x = e[v];
    if (l != null && (!y || y(l.value)) && l.sectionIndex === v) {
      const w = `${l.value}${C}`, R = b(w, x);
      if (!Oi(R))
        return c({
          sectionIndex: v,
          value: w,
          sectionType: x.type
        }), R;
    }
    const T = b(C, x);
    return Oi(T) && !T.saveQuery ? (u(), null) : (c({
      sectionIndex: v,
      value: C,
      sectionType: x.type
    }), Oi(T) ? null : T);
  }, p = (h) => {
    const v = (C, x, T) => {
      const w = x.filter((R) => R.toLowerCase().startsWith(T));
      return w.length === 0 ? {
        saveQuery: !1
      } : {
        sectionValue: w[0],
        shouldGoToNextSection: w.length === 1
      };
    }, b = (C, x, T, w) => {
      const R = (E) => Fx(a, s, x.type, E);
      if (x.contentType === "letter")
        return v(x.format, R(x.format), C);
      if (T && w != null && om(a, T).contentType === "letter") {
        const E = R(T), O = v(T, E, C);
        return Oi(O) ? {
          saveQuery: !1
        } : V({}, O, {
          sectionValue: w(O.sectionValue, E)
        });
      }
      return {
        saveQuery: !1
      };
    };
    return d(h, (C, x) => {
      switch (x.type) {
        case "month": {
          const T = (w) => Fb(a, w, a.formats.month, x.format);
          return b(C, x, a.formats.month, T);
        }
        case "weekDay": {
          const T = (w, R) => R.indexOf(w).toString();
          return b(C, x, a.formats.weekday, T);
        }
        case "meridiem":
          return b(C, x);
        default:
          return {
            saveQuery: !1
          };
      }
    });
  }, m = (h) => {
    const v = (y, C) => {
      const x = ci(y, o), T = Number(x), w = n[C.type]({
        currentDate: null,
        format: C.format,
        contentType: C.contentType
      });
      if (T > w.maximum)
        return {
          saveQuery: !1
        };
      if (T < w.minimum)
        return {
          saveQuery: !0
        };
      const R = T * 10 > w.maximum || x.length === w.maximum.toString().length;
      return {
        sectionValue: Vx(a, T, w, o, C),
        shouldGoToNextSection: R
      };
    };
    return d(h, (y, C) => {
      if (C.contentType === "digit" || C.contentType === "digit-with-letter")
        return v(y, C);
      if (C.type === "month") {
        const x = Lx(a, s, "digit", "month", "MM"), T = v(y, {
          type: C.type,
          format: "MM",
          hasLeadingZerosInFormat: x,
          hasLeadingZerosInInput: !0,
          contentType: "digit",
          maxLength: 2
        });
        if (Oi(T))
          return T;
        const w = Fb(a, T.sectionValue, "MM", C.format);
        return V({}, T, {
          sectionValue: w
        });
      }
      if (C.type === "weekDay") {
        const x = v(y, C);
        if (Oi(x))
          return x;
        const T = xu(a, s, C.format)[Number(x.sectionValue) - 1];
        return V({}, x, {
          sectionValue: T
        });
      }
      return {
        saveQuery: !1
      };
    }, (y) => kb(y, o));
  };
  return {
    applyCharacterEditing: Ge((h) => {
      const v = e[h.sectionIndex], y = kb(h.keyPressed, o) ? m(V({}, h, {
        keyPressed: rm(h.keyPressed, o)
      })) : p(h);
      if (y == null) {
        i(null);
        return;
      }
      t({
        activeSection: v,
        newSectionValue: y.sectionValue,
        shouldGoToNextSection: y.shouldGoToNextSection
      });
    }),
    resetCharacterQuery: u
  };
}, lB = (e) => {
  const {
    internalProps: {
      disabled: t,
      readOnly: n = !1
    },
    forwardedProps: {
      sectionListRef: o,
      onBlur: i,
      onClick: s,
      onFocus: a,
      onInput: l,
      onPaste: c,
      focused: u,
      autoFocus: d = !1
    },
    fieldValueManager: p,
    applyCharacterEditing: m,
    resetCharacterQuery: g,
    setSelectedSections: h,
    parsedSelectedSections: v,
    state: b,
    clearActiveSection: y,
    clearValue: C,
    updateSectionValue: x,
    updateValueFromValueStr: T,
    sectionOrder: w,
    areAllSectionsEmpty: R,
    sectionsValueBoundaries: E
  } = e, O = S.useRef(null), I = Vn(o, O), P = pn(), A = gt(), D = ps(), [k, M] = S.useState(!1), F = S.useMemo(() => ({
    syncSelectionToDOM: () => {
      if (!O.current)
        return;
      const q = document.getSelection();
      if (!q)
        return;
      if (v == null) {
        q.rangeCount > 0 && O.current.getRoot().contains(q.getRangeAt(0).startContainer) && q.removeAllRanges(), k && O.current.getRoot().blur();
        return;
      }
      if (!O.current.getRoot().contains(Zn(document)))
        return;
      const _ = new window.Range();
      let oe;
      v === "all" ? oe = O.current.getRoot() : b.sections[v].type === "empty" ? oe = O.current.getSectionContainer(v) : oe = O.current.getSectionContent(v), _.selectNodeContents(oe), oe.focus(), q.removeAllRanges(), q.addRange(_);
    },
    getActiveSectionIndexFromDOM: () => {
      const q = Zn(document);
      return !q || !O.current || !O.current.getRoot().contains(q) ? null : O.current.getSectionIndexFromDOMElement(q);
    },
    focusField: (q = 0) => {
      if (!O.current)
        return;
      const _ = Np(q, b.sections);
      M(!0), O.current.getSectionContent(_).focus();
    },
    setSelectedSections: (q) => {
      if (!O.current)
        return;
      const _ = Np(q, b.sections);
      M((_ === "all" ? 0 : _) !== null), h(q);
    },
    isFieldFocused: () => {
      const q = Zn(document);
      return !!O.current && O.current.getRoot().contains(q);
    }
  }), [v, h, b.sections, k]), N = Ge((q) => {
    if (!O.current)
      return;
    const _ = b.sections[q];
    O.current.getSectionContent(q).innerHTML = _.value || _.placeholder, F.syncSelectionToDOM();
  }), W = Ge((q, ..._) => {
    q.isDefaultPrevented() || !O.current || (M(!0), s == null || s(q, ..._), v === "all" ? setTimeout(() => {
      const oe = document.getSelection().getRangeAt(0).startOffset;
      if (oe === 0) {
        h(w.startIndex);
        return;
      }
      let te = 0, se = 0;
      for (; se < oe && te < b.sections.length; ) {
        const ae = b.sections[te];
        te += 1, se += `${ae.startSeparator}${ae.value || ae.placeholder}${ae.endSeparator}`.length;
      }
      h(te - 1);
    }) : k ? O.current.getRoot().contains(q.target) || h(w.startIndex) : (M(!0), h(w.startIndex)));
  }), H = Ge((q) => {
    if (l == null || l(q), !O.current || v !== "all")
      return;
    const oe = q.target.textContent ?? "";
    O.current.getRoot().innerHTML = b.sections.map((te) => `${te.startSeparator}${te.value || te.placeholder}${te.endSeparator}`).join(""), F.syncSelectionToDOM(), oe.length === 0 || oe.charCodeAt(0) === 10 ? (g(), C(), h("all")) : oe.length > 1 ? T(oe) : m({
      keyPressed: oe,
      sectionIndex: 0
    });
  }), B = Ge((q) => {
    if (c == null || c(q), n || v !== "all") {
      q.preventDefault();
      return;
    }
    const _ = q.clipboardData.getData("text");
    q.preventDefault(), g(), T(_);
  }), j = Ge((...q) => {
    if (a == null || a(...q), k || !O.current)
      return;
    M(!0), O.current.getSectionIndexFromDOMElement(Zn(document)) != null || h(w.startIndex);
  }), L = Ge((...q) => {
    i == null || i(...q), setTimeout(() => {
      if (!O.current)
        return;
      const _ = Zn(document);
      !O.current.getRoot().contains(_) && (M(!1), h(null));
    });
  }), ee = Ge((q) => (_) => {
    _.isDefaultPrevented() || h(q);
  }), Y = Ge((q) => {
    q.preventDefault();
  }), $ = Ge((q) => () => {
    h(q);
  }), U = Ge((q) => {
    if (q.preventDefault(), n || t || typeof v != "number")
      return;
    const _ = b.sections[v], oe = q.clipboardData.getData("text"), te = /^[a-zA-Z]+$/.test(oe), se = /^[0-9]+$/.test(oe), ae = /^(([a-zA-Z]+)|)([0-9]+)(([a-zA-Z]+)|)$/.test(oe);
    _.contentType === "letter" && te || _.contentType === "digit" && se || _.contentType === "digit-with-letter" && ae ? (g(), x({
      activeSection: _,
      newSectionValue: oe,
      shouldGoToNextSection: !0
    })) : !te && !se && (g(), T(oe));
  }), X = Ge((q) => {
    q.preventDefault(), q.dataTransfer.dropEffect = "none";
  }), Z = Ge((q) => {
    if (!O.current)
      return;
    const _ = q.target, oe = _.textContent ?? "", te = O.current.getSectionIndexFromDOMElement(_), se = b.sections[te];
    if (n || !O.current) {
      N(te);
      return;
    }
    if (oe.length === 0) {
      if (se.value === "") {
        N(te);
        return;
      }
      const ae = q.nativeEvent.inputType;
      if (ae === "insertParagraph" || ae === "insertLineBreak") {
        N(te);
        return;
      }
      g(), y();
      return;
    }
    m({
      keyPressed: oe,
      sectionIndex: te
    }), N(te);
  });
  qo(() => {
    if (!(!k || !O.current)) {
      if (v === "all")
        O.current.getRoot().focus();
      else if (typeof v == "number") {
        const q = O.current.getSectionContent(v);
        q && q.focus();
      }
    }
  }, [v, k]);
  const G = S.useMemo(() => b.sections.reduce((q, _) => (q[_.type] = E[_.type]({
    currentDate: null,
    contentType: _.contentType,
    format: _.format
  }), q), {}), [E, b.sections]), K = v === "all", re = S.useMemo(() => b.sections.map((q, _) => {
    const oe = !K && !t && !n;
    return {
      container: {
        "data-sectionindex": _,
        onClick: ee(_)
      },
      content: {
        tabIndex: K || _ > 0 ? -1 : 0,
        contentEditable: !K && !t && !n,
        role: "spinbutton",
        id: `${D}-${q.type}`,
        "aria-labelledby": `${D}-${q.type}`,
        "aria-readonly": n,
        "aria-valuenow": JL(q, A),
        "aria-valuemin": G[q.type].minimum,
        "aria-valuemax": G[q.type].maximum,
        "aria-valuetext": q.value ? qL(q, A) : P.empty,
        "aria-label": P[q.type],
        "aria-disabled": t,
        spellCheck: oe ? !1 : void 0,
        autoCapitalize: oe ? "off" : void 0,
        autoCorrect: oe ? "off" : void 0,
        [parseInt(S.version, 10) >= 17 ? "enterKeyHint" : "enterkeyhint"]: oe ? "next" : void 0,
        children: q.value || q.placeholder,
        onInput: Z,
        onPaste: U,
        onFocus: $(_),
        onDragOver: X,
        onMouseUp: Y,
        inputMode: q.contentType === "letter" ? "text" : "numeric"
      },
      before: {
        children: q.startSeparator
      },
      after: {
        children: q.endSeparator
      }
    };
  }), [b.sections, $, U, X, Z, ee, Y, t, n, K, P, A, G, D]), ne = Ge((q) => {
    T(q.target.value);
  }), z = S.useMemo(() => R ? "" : p.getV7HiddenInputValueFromSections(b.sections), [R, b.sections, p]);
  return S.useEffect(() => {
    if (O.current == null)
      throw new Error(["MUI X: The `sectionListRef` prop has not been initialized by `PickersSectionList`", "You probably tried to pass a component to the `textField` slot that contains an `<input />` element instead of a `PickersSectionList`.", "", "If you want to keep using an `<input />` HTML element for the editing, please remove the `enableAccessibleFieldDOMStructure` prop from your picker or field component:", "", "<DatePicker slots={{ textField: MyCustomTextField }} />", "", "Learn more about the field accessible DOM structure on the MUI documentation: https://mui.com/x/react-date-pickers/fields/#fields-to-edit-a-single-element"].join(`
`));
    d && O.current && O.current.getSectionContent(w.startIndex).focus();
  }, []), {
    interactions: F,
    returnedValue: {
      // Forwarded
      autoFocus: d,
      readOnly: n,
      focused: u ?? k,
      sectionListRef: I,
      onBlur: L,
      onClick: W,
      onFocus: j,
      onInput: H,
      onPaste: B,
      // Additional
      enableAccessibleFieldDOMStructure: !0,
      elements: re,
      // TODO v7: Try to set to undefined when there is a section selected.
      tabIndex: v === 0 ? -1 : 0,
      contentEditable: K,
      value: z,
      onChange: ne,
      areAllSectionsEmpty: R
    }
  };
}, ki = (e) => e.replace(/[\u2066\u2067\u2068\u2069]/g, ""), cB = (e, t, n) => {
  let o = 0, i = n ? 1 : 0;
  const s = [];
  for (let a = 0; a < e.length; a += 1) {
    const l = e[a], c = im(l, n ? "input-rtl" : "input-ltr", t), u = `${l.startSeparator}${c}${l.endSeparator}`, d = ki(u).length, p = u.length, m = ki(c), g = i + (m === "" ? 0 : c.indexOf(m[0])) + l.startSeparator.length, h = g + m.length;
    s.push(V({}, l, {
      start: o,
      end: o + d,
      startInInput: g,
      endInInput: h
    })), o += d, i += p;
  }
  return s;
}, uB = (e) => {
  const t = ao(), n = S.useRef(), o = S.useRef(), {
    forwardedProps: {
      onFocus: i,
      onClick: s,
      onPaste: a,
      onBlur: l,
      inputRef: c,
      placeholder: u
    },
    internalProps: {
      readOnly: d = !1,
      disabled: p = !1
    },
    parsedSelectedSections: m,
    activeSectionIndex: g,
    state: h,
    fieldValueManager: v,
    valueManager: b,
    applyCharacterEditing: y,
    resetCharacterQuery: C,
    updateSectionValue: x,
    updateValueFromValueStr: T,
    clearActiveSection: w,
    clearValue: R,
    setTempAndroidValueStr: E,
    setSelectedSections: O,
    getSectionsFromValue: I,
    areAllSectionsEmpty: P,
    localizedDigits: A
  } = e, D = S.useRef(null), k = Vn(c, D), M = S.useMemo(() => cB(h.sections, A, t), [h.sections, A, t]), F = S.useMemo(() => ({
    syncSelectionToDOM: () => {
      if (!D.current)
        return;
      if (m == null) {
        D.current.scrollLeft && (D.current.scrollLeft = 0);
        return;
      }
      if (D.current !== Zn(document))
        return;
      const Z = D.current.scrollTop;
      if (m === "all")
        D.current.select();
      else {
        const G = M[m], K = G.type === "empty" ? G.startInInput - G.startSeparator.length : G.startInInput, re = G.type === "empty" ? G.endInInput + G.endSeparator.length : G.endInInput;
        (K !== D.current.selectionStart || re !== D.current.selectionEnd) && D.current === Zn(document) && D.current.setSelectionRange(K, re), clearTimeout(o.current), o.current = setTimeout(() => {
          D.current && D.current === Zn(document) && // The section might loose all selection, where `selectionStart === selectionEnd`
          // https://github.com/mui/mui-x/pull/13652
          D.current.selectionStart === D.current.selectionEnd && (D.current.selectionStart !== K || D.current.selectionEnd !== re) && F.syncSelectionToDOM();
        });
      }
      D.current.scrollTop = Z;
    },
    getActiveSectionIndexFromDOM: () => {
      const Z = D.current.selectionStart ?? 0, G = D.current.selectionEnd ?? 0;
      if (Z === 0 && G === 0)
        return null;
      const K = Z <= M[0].startInInput ? 1 : M.findIndex((re) => re.startInInput - re.startSeparator.length > Z);
      return K === -1 ? M.length - 1 : K - 1;
    },
    focusField: (Z = 0) => {
      var G;
      (G = D.current) == null || G.focus(), O(Z);
    },
    setSelectedSections: (Z) => O(Z),
    isFieldFocused: () => D.current === Zn(document)
  }), [D, m, M, O]), N = () => {
    const Z = D.current.selectionStart ?? 0;
    let G;
    Z <= M[0].startInInput || Z >= M[M.length - 1].endInInput ? G = 1 : G = M.findIndex((re) => re.startInInput - re.startSeparator.length > Z);
    const K = G === -1 ? M.length - 1 : G - 1;
    O(K);
  }, W = Ge((...Z) => {
    i == null || i(...Z);
    const G = D.current;
    clearTimeout(n.current), n.current = setTimeout(() => {
      !G || G !== D.current || g == null && (// avoid selecting all sections when focusing empty field without value
      G.value.length && Number(G.selectionEnd) - Number(G.selectionStart) === G.value.length ? O("all") : N());
    });
  }), H = Ge((Z, ...G) => {
    Z.isDefaultPrevented() || (s == null || s(Z, ...G), N());
  }), B = Ge((Z) => {
    if (a == null || a(Z), Z.preventDefault(), d || p)
      return;
    const G = Z.clipboardData.getData("text");
    if (typeof m == "number") {
      const K = h.sections[m], re = /^[a-zA-Z]+$/.test(G), ne = /^[0-9]+$/.test(G), z = /^(([a-zA-Z]+)|)([0-9]+)(([a-zA-Z]+)|)$/.test(G);
      if (K.contentType === "letter" && re || K.contentType === "digit" && ne || K.contentType === "digit-with-letter" && z) {
        C(), x({
          activeSection: K,
          newSectionValue: G,
          shouldGoToNextSection: !0
        });
        return;
      }
      if (re || ne)
        return;
    }
    C(), T(G);
  }), j = Ge((...Z) => {
    l == null || l(...Z), O(null);
  }), L = Ge((Z) => {
    if (d)
      return;
    const G = Z.target.value;
    if (G === "") {
      C(), R();
      return;
    }
    const K = Z.nativeEvent.data, re = K && K.length > 1, ne = re ? K : G, z = ki(ne);
    if (g == null || re) {
      T(re ? K : z);
      return;
    }
    let q;
    if (m === "all" && z.length === 1)
      q = z;
    else {
      const _ = ki(v.getV6InputValueFromSections(M, A, t));
      let oe = -1, te = -1;
      for (let ye = 0; ye < _.length; ye += 1)
        oe === -1 && _[ye] !== z[ye] && (oe = ye), te === -1 && _[_.length - ye - 1] !== z[z.length - ye - 1] && (te = ye);
      const se = M[g];
      if (oe < se.start || _.length - te - 1 > se.end)
        return;
      const me = z.length - _.length + se.end - ki(se.endSeparator || "").length;
      q = z.slice(se.start + ki(se.startSeparator || "").length, me);
    }
    if (q.length === 0) {
      YL() && E(ne), C(), w();
      return;
    }
    y({
      keyPressed: q,
      sectionIndex: g
    });
  }), ee = S.useMemo(() => u !== void 0 ? u : v.getV6InputValueFromSections(I(b.emptyValue), A, t), [u, v, I, b.emptyValue, A, t]), Y = S.useMemo(() => h.tempValueStrAndroid ?? v.getV6InputValueFromSections(h.sections, A, t), [h.sections, v, h.tempValueStrAndroid, A, t]);
  S.useEffect(() => (D.current && D.current === Zn(document) && O("all"), () => {
    clearTimeout(n.current), clearTimeout(o.current);
  }), []);
  const $ = S.useMemo(() => g == null || h.sections[g].contentType === "letter" ? "text" : "numeric", [g, h.sections]), X = !(D.current && D.current === Zn(document)) && P;
  return {
    interactions: F,
    returnedValue: {
      // Forwarded
      readOnly: d,
      onBlur: j,
      onClick: H,
      onFocus: W,
      onPaste: B,
      inputRef: k,
      // Additional
      enableAccessibleFieldDOMStructure: !1,
      placeholder: ee,
      inputMode: $,
      autoComplete: "off",
      value: X ? "" : Y,
      onChange: L
    }
  };
}, fm = (e) => {
  const t = gt(), {
    internalProps: n,
    internalProps: {
      unstableFieldRef: o,
      minutesStep: i,
      enableAccessibleFieldDOMStructure: s = !1,
      disabled: a = !1,
      readOnly: l = !1
    },
    forwardedProps: {
      onKeyDown: c,
      error: u,
      clearable: d,
      onClear: p
    },
    fieldValueManager: m,
    valueManager: g,
    validator: h
  } = e, v = ao(), b = iB(e), {
    state: y,
    activeSectionIndex: C,
    parsedSelectedSections: x,
    setSelectedSections: T,
    clearValue: w,
    clearActiveSection: R,
    updateSectionValue: E,
    setTempAndroidValueStr: O,
    sectionsValueBoundaries: I,
    localizedDigits: P,
    timezone: A
  } = b, D = aB({
    sections: y.sections,
    updateSectionValue: E,
    sectionsValueBoundaries: I,
    localizedDigits: P,
    setTempAndroidValueStr: O,
    timezone: A
  }), {
    resetCharacterQuery: k
  } = D, M = g.areValuesEqual(t, y.value, g.emptyValue), F = s ? lB : uB, N = S.useMemo(() => ZL(y.sections, v && !s), [y.sections, v, s]), {
    returnedValue: W,
    interactions: H
  } = F(V({}, e, b, D, {
    areAllSectionsEmpty: M,
    sectionOrder: N
  })), B = Ge((U) => {
    if (c == null || c(U), !a)
      switch (!0) {
        case ((U.ctrlKey || U.metaKey) && U.key.toLowerCase() === "a" && !U.shiftKey && !U.altKey): {
          U.preventDefault(), T("all");
          break;
        }
        case U.key === "ArrowRight": {
          if (U.preventDefault(), x == null)
            T(N.startIndex);
          else if (x === "all")
            T(N.endIndex);
          else {
            const X = N.neighbors[x].rightIndex;
            X !== null && T(X);
          }
          break;
        }
        case U.key === "ArrowLeft": {
          if (U.preventDefault(), x == null)
            T(N.endIndex);
          else if (x === "all")
            T(N.startIndex);
          else {
            const X = N.neighbors[x].leftIndex;
            X !== null && T(X);
          }
          break;
        }
        case U.key === "Delete": {
          if (U.preventDefault(), l)
            break;
          x == null || x === "all" ? w() : R(), k();
          break;
        }
        case ["ArrowUp", "ArrowDown", "Home", "End", "PageUp", "PageDown"].includes(U.key): {
          if (U.preventDefault(), l || C == null)
            break;
          const X = y.sections[C], Z = m.getActiveDateManager(t, y, X), G = zL(t, A, X, U.key, I, P, Z.date, {
            minutesStep: i
          });
          E({
            activeSection: X,
            newSectionValue: G,
            shouldGoToNextSection: !1
          });
          break;
        }
      }
  });
  qo(() => {
    H.syncSelectionToDOM();
  });
  const {
    hasValidationError: j
  } = Gx({
    props: n,
    validator: h,
    timezone: A,
    value: y.value,
    onError: n.onError
  }), L = S.useMemo(() => u !== void 0 ? u : j, [j, u]);
  S.useEffect(() => {
    !L && C == null && k();
  }, [y.referenceValue, C, L]), S.useEffect(() => {
    y.tempValueStrAndroid != null && C != null && (k(), R());
  }, [y.sections]), S.useImperativeHandle(o, () => ({
    getSections: () => y.sections,
    getActiveSectionIndex: H.getActiveSectionIndexFromDOM,
    setSelectedSections: H.setSelectedSections,
    focusField: H.focusField,
    isFieldFocused: H.isFieldFocused
  }));
  const ee = Ge((U, ...X) => {
    U.preventDefault(), p == null || p(U, ...X), w(), H.isFieldFocused() ? T(N.startIndex) : H.focusField(0);
  }), Y = {
    onKeyDown: B,
    onClear: ee,
    error: L,
    clearable: !!(d && !M && !l && !a)
  }, $ = {
    disabled: a,
    readOnly: l
  };
  return V({}, e.forwardedProps, Y, $, W);
}, dB = ["clearable", "onClear", "InputProps", "sx", "slots", "slotProps"], pB = ["ownerState"], mm = (e) => {
  const t = pn(), {
    clearable: n,
    onClear: o,
    InputProps: i,
    sx: s,
    slots: a,
    slotProps: l
  } = e, c = Xe(e, dB), u = (a == null ? void 0 : a.clearButton) ?? lt, d = Rt({
    elementType: u,
    externalSlotProps: l == null ? void 0 : l.clearButton,
    ownerState: {},
    className: "clearButton",
    additionalProps: {
      title: t.fieldClearLabel
    }
  }), p = Xe(d, pB), m = (a == null ? void 0 : a.clearIcon) ?? K_, g = Rt({
    elementType: m,
    externalSlotProps: l == null ? void 0 : l.clearIcon,
    ownerState: {}
  });
  return V({}, c, {
    InputProps: V({}, i, {
      endAdornment: /* @__PURE__ */ f.jsxs(S.Fragment, {
        children: [n && /* @__PURE__ */ f.jsx(si, {
          position: "end",
          sx: {
            marginRight: i != null && i.endAdornment ? -1 : -1.5
          },
          children: /* @__PURE__ */ f.jsx(u, V({}, p, {
            onClick: o,
            children: /* @__PURE__ */ f.jsx(m, V({
              fontSize: "small"
            }, g))
          }))
        }), i == null ? void 0 : i.endAdornment]
      })
    }),
    sx: [{
      "& .clearButton": {
        opacity: 1
      },
      "@media (pointer: fine)": {
        "& .clearButton": {
          opacity: 0
        },
        "&:hover, &:focus-within": {
          ".clearButton": {
            opacity: 1
          }
        }
      }
    }, ...Array.isArray(s) ? s : [s]]
  });
}, fB = ["value", "defaultValue", "referenceDate", "format", "formatDensity", "onChange", "timezone", "onError", "shouldRespectLeadingZeros", "selectedSections", "onSelectedSectionsChange", "unstableFieldRef", "enableAccessibleFieldDOMStructure", "disabled", "readOnly", "dateSeparator"], gm = (e, t) => S.useMemo(() => {
  const n = V({}, e), o = {}, i = (s) => {
    n.hasOwnProperty(s) && (o[s] = n[s], delete n[s]);
  };
  return fB.forEach(i), t === "date" ? Vp.forEach(i) : t === "time" ? $p.forEach(i) : t === "date-time" && (Vp.forEach(i), $p.forEach(i), Hx.forEach(i)), {
    forwardedProps: n,
    internalProps: o
  };
}, [e, t]), mB = (e) => {
  const t = gt(), n = gi();
  return V({}, e, {
    disablePast: e.disablePast ?? !1,
    disableFuture: e.disableFuture ?? !1,
    format: e.format ?? t.formats.keyboardDate,
    minDate: Dn(t, e.minDate, n.minDate),
    maxDate: Dn(t, e.maxDate, n.maxDate)
  });
}, gB = (e) => {
  const t = gt(), o = e.ampm ?? t.is12HourCycleInCurrentLocale() ? t.formats.fullTime12h : t.formats.fullTime24h;
  return V({}, e, {
    disablePast: e.disablePast ?? !1,
    disableFuture: e.disableFuture ?? !1,
    format: e.format ?? o
  });
}, hB = (e) => {
  const t = gt(), n = gi(), i = e.ampm ?? t.is12HourCycleInCurrentLocale() ? t.formats.keyboardDateTime12h : t.formats.keyboardDateTime24h;
  return V({}, e, {
    disablePast: e.disablePast ?? !1,
    disableFuture: e.disableFuture ?? !1,
    format: e.format ?? i,
    disableIgnoringDatePartForTimeValidation: !!(e.minDateTime || e.maxDateTime),
    minDate: Dn(t, e.minDateTime ?? e.minDate, n.minDate),
    maxDate: Dn(t, e.maxDateTime ?? e.maxDate, n.maxDate),
    minTime: e.minDateTime ?? e.minTime,
    maxTime: e.maxDateTime ?? e.maxTime
  });
}, bB = (e) => {
  const t = mB(e), {
    forwardedProps: n,
    internalProps: o
  } = gm(t, "date");
  return fm({
    forwardedProps: n,
    internalProps: o,
    valueManager: rn,
    fieldValueManager: sm,
    validator: ms,
    valueType: "date"
  });
};
function vB(e) {
  return It("MuiPickersTextField", e);
}
Ot("MuiPickersTextField", ["root", "focused", "disabled", "error", "required"]);
function yB(e) {
  return It("MuiPickersInputBase", e);
}
const Li = Ot("MuiPickersInputBase", ["root", "focused", "disabled", "error", "notchedOutline", "sectionContent", "sectionBefore", "sectionAfter", "adornedStart", "adornedEnd", "input"]);
function xB(e) {
  return It("MuiPickersSectionList", e);
}
const Ds = Ot("MuiPickersSectionList", ["root", "section", "sectionContent"]), CB = ["slots", "slotProps", "elements", "sectionListRef"], nC = Q("div", {
  name: "MuiPickersSectionList",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  direction: "ltr /*! @noflip */",
  outline: "none"
}), oC = Q("span", {
  name: "MuiPickersSectionList",
  slot: "Section",
  overridesResolver: (e, t) => t.section
})({}), rC = Q("span", {
  name: "MuiPickersSectionList",
  slot: "SectionSeparator",
  overridesResolver: (e, t) => t.sectionSeparator
})({
  whiteSpace: "pre"
}), iC = Q("span", {
  name: "MuiPickersSectionList",
  slot: "SectionContent",
  overridesResolver: (e, t) => t.sectionContent
})({
  outline: "none"
}), SB = (e) => {
  const {
    classes: t
  } = e;
  return xt({
    root: ["root"],
    section: ["section"],
    sectionContent: ["sectionContent"]
  }, xB, t);
};
function wB(e) {
  const {
    slots: t,
    slotProps: n,
    element: o,
    classes: i
  } = e, s = (t == null ? void 0 : t.section) ?? oC, a = Rt({
    elementType: s,
    externalSlotProps: n == null ? void 0 : n.section,
    externalForwardedProps: o.container,
    className: i.section,
    ownerState: {}
  }), l = (t == null ? void 0 : t.sectionContent) ?? iC, c = Rt({
    elementType: l,
    externalSlotProps: n == null ? void 0 : n.sectionContent,
    externalForwardedProps: o.content,
    additionalProps: {
      suppressContentEditableWarning: !0
    },
    className: i.sectionContent,
    ownerState: {}
  }), u = (t == null ? void 0 : t.sectionSeparator) ?? rC, d = Rt({
    elementType: u,
    externalSlotProps: n == null ? void 0 : n.sectionSeparator,
    externalForwardedProps: o.before,
    ownerState: {
      position: "before"
    }
  }), p = Rt({
    elementType: u,
    externalSlotProps: n == null ? void 0 : n.sectionSeparator,
    externalForwardedProps: o.after,
    ownerState: {
      position: "after"
    }
  });
  return /* @__PURE__ */ f.jsxs(s, V({}, a, {
    children: [/* @__PURE__ */ f.jsx(u, V({}, d)), /* @__PURE__ */ f.jsx(l, V({}, c)), /* @__PURE__ */ f.jsx(u, V({}, p))]
  }));
}
const sC = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiPickersSectionList"
  }), {
    slots: i,
    slotProps: s,
    elements: a,
    sectionListRef: l
  } = o, c = Xe(o, CB), u = SB(o), d = S.useRef(null), p = Vn(n, d), m = (v) => {
    if (!d.current)
      throw new Error(`MUI X: Cannot call sectionListRef.${v} before the mount of the component.`);
    return d.current;
  };
  S.useImperativeHandle(l, () => ({
    getRoot() {
      return m("getRoot");
    },
    getSectionContainer(v) {
      return m("getSectionContainer").querySelector(`.${Ds.section}[data-sectionindex="${v}"]`);
    },
    getSectionContent(v) {
      return m("getSectionContent").querySelector(`.${Ds.section}[data-sectionindex="${v}"] .${Ds.sectionContent}`);
    },
    getSectionIndexFromDOMElement(v) {
      const b = m("getSectionIndexFromDOMElement");
      if (v == null || !b.contains(v))
        return null;
      let y = null;
      return v.classList.contains(Ds.section) ? y = v : v.classList.contains(Ds.sectionContent) && (y = v.parentElement), y == null ? null : Number(y.dataset.sectionindex);
    }
  }));
  const g = (i == null ? void 0 : i.root) ?? nC, h = Rt({
    elementType: g,
    externalSlotProps: s == null ? void 0 : s.root,
    externalForwardedProps: c,
    additionalProps: {
      ref: p,
      suppressContentEditableWarning: !0
    },
    className: u.root,
    ownerState: {}
  });
  return /* @__PURE__ */ f.jsx(g, V({}, h, {
    children: h.contentEditable ? a.map(({
      content: v,
      before: b,
      after: y
    }) => `${b.children}${v.children}${y.children}`).join("") : /* @__PURE__ */ f.jsx(S.Fragment, {
      children: a.map((v, b) => /* @__PURE__ */ f.jsx(wB, {
        slots: i,
        slotProps: s,
        element: v,
        classes: u
      }, b))
    })
  }));
});
process.env.NODE_ENV !== "production" && (sC.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  /**
   * If true, the whole element is editable.
   * Useful when all the sections are selected.
   */
  contentEditable: r.bool.isRequired,
  /**
   * The elements to render.
   * Each element contains the prop to edit a section of the value.
   */
  elements: r.arrayOf(r.shape({
    after: r.object.isRequired,
    before: r.object.isRequired,
    container: r.object.isRequired,
    content: r.object.isRequired
  })).isRequired,
  sectionListRef: r.oneOfType([r.func, r.shape({
    current: r.shape({
      getRoot: r.func.isRequired,
      getSectionContainer: r.func.isRequired,
      getSectionContent: r.func.isRequired,
      getSectionIndexFromDOMElement: r.func.isRequired
    })
  })]),
  /**
   * The props used for each component slot.
   */
  slotProps: r.object,
  /**
   * Overridable component slots.
   */
  slots: r.object
});
const TB = ["elements", "areAllSectionsEmpty", "defaultValue", "label", "value", "onChange", "id", "autoFocus", "endAdornment", "startAdornment", "renderSuffix", "slots", "slotProps", "contentEditable", "tabIndex", "onInput", "onPaste", "onKeyDown", "fullWidth", "name", "readOnly", "inputProps", "inputRef", "sectionListRef"], IB = (e) => Math.round(e * 1e5) / 1e5, Iu = Q("div", {
  name: "MuiPickersInputBase",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})(({
  theme: e
}) => V({}, e.typography.body1, {
  color: (e.vars || e).palette.text.primary,
  cursor: "text",
  padding: 0,
  display: "flex",
  justifyContent: "flex-start",
  alignItems: "center",
  position: "relative",
  boxSizing: "border-box",
  // Prevent padding issue with fullWidth.
  letterSpacing: `${IB(0.15 / 16)}em`,
  variants: [{
    props: {
      fullWidth: !0
    },
    style: {
      width: "100%"
    }
  }]
})), hm = Q(nC, {
  name: "MuiPickersInputBase",
  slot: "SectionsContainer",
  overridesResolver: (e, t) => t.sectionsContainer
})(({
  theme: e
}) => ({
  padding: "4px 0 5px",
  fontFamily: e.typography.fontFamily,
  fontSize: "inherit",
  lineHeight: "1.4375em",
  // 23px
  flexGrow: 1,
  outline: "none",
  display: "flex",
  flexWrap: "nowrap",
  overflow: "hidden",
  letterSpacing: "inherit",
  // Baseline behavior
  width: "182px",
  variants: [{
    props: {
      isRtl: !0
    },
    style: {
      textAlign: "right /*! @noflip */"
    }
  }, {
    props: {
      size: "small"
    },
    style: {
      paddingTop: 1
    }
  }, {
    props: {
      adornedStart: !1,
      focused: !1,
      filled: !1
    },
    style: {
      color: "currentColor",
      opacity: 0
    }
  }, {
    // Can't use the object notation because label can be null or undefined
    props: ({
      adornedStart: t,
      focused: n,
      filled: o,
      label: i
    }) => !t && !n && !o && i == null,
    style: e.vars ? {
      opacity: e.vars.opacity.inputPlaceholder
    } : {
      opacity: e.palette.mode === "light" ? 0.42 : 0.5
    }
  }]
})), RB = Q(oC, {
  name: "MuiPickersInputBase",
  slot: "Section",
  overridesResolver: (e, t) => t.section
})(({
  theme: e
}) => ({
  fontFamily: e.typography.fontFamily,
  fontSize: "inherit",
  letterSpacing: "inherit",
  lineHeight: "1.4375em",
  // 23px
  display: "flex"
})), OB = Q(iC, {
  name: "MuiPickersInputBase",
  slot: "SectionContent",
  overridesResolver: (e, t) => t.content
})(({
  theme: e
}) => ({
  fontFamily: e.typography.fontFamily,
  lineHeight: "1.4375em",
  // 23px
  letterSpacing: "inherit",
  width: "fit-content",
  outline: "none"
})), EB = Q(rC, {
  name: "MuiPickersInputBase",
  slot: "Separator",
  overridesResolver: (e, t) => t.separator
})(() => ({
  whiteSpace: "pre",
  letterSpacing: "inherit"
})), PB = Q("input", {
  name: "MuiPickersInputBase",
  slot: "Input",
  overridesResolver: (e, t) => t.hiddenInput
})(V({}, SL)), AB = (e) => {
  const {
    focused: t,
    disabled: n,
    error: o,
    classes: i,
    fullWidth: s,
    readOnly: a,
    color: l,
    size: c,
    endAdornment: u,
    startAdornment: d
  } = e, p = {
    root: ["root", t && !n && "focused", n && "disabled", a && "readOnly", o && "error", s && "fullWidth", `color${yL(l)}`, c === "small" && "inputSizeSmall", !!d && "adornedStart", !!u && "adornedEnd"],
    notchedOutline: ["notchedOutline"],
    input: ["input"],
    sectionsContainer: ["sectionsContainer"],
    sectionContent: ["sectionContent"],
    sectionBefore: ["sectionBefore"],
    sectionAfter: ["sectionAfter"]
  };
  return xt(p, yB, i);
}, Ru = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiPickersInputBase"
  }), {
    elements: i,
    areAllSectionsEmpty: s,
    value: a,
    onChange: l,
    id: c,
    endAdornment: u,
    startAdornment: d,
    renderSuffix: p,
    slots: m,
    slotProps: g,
    contentEditable: h,
    tabIndex: v,
    onInput: b,
    onPaste: y,
    onKeyDown: C,
    name: x,
    readOnly: T,
    inputProps: w,
    inputRef: R,
    sectionListRef: E
  } = o, O = Xe(o, TB), I = S.useRef(null), P = Vn(n, I), A = Vn(w == null ? void 0 : w.ref, R), D = ao(), k = Gn();
  if (!k)
    throw new Error("MUI X: PickersInputBase should always be used inside a PickersTextField component");
  const M = (j) => {
    var L;
    if (k.disabled) {
      j.stopPropagation();
      return;
    }
    (L = k.onFocus) == null || L.call(k, j);
  };
  S.useEffect(() => {
    k && k.setAdornedStart(!!d);
  }, [k, d]), S.useEffect(() => {
    k && (s ? k.onEmpty() : k.onFilled());
  }, [k, s]);
  const F = V({}, o, k, {
    isRtl: D
  }), N = AB(F), W = (m == null ? void 0 : m.root) || Iu, H = Rt({
    elementType: W,
    externalSlotProps: g == null ? void 0 : g.root,
    externalForwardedProps: O,
    additionalProps: {
      "aria-invalid": k.error,
      ref: P
    },
    className: N.root,
    ownerState: F
  }), B = (m == null ? void 0 : m.input) || hm;
  return /* @__PURE__ */ f.jsxs(W, V({}, H, {
    children: [d, /* @__PURE__ */ f.jsx(sC, {
      sectionListRef: E,
      elements: i,
      contentEditable: h,
      tabIndex: v,
      className: N.sectionsContainer,
      onFocus: M,
      onBlur: k.onBlur,
      onInput: b,
      onPaste: y,
      onKeyDown: C,
      slots: {
        root: B,
        section: RB,
        sectionContent: OB,
        sectionSeparator: EB
      },
      slotProps: {
        root: {
          ownerState: F
        },
        sectionContent: {
          className: Li.sectionContent
        },
        sectionSeparator: ({
          position: j
        }) => ({
          className: j === "before" ? Li.sectionBefore : Li.sectionAfter
        })
      }
    }), u, p ? p(V({}, k)) : null, /* @__PURE__ */ f.jsx(PB, V({
      name: x,
      className: N.input,
      value: a,
      onChange: l,
      id: c,
      "aria-hidden": "true",
      tabIndex: -1,
      readOnly: T,
      required: k.required,
      disabled: k.disabled
    }, w, {
      ref: A
    }))]
  }));
});
process.env.NODE_ENV !== "production" && (Ru.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Is `true` if the current values equals the empty value.
   * For a single item value, it means that `value === null`
   * For a range value, it means that `value === [null, null]`
   */
  areAllSectionsEmpty: r.bool.isRequired,
  className: r.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * If true, the whole element is editable.
   * Useful when all the sections are selected.
   */
  contentEditable: r.bool.isRequired,
  /**
   * The elements to render.
   * Each element contains the prop to edit a section of the value.
   */
  elements: r.arrayOf(r.shape({
    after: r.object.isRequired,
    before: r.object.isRequired,
    container: r.object.isRequired,
    content: r.object.isRequired
  })).isRequired,
  endAdornment: r.node,
  fullWidth: r.bool,
  id: r.string,
  inputProps: r.object,
  inputRef: Rn,
  label: r.node,
  margin: r.oneOf(["dense", "none", "normal"]),
  name: r.string,
  onChange: r.func.isRequired,
  onClick: r.func.isRequired,
  onInput: r.func.isRequired,
  onKeyDown: r.func.isRequired,
  onPaste: r.func.isRequired,
  ownerState: r.any,
  readOnly: r.bool,
  renderSuffix: r.func,
  sectionListRef: r.oneOfType([r.func, r.shape({
    current: r.shape({
      getRoot: r.func.isRequired,
      getSectionContainer: r.func.isRequired,
      getSectionContent: r.func.isRequired,
      getSectionIndexFromDOMElement: r.func.isRequired
    })
  })]),
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: r.object,
  /**
   * The components used for each slot inside.
   *
   * @default {}
   */
  slots: r.object,
  startAdornment: r.node,
  style: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  value: r.string.isRequired
});
function DB(e) {
  return It("MuiPickersOutlinedInput", e);
}
const Io = V({}, Li, Ot("MuiPickersOutlinedInput", ["root", "notchedOutline", "input"])), MB = ["children", "className", "label", "notched", "shrink"], jB = Q("fieldset", {
  name: "MuiPickersOutlinedInput",
  slot: "NotchedOutline",
  overridesResolver: (e, t) => t.notchedOutline
})(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    textAlign: "left",
    position: "absolute",
    bottom: 0,
    right: 0,
    top: -5,
    left: 0,
    margin: 0,
    padding: "0 8px",
    pointerEvents: "none",
    borderRadius: "inherit",
    borderStyle: "solid",
    borderWidth: 1,
    overflow: "hidden",
    minWidth: "0%",
    borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
  };
}), Gb = Q("span")(({
  theme: e
}) => ({
  fontFamily: e.typography.fontFamily,
  fontSize: "inherit"
})), kB = Q("legend")(({
  theme: e
}) => ({
  float: "unset",
  // Fix conflict with bootstrap
  width: "auto",
  // Fix conflict with bootstrap
  overflow: "hidden",
  // Fix Horizontal scroll when label too long
  variants: [{
    props: {
      withLabel: !1
    },
    style: {
      padding: 0,
      lineHeight: "11px",
      // sync with `height` in `legend` styles
      transition: e.transitions.create("width", {
        duration: 150,
        easing: e.transitions.easing.easeOut
      })
    }
  }, {
    props: {
      withLabel: !0
    },
    style: {
      display: "block",
      // Fix conflict with normalize.css and sanitize.css
      padding: 0,
      height: 11,
      // sync with `lineHeight` in `legend` styles
      fontSize: "0.75em",
      visibility: "hidden",
      maxWidth: 0.01,
      transition: e.transitions.create("max-width", {
        duration: 50,
        easing: e.transitions.easing.easeOut
      }),
      whiteSpace: "nowrap",
      "& > span": {
        paddingLeft: 5,
        paddingRight: 5,
        display: "inline-block",
        opacity: 0,
        visibility: "visible"
      }
    }
  }, {
    props: {
      withLabel: !0,
      notched: !0
    },
    style: {
      maxWidth: "100%",
      transition: e.transitions.create("max-width", {
        duration: 100,
        easing: e.transitions.easing.easeOut,
        delay: 50
      })
    }
  }]
}));
function FB(e) {
  const {
    className: t,
    label: n
  } = e, o = Xe(e, MB), i = n != null && n !== "", s = V({}, e, {
    withLabel: i
  });
  return /* @__PURE__ */ f.jsx(jB, V({
    "aria-hidden": !0,
    className: t
  }, o, {
    ownerState: s,
    children: /* @__PURE__ */ f.jsx(kB, {
      ownerState: s,
      children: i ? /* @__PURE__ */ f.jsx(Gb, {
        children: n
      }) : (
        // notranslate needed while Google Translate will not fix zero-width space issue
        /* @__PURE__ */ f.jsx(Gb, {
          className: "notranslate",
          children: "​"
        })
      )
    })
  }));
}
const NB = ["label", "autoFocus", "ownerState", "notched"], VB = Q(Iu, {
  name: "MuiPickersOutlinedInput",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})(({
  theme: e
}) => {
  const t = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)";
  return {
    padding: "0 14px",
    borderRadius: (e.vars || e).shape.borderRadius,
    [`&:hover .${Io.notchedOutline}`]: {
      borderColor: (e.vars || e).palette.text.primary
    },
    // Reset on touch devices, it doesn't add specificity
    "@media (hover: none)": {
      [`&:hover .${Io.notchedOutline}`]: {
        borderColor: e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / 0.23)` : t
      }
    },
    [`&.${Io.focused} .${Io.notchedOutline}`]: {
      borderStyle: "solid",
      borderWidth: 2
    },
    [`&.${Io.disabled}`]: {
      [`& .${Io.notchedOutline}`]: {
        borderColor: (e.vars || e).palette.action.disabled
      },
      "*": {
        color: (e.vars || e).palette.action.disabled
      }
    },
    [`&.${Io.error} .${Io.notchedOutline}`]: {
      borderColor: (e.vars || e).palette.error.main
    },
    variants: Object.keys((e.vars ?? e).palette).filter((n) => {
      var o;
      return ((o = (e.vars ?? e).palette[n]) == null ? void 0 : o.main) ?? !1;
    }).map((n) => ({
      props: {
        color: n
      },
      style: {
        [`&.${Io.focused}:not(.${Io.error}) .${Io.notchedOutline}`]: {
          // @ts-ignore
          borderColor: (e.vars || e).palette[n].main
        }
      }
    }))
  };
}), $B = Q(hm, {
  name: "MuiPickersOutlinedInput",
  slot: "SectionsContainer",
  overridesResolver: (e, t) => t.sectionsContainer
})({
  padding: "16.5px 0",
  variants: [{
    props: {
      size: "small"
    },
    style: {
      padding: "8.5px 0"
    }
  }]
}), LB = (e) => {
  const {
    classes: t
  } = e, o = xt({
    root: ["root"],
    notchedOutline: ["notchedOutline"],
    input: ["input"]
  }, DB, t);
  return V({}, t, o);
}, bm = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiPickersOutlinedInput"
  }), {
    label: i,
    ownerState: s,
    notched: a
  } = o, l = Xe(o, NB), c = Gn(), u = V({}, o, s, c, {
    color: (c == null ? void 0 : c.color) || "primary"
  }), d = LB(u);
  return /* @__PURE__ */ f.jsx(Ru, V({
    slots: {
      root: VB,
      input: $B
    },
    renderSuffix: (p) => /* @__PURE__ */ f.jsx(FB, {
      shrink: !!(a || p.adornedStart || p.focused || p.filled),
      notched: !!(a || p.adornedStart || p.focused || p.filled),
      className: d.notchedOutline,
      label: i != null && i !== "" && (c != null && c.required) ? /* @__PURE__ */ f.jsxs(S.Fragment, {
        children: [i, " ", "*"]
      }) : i,
      ownerState: u
    })
  }, l, {
    label: i,
    classes: d,
    ref: n
  }));
});
process.env.NODE_ENV !== "production" && (bm.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Is `true` if the current values equals the empty value.
   * For a single item value, it means that `value === null`
   * For a range value, it means that `value === [null, null]`
   */
  areAllSectionsEmpty: r.bool.isRequired,
  className: r.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * If true, the whole element is editable.
   * Useful when all the sections are selected.
   */
  contentEditable: r.bool.isRequired,
  /**
   * The elements to render.
   * Each element contains the prop to edit a section of the value.
   */
  elements: r.arrayOf(r.shape({
    after: r.object.isRequired,
    before: r.object.isRequired,
    container: r.object.isRequired,
    content: r.object.isRequired
  })).isRequired,
  endAdornment: r.node,
  fullWidth: r.bool,
  id: r.string,
  inputProps: r.object,
  inputRef: Rn,
  label: r.node,
  margin: r.oneOf(["dense", "none", "normal"]),
  name: r.string,
  notched: r.bool,
  onChange: r.func.isRequired,
  onClick: r.func.isRequired,
  onInput: r.func.isRequired,
  onKeyDown: r.func.isRequired,
  onPaste: r.func.isRequired,
  ownerState: r.any,
  readOnly: r.bool,
  renderSuffix: r.func,
  sectionListRef: r.oneOfType([r.func, r.shape({
    current: r.shape({
      getRoot: r.func.isRequired,
      getSectionContainer: r.func.isRequired,
      getSectionContent: r.func.isRequired,
      getSectionIndexFromDOMElement: r.func.isRequired
    })
  })]),
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: r.object,
  /**
   * The components used for each slot inside.
   *
   * @default {}
   */
  slots: r.object,
  startAdornment: r.node,
  style: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  value: r.string.isRequired
});
bm.muiName = "Input";
function _B(e) {
  let t = "https://mui.com/production-error/?code=" + e;
  for (let n = 1; n < arguments.length; n += 1)
    t += "&args[]=" + encodeURIComponent(arguments[n]);
  return "Minified MUI error #" + e + "; visit " + t + " for the full message.";
}
function Mi(e) {
  if (typeof e != "object" || e === null)
    return !1;
  const t = Object.getPrototypeOf(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}
function aC(e) {
  if (!Mi(e))
    return e;
  const t = {};
  return Object.keys(e).forEach((n) => {
    t[n] = aC(e[n]);
  }), t;
}
function mc(e, t, n = {
  clone: !0
}) {
  const o = n.clone ? V({}, e) : e;
  return Mi(e) && Mi(t) && Object.keys(t).forEach((i) => {
    Mi(t[i]) && // Avoid prototype pollution
    Object.prototype.hasOwnProperty.call(e, i) && Mi(e[i]) ? o[i] = mc(e[i], t[i], n) : n.clone ? o[i] = Mi(t[i]) ? aC(t[i]) : t[i] : o[i] = t[i];
  }), o;
}
const BB = ["values", "unit", "step"], zB = (e) => {
  const t = Object.keys(e).map((n) => ({
    key: n,
    val: e[n]
  })) || [];
  return t.sort((n, o) => n.val - o.val), t.reduce((n, o) => V({}, n, {
    [o.key]: o.val
  }), {});
};
function WB(e) {
  const {
    // The breakpoint **start** at this value.
    // For instance with the first breakpoint xs: [xs, sm).
    values: t = {
      xs: 0,
      // phone
      sm: 600,
      // tablet
      md: 900,
      // small laptop
      lg: 1200,
      // desktop
      xl: 1536
      // large screen
    },
    unit: n = "px",
    step: o = 5
  } = e, i = Xe(e, BB), s = zB(t), a = Object.keys(s);
  function l(m) {
    return `@media (min-width:${typeof t[m] == "number" ? t[m] : m}${n})`;
  }
  function c(m) {
    return `@media (max-width:${(typeof t[m] == "number" ? t[m] : m) - o / 100}${n})`;
  }
  function u(m, g) {
    const h = a.indexOf(g);
    return `@media (min-width:${typeof t[m] == "number" ? t[m] : m}${n}) and (max-width:${(h !== -1 && typeof t[a[h]] == "number" ? t[a[h]] : g) - o / 100}${n})`;
  }
  function d(m) {
    return a.indexOf(m) + 1 < a.length ? u(m, a[a.indexOf(m) + 1]) : l(m);
  }
  function p(m) {
    const g = a.indexOf(m);
    return g === 0 ? l(a[1]) : g === a.length - 1 ? c(a[g]) : u(m, a[a.indexOf(m) + 1]).replace("@media", "@media not all and");
  }
  return V({
    keys: a,
    values: s,
    up: l,
    down: c,
    between: u,
    only: d,
    not: p,
    unit: n
  }, i);
}
const HB = {
  borderRadius: 4
}, _r = process.env.NODE_ENV !== "production" ? r.oneOfType([r.number, r.string, r.object, r.array]) : {};
function Qs(e, t) {
  return t ? mc(e, t, {
    clone: !1
    // No need to clone deep, it's way faster.
  }) : e;
}
const vm = {
  xs: 0,
  // phone
  sm: 600,
  // tablet
  md: 900,
  // small laptop
  lg: 1200,
  // desktop
  xl: 1536
  // large screen
}, Ub = {
  // Sorted ASC by size. That's important.
  // It can't be configured as it's used statically for propTypes.
  keys: ["xs", "sm", "md", "lg", "xl"],
  up: (e) => `@media (min-width:${vm[e]}px)`
};
function mr(e, t, n) {
  const o = e.theme || {};
  if (Array.isArray(t)) {
    const s = o.breakpoints || Ub;
    return t.reduce((a, l, c) => (a[s.up(s.keys[c])] = n(t[c]), a), {});
  }
  if (typeof t == "object") {
    const s = o.breakpoints || Ub;
    return Object.keys(t).reduce((a, l) => {
      if (Object.keys(s.values || vm).indexOf(l) !== -1) {
        const c = s.up(l);
        a[c] = n(t[l], l);
      } else {
        const c = l;
        a[c] = t[c];
      }
      return a;
    }, {});
  }
  return n(t);
}
function GB(e = {}) {
  var t;
  return ((t = e.keys) == null ? void 0 : t.reduce((o, i) => {
    const s = e.up(i);
    return o[s] = {}, o;
  }, {})) || {};
}
function UB(e, t) {
  return e.reduce((n, o) => {
    const i = n[o];
    return (!i || Object.keys(i).length === 0) && delete n[o], n;
  }, t);
}
function lC(e) {
  if (typeof e != "string")
    throw new Error(process.env.NODE_ENV !== "production" ? "MUI: `capitalize(string)` expects a string argument." : _B(7));
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function Ou(e, t, n = !0) {
  if (!t || typeof t != "string")
    return null;
  if (e && e.vars && n) {
    const o = `vars.${t}`.split(".").reduce((i, s) => i && i[s] ? i[s] : null, e);
    if (o != null)
      return o;
  }
  return t.split(".").reduce((o, i) => o && o[i] != null ? o[i] : null, e);
}
function gc(e, t, n, o = n) {
  let i;
  return typeof e == "function" ? i = e(n) : Array.isArray(e) ? i = e[n] || o : i = Ou(e, n) || o, t && (i = t(i, o, e)), i;
}
function an(e) {
  const {
    prop: t,
    cssProperty: n = e.prop,
    themeKey: o,
    transform: i
  } = e, s = (a) => {
    if (a[t] == null)
      return null;
    const l = a[t], c = a.theme, u = Ou(c, o) || {};
    return mr(a, l, (p) => {
      let m = gc(u, i, p);
      return p === m && typeof p == "string" && (m = gc(u, i, `${t}${p === "default" ? "" : lC(p)}`, p)), n === !1 ? m : {
        [n]: m
      };
    });
  };
  return s.propTypes = process.env.NODE_ENV !== "production" ? {
    [t]: _r
  } : {}, s.filterProps = [t], s;
}
function XB(e) {
  const t = {};
  return (n) => (t[n] === void 0 && (t[n] = e(n)), t[n]);
}
const YB = {
  m: "margin",
  p: "padding"
}, ZB = {
  t: "Top",
  r: "Right",
  b: "Bottom",
  l: "Left",
  x: ["Left", "Right"],
  y: ["Top", "Bottom"]
}, Xb = {
  marginX: "mx",
  marginY: "my",
  paddingX: "px",
  paddingY: "py"
}, qB = XB((e) => {
  if (e.length > 2)
    if (Xb[e])
      e = Xb[e];
    else
      return [e];
  const [t, n] = e.split(""), o = YB[t], i = ZB[n] || "";
  return Array.isArray(i) ? i.map((s) => o + s) : [o + i];
}), Eu = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"], Pu = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"], JB = [...Eu, ...Pu];
function Za(e, t, n, o) {
  var i;
  const s = (i = Ou(e, t, !1)) != null ? i : n;
  return typeof s == "number" ? (a) => typeof a == "string" ? a : (process.env.NODE_ENV !== "production" && typeof a != "number" && console.error(`MUI: Expected ${o} argument to be a number or a string, got ${a}.`), s * a) : Array.isArray(s) ? (a) => typeof a == "string" ? a : (process.env.NODE_ENV !== "production" && (Number.isInteger(a) ? a > s.length - 1 && console.error([`MUI: The value provided (${a}) overflows.`, `The supported values are: ${JSON.stringify(s)}.`, `${a} > ${s.length - 1}, you need to add the missing values.`].join(`
`)) : console.error([`MUI: The \`theme.${t}\` array type cannot be combined with non integer values.You should either use an integer value that can be used as index, or define the \`theme.${t}\` as a number.`].join(`
`))), s[a]) : typeof s == "function" ? s : (process.env.NODE_ENV !== "production" && console.error([`MUI: The \`theme.${t}\` value (${s}) is invalid.`, "It should be a number, an array or a function."].join(`
`)), () => {
  });
}
function cC(e) {
  return Za(e, "spacing", 8, "spacing");
}
function qa(e, t) {
  if (typeof t == "string" || t == null)
    return t;
  const n = Math.abs(t), o = e(n);
  return t >= 0 ? o : typeof o == "number" ? -o : `-${o}`;
}
function KB(e, t) {
  return (n) => e.reduce((o, i) => (o[i] = qa(t, n), o), {});
}
function QB(e, t, n, o) {
  if (t.indexOf(n) === -1)
    return null;
  const i = qB(n), s = KB(i, o), a = e[n];
  return mr(e, a, s);
}
function uC(e, t) {
  const n = cC(e.theme);
  return Object.keys(e).map((o) => QB(e, t, o, n)).reduce(Qs, {});
}
function Qt(e) {
  return uC(e, Eu);
}
Qt.propTypes = process.env.NODE_ENV !== "production" ? Eu.reduce((e, t) => (e[t] = _r, e), {}) : {};
Qt.filterProps = Eu;
function en(e) {
  return uC(e, Pu);
}
en.propTypes = process.env.NODE_ENV !== "production" ? Pu.reduce((e, t) => (e[t] = _r, e), {}) : {};
en.filterProps = Pu;
process.env.NODE_ENV !== "production" && JB.reduce((e, t) => (e[t] = _r, e), {});
function e5(e = 8) {
  if (e.mui)
    return e;
  const t = cC({
    spacing: e
  }), n = (...o) => (process.env.NODE_ENV !== "production" && (o.length <= 4 || console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${o.length}`)), (o.length === 0 ? [1] : o).map((s) => {
    const a = t(s);
    return typeof a == "number" ? `${a}px` : a;
  }).join(" "));
  return n.mui = !0, n;
}
function Au(...e) {
  const t = e.reduce((o, i) => (i.filterProps.forEach((s) => {
    o[s] = i;
  }), o), {}), n = (o) => Object.keys(o).reduce((i, s) => t[s] ? Qs(i, t[s](o)) : i, {});
  return n.propTypes = process.env.NODE_ENV !== "production" ? e.reduce((o, i) => Object.assign(o, i.propTypes), {}) : {}, n.filterProps = e.reduce((o, i) => o.concat(i.filterProps), []), n;
}
function mo(e) {
  return typeof e != "number" ? e : `${e}px solid`;
}
function wo(e, t) {
  return an({
    prop: e,
    themeKey: "borders",
    transform: t
  });
}
const t5 = wo("border", mo), n5 = wo("borderTop", mo), o5 = wo("borderRight", mo), r5 = wo("borderBottom", mo), i5 = wo("borderLeft", mo), s5 = wo("borderColor"), a5 = wo("borderTopColor"), l5 = wo("borderRightColor"), c5 = wo("borderBottomColor"), u5 = wo("borderLeftColor"), d5 = wo("outline", mo), p5 = wo("outlineColor"), Du = (e) => {
  if (e.borderRadius !== void 0 && e.borderRadius !== null) {
    const t = Za(e.theme, "shape.borderRadius", 4, "borderRadius"), n = (o) => ({
      borderRadius: qa(t, o)
    });
    return mr(e, e.borderRadius, n);
  }
  return null;
};
Du.propTypes = process.env.NODE_ENV !== "production" ? {
  borderRadius: _r
} : {};
Du.filterProps = ["borderRadius"];
Au(t5, n5, o5, r5, i5, s5, a5, l5, c5, u5, Du, d5, p5);
const Mu = (e) => {
  if (e.gap !== void 0 && e.gap !== null) {
    const t = Za(e.theme, "spacing", 8, "gap"), n = (o) => ({
      gap: qa(t, o)
    });
    return mr(e, e.gap, n);
  }
  return null;
};
Mu.propTypes = process.env.NODE_ENV !== "production" ? {
  gap: _r
} : {};
Mu.filterProps = ["gap"];
const ju = (e) => {
  if (e.columnGap !== void 0 && e.columnGap !== null) {
    const t = Za(e.theme, "spacing", 8, "columnGap"), n = (o) => ({
      columnGap: qa(t, o)
    });
    return mr(e, e.columnGap, n);
  }
  return null;
};
ju.propTypes = process.env.NODE_ENV !== "production" ? {
  columnGap: _r
} : {};
ju.filterProps = ["columnGap"];
const ku = (e) => {
  if (e.rowGap !== void 0 && e.rowGap !== null) {
    const t = Za(e.theme, "spacing", 8, "rowGap"), n = (o) => ({
      rowGap: qa(t, o)
    });
    return mr(e, e.rowGap, n);
  }
  return null;
};
ku.propTypes = process.env.NODE_ENV !== "production" ? {
  rowGap: _r
} : {};
ku.filterProps = ["rowGap"];
const f5 = an({
  prop: "gridColumn"
}), m5 = an({
  prop: "gridRow"
}), g5 = an({
  prop: "gridAutoFlow"
}), h5 = an({
  prop: "gridAutoColumns"
}), b5 = an({
  prop: "gridAutoRows"
}), v5 = an({
  prop: "gridTemplateColumns"
}), y5 = an({
  prop: "gridTemplateRows"
}), x5 = an({
  prop: "gridTemplateAreas"
}), C5 = an({
  prop: "gridArea"
});
Au(Mu, ju, ku, f5, m5, g5, h5, b5, v5, y5, x5, C5);
function _i(e, t) {
  return t === "grey" ? t : e;
}
const S5 = an({
  prop: "color",
  themeKey: "palette",
  transform: _i
}), w5 = an({
  prop: "bgcolor",
  cssProperty: "backgroundColor",
  themeKey: "palette",
  transform: _i
}), T5 = an({
  prop: "backgroundColor",
  themeKey: "palette",
  transform: _i
});
Au(S5, w5, T5);
function Jn(e) {
  return e <= 1 && e !== 0 ? `${e * 100}%` : e;
}
const I5 = an({
  prop: "width",
  transform: Jn
}), ym = (e) => {
  if (e.maxWidth !== void 0 && e.maxWidth !== null) {
    const t = (n) => {
      var o, i;
      const s = ((o = e.theme) == null || (o = o.breakpoints) == null || (o = o.values) == null ? void 0 : o[n]) || vm[n];
      return s ? ((i = e.theme) == null || (i = i.breakpoints) == null ? void 0 : i.unit) !== "px" ? {
        maxWidth: `${s}${e.theme.breakpoints.unit}`
      } : {
        maxWidth: s
      } : {
        maxWidth: Jn(n)
      };
    };
    return mr(e, e.maxWidth, t);
  }
  return null;
};
ym.filterProps = ["maxWidth"];
const R5 = an({
  prop: "minWidth",
  transform: Jn
}), O5 = an({
  prop: "height",
  transform: Jn
}), E5 = an({
  prop: "maxHeight",
  transform: Jn
}), P5 = an({
  prop: "minHeight",
  transform: Jn
});
an({
  prop: "size",
  cssProperty: "width",
  transform: Jn
});
an({
  prop: "size",
  cssProperty: "height",
  transform: Jn
});
const A5 = an({
  prop: "boxSizing"
});
Au(I5, ym, R5, O5, E5, P5, A5);
const dC = {
  // borders
  border: {
    themeKey: "borders",
    transform: mo
  },
  borderTop: {
    themeKey: "borders",
    transform: mo
  },
  borderRight: {
    themeKey: "borders",
    transform: mo
  },
  borderBottom: {
    themeKey: "borders",
    transform: mo
  },
  borderLeft: {
    themeKey: "borders",
    transform: mo
  },
  borderColor: {
    themeKey: "palette"
  },
  borderTopColor: {
    themeKey: "palette"
  },
  borderRightColor: {
    themeKey: "palette"
  },
  borderBottomColor: {
    themeKey: "palette"
  },
  borderLeftColor: {
    themeKey: "palette"
  },
  outline: {
    themeKey: "borders",
    transform: mo
  },
  outlineColor: {
    themeKey: "palette"
  },
  borderRadius: {
    themeKey: "shape.borderRadius",
    style: Du
  },
  // palette
  color: {
    themeKey: "palette",
    transform: _i
  },
  bgcolor: {
    themeKey: "palette",
    cssProperty: "backgroundColor",
    transform: _i
  },
  backgroundColor: {
    themeKey: "palette",
    transform: _i
  },
  // spacing
  p: {
    style: en
  },
  pt: {
    style: en
  },
  pr: {
    style: en
  },
  pb: {
    style: en
  },
  pl: {
    style: en
  },
  px: {
    style: en
  },
  py: {
    style: en
  },
  padding: {
    style: en
  },
  paddingTop: {
    style: en
  },
  paddingRight: {
    style: en
  },
  paddingBottom: {
    style: en
  },
  paddingLeft: {
    style: en
  },
  paddingX: {
    style: en
  },
  paddingY: {
    style: en
  },
  paddingInline: {
    style: en
  },
  paddingInlineStart: {
    style: en
  },
  paddingInlineEnd: {
    style: en
  },
  paddingBlock: {
    style: en
  },
  paddingBlockStart: {
    style: en
  },
  paddingBlockEnd: {
    style: en
  },
  m: {
    style: Qt
  },
  mt: {
    style: Qt
  },
  mr: {
    style: Qt
  },
  mb: {
    style: Qt
  },
  ml: {
    style: Qt
  },
  mx: {
    style: Qt
  },
  my: {
    style: Qt
  },
  margin: {
    style: Qt
  },
  marginTop: {
    style: Qt
  },
  marginRight: {
    style: Qt
  },
  marginBottom: {
    style: Qt
  },
  marginLeft: {
    style: Qt
  },
  marginX: {
    style: Qt
  },
  marginY: {
    style: Qt
  },
  marginInline: {
    style: Qt
  },
  marginInlineStart: {
    style: Qt
  },
  marginInlineEnd: {
    style: Qt
  },
  marginBlock: {
    style: Qt
  },
  marginBlockStart: {
    style: Qt
  },
  marginBlockEnd: {
    style: Qt
  },
  // display
  displayPrint: {
    cssProperty: !1,
    transform: (e) => ({
      "@media print": {
        display: e
      }
    })
  },
  display: {},
  overflow: {},
  textOverflow: {},
  visibility: {},
  whiteSpace: {},
  // flexbox
  flexBasis: {},
  flexDirection: {},
  flexWrap: {},
  justifyContent: {},
  alignItems: {},
  alignContent: {},
  order: {},
  flex: {},
  flexGrow: {},
  flexShrink: {},
  alignSelf: {},
  justifyItems: {},
  justifySelf: {},
  // grid
  gap: {
    style: Mu
  },
  rowGap: {
    style: ku
  },
  columnGap: {
    style: ju
  },
  gridColumn: {},
  gridRow: {},
  gridAutoFlow: {},
  gridAutoColumns: {},
  gridAutoRows: {},
  gridTemplateColumns: {},
  gridTemplateRows: {},
  gridTemplateAreas: {},
  gridArea: {},
  // positions
  position: {},
  zIndex: {
    themeKey: "zIndex"
  },
  top: {},
  right: {},
  bottom: {},
  left: {},
  // shadows
  boxShadow: {
    themeKey: "shadows"
  },
  // sizing
  width: {
    transform: Jn
  },
  maxWidth: {
    style: ym
  },
  minWidth: {
    transform: Jn
  },
  height: {
    transform: Jn
  },
  maxHeight: {
    transform: Jn
  },
  minHeight: {
    transform: Jn
  },
  boxSizing: {},
  // typography
  fontFamily: {
    themeKey: "typography"
  },
  fontSize: {
    themeKey: "typography"
  },
  fontStyle: {
    themeKey: "typography"
  },
  fontWeight: {
    themeKey: "typography"
  },
  letterSpacing: {},
  textTransform: {},
  lineHeight: {},
  textAlign: {},
  typography: {
    cssProperty: !1,
    themeKey: "typography"
  }
};
function D5(...e) {
  const t = e.reduce((o, i) => o.concat(Object.keys(i)), []), n = new Set(t);
  return e.every((o) => n.size === Object.keys(o).length);
}
function M5(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function j5() {
  function e(n, o, i, s) {
    const a = {
      [n]: o,
      theme: i
    }, l = s[n];
    if (!l)
      return {
        [n]: o
      };
    const {
      cssProperty: c = n,
      themeKey: u,
      transform: d,
      style: p
    } = l;
    if (o == null)
      return null;
    if (u === "typography" && o === "inherit")
      return {
        [n]: o
      };
    const m = Ou(i, u) || {};
    return p ? p(a) : mr(a, o, (h) => {
      let v = gc(m, d, h);
      return h === v && typeof h == "string" && (v = gc(m, d, `${n}${h === "default" ? "" : lC(h)}`, h)), c === !1 ? v : {
        [c]: v
      };
    });
  }
  function t(n) {
    var o;
    const {
      sx: i,
      theme: s = {}
    } = n || {};
    if (!i)
      return null;
    const a = (o = s.unstable_sxConfig) != null ? o : dC;
    function l(c) {
      let u = c;
      if (typeof c == "function")
        u = c(s);
      else if (typeof c != "object")
        return c;
      if (!u)
        return null;
      const d = GB(s.breakpoints), p = Object.keys(d);
      let m = d;
      return Object.keys(u).forEach((g) => {
        const h = M5(u[g], s);
        if (h != null)
          if (typeof h == "object")
            if (a[g])
              m = Qs(m, e(g, h, s, a));
            else {
              const v = mr({
                theme: s
              }, h, (b) => ({
                [g]: b
              }));
              D5(v, h) ? m[g] = t({
                sx: h,
                theme: s
              }) : m = Qs(m, v);
            }
          else
            m = Qs(m, e(g, h, s, a));
      }), UB(p, m);
    }
    return Array.isArray(i) ? i.map(l) : l(i);
  }
  return t;
}
const pC = j5();
pC.filterProps = ["sx"];
function k5(e, t) {
  const n = this;
  return n.vars && typeof n.getColorSchemeSelector == "function" ? {
    [n.getColorSchemeSelector(e).replace(/(\[[^\]]+\])/, "*:where($1)")]: t
  } : n.palette.mode === e ? t : {};
}
const F5 = ["breakpoints", "palette", "spacing", "shape"];
function N5(e = {}, ...t) {
  const {
    breakpoints: n = {},
    palette: o = {},
    spacing: i,
    shape: s = {}
  } = e, a = Xe(e, F5), l = WB(n), c = e5(i);
  let u = mc({
    breakpoints: l,
    direction: "ltr",
    components: {},
    // Inject component definitions.
    palette: V({
      mode: "light"
    }, o),
    spacing: c,
    shape: V({}, HB, s)
  }, a);
  return u.applyStyles = k5, u = t.reduce((d, p) => mc(d, p), u), u.unstable_sxConfig = V({}, dC, a == null ? void 0 : a.unstable_sxConfig), u.unstable_sx = function(p) {
    return pC({
      sx: p,
      theme: this
    });
  }, u;
}
function V5(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
N5();
function ui(e) {
  "@babel/helpers - typeof";
  return ui = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
    return typeof t;
  } : function(t) {
    return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
  }, ui(e);
}
function $5(e, t) {
  if (ui(e) != "object" || !e) return e;
  var n = e[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(e, t || "default");
    if (ui(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (t === "string" ? String : Number)(e);
}
function fC(e) {
  var t = $5(e, "string");
  return ui(t) == "symbol" ? t : t + "";
}
function L5(e) {
  return It("MuiPickersFilledInput", e);
}
const zr = V({}, Li, Ot("MuiPickersFilledInput", ["root", "underline", "input"])), _5 = ["label", "autoFocus", "disableUnderline", "ownerState"], B5 = Q(Iu, {
  name: "MuiPickersFilledInput",
  slot: "Root",
  overridesResolver: (e, t) => t.root,
  shouldForwardProp: (e) => V5(e) && e !== "disableUnderline"
})(({
  theme: e
}) => {
  const t = e.palette.mode === "light", n = t ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)", o = t ? "rgba(0, 0, 0, 0.06)" : "rgba(255, 255, 255, 0.09)", i = t ? "rgba(0, 0, 0, 0.09)" : "rgba(255, 255, 255, 0.13)", s = t ? "rgba(0, 0, 0, 0.12)" : "rgba(255, 255, 255, 0.12)";
  return {
    backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : o,
    borderTopLeftRadius: (e.vars || e).shape.borderRadius,
    borderTopRightRadius: (e.vars || e).shape.borderRadius,
    transition: e.transitions.create("background-color", {
      duration: e.transitions.duration.shorter,
      easing: e.transitions.easing.easeOut
    }),
    "&:hover": {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.hoverBg : i,
      // Reset on touch devices, it doesn't add specificity
      "@media (hover: none)": {
        backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : o
      }
    },
    [`&.${zr.focused}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.bg : o
    },
    [`&.${zr.disabled}`]: {
      backgroundColor: e.vars ? e.vars.palette.FilledInput.disabledBg : s
    },
    variants: [...Object.keys((e.vars ?? e).palette).filter((a) => (e.vars ?? e).palette[a].main).map((a) => {
      var l;
      return {
        props: {
          color: a,
          disableUnderline: !1
        },
        style: {
          "&::after": {
            // @ts-ignore
            borderBottom: `2px solid ${(l = (e.vars || e).palette[a]) == null ? void 0 : l.main}`
          }
        }
      };
    }), {
      props: {
        disableUnderline: !1
      },
      style: {
        "&::after": {
          left: 0,
          bottom: 0,
          // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e.transitions.create("transform", {
            duration: e.transitions.duration.shorter,
            easing: e.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${zr.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${zr.error}`]: {
          "&:before, &:after": {
            borderBottomColor: (e.vars || e).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${e.vars ? `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})` : n}`,
          left: 0,
          bottom: 0,
          // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e.transitions.create("border-bottom-color", {
            duration: e.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${zr.disabled}, .${zr.error}):before`]: {
          borderBottom: `1px solid ${(e.vars || e).palette.text.primary}`
        },
        [`&.${zr.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }, {
      props: ({
        startAdornment: a
      }) => !!a,
      style: {
        paddingLeft: 12
      }
    }, {
      props: ({
        endAdornment: a
      }) => !!a,
      style: {
        paddingRight: 12
      }
    }]
  };
}), z5 = Q(hm, {
  name: "MuiPickersFilledInput",
  slot: "sectionsContainer",
  overridesResolver: (e, t) => t.sectionsContainer
})({
  paddingTop: 25,
  paddingRight: 12,
  paddingBottom: 8,
  paddingLeft: 12,
  variants: [{
    props: {
      size: "small"
    },
    style: {
      paddingTop: 21,
      paddingBottom: 4
    }
  }, {
    props: ({
      startAdornment: e
    }) => !!e,
    style: {
      paddingLeft: 0
    }
  }, {
    props: ({
      endAdornment: e
    }) => !!e,
    style: {
      paddingRight: 0
    }
  }, {
    props: {
      hiddenLabel: !0
    },
    style: {
      paddingTop: 16,
      paddingBottom: 17
    }
  }, {
    props: {
      hiddenLabel: !0,
      size: "small"
    },
    style: {
      paddingTop: 8,
      paddingBottom: 9
    }
  }]
}), W5 = (e) => {
  const {
    classes: t,
    disableUnderline: n
  } = e, i = xt({
    root: ["root", !n && "underline"],
    input: ["input"]
  }, L5, t);
  return V({}, t, i);
}, xm = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiPickersFilledInput"
  }), {
    label: i,
    disableUnderline: s = !1,
    ownerState: a
  } = o, l = Xe(o, _5), c = Gn(), u = V({}, o, a, c, {
    color: (c == null ? void 0 : c.color) || "primary"
  }), d = W5(u);
  return /* @__PURE__ */ f.jsx(Ru, V({
    slots: {
      root: B5,
      input: z5
    },
    slotProps: {
      root: {
        disableUnderline: s
      }
    }
  }, l, {
    label: i,
    classes: d,
    ref: n
  }));
});
process.env.NODE_ENV !== "production" && (xm.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Is `true` if the current values equals the empty value.
   * For a single item value, it means that `value === null`
   * For a range value, it means that `value === [null, null]`
   */
  areAllSectionsEmpty: r.bool.isRequired,
  className: r.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * If true, the whole element is editable.
   * Useful when all the sections are selected.
   */
  contentEditable: r.bool.isRequired,
  disableUnderline: r.bool,
  /**
   * The elements to render.
   * Each element contains the prop to edit a section of the value.
   */
  elements: r.arrayOf(r.shape({
    after: r.object.isRequired,
    before: r.object.isRequired,
    container: r.object.isRequired,
    content: r.object.isRequired
  })).isRequired,
  endAdornment: r.node,
  fullWidth: r.bool,
  hiddenLabel: r.bool,
  id: r.string,
  inputProps: r.object,
  inputRef: Rn,
  label: r.node,
  margin: r.oneOf(["dense", "none", "normal"]),
  name: r.string,
  onChange: r.func.isRequired,
  onClick: r.func.isRequired,
  onInput: r.func.isRequired,
  onKeyDown: r.func.isRequired,
  onPaste: r.func.isRequired,
  ownerState: r.any,
  readOnly: r.bool,
  renderSuffix: r.func,
  sectionListRef: r.oneOfType([r.func, r.shape({
    current: r.shape({
      getRoot: r.func.isRequired,
      getSectionContainer: r.func.isRequired,
      getSectionContent: r.func.isRequired,
      getSectionIndexFromDOMElement: r.func.isRequired
    })
  })]),
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: r.object,
  /**
   * The components used for each slot inside.
   *
   * @default {}
   */
  slots: r.object,
  startAdornment: r.node,
  style: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  value: r.string.isRequired
});
xm.muiName = "Input";
function H5(e) {
  return It("MuiPickersFilledInput", e);
}
const Ms = V({}, Li, Ot("MuiPickersInput", ["root", "input"])), G5 = ["label", "autoFocus", "disableUnderline", "ownerState"], U5 = Q(Iu, {
  name: "MuiPickersInput",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})(({
  theme: e
}) => {
  let n = e.palette.mode === "light" ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)";
  return e.vars && (n = `rgba(${e.vars.palette.common.onBackgroundChannel} / ${e.vars.opacity.inputUnderline})`), {
    "label + &": {
      marginTop: 16
    },
    variants: [...Object.keys((e.vars ?? e).palette).filter((o) => (e.vars ?? e).palette[o].main).map((o) => ({
      props: {
        color: o
      },
      style: {
        "&::after": {
          // @ts-ignore
          borderBottom: `2px solid ${(e.vars || e).palette[o].main}`
        }
      }
    })), {
      props: {
        disableUnderline: !1
      },
      style: {
        "&::after": {
          background: "red",
          left: 0,
          bottom: 0,
          // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
          content: '""',
          position: "absolute",
          right: 0,
          transform: "scaleX(0)",
          transition: e.transitions.create("transform", {
            duration: e.transitions.duration.shorter,
            easing: e.transitions.easing.easeOut
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&.${Ms.focused}:after`]: {
          // translateX(0) is a workaround for Safari transform scale bug
          // See https://github.com/mui/material-ui/issues/31766
          transform: "scaleX(1) translateX(0)"
        },
        [`&.${Ms.error}`]: {
          "&:before, &:after": {
            borderBottomColor: (e.vars || e).palette.error.main
          }
        },
        "&::before": {
          borderBottom: `1px solid ${n}`,
          left: 0,
          bottom: 0,
          // Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242
          content: '"\\00a0"',
          position: "absolute",
          right: 0,
          transition: e.transitions.create("border-bottom-color", {
            duration: e.transitions.duration.shorter
          }),
          pointerEvents: "none"
          // Transparent to the hover style.
        },
        [`&:hover:not(.${Ms.disabled}, .${Ms.error}):before`]: {
          borderBottom: `2px solid ${(e.vars || e).palette.text.primary}`,
          // Reset on touch devices, it doesn't add specificity
          "@media (hover: none)": {
            borderBottom: `1px solid ${n}`
          }
        },
        [`&.${Ms.disabled}:before`]: {
          borderBottomStyle: "dotted"
        }
      }
    }]
  };
}), X5 = (e) => {
  const {
    classes: t,
    disableUnderline: n
  } = e, i = xt({
    root: ["root", !n && "underline"],
    input: ["input"]
  }, H5, t);
  return V({}, t, i);
}, Cm = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiPickersInput"
  }), {
    label: i,
    disableUnderline: s = !1,
    ownerState: a
  } = o, l = Xe(o, G5), c = Gn(), u = V({}, o, a, c, {
    disableUnderline: s,
    color: (c == null ? void 0 : c.color) || "primary"
  }), d = X5(u);
  return /* @__PURE__ */ f.jsx(Ru, V({
    slots: {
      root: U5
    }
  }, l, {
    label: i,
    classes: d,
    ref: n
  }));
});
process.env.NODE_ENV !== "production" && (Cm.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Is `true` if the current values equals the empty value.
   * For a single item value, it means that `value === null`
   * For a range value, it means that `value === [null, null]`
   */
  areAllSectionsEmpty: r.bool.isRequired,
  className: r.string,
  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: r.elementType,
  /**
   * If true, the whole element is editable.
   * Useful when all the sections are selected.
   */
  contentEditable: r.bool.isRequired,
  disableUnderline: r.bool,
  /**
   * The elements to render.
   * Each element contains the prop to edit a section of the value.
   */
  elements: r.arrayOf(r.shape({
    after: r.object.isRequired,
    before: r.object.isRequired,
    container: r.object.isRequired,
    content: r.object.isRequired
  })).isRequired,
  endAdornment: r.node,
  fullWidth: r.bool,
  id: r.string,
  inputProps: r.object,
  inputRef: Rn,
  label: r.node,
  margin: r.oneOf(["dense", "none", "normal"]),
  name: r.string,
  onChange: r.func.isRequired,
  onClick: r.func.isRequired,
  onInput: r.func.isRequired,
  onKeyDown: r.func.isRequired,
  onPaste: r.func.isRequired,
  ownerState: r.any,
  readOnly: r.bool,
  renderSuffix: r.func,
  sectionListRef: r.oneOfType([r.func, r.shape({
    current: r.shape({
      getRoot: r.func.isRequired,
      getSectionContainer: r.func.isRequired,
      getSectionContent: r.func.isRequired,
      getSectionIndexFromDOMElement: r.func.isRequired
    })
  })]),
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: r.object,
  /**
   * The components used for each slot inside.
   *
   * @default {}
   */
  slots: r.object,
  startAdornment: r.node,
  style: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  value: r.string.isRequired
});
Cm.muiName = "Input";
const Y5 = ["onFocus", "onBlur", "className", "color", "disabled", "error", "variant", "required", "InputProps", "inputProps", "inputRef", "sectionListRef", "elements", "areAllSectionsEmpty", "onClick", "onKeyDown", "onKeyUp", "onPaste", "onInput", "endAdornment", "startAdornment", "tabIndex", "contentEditable", "focused", "value", "onChange", "fullWidth", "id", "name", "helperText", "FormHelperTextProps", "label", "InputLabelProps"], Z5 = {
  standard: Cm,
  filled: xm,
  outlined: bm
}, q5 = Q(go, {
  name: "MuiPickersTextField",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), J5 = (e) => {
  const {
    focused: t,
    disabled: n,
    classes: o,
    required: i
  } = e;
  return xt({
    root: ["root", t && !n && "focused", n && "disabled", i && "required"]
  }, vB, o);
}, Fu = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiPickersTextField"
  }), {
    // Props used by FormControl
    onFocus: i,
    onBlur: s,
    className: a,
    color: l = "primary",
    disabled: c = !1,
    error: u = !1,
    variant: d = "outlined",
    required: p = !1,
    // Props used by PickersInput
    InputProps: m,
    inputProps: g,
    inputRef: h,
    sectionListRef: v,
    elements: b,
    areAllSectionsEmpty: y,
    onClick: C,
    onKeyDown: x,
    onKeyUp: T,
    onPaste: w,
    onInput: R,
    endAdornment: E,
    startAdornment: O,
    tabIndex: I,
    contentEditable: P,
    focused: A,
    value: D,
    onChange: k,
    fullWidth: M,
    id: F,
    name: N,
    // Props used by FormHelperText
    helperText: W,
    FormHelperTextProps: H,
    // Props used by InputLabel
    label: B,
    InputLabelProps: j
  } = o, L = Xe(o, Y5), ee = S.useRef(null), Y = Vn(n, ee), $ = ps(F), U = W && $ ? `${$}-helper-text` : void 0, X = B && $ ? `${$}-label` : void 0, Z = V({}, o, {
    color: l,
    disabled: c,
    error: u,
    focused: A,
    required: p,
    variant: d
  }), G = J5(Z), K = Z5[d];
  return /* @__PURE__ */ f.jsxs(q5, V({
    className: fe(G.root, a),
    ref: Y,
    focused: A,
    onFocus: i,
    onBlur: s,
    disabled: c,
    variant: d,
    error: u,
    color: l,
    fullWidth: M,
    required: p,
    ownerState: Z
  }, L, {
    children: [/* @__PURE__ */ f.jsx(au, V({
      htmlFor: $,
      id: X
    }, j, {
      children: B
    })), /* @__PURE__ */ f.jsx(K, V({
      elements: b,
      areAllSectionsEmpty: y,
      onClick: C,
      onKeyDown: x,
      onKeyUp: T,
      onInput: R,
      onPaste: w,
      endAdornment: E,
      startAdornment: O,
      tabIndex: I,
      contentEditable: P,
      value: D,
      onChange: k,
      id: $,
      fullWidth: M,
      inputProps: g,
      inputRef: h,
      sectionListRef: v,
      label: B,
      name: N,
      role: "group",
      "aria-labelledby": X
    }, m)), W && /* @__PURE__ */ f.jsx(su, V({
      id: U
    }, H, {
      children: W
    }))]
  }));
});
process.env.NODE_ENV !== "production" && (Fu.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Is `true` if the current values equals the empty value.
   * For a single item value, it means that `value === null`
   * For a range value, it means that `value === [null, null]`
   */
  areAllSectionsEmpty: r.bool.isRequired,
  className: r.string,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: r.oneOf(["error", "info", "primary", "secondary", "success", "warning"]),
  component: r.elementType,
  /**
   * If true, the whole element is editable.
   * Useful when all the sections are selected.
   */
  contentEditable: r.bool.isRequired,
  disabled: r.bool.isRequired,
  /**
   * The elements to render.
   * Each element contains the prop to edit a section of the value.
   */
  elements: r.arrayOf(r.shape({
    after: r.object.isRequired,
    before: r.object.isRequired,
    container: r.object.isRequired,
    content: r.object.isRequired
  })).isRequired,
  endAdornment: r.node,
  error: r.bool.isRequired,
  /**
   * If `true`, the component is displayed in focused state.
   */
  focused: r.bool,
  FormHelperTextProps: r.object,
  fullWidth: r.bool,
  /**
   * The helper text content.
   */
  helperText: r.node,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: r.bool,
  id: r.string,
  InputLabelProps: r.object,
  inputProps: r.object,
  /**
   * Props applied to the Input element.
   * It will be a [`FilledInput`](/material-ui/api/filled-input/),
   * [`OutlinedInput`](/material-ui/api/outlined-input/) or [`Input`](/material-ui/api/input/)
   * component depending on the `variant` prop value.
   */
  InputProps: r.object,
  inputRef: Rn,
  label: r.node,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: r.oneOf(["dense", "none", "normal"]),
  name: r.string,
  onBlur: r.func.isRequired,
  onChange: r.func.isRequired,
  onClick: r.func.isRequired,
  onFocus: r.func.isRequired,
  onInput: r.func.isRequired,
  onKeyDown: r.func.isRequired,
  onPaste: r.func.isRequired,
  readOnly: r.bool,
  /**
   * If `true`, the label will indicate that the `input` is required.
   * @default false
   */
  required: r.bool,
  sectionListRef: r.oneOfType([r.func, r.shape({
    current: r.shape({
      getRoot: r.func.isRequired,
      getSectionContainer: r.func.isRequired,
      getSectionContent: r.func.isRequired,
      getSectionIndexFromDOMElement: r.func.isRequired
    })
  })]),
  /**
   * The size of the component.
   * @default 'medium'
   */
  size: r.oneOf(["medium", "small"]),
  startAdornment: r.node,
  style: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  value: r.string.isRequired,
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: r.oneOf(["filled", "outlined", "standard"])
});
const K5 = ["enableAccessibleFieldDOMStructure"], Q5 = ["InputProps", "readOnly"], ez = ["onPaste", "onKeyDown", "inputMode", "readOnly", "InputProps", "inputProps", "inputRef"], Sm = (e) => {
  let {
    enableAccessibleFieldDOMStructure: t
  } = e, n = Xe(e, K5);
  if (t) {
    const {
      InputProps: p,
      readOnly: m
    } = n, g = Xe(n, Q5);
    return V({}, g, {
      InputProps: V({}, p ?? {}, {
        readOnly: m
      })
    });
  }
  const {
    onPaste: o,
    onKeyDown: i,
    inputMode: s,
    readOnly: a,
    InputProps: l,
    inputProps: c,
    inputRef: u
  } = n, d = Xe(n, ez);
  return V({}, d, {
    InputProps: V({}, l ?? {}, {
      readOnly: a
    }),
    inputProps: V({}, c ?? {}, {
      inputMode: s,
      onPaste: o,
      onKeyDown: i,
      ref: u
    })
  });
}, tz = ["slots", "slotProps", "InputProps", "inputProps"], wm = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiDateField"
  }), {
    slots: i,
    slotProps: s,
    InputProps: a,
    inputProps: l
  } = o, c = Xe(o, tz), u = o, d = (i == null ? void 0 : i.textField) ?? (t.enableAccessibleFieldDOMStructure ? Fu : Kn), p = Rt({
    elementType: d,
    externalSlotProps: s == null ? void 0 : s.textField,
    externalForwardedProps: c,
    additionalProps: {
      ref: n
    },
    ownerState: u
  });
  p.inputProps = V({}, l, p.inputProps), p.InputProps = V({}, a, p.InputProps);
  const m = bB(p), g = Sm(m), h = mm(V({}, g, {
    slots: i,
    slotProps: s
  }));
  return /* @__PURE__ */ f.jsx(d, V({}, h));
});
process.env.NODE_ENV !== "production" && (wm.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the `input` element is focused during the first mount.
   * @default false
   */
  autoFocus: r.bool,
  className: r.string,
  /**
   * If `true`, a clear button will be shown in the field allowing value clearing.
   * @default false
   */
  clearable: r.bool,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: r.oneOf(["error", "info", "primary", "secondary", "success", "warning"]),
  component: r.elementType,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: r.object,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: r.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: r.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: r.bool,
  /**
   * @default false
   */
  enableAccessibleFieldDOMStructure: r.bool,
  /**
   * If `true`, the component is displayed in focused state.
   */
  focused: r.bool,
  /**
   * Format of the date when rendered in the input(s).
   */
  format: r.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: r.oneOf(["dense", "spacious"]),
  /**
   * Props applied to the [`FormHelperText`](/material-ui/api/form-helper-text/) element.
   */
  FormHelperTextProps: r.object,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: r.bool,
  /**
   * The helper text content.
   */
  helperText: r.node,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: r.bool,
  /**
   * The id of the `input` element.
   * Use this prop to make `label` and `helperText` accessible for screen readers.
   */
  id: r.string,
  /**
   * Props applied to the [`InputLabel`](/material-ui/api/input-label/) element.
   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.
   */
  InputLabelProps: r.object,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: r.object,
  /**
   * Props applied to the Input element.
   * It will be a [`FilledInput`](/material-ui/api/filled-input/),
   * [`OutlinedInput`](/material-ui/api/outlined-input/) or [`Input`](/material-ui/api/input/)
   * component depending on the `variant` prop value.
   */
  InputProps: r.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Rn,
  /**
   * The label content.
   */
  label: r.node,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: r.oneOf(["dense", "none", "normal"]),
  /**
   * Maximal selectable date.
   * @default 2099-12-31
   */
  maxDate: r.object,
  /**
   * Minimal selectable date.
   * @default 1900-01-01
   */
  minDate: r.object,
  /**
   * Name attribute of the `input` element.
   */
  name: r.string,
  onBlur: r.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: r.func,
  /**
   * Callback fired when the clear button is clicked.
   */
  onClear: r.func,
  /**
   * Callback fired when the error associated with the current value changes.
   * When a validation error is detected, the `error` parameter contains a non-null value.
   * This can be used to render an appropriate form error.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @param {TError} error The reason why the current value is not valid.
   * @param {TValue} value The value associated with the error.
   */
  onError: r.func,
  onFocus: r.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: r.func,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   * @default false
   */
  readOnly: r.bool,
  /**
   * The date used to generate a part of the new value that is not present in the format when both `value` and `defaultValue` are empty.
   * For example, on time fields it will be used to determine the date to set.
   * @default The closest valid date using the validation props, except callbacks such as `shouldDisableDate`. Value is rounded to the most granular section used.
   */
  referenceDate: r.object,
  /**
   * If `true`, the label is displayed as required and the `input` element is required.
   * @default false
   */
  required: r.bool,
  /**
   * The currently selected sections.
   * This prop accepts four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 3. If `"all"` is provided, all the sections will be selected.
   * 4. If `null` is provided, no section will be selected.
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: r.oneOfType([r.oneOf(["all", "day", "empty", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), r.number]),
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (for example when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: r.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: r.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: r.func,
  /**
   * If `true`, the format will respect the leading zeroes (e.g: on dayjs, the format `M/D/YYYY` will render `8/16/2018`)
   * If `false`, the format will always add leading zeroes (e.g: on dayjs, the format `M/D/YYYY` will render `08/16/2018`)
   *
   * Warning n°1: Luxon is not able to respect the leading zeroes when using macro tokens (e.g: "DD"), so `shouldRespectLeadingZeros={true}` might lead to inconsistencies when using `AdapterLuxon`.
   *
   * Warning n°2: When `shouldRespectLeadingZeros={true}`, the field will add an invisible character on the sections containing a single digit to make sure `onChange` is fired.
   * If you need to get the clean value from the input, you can remove this character using `input.value.replace(/\u200e/g, '')`.
   *
   * Warning n°3: When used in strict mode, dayjs and moment require to respect the leading zeros.
   * This mean that when using `shouldRespectLeadingZeros={false}`, if you retrieve the value directly from the input (not listening to `onChange`) and your format contains tokens without leading zeros, the value will not be parsed by your library.
   *
   * @default false
   */
  shouldRespectLeadingZeros: r.bool,
  /**
   * The size of the component.
   */
  size: r.oneOf(["medium", "small"]),
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: r.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: r.object,
  style: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: r.string,
  /**
   * The ref object used to imperatively interact with the field.
   */
  unstableFieldRef: r.oneOfType([r.func, r.object]),
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: r.object,
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: r.oneOf(["filled", "outlined", "standard"])
});
const mC = ({
  shouldDisableDate: e,
  shouldDisableMonth: t,
  shouldDisableYear: n,
  minDate: o,
  maxDate: i,
  disableFuture: s,
  disablePast: a,
  timezone: l
}) => {
  const c = mi();
  return S.useCallback((u) => ms({
    adapter: c,
    value: u,
    timezone: l,
    props: {
      shouldDisableDate: e,
      shouldDisableMonth: t,
      shouldDisableYear: n,
      minDate: o,
      maxDate: i,
      disableFuture: s,
      disablePast: a
    }
  }) !== null, [c, e, t, n, o, i, s, a, l]);
}, nz = (e, t, n) => (o, i) => {
  switch (i.type) {
    case "changeMonth":
      return V({}, o, {
        slideDirection: i.direction,
        currentMonth: i.newMonth,
        isMonthSwitchingAnimating: !e
      });
    case "finishMonthSwitchingAnimation":
      return V({}, o, {
        isMonthSwitchingAnimating: !1
      });
    case "changeFocusedDay": {
      if (o.focusedDay != null && i.focusedDay != null && n.isSameDay(i.focusedDay, o.focusedDay))
        return o;
      const s = i.focusedDay != null && !t && !n.isSameMonth(o.currentMonth, i.focusedDay);
      return V({}, o, {
        focusedDay: i.focusedDay,
        isMonthSwitchingAnimating: s && !e && !i.withoutMonthSwitchingAnimation,
        currentMonth: s ? n.startOfMonth(i.focusedDay) : o.currentMonth,
        slideDirection: i.focusedDay != null && n.isAfterDay(i.focusedDay, o.currentMonth) ? "left" : "right"
      });
    }
    default:
      throw new Error("missing support");
  }
}, oz = (e) => {
  const {
    value: t,
    referenceDate: n,
    disableFuture: o,
    disablePast: i,
    disableSwitchToMonthOnDayFocus: s = !1,
    maxDate: a,
    minDate: l,
    onMonthChange: c,
    reduceAnimations: u,
    shouldDisableDate: d,
    timezone: p
  } = e, m = gt(), g = S.useRef(nz(!!u, s, m)).current, h = S.useMemo(
    () => rn.getInitialReferenceValue({
      value: t,
      utils: m,
      timezone: p,
      props: e,
      referenceDate: n,
      granularity: Oo.day
    }),
    []
    // eslint-disable-line react-hooks/exhaustive-deps
  ), [v, b] = S.useReducer(g, {
    isMonthSwitchingAnimating: !1,
    focusedDay: h,
    currentMonth: m.startOfMonth(h),
    slideDirection: "left"
  }), y = S.useCallback((R) => {
    b(V({
      type: "changeMonth"
    }, R)), c && c(R.newMonth);
  }, [c]), C = S.useCallback((R) => {
    const E = R;
    m.isSameMonth(E, v.currentMonth) || y({
      newMonth: m.startOfMonth(E),
      direction: m.isAfterDay(E, v.currentMonth) ? "left" : "right"
    });
  }, [v.currentMonth, y, m]), x = mC({
    shouldDisableDate: d,
    minDate: l,
    maxDate: a,
    disableFuture: o,
    disablePast: i,
    timezone: p
  }), T = S.useCallback(() => {
    b({
      type: "finishMonthSwitchingAnimation"
    });
  }, []), w = Ge((R, E) => {
    x(R) || b({
      type: "changeFocusedDay",
      focusedDay: R,
      withoutMonthSwitchingAnimation: E
    });
  });
  return {
    referenceDate: h,
    calendarState: v,
    changeMonth: C,
    changeFocusedDay: w,
    isDateDisabled: x,
    onMonthSwitchingAnimationEnd: T,
    handleChangeMonth: y
  };
}, rz = (e) => It("MuiPickersFadeTransitionGroup", e);
Ot("MuiPickersFadeTransitionGroup", ["root"]);
const iz = (e) => {
  const {
    classes: t
  } = e;
  return xt({
    root: ["root"]
  }, rz, t);
}, sz = Q(Va, {
  name: "MuiPickersFadeTransitionGroup",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  display: "block",
  position: "relative"
});
function gC(e) {
  const t = at({
    props: e,
    name: "MuiPickersFadeTransitionGroup"
  }), {
    children: n,
    className: o,
    reduceAnimations: i,
    transKey: s
  } = t, a = iz(t), l = vn();
  return i ? n : /* @__PURE__ */ f.jsx(sz, {
    className: fe(a.root, o),
    children: /* @__PURE__ */ f.jsx($r, {
      appear: !1,
      mountOnEnter: !0,
      unmountOnExit: !0,
      timeout: {
        appear: l.transitions.duration.enteringScreen,
        enter: l.transitions.duration.enteringScreen,
        exit: 0
      },
      children: n
    }, s)
  });
}
function az(e) {
  return It("MuiPickersDay", e);
}
const Wr = Ot("MuiPickersDay", ["root", "dayWithMargin", "dayOutsideMonth", "hiddenDaySpacingFiller", "today", "selected", "disabled"]), lz = ["autoFocus", "className", "day", "disabled", "disableHighlightToday", "disableMargin", "hidden", "isAnimating", "onClick", "onDaySelect", "onFocus", "onBlur", "onKeyDown", "onMouseDown", "onMouseEnter", "outsideCurrentMonth", "selected", "showDaysOutsideCurrentMonth", "children", "today", "isFirstVisibleCell", "isLastVisibleCell"], cz = (e) => {
  const {
    selected: t,
    disableMargin: n,
    disableHighlightToday: o,
    today: i,
    disabled: s,
    outsideCurrentMonth: a,
    showDaysOutsideCurrentMonth: l,
    classes: c
  } = e, u = a && !l;
  return xt({
    root: ["root", t && !u && "selected", s && "disabled", !n && "dayWithMargin", !o && i && "today", a && l && "dayOutsideMonth", u && "hiddenDaySpacingFiller"],
    hiddenDaySpacingFiller: ["hiddenDaySpacingFiller"]
  }, az, c);
}, hC = ({
  theme: e
}) => V({}, e.typography.caption, {
  width: Ia,
  height: Ia,
  borderRadius: "50%",
  padding: 0,
  // explicitly setting to `transparent` to avoid potentially getting impacted by change from the overridden component
  backgroundColor: "transparent",
  transition: e.transitions.create("background-color", {
    duration: e.transitions.duration.short
  }),
  color: (e.vars || e).palette.text.primary,
  "@media (pointer: fine)": {
    "&:hover": {
      backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.hoverOpacity})` : ze(e.palette.primary.main, e.palette.action.hoverOpacity)
    }
  },
  "&:focus": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.focusOpacity})` : ze(e.palette.primary.main, e.palette.action.focusOpacity),
    [`&.${Wr.selected}`]: {
      willChange: "background-color",
      backgroundColor: (e.vars || e).palette.primary.dark
    }
  },
  [`&.${Wr.selected}`]: {
    color: (e.vars || e).palette.primary.contrastText,
    backgroundColor: (e.vars || e).palette.primary.main,
    fontWeight: e.typography.fontWeightMedium,
    "&:hover": {
      willChange: "background-color",
      backgroundColor: (e.vars || e).palette.primary.dark
    }
  },
  [`&.${Wr.disabled}:not(.${Wr.selected})`]: {
    color: (e.vars || e).palette.text.disabled
  },
  [`&.${Wr.disabled}&.${Wr.selected}`]: {
    opacity: 0.6
  },
  variants: [{
    props: {
      disableMargin: !1
    },
    style: {
      margin: `0 ${Su}px`
    }
  }, {
    props: {
      outsideCurrentMonth: !0,
      showDaysOutsideCurrentMonth: !0
    },
    style: {
      color: (e.vars || e).palette.text.secondary
    }
  }, {
    props: {
      disableHighlightToday: !1,
      today: !0
    },
    style: {
      [`&:not(.${Wr.selected})`]: {
        border: `1px solid ${(e.vars || e).palette.text.secondary}`
      }
    }
  }]
}), bC = (e, t) => {
  const {
    ownerState: n
  } = e;
  return [t.root, !n.disableMargin && t.dayWithMargin, !n.disableHighlightToday && n.today && t.today, !n.outsideCurrentMonth && n.showDaysOutsideCurrentMonth && t.dayOutsideMonth, n.outsideCurrentMonth && !n.showDaysOutsideCurrentMonth && t.hiddenDaySpacingFiller];
}, uz = Q(yo, {
  name: "MuiPickersDay",
  slot: "Root",
  overridesResolver: bC
})(hC), dz = Q("div", {
  name: "MuiPickersDay",
  slot: "Root",
  overridesResolver: bC
})(({
  theme: e
}) => V({}, hC({
  theme: e
}), {
  // visibility: 'hidden' does not work here as it hides the element from screen readers as well
  opacity: 0,
  pointerEvents: "none"
})), js = () => {
}, vC = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiPickersDay"
  }), {
    autoFocus: i = !1,
    className: s,
    day: a,
    disabled: l = !1,
    disableHighlightToday: c = !1,
    disableMargin: u = !1,
    isAnimating: d,
    onClick: p,
    onDaySelect: m,
    onFocus: g = js,
    onBlur: h = js,
    onKeyDown: v = js,
    onMouseDown: b = js,
    onMouseEnter: y = js,
    outsideCurrentMonth: C,
    selected: x = !1,
    showDaysOutsideCurrentMonth: T = !1,
    children: w,
    today: R = !1
  } = o, E = Xe(o, lz), O = V({}, o, {
    autoFocus: i,
    disabled: l,
    disableHighlightToday: c,
    disableMargin: u,
    selected: x,
    showDaysOutsideCurrentMonth: T,
    today: R
  }), I = cz(O), P = gt(), A = S.useRef(null), D = Vn(A, n);
  qo(() => {
    i && !l && !d && !C && A.current.focus();
  }, [i, l, d, C]);
  const k = (F) => {
    b(F), C && F.preventDefault();
  }, M = (F) => {
    l || m(a), C && F.currentTarget.focus(), p && p(F);
  };
  return C && !T ? /* @__PURE__ */ f.jsx(dz, {
    className: fe(I.root, I.hiddenDaySpacingFiller, s),
    ownerState: O,
    role: E.role
  }) : /* @__PURE__ */ f.jsx(uz, V({
    className: fe(I.root, s),
    ref: D,
    centerRipple: !0,
    disabled: l,
    tabIndex: x ? 0 : -1,
    onKeyDown: (F) => v(F, a),
    onFocus: (F) => g(F, a),
    onBlur: (F) => h(F, a),
    onMouseEnter: (F) => y(F, a),
    onClick: M,
    onMouseDown: k
  }, E, {
    ownerState: O,
    children: w || P.format(a, "dayOfMonth")
  }));
});
process.env.NODE_ENV !== "production" && (vC.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * A ref for imperative actions.
   * It currently only supports `focusVisible()` action.
   */
  action: r.oneOfType([r.func, r.shape({
    current: r.shape({
      focusVisible: r.func.isRequired
    })
  })]),
  /**
   * If `true`, the ripples are centered.
   * They won't start at the cursor interaction position.
   * @default false
   */
  centerRipple: r.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  className: r.string,
  component: r.elementType,
  /**
   * The date to show.
   */
  day: r.object.isRequired,
  /**
   * If `true`, renders as disabled.
   * @default false
   */
  disabled: r.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: r.bool,
  /**
   * If `true`, days are rendering without margin. Useful for displaying linked range of days.
   * @default false
   */
  disableMargin: r.bool,
  /**
   * If `true`, the ripple effect is disabled.
   *
   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure
   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.
   * @default false
   */
  disableRipple: r.bool,
  /**
   * If `true`, the touch ripple effect is disabled.
   * @default false
   */
  disableTouchRipple: r.bool,
  /**
   * If `true`, the base button will have a keyboard focus ripple.
   * @default false
   */
  focusRipple: r.bool,
  /**
   * This prop can help identify which element has keyboard focus.
   * The class name will be applied when the element gains the focus through keyboard interaction.
   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components
   * if needed.
   */
  focusVisibleClassName: r.string,
  isAnimating: r.bool,
  /**
   * If `true`, day is the first visible cell of the month.
   * Either the first day of the month or the first day of the week depending on `showDaysOutsideCurrentMonth`.
   */
  isFirstVisibleCell: r.bool.isRequired,
  /**
   * If `true`, day is the last visible cell of the month.
   * Either the last day of the month or the last day of the week depending on `showDaysOutsideCurrentMonth`.
   */
  isLastVisibleCell: r.bool.isRequired,
  onBlur: r.func,
  onDaySelect: r.func.isRequired,
  onFocus: r.func,
  /**
   * Callback fired when the component is focused with a keyboard.
   * We trigger a `onFocus` callback too.
   */
  onFocusVisible: r.func,
  onKeyDown: r.func,
  onMouseEnter: r.func,
  /**
   * If `true`, day is outside of month and will be hidden.
   */
  outsideCurrentMonth: r.bool.isRequired,
  /**
   * If `true`, renders as selected.
   * @default false
   */
  selected: r.bool,
  /**
   * If `true`, days outside the current month are rendered:
   *
   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.
   *
   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.
   *
   * - ignored if `calendars` equals more than `1` on range pickers.
   * @default false
   */
  showDaysOutsideCurrentMonth: r.bool,
  style: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * @default 0
   */
  tabIndex: r.number,
  /**
   * If `true`, renders as today date.
   * @default false
   */
  today: r.bool,
  /**
   * Props applied to the `TouchRipple` element.
   */
  TouchRippleProps: r.object,
  /**
   * A ref that points to the `TouchRipple` element.
   */
  touchRippleRef: r.oneOfType([r.func, r.shape({
    current: r.shape({
      pulsate: r.func.isRequired,
      start: r.func.isRequired,
      stop: r.func.isRequired
    })
  })])
});
const pz = /* @__PURE__ */ S.memo(vC), fz = (e) => It("MuiPickersSlideTransition", e), co = Ot("MuiPickersSlideTransition", ["root", "slideEnter-left", "slideEnter-right", "slideEnterActive", "slideExit", "slideExitActiveLeft-left", "slideExitActiveLeft-right"]), mz = ["children", "className", "reduceAnimations", "slideDirection", "transKey", "classes"], gz = (e) => {
  const {
    classes: t,
    slideDirection: n
  } = e, o = {
    root: ["root"],
    exit: ["slideExit"],
    enterActive: ["slideEnterActive"],
    enter: [`slideEnter-${n}`],
    exitActive: [`slideExitActiveLeft-${n}`]
  };
  return xt(o, fz, t);
}, hz = Q(Va, {
  name: "MuiPickersSlideTransition",
  slot: "Root",
  overridesResolver: (e, t) => [t.root, {
    [`.${co["slideEnter-left"]}`]: t["slideEnter-left"]
  }, {
    [`.${co["slideEnter-right"]}`]: t["slideEnter-right"]
  }, {
    [`.${co.slideEnterActive}`]: t.slideEnterActive
  }, {
    [`.${co.slideExit}`]: t.slideExit
  }, {
    [`.${co["slideExitActiveLeft-left"]}`]: t["slideExitActiveLeft-left"]
  }, {
    [`.${co["slideExitActiveLeft-right"]}`]: t["slideExitActiveLeft-right"]
  }]
})(({
  theme: e
}) => {
  const t = e.transitions.create("transform", {
    duration: e.transitions.duration.complex,
    easing: "cubic-bezier(0.35, 0.8, 0.4, 1)"
  });
  return {
    display: "block",
    position: "relative",
    overflowX: "hidden",
    "& > *": {
      position: "absolute",
      top: 0,
      right: 0,
      left: 0
    },
    [`& .${co["slideEnter-left"]}`]: {
      willChange: "transform",
      transform: "translate(100%)",
      zIndex: 1
    },
    [`& .${co["slideEnter-right"]}`]: {
      willChange: "transform",
      transform: "translate(-100%)",
      zIndex: 1
    },
    [`& .${co.slideEnterActive}`]: {
      transform: "translate(0%)",
      transition: t
    },
    [`& .${co.slideExit}`]: {
      transform: "translate(0%)"
    },
    [`& .${co["slideExitActiveLeft-left"]}`]: {
      willChange: "transform",
      transform: "translate(-100%)",
      transition: t,
      zIndex: 0
    },
    [`& .${co["slideExitActiveLeft-right"]}`]: {
      willChange: "transform",
      transform: "translate(100%)",
      transition: t,
      zIndex: 0
    }
  };
});
function bz(e) {
  const t = at({
    props: e,
    name: "MuiPickersSlideTransition"
  }), {
    children: n,
    className: o,
    reduceAnimations: i,
    transKey: s
    // extracting `classes` from `other`
  } = t, a = Xe(t, mz), l = gz(t), c = vn();
  if (i)
    return /* @__PURE__ */ f.jsx("div", {
      className: fe(l.root, o),
      children: n
    });
  const u = {
    exit: l.exit,
    enterActive: l.enterActive,
    enter: l.enter,
    exitActive: l.exitActive
  };
  return /* @__PURE__ */ f.jsx(hz, {
    className: fe(l.root, o),
    childFactory: (d) => /* @__PURE__ */ S.cloneElement(d, {
      classNames: u
    }),
    role: "presentation",
    children: /* @__PURE__ */ f.jsx(yf, V({
      mountOnEnter: !0,
      unmountOnExit: !0,
      timeout: c.transitions.duration.complex,
      classNames: u
    }, a, {
      children: n
    }), s)
  });
}
const vz = (e) => It("MuiDayCalendar", e);
Ot("MuiDayCalendar", ["root", "header", "weekDayLabel", "loadingContainer", "slideTransition", "monthContainer", "weekContainer", "weekNumberLabel", "weekNumber"]);
const yz = ["parentProps", "day", "focusableDay", "selectedDays", "isDateDisabled", "currentMonthNumber", "isViewFocused"], xz = ["ownerState"], Cz = (e) => {
  const {
    classes: t
  } = e;
  return xt({
    root: ["root"],
    header: ["header"],
    weekDayLabel: ["weekDayLabel"],
    loadingContainer: ["loadingContainer"],
    slideTransition: ["slideTransition"],
    monthContainer: ["monthContainer"],
    weekContainer: ["weekContainer"],
    weekNumberLabel: ["weekNumberLabel"],
    weekNumber: ["weekNumber"]
  }, vz, t);
}, yC = (Ia + Su * 2) * 6, Sz = Q("div", {
  name: "MuiDayCalendar",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), wz = Q("div", {
  name: "MuiDayCalendar",
  slot: "Header",
  overridesResolver: (e, t) => t.header
})({
  display: "flex",
  justifyContent: "center",
  alignItems: "center"
}), Tz = Q(Fe, {
  name: "MuiDayCalendar",
  slot: "WeekDayLabel",
  overridesResolver: (e, t) => t.weekDayLabel
})(({
  theme: e
}) => ({
  width: 36,
  height: 40,
  margin: "0 2px",
  textAlign: "center",
  display: "flex",
  justifyContent: "center",
  alignItems: "center",
  color: (e.vars || e).palette.text.secondary
})), Iz = Q(Fe, {
  name: "MuiDayCalendar",
  slot: "WeekNumberLabel",
  overridesResolver: (e, t) => t.weekNumberLabel
})(({
  theme: e
}) => ({
  width: 36,
  height: 40,
  margin: "0 2px",
  textAlign: "center",
  display: "flex",
  justifyContent: "center",
  alignItems: "center",
  color: e.palette.text.disabled
})), Rz = Q(Fe, {
  name: "MuiDayCalendar",
  slot: "WeekNumber",
  overridesResolver: (e, t) => t.weekNumber
})(({
  theme: e
}) => V({}, e.typography.caption, {
  width: Ia,
  height: Ia,
  padding: 0,
  margin: `0 ${Su}px`,
  color: e.palette.text.disabled,
  fontSize: "0.75rem",
  alignItems: "center",
  justifyContent: "center",
  display: "inline-flex"
})), Oz = Q("div", {
  name: "MuiDayCalendar",
  slot: "LoadingContainer",
  overridesResolver: (e, t) => t.loadingContainer
})({
  display: "flex",
  justifyContent: "center",
  alignItems: "center",
  minHeight: yC
}), Ez = Q(bz, {
  name: "MuiDayCalendar",
  slot: "SlideTransition",
  overridesResolver: (e, t) => t.slideTransition
})({
  minHeight: yC
}), Pz = Q("div", {
  name: "MuiDayCalendar",
  slot: "MonthContainer",
  overridesResolver: (e, t) => t.monthContainer
})({
  overflow: "hidden"
}), Az = Q("div", {
  name: "MuiDayCalendar",
  slot: "WeekContainer",
  overridesResolver: (e, t) => t.weekContainer
})({
  margin: `${Su}px 0`,
  display: "flex",
  justifyContent: "center"
});
function Dz(e) {
  let {
    parentProps: t,
    day: n,
    focusableDay: o,
    selectedDays: i,
    isDateDisabled: s,
    currentMonthNumber: a,
    isViewFocused: l
  } = e, c = Xe(e, yz);
  const {
    disabled: u,
    disableHighlightToday: d,
    isMonthSwitchingAnimating: p,
    showDaysOutsideCurrentMonth: m,
    slots: g,
    slotProps: h,
    timezone: v
  } = t, b = gt(), y = hi(v), C = o !== null && b.isSameDay(n, o), x = i.some((D) => b.isSameDay(D, n)), T = b.isSameDay(n, y), w = (g == null ? void 0 : g.day) ?? pz, R = Rt({
    elementType: w,
    externalSlotProps: h == null ? void 0 : h.day,
    additionalProps: V({
      disableHighlightToday: d,
      showDaysOutsideCurrentMonth: m,
      role: "gridcell",
      isAnimating: p,
      // it is used in date range dragging logic by accessing `dataset.timestamp`
      "data-timestamp": b.toJsDate(n).valueOf()
    }, c),
    ownerState: V({}, t, {
      day: n,
      selected: x
    })
  }), E = Xe(R, xz), O = S.useMemo(() => u || s(n), [u, s, n]), I = S.useMemo(() => b.getMonth(n) !== a, [b, n, a]), P = S.useMemo(() => {
    const D = b.startOfMonth(b.setMonth(n, a));
    return m ? b.isSameDay(n, b.startOfWeek(D)) : b.isSameDay(n, D);
  }, [a, n, m, b]), A = S.useMemo(() => {
    const D = b.endOfMonth(b.setMonth(n, a));
    return m ? b.isSameDay(n, b.endOfWeek(D)) : b.isSameDay(n, D);
  }, [a, n, m, b]);
  return /* @__PURE__ */ f.jsx(w, V({}, E, {
    day: n,
    disabled: O,
    autoFocus: l && C,
    today: T,
    outsideCurrentMonth: I,
    isFirstVisibleCell: P,
    isLastVisibleCell: A,
    selected: x,
    tabIndex: C ? 0 : -1,
    "aria-selected": x,
    "aria-current": T ? "date" : void 0
  }));
}
function Mz(e) {
  const t = at({
    props: e,
    name: "MuiDayCalendar"
  }), n = gt(), {
    onFocusedDayChange: o,
    className: i,
    currentMonth: s,
    selectedDays: a,
    focusedDay: l,
    loading: c,
    onSelectedDaysChange: u,
    onMonthSwitchingAnimationEnd: d,
    readOnly: p,
    reduceAnimations: m,
    renderLoading: g = () => /* @__PURE__ */ f.jsx("span", {
      children: "..."
    }),
    slideDirection: h,
    TransitionProps: v,
    disablePast: b,
    disableFuture: y,
    minDate: C,
    maxDate: x,
    shouldDisableDate: T,
    shouldDisableMonth: w,
    shouldDisableYear: R,
    dayOfWeekFormatter: E = (te) => n.format(te, "weekdayShort").charAt(0).toUpperCase(),
    hasFocus: O,
    onFocusedViewChange: I,
    gridLabelId: P,
    displayWeekNumber: A,
    fixedWeekNumber: D,
    autoFocus: k,
    timezone: M
  } = t, F = hi(M), N = Cz(t), W = ao(), H = mC({
    shouldDisableDate: T,
    shouldDisableMonth: w,
    shouldDisableYear: R,
    minDate: C,
    maxDate: x,
    disablePast: b,
    disableFuture: y,
    timezone: M
  }), B = pn(), [j, L] = li({
    name: "DayCalendar",
    state: "hasFocus",
    controlled: O,
    default: k ?? !1
  }), [ee, Y] = S.useState(() => l || F), $ = Ge((te) => {
    p || u(te);
  }), U = (te) => {
    H(te) || (o(te), Y(te), I == null || I(!0), L(!0));
  }, X = Ge((te, se) => {
    switch (te.key) {
      case "ArrowUp":
        U(n.addDays(se, -7)), te.preventDefault();
        break;
      case "ArrowDown":
        U(n.addDays(se, 7)), te.preventDefault();
        break;
      case "ArrowLeft": {
        const ae = n.addDays(se, W ? 1 : -1), me = n.addMonths(se, W ? 1 : -1), ye = Ks({
          utils: n,
          date: ae,
          minDate: W ? ae : n.startOfMonth(me),
          maxDate: W ? n.endOfMonth(me) : ae,
          isDateDisabled: H,
          timezone: M
        });
        U(ye || ae), te.preventDefault();
        break;
      }
      case "ArrowRight": {
        const ae = n.addDays(se, W ? -1 : 1), me = n.addMonths(se, W ? -1 : 1), ye = Ks({
          utils: n,
          date: ae,
          minDate: W ? n.startOfMonth(me) : ae,
          maxDate: W ? ae : n.endOfMonth(me),
          isDateDisabled: H,
          timezone: M
        });
        U(ye || ae), te.preventDefault();
        break;
      }
      case "Home":
        U(n.startOfWeek(se)), te.preventDefault();
        break;
      case "End":
        U(n.endOfWeek(se)), te.preventDefault();
        break;
      case "PageUp":
        U(n.addMonths(se, 1)), te.preventDefault();
        break;
      case "PageDown":
        U(n.addMonths(se, -1)), te.preventDefault();
        break;
    }
  }), Z = Ge((te, se) => U(se)), G = Ge((te, se) => {
    j && n.isSameDay(ee, se) && (I == null || I(!1));
  }), K = n.getMonth(s), re = n.getYear(s), ne = S.useMemo(() => a.filter((te) => !!te).map((te) => n.startOfDay(te)), [n, a]), z = `${re}-${K}`, q = S.useMemo(() => /* @__PURE__ */ S.createRef(), [z]), _ = S.useMemo(() => {
    const te = n.startOfMonth(s), se = n.endOfMonth(s);
    return H(ee) || n.isAfterDay(ee, se) || n.isBeforeDay(ee, te) ? Ks({
      utils: n,
      date: ee,
      minDate: te,
      maxDate: se,
      disablePast: b,
      disableFuture: y,
      isDateDisabled: H,
      timezone: M
    }) : ee;
  }, [s, y, b, ee, H, n, M]), oe = S.useMemo(() => {
    const te = n.setTimezone(s, M), se = n.getWeekArray(te);
    let ae = n.addMonths(te, 1);
    for (; D && se.length < D; ) {
      const me = n.getWeekArray(ae), ye = n.isSameDay(se[se.length - 1][0], me[0][0]);
      me.slice(ye ? 1 : 0).forEach((Te) => {
        se.length < D && se.push(Te);
      }), ae = n.addMonths(ae, 1);
    }
    return se;
  }, [s, D, n, M]);
  return /* @__PURE__ */ f.jsxs(Sz, {
    role: "grid",
    "aria-labelledby": P,
    className: N.root,
    children: [/* @__PURE__ */ f.jsxs(wz, {
      role: "row",
      className: N.header,
      children: [A && /* @__PURE__ */ f.jsx(Iz, {
        variant: "caption",
        role: "columnheader",
        "aria-label": B.calendarWeekNumberHeaderLabel,
        className: N.weekNumberLabel,
        children: B.calendarWeekNumberHeaderText
      }), kL(n, F).map((te, se) => /* @__PURE__ */ f.jsx(Tz, {
        variant: "caption",
        role: "columnheader",
        "aria-label": n.format(te, "weekday"),
        className: N.weekDayLabel,
        children: E(te)
      }, se.toString()))]
    }), c ? /* @__PURE__ */ f.jsx(Oz, {
      className: N.loadingContainer,
      children: g()
    }) : /* @__PURE__ */ f.jsx(Ez, V({
      transKey: z,
      onExited: d,
      reduceAnimations: m,
      slideDirection: h,
      className: fe(i, N.slideTransition)
    }, v, {
      nodeRef: q,
      children: /* @__PURE__ */ f.jsx(Pz, {
        ref: q,
        role: "rowgroup",
        className: N.monthContainer,
        children: oe.map((te, se) => /* @__PURE__ */ f.jsxs(Az, {
          role: "row",
          className: N.weekContainer,
          "aria-rowindex": se + 1,
          children: [A && /* @__PURE__ */ f.jsx(Rz, {
            className: N.weekNumber,
            role: "rowheader",
            "aria-label": B.calendarWeekNumberAriaLabelText(n.getWeekNumber(te[0])),
            children: B.calendarWeekNumberText(n.getWeekNumber(te[0]))
          }), te.map((ae, me) => /* @__PURE__ */ f.jsx(Dz, {
            parentProps: t,
            day: ae,
            selectedDays: ne,
            focusableDay: _,
            onKeyDown: X,
            onFocus: Z,
            onBlur: G,
            onDaySelect: $,
            isDateDisabled: H,
            currentMonthNumber: K,
            isViewFocused: j,
            "aria-colindex": me + 1
          }, ae.toString()))]
        }, `week-${te[0]}`))
      })
    }))]
  });
}
function jz(e) {
  return It("MuiPickersMonth", e);
}
const Cl = Ot("MuiPickersMonth", ["root", "monthButton", "disabled", "selected"]), kz = ["autoFocus", "className", "children", "disabled", "selected", "value", "tabIndex", "onClick", "onKeyDown", "onFocus", "onBlur", "aria-current", "aria-label", "monthsPerRow", "slots", "slotProps"], Fz = (e) => {
  const {
    disabled: t,
    selected: n,
    classes: o
  } = e;
  return xt({
    root: ["root"],
    monthButton: ["monthButton", t && "disabled", n && "selected"]
  }, jz, o);
}, Nz = Q("div", {
  name: "MuiPickersMonth",
  slot: "Root",
  overridesResolver: (e, t) => [t.root]
})({
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  flexBasis: "33.3%",
  variants: [{
    props: {
      monthsPerRow: 4
    },
    style: {
      flexBasis: "25%"
    }
  }]
}), Vz = Q("button", {
  name: "MuiPickersMonth",
  slot: "MonthButton",
  overridesResolver: (e, t) => [t.monthButton, {
    [`&.${Cl.disabled}`]: t.disabled
  }, {
    [`&.${Cl.selected}`]: t.selected
  }]
})(({
  theme: e
}) => V({
  color: "unset",
  backgroundColor: "transparent",
  border: 0,
  outline: 0
}, e.typography.subtitle1, {
  margin: "8px 0",
  height: 36,
  width: 72,
  borderRadius: 18,
  cursor: "pointer",
  "&:focus": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : ze(e.palette.action.active, e.palette.action.hoverOpacity)
  },
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : ze(e.palette.action.active, e.palette.action.hoverOpacity)
  },
  "&:disabled": {
    cursor: "auto",
    pointerEvents: "none"
  },
  [`&.${Cl.disabled}`]: {
    color: (e.vars || e).palette.text.secondary
  },
  [`&.${Cl.selected}`]: {
    color: (e.vars || e).palette.primary.contrastText,
    backgroundColor: (e.vars || e).palette.primary.main,
    "&:focus, &:hover": {
      backgroundColor: (e.vars || e).palette.primary.dark
    }
  }
})), $z = /* @__PURE__ */ S.memo(function(t) {
  const n = at({
    props: t,
    name: "MuiPickersMonth"
  }), {
    autoFocus: o,
    className: i,
    children: s,
    disabled: a,
    selected: l,
    value: c,
    tabIndex: u,
    onClick: d,
    onKeyDown: p,
    onFocus: m,
    onBlur: g,
    "aria-current": h,
    "aria-label": v,
    slots: b,
    slotProps: y
  } = n, C = Xe(n, kz), x = S.useRef(null), T = Fz(n);
  qo(() => {
    var E;
    o && ((E = x.current) == null || E.focus());
  }, [o]);
  const w = (b == null ? void 0 : b.monthButton) ?? Vz, R = Rt({
    elementType: w,
    externalSlotProps: y == null ? void 0 : y.monthButton,
    additionalProps: {
      children: s,
      disabled: a,
      tabIndex: u,
      ref: x,
      type: "button",
      role: "radio",
      "aria-current": h,
      "aria-checked": l,
      "aria-label": v,
      onClick: (E) => d(E, c),
      onKeyDown: (E) => p(E, c),
      onFocus: (E) => m(E, c),
      onBlur: (E) => g(E, c)
    },
    ownerState: n,
    className: T.monthButton
  });
  return /* @__PURE__ */ f.jsx(Nz, V({
    className: fe(T.root, i),
    ownerState: n
  }, C, {
    children: /* @__PURE__ */ f.jsx(w, V({}, R))
  }));
});
function Lz(e) {
  return It("MuiMonthCalendar", e);
}
Ot("MuiMonthCalendar", ["root"]);
const _z = ["className", "value", "defaultValue", "referenceDate", "disabled", "disableFuture", "disablePast", "maxDate", "minDate", "onChange", "shouldDisableMonth", "readOnly", "disableHighlightToday", "autoFocus", "onMonthFocus", "hasFocus", "onFocusedViewChange", "monthsPerRow", "timezone", "gridLabelId", "slots", "slotProps"], Bz = (e) => {
  const {
    classes: t
  } = e;
  return xt({
    root: ["root"]
  }, Lz, t);
};
function zz(e, t) {
  const n = gt(), o = gi(), i = at({
    props: e,
    name: t
  });
  return V({
    disableFuture: !1,
    disablePast: !1
  }, i, {
    minDate: Dn(n, i.minDate, o.minDate),
    maxDate: Dn(n, i.maxDate, o.maxDate)
  });
}
const Wz = Q("div", {
  name: "MuiMonthCalendar",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  display: "flex",
  flexWrap: "wrap",
  alignContent: "stretch",
  padding: "0 4px",
  width: wu,
  // avoid padding increasing width over defined
  boxSizing: "border-box"
}), xC = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = zz(t, "MuiMonthCalendar"), {
    className: i,
    value: s,
    defaultValue: a,
    referenceDate: l,
    disabled: c,
    disableFuture: u,
    disablePast: d,
    maxDate: p,
    minDate: m,
    onChange: g,
    shouldDisableMonth: h,
    readOnly: v,
    autoFocus: b = !1,
    onMonthFocus: y,
    hasFocus: C,
    onFocusedViewChange: x,
    monthsPerRow: T = 3,
    timezone: w,
    gridLabelId: R,
    slots: E,
    slotProps: O
  } = o, I = Xe(o, _z), {
    value: P,
    handleValueChange: A,
    timezone: D
  } = hs({
    name: "MonthCalendar",
    timezone: w,
    value: s,
    defaultValue: a,
    onChange: g,
    valueManager: rn
  }), k = hi(D), M = ao(), F = gt(), N = S.useMemo(
    () => rn.getInitialReferenceValue({
      value: P,
      utils: F,
      props: o,
      timezone: D,
      referenceDate: l,
      granularity: Oo.month
    }),
    []
    // eslint-disable-line react-hooks/exhaustive-deps
  ), W = o, H = Bz(W), B = S.useMemo(() => F.getMonth(k), [F, k]), j = S.useMemo(() => P != null ? F.getMonth(P) : null, [P, F]), [L, ee] = S.useState(() => j || F.getMonth(N)), [Y, $] = li({
    name: "MonthCalendar",
    state: "hasFocus",
    controlled: C,
    default: b ?? !1
  }), U = Ge((z) => {
    $(z), x && x(z);
  }), X = S.useCallback((z) => {
    const q = F.startOfMonth(d && F.isAfter(k, m) ? k : m), _ = F.startOfMonth(u && F.isBefore(k, p) ? k : p), oe = F.startOfMonth(z);
    return F.isBefore(oe, q) || F.isAfter(oe, _) ? !0 : h ? h(oe) : !1;
  }, [u, d, p, m, k, h, F]), Z = Ge((z, q) => {
    if (v)
      return;
    const _ = F.setMonth(P ?? N, q);
    A(_);
  }), G = Ge((z) => {
    X(F.setMonth(P ?? N, z)) || (ee(z), U(!0), y && y(z));
  });
  S.useEffect(() => {
    ee((z) => j !== null && z !== j ? j : z);
  }, [j]);
  const K = Ge((z, q) => {
    switch (z.key) {
      case "ArrowUp":
        G((12 + q - 3) % 12), z.preventDefault();
        break;
      case "ArrowDown":
        G((12 + q + 3) % 12), z.preventDefault();
        break;
      case "ArrowLeft":
        G((12 + q + (M ? 1 : -1)) % 12), z.preventDefault();
        break;
      case "ArrowRight":
        G((12 + q + (M ? -1 : 1)) % 12), z.preventDefault();
        break;
    }
  }), re = Ge((z, q) => {
    G(q);
  }), ne = Ge((z, q) => {
    L === q && U(!1);
  });
  return /* @__PURE__ */ f.jsx(Wz, V({
    ref: n,
    className: fe(H.root, i),
    ownerState: W,
    role: "radiogroup",
    "aria-labelledby": R
  }, I, {
    children: tm(F, P ?? N).map((z) => {
      const q = F.getMonth(z), _ = F.format(z, "monthShort"), oe = F.format(z, "month"), te = q === j, se = c || X(z);
      return /* @__PURE__ */ f.jsx($z, {
        selected: te,
        value: q,
        onClick: Z,
        onKeyDown: K,
        autoFocus: Y && q === L,
        disabled: se,
        tabIndex: q === L && !se ? 0 : -1,
        onFocus: re,
        onBlur: ne,
        "aria-current": B === q ? "date" : void 0,
        "aria-label": oe,
        monthsPerRow: T,
        slots: E,
        slotProps: O,
        children: _
      }, _);
    })
  }));
});
process.env.NODE_ENV !== "production" && (xC.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  autoFocus: r.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  className: r.string,
  /**
   * The default selected value.
   * Used when the component is not controlled.
   */
  defaultValue: r.object,
  /**
   * If `true` picker is disabled
   */
  disabled: r.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: r.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: r.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: r.bool,
  gridLabelId: r.string,
  hasFocus: r.bool,
  /**
   * Maximal selectable date.
   * @default 2099-12-31
   */
  maxDate: r.object,
  /**
   * Minimal selectable date.
   * @default 1900-01-01
   */
  minDate: r.object,
  /**
   * Months rendered per row.
   * @default 3
   */
  monthsPerRow: r.oneOf([3, 4]),
  /**
   * Callback fired when the value changes.
   * @template TDate
   * @param {TDate} value The new value.
   */
  onChange: r.func,
  onFocusedViewChange: r.func,
  onMonthFocus: r.func,
  /**
   * If `true` picker is readonly
   */
  readOnly: r.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid month using the validation props, except callbacks such as `shouldDisableMonth`.
   */
  referenceDate: r.object,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: r.func,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: r.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: r.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: r.object
});
function Hz(e) {
  return It("MuiPickersYear", e);
}
const Sl = Ot("MuiPickersYear", ["root", "yearButton", "selected", "disabled"]), Gz = ["autoFocus", "className", "children", "disabled", "selected", "value", "tabIndex", "onClick", "onKeyDown", "onFocus", "onBlur", "aria-current", "yearsPerRow", "slots", "slotProps"], Uz = (e) => {
  const {
    disabled: t,
    selected: n,
    classes: o
  } = e;
  return xt({
    root: ["root"],
    yearButton: ["yearButton", t && "disabled", n && "selected"]
  }, Hz, o);
}, Xz = Q("div", {
  name: "MuiPickersYear",
  slot: "Root",
  overridesResolver: (e, t) => [t.root]
})({
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  flexBasis: "33.3%",
  variants: [{
    props: {
      yearsPerRow: 4
    },
    style: {
      flexBasis: "25%"
    }
  }]
}), Yz = Q("button", {
  name: "MuiPickersYear",
  slot: "YearButton",
  overridesResolver: (e, t) => [t.yearButton, {
    [`&.${Sl.disabled}`]: t.disabled
  }, {
    [`&.${Sl.selected}`]: t.selected
  }]
})(({
  theme: e
}) => V({
  color: "unset",
  backgroundColor: "transparent",
  border: 0,
  outline: 0
}, e.typography.subtitle1, {
  margin: "6px 0",
  height: 36,
  width: 72,
  borderRadius: 18,
  cursor: "pointer",
  "&:focus": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.focusOpacity})` : ze(e.palette.action.active, e.palette.action.focusOpacity)
  },
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.action.activeChannel} / ${e.vars.palette.action.hoverOpacity})` : ze(e.palette.action.active, e.palette.action.hoverOpacity)
  },
  "&:disabled": {
    cursor: "auto",
    pointerEvents: "none"
  },
  [`&.${Sl.disabled}`]: {
    color: (e.vars || e).palette.text.secondary
  },
  [`&.${Sl.selected}`]: {
    color: (e.vars || e).palette.primary.contrastText,
    backgroundColor: (e.vars || e).palette.primary.main,
    "&:focus, &:hover": {
      backgroundColor: (e.vars || e).palette.primary.dark
    }
  }
})), Zz = /* @__PURE__ */ S.memo(function(t) {
  const n = at({
    props: t,
    name: "MuiPickersYear"
  }), {
    autoFocus: o,
    className: i,
    children: s,
    disabled: a,
    selected: l,
    value: c,
    tabIndex: u,
    onClick: d,
    onKeyDown: p,
    onFocus: m,
    onBlur: g,
    "aria-current": h,
    slots: v,
    slotProps: b
  } = n, y = Xe(n, Gz), C = S.useRef(null), x = Uz(n);
  qo(() => {
    var R;
    o && ((R = C.current) == null || R.focus());
  }, [o]);
  const T = (v == null ? void 0 : v.yearButton) ?? Yz, w = Rt({
    elementType: T,
    externalSlotProps: b == null ? void 0 : b.yearButton,
    additionalProps: {
      children: s,
      disabled: a,
      tabIndex: u,
      ref: C,
      type: "button",
      role: "radio",
      "aria-current": h,
      "aria-checked": l,
      onClick: (R) => d(R, c),
      onKeyDown: (R) => p(R, c),
      onFocus: (R) => m(R, c),
      onBlur: (R) => g(R, c)
    },
    ownerState: n,
    className: x.yearButton
  });
  return /* @__PURE__ */ f.jsx(Xz, V({
    className: fe(x.root, i),
    ownerState: n
  }, y, {
    children: /* @__PURE__ */ f.jsx(T, V({}, w))
  }));
});
function qz(e) {
  return It("MuiYearCalendar", e);
}
Ot("MuiYearCalendar", ["root"]);
const Jz = ["autoFocus", "className", "value", "defaultValue", "referenceDate", "disabled", "disableFuture", "disablePast", "maxDate", "minDate", "onChange", "readOnly", "shouldDisableYear", "disableHighlightToday", "onYearFocus", "hasFocus", "onFocusedViewChange", "yearsOrder", "yearsPerRow", "timezone", "gridLabelId", "slots", "slotProps"], Kz = (e) => {
  const {
    classes: t
  } = e;
  return xt({
    root: ["root"]
  }, qz, t);
};
function Qz(e, t) {
  const n = gt(), o = gi(), i = at({
    props: e,
    name: t
  });
  return V({
    disablePast: !1,
    disableFuture: !1
  }, i, {
    yearsPerRow: i.yearsPerRow ?? 3,
    minDate: Dn(n, i.minDate, o.minDate),
    maxDate: Dn(n, i.maxDate, o.maxDate)
  });
}
const e4 = Q("div", {
  name: "MuiYearCalendar",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  display: "flex",
  flexDirection: "row",
  flexWrap: "wrap",
  overflowY: "auto",
  height: "100%",
  padding: "0 4px",
  width: wu,
  maxHeight: V_,
  // avoid padding increasing width over defined
  boxSizing: "border-box",
  position: "relative"
}), CC = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = Qz(t, "MuiYearCalendar"), {
    autoFocus: i,
    className: s,
    value: a,
    defaultValue: l,
    referenceDate: c,
    disabled: u,
    disableFuture: d,
    disablePast: p,
    maxDate: m,
    minDate: g,
    onChange: h,
    readOnly: v,
    shouldDisableYear: b,
    onYearFocus: y,
    hasFocus: C,
    onFocusedViewChange: x,
    yearsOrder: T = "asc",
    yearsPerRow: w,
    timezone: R,
    gridLabelId: E,
    slots: O,
    slotProps: I
  } = o, P = Xe(o, Jz), {
    value: A,
    handleValueChange: D,
    timezone: k
  } = hs({
    name: "YearCalendar",
    timezone: R,
    value: a,
    defaultValue: l,
    onChange: h,
    valueManager: rn
  }), M = hi(k), F = ao(), N = gt(), W = S.useMemo(
    () => rn.getInitialReferenceValue({
      value: A,
      utils: N,
      props: o,
      timezone: k,
      referenceDate: c,
      granularity: Oo.year
    }),
    []
    // eslint-disable-line react-hooks/exhaustive-deps
  ), H = o, B = Kz(H), j = S.useMemo(() => N.getYear(M), [N, M]), L = S.useMemo(() => A != null ? N.getYear(A) : null, [A, N]), [ee, Y] = S.useState(() => L || N.getYear(W)), [$, U] = li({
    name: "YearCalendar",
    state: "hasFocus",
    controlled: C,
    default: i ?? !1
  }), X = Ge((ae) => {
    U(ae), x && x(ae);
  }), Z = S.useCallback((ae) => {
    if (p && N.isBeforeYear(ae, M) || d && N.isAfterYear(ae, M) || g && N.isBeforeYear(ae, g) || m && N.isAfterYear(ae, m))
      return !0;
    if (!b)
      return !1;
    const me = N.startOfYear(ae);
    return b(me);
  }, [d, p, m, g, M, b, N]), G = Ge((ae, me) => {
    if (v)
      return;
    const ye = N.setYear(A ?? W, me);
    D(ye);
  }), K = Ge((ae) => {
    Z(N.setYear(A ?? W, ae)) || (Y(ae), X(!0), y == null || y(ae));
  });
  S.useEffect(() => {
    Y((ae) => L !== null && ae !== L ? L : ae);
  }, [L]);
  const re = T !== "desc" ? w * 1 : w * -1, ne = F || T === "desc" ? -1 : 1, z = Ge((ae, me) => {
    switch (ae.key) {
      case "ArrowUp":
        K(me - re), ae.preventDefault();
        break;
      case "ArrowDown":
        K(me + re), ae.preventDefault();
        break;
      case "ArrowLeft":
        K(me - ne), ae.preventDefault();
        break;
      case "ArrowRight":
        K(me + ne), ae.preventDefault();
        break;
    }
  }), q = Ge((ae, me) => {
    K(me);
  }), _ = Ge((ae, me) => {
    ee === me && X(!1);
  }), oe = S.useRef(null), te = Vn(n, oe);
  S.useEffect(() => {
    if (i || oe.current === null)
      return;
    const ae = oe.current.querySelector('[tabindex="0"]');
    if (!ae)
      return;
    const me = ae.offsetHeight, ye = ae.offsetTop, Te = oe.current.clientHeight, Ve = oe.current.scrollTop, ie = ye + me;
    me > Te || ye < Ve || (oe.current.scrollTop = ie - Te / 2 - me / 2);
  }, [i]);
  const se = N.getYearRange([g, m]);
  return T === "desc" && se.reverse(), /* @__PURE__ */ f.jsx(e4, V({
    ref: te,
    className: fe(B.root, s),
    ownerState: H,
    role: "radiogroup",
    "aria-labelledby": E
  }, P, {
    children: se.map((ae) => {
      const me = N.getYear(ae), ye = me === L, Te = u || Z(ae);
      return /* @__PURE__ */ f.jsx(Zz, {
        selected: ye,
        value: me,
        onClick: G,
        onKeyDown: z,
        autoFocus: $ && me === ee,
        disabled: Te,
        tabIndex: me === ee && !Te ? 0 : -1,
        onFocus: q,
        onBlur: _,
        "aria-current": j === me ? "date" : void 0,
        yearsPerRow: w,
        slots: O,
        slotProps: I,
        children: N.format(ae, "year")
      }, N.format(ae, "year"));
    })
  }));
});
process.env.NODE_ENV !== "production" && (CC.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  autoFocus: r.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  className: r.string,
  /**
   * The default selected value.
   * Used when the component is not controlled.
   */
  defaultValue: r.object,
  /**
   * If `true` picker is disabled
   */
  disabled: r.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: r.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: r.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: r.bool,
  gridLabelId: r.string,
  hasFocus: r.bool,
  /**
   * Maximal selectable date.
   * @default 2099-12-31
   */
  maxDate: r.object,
  /**
   * Minimal selectable date.
   * @default 1900-01-01
   */
  minDate: r.object,
  /**
   * Callback fired when the value changes.
   * @template TDate
   * @param {TDate} value The new value.
   */
  onChange: r.func,
  onFocusedViewChange: r.func,
  onYearFocus: r.func,
  /**
   * If `true` picker is readonly
   */
  readOnly: r.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid year using the validation props, except callbacks such as `shouldDisableYear`.
   */
  referenceDate: r.object,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: r.func,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: r.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: r.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: r.object,
  /**
   * Years are displayed in ascending (chronological) order by default.
   * If `desc`, years are displayed in descending order.
   * @default 'asc'
   */
  yearsOrder: r.oneOf(["asc", "desc"]),
  /**
   * Years rendered per row.
   * @default 3
   */
  yearsPerRow: r.oneOf([3, 4])
});
const t4 = (e) => It("MuiPickersCalendarHeader", e), n4 = Ot("MuiPickersCalendarHeader", ["root", "labelContainer", "label", "switchViewButton", "switchViewIcon"]);
function o4(e) {
  return It("MuiPickersArrowSwitcher", e);
}
Ot("MuiPickersArrowSwitcher", ["root", "spacer", "button", "previousIconButton", "nextIconButton", "leftArrowIcon", "rightArrowIcon"]);
const r4 = ["children", "className", "slots", "slotProps", "isNextDisabled", "isNextHidden", "onGoToNext", "nextLabel", "isPreviousDisabled", "isPreviousHidden", "onGoToPrevious", "previousLabel", "labelId"], i4 = ["ownerState"], s4 = ["ownerState"], a4 = Q("div", {
  name: "MuiPickersArrowSwitcher",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  display: "flex"
}), l4 = Q("div", {
  name: "MuiPickersArrowSwitcher",
  slot: "Spacer",
  overridesResolver: (e, t) => t.spacer
})(({
  theme: e
}) => ({
  width: e.spacing(3)
})), Yb = Q(lt, {
  name: "MuiPickersArrowSwitcher",
  slot: "Button",
  overridesResolver: (e, t) => t.button
})({
  variants: [{
    props: {
      hidden: !0
    },
    style: {
      visibility: "hidden"
    }
  }]
}), c4 = (e) => {
  const {
    classes: t
  } = e;
  return xt({
    root: ["root"],
    spacer: ["spacer"],
    button: ["button"],
    previousIconButton: ["previousIconButton"],
    nextIconButton: ["nextIconButton"],
    leftArrowIcon: ["leftArrowIcon"],
    rightArrowIcon: ["rightArrowIcon"]
  }, o4, t);
}, SC = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = ao(), i = at({
    props: t,
    name: "MuiPickersArrowSwitcher"
  }), {
    children: s,
    className: a,
    slots: l,
    slotProps: c,
    isNextDisabled: u,
    isNextHidden: d,
    onGoToNext: p,
    nextLabel: m,
    isPreviousDisabled: g,
    isPreviousHidden: h,
    onGoToPrevious: v,
    previousLabel: b,
    labelId: y
  } = i, C = Xe(i, r4), x = i, T = c4(x), w = {
    isDisabled: u,
    isHidden: d,
    goTo: p,
    label: m
  }, R = {
    isDisabled: g,
    isHidden: h,
    goTo: v,
    label: b
  }, E = (l == null ? void 0 : l.previousIconButton) ?? Yb, O = Rt({
    elementType: E,
    externalSlotProps: c == null ? void 0 : c.previousIconButton,
    additionalProps: {
      size: "medium",
      title: R.label,
      "aria-label": R.label,
      disabled: R.isDisabled,
      edge: "end",
      onClick: R.goTo
    },
    ownerState: V({}, x, {
      hidden: R.isHidden
    }),
    className: fe(T.button, T.previousIconButton)
  }), I = (l == null ? void 0 : l.nextIconButton) ?? Yb, P = Rt({
    elementType: I,
    externalSlotProps: c == null ? void 0 : c.nextIconButton,
    additionalProps: {
      size: "medium",
      title: w.label,
      "aria-label": w.label,
      disabled: w.isDisabled,
      edge: "start",
      onClick: w.goTo
    },
    ownerState: V({}, x, {
      hidden: w.isHidden
    }),
    className: fe(T.button, T.nextIconButton)
  }), A = (l == null ? void 0 : l.leftArrowIcon) ?? X_, D = Rt({
    elementType: A,
    externalSlotProps: c == null ? void 0 : c.leftArrowIcon,
    additionalProps: {
      fontSize: "inherit"
    },
    ownerState: x,
    className: T.leftArrowIcon
  }), k = Xe(D, i4), M = (l == null ? void 0 : l.rightArrowIcon) ?? Y_, F = Rt({
    elementType: M,
    externalSlotProps: c == null ? void 0 : c.rightArrowIcon,
    additionalProps: {
      fontSize: "inherit"
    },
    ownerState: x,
    className: T.rightArrowIcon
  }), N = Xe(F, s4);
  return /* @__PURE__ */ f.jsxs(a4, V({
    ref: n,
    className: fe(T.root, a),
    ownerState: x
  }, C, {
    children: [/* @__PURE__ */ f.jsx(E, V({}, O, {
      children: o ? /* @__PURE__ */ f.jsx(M, V({}, N)) : /* @__PURE__ */ f.jsx(A, V({}, k))
    })), s ? /* @__PURE__ */ f.jsx(Fe, {
      variant: "subtitle1",
      component: "span",
      id: y,
      children: s
    }) : /* @__PURE__ */ f.jsx(l4, {
      className: T.spacer,
      ownerState: x
    }), /* @__PURE__ */ f.jsx(I, V({}, P, {
      children: o ? /* @__PURE__ */ f.jsx(A, V({}, k)) : /* @__PURE__ */ f.jsx(M, V({}, N))
    }))]
  }));
});
function u4(e, {
  disableFuture: t,
  maxDate: n,
  timezone: o
}) {
  const i = gt();
  return S.useMemo(() => {
    const s = i.date(void 0, o), a = i.startOfMonth(t && i.isBefore(s, n) ? s : n);
    return !i.isAfter(a, e);
  }, [t, n, e, i, o]);
}
function d4(e, {
  disablePast: t,
  minDate: n,
  timezone: o
}) {
  const i = gt();
  return S.useMemo(() => {
    const s = i.date(void 0, o), a = i.startOfMonth(t && i.isAfter(s, n) ? s : n);
    return !i.isBefore(a, e);
  }, [t, n, e, i, o]);
}
function Nu(e, t, n, o) {
  const i = gt(), s = FL(e, i), a = S.useCallback((l) => {
    const c = e == null ? null : NL(e, l, !!t, i);
    n(c, o ?? "partial");
  }, [t, e, n, o, i]);
  return {
    meridiemMode: s,
    handleMeridiemChange: a
  };
}
const p4 = ["slots", "slotProps", "currentMonth", "disabled", "disableFuture", "disablePast", "maxDate", "minDate", "onMonthChange", "onViewChange", "view", "reduceAnimations", "views", "labelId", "className", "timezone", "format"], f4 = ["ownerState"], m4 = (e) => {
  const {
    classes: t
  } = e;
  return xt({
    root: ["root"],
    labelContainer: ["labelContainer"],
    label: ["label"],
    switchViewButton: ["switchViewButton"],
    switchViewIcon: ["switchViewIcon"]
  }, t4, t);
}, g4 = Q("div", {
  name: "MuiPickersCalendarHeader",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  display: "flex",
  alignItems: "center",
  marginTop: 12,
  marginBottom: 4,
  paddingLeft: 24,
  paddingRight: 12,
  // prevent jumping in safari
  maxHeight: 40,
  minHeight: 40
}), h4 = Q("div", {
  name: "MuiPickersCalendarHeader",
  slot: "LabelContainer",
  overridesResolver: (e, t) => t.labelContainer
})(({
  theme: e
}) => V({
  display: "flex",
  overflow: "hidden",
  alignItems: "center",
  cursor: "pointer",
  marginRight: "auto"
}, e.typography.body1, {
  fontWeight: e.typography.fontWeightMedium
})), b4 = Q("div", {
  name: "MuiPickersCalendarHeader",
  slot: "Label",
  overridesResolver: (e, t) => t.label
})({
  marginRight: 6
}), v4 = Q(lt, {
  name: "MuiPickersCalendarHeader",
  slot: "SwitchViewButton",
  overridesResolver: (e, t) => t.switchViewButton
})({
  marginRight: "auto",
  variants: [{
    props: {
      view: "year"
    },
    style: {
      [`.${n4.switchViewIcon}`]: {
        transform: "rotate(180deg)"
      }
    }
  }]
}), y4 = Q(U_, {
  name: "MuiPickersCalendarHeader",
  slot: "SwitchViewIcon",
  overridesResolver: (e, t) => t.switchViewIcon
})(({
  theme: e
}) => ({
  willChange: "transform",
  transition: e.transitions.create("transform"),
  transform: "rotate(0deg)"
})), wC = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = pn(), i = gt(), s = at({
    props: t,
    name: "MuiPickersCalendarHeader"
  }), {
    slots: a,
    slotProps: l,
    currentMonth: c,
    disabled: u,
    disableFuture: d,
    disablePast: p,
    maxDate: m,
    minDate: g,
    onMonthChange: h,
    onViewChange: v,
    view: b,
    reduceAnimations: y,
    views: C,
    labelId: x,
    className: T,
    timezone: w,
    format: R = `${i.formats.month} ${i.formats.year}`
  } = s, E = Xe(s, p4), O = s, I = m4(s), P = (a == null ? void 0 : a.switchViewButton) ?? v4, A = Rt({
    elementType: P,
    externalSlotProps: l == null ? void 0 : l.switchViewButton,
    additionalProps: {
      size: "small",
      "aria-label": o.calendarViewSwitchingButtonAriaLabel(b)
    },
    ownerState: O,
    className: I.switchViewButton
  }), D = (a == null ? void 0 : a.switchViewIcon) ?? y4, k = Rt({
    elementType: D,
    externalSlotProps: l == null ? void 0 : l.switchViewIcon,
    ownerState: O,
    className: I.switchViewIcon
  }), M = Xe(k, f4), F = () => h(i.addMonths(c, 1), "left"), N = () => h(i.addMonths(c, -1), "right"), W = u4(c, {
    disableFuture: d,
    maxDate: m,
    timezone: w
  }), H = d4(c, {
    disablePast: p,
    minDate: g,
    timezone: w
  }), B = () => {
    if (!(C.length === 1 || !v || u))
      if (C.length === 2)
        v(C.find((L) => L !== b) || C[0]);
      else {
        const L = C.indexOf(b) !== 0 ? 0 : 1;
        v(C[L]);
      }
  };
  if (C.length === 1 && C[0] === "year")
    return null;
  const j = i.formatByString(c, R);
  return /* @__PURE__ */ f.jsxs(g4, V({}, E, {
    ownerState: O,
    className: fe(T, I.root),
    ref: n,
    children: [/* @__PURE__ */ f.jsxs(h4, {
      role: "presentation",
      onClick: B,
      ownerState: O,
      "aria-live": "polite",
      className: I.labelContainer,
      children: [/* @__PURE__ */ f.jsx(gC, {
        reduceAnimations: y,
        transKey: j,
        children: /* @__PURE__ */ f.jsx(b4, {
          id: x,
          ownerState: O,
          className: I.label,
          children: j
        })
      }), C.length > 1 && !u && /* @__PURE__ */ f.jsx(P, V({}, A, {
        children: /* @__PURE__ */ f.jsx(D, V({}, M))
      }))]
    }), /* @__PURE__ */ f.jsx($r, {
      in: b === "day",
      children: /* @__PURE__ */ f.jsx(SC, {
        slots: a,
        slotProps: l,
        onGoToPrevious: N,
        isPreviousDisabled: H,
        previousLabel: o.previousMonth,
        onGoToNext: F,
        isNextDisabled: W,
        nextLabel: o.nextMonth
      })
    })]
  }));
});
process.env.NODE_ENV !== "production" && (wC.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  className: r.string,
  currentMonth: r.object.isRequired,
  disabled: r.bool,
  disableFuture: r.bool,
  disablePast: r.bool,
  /**
   * Format used to display the date.
   * @default `${adapter.formats.month} ${adapter.formats.year}`
   */
  format: r.string,
  /**
   * Id of the calendar text element.
   * It is used to establish an `aria-labelledby` relationship with the calendar `grid` element.
   */
  labelId: r.string,
  maxDate: r.object.isRequired,
  minDate: r.object.isRequired,
  onMonthChange: r.func.isRequired,
  onViewChange: r.func,
  reduceAnimations: r.bool.isRequired,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: r.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  timezone: r.string.isRequired,
  view: r.oneOf(["day", "month", "year"]).isRequired,
  views: r.arrayOf(r.oneOf(["day", "month", "year"]).isRequired).isRequired
});
const Vu = Q("div")({
  overflow: "hidden",
  width: wu,
  maxHeight: Tu,
  display: "flex",
  flexDirection: "column",
  margin: "0 auto"
}), x4 = (e) => It("MuiDateCalendar", e);
Ot("MuiDateCalendar", ["root", "viewTransitionContainer"]);
const C4 = ["autoFocus", "onViewChange", "value", "defaultValue", "referenceDate", "disableFuture", "disablePast", "onChange", "onYearChange", "onMonthChange", "reduceAnimations", "shouldDisableDate", "shouldDisableMonth", "shouldDisableYear", "view", "views", "openTo", "className", "disabled", "readOnly", "minDate", "maxDate", "disableHighlightToday", "focusedView", "onFocusedViewChange", "showDaysOutsideCurrentMonth", "fixedWeekNumber", "dayOfWeekFormatter", "slots", "slotProps", "loading", "renderLoading", "displayWeekNumber", "yearsOrder", "yearsPerRow", "monthsPerRow", "timezone"], S4 = (e) => {
  const {
    classes: t
  } = e;
  return xt({
    root: ["root"],
    viewTransitionContainer: ["viewTransitionContainer"]
  }, x4, t);
};
function w4(e, t) {
  const n = gt(), o = gi(), i = Ux(), s = at({
    props: e,
    name: t
  });
  return V({}, s, {
    loading: s.loading ?? !1,
    disablePast: s.disablePast ?? !1,
    disableFuture: s.disableFuture ?? !1,
    openTo: s.openTo ?? "day",
    views: s.views ?? ["year", "day"],
    reduceAnimations: s.reduceAnimations ?? i,
    renderLoading: s.renderLoading ?? (() => /* @__PURE__ */ f.jsx("span", {
      children: "..."
    })),
    minDate: Dn(n, s.minDate, o.minDate),
    maxDate: Dn(n, s.maxDate, o.maxDate)
  });
}
const T4 = Q(Vu, {
  name: "MuiDateCalendar",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  display: "flex",
  flexDirection: "column",
  height: Tu
}), I4 = Q(gC, {
  name: "MuiDateCalendar",
  slot: "ViewTransitionContainer",
  overridesResolver: (e, t) => t.viewTransitionContainer
})({}), TC = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = gt(), i = ps(), s = w4(t, "MuiDateCalendar"), {
    autoFocus: a,
    onViewChange: l,
    value: c,
    defaultValue: u,
    referenceDate: d,
    disableFuture: p,
    disablePast: m,
    onChange: g,
    onYearChange: h,
    onMonthChange: v,
    reduceAnimations: b,
    shouldDisableDate: y,
    shouldDisableMonth: C,
    shouldDisableYear: x,
    view: T,
    views: w,
    openTo: R,
    className: E,
    disabled: O,
    readOnly: I,
    minDate: P,
    maxDate: A,
    disableHighlightToday: D,
    focusedView: k,
    onFocusedViewChange: M,
    showDaysOutsideCurrentMonth: F,
    fixedWeekNumber: N,
    dayOfWeekFormatter: W,
    slots: H,
    slotProps: B,
    loading: j,
    renderLoading: L,
    displayWeekNumber: ee,
    yearsOrder: Y,
    yearsPerRow: $,
    monthsPerRow: U,
    timezone: X
  } = s, Z = Xe(s, C4), {
    value: G,
    handleValueChange: K,
    timezone: re
  } = hs({
    name: "DateCalendar",
    timezone: X,
    value: c,
    defaultValue: u,
    onChange: g,
    valueManager: rn
  }), {
    view: ne,
    setView: z,
    focusedView: q,
    setFocusedView: _,
    goToNextView: oe,
    setValueAndGoToNextView: te
  } = Ya({
    view: T,
    views: w,
    openTo: R,
    onChange: K,
    onViewChange: l,
    autoFocus: a,
    focusedView: k,
    onFocusedViewChange: M
  }), {
    referenceDate: se,
    calendarState: ae,
    changeFocusedDay: me,
    changeMonth: ye,
    handleChangeMonth: Te,
    isDateDisabled: Ve,
    onMonthSwitchingAnimationEnd: ie
  } = oz({
    value: G,
    referenceDate: d,
    reduceAnimations: b,
    onMonthChange: v,
    minDate: P,
    maxDate: A,
    shouldDisableDate: y,
    disablePast: m,
    disableFuture: p,
    timezone: re
  }), be = O && G || P, xe = O && G || A, Ie = `${i}-grid-label`, Pe = q !== null, Ce = (H == null ? void 0 : H.calendarHeader) ?? wC, Oe = Rt({
    elementType: Ce,
    externalSlotProps: B == null ? void 0 : B.calendarHeader,
    additionalProps: {
      views: w,
      view: ne,
      currentMonth: ae.currentMonth,
      onViewChange: z,
      onMonthChange: (je, st) => Te({
        newMonth: je,
        direction: st
      }),
      minDate: be,
      maxDate: xe,
      disabled: O,
      disablePast: m,
      disableFuture: p,
      reduceAnimations: b,
      timezone: re,
      labelId: Ie
    },
    ownerState: s
  }), Be = Ge((je) => {
    const st = o.startOfMonth(je), pt = o.endOfMonth(je), it = Ve(je) ? Ks({
      utils: o,
      date: je,
      minDate: o.isBefore(P, st) ? st : P,
      maxDate: o.isAfter(A, pt) ? pt : A,
      disablePast: m,
      disableFuture: p,
      isDateDisabled: Ve,
      timezone: re
    }) : je;
    it ? (te(it, "finish"), v == null || v(st)) : (oe(), ye(st)), me(it, !0);
  }), Ae = Ge((je) => {
    const st = o.startOfYear(je), pt = o.endOfYear(je), it = Ve(je) ? Ks({
      utils: o,
      date: je,
      minDate: o.isBefore(P, st) ? st : P,
      maxDate: o.isAfter(A, pt) ? pt : A,
      disablePast: m,
      disableFuture: p,
      isDateDisabled: Ve,
      timezone: re
    }) : je;
    it ? (te(it, "finish"), h == null || h(it)) : (oe(), ye(st)), me(it, !0);
  }), nt = Ge((je) => K(je && dc(o, je, G ?? se), "finish", ne));
  S.useEffect(() => {
    G != null && o.isValid(G) && ye(G);
  }, [G]);
  const Ze = s, dt = S4(Ze), de = {
    disablePast: m,
    disableFuture: p,
    maxDate: A,
    minDate: P
  }, we = {
    disableHighlightToday: D,
    readOnly: I,
    disabled: O,
    timezone: re,
    gridLabelId: Ie,
    slots: H,
    slotProps: B
  }, pe = S.useRef(ne);
  S.useEffect(() => {
    pe.current !== ne && (q === pe.current && _(ne, !0), pe.current = ne);
  }, [q, _, ne]);
  const Me = S.useMemo(() => [G], [G]);
  return /* @__PURE__ */ f.jsxs(T4, V({
    ref: n,
    className: fe(dt.root, E),
    ownerState: Ze
  }, Z, {
    children: [/* @__PURE__ */ f.jsx(Ce, V({}, Oe, {
      slots: H,
      slotProps: B
    })), /* @__PURE__ */ f.jsx(I4, {
      reduceAnimations: b,
      className: dt.viewTransitionContainer,
      transKey: ne,
      ownerState: Ze,
      children: /* @__PURE__ */ f.jsxs("div", {
        children: [ne === "year" && /* @__PURE__ */ f.jsx(CC, V({}, de, we, {
          value: G,
          onChange: Ae,
          shouldDisableYear: x,
          hasFocus: Pe,
          onFocusedViewChange: (je) => _("year", je),
          yearsOrder: Y,
          yearsPerRow: $,
          referenceDate: se
        })), ne === "month" && /* @__PURE__ */ f.jsx(xC, V({}, de, we, {
          hasFocus: Pe,
          className: E,
          value: G,
          onChange: Be,
          shouldDisableMonth: C,
          onFocusedViewChange: (je) => _("month", je),
          monthsPerRow: U,
          referenceDate: se
        })), ne === "day" && /* @__PURE__ */ f.jsx(Mz, V({}, ae, de, we, {
          onMonthSwitchingAnimationEnd: ie,
          onFocusedDayChange: me,
          reduceAnimations: b,
          selectedDays: Me,
          onSelectedDaysChange: nt,
          shouldDisableDate: y,
          shouldDisableMonth: C,
          shouldDisableYear: x,
          hasFocus: Pe,
          onFocusedViewChange: (je) => _("day", je),
          showDaysOutsideCurrentMonth: F,
          fixedWeekNumber: N,
          dayOfWeekFormatter: W,
          displayWeekNumber: ee,
          loading: j,
          renderLoading: L
        }))]
      })
    })]
  }));
});
process.env.NODE_ENV !== "production" && (TC.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: r.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  className: r.string,
  /**
   * Formats the day of week displayed in the calendar header.
   * @param {TDate} date The date of the day of week provided by the adapter.
   * @returns {string} The name to display.
   * @default (date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()
   */
  dayOfWeekFormatter: r.func,
  /**
   * The default selected value.
   * Used when the component is not controlled.
   */
  defaultValue: r.object,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: r.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: r.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: r.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: r.bool,
  /**
   * If `true`, the week number will be display in the calendar.
   */
  displayWeekNumber: r.bool,
  /**
   * The day view will show as many weeks as needed after the end of the current month to match this value.
   * Put it to 6 to have a fixed number of weeks in Gregorian calendars
   */
  fixedWeekNumber: r.number,
  /**
   * Controlled focused view.
   */
  focusedView: r.oneOf(["day", "month", "year"]),
  /**
   * If `true`, calls `renderLoading` instead of rendering the day calendar.
   * Can be used to preload information and show it in calendar.
   * @default false
   */
  loading: r.bool,
  /**
   * Maximal selectable date.
   * @default 2099-12-31
   */
  maxDate: r.object,
  /**
   * Minimal selectable date.
   * @default 1900-01-01
   */
  minDate: r.object,
  /**
   * Months rendered per row.
   * @default 3
   */
  monthsPerRow: r.oneOf([3, 4]),
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TView The view type. Will be one of date or time views.
   * @param {TValue} value The new value.
   * @param {PickerSelectionState | undefined} selectionState Indicates if the date selection is complete.
   * @param {TView | undefined} selectedView Indicates the view in which the selection has been made.
   */
  onChange: r.func,
  /**
   * Callback fired on focused view change.
   * @template TView
   * @param {TView} view The new view to focus or not.
   * @param {boolean} hasFocus `true` if the view should be focused.
   */
  onFocusedViewChange: r.func,
  /**
   * Callback fired on month change.
   * @template TDate
   * @param {TDate} month The new month.
   */
  onMonthChange: r.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: r.func,
  /**
   * Callback fired on year change.
   * @template TDate
   * @param {TDate} year The new year.
   */
  onYearChange: r.func,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: r.oneOf(["day", "month", "year"]),
  /**
   * Make picker read only.
   * @default false
   */
  readOnly: r.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: r.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date using the validation props, except callbacks such as `shouldDisableDate`.
   */
  referenceDate: r.object,
  /**
   * Component displaying when passed `loading` true.
   * @returns {React.ReactNode} The node to render when loading.
   * @default () => <span data-mui-test="loading-progress">...</span>
   */
  renderLoading: r.func,
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (for example when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: r.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: r.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: r.func,
  /**
   * If `true`, days outside the current month are rendered:
   *
   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.
   *
   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.
   *
   * - ignored if `calendars` equals more than `1` on range pickers.
   * @default false
   */
  showDaysOutsideCurrentMonth: r.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: r.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: r.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: r.object,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: r.oneOf(["day", "month", "year"]),
  /**
   * Available views.
   */
  views: r.arrayOf(r.oneOf(["day", "month", "year"]).isRequired),
  /**
   * Years are displayed in ascending (chronological) order by default.
   * If `desc`, years are displayed in descending order.
   * @default 'asc'
   */
  yearsOrder: r.oneOf(["asc", "desc"]),
  /**
   * Years rendered per row.
   * @default 3
   */
  yearsPerRow: r.oneOf([3, 4])
});
const vo = ({
  view: e,
  onViewChange: t,
  views: n,
  focusedView: o,
  onFocusedViewChange: i,
  value: s,
  defaultValue: a,
  referenceDate: l,
  onChange: c,
  className: u,
  classes: d,
  disableFuture: p,
  disablePast: m,
  minDate: g,
  maxDate: h,
  shouldDisableDate: v,
  shouldDisableMonth: b,
  shouldDisableYear: y,
  reduceAnimations: C,
  onMonthChange: x,
  monthsPerRow: T,
  onYearChange: w,
  yearsOrder: R,
  yearsPerRow: E,
  slots: O,
  slotProps: I,
  loading: P,
  renderLoading: A,
  disableHighlightToday: D,
  readOnly: k,
  disabled: M,
  showDaysOutsideCurrentMonth: F,
  dayOfWeekFormatter: N,
  sx: W,
  autoFocus: H,
  fixedWeekNumber: B,
  displayWeekNumber: j,
  timezone: L
}) => /* @__PURE__ */ f.jsx(TC, {
  view: e,
  onViewChange: t,
  views: n.filter(Ki),
  focusedView: o && Ki(o) ? o : null,
  onFocusedViewChange: i,
  value: s,
  defaultValue: a,
  referenceDate: l,
  onChange: c,
  className: u,
  classes: d,
  disableFuture: p,
  disablePast: m,
  minDate: g,
  maxDate: h,
  shouldDisableDate: v,
  shouldDisableMonth: b,
  shouldDisableYear: y,
  reduceAnimations: C,
  onMonthChange: x,
  monthsPerRow: T,
  onYearChange: w,
  yearsOrder: R,
  yearsPerRow: E,
  slots: O,
  slotProps: I,
  loading: P,
  renderLoading: A,
  disableHighlightToday: D,
  readOnly: k,
  disabled: M,
  showDaysOutsideCurrentMonth: F,
  dayOfWeekFormatter: N,
  sx: W,
  autoFocus: H,
  fixedWeekNumber: B,
  displayWeekNumber: j,
  timezone: L
}), IC = /* @__PURE__ */ S.forwardRef(function(t, n) {
  var u, d;
  const o = pn(), i = gt(), s = Wx(t, "MuiDesktopDatePicker"), a = V({
    day: vo,
    month: vo,
    year: vo
  }, s.viewRenderers), l = V({}, s, {
    viewRenderers: a,
    format: wa(i, s, !1),
    yearsPerRow: s.yearsPerRow ?? 4,
    slots: V({
      openPickerIcon: tC,
      field: wm
    }, s.slots),
    slotProps: V({}, s.slotProps, {
      field: (p) => {
        var m;
        return V({}, kr((m = s.slotProps) == null ? void 0 : m.field, p), gs(s), {
          ref: n
        });
      },
      toolbar: V({
        hidden: !0
      }, (u = s.slotProps) == null ? void 0 : u.toolbar)
    })
  }), {
    renderPicker: c
  } = pm({
    props: l,
    valueManager: rn,
    valueType: "date",
    getOpenDialogAriaText: fs({
      utils: i,
      formatKey: "fullDate",
      contextTranslation: o.openDatePickerDialogue,
      propsTranslation: (d = l.localeText) == null ? void 0 : d.openDatePickerDialogue
    }),
    validator: ms
  });
  return c();
});
IC.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: r.bool,
  className: r.string,
  /**
   * If `true`, the popover or modal will close after submitting the full date.
   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).
   */
  closeOnSelect: r.bool,
  /**
   * Formats the day of week displayed in the calendar header.
   * @param {TDate} date The date of the day of week provided by the adapter.
   * @returns {string} The name to display.
   * @default (date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()
   */
  dayOfWeekFormatter: r.func,
  /**
   * The default value.
   * Used when the component is not controlled.
   */
  defaultValue: r.object,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: r.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: r.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: r.bool,
  /**
   * If `true`, the open picker button will not be rendered (renders only the field).
   * @default false
   */
  disableOpenPicker: r.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: r.bool,
  /**
   * If `true`, the week number will be display in the calendar.
   */
  displayWeekNumber: r.bool,
  /**
   * @default false
   */
  enableAccessibleFieldDOMStructure: r.any,
  /**
   * The day view will show as many weeks as needed after the end of the current month to match this value.
   * Put it to 6 to have a fixed number of weeks in Gregorian calendars
   */
  fixedWeekNumber: r.number,
  /**
   * Format of the date when rendered in the input(s).
   * Defaults to localized format based on the used `views`.
   */
  format: r.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: r.oneOf(["dense", "spacious"]),
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Rn,
  /**
   * The label content.
   */
  label: r.node,
  /**
   * If `true`, calls `renderLoading` instead of rendering the day calendar.
   * Can be used to preload information and show it in calendar.
   * @default false
   */
  loading: r.bool,
  /**
   * Locale for components texts.
   * Allows overriding texts coming from `LocalizationProvider` and `theme`.
   */
  localeText: r.object,
  /**
   * Maximal selectable date.
   * @default 2099-12-31
   */
  maxDate: r.object,
  /**
   * Minimal selectable date.
   * @default 1900-01-01
   */
  minDate: r.object,
  /**
   * Months rendered per row.
   * @default 3
   */
  monthsPerRow: r.oneOf([3, 4]),
  /**
   * Name attribute used by the `input` element in the Field.
   */
  name: r.string,
  /**
   * Callback fired when the value is accepted.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The value that was just accepted.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onAccept: r.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: r.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see `open`).
   */
  onClose: r.func,
  /**
   * Callback fired when the error associated with the current value changes.
   * When a validation error is detected, the `error` parameter contains a non-null value.
   * This can be used to render an appropriate form error.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @param {TError} error The reason why the current value is not valid.
   * @param {TValue} value The value associated with the error.
   */
  onError: r.func,
  /**
   * Callback fired on month change.
   * @template TDate
   * @param {TDate} month The new month.
   */
  onMonthChange: r.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see `open`).
   */
  onOpen: r.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: r.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: r.func,
  /**
   * Callback fired on year change.
   * @template TDate
   * @param {TDate} year The new year.
   */
  onYearChange: r.func,
  /**
   * Control the popup or dialog open state.
   * @default false
   */
  open: r.bool,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: r.oneOf(["day", "month", "year"]),
  /**
   * Force rendering in particular orientation.
   */
  orientation: r.oneOf(["landscape", "portrait"]),
  readOnly: r.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: r.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.
   */
  referenceDate: r.object,
  /**
   * Component displaying when passed `loading` true.
   * @returns {React.ReactNode} The node to render when loading.
   * @default () => <span data-mui-test="loading-progress">...</span>
   */
  renderLoading: r.func,
  /**
   * The currently selected sections.
   * This prop accepts four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 3. If `"all"` is provided, all the sections will be selected.
   * 4. If `null` is provided, no section will be selected.
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: r.oneOfType([r.oneOf(["all", "day", "empty", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), r.number]),
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (for example when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: r.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: r.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: r.func,
  /**
   * If `true`, days outside the current month are rendered:
   *
   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.
   *
   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.
   *
   * - ignored if `calendars` equals more than `1` on range pickers.
   * @default false
   */
  showDaysOutsideCurrentMonth: r.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: r.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: r.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: r.object,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: r.oneOf(["day", "month", "year"]),
  /**
   * Define custom view renderers for each section.
   * If `null`, the section will only have field editing.
   * If `undefined`, internally defined view will be used.
   */
  viewRenderers: r.shape({
    day: r.func,
    month: r.func,
    year: r.func
  }),
  /**
   * Available views.
   */
  views: r.arrayOf(r.oneOf(["day", "month", "year"]).isRequired),
  /**
   * Years are displayed in ascending (chronological) order by default.
   * If `desc`, years are displayed in descending order.
   * @default 'asc'
   */
  yearsOrder: r.oneOf(["asc", "desc"]),
  /**
   * Years rendered per row.
   * @default 4
   */
  yearsPerRow: r.oneOf([3, 4])
};
const R4 = Q(Df)({
  [`& .${Zs.container}`]: {
    outline: 0
  },
  [`& .${Zs.paper}`]: {
    outline: 0,
    minWidth: wu
  }
}), O4 = Q(jf)({
  "&:first-of-type": {
    padding: 0
  }
});
function E4(e) {
  const {
    children: t,
    onDismiss: n,
    open: o,
    slots: i,
    slotProps: s
  } = e, a = (i == null ? void 0 : i.dialog) ?? R4, l = (i == null ? void 0 : i.mobileTransition) ?? $r;
  return /* @__PURE__ */ f.jsx(a, V({
    open: o,
    onClose: n
  }, s == null ? void 0 : s.dialog, {
    TransitionComponent: l,
    TransitionProps: s == null ? void 0 : s.mobileTransition,
    PaperComponent: i == null ? void 0 : i.mobilePaper,
    PaperProps: s == null ? void 0 : s.mobilePaper,
    children: /* @__PURE__ */ f.jsx(O4, {
      children: t
    })
  }));
}
const P4 = ["props", "getOpenDialogAriaText"], Tm = (e) => {
  var j;
  let {
    props: t,
    getOpenDialogAriaText: n
  } = e, o = Xe(e, P4);
  const {
    slots: i,
    slotProps: s,
    className: a,
    sx: l,
    format: c,
    formatDensity: u,
    enableAccessibleFieldDOMStructure: d,
    selectedSections: p,
    onSelectedSectionsChange: m,
    timezone: g,
    name: h,
    label: v,
    inputRef: b,
    readOnly: y,
    disabled: C,
    localeText: x
  } = t, T = S.useRef(null), w = ps(), R = ((j = s == null ? void 0 : s.toolbar) == null ? void 0 : j.hidden) ?? !1, {
    open: E,
    actions: O,
    layoutProps: I,
    renderCurrentView: P,
    fieldProps: A
  } = Xx(V({}, o, {
    props: t,
    fieldRef: T,
    autoFocusView: !0,
    additionalViewProps: {},
    wrapperVariant: "mobile"
  })), D = i.field, k = Rt({
    elementType: D,
    externalSlotProps: s == null ? void 0 : s.field,
    additionalProps: V({}, A, R && {
      id: w
    }, !(C || y) && {
      onClick: O.onOpen,
      onKeyDown: m_(O.onOpen)
    }, {
      readOnly: y ?? !0,
      disabled: C,
      className: a,
      sx: l,
      format: c,
      formatDensity: u,
      enableAccessibleFieldDOMStructure: d,
      selectedSections: p,
      onSelectedSectionsChange: m,
      timezone: g,
      label: v,
      name: h
    }, b ? {
      inputRef: b
    } : {}),
    ownerState: t
  });
  k.inputProps = V({}, k.inputProps, {
    "aria-label": n(A.value)
  });
  const M = V({
    textField: i.textField
  }, k.slots), F = i.layout ?? dm;
  let N = w;
  R && (v ? N = `${w}-label` : N = void 0);
  const W = V({}, s, {
    toolbar: V({}, s == null ? void 0 : s.toolbar, {
      titleId: w
    }),
    mobilePaper: V({
      "aria-labelledby": N
    }, s == null ? void 0 : s.mobilePaper)
  }), H = Vn(T, k.unstableFieldRef);
  return {
    renderPicker: () => /* @__PURE__ */ f.jsxs(am, {
      localeText: x,
      children: [/* @__PURE__ */ f.jsx(D, V({}, k, {
        slots: M,
        slotProps: W,
        unstableFieldRef: H
      })), /* @__PURE__ */ f.jsx(E4, V({}, O, {
        open: E,
        slots: i,
        slotProps: W,
        children: /* @__PURE__ */ f.jsx(F, V({}, I, W == null ? void 0 : W.layout, {
          slots: i,
          slotProps: W,
          children: P()
        }))
      }))]
    })
  };
}, RC = /* @__PURE__ */ S.forwardRef(function(t, n) {
  var u, d;
  const o = pn(), i = gt(), s = Wx(t, "MuiMobileDatePicker"), a = V({
    day: vo,
    month: vo,
    year: vo
  }, s.viewRenderers), l = V({}, s, {
    viewRenderers: a,
    format: wa(i, s, !1),
    slots: V({
      field: wm
    }, s.slots),
    slotProps: V({}, s.slotProps, {
      field: (p) => {
        var m;
        return V({}, kr((m = s.slotProps) == null ? void 0 : m.field, p), gs(s), {
          ref: n
        });
      },
      toolbar: V({
        hidden: !1
      }, (u = s.slotProps) == null ? void 0 : u.toolbar)
    })
  }), {
    renderPicker: c
  } = Tm({
    props: l,
    valueManager: rn,
    valueType: "date",
    getOpenDialogAriaText: fs({
      utils: i,
      formatKey: "fullDate",
      contextTranslation: o.openDatePickerDialogue,
      propsTranslation: (d = l.localeText) == null ? void 0 : d.openDatePickerDialogue
    }),
    validator: ms
  });
  return c();
});
RC.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: r.bool,
  className: r.string,
  /**
   * If `true`, the popover or modal will close after submitting the full date.
   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).
   */
  closeOnSelect: r.bool,
  /**
   * Formats the day of week displayed in the calendar header.
   * @param {TDate} date The date of the day of week provided by the adapter.
   * @returns {string} The name to display.
   * @default (date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()
   */
  dayOfWeekFormatter: r.func,
  /**
   * The default value.
   * Used when the component is not controlled.
   */
  defaultValue: r.object,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: r.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: r.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: r.bool,
  /**
   * If `true`, the open picker button will not be rendered (renders only the field).
   * @default false
   */
  disableOpenPicker: r.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: r.bool,
  /**
   * If `true`, the week number will be display in the calendar.
   */
  displayWeekNumber: r.bool,
  /**
   * @default false
   */
  enableAccessibleFieldDOMStructure: r.any,
  /**
   * The day view will show as many weeks as needed after the end of the current month to match this value.
   * Put it to 6 to have a fixed number of weeks in Gregorian calendars
   */
  fixedWeekNumber: r.number,
  /**
   * Format of the date when rendered in the input(s).
   * Defaults to localized format based on the used `views`.
   */
  format: r.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: r.oneOf(["dense", "spacious"]),
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Rn,
  /**
   * The label content.
   */
  label: r.node,
  /**
   * If `true`, calls `renderLoading` instead of rendering the day calendar.
   * Can be used to preload information and show it in calendar.
   * @default false
   */
  loading: r.bool,
  /**
   * Locale for components texts.
   * Allows overriding texts coming from `LocalizationProvider` and `theme`.
   */
  localeText: r.object,
  /**
   * Maximal selectable date.
   * @default 2099-12-31
   */
  maxDate: r.object,
  /**
   * Minimal selectable date.
   * @default 1900-01-01
   */
  minDate: r.object,
  /**
   * Months rendered per row.
   * @default 3
   */
  monthsPerRow: r.oneOf([3, 4]),
  /**
   * Name attribute used by the `input` element in the Field.
   */
  name: r.string,
  /**
   * Callback fired when the value is accepted.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The value that was just accepted.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onAccept: r.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: r.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see `open`).
   */
  onClose: r.func,
  /**
   * Callback fired when the error associated with the current value changes.
   * When a validation error is detected, the `error` parameter contains a non-null value.
   * This can be used to render an appropriate form error.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @param {TError} error The reason why the current value is not valid.
   * @param {TValue} value The value associated with the error.
   */
  onError: r.func,
  /**
   * Callback fired on month change.
   * @template TDate
   * @param {TDate} month The new month.
   */
  onMonthChange: r.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see `open`).
   */
  onOpen: r.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: r.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: r.func,
  /**
   * Callback fired on year change.
   * @template TDate
   * @param {TDate} year The new year.
   */
  onYearChange: r.func,
  /**
   * Control the popup or dialog open state.
   * @default false
   */
  open: r.bool,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: r.oneOf(["day", "month", "year"]),
  /**
   * Force rendering in particular orientation.
   */
  orientation: r.oneOf(["landscape", "portrait"]),
  readOnly: r.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: r.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.
   */
  referenceDate: r.object,
  /**
   * Component displaying when passed `loading` true.
   * @returns {React.ReactNode} The node to render when loading.
   * @default () => <span data-mui-test="loading-progress">...</span>
   */
  renderLoading: r.func,
  /**
   * The currently selected sections.
   * This prop accepts four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 3. If `"all"` is provided, all the sections will be selected.
   * 4. If `null` is provided, no section will be selected.
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: r.oneOfType([r.oneOf(["all", "day", "empty", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), r.number]),
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (for example when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: r.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: r.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: r.func,
  /**
   * If `true`, days outside the current month are rendered:
   *
   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.
   *
   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.
   *
   * - ignored if `calendars` equals more than `1` on range pickers.
   * @default false
   */
  showDaysOutsideCurrentMonth: r.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: r.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: r.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: r.object,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: r.oneOf(["day", "month", "year"]),
  /**
   * Define custom view renderers for each section.
   * If `null`, the section will only have field editing.
   * If `undefined`, internally defined view will be used.
   */
  viewRenderers: r.shape({
    day: r.func,
    month: r.func,
    year: r.func
  }),
  /**
   * Available views.
   */
  views: r.arrayOf(r.oneOf(["day", "month", "year"]).isRequired),
  /**
   * Years are displayed in ascending (chronological) order by default.
   * If `desc`, years are displayed in descending order.
   * @default 'asc'
   */
  yearsOrder: r.oneOf(["asc", "desc"]),
  /**
   * Years rendered per row.
   * @default 3
   */
  yearsPerRow: r.oneOf([3, 4])
};
const A4 = ["desktopModeMediaQuery"], OC = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiDatePicker"
  }), {
    desktopModeMediaQuery: i = cm
  } = o, s = Xe(o, A4);
  return Pr(i, {
    defaultMatches: !0
  }) ? /* @__PURE__ */ f.jsx(IC, V({
    ref: n
  }, s)) : /* @__PURE__ */ f.jsx(RC, V({
    ref: n
  }, s));
});
process.env.NODE_ENV !== "production" && (OC.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: r.bool,
  className: r.string,
  /**
   * If `true`, the popover or modal will close after submitting the full date.
   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).
   */
  closeOnSelect: r.bool,
  /**
   * Formats the day of week displayed in the calendar header.
   * @param {TDate} date The date of the day of week provided by the adapter.
   * @returns {string} The name to display.
   * @default (date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()
   */
  dayOfWeekFormatter: r.func,
  /**
   * The default value.
   * Used when the component is not controlled.
   */
  defaultValue: r.object,
  /**
   * CSS media query when `Mobile` mode will be changed to `Desktop`.
   * @default '@media (pointer: fine)'
   * @example '@media (min-width: 720px)' or theme.breakpoints.up("sm")
   */
  desktopModeMediaQuery: r.string,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: r.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: r.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: r.bool,
  /**
   * If `true`, the open picker button will not be rendered (renders only the field).
   * @default false
   */
  disableOpenPicker: r.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: r.bool,
  /**
   * If `true`, the week number will be display in the calendar.
   */
  displayWeekNumber: r.bool,
  /**
   * @default false
   */
  enableAccessibleFieldDOMStructure: r.any,
  /**
   * The day view will show as many weeks as needed after the end of the current month to match this value.
   * Put it to 6 to have a fixed number of weeks in Gregorian calendars
   */
  fixedWeekNumber: r.number,
  /**
   * Format of the date when rendered in the input(s).
   * Defaults to localized format based on the used `views`.
   */
  format: r.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: r.oneOf(["dense", "spacious"]),
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Rn,
  /**
   * The label content.
   */
  label: r.node,
  /**
   * If `true`, calls `renderLoading` instead of rendering the day calendar.
   * Can be used to preload information and show it in calendar.
   * @default false
   */
  loading: r.bool,
  /**
   * Locale for components texts.
   * Allows overriding texts coming from `LocalizationProvider` and `theme`.
   */
  localeText: r.object,
  /**
   * Maximal selectable date.
   * @default 2099-12-31
   */
  maxDate: r.object,
  /**
   * Minimal selectable date.
   * @default 1900-01-01
   */
  minDate: r.object,
  /**
   * Months rendered per row.
   * @default 3
   */
  monthsPerRow: r.oneOf([3, 4]),
  /**
   * Name attribute used by the `input` element in the Field.
   */
  name: r.string,
  /**
   * Callback fired when the value is accepted.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The value that was just accepted.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onAccept: r.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: r.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see `open`).
   */
  onClose: r.func,
  /**
   * Callback fired when the error associated with the current value changes.
   * When a validation error is detected, the `error` parameter contains a non-null value.
   * This can be used to render an appropriate form error.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @param {TError} error The reason why the current value is not valid.
   * @param {TValue} value The value associated with the error.
   */
  onError: r.func,
  /**
   * Callback fired on month change.
   * @template TDate
   * @param {TDate} month The new month.
   */
  onMonthChange: r.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see `open`).
   */
  onOpen: r.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: r.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: r.func,
  /**
   * Callback fired on year change.
   * @template TDate
   * @param {TDate} year The new year.
   */
  onYearChange: r.func,
  /**
   * Control the popup or dialog open state.
   * @default false
   */
  open: r.bool,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: r.oneOf(["day", "month", "year"]),
  /**
   * Force rendering in particular orientation.
   */
  orientation: r.oneOf(["landscape", "portrait"]),
  readOnly: r.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: r.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.
   */
  referenceDate: r.object,
  /**
   * Component displaying when passed `loading` true.
   * @returns {React.ReactNode} The node to render when loading.
   * @default () => <span data-mui-test="loading-progress">...</span>
   */
  renderLoading: r.func,
  /**
   * The currently selected sections.
   * This prop accepts four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 3. If `"all"` is provided, all the sections will be selected.
   * 4. If `null` is provided, no section will be selected.
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: r.oneOfType([r.oneOf(["all", "day", "empty", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), r.number]),
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (for example when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: r.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: r.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: r.func,
  /**
   * If `true`, days outside the current month are rendered:
   *
   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.
   *
   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.
   *
   * - ignored if `calendars` equals more than `1` on range pickers.
   * @default false
   */
  showDaysOutsideCurrentMonth: r.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: r.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: r.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: r.object,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: r.oneOf(["day", "month", "year"]),
  /**
   * Define custom view renderers for each section.
   * If `null`, the section will only have field editing.
   * If `undefined`, internally defined view will be used.
   */
  viewRenderers: r.shape({
    day: r.func,
    month: r.func,
    year: r.func
  }),
  /**
   * Available views.
   */
  views: r.arrayOf(r.oneOf(["day", "month", "year"]).isRequired),
  /**
   * Years are displayed in ascending (chronological) order by default.
   * If `desc`, years are displayed in descending order.
   * @default 'asc'
   */
  yearsOrder: r.oneOf(["asc", "desc"]),
  /**
   * Years rendered per row.
   * @default 4 on desktop, 3 on mobile
   */
  yearsPerRow: r.oneOf([3, 4])
});
const D4 = (e) => {
  const t = hB(e), {
    forwardedProps: n,
    internalProps: o
  } = gm(t, "date-time");
  return fm({
    forwardedProps: n,
    internalProps: o,
    valueManager: rn,
    fieldValueManager: sm,
    validator: Cu,
    valueType: "date-time"
  });
}, M4 = ["slots", "slotProps", "InputProps", "inputProps"], Im = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiDateTimeField"
  }), {
    slots: i,
    slotProps: s,
    InputProps: a,
    inputProps: l
  } = o, c = Xe(o, M4), u = o, d = (i == null ? void 0 : i.textField) ?? (t.enableAccessibleFieldDOMStructure ? Fu : Kn), p = Rt({
    elementType: d,
    externalSlotProps: s == null ? void 0 : s.textField,
    externalForwardedProps: c,
    ownerState: u,
    additionalProps: {
      ref: n
    }
  });
  p.inputProps = V({}, l, p.inputProps), p.InputProps = V({}, a, p.InputProps);
  const m = D4(p), g = Sm(m), h = mm(V({}, g, {
    slots: i,
    slotProps: s
  }));
  return /* @__PURE__ */ f.jsx(d, V({}, h));
});
process.env.NODE_ENV !== "production" && (Im.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default utils.is12HourCycleInCurrentLocale()
   */
  ampm: r.bool,
  /**
   * If `true`, the `input` element is focused during the first mount.
   * @default false
   */
  autoFocus: r.bool,
  className: r.string,
  /**
   * If `true`, a clear button will be shown in the field allowing value clearing.
   * @default false
   */
  clearable: r.bool,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: r.oneOf(["error", "info", "primary", "secondary", "success", "warning"]),
  component: r.elementType,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: r.object,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: r.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: r.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: r.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: r.bool,
  /**
   * @default false
   */
  enableAccessibleFieldDOMStructure: r.bool,
  /**
   * If `true`, the component is displayed in focused state.
   */
  focused: r.bool,
  /**
   * Format of the date when rendered in the input(s).
   */
  format: r.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: r.oneOf(["dense", "spacious"]),
  /**
   * Props applied to the [`FormHelperText`](/material-ui/api/form-helper-text/) element.
   */
  FormHelperTextProps: r.object,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: r.bool,
  /**
   * The helper text content.
   */
  helperText: r.node,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: r.bool,
  /**
   * The id of the `input` element.
   * Use this prop to make `label` and `helperText` accessible for screen readers.
   */
  id: r.string,
  /**
   * Props applied to the [`InputLabel`](/material-ui/api/input-label/) element.
   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.
   */
  InputLabelProps: r.object,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: r.object,
  /**
   * Props applied to the Input element.
   * It will be a [`FilledInput`](/material-ui/api/filled-input/),
   * [`OutlinedInput`](/material-ui/api/outlined-input/) or [`Input`](/material-ui/api/input/)
   * component depending on the `variant` prop value.
   */
  InputProps: r.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Rn,
  /**
   * The label content.
   */
  label: r.node,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: r.oneOf(["dense", "none", "normal"]),
  /**
   * Maximal selectable date.
   * @default 2099-12-31
   */
  maxDate: r.object,
  /**
   * Maximal selectable moment of time with binding to date, to set max time in each day use `maxTime`.
   */
  maxDateTime: r.object,
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: r.object,
  /**
   * Minimal selectable date.
   * @default 1900-01-01
   */
  minDate: r.object,
  /**
   * Minimal selectable moment of time with binding to date, to set min time in each day use `minTime`.
   */
  minDateTime: r.object,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: r.object,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: r.number,
  /**
   * Name attribute of the `input` element.
   */
  name: r.string,
  onBlur: r.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: r.func,
  /**
   * Callback fired when the clear button is clicked.
   */
  onClear: r.func,
  /**
   * Callback fired when the error associated with the current value changes.
   * When a validation error is detected, the `error` parameter contains a non-null value.
   * This can be used to render an appropriate form error.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @param {TError} error The reason why the current value is not valid.
   * @param {TValue} value The value associated with the error.
   */
  onError: r.func,
  onFocus: r.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: r.func,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   * @default false
   */
  readOnly: r.bool,
  /**
   * The date used to generate a part of the new value that is not present in the format when both `value` and `defaultValue` are empty.
   * For example, on time fields it will be used to determine the date to set.
   * @default The closest valid date using the validation props, except callbacks such as `shouldDisableDate`. Value is rounded to the most granular section used.
   */
  referenceDate: r.object,
  /**
   * If `true`, the label is displayed as required and the `input` element is required.
   * @default false
   */
  required: r.bool,
  /**
   * The currently selected sections.
   * This prop accepts four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 3. If `"all"` is provided, all the sections will be selected.
   * 4. If `null` is provided, no section will be selected.
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: r.oneOfType([r.oneOf(["all", "day", "empty", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), r.number]),
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (for example when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: r.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: r.func,
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: r.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: r.func,
  /**
   * If `true`, the format will respect the leading zeroes (e.g: on dayjs, the format `M/D/YYYY` will render `8/16/2018`)
   * If `false`, the format will always add leading zeroes (e.g: on dayjs, the format `M/D/YYYY` will render `08/16/2018`)
   *
   * Warning n°1: Luxon is not able to respect the leading zeroes when using macro tokens (e.g: "DD"), so `shouldRespectLeadingZeros={true}` might lead to inconsistencies when using `AdapterLuxon`.
   *
   * Warning n°2: When `shouldRespectLeadingZeros={true}`, the field will add an invisible character on the sections containing a single digit to make sure `onChange` is fired.
   * If you need to get the clean value from the input, you can remove this character using `input.value.replace(/\u200e/g, '')`.
   *
   * Warning n°3: When used in strict mode, dayjs and moment require to respect the leading zeros.
   * This mean that when using `shouldRespectLeadingZeros={false}`, if you retrieve the value directly from the input (not listening to `onChange`) and your format contains tokens without leading zeros, the value will not be parsed by your library.
   *
   * @default false
   */
  shouldRespectLeadingZeros: r.bool,
  /**
   * The size of the component.
   */
  size: r.oneOf(["medium", "small"]),
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: r.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: r.object,
  style: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: r.string,
  /**
   * The ref object used to imperatively interact with the field.
   */
  unstableFieldRef: r.oneOfType([r.func, r.object]),
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: r.object,
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: r.oneOf(["filled", "outlined", "standard"])
});
function j4(e) {
  return It("MuiDateTimePickerTabs", e);
}
Ot("MuiDateTimePickerTabs", ["root"]);
const k4 = (e) => Ki(e) ? "date" : "time", F4 = (e) => e === "date" ? "day" : "hours", N4 = (e) => {
  const {
    classes: t
  } = e;
  return xt({
    root: ["root"]
  }, j4, t);
}, V4 = Q(_0, {
  name: "MuiDateTimePickerTabs",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})(({
  theme: e
}) => ({
  boxShadow: `0 -1px 0 0 inset ${(e.vars || e).palette.divider}`,
  "&:last-child": {
    boxShadow: `0 1px 0 0 inset ${(e.vars || e).palette.divider}`,
    [`& .${zl.indicator}`]: {
      bottom: "auto",
      top: 0
    }
  }
})), EC = function(t) {
  const n = at({
    props: t,
    name: "MuiDateTimePickerTabs"
  }), {
    dateIcon: o = /* @__PURE__ */ f.jsx(q_, {}),
    onViewChange: i,
    timeIcon: s = /* @__PURE__ */ f.jsx(J_, {}),
    view: a,
    hidden: l = typeof window > "u" || window.innerHeight < 667,
    className: c,
    sx: u
  } = n, d = pn(), p = N4(n), m = (g, h) => {
    i(F4(h));
  };
  return l ? null : /* @__PURE__ */ f.jsxs(V4, {
    ownerState: n,
    variant: "fullWidth",
    value: k4(a),
    onChange: m,
    className: fe(c, p.root),
    sx: u,
    children: [/* @__PURE__ */ f.jsx(wp, {
      value: "date",
      "aria-label": d.dateTableLabel,
      icon: /* @__PURE__ */ f.jsx(S.Fragment, {
        children: o
      })
    }), /* @__PURE__ */ f.jsx(wp, {
      value: "time",
      "aria-label": d.timeTableLabel,
      icon: /* @__PURE__ */ f.jsx(S.Fragment, {
        children: s
      })
    })]
  });
};
process.env.NODE_ENV !== "production" && (EC.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  className: r.string,
  /**
   * Date tab icon.
   * @default DateRange
   */
  dateIcon: r.node,
  /**
   * Toggles visibility of the tabs allowing view switching.
   * @default `window.innerHeight < 667` for `DesktopDateTimePicker` and `MobileDateTimePicker`, `displayStaticWrapperAs === 'desktop'` for `StaticDateTimePicker`
   */
  hidden: r.bool,
  /**
   * Callback called when a tab is clicked.
   * @template TView
   * @param {TView} view The view to open
   */
  onViewChange: r.func.isRequired,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * Time tab icon.
   * @default Time
   */
  timeIcon: r.node,
  /**
   * Currently visible picker view.
   */
  view: r.oneOf(["day", "hours", "meridiem", "minutes", "month", "seconds", "year"]).isRequired
});
function $4(e) {
  return It("MuiPickersToolbarText", e);
}
const Lp = Ot("MuiPickersToolbarText", ["root", "selected"]), L4 = ["className", "selected", "value"], _4 = (e) => {
  const {
    classes: t,
    selected: n
  } = e;
  return xt({
    root: ["root", n && "selected"]
  }, $4, t);
}, B4 = Q(Fe, {
  name: "MuiPickersToolbarText",
  slot: "Root",
  overridesResolver: (e, t) => [t.root, {
    [`&.${Lp.selected}`]: t.selected
  }]
})(({
  theme: e
}) => ({
  transition: e.transitions.create("color"),
  color: (e.vars || e).palette.text.secondary,
  [`&.${Lp.selected}`]: {
    color: (e.vars || e).palette.text.primary
  }
})), Rm = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiPickersToolbarText"
  }), {
    className: i,
    value: s
  } = o, a = Xe(o, L4), l = _4(o);
  return /* @__PURE__ */ f.jsx(B4, V({
    ref: n,
    className: fe(i, l.root),
    component: "span"
  }, a, {
    children: s
  }));
}), z4 = ["align", "className", "selected", "typographyClassName", "value", "variant", "width"], W4 = (e) => {
  const {
    classes: t
  } = e;
  return xt({
    root: ["root"]
  }, Bx, t);
}, H4 = Q(vt, {
  name: "MuiPickersToolbarButton",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  padding: 0,
  minWidth: 16,
  textTransform: "none"
}), Un = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiPickersToolbarButton"
  }), {
    align: i,
    className: s,
    selected: a,
    typographyClassName: l,
    value: c,
    variant: u,
    width: d
  } = o, p = Xe(o, z4), m = W4(o);
  return /* @__PURE__ */ f.jsx(H4, V({
    variant: "text",
    ref: n,
    className: fe(s, m.root)
  }, d ? {
    sx: {
      width: d
    }
  } : {}, p, {
    children: /* @__PURE__ */ f.jsx(Rm, {
      align: i,
      className: l,
      variant: u,
      value: c,
      selected: a
    })
  }));
});
function G4(e) {
  return It("MuiDateTimePickerToolbar", e);
}
const Dd = Ot("MuiDateTimePickerToolbar", ["root", "dateContainer", "timeContainer", "timeDigitsContainer", "separator", "timeLabelReverse", "ampmSelection", "ampmLandscape", "ampmLabel"]), U4 = ["ampm", "ampmInClock", "value", "onChange", "view", "isLandscape", "onViewChange", "toolbarFormat", "toolbarPlaceholder", "views", "disabled", "readOnly", "toolbarVariant", "toolbarTitle", "className"], X4 = (e) => {
  const {
    classes: t,
    isLandscape: n,
    isRtl: o
  } = e;
  return xt({
    root: ["root"],
    dateContainer: ["dateContainer"],
    timeContainer: ["timeContainer", o && "timeLabelReverse"],
    timeDigitsContainer: ["timeDigitsContainer", o && "timeLabelReverse"],
    separator: ["separator"],
    ampmSelection: ["ampmSelection", n && "ampmLandscape"],
    ampmLabel: ["ampmLabel"]
  }, G4, t);
}, Y4 = Q(lm, {
  name: "MuiDateTimePickerToolbar",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})(({
  theme: e
}) => ({
  paddingLeft: 16,
  paddingRight: 16,
  justifyContent: "space-around",
  position: "relative",
  variants: [{
    props: {
      toolbarVariant: "desktop"
    },
    style: {
      borderBottom: `1px solid ${(e.vars || e).palette.divider}`,
      [`& .${n_.content} .${Lp.selected}`]: {
        color: (e.vars || e).palette.primary.main,
        fontWeight: e.typography.fontWeightBold
      }
    }
  }, {
    props: {
      toolbarVariant: "desktop",
      isLandscape: !0
    },
    style: {
      borderRight: `1px solid ${(e.vars || e).palette.divider}`
    }
  }, {
    props: {
      toolbarVariant: "desktop",
      isLandscape: !1
    },
    style: {
      paddingLeft: 24,
      paddingRight: 0
    }
  }]
})), Z4 = Q("div", {
  name: "MuiDateTimePickerToolbar",
  slot: "DateContainer",
  overridesResolver: (e, t) => t.dateContainer
})({
  display: "flex",
  flexDirection: "column",
  alignItems: "flex-start"
}), q4 = Q("div", {
  name: "MuiDateTimePickerToolbar",
  slot: "TimeContainer",
  overridesResolver: (e, t) => t.timeContainer
})({
  display: "flex",
  flexDirection: "row",
  variants: [{
    props: {
      isRtl: !0
    },
    style: {
      flexDirection: "row-reverse"
    }
  }, {
    props: {
      toolbarVariant: "desktop",
      isLandscape: !1
    },
    style: {
      gap: 9,
      marginRight: 4,
      alignSelf: "flex-end"
    }
  }, {
    props: ({
      isLandscape: e,
      toolbarVariant: t
    }) => e && t !== "desktop",
    style: {
      flexDirection: "column"
    }
  }, {
    props: ({
      isLandscape: e,
      toolbarVariant: t,
      isRtl: n
    }) => e && t !== "desktop" && n,
    style: {
      flexDirection: "column-reverse"
    }
  }]
}), J4 = Q("div", {
  name: "MuiDateTimePickerToolbar",
  slot: "TimeDigitsContainer",
  overridesResolver: (e, t) => t.timeDigitsContainer
})({
  display: "flex",
  variants: [{
    props: {
      isRtl: !0
    },
    style: {
      flexDirection: "row-reverse"
    }
  }, {
    props: {
      toolbarVariant: "desktop"
    },
    style: {
      gap: 1.5
    }
  }]
}), Zb = Q(Rm, {
  name: "MuiDateTimePickerToolbar",
  slot: "Separator",
  overridesResolver: (e, t) => t.separator
})({
  margin: "0 4px 0 2px",
  cursor: "default",
  variants: [{
    props: {
      toolbarVariant: "desktop"
    },
    style: {
      margin: 0
    }
  }]
}), K4 = Q("div", {
  name: "MuiDateTimePickerToolbar",
  slot: "AmPmSelection",
  overridesResolver: (e, t) => [{
    [`.${Dd.ampmLabel}`]: t.ampmLabel
  }, {
    [`&.${Dd.ampmLandscape}`]: t.ampmLandscape
  }, t.ampmSelection]
})({
  display: "flex",
  flexDirection: "column",
  marginRight: "auto",
  marginLeft: 12,
  [`& .${Dd.ampmLabel}`]: {
    fontSize: 17
  },
  variants: [{
    props: {
      isLandscape: !0
    },
    style: {
      margin: "4px 0 auto",
      flexDirection: "row",
      justifyContent: "space-around",
      width: "100%"
    }
  }]
});
function PC(e) {
  const t = at({
    props: e,
    name: "MuiDateTimePickerToolbar"
  }), {
    ampm: n,
    ampmInClock: o,
    value: i,
    onChange: s,
    view: a,
    isLandscape: l,
    onViewChange: c,
    toolbarFormat: u,
    toolbarPlaceholder: d = "––",
    views: p,
    disabled: m,
    readOnly: g,
    toolbarVariant: h = "mobile",
    toolbarTitle: v,
    className: b
  } = t, y = Xe(t, U4), C = ao(), x = V({}, t, {
    isRtl: C
  }), T = gt(), {
    meridiemMode: w,
    handleMeridiemChange: R
  } = Nu(i, n, s), E = !!(n && !o), O = h === "desktop", I = pn(), P = X4(x), A = v ?? I.dateTimePickerToolbarTitle, D = (M) => n ? T.format(M, "hours12h") : T.format(M, "hours24h"), k = S.useMemo(() => i ? u ? T.formatByString(i, u) : T.format(i, "shortDate") : d, [i, u, d, T]);
  return /* @__PURE__ */ f.jsxs(Y4, V({
    isLandscape: l,
    className: fe(P.root, b),
    toolbarTitle: A
  }, y, {
    ownerState: x,
    children: [/* @__PURE__ */ f.jsxs(Z4, {
      className: P.dateContainer,
      ownerState: x,
      children: [p.includes("year") && /* @__PURE__ */ f.jsx(Un, {
        tabIndex: -1,
        variant: "subtitle1",
        onClick: () => c("year"),
        selected: a === "year",
        value: i ? T.format(i, "year") : "–"
      }), p.includes("day") && /* @__PURE__ */ f.jsx(Un, {
        tabIndex: -1,
        variant: O ? "h5" : "h4",
        onClick: () => c("day"),
        selected: a === "day",
        value: k
      })]
    }), /* @__PURE__ */ f.jsxs(q4, {
      className: P.timeContainer,
      ownerState: x,
      children: [/* @__PURE__ */ f.jsxs(J4, {
        className: P.timeDigitsContainer,
        ownerState: x,
        children: [p.includes("hours") && /* @__PURE__ */ f.jsxs(S.Fragment, {
          children: [/* @__PURE__ */ f.jsx(Un, {
            variant: O ? "h5" : "h3",
            width: O && !l ? Bs : void 0,
            onClick: () => c("hours"),
            selected: a === "hours",
            value: i ? D(i) : "--"
          }), /* @__PURE__ */ f.jsx(Zb, {
            variant: O ? "h5" : "h3",
            value: ":",
            className: P.separator,
            ownerState: x
          }), /* @__PURE__ */ f.jsx(Un, {
            variant: O ? "h5" : "h3",
            width: O && !l ? Bs : void 0,
            onClick: () => c("minutes"),
            selected: a === "minutes" || !p.includes("minutes") && a === "hours",
            value: i ? T.format(i, "minutes") : "--",
            disabled: !p.includes("minutes")
          })]
        }), p.includes("seconds") && /* @__PURE__ */ f.jsxs(S.Fragment, {
          children: [/* @__PURE__ */ f.jsx(Zb, {
            variant: O ? "h5" : "h3",
            value: ":",
            className: P.separator,
            ownerState: x
          }), /* @__PURE__ */ f.jsx(Un, {
            variant: O ? "h5" : "h3",
            width: O && !l ? Bs : void 0,
            onClick: () => c("seconds"),
            selected: a === "seconds",
            value: i ? T.format(i, "seconds") : "--"
          })]
        })]
      }), E && !O && /* @__PURE__ */ f.jsxs(K4, {
        className: P.ampmSelection,
        ownerState: x,
        children: [/* @__PURE__ */ f.jsx(Un, {
          variant: "subtitle2",
          selected: w === "am",
          typographyClassName: P.ampmLabel,
          value: Eo(T, "am"),
          onClick: g ? void 0 : () => R("am"),
          disabled: m
        }), /* @__PURE__ */ f.jsx(Un, {
          variant: "subtitle2",
          selected: w === "pm",
          typographyClassName: P.ampmLabel,
          value: Eo(T, "pm"),
          onClick: g ? void 0 : () => R("pm"),
          disabled: m
        })]
      }), n && O && /* @__PURE__ */ f.jsx(Un, {
        variant: "h5",
        onClick: () => c("meridiem"),
        selected: a === "meridiem",
        value: i && w ? Eo(T, w) : "--",
        width: Bs
      })]
    })]
  }));
}
process.env.NODE_ENV !== "production" && (PC.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  ampm: r.bool,
  ampmInClock: r.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  className: r.string,
  disabled: r.bool,
  /**
   * If `true`, show the toolbar even in desktop mode.
   * @default `true` for Desktop, `false` for Mobile.
   */
  hidden: r.bool,
  isLandscape: r.bool.isRequired,
  onChange: r.func.isRequired,
  /**
   * Callback called when a toolbar is clicked
   * @template TView
   * @param {TView} view The view to open
   */
  onViewChange: r.func.isRequired,
  readOnly: r.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  titleId: r.string,
  /**
   * Toolbar date format.
   */
  toolbarFormat: r.string,
  /**
   * Toolbar value placeholder—it is displayed when the value is empty.
   * @default "––"
   */
  toolbarPlaceholder: r.node,
  /**
   * If provided, it will be used instead of `dateTimePickerToolbarTitle` from localization.
   */
  toolbarTitle: r.node,
  toolbarVariant: r.oneOf(["desktop", "mobile"]),
  value: r.object,
  /**
   * Currently visible picker view.
   */
  view: r.oneOf(["day", "hours", "meridiem", "minutes", "month", "seconds", "year"]),
  /**
   * Available views.
   */
  views: r.arrayOf(r.oneOf(["day", "hours", "meridiem", "minutes", "month", "seconds", "year"]).isRequired).isRequired
});
function AC(e, t) {
  var l;
  const n = gt(), o = gi(), i = at({
    props: e,
    name: t
  }), s = i.ampm ?? n.is12HourCycleInCurrentLocale(), a = S.useMemo(() => {
    var c;
    return ((c = i.localeText) == null ? void 0 : c.toolbarTitle) == null ? i.localeText : V({}, i.localeText, {
      dateTimePickerToolbarTitle: i.localeText.toolbarTitle
    });
  }, [i.localeText]);
  return V({}, i, em({
    views: i.views,
    openTo: i.openTo,
    defaultViews: ["year", "day", "hours", "minutes"],
    defaultOpenTo: "day"
  }), {
    ampm: s,
    localeText: a,
    orientation: i.orientation ?? "portrait",
    // TODO: Remove from public API
    disableIgnoringDatePartForTimeValidation: i.disableIgnoringDatePartForTimeValidation ?? !!(i.minDateTime || i.maxDateTime || // allow time clock to correctly check time validity: https://github.com/mui/mui-x/issues/8520
    i.disablePast || i.disableFuture),
    disableFuture: i.disableFuture ?? !1,
    disablePast: i.disablePast ?? !1,
    minDate: Dn(n, i.minDateTime ?? i.minDate, o.minDate),
    maxDate: Dn(n, i.maxDateTime ?? i.maxDate, o.maxDate),
    minTime: i.minDateTime ?? i.minTime,
    maxTime: i.maxDateTime ?? i.maxTime,
    slots: V({
      toolbar: PC,
      tabs: EC
    }, i.slots),
    slotProps: V({}, i.slotProps, {
      toolbar: V({
        ampm: s
      }, (l = i.slotProps) == null ? void 0 : l.toolbar)
    })
  });
}
const Q4 = ["views", "format"], DC = (e, t, n) => {
  let {
    views: o,
    format: i
  } = t, s = Xe(t, Q4);
  if (i)
    return i;
  const a = [], l = [];
  if (o.forEach((d) => {
    Qi(d) ? l.push(d) : Ki(d) && a.push(d);
  }), l.length === 0)
    return wa(e, V({
      views: a
    }, s), !1);
  if (a.length === 0)
    return pc(e, V({
      views: l
    }, s));
  const c = pc(e, V({
    views: l
  }, s));
  return `${wa(e, V({
    views: a
  }, s), !1)} ${c}`;
}, eW = (e, t, n) => n ? t.filter((o) => !_s(o) || o === "hours") : e ? [...t, "meridiem"] : t, tW = (e, t) => 24 * 60 / ((e.hours ?? 1) * (e.minutes ?? 5)) <= t;
function MC({
  thresholdToRenderTimeInASingleColumn: e,
  ampm: t,
  timeSteps: n,
  views: o
}) {
  const i = e ?? 24, s = V({
    hours: 1,
    minutes: 5,
    seconds: 5
  }, n), a = tW(s, i);
  return {
    thresholdToRenderTimeInASingleColumn: i,
    timeSteps: s,
    shouldRenderTimeInASingleColumn: a,
    views: eW(t, o, a)
  };
}
function nW(e) {
  return It("MuiTimeClock", e);
}
Ot("MuiTimeClock", ["root", "arrowSwitcher"]);
const es = 220, lr = 36, Ra = {
  x: es / 2,
  y: es / 2
}, jC = {
  x: Ra.x,
  y: 0
}, oW = jC.x - Ra.x, rW = jC.y - Ra.y, iW = (e) => e * (180 / Math.PI), kC = (e, t, n) => {
  const o = t - Ra.x, i = n - Ra.y, s = Math.atan2(oW, rW) - Math.atan2(o, i);
  let a = iW(s);
  a = Math.round(a / e) * e, a %= 360;
  const l = Math.floor(a / e) || 0, c = o ** 2 + i ** 2, u = Math.sqrt(c);
  return {
    value: l,
    distance: u
  };
}, sW = (e, t, n = 1) => {
  const o = n * 6;
  let {
    value: i
  } = kC(o, e, t);
  return i = i * n % 60, i;
}, aW = (e, t, n) => {
  const {
    value: o,
    distance: i
  } = kC(30, e, t);
  let s = o || 12;
  return n ? s %= 12 : i < es / 2 - lr && (s += 12, s %= 24), s;
};
function lW(e) {
  return It("MuiClockPointer", e);
}
Ot("MuiClockPointer", ["root", "thumb"]);
const cW = ["className", "hasSelected", "isInner", "type", "viewValue"], uW = (e) => {
  const {
    classes: t
  } = e;
  return xt({
    root: ["root"],
    thumb: ["thumb"]
  }, lW, t);
}, dW = Q("div", {
  name: "MuiClockPointer",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})(({
  theme: e
}) => ({
  width: 2,
  backgroundColor: (e.vars || e).palette.primary.main,
  position: "absolute",
  left: "calc(50% - 1px)",
  bottom: "50%",
  transformOrigin: "center bottom 0px",
  variants: [{
    props: {
      shouldAnimate: !0
    },
    style: {
      transition: e.transitions.create(["transform", "height"])
    }
  }]
})), pW = Q("div", {
  name: "MuiClockPointer",
  slot: "Thumb",
  overridesResolver: (e, t) => t.thumb
})(({
  theme: e
}) => ({
  width: 4,
  height: 4,
  backgroundColor: (e.vars || e).palette.primary.contrastText,
  borderRadius: "50%",
  position: "absolute",
  top: -21,
  left: `calc(50% - ${lr / 2}px)`,
  border: `${(lr - 4) / 2}px solid ${(e.vars || e).palette.primary.main}`,
  boxSizing: "content-box",
  variants: [{
    props: {
      hasSelected: !0
    },
    style: {
      backgroundColor: (e.vars || e).palette.primary.main
    }
  }]
}));
function fW(e) {
  const t = at({
    props: e,
    name: "MuiClockPointer"
  }), {
    className: n,
    isInner: o,
    type: i,
    viewValue: s
  } = t, a = Xe(t, cW), l = S.useRef(i);
  S.useEffect(() => {
    l.current = i;
  }, [i]);
  const c = V({}, t, {
    shouldAnimate: l.current !== i
  }), u = uW(c), d = () => {
    let m = 360 / (i === "hours" ? 12 : 60) * s;
    return i === "hours" && s > 12 && (m -= 360), {
      height: Math.round((o ? 0.26 : 0.4) * es),
      transform: `rotateZ(${m}deg)`
    };
  };
  return /* @__PURE__ */ f.jsx(dW, V({
    style: d(),
    className: fe(n, u.root),
    ownerState: c
  }, a, {
    children: /* @__PURE__ */ f.jsx(pW, {
      ownerState: c,
      className: u.thumb
    })
  }));
}
function mW(e) {
  return It("MuiClock", e);
}
Ot("MuiClock", ["root", "clock", "wrapper", "squareMask", "pin", "amButton", "pmButton", "meridiemText", "selected"]);
const gW = (e) => {
  const {
    classes: t,
    meridiemMode: n
  } = e;
  return xt({
    root: ["root"],
    clock: ["clock"],
    wrapper: ["wrapper"],
    squareMask: ["squareMask"],
    pin: ["pin"],
    amButton: ["amButton", n === "am" && "selected"],
    pmButton: ["pmButton", n === "pm" && "selected"],
    meridiemText: ["meridiemText"]
  }, mW, t);
}, hW = Q("div", {
  name: "MuiClock",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})(({
  theme: e
}) => ({
  display: "flex",
  justifyContent: "center",
  alignItems: "center",
  margin: e.spacing(2)
})), bW = Q("div", {
  name: "MuiClock",
  slot: "Clock",
  overridesResolver: (e, t) => t.clock
})({
  backgroundColor: "rgba(0,0,0,.07)",
  borderRadius: "50%",
  height: 220,
  width: 220,
  flexShrink: 0,
  position: "relative",
  pointerEvents: "none"
}), vW = Q("div", {
  name: "MuiClock",
  slot: "Wrapper",
  overridesResolver: (e, t) => t.wrapper
})({
  "&:focus": {
    outline: "none"
  }
}), yW = Q("div", {
  name: "MuiClock",
  slot: "SquareMask",
  overridesResolver: (e, t) => t.squareMask
})({
  width: "100%",
  height: "100%",
  position: "absolute",
  pointerEvents: "auto",
  outline: 0,
  // Disable scroll capabilities.
  touchAction: "none",
  userSelect: "none",
  variants: [{
    props: {
      disabled: !1
    },
    style: {
      "@media (pointer: fine)": {
        cursor: "pointer",
        borderRadius: "50%"
      },
      "&:active": {
        cursor: "move"
      }
    }
  }]
}), xW = Q("div", {
  name: "MuiClock",
  slot: "Pin",
  overridesResolver: (e, t) => t.pin
})(({
  theme: e
}) => ({
  width: 6,
  height: 6,
  borderRadius: "50%",
  backgroundColor: (e.vars || e).palette.primary.main,
  position: "absolute",
  top: "50%",
  left: "50%",
  transform: "translate(-50%, -50%)"
})), FC = (e, t) => ({
  zIndex: 1,
  bottom: 8,
  paddingLeft: 4,
  paddingRight: 4,
  width: lr,
  variants: [{
    props: {
      meridiemMode: t
    },
    style: {
      backgroundColor: (e.vars || e).palette.primary.main,
      color: (e.vars || e).palette.primary.contrastText,
      "&:hover": {
        backgroundColor: (e.vars || e).palette.primary.light
      }
    }
  }]
}), CW = Q(lt, {
  name: "MuiClock",
  slot: "AmButton",
  overridesResolver: (e, t) => t.amButton
})(({
  theme: e
}) => V({}, FC(e, "am"), {
  // keeping it here to make TS happy
  position: "absolute",
  left: 8
})), SW = Q(lt, {
  name: "MuiClock",
  slot: "PmButton",
  overridesResolver: (e, t) => t.pmButton
})(({
  theme: e
}) => V({}, FC(e, "pm"), {
  // keeping it here to make TS happy
  position: "absolute",
  right: 8
})), qb = Q(Fe, {
  name: "MuiClock",
  slot: "meridiemText",
  overridesResolver: (e, t) => t.meridiemText
})({
  overflow: "hidden",
  whiteSpace: "nowrap",
  textOverflow: "ellipsis"
});
function wW(e) {
  const t = at({
    props: e,
    name: "MuiClock"
  }), {
    ampm: n,
    ampmInClock: o,
    autoFocus: i,
    children: s,
    value: a,
    handleMeridiemChange: l,
    isTimeDisabled: c,
    meridiemMode: u,
    minutesStep: d = 1,
    onChange: p,
    selectedId: m,
    type: g,
    viewValue: h,
    disabled: v = !1,
    readOnly: b,
    className: y
  } = t, C = t, x = gt(), T = pn(), w = S.useRef(!1), R = gW(C), E = c(h, g), O = !n && g === "hours" && (h < 1 || h > 12), I = (B, j) => {
    v || b || c(B, g) || p(B, j);
  }, P = (B, j) => {
    let {
      offsetX: L,
      offsetY: ee
    } = B;
    if (L === void 0) {
      const $ = B.target.getBoundingClientRect();
      L = B.changedTouches[0].clientX - $.left, ee = B.changedTouches[0].clientY - $.top;
    }
    const Y = g === "seconds" || g === "minutes" ? sW(L, ee, d) : aW(L, ee, !!n);
    I(Y, j);
  }, A = (B) => {
    w.current = !0, P(B, "shallow");
  }, D = (B) => {
    w.current && (P(B, "finish"), w.current = !1);
  }, k = (B) => {
    B.buttons > 0 && P(B.nativeEvent, "shallow");
  }, M = (B) => {
    w.current && (w.current = !1), P(B.nativeEvent, "finish");
  }, F = S.useMemo(() => g === "hours" ? !0 : h % 5 === 0, [g, h]), N = g === "minutes" ? d : 1, W = S.useRef(null);
  qo(() => {
    i && W.current.focus();
  }, [i]);
  const H = (B) => {
    if (!w.current)
      switch (B.key) {
        case "Home":
          I(0, "partial"), B.preventDefault();
          break;
        case "End":
          I(g === "minutes" ? 59 : 23, "partial"), B.preventDefault();
          break;
        case "ArrowUp":
          I(h + N, "partial"), B.preventDefault();
          break;
        case "ArrowDown":
          I(h - N, "partial"), B.preventDefault();
          break;
        case "Enter":
        case " ":
          I(h, "finish"), B.preventDefault();
          break;
      }
  };
  return /* @__PURE__ */ f.jsxs(hW, {
    className: fe(y, R.root),
    children: [/* @__PURE__ */ f.jsxs(bW, {
      className: R.clock,
      children: [/* @__PURE__ */ f.jsx(yW, {
        onTouchMove: A,
        onTouchStart: A,
        onTouchEnd: D,
        onMouseUp: M,
        onMouseMove: k,
        ownerState: {
          disabled: v
        },
        className: R.squareMask
      }), !E && /* @__PURE__ */ f.jsxs(S.Fragment, {
        children: [/* @__PURE__ */ f.jsx(xW, {
          className: R.pin
        }), a != null && /* @__PURE__ */ f.jsx(fW, {
          type: g,
          viewValue: h,
          isInner: O,
          hasSelected: F
        })]
      }), /* @__PURE__ */ f.jsx(vW, {
        "aria-activedescendant": m,
        "aria-label": T.clockLabelText(g, a, x, a == null ? null : x.format(a, "fullTime")),
        ref: W,
        role: "listbox",
        onKeyDown: H,
        tabIndex: 0,
        className: R.wrapper,
        children: s
      })]
    }), n && o && /* @__PURE__ */ f.jsxs(S.Fragment, {
      children: [/* @__PURE__ */ f.jsx(CW, {
        onClick: b ? void 0 : () => l("am"),
        disabled: v || u === null,
        ownerState: C,
        className: R.amButton,
        title: Eo(x, "am"),
        children: /* @__PURE__ */ f.jsx(qb, {
          variant: "caption",
          className: R.meridiemText,
          children: Eo(x, "am")
        })
      }), /* @__PURE__ */ f.jsx(SW, {
        disabled: v || u === null,
        onClick: b ? void 0 : () => l("pm"),
        ownerState: C,
        className: R.pmButton,
        title: Eo(x, "pm"),
        children: /* @__PURE__ */ f.jsx(qb, {
          variant: "caption",
          className: R.meridiemText,
          children: Eo(x, "pm")
        })
      })]
    })]
  });
}
function TW(e) {
  return It("MuiClockNumber", e);
}
const wl = Ot("MuiClockNumber", ["root", "selected", "disabled"]), IW = ["className", "disabled", "index", "inner", "label", "selected"], RW = (e) => {
  const {
    classes: t,
    selected: n,
    disabled: o
  } = e;
  return xt({
    root: ["root", n && "selected", o && "disabled"]
  }, TW, t);
}, OW = Q("span", {
  name: "MuiClockNumber",
  slot: "Root",
  overridesResolver: (e, t) => [t.root, {
    [`&.${wl.disabled}`]: t.disabled
  }, {
    [`&.${wl.selected}`]: t.selected
  }]
})(({
  theme: e
}) => ({
  height: lr,
  width: lr,
  position: "absolute",
  left: `calc((100% - ${lr}px) / 2)`,
  display: "inline-flex",
  justifyContent: "center",
  alignItems: "center",
  borderRadius: "50%",
  color: (e.vars || e).palette.text.primary,
  fontFamily: e.typography.fontFamily,
  "&:focused": {
    backgroundColor: (e.vars || e).palette.background.paper
  },
  [`&.${wl.selected}`]: {
    color: (e.vars || e).palette.primary.contrastText
  },
  [`&.${wl.disabled}`]: {
    pointerEvents: "none",
    color: (e.vars || e).palette.text.disabled
  },
  variants: [{
    props: {
      inner: !0
    },
    style: V({}, e.typography.body2, {
      color: (e.vars || e).palette.text.secondary
    })
  }]
}));
function NC(e) {
  const t = at({
    props: e,
    name: "MuiClockNumber"
  }), {
    className: n,
    disabled: o,
    index: i,
    inner: s,
    label: a,
    selected: l
  } = t, c = Xe(t, IW), u = t, d = RW(u), p = i % 12 / 12 * Math.PI * 2 - Math.PI / 2, m = (es - lr - 2) / 2 * (s ? 0.65 : 1), g = Math.round(Math.cos(p) * m), h = Math.round(Math.sin(p) * m);
  return /* @__PURE__ */ f.jsx(OW, V({
    className: fe(n, d.root),
    "aria-disabled": o ? !0 : void 0,
    "aria-selected": l ? !0 : void 0,
    role: "option",
    style: {
      transform: `translate(${g}px, ${h + (es - lr) / 2}px`
    },
    ownerState: u
  }, c, {
    children: a
  }));
}
const EW = ({
  ampm: e,
  value: t,
  getClockNumberText: n,
  isDisabled: o,
  selectedId: i,
  utils: s
}) => {
  const a = t ? s.getHours(t) : null, l = [], c = e ? 1 : 0, u = e ? 12 : 23, d = (p) => a === null ? !1 : e ? p === 12 ? a === 12 || a === 0 : a === p || a - 12 === p : a === p;
  for (let p = c; p <= u; p += 1) {
    let m = p.toString();
    p === 0 && (m = "00");
    const g = !e && (p === 0 || p > 12);
    m = s.formatNumber(m);
    const h = d(p);
    l.push(/* @__PURE__ */ f.jsx(NC, {
      id: h ? i : void 0,
      index: p,
      inner: g,
      selected: h,
      disabled: o(p),
      label: m,
      "aria-label": n(m)
    }, p));
  }
  return l;
}, Jb = ({
  utils: e,
  value: t,
  isDisabled: n,
  getClockNumberText: o,
  selectedId: i
}) => {
  const s = e.formatNumber;
  return [[5, s("05")], [10, s("10")], [15, s("15")], [20, s("20")], [25, s("25")], [30, s("30")], [35, s("35")], [40, s("40")], [45, s("45")], [50, s("50")], [55, s("55")], [0, s("00")]].map(([a, l], c) => {
    const u = a === t;
    return /* @__PURE__ */ f.jsx(NC, {
      label: l,
      id: u ? i : void 0,
      index: c + 1,
      inner: !1,
      disabled: n(a),
      selected: u,
      "aria-label": o(l)
    }, a);
  });
}, Om = ({
  value: e,
  referenceDate: t,
  utils: n,
  props: o,
  timezone: i
}) => {
  const s = S.useMemo(
    () => rn.getInitialReferenceValue({
      value: e,
      utils: n,
      props: o,
      referenceDate: t,
      granularity: Oo.day,
      timezone: i,
      getTodayDate: () => nm(n, i, "date")
    }),
    // We only want to compute the reference date on mount.
    []
    // eslint-disable-line react-hooks/exhaustive-deps
  );
  return e ?? s;
}, PW = ["ampm", "ampmInClock", "autoFocus", "slots", "slotProps", "value", "defaultValue", "referenceDate", "disableIgnoringDatePartForTimeValidation", "maxTime", "minTime", "disableFuture", "disablePast", "minutesStep", "shouldDisableTime", "showViewSwitcher", "onChange", "view", "views", "openTo", "onViewChange", "focusedView", "onFocusedViewChange", "className", "disabled", "readOnly", "timezone"], AW = (e) => {
  const {
    classes: t
  } = e;
  return xt({
    root: ["root"],
    arrowSwitcher: ["arrowSwitcher"]
  }, nW, t);
}, DW = Q(Vu, {
  name: "MuiTimeClock",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  display: "flex",
  flexDirection: "column",
  position: "relative"
}), MW = Q(SC, {
  name: "MuiTimeClock",
  slot: "ArrowSwitcher",
  overridesResolver: (e, t) => t.arrowSwitcher
})({
  position: "absolute",
  right: 12,
  top: 15
}), jW = ["hours", "minutes"], VC = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = gt(), i = at({
    props: t,
    name: "MuiTimeClock"
  }), {
    ampm: s = o.is12HourCycleInCurrentLocale(),
    ampmInClock: a = !1,
    autoFocus: l,
    slots: c,
    slotProps: u,
    value: d,
    defaultValue: p,
    referenceDate: m,
    disableIgnoringDatePartForTimeValidation: g = !1,
    maxTime: h,
    minTime: v,
    disableFuture: b,
    disablePast: y,
    minutesStep: C = 1,
    shouldDisableTime: x,
    showViewSwitcher: T,
    onChange: w,
    view: R,
    views: E = jW,
    openTo: O,
    onViewChange: I,
    focusedView: P,
    onFocusedViewChange: A,
    className: D,
    disabled: k,
    readOnly: M,
    timezone: F
  } = i, N = Xe(i, PW), {
    value: W,
    handleValueChange: H,
    timezone: B
  } = hs({
    name: "TimeClock",
    timezone: F,
    value: d,
    defaultValue: p,
    onChange: w,
    valueManager: rn
  }), j = Om({
    value: W,
    referenceDate: m,
    utils: o,
    props: i,
    timezone: B
  }), L = pn(), ee = hi(B), {
    view: Y,
    setView: $,
    previousView: U,
    nextView: X,
    setValueAndGoToNextView: Z
  } = Ya({
    view: R,
    views: E,
    openTo: O,
    onViewChange: I,
    onChange: H,
    focusedView: P,
    onFocusedViewChange: A
  }), {
    meridiemMode: G,
    handleMeridiemChange: K
  } = Nu(j, s, Z), re = S.useCallback((oe, te) => {
    const se = Ua(g, o), ae = te === "hours" || te === "minutes" && E.includes("seconds"), me = ({
      start: Te,
      end: Ve
    }) => !(v && se(v, Ve) || h && se(Te, h) || b && se(Te, ee) || y && se(ee, ae ? Ve : Te)), ye = (Te, Ve = 1) => {
      if (Te % Ve !== 0)
        return !1;
      if (x)
        switch (te) {
          case "hours":
            return !x(o.setHours(j, Te), "hours");
          case "minutes":
            return !x(o.setMinutes(j, Te), "minutes");
          case "seconds":
            return !x(o.setSeconds(j, Te), "seconds");
          default:
            return !1;
        }
      return !0;
    };
    switch (te) {
      case "hours": {
        const Te = Ta(oe, G, s), Ve = o.setHours(j, Te), ie = o.setSeconds(o.setMinutes(Ve, 0), 0), be = o.setSeconds(o.setMinutes(Ve, 59), 59);
        return !me({
          start: ie,
          end: be
        }) || !ye(Te);
      }
      case "minutes": {
        const Te = o.setMinutes(j, oe), Ve = o.setSeconds(Te, 0), ie = o.setSeconds(Te, 59);
        return !me({
          start: Ve,
          end: ie
        }) || !ye(oe, C);
      }
      case "seconds": {
        const Te = o.setSeconds(j, oe);
        return !me({
          start: Te,
          end: Te
        }) || !ye(oe);
      }
      default:
        throw new Error("not supported");
    }
  }, [s, j, g, h, G, v, C, x, o, b, y, ee, E]), ne = ps(), z = S.useMemo(() => {
    switch (Y) {
      case "hours": {
        const oe = (te, se) => {
          const ae = Ta(te, G, s);
          Z(o.setHours(j, ae), se, "hours");
        };
        return {
          onChange: oe,
          viewValue: o.getHours(j),
          children: EW({
            value: W,
            utils: o,
            ampm: s,
            onChange: oe,
            getClockNumberText: L.hoursClockNumberText,
            isDisabled: (te) => k || re(te, "hours"),
            selectedId: ne
          })
        };
      }
      case "minutes": {
        const oe = o.getMinutes(j), te = (se, ae) => {
          Z(o.setMinutes(j, se), ae, "minutes");
        };
        return {
          viewValue: oe,
          onChange: te,
          children: Jb({
            utils: o,
            value: oe,
            onChange: te,
            getClockNumberText: L.minutesClockNumberText,
            isDisabled: (se) => k || re(se, "minutes"),
            selectedId: ne
          })
        };
      }
      case "seconds": {
        const oe = o.getSeconds(j), te = (se, ae) => {
          Z(o.setSeconds(j, se), ae, "seconds");
        };
        return {
          viewValue: oe,
          onChange: te,
          children: Jb({
            utils: o,
            value: oe,
            onChange: te,
            getClockNumberText: L.secondsClockNumberText,
            isDisabled: (se) => k || re(se, "seconds"),
            selectedId: ne
          })
        };
      }
      default:
        throw new Error("You must provide the type for ClockView");
    }
  }, [Y, o, W, s, L.hoursClockNumberText, L.minutesClockNumberText, L.secondsClockNumberText, G, Z, j, re, ne, k]), q = i, _ = AW(q);
  return /* @__PURE__ */ f.jsxs(DW, V({
    ref: n,
    className: fe(_.root, D),
    ownerState: q
  }, N, {
    children: [/* @__PURE__ */ f.jsx(wW, V({
      autoFocus: l ?? !!P,
      ampmInClock: a && E.includes("hours"),
      value: W,
      type: Y,
      ampm: s,
      minutesStep: C,
      isTimeDisabled: re,
      meridiemMode: G,
      handleMeridiemChange: K,
      selectedId: ne,
      disabled: k,
      readOnly: M
    }, z)), T && /* @__PURE__ */ f.jsx(MW, {
      className: _.arrowSwitcher,
      slots: c,
      slotProps: u,
      onGoToPrevious: () => $(U),
      isPreviousDisabled: !U,
      previousLabel: L.openPreviousView,
      onGoToNext: () => $(X),
      isNextDisabled: !X,
      nextLabel: L.openNextView,
      ownerState: q
    })]
  }));
});
process.env.NODE_ENV !== "production" && (VC.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default utils.is12HourCycleInCurrentLocale()
   */
  ampm: r.bool,
  /**
   * Display ampm controls under the clock (instead of in the toolbar).
   * @default false
   */
  ampmInClock: r.bool,
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: r.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  className: r.string,
  /**
   * The default selected value.
   * Used when the component is not controlled.
   */
  defaultValue: r.object,
  /**
   * If `true`, the picker views and text field are disabled.
   * @default false
   */
  disabled: r.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: r.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: r.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: r.bool,
  /**
   * Controlled focused view.
   */
  focusedView: r.oneOf(["hours", "minutes", "seconds"]),
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: r.object,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: r.object,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: r.number,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TView The view type. Will be one of date or time views.
   * @param {TValue} value The new value.
   * @param {PickerSelectionState | undefined} selectionState Indicates if the date selection is complete.
   * @param {TView | undefined} selectedView Indicates the view in which the selection has been made.
   */
  onChange: r.func,
  /**
   * Callback fired on focused view change.
   * @template TView
   * @param {TView} view The new view to focus or not.
   * @param {boolean} hasFocus `true` if the view should be focused.
   */
  onFocusedViewChange: r.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: r.func,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: r.oneOf(["hours", "minutes", "seconds"]),
  /**
   * If `true`, the picker views and text field are read-only.
   * @default false
   */
  readOnly: r.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid time using the validation props, except callbacks such as `shouldDisableTime`.
   */
  referenceDate: r.object,
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: r.func,
  showViewSwitcher: r.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: r.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: r.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: r.object,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: r.oneOf(["hours", "minutes", "seconds"]),
  /**
   * Available views.
   * @default ['hours', 'minutes']
   */
  views: r.arrayOf(r.oneOf(["hours", "minutes", "seconds"]).isRequired)
});
function kW(e) {
  return It("MuiDigitalClock", e);
}
const FW = Ot("MuiDigitalClock", ["root", "list", "item"]), NW = ["ampm", "timeStep", "autoFocus", "slots", "slotProps", "value", "defaultValue", "referenceDate", "disableIgnoringDatePartForTimeValidation", "maxTime", "minTime", "disableFuture", "disablePast", "minutesStep", "shouldDisableTime", "onChange", "view", "openTo", "onViewChange", "focusedView", "onFocusedViewChange", "className", "disabled", "readOnly", "views", "skipDisabled", "timezone"], VW = (e) => {
  const {
    classes: t
  } = e;
  return xt({
    root: ["root"],
    list: ["list"],
    item: ["item"]
  }, kW, t);
}, $W = Q(Vu, {
  name: "MuiDigitalClock",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({
  overflowY: "auto",
  width: "100%",
  "@media (prefers-reduced-motion: no-preference)": {
    scrollBehavior: "auto"
  },
  maxHeight: qx,
  variants: [{
    props: {
      alreadyRendered: !0
    },
    style: {
      "@media (prefers-reduced-motion: no-preference)": {
        scrollBehavior: "smooth"
      }
    }
  }]
}), LW = Q(lu, {
  name: "MuiDigitalClock",
  slot: "List",
  overridesResolver: (e, t) => t.list
})({
  padding: 0
}), _W = Q(Mo, {
  name: "MuiDigitalClock",
  slot: "Item",
  overridesResolver: (e, t) => t.item
})(({
  theme: e
}) => ({
  padding: "8px 16px",
  margin: "2px 4px",
  "&:first-of-type": {
    marginTop: 4
  },
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.hoverOpacity})` : ze(e.palette.primary.main, e.palette.action.hoverOpacity)
  },
  "&.Mui-selected": {
    backgroundColor: (e.vars || e).palette.primary.main,
    color: (e.vars || e).palette.primary.contrastText,
    "&:focus-visible, &:hover": {
      backgroundColor: (e.vars || e).palette.primary.dark
    }
  },
  "&.Mui-focusVisible": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.focusOpacity})` : ze(e.palette.primary.main, e.palette.action.focusOpacity)
  }
})), $C = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = gt(), i = S.useRef(null), s = Vn(n, i), a = at({
    props: t,
    name: "MuiDigitalClock"
  }), {
    ampm: l = o.is12HourCycleInCurrentLocale(),
    timeStep: c = 30,
    autoFocus: u,
    slots: d,
    slotProps: p,
    value: m,
    defaultValue: g,
    referenceDate: h,
    disableIgnoringDatePartForTimeValidation: v = !1,
    maxTime: b,
    minTime: y,
    disableFuture: C,
    disablePast: x,
    minutesStep: T = 1,
    shouldDisableTime: w,
    onChange: R,
    view: E,
    openTo: O,
    onViewChange: I,
    focusedView: P,
    onFocusedViewChange: A,
    className: D,
    disabled: k,
    readOnly: M,
    views: F = ["hours"],
    skipDisabled: N = !1,
    timezone: W
  } = a, H = Xe(a, NW), {
    value: B,
    handleValueChange: j,
    timezone: L
  } = hs({
    name: "DigitalClock",
    timezone: W,
    value: m,
    defaultValue: g,
    onChange: R,
    valueManager: rn
  }), ee = pn(), Y = hi(L), $ = S.useMemo(() => V({}, a, {
    alreadyRendered: !!i.current
  }), [a]), U = VW($), X = (d == null ? void 0 : d.digitalClockItem) ?? _W, Z = Rt({
    elementType: X,
    externalSlotProps: p == null ? void 0 : p.digitalClockItem,
    ownerState: {},
    className: U.item
  }), G = Om({
    value: B,
    referenceDate: h,
    utils: o,
    props: a,
    timezone: L
  }), K = Ge((oe) => j(oe, "finish", "hours")), {
    setValueAndGoToNextView: re
  } = Ya({
    view: E,
    views: F,
    openTo: O,
    onViewChange: I,
    onChange: K,
    focusedView: P,
    onFocusedViewChange: A
  }), ne = Ge((oe) => {
    re(oe, "finish");
  });
  S.useEffect(() => {
    if (i.current === null)
      return;
    const oe = i.current.querySelector('[role="listbox"] [role="option"][tabindex="0"], [role="listbox"] [role="option"][aria-selected="true"]');
    if (!oe)
      return;
    const te = oe.offsetTop;
    (u || P) && oe.focus(), i.current.scrollTop = te - 4;
  });
  const z = S.useCallback((oe) => {
    const te = Ua(v, o), se = () => !(y && te(y, oe) || b && te(oe, b) || C && te(oe, Y) || x && te(Y, oe)), ae = () => o.getMinutes(oe) % T !== 0 ? !1 : w ? !w(oe, "hours") : !0;
    return !se() || !ae();
  }, [v, o, y, b, C, Y, x, T, w]), q = S.useMemo(() => {
    const oe = o.startOfDay(G);
    return [oe, ...Array.from({
      length: Math.ceil(24 * 60 / c) - 1
    }, (te, se) => o.addMinutes(oe, c * (se + 1)))];
  }, [G, c, o]), _ = q.findIndex((oe) => o.isEqual(oe, G));
  return /* @__PURE__ */ f.jsx($W, V({
    ref: s,
    className: fe(U.root, D),
    ownerState: $
  }, H, {
    children: /* @__PURE__ */ f.jsx(LW, {
      role: "listbox",
      "aria-label": ee.timePickerToolbarTitle,
      className: U.list,
      children: q.map((oe, te) => {
        if (N && z(oe))
          return null;
        const se = o.isEqual(oe, B), ae = o.format(oe, l ? "fullTime12h" : "fullTime24h"), me = _ === te || _ === -1 && te === 0 ? 0 : -1;
        return /* @__PURE__ */ f.jsx(X, V({
          onClick: () => !M && ne(oe),
          selected: se,
          disabled: k || z(oe),
          disableRipple: M,
          role: "option",
          "aria-disabled": M,
          "aria-selected": se,
          tabIndex: me
        }, Z, {
          children: ae
        }), ae);
      })
    })
  }));
});
process.env.NODE_ENV !== "production" && ($C.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default utils.is12HourCycleInCurrentLocale()
   */
  ampm: r.bool,
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: r.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  className: r.string,
  /**
   * The default selected value.
   * Used when the component is not controlled.
   */
  defaultValue: r.object,
  /**
   * If `true`, the picker views and text field are disabled.
   * @default false
   */
  disabled: r.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: r.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: r.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: r.bool,
  /**
   * Controlled focused view.
   */
  focusedView: r.oneOf(["hours"]),
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: r.object,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: r.object,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: r.number,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TView The view type. Will be one of date or time views.
   * @param {TValue} value The new value.
   * @param {PickerSelectionState | undefined} selectionState Indicates if the date selection is complete.
   * @param {TView | undefined} selectedView Indicates the view in which the selection has been made.
   */
  onChange: r.func,
  /**
   * Callback fired on focused view change.
   * @template TView
   * @param {TView} view The new view to focus or not.
   * @param {boolean} hasFocus `true` if the view should be focused.
   */
  onFocusedViewChange: r.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: r.func,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: r.oneOf(["hours"]),
  /**
   * If `true`, the picker views and text field are read-only.
   * @default false
   */
  readOnly: r.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid time using the validation props, except callbacks such as `shouldDisableTime`.
   */
  referenceDate: r.object,
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: r.func,
  /**
   * If `true`, disabled digital clock items will not be rendered.
   * @default false
   */
  skipDisabled: r.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: r.object,
  /**
   * Overrideable component slots.
   * @default {}
   */
  slots: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * The time steps between two time options.
   * For example, if `timeStep = 45`, then the available time options will be `[00:00, 00:45, 01:30, 02:15, 03:00, etc.]`.
   * @default 30
   */
  timeStep: r.number,
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: r.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: r.object,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: r.oneOf(["hours"]),
  /**
   * Available views.
   * @default ['hours']
   */
  views: r.arrayOf(r.oneOf(["hours"]))
});
function BW(e) {
  return It("MuiMultiSectionDigitalClock", e);
}
const Kb = Ot("MuiMultiSectionDigitalClock", ["root"]);
function zW(e) {
  return It("MuiMultiSectionDigitalClockSection", e);
}
const WW = Ot("MuiMultiSectionDigitalClockSection", ["root", "item"]), HW = ["autoFocus", "onChange", "className", "disabled", "readOnly", "items", "active", "slots", "slotProps", "skipDisabled"], GW = (e) => {
  const {
    classes: t
  } = e;
  return xt({
    root: ["root"],
    item: ["item"]
  }, zW, t);
}, UW = Q(lu, {
  name: "MuiMultiSectionDigitalClockSection",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})(({
  theme: e
}) => ({
  maxHeight: qx,
  width: 56,
  padding: 0,
  overflow: "hidden",
  "@media (prefers-reduced-motion: no-preference)": {
    scrollBehavior: "auto"
  },
  "@media (pointer: fine)": {
    "&:hover": {
      overflowY: "auto"
    }
  },
  "@media (pointer: none), (pointer: coarse)": {
    overflowY: "auto"
  },
  "&:not(:first-of-type)": {
    borderLeft: `1px solid ${(e.vars || e).palette.divider}`
  },
  "&::after": {
    display: "block",
    content: '""',
    // subtracting the height of one item, extra margin and borders to make sure the max height is correct
    height: "calc(100% - 40px - 6px)"
  },
  variants: [{
    props: {
      alreadyRendered: !0
    },
    style: {
      "@media (prefers-reduced-motion: no-preference)": {
        scrollBehavior: "smooth"
      }
    }
  }]
})), XW = Q(Mo, {
  name: "MuiMultiSectionDigitalClockSection",
  slot: "Item",
  overridesResolver: (e, t) => t.item
})(({
  theme: e
}) => ({
  padding: 8,
  margin: "2px 4px",
  width: Bs,
  justifyContent: "center",
  "&:first-of-type": {
    marginTop: 4
  },
  "&:hover": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.hoverOpacity})` : ze(e.palette.primary.main, e.palette.action.hoverOpacity)
  },
  "&.Mui-selected": {
    backgroundColor: (e.vars || e).palette.primary.main,
    color: (e.vars || e).palette.primary.contrastText,
    "&:focus-visible, &:hover": {
      backgroundColor: (e.vars || e).palette.primary.dark
    }
  },
  "&.Mui-focusVisible": {
    backgroundColor: e.vars ? `rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.focusOpacity})` : ze(e.palette.primary.main, e.palette.action.focusOpacity)
  }
})), YW = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = S.useRef(null), i = Vn(n, o), s = S.useRef(null), a = at({
    props: t,
    name: "MuiMultiSectionDigitalClockSection"
  }), {
    autoFocus: l,
    onChange: c,
    className: u,
    disabled: d,
    readOnly: p,
    items: m,
    active: g,
    slots: h,
    slotProps: v,
    skipDisabled: b
  } = a, y = Xe(a, HW), C = S.useMemo(() => V({}, a, {
    alreadyRendered: !!o.current
  }), [a]), x = GW(C), T = (h == null ? void 0 : h.digitalClockSectionItem) ?? XW;
  S.useEffect(() => {
    if (o.current === null)
      return;
    const R = o.current.querySelector('[role="option"][tabindex="0"], [role="option"][aria-selected="true"]');
    if (g && l && R && R.focus(), !R || s.current === R)
      return;
    s.current = R;
    const E = R.offsetTop;
    o.current.scrollTop = E - 4;
  });
  const w = m.findIndex((R) => R.isFocused(R.value));
  return /* @__PURE__ */ f.jsx(UW, V({
    ref: i,
    className: fe(x.root, u),
    ownerState: C,
    autoFocusItem: l && g,
    role: "listbox"
  }, y, {
    children: m.map((R, E) => {
      var D;
      const O = (D = R.isDisabled) == null ? void 0 : D.call(R, R.value), I = d || O;
      if (b && I)
        return null;
      const P = R.isSelected(R.value), A = w === E || w === -1 && E === 0 ? 0 : -1;
      return /* @__PURE__ */ f.jsx(T, V({
        onClick: () => !p && c(R.value),
        selected: P,
        disabled: I,
        disableRipple: p,
        role: "option",
        "aria-disabled": p || I || void 0,
        "aria-label": R.ariaLabel,
        "aria-selected": P,
        tabIndex: A,
        className: x.item
      }, v == null ? void 0 : v.digitalClockSectionItem, {
        children: R.label
      }), R.label);
    })
  }));
}), ZW = ({
  now: e,
  value: t,
  utils: n,
  ampm: o,
  isDisabled: i,
  resolveAriaLabel: s,
  timeStep: a,
  valueOrReferenceDate: l
}) => {
  const c = t ? n.getHours(t) : null, u = [], d = (g, h) => {
    const v = h ?? c;
    return v === null ? !1 : o ? g === 12 ? v === 12 || v === 0 : v === g || v - 12 === g : v === g;
  }, p = (g) => d(g, n.getHours(l)), m = o ? 11 : 23;
  for (let g = 0; g <= m; g += a) {
    let h = n.format(n.setHours(e, g), o ? "hours12h" : "hours24h");
    const v = s(parseInt(h, 10).toString());
    h = n.formatNumber(h), u.push({
      value: g,
      label: h,
      isSelected: d,
      isDisabled: i,
      isFocused: p,
      ariaLabel: v
    });
  }
  return u;
}, Qb = ({
  value: e,
  utils: t,
  isDisabled: n,
  timeStep: o,
  resolveLabel: i,
  resolveAriaLabel: s,
  hasValue: a = !0
}) => {
  const l = (u) => e === null ? !1 : a && e === u, c = (u) => e === u;
  return [...Array.from({
    length: Math.ceil(60 / o)
  }, (u, d) => {
    const p = o * d;
    return {
      value: p,
      label: t.formatNumber(i(p)),
      isDisabled: n,
      isSelected: l,
      isFocused: c,
      ariaLabel: s(p.toString())
    };
  })];
}, qW = ["ampm", "timeSteps", "autoFocus", "slots", "slotProps", "value", "defaultValue", "referenceDate", "disableIgnoringDatePartForTimeValidation", "maxTime", "minTime", "disableFuture", "disablePast", "minutesStep", "shouldDisableTime", "onChange", "view", "views", "openTo", "onViewChange", "focusedView", "onFocusedViewChange", "className", "disabled", "readOnly", "skipDisabled", "timezone"], JW = (e) => {
  const {
    classes: t
  } = e;
  return xt({
    root: ["root"]
  }, BW, t);
}, KW = Q(Vu, {
  name: "MuiMultiSectionDigitalClock",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})(({
  theme: e
}) => ({
  display: "flex",
  flexDirection: "row",
  width: "100%",
  borderBottom: `1px solid ${(e.vars || e).palette.divider}`
})), LC = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = gt(), i = ao(), s = at({
    props: t,
    name: "MuiMultiSectionDigitalClock"
  }), {
    ampm: a = o.is12HourCycleInCurrentLocale(),
    timeSteps: l,
    autoFocus: c,
    slots: u,
    slotProps: d,
    value: p,
    defaultValue: m,
    referenceDate: g,
    disableIgnoringDatePartForTimeValidation: h = !1,
    maxTime: v,
    minTime: b,
    disableFuture: y,
    disablePast: C,
    minutesStep: x = 1,
    shouldDisableTime: T,
    onChange: w,
    view: R,
    views: E = ["hours", "minutes"],
    openTo: O,
    onViewChange: I,
    focusedView: P,
    onFocusedViewChange: A,
    className: D,
    disabled: k,
    readOnly: M,
    skipDisabled: F = !1,
    timezone: N
  } = s, W = Xe(s, qW), {
    value: H,
    handleValueChange: B,
    timezone: j
  } = hs({
    name: "MultiSectionDigitalClock",
    timezone: N,
    value: p,
    defaultValue: m,
    onChange: w,
    valueManager: rn
  }), L = pn(), ee = hi(j), Y = S.useMemo(() => V({
    hours: 1,
    minutes: 5,
    seconds: 5
  }, l), [l]), $ = Om({
    value: H,
    referenceDate: g,
    utils: o,
    props: s,
    timezone: j
  }), U = Ge((me, ye, Te) => B(me, ye, Te)), X = S.useMemo(() => !a || !E.includes("hours") || E.includes("meridiem") ? E : [...E, "meridiem"], [a, E]), {
    view: Z,
    setValueAndGoToNextView: G,
    focusedView: K
  } = Ya({
    view: R,
    views: X,
    openTo: O,
    onViewChange: I,
    onChange: U,
    focusedView: P,
    onFocusedViewChange: A
  }), re = Ge((me) => {
    G(me, "finish", "meridiem");
  }), {
    meridiemMode: ne,
    handleMeridiemChange: z
  } = Nu($, a, re, "finish"), q = S.useCallback((me, ye) => {
    const Te = Ua(h, o), Ve = ye === "hours" || ye === "minutes" && X.includes("seconds"), ie = ({
      start: xe,
      end: Ie
    }) => !(b && Te(b, Ie) || v && Te(xe, v) || y && Te(xe, ee) || C && Te(ee, Ve ? Ie : xe)), be = (xe, Ie = 1) => {
      if (xe % Ie !== 0)
        return !1;
      if (T)
        switch (ye) {
          case "hours":
            return !T(o.setHours($, xe), "hours");
          case "minutes":
            return !T(o.setMinutes($, xe), "minutes");
          case "seconds":
            return !T(o.setSeconds($, xe), "seconds");
          default:
            return !1;
        }
      return !0;
    };
    switch (ye) {
      case "hours": {
        const xe = Ta(me, ne, a), Ie = o.setHours($, xe), Pe = o.setSeconds(o.setMinutes(Ie, 0), 0), Ce = o.setSeconds(o.setMinutes(Ie, 59), 59);
        return !ie({
          start: Pe,
          end: Ce
        }) || !be(xe);
      }
      case "minutes": {
        const xe = o.setMinutes($, me), Ie = o.setSeconds(xe, 0), Pe = o.setSeconds(xe, 59);
        return !ie({
          start: Ie,
          end: Pe
        }) || !be(me, x);
      }
      case "seconds": {
        const xe = o.setSeconds($, me);
        return !ie({
          start: xe,
          end: xe
        }) || !be(me);
      }
      default:
        throw new Error("not supported");
    }
  }, [a, $, h, v, ne, b, x, T, o, y, C, ee, X]), _ = S.useCallback((me) => {
    switch (me) {
      case "hours":
        return {
          onChange: (ye) => {
            const Te = Ta(ye, ne, a);
            G(o.setHours($, Te), "finish", "hours");
          },
          items: ZW({
            now: ee,
            value: H,
            ampm: a,
            utils: o,
            isDisabled: (ye) => q(ye, "hours"),
            timeStep: Y.hours,
            resolveAriaLabel: L.hoursClockNumberText,
            valueOrReferenceDate: $
          })
        };
      case "minutes":
        return {
          onChange: (ye) => {
            G(o.setMinutes($, ye), "finish", "minutes");
          },
          items: Qb({
            value: o.getMinutes($),
            utils: o,
            isDisabled: (ye) => q(ye, "minutes"),
            resolveLabel: (ye) => o.format(o.setMinutes(ee, ye), "minutes"),
            timeStep: Y.minutes,
            hasValue: !!H,
            resolveAriaLabel: L.minutesClockNumberText
          })
        };
      case "seconds":
        return {
          onChange: (ye) => {
            G(o.setSeconds($, ye), "finish", "seconds");
          },
          items: Qb({
            value: o.getSeconds($),
            utils: o,
            isDisabled: (ye) => q(ye, "seconds"),
            resolveLabel: (ye) => o.format(o.setSeconds(ee, ye), "seconds"),
            timeStep: Y.seconds,
            hasValue: !!H,
            resolveAriaLabel: L.secondsClockNumberText
          })
        };
      case "meridiem": {
        const ye = Eo(o, "am"), Te = Eo(o, "pm");
        return {
          onChange: z,
          items: [{
            value: "am",
            label: ye,
            isSelected: () => !!H && ne === "am",
            isFocused: () => !!$ && ne === "am",
            ariaLabel: ye
          }, {
            value: "pm",
            label: Te,
            isSelected: () => !!H && ne === "pm",
            isFocused: () => !!$ && ne === "pm",
            ariaLabel: Te
          }]
        };
      }
      default:
        throw new Error(`Unknown view: ${me} found.`);
    }
  }, [ee, H, a, o, Y.hours, Y.minutes, Y.seconds, L.hoursClockNumberText, L.minutesClockNumberText, L.secondsClockNumberText, ne, G, $, q, z]), oe = S.useMemo(() => {
    if (!i)
      return X;
    const me = X.filter((ye) => ye !== "meridiem");
    return me.reverse(), X.includes("meridiem") && me.push("meridiem"), me;
  }, [i, X]), te = S.useMemo(() => X.reduce((me, ye) => V({}, me, {
    [ye]: _(ye)
  }), {}), [X, _]), se = s, ae = JW(se);
  return /* @__PURE__ */ f.jsx(KW, V({
    ref: n,
    className: fe(ae.root, D),
    ownerState: se,
    role: "group"
  }, W, {
    children: oe.map((me) => /* @__PURE__ */ f.jsx(YW, {
      items: te[me].items,
      onChange: te[me].onChange,
      active: Z === me,
      autoFocus: c ?? K === me,
      disabled: k,
      readOnly: M,
      slots: u,
      slotProps: d,
      skipDisabled: F,
      "aria-label": L.selectViewText(me)
    }, me))
  }));
});
process.env.NODE_ENV !== "production" && (LC.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default utils.is12HourCycleInCurrentLocale()
   */
  ampm: r.bool,
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: r.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  className: r.string,
  /**
   * The default selected value.
   * Used when the component is not controlled.
   */
  defaultValue: r.object,
  /**
   * If `true`, the picker views and text field are disabled.
   * @default false
   */
  disabled: r.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: r.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: r.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: r.bool,
  /**
   * Controlled focused view.
   */
  focusedView: r.oneOf(["hours", "meridiem", "minutes", "seconds"]),
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: r.object,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: r.object,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: r.number,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TView The view type. Will be one of date or time views.
   * @param {TValue} value The new value.
   * @param {PickerSelectionState | undefined} selectionState Indicates if the date selection is complete.
   * @param {TView | undefined} selectedView Indicates the view in which the selection has been made.
   */
  onChange: r.func,
  /**
   * Callback fired on focused view change.
   * @template TView
   * @param {TView} view The new view to focus or not.
   * @param {boolean} hasFocus `true` if the view should be focused.
   */
  onFocusedViewChange: r.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: r.func,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: r.oneOf(["hours", "meridiem", "minutes", "seconds"]),
  /**
   * If `true`, the picker views and text field are read-only.
   * @default false
   */
  readOnly: r.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid time using the validation props, except callbacks such as `shouldDisableTime`.
   */
  referenceDate: r.object,
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: r.func,
  /**
   * If `true`, disabled digital clock items will not be rendered.
   * @default false
   */
  skipDisabled: r.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: r.object,
  /**
   * Overrideable component slots.
   * @default {}
   */
  slots: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * The time steps between two time unit options.
   * For example, if `timeStep.minutes = 8`, then the available minute options will be `[0, 8, 16, 24, 32, 40, 48, 56]`.
   * @default{ hours: 1, minutes: 5, seconds: 5 }
   */
  timeSteps: r.shape({
    hours: r.number,
    minutes: r.number,
    seconds: r.number
  }),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: r.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: r.object,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: r.oneOf(["hours", "meridiem", "minutes", "seconds"]),
  /**
   * Available views.
   * @default ['hours', 'minutes']
   */
  views: r.arrayOf(r.oneOf(["hours", "meridiem", "minutes", "seconds"]).isRequired)
});
const Bi = ({
  view: e,
  onViewChange: t,
  focusedView: n,
  onFocusedViewChange: o,
  views: i,
  value: s,
  defaultValue: a,
  referenceDate: l,
  onChange: c,
  className: u,
  classes: d,
  disableFuture: p,
  disablePast: m,
  minTime: g,
  maxTime: h,
  shouldDisableTime: v,
  minutesStep: b,
  ampm: y,
  ampmInClock: C,
  slots: x,
  slotProps: T,
  readOnly: w,
  disabled: R,
  sx: E,
  autoFocus: O,
  showViewSwitcher: I,
  disableIgnoringDatePartForTimeValidation: P,
  timezone: A
}) => /* @__PURE__ */ f.jsx(VC, {
  view: e,
  onViewChange: t,
  focusedView: n && Qi(n) ? n : null,
  onFocusedViewChange: o,
  views: i.filter(Qi),
  value: s,
  defaultValue: a,
  referenceDate: l,
  onChange: c,
  className: u,
  classes: d,
  disableFuture: p,
  disablePast: m,
  minTime: g,
  maxTime: h,
  shouldDisableTime: v,
  minutesStep: b,
  ampm: y,
  ampmInClock: C,
  slots: x,
  slotProps: T,
  readOnly: w,
  disabled: R,
  sx: E,
  autoFocus: O,
  showViewSwitcher: I,
  disableIgnoringDatePartForTimeValidation: P,
  timezone: A
}), _C = ({
  view: e,
  onViewChange: t,
  focusedView: n,
  onFocusedViewChange: o,
  views: i,
  value: s,
  defaultValue: a,
  referenceDate: l,
  onChange: c,
  className: u,
  classes: d,
  disableFuture: p,
  disablePast: m,
  minTime: g,
  maxTime: h,
  shouldDisableTime: v,
  minutesStep: b,
  ampm: y,
  slots: C,
  slotProps: x,
  readOnly: T,
  disabled: w,
  sx: R,
  autoFocus: E,
  disableIgnoringDatePartForTimeValidation: O,
  timeSteps: I,
  skipDisabled: P,
  timezone: A
}) => /* @__PURE__ */ f.jsx($C, {
  view: e,
  onViewChange: t,
  focusedView: n,
  onFocusedViewChange: o,
  views: i.filter(Qi),
  value: s,
  defaultValue: a,
  referenceDate: l,
  onChange: c,
  className: u,
  classes: d,
  disableFuture: p,
  disablePast: m,
  minTime: g,
  maxTime: h,
  shouldDisableTime: v,
  minutesStep: b,
  ampm: y,
  slots: C,
  slotProps: x,
  readOnly: T,
  disabled: w,
  sx: R,
  autoFocus: E,
  disableIgnoringDatePartForTimeValidation: O,
  timeStep: I == null ? void 0 : I.minutes,
  skipDisabled: P,
  timezone: A
}), hc = ({
  view: e,
  onViewChange: t,
  focusedView: n,
  onFocusedViewChange: o,
  views: i,
  value: s,
  defaultValue: a,
  referenceDate: l,
  onChange: c,
  className: u,
  classes: d,
  disableFuture: p,
  disablePast: m,
  minTime: g,
  maxTime: h,
  shouldDisableTime: v,
  minutesStep: b,
  ampm: y,
  slots: C,
  slotProps: x,
  readOnly: T,
  disabled: w,
  sx: R,
  autoFocus: E,
  disableIgnoringDatePartForTimeValidation: O,
  timeSteps: I,
  skipDisabled: P,
  timezone: A
}) => /* @__PURE__ */ f.jsx(LC, {
  view: e,
  onViewChange: t,
  focusedView: n,
  onFocusedViewChange: o,
  views: i.filter(Qi),
  value: s,
  defaultValue: a,
  referenceDate: l,
  onChange: c,
  className: u,
  classes: d,
  disableFuture: p,
  disablePast: m,
  minTime: g,
  maxTime: h,
  shouldDisableTime: v,
  minutesStep: b,
  ampm: y,
  slots: C,
  slotProps: x,
  readOnly: T,
  disabled: w,
  sx: R,
  autoFocus: E,
  disableIgnoringDatePartForTimeValidation: O,
  timeSteps: I,
  skipDisabled: P,
  timezone: A
}), BC = /* @__PURE__ */ S.forwardRef(function(t, n) {
  var v;
  const o = ao(), {
    toolbar: i,
    tabs: s,
    content: a,
    actionBar: l,
    shortcuts: c
  } = Kx(t), {
    sx: u,
    className: d,
    isLandscape: p,
    classes: m
  } = t, g = l && (((v = l.props.actions) == null ? void 0 : v.length) ?? 0) > 0, h = V({}, t, {
    isRtl: o
  });
  return /* @__PURE__ */ f.jsxs(Qx, {
    ref: n,
    className: fe(d, Ro.root, m == null ? void 0 : m.root),
    sx: [{
      [`& .${Ro.tabs}`]: {
        gridRow: 4,
        gridColumn: "1 / 4"
      },
      [`& .${Ro.actionBar}`]: {
        gridRow: 5
      }
    }, ...Array.isArray(u) ? u : [u]],
    ownerState: h,
    children: [p ? c : i, p ? i : c, /* @__PURE__ */ f.jsxs(eC, {
      className: fe(Ro.contentWrapper, m == null ? void 0 : m.contentWrapper),
      sx: {
        display: "grid"
      },
      children: [a, s, g && /* @__PURE__ */ f.jsx(Ao, {
        sx: {
          gridRow: 3,
          gridColumn: "1 / 4"
        }
      })]
    }), l]
  });
});
process.env.NODE_ENV !== "production" && (BC.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  children: r.node,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  className: r.string,
  disabled: r.bool,
  isLandscape: r.bool.isRequired,
  /**
   * `true` if the application is in right-to-left direction.
   */
  isRtl: r.bool.isRequired,
  isValid: r.func.isRequired,
  onAccept: r.func.isRequired,
  onCancel: r.func.isRequired,
  onChange: r.func.isRequired,
  onClear: r.func.isRequired,
  onClose: r.func.isRequired,
  onDismiss: r.func.isRequired,
  onOpen: r.func.isRequired,
  onSelectShortcut: r.func.isRequired,
  onSetToday: r.func.isRequired,
  onViewChange: r.func.isRequired,
  /**
   * Force rendering in particular orientation.
   */
  orientation: r.oneOf(["landscape", "portrait"]),
  readOnly: r.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: r.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  value: r.any,
  view: r.oneOf(["day", "hours", "meridiem", "minutes", "month", "seconds", "year"]),
  views: r.arrayOf(r.oneOf(["day", "hours", "meridiem", "minutes", "month", "seconds", "year"]).isRequired).isRequired,
  wrapperVariant: r.oneOf(["desktop", "mobile"])
});
const QW = ["openTo", "focusedView", "timeViewsCount"], eH = function(t, n, o) {
  var d, p;
  const {
    openTo: i,
    focusedView: s,
    timeViewsCount: a
  } = o, l = Xe(o, QW), c = V({}, l, {
    focusedView: null,
    sx: [{
      [`&.${Kb.root}`]: {
        borderBottom: 0
      },
      [`&.${Kb.root}, .${WW.root}, &.${FW.root}`]: {
        maxHeight: Tu
      }
    }]
  }), u = _s(n);
  return /* @__PURE__ */ f.jsxs(S.Fragment, {
    children: [(d = t[u ? "day" : n]) == null ? void 0 : d.call(t, V({}, o, {
      view: u ? "day" : n,
      focusedView: s && Ki(s) ? s : null,
      views: o.views.filter(Ki),
      sx: [{
        gridColumn: 1
      }, ...c.sx]
    })), a > 0 && /* @__PURE__ */ f.jsxs(S.Fragment, {
      children: [/* @__PURE__ */ f.jsx(Ao, {
        orientation: "vertical",
        sx: {
          gridColumn: 2
        }
      }), (p = t[u ? n : "hours"]) == null ? void 0 : p.call(t, V({}, c, {
        view: u ? n : "hours",
        focusedView: s && _s(s) ? s : null,
        openTo: _s(i) ? i : "hours",
        views: o.views.filter(_s),
        sx: [{
          gridColumn: 3
        }, ...c.sx]
      }))]
    })]
  });
}, zC = /* @__PURE__ */ S.forwardRef(function(t, n) {
  var C, x, T, w;
  const o = pn(), i = gt(), s = AC(t, "MuiDesktopDateTimePicker"), {
    shouldRenderTimeInASingleColumn: a,
    thresholdToRenderTimeInASingleColumn: l,
    views: c,
    timeSteps: u
  } = MC(s), d = a ? _C : hc, p = V({
    day: vo,
    month: vo,
    year: vo,
    hours: d,
    minutes: d,
    seconds: d,
    meridiem: d
  }, s.viewRenderers), m = s.ampmInClock ?? !0, h = ((C = p.hours) == null ? void 0 : C.name) === hc.name ? c : c.filter((R) => R !== "meridiem"), v = a ? [] : ["accept"], b = V({}, s, {
    viewRenderers: p,
    format: DC(i, s),
    views: h,
    yearsPerRow: s.yearsPerRow ?? 4,
    ampmInClock: m,
    timeSteps: u,
    thresholdToRenderTimeInASingleColumn: l,
    shouldRenderTimeInASingleColumn: a,
    slots: V({
      field: Im,
      layout: BC,
      openPickerIcon: tC
    }, s.slots),
    slotProps: V({}, s.slotProps, {
      field: (R) => {
        var E;
        return V({}, kr((E = s.slotProps) == null ? void 0 : E.field, R), gs(s), {
          ref: n
        });
      },
      toolbar: V({
        hidden: !0,
        ampmInClock: m,
        toolbarVariant: "desktop"
      }, (x = s.slotProps) == null ? void 0 : x.toolbar),
      tabs: V({
        hidden: !0
      }, (T = s.slotProps) == null ? void 0 : T.tabs),
      actionBar: (R) => {
        var E;
        return V({
          actions: v
        }, kr((E = s.slotProps) == null ? void 0 : E.actionBar, R));
      }
    })
  }), {
    renderPicker: y
  } = pm({
    props: b,
    valueManager: rn,
    valueType: "date-time",
    getOpenDialogAriaText: fs({
      utils: i,
      formatKey: "fullDate",
      contextTranslation: o.openDatePickerDialogue,
      propsTranslation: (w = b.localeText) == null ? void 0 : w.openDatePickerDialogue
    }),
    validator: Cu,
    rendererInterceptor: eH
  });
  return y();
});
zC.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default utils.is12HourCycleInCurrentLocale()
   */
  ampm: r.bool,
  /**
   * Display ampm controls under the clock (instead of in the toolbar).
   * @default true on desktop, false on mobile
   */
  ampmInClock: r.bool,
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: r.bool,
  className: r.string,
  /**
   * If `true`, the popover or modal will close after submitting the full date.
   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).
   */
  closeOnSelect: r.bool,
  /**
   * Formats the day of week displayed in the calendar header.
   * @param {TDate} date The date of the day of week provided by the adapter.
   * @returns {string} The name to display.
   * @default (date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()
   */
  dayOfWeekFormatter: r.func,
  /**
   * The default value.
   * Used when the component is not controlled.
   */
  defaultValue: r.object,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: r.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: r.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: r.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: r.bool,
  /**
   * If `true`, the open picker button will not be rendered (renders only the field).
   * @default false
   */
  disableOpenPicker: r.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: r.bool,
  /**
   * If `true`, the week number will be display in the calendar.
   */
  displayWeekNumber: r.bool,
  /**
   * @default false
   */
  enableAccessibleFieldDOMStructure: r.any,
  /**
   * The day view will show as many weeks as needed after the end of the current month to match this value.
   * Put it to 6 to have a fixed number of weeks in Gregorian calendars
   */
  fixedWeekNumber: r.number,
  /**
   * Format of the date when rendered in the input(s).
   * Defaults to localized format based on the used `views`.
   */
  format: r.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: r.oneOf(["dense", "spacious"]),
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Rn,
  /**
   * The label content.
   */
  label: r.node,
  /**
   * If `true`, calls `renderLoading` instead of rendering the day calendar.
   * Can be used to preload information and show it in calendar.
   * @default false
   */
  loading: r.bool,
  /**
   * Locale for components texts.
   * Allows overriding texts coming from `LocalizationProvider` and `theme`.
   */
  localeText: r.object,
  /**
   * Maximal selectable date.
   * @default 2099-12-31
   */
  maxDate: r.object,
  /**
   * Maximal selectable moment of time with binding to date, to set max time in each day use `maxTime`.
   */
  maxDateTime: r.object,
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: r.object,
  /**
   * Minimal selectable date.
   * @default 1900-01-01
   */
  minDate: r.object,
  /**
   * Minimal selectable moment of time with binding to date, to set min time in each day use `minTime`.
   */
  minDateTime: r.object,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: r.object,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: r.number,
  /**
   * Months rendered per row.
   * @default 3
   */
  monthsPerRow: r.oneOf([3, 4]),
  /**
   * Name attribute used by the `input` element in the Field.
   */
  name: r.string,
  /**
   * Callback fired when the value is accepted.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The value that was just accepted.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onAccept: r.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: r.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see `open`).
   */
  onClose: r.func,
  /**
   * Callback fired when the error associated with the current value changes.
   * When a validation error is detected, the `error` parameter contains a non-null value.
   * This can be used to render an appropriate form error.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @param {TError} error The reason why the current value is not valid.
   * @param {TValue} value The value associated with the error.
   */
  onError: r.func,
  /**
   * Callback fired on month change.
   * @template TDate
   * @param {TDate} month The new month.
   */
  onMonthChange: r.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see `open`).
   */
  onOpen: r.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: r.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: r.func,
  /**
   * Callback fired on year change.
   * @template TDate
   * @param {TDate} year The new year.
   */
  onYearChange: r.func,
  /**
   * Control the popup or dialog open state.
   * @default false
   */
  open: r.bool,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: r.oneOf(["day", "hours", "meridiem", "minutes", "month", "seconds", "year"]),
  /**
   * Force rendering in particular orientation.
   */
  orientation: r.oneOf(["landscape", "portrait"]),
  readOnly: r.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: r.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.
   */
  referenceDate: r.object,
  /**
   * Component displaying when passed `loading` true.
   * @returns {React.ReactNode} The node to render when loading.
   * @default () => <span data-mui-test="loading-progress">...</span>
   */
  renderLoading: r.func,
  /**
   * The currently selected sections.
   * This prop accepts four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 3. If `"all"` is provided, all the sections will be selected.
   * 4. If `null` is provided, no section will be selected.
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: r.oneOfType([r.oneOf(["all", "day", "empty", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), r.number]),
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (for example when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: r.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: r.func,
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: r.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: r.func,
  /**
   * If `true`, days outside the current month are rendered:
   *
   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.
   *
   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.
   *
   * - ignored if `calendars` equals more than `1` on range pickers.
   * @default false
   */
  showDaysOutsideCurrentMonth: r.bool,
  /**
   * If `true`, disabled digital clock items will not be rendered.
   * @default false
   */
  skipDisabled: r.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: r.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * Amount of time options below or at which the single column time renderer is used.
   * @default 24
   */
  thresholdToRenderTimeInASingleColumn: r.number,
  /**
   * The time steps between two time unit options.
   * For example, if `timeStep.minutes = 8`, then the available minute options will be `[0, 8, 16, 24, 32, 40, 48, 56]`.
   * When single column time renderer is used, only `timeStep.minutes` will be used.
   * @default{ hours: 1, minutes: 5, seconds: 5 }
   */
  timeSteps: r.shape({
    hours: r.number,
    minutes: r.number,
    seconds: r.number
  }),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: r.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: r.object,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: r.oneOf(["day", "hours", "meridiem", "minutes", "month", "seconds", "year"]),
  /**
   * Define custom view renderers for each section.
   * If `null`, the section will only have field editing.
   * If `undefined`, internally defined view will be used.
   */
  viewRenderers: r.shape({
    day: r.func,
    hours: r.func,
    meridiem: r.func,
    minutes: r.func,
    month: r.func,
    seconds: r.func,
    year: r.func
  }),
  /**
   * Available views.
   */
  views: r.arrayOf(r.oneOf(["day", "hours", "minutes", "month", "seconds", "year"]).isRequired),
  /**
   * Years are displayed in ascending (chronological) order by default.
   * If `desc`, years are displayed in descending order.
   * @default 'asc'
   */
  yearsOrder: r.oneOf(["asc", "desc"]),
  /**
   * Years rendered per row.
   * @default 4
   */
  yearsPerRow: r.oneOf([3, 4])
};
const WC = /* @__PURE__ */ S.forwardRef(function(t, n) {
  var d, p, m;
  const o = pn(), i = gt(), s = AC(t, "MuiMobileDateTimePicker"), a = V({
    day: vo,
    month: vo,
    year: vo,
    hours: Bi,
    minutes: Bi,
    seconds: Bi
  }, s.viewRenderers), l = s.ampmInClock ?? !1, c = V({}, s, {
    viewRenderers: a,
    format: DC(i, s),
    ampmInClock: l,
    slots: V({
      field: Im
    }, s.slots),
    slotProps: V({}, s.slotProps, {
      field: (g) => {
        var h;
        return V({}, kr((h = s.slotProps) == null ? void 0 : h.field, g), gs(s), {
          ref: n
        });
      },
      toolbar: V({
        hidden: !1,
        ampmInClock: l
      }, (d = s.slotProps) == null ? void 0 : d.toolbar),
      tabs: V({
        hidden: !1
      }, (p = s.slotProps) == null ? void 0 : p.tabs)
    })
  }), {
    renderPicker: u
  } = Tm({
    props: c,
    valueManager: rn,
    valueType: "date-time",
    getOpenDialogAriaText: fs({
      utils: i,
      formatKey: "fullDate",
      contextTranslation: o.openDatePickerDialogue,
      propsTranslation: (m = c.localeText) == null ? void 0 : m.openDatePickerDialogue
    }),
    validator: Cu
  });
  return u();
});
WC.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default utils.is12HourCycleInCurrentLocale()
   */
  ampm: r.bool,
  /**
   * Display ampm controls under the clock (instead of in the toolbar).
   * @default true on desktop, false on mobile
   */
  ampmInClock: r.bool,
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: r.bool,
  className: r.string,
  /**
   * If `true`, the popover or modal will close after submitting the full date.
   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).
   */
  closeOnSelect: r.bool,
  /**
   * Formats the day of week displayed in the calendar header.
   * @param {TDate} date The date of the day of week provided by the adapter.
   * @returns {string} The name to display.
   * @default (date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()
   */
  dayOfWeekFormatter: r.func,
  /**
   * The default value.
   * Used when the component is not controlled.
   */
  defaultValue: r.object,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: r.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: r.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: r.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: r.bool,
  /**
   * If `true`, the open picker button will not be rendered (renders only the field).
   * @default false
   */
  disableOpenPicker: r.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: r.bool,
  /**
   * If `true`, the week number will be display in the calendar.
   */
  displayWeekNumber: r.bool,
  /**
   * @default false
   */
  enableAccessibleFieldDOMStructure: r.any,
  /**
   * The day view will show as many weeks as needed after the end of the current month to match this value.
   * Put it to 6 to have a fixed number of weeks in Gregorian calendars
   */
  fixedWeekNumber: r.number,
  /**
   * Format of the date when rendered in the input(s).
   * Defaults to localized format based on the used `views`.
   */
  format: r.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: r.oneOf(["dense", "spacious"]),
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Rn,
  /**
   * The label content.
   */
  label: r.node,
  /**
   * If `true`, calls `renderLoading` instead of rendering the day calendar.
   * Can be used to preload information and show it in calendar.
   * @default false
   */
  loading: r.bool,
  /**
   * Locale for components texts.
   * Allows overriding texts coming from `LocalizationProvider` and `theme`.
   */
  localeText: r.object,
  /**
   * Maximal selectable date.
   * @default 2099-12-31
   */
  maxDate: r.object,
  /**
   * Maximal selectable moment of time with binding to date, to set max time in each day use `maxTime`.
   */
  maxDateTime: r.object,
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: r.object,
  /**
   * Minimal selectable date.
   * @default 1900-01-01
   */
  minDate: r.object,
  /**
   * Minimal selectable moment of time with binding to date, to set min time in each day use `minTime`.
   */
  minDateTime: r.object,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: r.object,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: r.number,
  /**
   * Months rendered per row.
   * @default 3
   */
  monthsPerRow: r.oneOf([3, 4]),
  /**
   * Name attribute used by the `input` element in the Field.
   */
  name: r.string,
  /**
   * Callback fired when the value is accepted.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The value that was just accepted.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onAccept: r.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: r.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see `open`).
   */
  onClose: r.func,
  /**
   * Callback fired when the error associated with the current value changes.
   * When a validation error is detected, the `error` parameter contains a non-null value.
   * This can be used to render an appropriate form error.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @param {TError} error The reason why the current value is not valid.
   * @param {TValue} value The value associated with the error.
   */
  onError: r.func,
  /**
   * Callback fired on month change.
   * @template TDate
   * @param {TDate} month The new month.
   */
  onMonthChange: r.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see `open`).
   */
  onOpen: r.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: r.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: r.func,
  /**
   * Callback fired on year change.
   * @template TDate
   * @param {TDate} year The new year.
   */
  onYearChange: r.func,
  /**
   * Control the popup or dialog open state.
   * @default false
   */
  open: r.bool,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: r.oneOf(["day", "hours", "minutes", "month", "seconds", "year"]),
  /**
   * Force rendering in particular orientation.
   */
  orientation: r.oneOf(["landscape", "portrait"]),
  readOnly: r.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: r.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.
   */
  referenceDate: r.object,
  /**
   * Component displaying when passed `loading` true.
   * @returns {React.ReactNode} The node to render when loading.
   * @default () => <span data-mui-test="loading-progress">...</span>
   */
  renderLoading: r.func,
  /**
   * The currently selected sections.
   * This prop accepts four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 3. If `"all"` is provided, all the sections will be selected.
   * 4. If `null` is provided, no section will be selected.
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: r.oneOfType([r.oneOf(["all", "day", "empty", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), r.number]),
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (for example when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: r.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: r.func,
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: r.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: r.func,
  /**
   * If `true`, days outside the current month are rendered:
   *
   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.
   *
   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.
   *
   * - ignored if `calendars` equals more than `1` on range pickers.
   * @default false
   */
  showDaysOutsideCurrentMonth: r.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: r.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: r.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: r.object,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: r.oneOf(["day", "hours", "minutes", "month", "seconds", "year"]),
  /**
   * Define custom view renderers for each section.
   * If `null`, the section will only have field editing.
   * If `undefined`, internally defined view will be used.
   */
  viewRenderers: r.shape({
    day: r.func,
    hours: r.func,
    minutes: r.func,
    month: r.func,
    seconds: r.func,
    year: r.func
  }),
  /**
   * Available views.
   */
  views: r.arrayOf(r.oneOf(["day", "hours", "minutes", "month", "seconds", "year"]).isRequired),
  /**
   * Years are displayed in ascending (chronological) order by default.
   * If `desc`, years are displayed in descending order.
   * @default 'asc'
   */
  yearsOrder: r.oneOf(["asc", "desc"]),
  /**
   * Years rendered per row.
   * @default 3
   */
  yearsPerRow: r.oneOf([3, 4])
};
const tH = ["desktopModeMediaQuery"], HC = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiDateTimePicker"
  }), {
    desktopModeMediaQuery: i = cm
  } = o, s = Xe(o, tH);
  return Pr(i, {
    defaultMatches: !0
  }) ? /* @__PURE__ */ f.jsx(zC, V({
    ref: n
  }, s)) : /* @__PURE__ */ f.jsx(WC, V({
    ref: n
  }, s));
});
process.env.NODE_ENV !== "production" && (HC.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default utils.is12HourCycleInCurrentLocale()
   */
  ampm: r.bool,
  /**
   * Display ampm controls under the clock (instead of in the toolbar).
   * @default true on desktop, false on mobile
   */
  ampmInClock: r.bool,
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: r.bool,
  className: r.string,
  /**
   * If `true`, the popover or modal will close after submitting the full date.
   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).
   */
  closeOnSelect: r.bool,
  /**
   * Formats the day of week displayed in the calendar header.
   * @param {TDate} date The date of the day of week provided by the adapter.
   * @returns {string} The name to display.
   * @default (date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()
   */
  dayOfWeekFormatter: r.func,
  /**
   * The default value.
   * Used when the component is not controlled.
   */
  defaultValue: r.object,
  /**
   * CSS media query when `Mobile` mode will be changed to `Desktop`.
   * @default '@media (pointer: fine)'
   * @example '@media (min-width: 720px)' or theme.breakpoints.up("sm")
   */
  desktopModeMediaQuery: r.string,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: r.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: r.bool,
  /**
   * If `true`, today's date is rendering without highlighting with circle.
   * @default false
   */
  disableHighlightToday: r.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: r.bool,
  /**
   * If `true`, the open picker button will not be rendered (renders only the field).
   * @default false
   */
  disableOpenPicker: r.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: r.bool,
  /**
   * If `true`, the week number will be display in the calendar.
   */
  displayWeekNumber: r.bool,
  /**
   * @default false
   */
  enableAccessibleFieldDOMStructure: r.any,
  /**
   * The day view will show as many weeks as needed after the end of the current month to match this value.
   * Put it to 6 to have a fixed number of weeks in Gregorian calendars
   */
  fixedWeekNumber: r.number,
  /**
   * Format of the date when rendered in the input(s).
   * Defaults to localized format based on the used `views`.
   */
  format: r.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: r.oneOf(["dense", "spacious"]),
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Rn,
  /**
   * The label content.
   */
  label: r.node,
  /**
   * If `true`, calls `renderLoading` instead of rendering the day calendar.
   * Can be used to preload information and show it in calendar.
   * @default false
   */
  loading: r.bool,
  /**
   * Locale for components texts.
   * Allows overriding texts coming from `LocalizationProvider` and `theme`.
   */
  localeText: r.object,
  /**
   * Maximal selectable date.
   * @default 2099-12-31
   */
  maxDate: r.object,
  /**
   * Maximal selectable moment of time with binding to date, to set max time in each day use `maxTime`.
   */
  maxDateTime: r.object,
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: r.object,
  /**
   * Minimal selectable date.
   * @default 1900-01-01
   */
  minDate: r.object,
  /**
   * Minimal selectable moment of time with binding to date, to set min time in each day use `minTime`.
   */
  minDateTime: r.object,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: r.object,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: r.number,
  /**
   * Months rendered per row.
   * @default 3
   */
  monthsPerRow: r.oneOf([3, 4]),
  /**
   * Name attribute used by the `input` element in the Field.
   */
  name: r.string,
  /**
   * Callback fired when the value is accepted.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The value that was just accepted.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onAccept: r.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: r.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see `open`).
   */
  onClose: r.func,
  /**
   * Callback fired when the error associated with the current value changes.
   * When a validation error is detected, the `error` parameter contains a non-null value.
   * This can be used to render an appropriate form error.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @param {TError} error The reason why the current value is not valid.
   * @param {TValue} value The value associated with the error.
   */
  onError: r.func,
  /**
   * Callback fired on month change.
   * @template TDate
   * @param {TDate} month The new month.
   */
  onMonthChange: r.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see `open`).
   */
  onOpen: r.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: r.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: r.func,
  /**
   * Callback fired on year change.
   * @template TDate
   * @param {TDate} year The new year.
   */
  onYearChange: r.func,
  /**
   * Control the popup or dialog open state.
   * @default false
   */
  open: r.bool,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: r.oneOf(["day", "hours", "meridiem", "minutes", "month", "seconds", "year"]),
  /**
   * Force rendering in particular orientation.
   */
  orientation: r.oneOf(["landscape", "portrait"]),
  readOnly: r.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: r.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.
   */
  referenceDate: r.object,
  /**
   * Component displaying when passed `loading` true.
   * @returns {React.ReactNode} The node to render when loading.
   * @default () => <span data-mui-test="loading-progress">...</span>
   */
  renderLoading: r.func,
  /**
   * The currently selected sections.
   * This prop accepts four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 3. If `"all"` is provided, all the sections will be selected.
   * 4. If `null` is provided, no section will be selected.
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: r.oneOfType([r.oneOf(["all", "day", "empty", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), r.number]),
  /**
   * Disable specific date.
   *
   * Warning: This function can be called multiple times (for example when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.
   *
   * @template TDate
   * @param {TDate} day The date to test.
   * @returns {boolean} If `true` the date will be disabled.
   */
  shouldDisableDate: r.func,
  /**
   * Disable specific month.
   * @template TDate
   * @param {TDate} month The month to test.
   * @returns {boolean} If `true`, the month will be disabled.
   */
  shouldDisableMonth: r.func,
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: r.func,
  /**
   * Disable specific year.
   * @template TDate
   * @param {TDate} year The year to test.
   * @returns {boolean} If `true`, the year will be disabled.
   */
  shouldDisableYear: r.func,
  /**
   * If `true`, days outside the current month are rendered:
   *
   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.
   *
   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.
   *
   * - ignored if `calendars` equals more than `1` on range pickers.
   * @default false
   */
  showDaysOutsideCurrentMonth: r.bool,
  /**
   * If `true`, disabled digital clock items will not be rendered.
   * @default false
   */
  skipDisabled: r.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: r.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * Amount of time options below or at which the single column time renderer is used.
   * @default 24
   */
  thresholdToRenderTimeInASingleColumn: r.number,
  /**
   * The time steps between two time unit options.
   * For example, if `timeStep.minutes = 8`, then the available minute options will be `[0, 8, 16, 24, 32, 40, 48, 56]`.
   * When single column time renderer is used, only `timeStep.minutes` will be used.
   * @default{ hours: 1, minutes: 5, seconds: 5 }
   */
  timeSteps: r.shape({
    hours: r.number,
    minutes: r.number,
    seconds: r.number
  }),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: r.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: r.object,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: r.oneOf(["day", "hours", "meridiem", "minutes", "month", "seconds", "year"]),
  /**
   * Define custom view renderers for each section.
   * If `null`, the section will only have field editing.
   * If `undefined`, internally defined view will be used.
   */
  viewRenderers: r.shape({
    day: r.func,
    hours: r.func,
    meridiem: r.func,
    minutes: r.func,
    month: r.func,
    seconds: r.func,
    year: r.func
  }),
  /**
   * Available views.
   */
  views: r.arrayOf(r.oneOf(["day", "hours", "minutes", "month", "seconds", "year"]).isRequired),
  /**
   * Years are displayed in ascending (chronological) order by default.
   * If `desc`, years are displayed in descending order.
   * @default 'asc'
   */
  yearsOrder: r.oneOf(["asc", "desc"]),
  /**
   * Years rendered per row.
   * @default 4 on desktop, 3 on mobile
   */
  yearsPerRow: r.oneOf([3, 4])
});
const nH = (e) => {
  const t = gB(e), {
    forwardedProps: n,
    internalProps: o
  } = gm(t, "time");
  return fm({
    forwardedProps: n,
    internalProps: o,
    valueManager: rn,
    fieldValueManager: sm,
    validator: Xa,
    valueType: "time"
  });
}, oH = ["slots", "slotProps", "InputProps", "inputProps"], Em = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiTimeField"
  }), {
    slots: i,
    slotProps: s,
    InputProps: a,
    inputProps: l
  } = o, c = Xe(o, oH), u = o, d = (i == null ? void 0 : i.textField) ?? (t.enableAccessibleFieldDOMStructure ? Fu : Kn), p = Rt({
    elementType: d,
    externalSlotProps: s == null ? void 0 : s.textField,
    externalForwardedProps: c,
    ownerState: u,
    additionalProps: {
      ref: n
    }
  });
  p.inputProps = V({}, l, p.inputProps), p.InputProps = V({}, a, p.InputProps);
  const m = nH(p), g = Sm(m), h = mm(V({}, g, {
    slots: i,
    slotProps: s
  }));
  return /* @__PURE__ */ f.jsx(d, V({}, h));
});
process.env.NODE_ENV !== "production" && (Em.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default utils.is12HourCycleInCurrentLocale()
   */
  ampm: r.bool,
  /**
   * If `true`, the `input` element is focused during the first mount.
   * @default false
   */
  autoFocus: r.bool,
  className: r.string,
  /**
   * If `true`, a clear button will be shown in the field allowing value clearing.
   * @default false
   */
  clearable: r.bool,
  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
   * @default 'primary'
   */
  color: r.oneOf(["error", "info", "primary", "secondary", "success", "warning"]),
  component: r.elementType,
  /**
   * The default value. Use when the component is not controlled.
   */
  defaultValue: r.object,
  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: r.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: r.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: r.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: r.bool,
  /**
   * @default false
   */
  enableAccessibleFieldDOMStructure: r.bool,
  /**
   * If `true`, the component is displayed in focused state.
   */
  focused: r.bool,
  /**
   * Format of the date when rendered in the input(s).
   */
  format: r.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: r.oneOf(["dense", "spacious"]),
  /**
   * Props applied to the [`FormHelperText`](/material-ui/api/form-helper-text/) element.
   */
  FormHelperTextProps: r.object,
  /**
   * If `true`, the input will take up the full width of its container.
   * @default false
   */
  fullWidth: r.bool,
  /**
   * The helper text content.
   */
  helperText: r.node,
  /**
   * If `true`, the label is hidden.
   * This is used to increase density for a `FilledInput`.
   * Be sure to add `aria-label` to the `input` element.
   * @default false
   */
  hiddenLabel: r.bool,
  /**
   * The id of the `input` element.
   * Use this prop to make `label` and `helperText` accessible for screen readers.
   */
  id: r.string,
  /**
   * Props applied to the [`InputLabel`](/material-ui/api/input-label/) element.
   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.
   */
  InputLabelProps: r.object,
  /**
   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.
   */
  inputProps: r.object,
  /**
   * Props applied to the Input element.
   * It will be a [`FilledInput`](/material-ui/api/filled-input/),
   * [`OutlinedInput`](/material-ui/api/outlined-input/) or [`Input`](/material-ui/api/input/)
   * component depending on the `variant` prop value.
   */
  InputProps: r.object,
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Rn,
  /**
   * The label content.
   */
  label: r.node,
  /**
   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.
   * @default 'none'
   */
  margin: r.oneOf(["dense", "none", "normal"]),
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: r.object,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: r.object,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: r.number,
  /**
   * Name attribute of the `input` element.
   */
  name: r.string,
  onBlur: r.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: r.func,
  /**
   * Callback fired when the clear button is clicked.
   */
  onClear: r.func,
  /**
   * Callback fired when the error associated with the current value changes.
   * When a validation error is detected, the `error` parameter contains a non-null value.
   * This can be used to render an appropriate form error.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @param {TError} error The reason why the current value is not valid.
   * @param {TValue} value The value associated with the error.
   */
  onError: r.func,
  onFocus: r.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: r.func,
  /**
   * It prevents the user from changing the value of the field
   * (not from interacting with the field).
   * @default false
   */
  readOnly: r.bool,
  /**
   * The date used to generate a part of the new value that is not present in the format when both `value` and `defaultValue` are empty.
   * For example, on time fields it will be used to determine the date to set.
   * @default The closest valid date using the validation props, except callbacks such as `shouldDisableDate`. Value is rounded to the most granular section used.
   */
  referenceDate: r.object,
  /**
   * If `true`, the label is displayed as required and the `input` element is required.
   * @default false
   */
  required: r.bool,
  /**
   * The currently selected sections.
   * This prop accepts four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 3. If `"all"` is provided, all the sections will be selected.
   * 4. If `null` is provided, no section will be selected.
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: r.oneOfType([r.oneOf(["all", "day", "empty", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), r.number]),
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: r.func,
  /**
   * If `true`, the format will respect the leading zeroes (e.g: on dayjs, the format `M/D/YYYY` will render `8/16/2018`)
   * If `false`, the format will always add leading zeroes (e.g: on dayjs, the format `M/D/YYYY` will render `08/16/2018`)
   *
   * Warning n°1: Luxon is not able to respect the leading zeroes when using macro tokens (e.g: "DD"), so `shouldRespectLeadingZeros={true}` might lead to inconsistencies when using `AdapterLuxon`.
   *
   * Warning n°2: When `shouldRespectLeadingZeros={true}`, the field will add an invisible character on the sections containing a single digit to make sure `onChange` is fired.
   * If you need to get the clean value from the input, you can remove this character using `input.value.replace(/\u200e/g, '')`.
   *
   * Warning n°3: When used in strict mode, dayjs and moment require to respect the leading zeros.
   * This mean that when using `shouldRespectLeadingZeros={false}`, if you retrieve the value directly from the input (not listening to `onChange`) and your format contains tokens without leading zeros, the value will not be parsed by your library.
   *
   * @default false
   */
  shouldRespectLeadingZeros: r.bool,
  /**
   * The size of the component.
   */
  size: r.oneOf(["medium", "small"]),
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: r.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: r.object,
  style: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: r.string,
  /**
   * The ref object used to imperatively interact with the field.
   */
  unstableFieldRef: r.oneOfType([r.func, r.object]),
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: r.object,
  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: r.oneOf(["filled", "outlined", "standard"])
});
function rH(e) {
  return It("MuiTimePickerToolbar", e);
}
const ea = Ot("MuiTimePickerToolbar", ["root", "separator", "hourMinuteLabel", "hourMinuteLabelLandscape", "hourMinuteLabelReverse", "ampmSelection", "ampmLandscape", "ampmLabel"]), iH = ["ampm", "ampmInClock", "value", "isLandscape", "onChange", "view", "onViewChange", "views", "disabled", "readOnly", "className"], sH = (e) => {
  const {
    isLandscape: t,
    classes: n,
    isRtl: o
  } = e;
  return xt({
    root: ["root"],
    separator: ["separator"],
    hourMinuteLabel: ["hourMinuteLabel", t && "hourMinuteLabelLandscape", o && "hourMinuteLabelReverse"],
    ampmSelection: ["ampmSelection", t && "ampmLandscape"],
    ampmLabel: ["ampmLabel"]
  }, rH, n);
}, aH = Q(lm, {
  name: "MuiTimePickerToolbar",
  slot: "Root",
  overridesResolver: (e, t) => t.root
})({}), lH = Q(Rm, {
  name: "MuiTimePickerToolbar",
  slot: "Separator",
  overridesResolver: (e, t) => t.separator
})({
  outline: 0,
  margin: "0 4px 0 2px",
  cursor: "default"
}), cH = Q("div", {
  name: "MuiTimePickerToolbar",
  slot: "HourMinuteLabel",
  overridesResolver: (e, t) => [{
    [`&.${ea.hourMinuteLabelLandscape}`]: t.hourMinuteLabelLandscape,
    [`&.${ea.hourMinuteLabelReverse}`]: t.hourMinuteLabelReverse
  }, t.hourMinuteLabel]
})({
  display: "flex",
  justifyContent: "flex-end",
  alignItems: "flex-end",
  variants: [{
    props: {
      isRtl: !0
    },
    style: {
      flexDirection: "row-reverse"
    }
  }, {
    props: {
      isLandscape: !0
    },
    style: {
      marginTop: "auto"
    }
  }]
}), uH = Q("div", {
  name: "MuiTimePickerToolbar",
  slot: "AmPmSelection",
  overridesResolver: (e, t) => [{
    [`.${ea.ampmLabel}`]: t.ampmLabel
  }, {
    [`&.${ea.ampmLandscape}`]: t.ampmLandscape
  }, t.ampmSelection]
})({
  display: "flex",
  flexDirection: "column",
  marginRight: "auto",
  marginLeft: 12,
  [`& .${ea.ampmLabel}`]: {
    fontSize: 17
  },
  variants: [{
    props: {
      isLandscape: !0
    },
    style: {
      margin: "4px 0 auto",
      flexDirection: "row",
      justifyContent: "space-around",
      flexBasis: "100%"
    }
  }]
});
function GC(e) {
  const t = at({
    props: e,
    name: "MuiTimePickerToolbar"
  }), {
    ampm: n,
    ampmInClock: o,
    value: i,
    isLandscape: s,
    onChange: a,
    view: l,
    onViewChange: c,
    views: u,
    disabled: d,
    readOnly: p,
    className: m
  } = t, g = Xe(t, iH), h = gt(), v = pn(), b = ao(), y = !!(n && !o && u.includes("hours")), {
    meridiemMode: C,
    handleMeridiemChange: x
  } = Nu(i, n, a), T = (O) => n ? h.format(O, "hours12h") : h.format(O, "hours24h"), w = V({}, t, {
    isRtl: b
  }), R = sH(w), E = /* @__PURE__ */ f.jsx(lH, {
    tabIndex: -1,
    value: ":",
    variant: "h3",
    selected: !1,
    className: R.separator
  });
  return /* @__PURE__ */ f.jsxs(aH, V({
    landscapeDirection: "row",
    toolbarTitle: v.timePickerToolbarTitle,
    isLandscape: s,
    ownerState: w,
    className: fe(R.root, m)
  }, g, {
    children: [/* @__PURE__ */ f.jsxs(cH, {
      className: R.hourMinuteLabel,
      ownerState: w,
      children: [Di(u, "hours") && /* @__PURE__ */ f.jsx(Un, {
        tabIndex: -1,
        variant: "h3",
        onClick: () => c("hours"),
        selected: l === "hours",
        value: i ? T(i) : "--"
      }), Di(u, ["hours", "minutes"]) && E, Di(u, "minutes") && /* @__PURE__ */ f.jsx(Un, {
        tabIndex: -1,
        variant: "h3",
        onClick: () => c("minutes"),
        selected: l === "minutes",
        value: i ? h.format(i, "minutes") : "--"
      }), Di(u, ["minutes", "seconds"]) && E, Di(u, "seconds") && /* @__PURE__ */ f.jsx(Un, {
        variant: "h3",
        onClick: () => c("seconds"),
        selected: l === "seconds",
        value: i ? h.format(i, "seconds") : "--"
      })]
    }), y && /* @__PURE__ */ f.jsxs(uH, {
      className: R.ampmSelection,
      ownerState: w,
      children: [/* @__PURE__ */ f.jsx(Un, {
        disableRipple: !0,
        variant: "subtitle2",
        selected: C === "am",
        typographyClassName: R.ampmLabel,
        value: Eo(h, "am"),
        onClick: p ? void 0 : () => x("am"),
        disabled: d
      }), /* @__PURE__ */ f.jsx(Un, {
        disableRipple: !0,
        variant: "subtitle2",
        selected: C === "pm",
        typographyClassName: R.ampmLabel,
        value: Eo(h, "pm"),
        onClick: p ? void 0 : () => x("pm"),
        disabled: d
      })]
    })]
  }));
}
process.env.NODE_ENV !== "production" && (GC.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  ampm: r.bool,
  ampmInClock: r.bool,
  /**
   * Override or extend the styles applied to the component.
   */
  classes: r.object,
  className: r.string,
  disabled: r.bool,
  /**
   * If `true`, show the toolbar even in desktop mode.
   * @default `true` for Desktop, `false` for Mobile.
   */
  hidden: r.bool,
  isLandscape: r.bool.isRequired,
  onChange: r.func.isRequired,
  /**
   * Callback called when a toolbar is clicked
   * @template TView
   * @param {TView} view The view to open
   */
  onViewChange: r.func.isRequired,
  readOnly: r.bool,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  titleId: r.string,
  /**
   * Toolbar date format.
   */
  toolbarFormat: r.string,
  /**
   * Toolbar value placeholder—it is displayed when the value is empty.
   * @default "––"
   */
  toolbarPlaceholder: r.node,
  value: r.object,
  /**
   * Currently visible picker view.
   */
  view: r.oneOf(["hours", "meridiem", "minutes", "seconds"]).isRequired,
  /**
   * Available views.
   */
  views: r.arrayOf(r.oneOf(["hours", "meridiem", "minutes", "seconds"]).isRequired).isRequired
});
function UC(e, t) {
  var a;
  const n = gt(), o = at({
    props: e,
    name: t
  }), i = o.ampm ?? n.is12HourCycleInCurrentLocale(), s = S.useMemo(() => {
    var l;
    return ((l = o.localeText) == null ? void 0 : l.toolbarTitle) == null ? o.localeText : V({}, o.localeText, {
      timePickerToolbarTitle: o.localeText.toolbarTitle
    });
  }, [o.localeText]);
  return V({}, o, {
    ampm: i,
    localeText: s
  }, em({
    views: o.views,
    openTo: o.openTo,
    defaultViews: ["hours", "minutes"],
    defaultOpenTo: "hours"
  }), {
    disableFuture: o.disableFuture ?? !1,
    disablePast: o.disablePast ?? !1,
    slots: V({
      toolbar: GC
    }, o.slots),
    slotProps: V({}, o.slotProps, {
      toolbar: V({
        ampm: i,
        ampmInClock: o.ampmInClock
      }, (a = o.slotProps) == null ? void 0 : a.toolbar)
    })
  });
}
const XC = /* @__PURE__ */ S.forwardRef(function(t, n) {
  var y, C, x, T;
  const o = pn(), i = gt(), s = UC(t, "MuiDesktopTimePicker"), {
    shouldRenderTimeInASingleColumn: a,
    views: l,
    timeSteps: c
  } = MC(s), u = a ? _C : hc, d = V({
    hours: u,
    minutes: u,
    seconds: u,
    meridiem: u
  }, s.viewRenderers), p = s.ampmInClock ?? !0, m = a ? [] : ["accept"], h = ((y = d.hours) == null ? void 0 : y.name) === hc.name ? l : l.filter((w) => w !== "meridiem"), v = V({}, s, {
    ampmInClock: p,
    timeSteps: c,
    viewRenderers: d,
    format: pc(i, s),
    // Setting only `hours` time view in case of single column time picker
    // Allows for easy view lifecycle management
    views: a ? ["hours"] : h,
    slots: V({
      field: Em,
      openPickerIcon: Z_
    }, s.slots),
    slotProps: V({}, s.slotProps, {
      field: (w) => {
        var R;
        return V({}, kr((R = s.slotProps) == null ? void 0 : R.field, w), gs(s), {
          ref: n
        });
      },
      toolbar: V({
        hidden: !0,
        ampmInClock: p
      }, (C = s.slotProps) == null ? void 0 : C.toolbar),
      actionBar: V({
        actions: m
      }, (x = s.slotProps) == null ? void 0 : x.actionBar)
    })
  }), {
    renderPicker: b
  } = pm({
    props: v,
    valueManager: rn,
    valueType: "time",
    getOpenDialogAriaText: fs({
      utils: i,
      formatKey: "fullTime",
      contextTranslation: o.openTimePickerDialogue,
      propsTranslation: (T = v.localeText) == null ? void 0 : T.openTimePickerDialogue
    }),
    validator: Xa
  });
  return b();
});
XC.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default utils.is12HourCycleInCurrentLocale()
   */
  ampm: r.bool,
  /**
   * Display ampm controls under the clock (instead of in the toolbar).
   * @default true on desktop, false on mobile
   */
  ampmInClock: r.bool,
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: r.bool,
  className: r.string,
  /**
   * If `true`, the popover or modal will close after submitting the full date.
   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).
   */
  closeOnSelect: r.bool,
  /**
   * The default value.
   * Used when the component is not controlled.
   */
  defaultValue: r.object,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: r.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: r.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: r.bool,
  /**
   * If `true`, the open picker button will not be rendered (renders only the field).
   * @default false
   */
  disableOpenPicker: r.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: r.bool,
  /**
   * @default false
   */
  enableAccessibleFieldDOMStructure: r.any,
  /**
   * Format of the date when rendered in the input(s).
   * Defaults to localized format based on the used `views`.
   */
  format: r.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: r.oneOf(["dense", "spacious"]),
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Rn,
  /**
   * The label content.
   */
  label: r.node,
  /**
   * Locale for components texts.
   * Allows overriding texts coming from `LocalizationProvider` and `theme`.
   */
  localeText: r.object,
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: r.object,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: r.object,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: r.number,
  /**
   * Name attribute used by the `input` element in the Field.
   */
  name: r.string,
  /**
   * Callback fired when the value is accepted.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The value that was just accepted.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onAccept: r.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: r.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see `open`).
   */
  onClose: r.func,
  /**
   * Callback fired when the error associated with the current value changes.
   * When a validation error is detected, the `error` parameter contains a non-null value.
   * This can be used to render an appropriate form error.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @param {TError} error The reason why the current value is not valid.
   * @param {TValue} value The value associated with the error.
   */
  onError: r.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see `open`).
   */
  onOpen: r.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: r.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: r.func,
  /**
   * Control the popup or dialog open state.
   * @default false
   */
  open: r.bool,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: r.oneOf(["hours", "meridiem", "minutes", "seconds"]),
  /**
   * Force rendering in particular orientation.
   */
  orientation: r.oneOf(["landscape", "portrait"]),
  readOnly: r.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: r.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.
   */
  referenceDate: r.object,
  /**
   * The currently selected sections.
   * This prop accepts four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 3. If `"all"` is provided, all the sections will be selected.
   * 4. If `null` is provided, no section will be selected.
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: r.oneOfType([r.oneOf(["all", "day", "empty", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), r.number]),
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: r.func,
  /**
   * If `true`, disabled digital clock items will not be rendered.
   * @default false
   */
  skipDisabled: r.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: r.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * Amount of time options below or at which the single column time renderer is used.
   * @default 24
   */
  thresholdToRenderTimeInASingleColumn: r.number,
  /**
   * The time steps between two time unit options.
   * For example, if `timeStep.minutes = 8`, then the available minute options will be `[0, 8, 16, 24, 32, 40, 48, 56]`.
   * When single column time renderer is used, only `timeStep.minutes` will be used.
   * @default{ hours: 1, minutes: 5, seconds: 5 }
   */
  timeSteps: r.shape({
    hours: r.number,
    minutes: r.number,
    seconds: r.number
  }),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: r.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: r.object,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: r.oneOf(["hours", "meridiem", "minutes", "seconds"]),
  /**
   * Define custom view renderers for each section.
   * If `null`, the section will only have field editing.
   * If `undefined`, internally defined view will be used.
   */
  viewRenderers: r.shape({
    hours: r.func,
    meridiem: r.func,
    minutes: r.func,
    seconds: r.func
  }),
  /**
   * Available views.
   */
  views: r.arrayOf(r.oneOf(["hours", "minutes", "seconds"]).isRequired)
};
const YC = /* @__PURE__ */ S.forwardRef(function(t, n) {
  var d, p;
  const o = pn(), i = gt(), s = UC(t, "MuiMobileTimePicker"), a = V({
    hours: Bi,
    minutes: Bi,
    seconds: Bi
  }, s.viewRenderers), l = s.ampmInClock ?? !1, c = V({}, s, {
    ampmInClock: l,
    viewRenderers: a,
    format: pc(i, s),
    slots: V({
      field: Em
    }, s.slots),
    slotProps: V({}, s.slotProps, {
      field: (m) => {
        var g;
        return V({}, kr((g = s.slotProps) == null ? void 0 : g.field, m), gs(s), {
          ref: n
        });
      },
      toolbar: V({
        hidden: !1,
        ampmInClock: l
      }, (d = s.slotProps) == null ? void 0 : d.toolbar)
    })
  }), {
    renderPicker: u
  } = Tm({
    props: c,
    valueManager: rn,
    valueType: "time",
    getOpenDialogAriaText: fs({
      utils: i,
      formatKey: "fullTime",
      contextTranslation: o.openTimePickerDialogue,
      propsTranslation: (p = c.localeText) == null ? void 0 : p.openTimePickerDialogue
    }),
    validator: Xa
  });
  return u();
});
YC.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default utils.is12HourCycleInCurrentLocale()
   */
  ampm: r.bool,
  /**
   * Display ampm controls under the clock (instead of in the toolbar).
   * @default true on desktop, false on mobile
   */
  ampmInClock: r.bool,
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: r.bool,
  className: r.string,
  /**
   * If `true`, the popover or modal will close after submitting the full date.
   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).
   */
  closeOnSelect: r.bool,
  /**
   * The default value.
   * Used when the component is not controlled.
   */
  defaultValue: r.object,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: r.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: r.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: r.bool,
  /**
   * If `true`, the open picker button will not be rendered (renders only the field).
   * @default false
   */
  disableOpenPicker: r.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: r.bool,
  /**
   * @default false
   */
  enableAccessibleFieldDOMStructure: r.any,
  /**
   * Format of the date when rendered in the input(s).
   * Defaults to localized format based on the used `views`.
   */
  format: r.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: r.oneOf(["dense", "spacious"]),
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Rn,
  /**
   * The label content.
   */
  label: r.node,
  /**
   * Locale for components texts.
   * Allows overriding texts coming from `LocalizationProvider` and `theme`.
   */
  localeText: r.object,
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: r.object,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: r.object,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: r.number,
  /**
   * Name attribute used by the `input` element in the Field.
   */
  name: r.string,
  /**
   * Callback fired when the value is accepted.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The value that was just accepted.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onAccept: r.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: r.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see `open`).
   */
  onClose: r.func,
  /**
   * Callback fired when the error associated with the current value changes.
   * When a validation error is detected, the `error` parameter contains a non-null value.
   * This can be used to render an appropriate form error.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @param {TError} error The reason why the current value is not valid.
   * @param {TValue} value The value associated with the error.
   */
  onError: r.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see `open`).
   */
  onOpen: r.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: r.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: r.func,
  /**
   * Control the popup or dialog open state.
   * @default false
   */
  open: r.bool,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: r.oneOf(["hours", "minutes", "seconds"]),
  /**
   * Force rendering in particular orientation.
   */
  orientation: r.oneOf(["landscape", "portrait"]),
  readOnly: r.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: r.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.
   */
  referenceDate: r.object,
  /**
   * The currently selected sections.
   * This prop accepts four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 3. If `"all"` is provided, all the sections will be selected.
   * 4. If `null` is provided, no section will be selected.
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: r.oneOfType([r.oneOf(["all", "day", "empty", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), r.number]),
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: r.func,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: r.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: r.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: r.object,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: r.oneOf(["hours", "minutes", "seconds"]),
  /**
   * Define custom view renderers for each section.
   * If `null`, the section will only have field editing.
   * If `undefined`, internally defined view will be used.
   */
  viewRenderers: r.shape({
    hours: r.func,
    minutes: r.func,
    seconds: r.func
  }),
  /**
   * Available views.
   */
  views: r.arrayOf(r.oneOf(["hours", "minutes", "seconds"]).isRequired)
};
const dH = ["desktopModeMediaQuery"], ZC = /* @__PURE__ */ S.forwardRef(function(t, n) {
  const o = at({
    props: t,
    name: "MuiTimePicker"
  }), {
    desktopModeMediaQuery: i = cm
  } = o, s = Xe(o, dH);
  return Pr(i, {
    defaultMatches: !0
  }) ? /* @__PURE__ */ f.jsx(XC, V({
    ref: n
  }, s)) : /* @__PURE__ */ f.jsx(YC, V({
    ref: n
  }, s));
});
process.env.NODE_ENV !== "production" && (ZC.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * 12h/24h view for hour selection clock.
   * @default utils.is12HourCycleInCurrentLocale()
   */
  ampm: r.bool,
  /**
   * Display ampm controls under the clock (instead of in the toolbar).
   * @default true on desktop, false on mobile
   */
  ampmInClock: r.bool,
  /**
   * If `true`, the main element is focused during the first mount.
   * This main element is:
   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).
   * - the `input` element if there is a field rendered.
   */
  autoFocus: r.bool,
  className: r.string,
  /**
   * If `true`, the popover or modal will close after submitting the full date.
   * @default `true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).
   */
  closeOnSelect: r.bool,
  /**
   * The default value.
   * Used when the component is not controlled.
   */
  defaultValue: r.object,
  /**
   * CSS media query when `Mobile` mode will be changed to `Desktop`.
   * @default '@media (pointer: fine)'
   * @example '@media (min-width: 720px)' or theme.breakpoints.up("sm")
   */
  desktopModeMediaQuery: r.string,
  /**
   * If `true`, the picker and text field are disabled.
   * @default false
   */
  disabled: r.bool,
  /**
   * If `true`, disable values after the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disableFuture: r.bool,
  /**
   * Do not ignore date part when validating min/max time.
   * @default false
   */
  disableIgnoringDatePartForTimeValidation: r.bool,
  /**
   * If `true`, the open picker button will not be rendered (renders only the field).
   * @default false
   */
  disableOpenPicker: r.bool,
  /**
   * If `true`, disable values before the current date for date components, time for time components and both for date time components.
   * @default false
   */
  disablePast: r.bool,
  /**
   * @default false
   */
  enableAccessibleFieldDOMStructure: r.any,
  /**
   * Format of the date when rendered in the input(s).
   * Defaults to localized format based on the used `views`.
   */
  format: r.string,
  /**
   * Density of the format when rendered in the input.
   * Setting `formatDensity` to `"spacious"` will add a space before and after each `/`, `-` and `.` character.
   * @default "dense"
   */
  formatDensity: r.oneOf(["dense", "spacious"]),
  /**
   * Pass a ref to the `input` element.
   */
  inputRef: Rn,
  /**
   * The label content.
   */
  label: r.node,
  /**
   * Locale for components texts.
   * Allows overriding texts coming from `LocalizationProvider` and `theme`.
   */
  localeText: r.object,
  /**
   * Maximal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  maxTime: r.object,
  /**
   * Minimal selectable time.
   * The date part of the object will be ignored unless `props.disableIgnoringDatePartForTimeValidation === true`.
   */
  minTime: r.object,
  /**
   * Step over minutes.
   * @default 1
   */
  minutesStep: r.number,
  /**
   * Name attribute used by the `input` element in the Field.
   */
  name: r.string,
  /**
   * Callback fired when the value is accepted.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The value that was just accepted.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onAccept: r.func,
  /**
   * Callback fired when the value changes.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @param {TValue} value The new value.
   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.
   */
  onChange: r.func,
  /**
   * Callback fired when the popup requests to be closed.
   * Use in controlled mode (see `open`).
   */
  onClose: r.func,
  /**
   * Callback fired when the error associated with the current value changes.
   * When a validation error is detected, the `error` parameter contains a non-null value.
   * This can be used to render an appropriate form error.
   * @template TError The validation error type. It will be either `string` or a `null`. It can be in `[start, end]` format in case of range value.
   * @template TValue The value type. It will be the same type as `value` or `null`. It can be in `[start, end]` format in case of range value.
   * @param {TError} error The reason why the current value is not valid.
   * @param {TValue} value The value associated with the error.
   */
  onError: r.func,
  /**
   * Callback fired when the popup requests to be opened.
   * Use in controlled mode (see `open`).
   */
  onOpen: r.func,
  /**
   * Callback fired when the selected sections change.
   * @param {FieldSelectedSections} newValue The new selected sections.
   */
  onSelectedSectionsChange: r.func,
  /**
   * Callback fired on view change.
   * @template TView
   * @param {TView} view The new view.
   */
  onViewChange: r.func,
  /**
   * Control the popup or dialog open state.
   * @default false
   */
  open: r.bool,
  /**
   * The default visible view.
   * Used when the component view is not controlled.
   * Must be a valid option from `views` list.
   */
  openTo: r.oneOf(["hours", "meridiem", "minutes", "seconds"]),
  /**
   * Force rendering in particular orientation.
   */
  orientation: r.oneOf(["landscape", "portrait"]),
  readOnly: r.bool,
  /**
   * If `true`, disable heavy animations.
   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13
   */
  reduceAnimations: r.bool,
  /**
   * The date used to generate the new value when both `value` and `defaultValue` are empty.
   * @default The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`.
   */
  referenceDate: r.object,
  /**
   * The currently selected sections.
   * This prop accepts four formats:
   * 1. If a number is provided, the section at this index will be selected.
   * 2. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.
   * 3. If `"all"` is provided, all the sections will be selected.
   * 4. If `null` is provided, no section will be selected.
   * If not provided, the selected sections will be handled internally.
   */
  selectedSections: r.oneOfType([r.oneOf(["all", "day", "empty", "hours", "meridiem", "minutes", "month", "seconds", "weekDay", "year"]), r.number]),
  /**
   * Disable specific time.
   * @template TDate
   * @param {TDate} value The value to check.
   * @param {TimeView} view The clock type of the timeValue.
   * @returns {boolean} If `true` the time will be disabled.
   */
  shouldDisableTime: r.func,
  /**
   * If `true`, disabled digital clock items will not be rendered.
   * @default false
   */
  skipDisabled: r.bool,
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: r.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: r.object,
  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: r.oneOfType([r.arrayOf(r.oneOfType([r.func, r.object, r.bool])), r.func, r.object]),
  /**
   * Amount of time options below or at which the single column time renderer is used.
   * @default 24
   */
  thresholdToRenderTimeInASingleColumn: r.number,
  /**
   * The time steps between two time unit options.
   * For example, if `timeStep.minutes = 8`, then the available minute options will be `[0, 8, 16, 24, 32, 40, 48, 56]`.
   * When single column time renderer is used, only `timeStep.minutes` will be used.
   * @default{ hours: 1, minutes: 5, seconds: 5 }
   */
  timeSteps: r.shape({
    hours: r.number,
    minutes: r.number,
    seconds: r.number
  }),
  /**
   * Choose which timezone to use for the value.
   * Example: "default", "system", "UTC", "America/New_York".
   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.
   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.
   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.
   */
  timezone: r.string,
  /**
   * The selected value.
   * Used when the component is controlled.
   */
  value: r.object,
  /**
   * The visible view.
   * Used when the component view is controlled.
   * Must be a valid option from `views` list.
   */
  view: r.oneOf(["hours", "meridiem", "minutes", "seconds"]),
  /**
   * Define custom view renderers for each section.
   * If `null`, the section will only have field editing.
   * If `undefined`, internally defined view will be used.
   */
  viewRenderers: r.shape({
    hours: r.func,
    meridiem: r.func,
    minutes: r.func,
    seconds: r.func
  }),
  /**
   * Available views.
   */
  views: r.arrayOf(r.oneOf(["hours", "minutes", "seconds"]).isRequired)
});
const zi = (e) => {
  var t, n, o, i;
  return (i = (t = e.id) !== null && t !== void 0 ? t : (o = (n = e.accessorKey) === null || n === void 0 ? void 0 : n.toString) === null || o === void 0 ? void 0 : o.call(n)) !== null && i !== void 0 ? i : e.header;
}, bc = (e) => {
  const t = [], n = (o) => {
    o.forEach((i) => {
      i.columns ? n(i.columns) : t.push(i);
    });
  };
  return n(e), t;
}, qC = ({ columnDefs: e, tableOptions: t }) => {
  const { aggregationFns: n = {}, defaultDisplayColumn: o, filterFns: i = {}, sortingFns: s = {}, state: { columnFilterFns: a = {} } = {} } = t;
  return e.map((l) => {
    var c, u;
    if (l.id || (l.id = zi(l)), l.columnDefType || (l.columnDefType = "data"), !((c = l.columns) === null || c === void 0) && c.length)
      l.columnDefType = "group", l.columns = qC({
        columnDefs: l.columns,
        tableOptions: t
      });
    else if (l.columnDefType === "data") {
      if (Array.isArray(l.aggregationFn)) {
        const d = l.aggregationFn;
        l.aggregationFn = (p, m, g) => d.map((h) => {
          var v;
          return (v = n[h]) === null || v === void 0 ? void 0 : v.call(n, p, m, g);
        });
      }
      Object.keys(i).includes(a[l.id]) && (l.filterFn = (u = i[a[l.id]]) !== null && u !== void 0 ? u : i.fuzzy, l._filterFn = a[l.id]), Object.keys(s).includes(l.sortingFn) && (l.sortingFn = s[l.sortingFn]);
    } else l.columnDefType === "display" && (l = Object.assign(Object.assign({}, o), l));
    return l;
  });
}, JC = (e, t, n) => {
  e.getCanPin() && e.pin(t.getIsPinned());
  const o = [...n];
  return o.splice(o.indexOf(t.id), 0, o.splice(o.indexOf(e.id), 1)[0]), o;
}, pH = (e) => {
  const { filterVariant: t } = e;
  return t === "multi-select" ? "arrIncludesSome" : t != null && t.includes("range") ? "betweenInclusive" : t === "select" || t === "checkbox" ? "equals" : "fuzzy";
}, $u = ({ header: e, table: t }) => {
  var n;
  const { options: { columnFilterModeOptions: o } } = t, { column: i } = e, { columnDef: s } = i, { filterVariant: a } = s, l = !!(a != null && a.startsWith("date") || a != null && a.startsWith("time")), c = a === "autocomplete", u = (a == null ? void 0 : a.includes("range")) || ["between", "betweenInclusive", "inNumberRange"].includes(s._filterFn), d = a === "select", p = a === "multi-select", m = ["autocomplete", "text"].includes(a) || !d && !p, g = s._filterFn, h = (n = s == null ? void 0 : s.columnFilterModeOptions) !== null && n !== void 0 ? n : o, v = i.getFacetedUniqueValues();
  return {
    allowedColumnFilterOptions: h,
    currentFilterOption: g,
    facetedUniqueValues: v,
    isAutocompleteFilter: c,
    isDateFilter: l,
    isMultiSelectFilter: p,
    isRangeFilter: u,
    isSelectFilter: d,
    isTextboxFilter: m
  };
}, KC = ({ header: e, table: t }) => {
  const { column: n } = e, { columnDef: o } = n, { facetedUniqueValues: i, isAutocompleteFilter: s, isMultiSelectFilter: a, isSelectFilter: l } = $u({ header: e, table: t });
  return St(() => {
    var c;
    return (c = o.filterSelectOptions) !== null && c !== void 0 ? c : (l || a || s) && i ? Array.from(i.keys()).filter((u) => u != null).sort((u, d) => u.localeCompare(d)) : void 0;
  }, [
    o.filterSelectOptions,
    i,
    a,
    l
  ]);
}, fH = (e, t, n = -1, o = 0, i, s) => Ga(e, "mrt-row-create", Object.assign({}, ...bc(e.options.columns).map((a) => ({
  [zi(a)]: ""
}))), n, o, i, s), mH = (e, t, n) => {
  let o = 0;
  return e.columnFiltersMeta[n] && (o = W$(e.columnFiltersMeta[n], t.columnFiltersMeta[n])), o === 0 ? Zr.alphanumeric(e, t, n) : o;
}, gH = Object.assign(Object.assign({}, Zr), { fuzzy: mH }), hH = (e, t) => Math.max(...Object.values(t.columnFiltersMeta).map((n) => n.rank)) - Math.max(...Object.values(e.columnFiltersMeta).map((n) => n.rank)), Se = (e, t) => e instanceof Function ? e(t) : e, or = (e) => {
  var t, n;
  let o = "", i = "";
  return e && (typeof e != "object" ? (o = e, i = e) : (o = (t = e.label) !== null && t !== void 0 ? t : e.value, i = (n = e.value) !== null && n !== void 0 ? n : o)), { label: o, value: i };
}, QC = (e, t) => {
  const { getCenterRows: n, getPrePaginationRowModel: o, getRowModel: i, getState: s, getTopRows: a, options: { createDisplayMode: l, enablePagination: c, enableRowPinning: u, manualPagination: d, positionCreatingRow: p, rowPinningDisplayMode: m } } = e, { creatingRow: g, pagination: h } = s(), v = bH(e);
  let b = [];
  if (!v)
    b = !u || m != null && m.includes("sticky") ? t ? o().rows : i().rows : n();
  else {
    if (b = o().rows.sort((y, C) => hH(y, C)), c && !d && !t) {
      const y = h.pageIndex * h.pageSize;
      b = b.slice(y, y + h.pageSize);
    }
    u && !(m != null && m.includes("sticky")) && (b = b.filter((y) => !y.getIsPinned()));
  }
  if (u && (m != null && m.includes("sticky"))) {
    const y = b.filter((C) => C.getIsPinned()).map((C) => C.id);
    b = [
      ...a().filter((C) => !y.includes(C.id)),
      ...b
    ];
  }
  if (p !== void 0 && g && l === "row") {
    const y = isNaN(+p) ? p === "top" ? 0 : b.length : +p;
    b = [
      ...b.slice(0, y),
      g,
      ...b.slice(y)
    ];
  }
  return b;
}, eS = (e) => {
  const { getState: t, options: { enableGlobalFilterRankedResults: n, manualExpanding: o, manualFiltering: i, manualGrouping: s, manualSorting: a } } = e, { expanded: l, globalFilterFn: c } = t();
  return !o && !i && !s && !a && n && c === "fuzzy" && l !== !0 && !Object.values(l).some(Boolean);
}, bH = (e) => {
  const { globalFilter: t, sorting: n } = e.getState();
  return eS(e) && t && !Object.values(n).some(Boolean);
}, vc = ({ row: e, table: t }) => {
  const { options: { enableRowSelection: n } } = t;
  return e.getIsSelected() || Se(n, e) && e.getCanSelectSubRows() && e.getIsAllSubRowsSelected();
}, tS = ({ row: e, staticRowIndex: t = 0, table: n }) => (o, i) => {
  var s;
  const { getState: a, options: { enableBatchRowSelection: l, enableMultiRowSelection: c, enableRowPinning: u, manualPagination: d, rowPinningDisplayMode: p }, refs: { lastSelectedRowId: m } } = n, { pagination: { pageIndex: g, pageSize: h } } = a(), v = d ? 0 : h * g, b = vc({ row: e, table: n });
  e.toggleSelected(i ?? !b);
  const y = /* @__PURE__ */ new Set([e.id]);
  if (l && c && o.nativeEvent.shiftKey && m.current !== null) {
    const C = QC(n, !0), x = C.findIndex((T) => T.id === m.current);
    if (x !== -1) {
      const T = vc({
        row: C == null ? void 0 : C[x],
        table: n
      }), w = t + v, [R, E] = x < w ? [x, w] : [w, x];
      if (b !== T)
        for (let O = R; O <= E; O++)
          C[O].toggleSelected(!b), y.add(C[O].id);
    }
  }
  m.current = e.id, e.getCanSelectSubRows() && e.getIsAllSubRowsSelected() && ((s = e.subRows) === null || s === void 0 || s.forEach((C) => C.toggleSelected(!1))), u && (p != null && p.includes("select")) && y.forEach((C) => {
    n.getRow(C).pin(b ? !1 : p != null && p.includes("bottom") ? "bottom" : "top");
  });
}, Pm = ({ table: e }) => (t, n, o) => {
  const { options: { enableRowPinning: i, rowPinningDisplayMode: s, selectAllMode: a }, refs: { lastSelectedRowId: l } } = e;
  a === "all" || o ? e.toggleAllRowsSelected(n ?? t.target.checked) : e.toggleAllPageRowsSelected(n ?? t.target.checked), i && (s != null && s.includes("select")) && e.setRowPinning({ bottom: [], top: [] }), l.current = null;
}, Tl = (e) => e.ctrlKey && navigator.platform.toLowerCase().includes("win") || e.metaKey && navigator.platform.toLowerCase().includes("mac"), nS = ({ cell: e, table: t }) => {
  const { enableEditing: n } = t.options, { column: { columnDef: o }, row: i } = e;
  return !e.getIsPlaceholder() && Se(n, i) && Se(o.enableEditing, i) !== !1;
}, oS = ({ cell: e, table: t }) => {
  const { options: { editDisplayMode: n }, refs: { editInputRefs: o } } = t, { column: i } = e;
  nS({ cell: e, table: t }) && n === "cell" && (t.setEditingCell(e), queueMicrotask(() => {
    var s;
    const a = o.current[i.id];
    a && (a.focus(), (s = a.select) === null || s === void 0 || s.call(a));
  }));
}, Am = ({ cell: e, cellElements: t, cellValue: n, containerElement: o, event: i, header: s, parentElement: a, table: l }) => {
  var c, u, d, p, m, g, h, v;
  if (!l.options.enableKeyboardShortcuts)
    return;
  const b = i.currentTarget;
  if (n && Tl(i) && i.key === "c")
    navigator.clipboard.writeText(n);
  else if (["Enter", " "].includes(i.key))
    if (((c = e == null ? void 0 : e.column) === null || c === void 0 ? void 0 : c.id) === "mrt-row-select")
      i.preventDefault(), tS({
        row: e.row,
        table: l,
        //@ts-ignore
        staticRowIndex: +i.target.getAttribute("data-index")
      })(i);
    else if (((u = s == null ? void 0 : s.column) === null || u === void 0 ? void 0 : u.id) === "mrt-row-select" && l.options.enableSelectAll)
      i.preventDefault(), Pm({
        table: l
      })(i);
    else if (((d = e == null ? void 0 : e.column) === null || d === void 0 ? void 0 : d.id) === "mrt-row-expand" && (e.row.getCanExpand() || !((m = (p = l.options).renderDetailPanel) === null || m === void 0) && m.call(p, { row: e.row, table: l })))
      i.preventDefault(), e.row.toggleExpanded();
    else if (((g = s == null ? void 0 : s.column) === null || g === void 0 ? void 0 : g.id) === "mrt-row-expand" && l.options.enableExpandAll)
      i.preventDefault(), l.toggleAllRowsExpanded();
    else if ((e == null ? void 0 : e.column.id) === "mrt-row-pin")
      i.preventDefault(), e.row.getIsPinned() ? e.row.pin(!1) : e.row.pin(!((h = l.options.rowPinningDisplayMode) === null || h === void 0) && h.includes("bottom") ? "bottom" : "top");
    else if (s && Tl(i)) {
      const y = b.querySelector(`button[aria-label="${l.options.localization.columnActions}"]`);
      y && y.click();
    } else !((v = s == null ? void 0 : s.column) === null || v === void 0) && v.getCanSort() && (i.preventDefault(), s.column.toggleSorting());
  else if ([
    "ArrowRight",
    "ArrowLeft",
    "ArrowUp",
    "ArrowDown",
    "Home",
    "End",
    "PageUp",
    "PageDown"
  ].includes(i.key)) {
    i.preventDefault();
    const y = a || b.closest("tr"), C = o || b.closest("table"), x = t || Array.from((C == null ? void 0 : C.querySelectorAll("th, td")) || []), T = x.indexOf(b), w = parseInt(b.getAttribute("data-index") || "0");
    let R;
    const E = (P, A) => {
      var D;
      const k = P === "c" ? y : P === "f" ? C == null ? void 0 : C.querySelector("tr") : (D = C == null ? void 0 : C.lastElementChild) === null || D === void 0 ? void 0 : D.lastElementChild, M = Array.from((k == null ? void 0 : k.children) || []);
      return A === "f" ? M[0] : M[M.length - 1];
    }, O = (P, A) => {
      var D;
      const k = A === "t" ? C == null ? void 0 : C.querySelector("tr") : (D = C == null ? void 0 : C.lastElementChild) === null || D === void 0 ? void 0 : D.lastElementChild;
      return Array.from((k == null ? void 0 : k.children) || [])[P];
    }, I = (P, A) => (A === "f" ? x.slice(T + 1) : x.slice(0, T).reverse()).find((k) => k.matches(`[data-index="${P}"]`));
    switch (i.key) {
      case "ArrowRight":
        R = I(w + 1, "f");
        break;
      case "ArrowLeft":
        R = I(w - 1, "b");
        break;
      case "ArrowUp":
        R = I(w, "b");
        break;
      case "ArrowDown":
        R = I(w, "f");
        break;
      case "Home":
        R = E(Tl(i) ? "f" : "c", "f");
        break;
      case "End":
        R = E(Tl(i) ? "l" : "c", "l");
        break;
      case "PageUp":
        R = O(w, "t");
        break;
      case "PageDown":
        R = O(w, "b");
        break;
    }
    R && R.focus();
  }
};
function bi({ header: e, id: t, size: n, tableOptions: o }) {
  const { defaultDisplayColumn: i, displayColumnDefOptions: s, localization: a } = o;
  return Object.assign(Object.assign(Object.assign(Object.assign({}, i), { header: e ? a[e] : "", size: n }), s == null ? void 0 : s[t]), { id: t });
}
const rS = (e) => {
  const { enableRowPinning: t, rowPinningDisplayMode: n } = e;
  return !!(t && !(n != null && n.startsWith("select")));
}, iS = (e) => {
  const { enableRowDragging: t, enableRowOrdering: n } = e;
  return !!(t || n);
}, Dm = (e) => {
  const { enableExpanding: t, enableGrouping: n, renderDetailPanel: o, state: { grouping: i } } = e;
  return !!(t || n && (i != null && i.length) || o);
}, Mm = (e) => {
  const { createDisplayMode: t, editDisplayMode: n, enableEditing: o, enableRowActions: i, state: { creatingRow: s } } = e;
  return !!(i || s && t === "row" || o && ["modal", "row"].includes(n ?? ""));
}, sS = (e) => !!e.enableRowSelection, aS = (e) => !!e.enableRowNumbers, lS = (e) => e.layoutMode === "grid-no-grow", vH = (e) => [
  rS(e) && "mrt-row-pin",
  iS(e) && "mrt-row-drag",
  e.positionActionsColumn === "first" && Mm(e) && "mrt-row-actions",
  e.positionExpandColumn === "first" && Dm(e) && "mrt-row-expand",
  sS(e) && "mrt-row-select",
  aS(e) && "mrt-row-numbers"
].filter(Boolean), yH = (e) => [
  e.positionActionsColumn === "last" && Mm(e) && "mrt-row-actions",
  e.positionExpandColumn === "last" && Dm(e) && "mrt-row-expand",
  lS(e) && "mrt-row-spacer"
].filter(Boolean), jm = (e, t = !1) => {
  const { state: { columnOrder: n = [] } } = e, o = vH(e), i = yH(e), s = bc(e.columns).map((l) => zi(l));
  let a = t ? s : Array.from(/* @__PURE__ */ new Set([...n, ...s]));
  return a = a.filter((l) => !o.includes(l) && !i.includes(l)), [
    ...o,
    ...a,
    ...i
  ];
}, xH = Object.assign({}, Gl), cS = (e, t, n, o) => {
  const i = _$(e.getValue(t), n, {
    threshold: Fn.MATCHES
  });
  return o(i), i.passed;
};
cS.autoRemove = (e) => !e;
const uS = (e, t, n) => {
  var o;
  return !!(!((o = e.getValue(t)) === null || o === void 0) && o.toString().toLowerCase().trim().includes(n.toString().toLowerCase().trim()));
};
uS.autoRemove = (e) => !e;
const dS = (e, t, n) => {
  var o;
  return !!(!((o = e.getValue(t)) === null || o === void 0) && o.toString().toLowerCase().trim().startsWith(n.toString().toLowerCase().trim()));
};
dS.autoRemove = (e) => !e;
const pS = (e, t, n) => {
  var o;
  return !!(!((o = e.getValue(t)) === null || o === void 0) && o.toString().toLowerCase().trim().endsWith(n.toString().toLowerCase().trim()));
};
pS.autoRemove = (e) => !e;
const Lu = (e, t, n) => {
  var o;
  return ((o = e.getValue(t)) === null || o === void 0 ? void 0 : o.toString().toLowerCase().trim()) === n.toString().toLowerCase().trim();
};
Lu.autoRemove = (e) => !e;
const fS = (e, t, n) => {
  var o;
  return ((o = e.getValue(t)) === null || o === void 0 ? void 0 : o.toString().toLowerCase().trim()) !== n.toString().toLowerCase().trim();
};
fS.autoRemove = (e) => !e;
const _u = (e, t, n) => {
  var o, i, s;
  return !isNaN(+n) && !isNaN(+e.getValue(t)) ? +((o = e.getValue(t)) !== null && o !== void 0 ? o : 0) > +n : ((s = (i = e.getValue(t)) !== null && i !== void 0 ? i : "") === null || s === void 0 ? void 0 : s.toString().toLowerCase().trim()) > n.toString().toLowerCase().trim();
};
_u.autoRemove = (e) => !e;
const km = (e, t, n) => Lu(e, t, n) || _u(e, t, n);
km.autoRemove = (e) => !e;
const Bu = (e, t, n) => {
  var o, i, s;
  return !isNaN(+n) && !isNaN(+e.getValue(t)) ? +((o = e.getValue(t)) !== null && o !== void 0 ? o : 0) < +n : ((s = (i = e.getValue(t)) !== null && i !== void 0 ? i : "") === null || s === void 0 ? void 0 : s.toString().toLowerCase().trim()) < n.toString().toLowerCase().trim();
};
Bu.autoRemove = (e) => !e;
const Fm = (e, t, n) => Lu(e, t, n) || Bu(e, t, n);
Fm.autoRemove = (e) => !e;
const mS = (e, t, n) => (["", void 0].includes(n[0]) || _u(e, t, n[0])) && (!isNaN(+n[0]) && !isNaN(+n[1]) && +n[0] > +n[1] || ["", void 0].includes(n[1]) || Bu(e, t, n[1]));
mS.autoRemove = (e) => !e;
const gS = (e, t, n) => (["", void 0].includes(n[0]) || km(e, t, n[0])) && (!isNaN(+n[0]) && !isNaN(+n[1]) && +n[0] > +n[1] || ["", void 0].includes(n[1]) || Fm(e, t, n[1]));
gS.autoRemove = (e) => !e;
const hS = (e, t, n) => {
  var o;
  return !(!((o = e.getValue(t)) === null || o === void 0) && o.toString().trim());
};
hS.autoRemove = (e) => !e;
const bS = (e, t, n) => {
  var o;
  return !!(!((o = e.getValue(t)) === null || o === void 0) && o.toString().trim());
};
bS.autoRemove = (e) => !e;
const CH = Object.assign(Object.assign({}, _o), {
  between: mS,
  betweenInclusive: gS,
  contains: uS,
  empty: hS,
  endsWith: pS,
  equals: Lu,
  fuzzy: cS,
  greaterThan: _u,
  greaterThanOrEqualTo: km,
  lessThan: Bu,
  lessThanOrEqualTo: Fm,
  notEmpty: bS,
  notEquals: fS,
  startsWith: dS
});
function Je(e, t) {
  var n = {};
  for (var o in e) Object.prototype.hasOwnProperty.call(e, o) && t.indexOf(o) < 0 && (n[o] = e[o]);
  if (e != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, o = Object.getOwnPropertySymbols(e); i < o.length; i++)
      t.indexOf(o[i]) < 0 && Object.prototype.propertyIsEnumerable.call(e, o[i]) && (n[o[i]] = e[o[i]]);
  return n;
}
const vS = (e) => {
  var { row: t, table: n, variant: o = "icon" } = e, i = Je(e, ["row", "table", "variant"]);
  const { getState: s, options: { icons: { CancelIcon: a, SaveIcon: l }, localization: c, onCreatingRowCancel: u, onCreatingRowSave: d, onEditingRowCancel: p, onEditingRowSave: m }, refs: { editInputRefs: g }, setCreatingRow: h, setEditingRow: v } = n, { creatingRow: b, editingRow: y, isSaving: C } = s(), x = (b == null ? void 0 : b.id) === t.id, T = (y == null ? void 0 : y.id) === t.id, w = () => {
    x ? (u == null || u({ row: t, table: n }), h(null)) : T && (p == null || p({ row: t, table: n }), v(null)), t._valuesCache = {};
  }, R = () => {
    var E;
    (E = Object.values(g == null ? void 0 : g.current).filter((O) => {
      var I, P;
      return t.id === ((P = (I = O == null ? void 0 : O.name) === null || I === void 0 ? void 0 : I.split("_")) === null || P === void 0 ? void 0 : P[0]);
    })) === null || E === void 0 || E.forEach((O) => {
      O.value !== void 0 && Object.hasOwn(t == null ? void 0 : t._valuesCache, O.name) && (t._valuesCache[O.name] = O.value);
    }), x ? d == null || d({
      exitCreatingMode: () => h(null),
      row: t,
      table: n,
      values: t._valuesCache
    }) : T && (m == null || m({
      exitEditingMode: () => v(null),
      row: t,
      table: n,
      values: t == null ? void 0 : t._valuesCache
    }));
  };
  return f.jsx(De, { onClick: (E) => E.stopPropagation(), sx: (E) => Object.assign({ display: "flex", gap: "0.75rem" }, Se(i == null ? void 0 : i.sx, E)), children: o === "icon" ? f.jsxs(f.Fragment, { children: [f.jsx(Tt, { title: c.cancel, children: f.jsx(lt, { "aria-label": c.cancel, onClick: w, children: f.jsx(a, {}) }) }), (x && d || T && m) && f.jsx(Tt, { title: c.save, children: f.jsx(lt, { "aria-label": c.save, color: "info", disabled: C, onClick: R, children: C ? f.jsx(ii, { size: 18 }) : f.jsx(l, {}) }) })] }) : f.jsxs(f.Fragment, { children: [f.jsx(vt, { onClick: w, sx: { minWidth: "100px" }, children: c.cancel }), f.jsxs(vt, { disabled: C, onClick: R, sx: { minWidth: "100px" }, variant: "contained", children: [C && f.jsx(ii, { color: "inherit", size: 18 }), c.save] })] }) });
}, ta = (e) => e.replace(/[^a-zA-Z0-9]/g, "_"), SH = (e, t) => {
  var n;
  const o = Se(e, t), i = (n = o == null ? void 0 : o.baseBackgroundColor) !== null && n !== void 0 ? n : t.palette.mode === "dark" ? $n(t.palette.background.default, 0.05) : t.palette.background.default;
  return Object.assign({ baseBackgroundColor: i, cellNavigationOutlineColor: t.palette.primary.main, draggingBorderColor: t.palette.primary.main, matchHighlightColor: t.palette.mode === "dark" ? no(t.palette.warning.dark, 0.25) : $n(t.palette.warning.light, 0.5), menuBackgroundColor: $n(i, 0.07), pinnedRowBackgroundColor: ze(t.palette.primary.main, 0.1), selectedRowBackgroundColor: ze(t.palette.primary.main, 0.2) }, o);
}, _p = {
  content: '""',
  height: "100%",
  left: 0,
  position: "absolute",
  top: 0,
  width: "100%",
  zIndex: -1
}, yS = ({ column: e, table: t, theme: n }) => {
  const { baseBackgroundColor: o } = t.options.mrtTheme, i = e == null ? void 0 : e.getIsPinned();
  return {
    '&[data-pinned="true"]': {
      "&:before": Object.assign({ backgroundColor: ze(no(o, n.palette.mode === "dark" ? 0.05 : 0.01), 0.97), boxShadow: e ? i === "left" && e.getIsLastColumn(i) ? `-4px 0 4px -4px ${ze(n.palette.grey[700], 0.5)} inset` : i === "right" && e.getIsFirstColumn(i) ? `4px 0 4px -4px ${ze(n.palette.grey[700], 0.5)} inset` : void 0 : void 0 }, _p)
    }
  };
}, Nm = ({ column: e, header: t, table: n, tableCellProps: o, theme: i }) => {
  var s, a, l, c, u, d;
  const { getState: p, options: { enableColumnVirtualization: m, layoutMode: g } } = n, { draggingColumn: h } = p(), { columnDef: v } = e, { columnDefType: b } = v, y = v.columnDefType !== "group" && e.getIsPinned(), C = {
    minWidth: `max(calc(var(--${t ? "header" : "col"}-${ta((s = t == null ? void 0 : t.id) !== null && s !== void 0 ? s : e.id)}-size) * 1px), ${(a = v.minSize) !== null && a !== void 0 ? a : 30}px)`,
    width: `calc(var(--${t ? "header" : "col"}-${ta((l = t == null ? void 0 : t.id) !== null && l !== void 0 ? l : e.id)}-size) * 1px)`
  };
  g === "grid" ? C.flex = `${[0, !1].includes(v.grow) ? 0 : `var(--${t ? "header" : "col"}-${ta((c = t == null ? void 0 : t.id) !== null && c !== void 0 ? c : e.id)}-size)`} 0 auto` : g === "grid-no-grow" && (C.flex = `${+(v.grow || 0)} 0 auto`);
  const x = y ? Object.assign(Object.assign({}, yS({ column: e, table: n, theme: i })), { left: y === "left" ? `${e.getStart("left")}px` : void 0, opacity: 0.97, position: "sticky", right: y === "right" ? `${e.getAfter("right")}px` : void 0 }) : {};
  return Object.assign(Object.assign(Object.assign({ backgroundColor: "inherit", backgroundImage: "inherit", display: g != null && g.startsWith("grid") ? "flex" : void 0, justifyContent: b === "group" ? "center" : g != null && g.startsWith("grid") ? o.align : void 0, opacity: ((u = n.getState().draggingColumn) === null || u === void 0 ? void 0 : u.id) === e.id || ((d = n.getState().hoveredColumn) === null || d === void 0 ? void 0 : d.id) === e.id ? 0.5 : 1, position: "relative", transition: m ? "none" : "padding 150ms ease-in-out", zIndex: e.getIsResizing() || (h == null ? void 0 : h.id) === e.id ? 2 : b !== "group" && y ? 1 : 0, "&:focus-visible": {
    outline: `2px solid ${n.options.mrtTheme.cellNavigationOutlineColor}`,
    outlineOffset: "-2px"
  } }, x), C), Se(o == null ? void 0 : o.sx, i));
}, xS = ({ table: e }) => ({
  alignItems: "flex-start",
  backgroundColor: e.options.mrtTheme.baseBackgroundColor,
  display: "grid",
  flexWrap: "wrap-reverse",
  minHeight: "3.5rem",
  overflow: "hidden",
  position: "relative",
  transition: "all 150ms ease-in-out",
  zIndex: 1
}), Il = (e) => e.direction === "rtl" ? { style: { transform: "scaleX(-1)" } } : void 0, To = (e) => ({
  disableInteractive: !0,
  enterDelay: 1e3,
  enterNextDelay: 1e3,
  placement: e
}), Pn = (e) => {
  var { icon: t, label: n, onOpenSubMenu: o, table: i } = e, s = Je(e, ["icon", "label", "onOpenSubMenu", "table"]);
  const { options: { icons: { ArrowRightIcon: a } } } = i;
  return f.jsxs(Mo, Object.assign({ sx: {
    alignItems: "center",
    justifyContent: "space-between",
    minWidth: "120px",
    my: 0,
    py: "6px"
  }, tabIndex: 0 }, s, { children: [f.jsxs(De, { sx: {
    alignItems: "center",
    display: "flex"
  }, children: [f.jsx(C0, { children: t }), n] }), o && f.jsx(lt, { onClick: o, onMouseEnter: o, size: "small", sx: { p: 0 }, children: f.jsx(a, {}) })] }));
}, wH = (e) => {
  var { anchorEl: t, handleEdit: n, row: o, setAnchorEl: i, staticRowIndex: s, table: a } = e, l = Je(e, ["anchorEl", "handleEdit", "row", "setAnchorEl", "staticRowIndex", "table"]);
  const { getState: c, options: { editDisplayMode: u, enableEditing: d, icons: { EditIcon: p }, localization: m, mrtTheme: { menuBackgroundColor: g }, renderRowActionMenuItems: h } } = a, { density: v } = c(), b = St(() => {
    const y = [], C = Se(d, o) && ["modal", "row"].includes(u) && f.jsx(Pn, { icon: f.jsx(p, {}), label: m.edit, onClick: n, table: a });
    C && y.push(C);
    const x = h == null ? void 0 : h({
      closeMenu: () => i(null),
      row: o,
      staticRowIndex: s,
      table: a
    });
    return x != null && x.length && y.push(...x), y;
  }, [h, o, s, a]);
  return b.length ? f.jsx(Lr, Object.assign({ MenuListProps: {
    dense: v === "compact",
    sx: {
      backgroundColor: g
    }
  }, anchorEl: t, disableScrollLock: !0, onClick: (y) => y.stopPropagation(), onClose: () => i(null), open: !!t }, l, { children: b })) : null;
}, ev = {
  "&:hover": {
    opacity: 1
  },
  height: "2rem",
  ml: "10px",
  opacity: 0.5,
  transition: "opacity 150ms",
  width: "2rem"
}, TH = (e) => {
  var t, { cell: n, row: o, staticRowIndex: i, table: s } = e, a = Je(e, ["cell", "row", "staticRowIndex", "table"]);
  const { getState: l, options: { createDisplayMode: c, editDisplayMode: u, enableEditing: d, icons: { EditIcon: p, MoreHorizIcon: m }, localization: g, renderRowActionMenuItems: h, renderRowActions: v }, setEditingRow: b } = s, { creatingRow: y, editingRow: C } = l(), x = (y == null ? void 0 : y.id) === o.id, T = (C == null ? void 0 : C.id) === o.id, w = x && c === "row" || T && u === "row", [R, E] = Re(null), O = (P) => {
    P.stopPropagation(), P.preventDefault(), E(P.currentTarget);
  }, I = (P) => {
    P.stopPropagation(), b(Object.assign({}, o)), E(null);
  };
  return f.jsx(f.Fragment, { children: v && !w ? v({ cell: n, row: o, staticRowIndex: i, table: s }) : w ? f.jsx(vS, { row: o, table: s }) : !h && Se(d, o) && ["modal", "row"].includes(u) ? f.jsx(Tt, { placement: "right", title: g.edit, children: f.jsx(lt, Object.assign({ "aria-label": g.edit, onClick: I, sx: ev }, a, { children: f.jsx(p, {}) })) }) : !((t = h == null ? void 0 : h({
    row: o,
    staticRowIndex: i,
    table: s
  })) === null || t === void 0) && t.length ? f.jsxs(f.Fragment, { children: [f.jsx(Tt, Object.assign({}, To(), { title: g.rowActions, children: f.jsx(lt, Object.assign({ "aria-label": g.rowActions, onClick: O, size: "small", sx: ev }, a, { children: f.jsx(m, {}) })) })), f.jsx(wH, { anchorEl: R, handleEdit: I, row: o, setAnchorEl: E, staticRowIndex: i, table: s })] }) : null });
}, IH = (e) => Object.assign({ Cell: ({ cell: t, row: n, staticRowIndex: o, table: i }) => f.jsx(TH, { cell: t, row: n, staticRowIndex: o, table: i }) }, bi({
  header: "actions",
  id: "mrt-row-actions",
  size: 70,
  tableOptions: e
})), Vm = (e) => {
  var t, n, { location: o, table: i } = e, s = Je(e, ["location", "table"]);
  const { options: { icons: { DragHandleIcon: a }, localization: l } } = i;
  return f.jsx(Tt, Object.assign({}, To("top"), { title: (t = s == null ? void 0 : s.title) !== null && t !== void 0 ? t : l.move, children: f.jsx(lt, Object.assign({ "aria-label": (n = s.title) !== null && n !== void 0 ? n : l.move, disableRipple: !0, draggable: "true", size: "small" }, s, { onClick: (c) => {
    var u;
    c.stopPropagation(), (u = s == null ? void 0 : s.onClick) === null || u === void 0 || u.call(s, c);
  }, sx: (c) => Object.assign({ "&:active": {
    cursor: "grabbing"
  }, "&:hover": {
    backgroundColor: "transparent",
    opacity: 1
  }, cursor: "grab", m: "0 -0.1rem", opacity: o === "row" ? 1 : 0.5, p: "2px", transition: "all 150ms ease-in-out" }, Se(s == null ? void 0 : s.sx, c)), title: void 0, children: f.jsx(a, {}) })) }));
}, RH = (e) => {
  var { row: t, rowRef: n, table: o } = e, i = Je(e, ["row", "rowRef", "table"]);
  const { options: { muiRowDragHandleProps: s } } = o, a = Object.assign(Object.assign({}, Se(s, {
    row: t,
    table: o
  })), i), l = (u) => {
    var d;
    (d = a == null ? void 0 : a.onDragStart) === null || d === void 0 || d.call(a, u);
    try {
      u.dataTransfer.setDragImage(n.current, 0, 0);
    } catch (p) {
      console.error(p);
    }
    o.setDraggingRow(t);
  }, c = (u) => {
    var d;
    (d = a == null ? void 0 : a.onDragEnd) === null || d === void 0 || d.call(a, u), o.setDraggingRow(null), o.setHoveredRow(null);
  };
  return f.jsx(Vm, Object.assign({}, a, { location: "row", onDragEnd: c, onDragStart: l, table: o }));
}, OH = (e) => Object.assign({ Cell: ({ row: t, rowRef: n, table: o }) => f.jsx(RH, { row: t, rowRef: n, table: o }), grow: !1 }, bi({
  header: "move",
  id: "mrt-row-drag",
  size: 60,
  tableOptions: e
})), EH = (e) => {
  var t, n, { table: o } = e, i = Je(e, ["table"]);
  const { getCanSomeRowsExpand: s, getIsAllRowsExpanded: a, getIsSomeRowsExpanded: l, getState: c, options: { icons: { KeyboardDoubleArrowDownIcon: u }, localization: d, muiExpandAllButtonProps: p, renderDetailPanel: m }, toggleAllRowsExpanded: g } = o, { density: h, isLoading: v } = c(), b = Object.assign(Object.assign({}, Se(p, {
    table: o
  })), i), y = a();
  return f.jsx(Tt, Object.assign({}, To(), { title: (t = b == null ? void 0 : b.title) !== null && t !== void 0 ? t : y ? d.collapseAll : d.expandAll, children: f.jsx("span", { children: f.jsx(lt, Object.assign({ "aria-label": d.expandAll, disabled: v || !m && !s(), onClick: () => g(!y) }, b, { sx: (C) => Object.assign({ height: h === "compact" ? "1.75rem" : "2.25rem", mt: h !== "compact" ? "-0.25rem" : void 0, width: h === "compact" ? "1.75rem" : "2.25rem" }, Se(b == null ? void 0 : b.sx, C)), title: void 0, children: (n = b == null ? void 0 : b.children) !== null && n !== void 0 ? n : f.jsx(u, { style: {
    transform: `rotate(${y ? -180 : l() ? -90 : 0}deg)`,
    transition: "transform 150ms"
  } }) })) }) }));
}, tv = ({ row: e, staticRowIndex: t, table: n }) => {
  var o, i;
  const s = vn(), { getState: a, options: { icons: { ExpandMoreIcon: l }, localization: c, muiExpandButtonProps: u, positionExpandColumn: d, renderDetailPanel: p } } = n, { density: m } = a(), g = Se(u, {
    row: e,
    staticRowIndex: t,
    table: n
  }), h = e.getCanExpand(), v = e.getIsExpanded(), b = (C) => {
    var x;
    C.stopPropagation(), e.toggleExpanded(), (x = g == null ? void 0 : g.onClick) === null || x === void 0 || x.call(g, C);
  }, y = !!(p != null && p({ row: e, table: n }));
  return f.jsx(Tt, Object.assign({ disableHoverListener: !h && !y }, To(), { title: (o = g == null ? void 0 : g.title) !== null && o !== void 0 ? o : v ? c.collapse : c.expand, children: f.jsx("span", { children: f.jsx(lt, Object.assign({ "aria-label": c.expand, disabled: !h && !y }, g, { onClick: b, sx: (C) => Object.assign({ height: m === "compact" ? "1.75rem" : "2.25rem", opacity: !h && !y ? 0.3 : 1, [C.direction === "rtl" || d === "last" ? "mr" : "ml"]: `${e.depth * 16}px`, width: m === "compact" ? "1.75rem" : "2.25rem" }, Se(g == null ? void 0 : g.sx, C)), title: void 0, children: (i = g == null ? void 0 : g.children) !== null && i !== void 0 ? i : f.jsx(l, { style: {
    transform: `rotate(${!h && !p ? d === "last" || s.direction === "rtl" ? 90 : -90 : v ? -180 : 0}deg)`,
    transition: "transform 150ms"
  } }) })) }) }));
}, PH = (e) => {
  var t;
  const { defaultColumn: n, enableExpandAll: o, groupedColumnMode: i, positionExpandColumn: s, renderDetailPanel: a, state: { grouping: l } } = e, c = s === "last" ? {
    align: "right"
  } : void 0;
  return Object.assign({ Cell: ({ cell: u, column: d, row: p, staticRowIndex: m, table: g }) => {
    var h, v, b;
    const y = { row: p, staticRowIndex: m, table: g }, C = (h = p.subRows) === null || h === void 0 ? void 0 : h.length;
    return i === "remove" && p.groupingColumnId ? f.jsxs(Nn, { alignItems: "center", flexDirection: "row", gap: "0.25rem", children: [f.jsx(tv, Object.assign({}, y)), f.jsx(Tt, Object.assign({}, To("right"), { title: g.getColumn(p.groupingColumnId).columnDef.header, children: f.jsx("span", { children: p.groupingValue }) })), !!C && f.jsxs("span", { children: ["(", C, ")"] })] }) : f.jsxs(f.Fragment, { children: [f.jsx(tv, Object.assign({}, y)), (b = (v = d.columnDef).GroupedCell) === null || b === void 0 ? void 0 : b.call(v, { cell: u, column: d, row: p, table: g })] });
  }, Header: o ? ({ table: u }) => {
    var d;
    return f.jsxs(f.Fragment, { children: [f.jsx(EH, { table: u }), i === "remove" && ((d = l == null ? void 0 : l.map((p) => u.getColumn(p).columnDef.header)) === null || d === void 0 ? void 0 : d.join(", "))] });
  } : void 0, muiTableBodyCellProps: c, muiTableHeadCellProps: c }, bi({
    header: "expand",
    id: "mrt-row-expand",
    size: i === "remove" ? (t = n == null ? void 0 : n.size) !== null && t !== void 0 ? t : 180 : a ? o ? 60 : 70 : 100,
    tableOptions: e
  }));
}, AH = (e) => {
  const { localization: t, rowNumberDisplayMode: n } = e, { pagination: { pageIndex: o, pageSize: i } } = e.state;
  return Object.assign({ Cell: ({ row: s, staticRowIndex: a }) => {
    var l;
    return ((l = n === "static" ? (a || 0) + (i || 0) * (o || 0) : s.index) !== null && l !== void 0 ? l : 0) + 1;
  }, Header: () => t.rowNumber, grow: !1 }, bi({
    header: "rowNumbers",
    id: "mrt-row-numbers",
    size: 50,
    tableOptions: e
  }));
}, Md = (e) => {
  var { pinningPosition: t, row: n, table: o } = e, i = Je(e, ["pinningPosition", "row", "table"]);
  const { options: { icons: { CloseIcon: s, PushPinIcon: a }, localization: l, rowPinningDisplayMode: c } } = o, u = n.getIsPinned(), [d, p] = Re(!1), m = (g) => {
    p(!1), g.stopPropagation(), n.pin(u ? !1 : t);
  };
  return f.jsx(Tt, Object.assign({}, To(), { open: d, title: u ? l.unpin : l.pin, children: f.jsx(lt, Object.assign({ "aria-label": l.pin, onBlur: () => p(!1), onClick: m, onFocus: () => p(!0), onMouseEnter: () => p(!0), onMouseLeave: () => p(!1), size: "small" }, i, { sx: (g) => Object.assign({ height: "24px", width: "24px" }, Se(i == null ? void 0 : i.sx, g)), children: u ? f.jsx(s, {}) : f.jsx(a, { fontSize: "small", style: {
    transform: `rotate(${c === "sticky" ? 135 : t === "top" ? 180 : 0}deg)`
  } }) })) }));
}, DH = (e) => {
  var { row: t, table: n } = e, o = Je(e, ["row", "table"]);
  const { getState: i, options: { enableRowPinning: s, rowPinningDisplayMode: a } } = n, { density: l } = i();
  if (!Se(s, t))
    return null;
  const u = Object.assign({
    row: t,
    table: n
  }, o);
  return a === "top-and-bottom" && !t.getIsPinned() ? f.jsxs(De, { sx: {
    display: "flex",
    flexDirection: l === "compact" ? "row" : "column"
  }, children: [f.jsx(Md, Object.assign({ pinningPosition: "top" }, u)), f.jsx(Md, Object.assign({ pinningPosition: "bottom" }, u))] }) : f.jsx(Md, Object.assign({ pinningPosition: a === "bottom" ? "bottom" : "top" }, u));
}, MH = (e) => Object.assign({ Cell: ({ row: t, table: n }) => f.jsx(DH, { row: t, table: n }), grow: !1 }, bi({
  header: "pin",
  id: "mrt-row-pin",
  size: 60,
  tableOptions: e
})), Bp = (e) => {
  var t, { row: n, staticRowIndex: o, table: i } = e, s = Je(e, ["row", "staticRowIndex", "table"]);
  const { getState: a, options: { enableMultiRowSelection: l, localization: c, muiSelectAllCheckboxProps: u, muiSelectCheckboxProps: d, selectAllMode: p } } = i, { density: m, isLoading: g } = a(), h = !n, v = h ? p === "page" ? i.getIsAllPageRowsSelected() : i.getIsAllRowsSelected() : void 0, b = h ? v : vc({ row: n, table: i }), y = Object.assign(Object.assign({}, h ? Se(u, { table: i }) : Se(d, {
    row: n,
    staticRowIndex: o,
    table: i
  })), s), C = n ? tS({
    row: n,
    staticRowIndex: o,
    table: i
  }) : void 0, x = Pm({ table: i }), T = Object.assign(Object.assign({ "aria-label": h ? c.toggleSelectAll : c.toggleSelectRow, checked: b, disabled: g || n && !n.getCanSelect() || (n == null ? void 0 : n.id) === "mrt-row-create", inputProps: {
    "aria-label": h ? c.toggleSelectAll : c.toggleSelectRow
  }, onChange: (w) => {
    w.stopPropagation(), h ? x(w) : C(w);
  }, size: m === "compact" ? "small" : "medium" }, y), { onClick: (w) => {
    var R;
    w.stopPropagation(), (R = y == null ? void 0 : y.onClick) === null || R === void 0 || R.call(y, w);
  }, sx: (w) => Object.assign({ height: m === "compact" ? "1.75rem" : "2.5rem", m: m !== "compact" ? "-0.4rem" : void 0, width: m === "compact" ? "1.75rem" : "2.5rem", zIndex: 0 }, Se(y == null ? void 0 : y.sx, w)), title: void 0 });
  return f.jsx(Tt, Object.assign({}, To(), { title: (t = y == null ? void 0 : y.title) !== null && t !== void 0 ? t : h ? c.toggleSelectAll : c.toggleSelectRow, children: l === !1 ? f.jsx(A0, Object.assign({}, T)) : f.jsx(ls, Object.assign({ indeterminate: !b && h ? i.getIsSomeRowsSelected() : (n == null ? void 0 : n.getIsSomeSelected()) && n.getCanSelectSubRows() }, T)) }));
}, jH = (e) => {
  const { enableMultiRowSelection: t, enableSelectAll: n } = e;
  return Object.assign({ Cell: ({ row: o, staticRowIndex: i, table: s }) => f.jsx(Bp, { row: o, staticRowIndex: i, table: s }), Header: n && t ? ({ table: o }) => f.jsx(Bp, { table: o }) : void 0, grow: !1 }, bi({
    header: "select",
    id: "mrt-row-select",
    size: n ? 60 : 70,
    tableOptions: e
  }));
}, kH = {
  ArrowDownwardIcon: IN,
  ArrowRightIcon: RN,
  CancelIcon: ON,
  ChevronLeftIcon: EN,
  ChevronRightIcon: PN,
  ClearAllIcon: AN,
  CloseIcon: pu,
  ContentCopy: DN,
  DensityLargeIcon: MN,
  DensityMediumIcon: jN,
  DensitySmallIcon: kN,
  DragHandleIcon: NN,
  DynamicFeedIcon: VN,
  EditIcon: B0,
  ExpandMoreIcon: LN,
  FilterAltIcon: _N,
  FilterListIcon: BN,
  FilterListOffIcon: zN,
  FirstPageIcon: WN,
  FullscreenExitIcon: GN,
  FullscreenIcon: HN,
  KeyboardDoubleArrowDownIcon: UN,
  LastPageIcon: XN,
  MoreHorizIcon: YN,
  MoreVertIcon: ZN,
  PushPinIcon: qN,
  RestartAltIcon: JN,
  SaveIcon: KN,
  SearchIcon: QN,
  SearchOffIcon: e2,
  SortIcon: t2,
  SyncAltIcon: o2,
  ViewColumnIcon: r2,
  VisibilityOffIcon: s2
}, FH = {
  actions: "Actions",
  and: "and",
  cancel: "Cancel",
  changeFilterMode: "Change filter mode",
  changeSearchMode: "Change search mode",
  clearFilter: "Clear filter",
  clearSearch: "Clear search",
  clearSelection: "Clear selection",
  clearSort: "Clear sort",
  clickToCopy: "Click to copy",
  copy: "Copy",
  collapse: "Collapse",
  collapseAll: "Collapse all",
  columnActions: "Column Actions",
  copiedToClipboard: "Copied to clipboard",
  dropToGroupBy: "Drop to group by {column}",
  edit: "Edit",
  expand: "Expand",
  expandAll: "Expand all",
  filterArrIncludes: "Includes",
  filterArrIncludesAll: "Includes all",
  filterArrIncludesSome: "Includes",
  filterBetween: "Between",
  filterBetweenInclusive: "Between Inclusive",
  filterByColumn: "Filter by {column}",
  filterContains: "Contains",
  filterEmpty: "Empty",
  filterEndsWith: "Ends With",
  filterEquals: "Equals",
  filterEqualsString: "Equals",
  filterFuzzy: "Fuzzy",
  filterGreaterThan: "Greater Than",
  filterGreaterThanOrEqualTo: "Greater Than Or Equal To",
  filterInNumberRange: "Between",
  filterIncludesString: "Contains",
  filterIncludesStringSensitive: "Contains",
  filterLessThan: "Less Than",
  filterLessThanOrEqualTo: "Less Than Or Equal To",
  filterMode: "Filter Mode: {filterType}",
  filterNotEmpty: "Not Empty",
  filterNotEquals: "Not Equals",
  filterStartsWith: "Starts With",
  filterWeakEquals: "Equals",
  filteringByColumn: "Filtering by {column} - {filterType} {filterValue}",
  goToFirstPage: "Go to first page",
  goToLastPage: "Go to last page",
  goToNextPage: "Go to next page",
  goToPreviousPage: "Go to previous page",
  grab: "Grab",
  groupByColumn: "Group by {column}",
  groupedBy: "Grouped by ",
  hideAll: "Hide all",
  hideColumn: "Hide {column} column",
  max: "Max",
  min: "Min",
  move: "Move",
  noRecordsToDisplay: "No records to display",
  noResultsFound: "No results found",
  of: "of",
  or: "or",
  pin: "Pin",
  pinToLeft: "Pin to left",
  pinToRight: "Pin to right",
  resetColumnSize: "Reset column size",
  resetOrder: "Reset order",
  rowActions: "Row Actions",
  rowNumber: "#",
  rowNumbers: "Row Numbers",
  rowsPerPage: "Rows per page",
  save: "Save",
  search: "Search",
  selectedCountOfRowCountRowsSelected: "{selectedCount} of {rowCount} row(s) selected",
  select: "Select",
  showAll: "Show all",
  showAllColumns: "Show all columns",
  showHideColumns: "Show/Hide columns",
  showHideFilters: "Show/Hide filters",
  showHideSearch: "Show/Hide search",
  sortByColumnAsc: "Sort by {column} ascending",
  sortByColumnDesc: "Sort by {column} descending",
  sortedByColumnAsc: "Sorted by {column} ascending",
  sortedByColumnDesc: "Sorted by {column} descending",
  thenBy: ", then by ",
  toggleDensity: "Toggle density",
  toggleFullScreen: "Toggle full screen",
  toggleSelectAll: "Toggle select all",
  toggleSelectRow: "Toggle select row",
  toggleVisibility: "Toggle visibility",
  ungroupByColumn: "Ungroup by {column}",
  unpin: "Unpin",
  unpinAll: "Unpin all"
}, NH = {
  filterVariant: "text",
  maxSize: 1e3,
  minSize: 40,
  size: 180
}, CS = {
  columnDefType: "display",
  enableClickToCopy: !1,
  enableColumnActions: !1,
  enableColumnDragging: !1,
  enableColumnFilter: !1,
  enableColumnOrdering: !1,
  enableEditing: !1,
  enableGlobalFilter: !1,
  enableGrouping: !1,
  enableHiding: !1,
  enableResizing: !1,
  enableSorting: !1
}, VH = (e) => {
  var t, { aggregationFns: n, autoResetExpanded: o = !1, columnFilterDisplayMode: i = "subheader", columnResizeDirection: s, columnResizeMode: a = "onChange", createDisplayMode: l = "modal", defaultColumn: c, defaultDisplayColumn: u, editDisplayMode: d = "modal", enableBatchRowSelection: p = !0, enableBottomToolbar: m = !0, enableColumnActions: g = !0, enableColumnFilters: h = !0, enableColumnOrdering: v = !1, enableColumnPinning: b = !1, enableColumnResizing: y = !1, enableColumnVirtualization: C, enableDensityToggle: x = !0, enableExpandAll: T = !0, enableExpanding: w, enableFacetedValues: R = !1, enableFilterMatchHighlighting: E = !0, enableFilters: O = !0, enableFullScreenToggle: I = !0, enableGlobalFilter: P = !0, enableGlobalFilterRankedResults: A = !0, enableGrouping: D = !1, enableHiding: k = !0, enableKeyboardShortcuts: M = !0, enableMultiRowSelection: F = !0, enableMultiSort: N = !0, enablePagination: W = !0, enableRowPinning: H = !1, enableRowSelection: B = !1, enableRowVirtualization: j, enableSelectAll: L = !0, enableSorting: ee = !0, enableStickyHeader: Y = !1, enableTableFooter: $ = !0, enableTableHead: U = !0, enableToolbarInternalActions: X = !0, enableTopToolbar: Z = !0, filterFns: G, icons: K, id: re = hw(), layoutMode: ne, localization: z, manualFiltering: q, manualGrouping: _, manualPagination: oe, manualSorting: te, mrtTheme: se, paginationDisplayMode: ae = "default", positionActionsColumn: me = "first", positionCreatingRow: ye = "top", positionExpandColumn: Te = "first", positionGlobalFilter: Ve = "right", positionPagination: ie = "bottom", positionToolbarAlertBanner: be = "top", positionToolbarDropZone: xe = "top", rowNumberDisplayMode: Ie = "static", rowPinningDisplayMode: Pe = "sticky", selectAllMode: Ce = "page", sortingFns: Oe } = e, Be = Je(e, ["aggregationFns", "autoResetExpanded", "columnFilterDisplayMode", "columnResizeDirection", "columnResizeMode", "createDisplayMode", "defaultColumn", "defaultDisplayColumn", "editDisplayMode", "enableBatchRowSelection", "enableBottomToolbar", "enableColumnActions", "enableColumnFilters", "enableColumnOrdering", "enableColumnPinning", "enableColumnResizing", "enableColumnVirtualization", "enableDensityToggle", "enableExpandAll", "enableExpanding", "enableFacetedValues", "enableFilterMatchHighlighting", "enableFilters", "enableFullScreenToggle", "enableGlobalFilter", "enableGlobalFilterRankedResults", "enableGrouping", "enableHiding", "enableKeyboardShortcuts", "enableMultiRowSelection", "enableMultiSort", "enablePagination", "enableRowPinning", "enableRowSelection", "enableRowVirtualization", "enableSelectAll", "enableSorting", "enableStickyHeader", "enableTableFooter", "enableTableHead", "enableToolbarInternalActions", "enableTopToolbar", "filterFns", "icons", "id", "layoutMode", "localization", "manualFiltering", "manualGrouping", "manualPagination", "manualSorting", "mrtTheme", "paginationDisplayMode", "positionActionsColumn", "positionCreatingRow", "positionExpandColumn", "positionGlobalFilter", "positionPagination", "positionToolbarAlertBanner", "positionToolbarDropZone", "rowNumberDisplayMode", "rowPinningDisplayMode", "selectAllMode", "sortingFns"]);
  const Ae = vn();
  return K = St(() => Object.assign(Object.assign({}, kH), K), [K]), z = St(() => Object.assign(Object.assign({}, FH), z), [z]), se = St(() => SH(se, Ae), [se, Ae]), n = St(() => Object.assign(Object.assign({}, xH), n), []), G = St(() => Object.assign(Object.assign({}, CH), G), []), Oe = St(() => Object.assign(Object.assign({}, gH), Oe), []), c = St(() => Object.assign(Object.assign({}, NH), c), [c]), u = St(() => Object.assign(Object.assign({}, CS), u), [u]), [C, j] = St(() => [C, j], []), s || (s = Ae.direction || "ltr"), ne = ne || (y ? "grid-no-grow" : "semantic"), ne === "semantic" && (j || C) && (ne = "grid"), j && (Y = !0), W === !1 && oe === void 0 && (oe = !0), !((t = Be.data) === null || t === void 0) && t.length || (q = !0, _ = !0, oe = !0, te = !0), Object.assign({
    aggregationFns: n,
    autoResetExpanded: o,
    columnFilterDisplayMode: i,
    columnResizeDirection: s,
    columnResizeMode: a,
    createDisplayMode: l,
    defaultColumn: c,
    defaultDisplayColumn: u,
    editDisplayMode: d,
    enableBatchRowSelection: p,
    enableBottomToolbar: m,
    enableColumnActions: g,
    enableColumnFilters: h,
    enableColumnOrdering: v,
    enableColumnPinning: b,
    enableColumnResizing: y,
    enableColumnVirtualization: C,
    enableDensityToggle: x,
    enableExpandAll: T,
    enableExpanding: w,
    enableFacetedValues: R,
    enableFilterMatchHighlighting: E,
    enableFilters: O,
    enableFullScreenToggle: I,
    enableGlobalFilter: P,
    enableGlobalFilterRankedResults: A,
    enableGrouping: D,
    enableHiding: k,
    enableKeyboardShortcuts: M,
    enableMultiRowSelection: F,
    enableMultiSort: N,
    enablePagination: W,
    enableRowPinning: H,
    enableRowSelection: B,
    enableRowVirtualization: j,
    enableSelectAll: L,
    enableSorting: ee,
    enableStickyHeader: Y,
    enableTableFooter: $,
    enableTableHead: U,
    enableToolbarInternalActions: X,
    enableTopToolbar: Z,
    filterFns: G,
    getCoreRowModel: T$(),
    getExpandedRowModel: w || D ? I$() : void 0,
    getFacetedMinMaxValues: R ? R$() : void 0,
    getFacetedRowModel: R ? P$() : void 0,
    getFacetedUniqueValues: R ? A$() : void 0,
    getFilteredRowModel: (h || P || O) && !q ? D$() : void 0,
    getGroupedRowModel: D && !_ ? M$() : void 0,
    getPaginationRowModel: W && !oe ? k$() : void 0,
    getSortedRowModel: ee && !te ? F$() : void 0,
    getSubRows: (nt) => nt == null ? void 0 : nt.subRows,
    icons: K,
    id: re,
    layoutMode: ne,
    localization: z,
    manualFiltering: q,
    manualGrouping: _,
    manualPagination: oe,
    manualSorting: te,
    mrtTheme: se,
    paginationDisplayMode: ae,
    positionActionsColumn: me,
    positionCreatingRow: ye,
    positionExpandColumn: Te,
    positionGlobalFilter: Ve,
    positionPagination: ie,
    positionToolbarAlertBanner: be,
    positionToolbarDropZone: xe,
    rowNumberDisplayMode: Ie,
    rowPinningDisplayMode: Pe,
    selectAllMode: Ce,
    sortingFns: Oe
  }, Be);
}, jd = {
  children: null,
  sx: {
    minWidth: 0,
    p: 0,
    width: 0
  }
}, $H = (e) => Object.assign(Object.assign(Object.assign(Object.assign({}, bi({
  id: "mrt-row-spacer",
  size: 0,
  tableOptions: e
})), { grow: !0 }), CS), { muiTableBodyCellProps: jd, muiTableFooterCellProps: jd, muiTableHeadCellProps: jd }), LH = (e) => {
  const { getIsSomeRowsPinned: t, getPrePaginationRowModel: n, getState: o, options: { enablePagination: i, enableRowPinning: s, rowCount: a } } = e, { columnOrder: l, density: c, globalFilter: u, isFullScreen: d, isLoading: p, pagination: m, showSkeletons: g, sorting: h } = o(), v = e.options.columns.length, b = a ?? n().rows.length, y = bw(() => ({}), {})[1], C = $t(), x = $t();
  Xt(() => {
    typeof window < "u" && (C.current = document.body.style.height);
  }, []), Xt(() => {
    if (typeof window < "u")
      if (d)
        x.current = document.body.getBoundingClientRect().top, document.body.style.height = "100dvh";
      else {
        if (document.body.style.height = C.current, !x.current)
          return;
        window.scrollTo({
          behavior: "instant",
          top: -1 * x.current
        });
      }
  }, [d]), Xt(() => {
    v !== l.length && e.setColumnOrder(jm(e.options));
  }, [v]), Xt(() => {
    if (!i || p || g)
      return;
    const { pageIndex: w, pageSize: R } = m;
    w * R >= b && e.setPageIndex(Math.ceil(b / R) - 1);
  }, [b]);
  const T = $t(h);
  Xt(() => {
    h.length && (T.current = h);
  }, [h]), Xt(() => {
    eS(e) && (u ? e.setSorting([]) : e.setSorting(() => T.current || []));
  }, [u]), Xt(() => {
    s && t() && setTimeout(() => {
      y();
    }, 150);
  }, [c]);
}, _H = (e) => {
  var t, n, o, i, s, a, l, c, u, d, p, m, g, h, v, b, y, C, x, T, w, R, E, O, I, P, A, D, k, M, F, N, W, H, B;
  const j = $t(null), L = $t(null), ee = $t(null), Y = $t({}), $ = $t({}), U = $t(null), X = $t(null), Z = $t({}), G = $t(null), K = $t(null), re = $t(null), ne = $t(null), z = St(() => {
    var cn, fn, J;
    const he = (cn = e.initialState) !== null && cn !== void 0 ? cn : {};
    return he.columnOrder = (fn = he.columnOrder) !== null && fn !== void 0 ? fn : jm(Object.assign(Object.assign({}, e), { state: Object.assign(Object.assign({}, e.initialState), e.state) })), he.globalFilterFn = (J = e.globalFilterFn) !== null && J !== void 0 ? J : "fuzzy", he;
  }, []);
  e.initialState = z;
  const [q, _] = Re((t = z.actionCell) !== null && t !== void 0 ? t : null), [oe, te] = Re((n = z.creatingRow) !== null && n !== void 0 ? n : null), [se, ae] = Re(() => Object.assign({}, ...bc(e.columns).map((cn) => {
    var fn, J, he, ke;
    return {
      [zi(cn)]: cn.filterFn instanceof Function ? (fn = cn.filterFn.name) !== null && fn !== void 0 ? fn : "custom" : (ke = (J = cn.filterFn) !== null && J !== void 0 ? J : (he = z == null ? void 0 : z.columnFilterFns) === null || he === void 0 ? void 0 : he[zi(cn)]) !== null && ke !== void 0 ? ke : pH(cn)
    };
  }))), [me, ye] = Re((o = z.columnOrder) !== null && o !== void 0 ? o : []), [Te, Ve] = Re((i = z.columnSizingInfo) !== null && i !== void 0 ? i : {}), [ie, be] = Re((s = z == null ? void 0 : z.density) !== null && s !== void 0 ? s : "comfortable"), [xe, Ie] = Re((a = z.draggingColumn) !== null && a !== void 0 ? a : null), [Pe, Ce] = Re((l = z.draggingRow) !== null && l !== void 0 ? l : null), [Oe, Be] = Re((c = z.editingCell) !== null && c !== void 0 ? c : null), [Ae, nt] = Re((u = z.editingRow) !== null && u !== void 0 ? u : null), [Ze, dt] = Re((d = z.globalFilterFn) !== null && d !== void 0 ? d : "fuzzy"), [de, we] = Re((p = z.grouping) !== null && p !== void 0 ? p : []), [pe, Me] = Re((m = z.hoveredColumn) !== null && m !== void 0 ? m : null), [je, st] = Re((g = z.hoveredRow) !== null && g !== void 0 ? g : null), [pt, it] = Re((h = z == null ? void 0 : z.isFullScreen) !== null && h !== void 0 ? h : !1), [bt, Zt] = Re((v = z == null ? void 0 : z.pagination) !== null && v !== void 0 ? v : { pageIndex: 0, pageSize: 10 }), [xn, qt] = Re((b = z == null ? void 0 : z.showAlertBanner) !== null && b !== void 0 ? b : !1), [ot, ln] = Re((y = z == null ? void 0 : z.showColumnFilters) !== null && y !== void 0 ? y : !1), [Qo, No] = Re((C = z == null ? void 0 : z.showGlobalFilter) !== null && C !== void 0 ? C : !1), [er, Vo] = Re((x = z == null ? void 0 : z.showToolbarDropZone) !== null && x !== void 0 ? x : !1);
  e.state = Object.assign({
    actionCell: q,
    columnFilterFns: se,
    columnOrder: me,
    columnSizingInfo: Te,
    creatingRow: oe,
    density: ie,
    draggingColumn: xe,
    draggingRow: Pe,
    editingCell: Oe,
    editingRow: Ae,
    globalFilterFn: Ze,
    grouping: de,
    hoveredColumn: pe,
    hoveredRow: je,
    isFullScreen: pt,
    pagination: bt,
    showAlertBanner: xn,
    showColumnFilters: ot,
    showGlobalFilter: Qo,
    showToolbarDropZone: er
  }, e.state);
  const qe = e, br = $t([]);
  qe.columns = qe.state.columnSizingInfo.isResizingColumn || qe.state.draggingColumn || qe.state.draggingRow ? br.current : qC({
    columnDefs: [
      ...[
        rS(qe) && MH(qe),
        iS(qe) && OH(qe),
        Mm(qe) && IH(qe),
        Dm(qe) && PH(qe),
        sS(qe) && jH(qe),
        aS(qe) && AH(qe)
      ].filter(Boolean),
      ...qe.columns,
      ...[
        lS(qe) && $H(qe)
      ].filter(Boolean)
    ],
    tableOptions: qe
  }), br.current = qe.columns, qe.data = St(() => (qe.state.isLoading || qe.state.showSkeletons) && !qe.data.length ? [
    ...Array(Math.min(qe.state.pagination.pageSize, 20)).fill(null)
  ].map(() => Object.assign({}, ...bc(qe.columns).map((cn) => ({
    [zi(cn)]: null
  })))) : qe.data, [
    qe.data,
    qe.state.isLoading,
    qe.state.showSkeletons
  ]);
  const Bt = N$(Object.assign(Object.assign({
    onColumnOrderChange: ye,
    onColumnSizingInfoChange: Ve,
    onGroupingChange: we,
    onPaginationChange: Zt
  }, qe), { globalFilterFn: (T = qe.filterFns) === null || T === void 0 ? void 0 : T[Ze ?? "fuzzy"] }));
  return Bt.refs = {
    actionCellRef: L,
    bottomToolbarRef: ee,
    editInputRefs: Y,
    filterInputRefs: $,
    lastSelectedRowId: j,
    searchInputRef: U,
    tableContainerRef: X,
    tableFooterRef: ne,
    tableHeadCellRefs: Z,
    tableHeadRef: re,
    tablePaperRef: G,
    topToolbarRef: K
  }, Bt.setActionCell = (w = qe.onActionCellChange) !== null && w !== void 0 ? w : _, Bt.setCreatingRow = (cn) => {
    var fn, J;
    let he = cn;
    cn === !0 && (he = fH(Bt)), (J = (fn = qe == null ? void 0 : qe.onCreatingRowChange) === null || fn === void 0 ? void 0 : fn.call(qe, he)) !== null && J !== void 0 || te(he);
  }, Bt.setColumnFilterFns = (R = qe.onColumnFilterFnsChange) !== null && R !== void 0 ? R : ae, Bt.setDensity = (E = qe.onDensityChange) !== null && E !== void 0 ? E : be, Bt.setDraggingColumn = (O = qe.onDraggingColumnChange) !== null && O !== void 0 ? O : Ie, Bt.setDraggingRow = (I = qe.onDraggingRowChange) !== null && I !== void 0 ? I : Ce, Bt.setEditingCell = (P = qe.onEditingCellChange) !== null && P !== void 0 ? P : Be, Bt.setEditingRow = (A = qe.onEditingRowChange) !== null && A !== void 0 ? A : nt, Bt.setGlobalFilterFn = (D = qe.onGlobalFilterFnChange) !== null && D !== void 0 ? D : dt, Bt.setHoveredColumn = (k = qe.onHoveredColumnChange) !== null && k !== void 0 ? k : Me, Bt.setHoveredRow = (M = qe.onHoveredRowChange) !== null && M !== void 0 ? M : st, Bt.setIsFullScreen = (F = qe.onIsFullScreenChange) !== null && F !== void 0 ? F : it, Bt.setShowAlertBanner = (N = qe.onShowAlertBannerChange) !== null && N !== void 0 ? N : qt, Bt.setShowColumnFilters = (W = qe.onShowColumnFiltersChange) !== null && W !== void 0 ? W : ln, Bt.setShowGlobalFilter = (H = qe.onShowGlobalFilterChange) !== null && H !== void 0 ? H : No, Bt.setShowToolbarDropZone = (B = qe.onShowToolbarDropZoneChange) !== null && B !== void 0 ? B : Vo, LH(Bt), Bt;
}, SS = (e) => _H(VH(e)), wS = (e, t) => {
  const n = Ax(e);
  return t === void 0 || (t >= 0 && t < Math.max(e.startIndex - e.overscan, 0) && n.unshift(t), t >= 0 && t > e.endIndex + e.overscan && n.push(t)), n;
}, BH = (e) => {
  var t, n, o, i;
  const { getState: s, options: { columnVirtualizerInstanceRef: a, columnVirtualizerOptions: l, enableColumnPinning: c, enableColumnVirtualization: u }, refs: { tableContainerRef: d } } = e, { columnPinning: p, columnVisibility: m, draggingColumn: g } = s();
  if (!u)
    return;
  const h = Se(l, {
    table: e
  }), v = e.getVisibleLeafColumns(), [b, y] = St(() => c ? [
    e.getLeftVisibleLeafColumns().map((O) => O.getPinnedIndex()),
    e.getRightVisibleLeafColumns().map((O) => v.length - O.getPinnedIndex() - 1).sort((O, I) => O - I)
  ] : [[], []], [p, m, c]), C = b.length, x = y.length, T = St(() => g != null && g.id ? v.findIndex((O) => O.id === (g == null ? void 0 : g.id)) : void 0, [g == null ? void 0 : g.id]), w = Mx(Object.assign({ count: v.length, estimateSize: (O) => v[O].getSize(), getScrollElement: () => d.current, horizontal: !0, overscan: 3, rangeExtractor: gn((O) => {
    const I = wS(O, T);
    return !C && !x ? I : [
      .../* @__PURE__ */ new Set([
        ...b,
        ...I,
        ...y
      ])
    ];
  }, [b, y, T]) }, h)), R = w.getVirtualItems();
  w.virtualColumns = R;
  const E = R.length;
  if (E) {
    const O = w.getTotalSize(), I = ((t = R[C]) === null || t === void 0 ? void 0 : t.start) || 0, P = ((n = R[b.length - 1]) === null || n === void 0 ? void 0 : n.end) || 0, A = ((o = R[E - x]) === null || o === void 0 ? void 0 : o.start) || 0, D = ((i = R[E - x - 1]) === null || i === void 0 ? void 0 : i.end) || 0;
    w.virtualPaddingLeft = I - P, w.virtualPaddingRight = O - D - (x ? O - A : 0);
  }
  return a && (a.current = w), w;
}, zH = (e, t) => {
  var n;
  const { getRowModel: o, getState: i, options: { enableRowVirtualization: s, renderDetailPanel: a, rowVirtualizerInstanceRef: l, rowVirtualizerOptions: c }, refs: { tableContainerRef: u } } = e, { density: d, draggingRow: p, expanded: m } = i();
  if (!s)
    return;
  const g = Se(c, {
    table: e
  }), h = (n = t == null ? void 0 : t.length) !== null && n !== void 0 ? n : o().rows.length, v = d === "compact" ? 37 : d === "comfortable" ? 58 : 73, b = Mx(Object.assign({ count: a ? h * 2 : h, estimateSize: (y) => a && y % 2 === 1 ? m === !0 ? 100 : 0 : v, getScrollElement: () => u.current, measureElement: typeof window < "u" && navigator.userAgent.indexOf("Firefox") === -1 ? (y) => y == null ? void 0 : y.getBoundingClientRect().height : void 0, overscan: 4, rangeExtractor: gn((y) => {
    var C;
    return wS(y, (C = p == null ? void 0 : p.index) !== null && C !== void 0 ? C : 0);
  }, [p]) }, g));
  return b.virtualRows = b.getVirtualItems(), l && (l.current = b), b;
}, WH = (e) => {
  const { getRowModel: t, getState: n, options: { data: o, enableGlobalFilterRankedResults: i, positionCreatingRow: s } } = e, { creatingRow: a, expanded: l, globalFilter: c, pagination: u, rowPinning: d, sorting: p } = n();
  return St(() => QC(e), [
    a,
    o,
    i,
    l,
    t().rows,
    c,
    u.pageIndex,
    u.pageSize,
    s,
    d,
    p
  ]);
}, kd = ["string", "number"], nv = ({ cell: e, rowRef: t, staticColumnIndex: n, staticRowIndex: o, table: i }) => {
  var s, a, l;
  const { getState: c, options: { enableFilterMatchHighlighting: u, mrtTheme: { matchHighlightColor: d } } } = i, { column: p, row: m } = e, { columnDef: g } = p, { globalFilter: h, globalFilterFn: v } = c(), b = p.getFilterValue();
  let y = e.getIsAggregated() && g.AggregatedCell ? g.AggregatedCell({
    cell: e,
    column: p,
    row: m,
    table: i,
    staticColumnIndex: n,
    staticRowIndex: o
  }) : m.getIsGrouped() && !e.getIsGrouped() ? null : e.getIsGrouped() && g.GroupedCell ? g.GroupedCell({
    cell: e,
    column: p,
    row: m,
    table: i,
    staticColumnIndex: n,
    staticRowIndex: o
  }) : void 0;
  const C = y !== void 0;
  if (C || (y = e.renderValue()), u && g.enableFilterMatchHighlighting !== !1 && String(y) && kd.includes(typeof y) && (b && kd.includes(typeof b) && ["autocomplete", "text"].includes(g.filterVariant) || h && kd.includes(typeof h) && p.getCanGlobalFilter())) {
    const x = Ed == null ? void 0 : Ed({
      matchExactly: (b ? g._filterFn : v) !== "fuzzy",
      query: ((s = b ?? h) !== null && s !== void 0 ? s : "").toString(),
      text: y == null ? void 0 : y.toString()
    });
    ((x == null ? void 0 : x.length) > 1 || !((a = x == null ? void 0 : x[0]) === null || a === void 0) && a.match) && (y = f.jsx("span", { "aria-label": y, role: "note", children: (l = x == null ? void 0 : x.map(({ key: T, match: w, text: R }) => f.jsx(De, { "aria-hidden": "true", component: "span", sx: w ? {
      backgroundColor: d,
      borderRadius: "2px",
      color: (E) => E.palette.mode === "dark" ? E.palette.common.white : E.palette.common.black,
      padding: "2px 1px"
    } : void 0, children: R }, T))) !== null && l !== void 0 ? l : y }));
  }
  return g.Cell && !C && (y = g.Cell({
    cell: e,
    column: p,
    renderedCellValue: y,
    row: m,
    rowRef: t,
    staticColumnIndex: n,
    staticRowIndex: o,
    table: i
  })), y;
}, HH = (e) => {
  var t, { cell: n, table: o } = e, i = Je(e, ["cell", "table"]);
  const { options: { localization: s, muiCopyButtonProps: a } } = o, { column: l, row: c } = n, { columnDef: u } = l, [d, p] = Re(!1), m = (h, v) => {
    h.stopPropagation(), navigator.clipboard.writeText(v), p(!0), setTimeout(() => p(!1), 4e3);
  }, g = Object.assign(Object.assign(Object.assign({}, Se(a, {
    cell: n,
    column: l,
    row: c,
    table: o
  })), Se(u.muiCopyButtonProps, {
    cell: n,
    column: l,
    row: c,
    table: o
  })), i);
  return f.jsx(Tt, Object.assign({}, To("top"), { title: (t = g == null ? void 0 : g.title) !== null && t !== void 0 ? t : d ? s.copiedToClipboard : s.clickToCopy, children: f.jsx(vt, Object.assign({ onClick: (h) => m(h, n.getValue()), size: "small", type: "button", variant: "text" }, g, { sx: (h) => Object.assign({ backgroundColor: "transparent", border: "none", color: "inherit", cursor: "copy", fontFamily: "inherit", fontSize: "inherit", letterSpacing: "inherit", m: "-0.25rem", minWidth: "unset", py: 0, textAlign: "inherit", textTransform: "inherit" }, Se(g == null ? void 0 : g.sx, h)), title: void 0 })) }));
}, TS = (e) => {
  var t, n, { cell: o, table: i } = e, s = Je(e, ["cell", "table"]);
  const { getState: a, options: { createDisplayMode: l, editDisplayMode: c, muiEditTextFieldProps: u }, refs: { editInputRefs: d }, setCreatingRow: p, setEditingCell: m, setEditingRow: g } = i, { column: h, row: v } = o, { columnDef: b } = h, { creatingRow: y, editingRow: C } = a(), { editSelectOptions: x, editVariant: T } = b, w = (y == null ? void 0 : y.id) === v.id, R = (C == null ? void 0 : C.id) === v.id, [E, O] = Re(() => o.getValue()), [I, P] = Re(!0), A = Object.assign(Object.assign(Object.assign({}, Se(u, {
    cell: o,
    column: h,
    row: v,
    table: i
  })), Se(b.muiEditTextFieldProps, {
    cell: o,
    column: h,
    row: v,
    table: i
  })), s), D = Se(x, {
    cell: o,
    column: h,
    row: v,
    table: i
  }), k = T === "select" || (A == null ? void 0 : A.select), M = (H) => {
    v._valuesCache[h.id] = H, w ? p(v) : R && g(v);
  }, F = (H) => {
    var B;
    (B = A.onChange) === null || B === void 0 || B.call(A, H), O(H.target.value), k && M(H.target.value);
  }, N = (H) => {
    var B;
    (B = A.onBlur) === null || B === void 0 || B.call(A, H), M(E), m(null);
  }, W = (H) => {
    var B, j;
    (B = A.onKeyDown) === null || B === void 0 || B.call(A, H), H.key === "Enter" && !H.shiftKey && I && ((j = d.current[h.id]) === null || j === void 0 || j.blur());
  };
  return b.Edit ? f.jsx(f.Fragment, { children: (t = b.Edit) === null || t === void 0 ? void 0 : t.call(b, { cell: o, column: h, row: v, table: i }) }) : f.jsx(Kn, Object.assign({ disabled: Se(b.enableEditing, v) === !1, fullWidth: !0, inputRef: (H) => {
    H && (d.current[h.id] = H, A.inputRef && (A.inputRef = H));
  }, label: ["custom", "modal"].includes(w ? l : c) ? b.header : void 0, margin: "none", name: h.id, placeholder: ["custom", "modal"].includes(w ? l : c) ? void 0 : b.header, select: k, size: "small", value: E ?? "", variant: "standard" }, A, { InputProps: Object.assign(Object.assign(Object.assign({}, A.variant !== "outlined" ? { disableUnderline: c === "table" } : {}), A.InputProps), { sx: (H) => {
    var B;
    return Object.assign({ mb: 0 }, Se((B = A == null ? void 0 : A.InputProps) === null || B === void 0 ? void 0 : B.sx, H));
  } }), SelectProps: Object.assign({ MenuProps: { disableScrollLock: !0 } }, A.SelectProps), inputProps: Object.assign({ autoComplete: "new-password" }, A.inputProps), onBlur: N, onChange: F, onClick: (H) => {
    var B;
    H.stopPropagation(), (B = A == null ? void 0 : A.onClick) === null || B === void 0 || B.call(A, H);
  }, onKeyDown: W, onCompositionStart: () => P(!1), onCompositionEnd: () => P(!0), children: (n = A.children) !== null && n !== void 0 ? n : D == null ? void 0 : D.map((H) => {
    const { label: B, value: j } = or(H);
    return f.jsx(Mo, { sx: {
      alignItems: "center",
      display: "flex",
      gap: "0.5rem",
      m: 0
    }, value: j, children: B }, j);
  }) }));
}, IS = (e) => {
  var t, n, o, i, s, { cell: a, numRows: l, rowRef: c, staticColumnIndex: u, staticRowIndex: d, table: p } = e, m = Je(e, ["cell", "numRows", "rowRef", "staticColumnIndex", "staticRowIndex", "table"]);
  const g = vn(), { getState: h, options: { columnResizeDirection: v, columnResizeMode: b, createDisplayMode: y, editDisplayMode: C, enableCellActions: x, enableClickToCopy: T, enableColumnOrdering: w, enableColumnPinning: R, enableGrouping: E, enableKeyboardShortcuts: O, layoutMode: I, mrtTheme: { draggingBorderColor: P }, muiSkeletonProps: A, muiTableBodyCellProps: D }, setHoveredColumn: k } = p, { actionCell: M, columnSizingInfo: F, creatingRow: N, density: W, draggingColumn: H, draggingRow: B, editingCell: j, editingRow: L, hoveredColumn: ee, hoveredRow: Y, isLoading: $, showSkeletons: U } = h(), { column: X, row: Z } = a, { columnDef: G } = X, { columnDefType: K } = G, re = { cell: a, column: X, row: Z, table: p }, ne = Object.assign(Object.assign(Object.assign({}, Se(D, re)), Se(G.muiTableBodyCellProps, re)), m), z = Se(A, {
    cell: a,
    column: X,
    row: Z,
    table: p
  }), [q, _] = Re(100);
  Xt(() => {
    if (!$ && !U || q !== 100)
      return;
    const Ce = X.getSize();
    _(K === "display" ? Ce / 2 : Math.round(Math.random() * (Ce - Ce / 3) + Ce / 3));
  }, [$, U]);
  const oe = St(() => {
    const Ce = (H == null ? void 0 : H.id) === X.id, Oe = (ee == null ? void 0 : ee.id) === X.id, Be = (B == null ? void 0 : B.id) === Z.id, Ae = (Y == null ? void 0 : Y.id) === Z.id, nt = X.getIsFirstColumn(), Ze = X.getIsLastColumn(), dt = l && d === l - 1, de = F.isResizingColumn === X.id, we = de && b === "onChange", pe = we ? `2px solid ${P} !important` : Ce || Be ? `1px dashed ${g.palette.grey[500]} !important` : Oe || Ae || de ? `2px dashed ${P} !important` : void 0;
    return we ? v === "ltr" ? { borderRight: pe } : { borderLeft: pe } : pe ? {
      borderBottom: Be || Ae || dt && !de ? pe : void 0,
      borderLeft: Ce || Oe || (Be || Ae) && nt ? pe : void 0,
      borderRight: Ce || Oe || (Be || Ae) && Ze ? pe : void 0,
      borderTop: Be || Ae ? pe : void 0
    } : void 0;
  }, [
    F.isResizingColumn,
    H,
    B,
    ee,
    Y,
    d
  ]), te = R && G.columnDefType !== "group" && X.getIsPinned(), se = nS({ cell: a, table: p }), ae = se && !["custom", "modal"].includes(C) && (C === "table" || (L == null ? void 0 : L.id) === Z.id || (j == null ? void 0 : j.id) === a.id) && !Z.getIsGrouped(), me = se && y === "row" && (N == null ? void 0 : N.id) === Z.id, ye = (Se(T, a) === !0 || Se(G.enableClickToCopy, a) === !0) && !["context-menu", !1].includes(
    // @ts-ignore
    Se(G.enableClickToCopy, a)
  ), Te = Se(x, a), Ve = {
    cell: a,
    table: p,
    staticColumnIndex: u,
    staticRowIndex: d
  }, ie = (Ce) => {
    var Oe;
    (Oe = ne == null ? void 0 : ne.onDoubleClick) === null || Oe === void 0 || Oe.call(ne, Ce), oS({ cell: a, table: p });
  }, be = (Ce) => {
    var Oe;
    (Oe = ne == null ? void 0 : ne.onDragEnter) === null || Oe === void 0 || Oe.call(ne, Ce), E && (ee == null ? void 0 : ee.id) === "drop-zone" && k(null), w && H && k(G.enableColumnOrdering !== !1 ? X : null);
  }, xe = (Ce) => {
    G.enableColumnOrdering !== !1 && Ce.preventDefault();
  }, Ie = (Ce) => {
    var Oe;
    (Oe = ne == null ? void 0 : ne.onContextMenu) === null || Oe === void 0 || Oe.call(ne, Ce), Te && (Ce.preventDefault(), p.setActionCell(a), p.refs.actionCellRef.current = Ce.currentTarget);
  }, Pe = (Ce) => {
    var Oe;
    Am({
      cell: a,
      cellValue: a.getValue(),
      event: Ce,
      table: p
    }), (Oe = ne == null ? void 0 : ne.onKeyDown) === null || Oe === void 0 || Oe.call(ne, Ce);
  };
  return f.jsx(Lt, Object.assign({ align: g.direction === "rtl" ? "right" : "left", "data-index": u, "data-pinned": !!te || void 0, tabIndex: O ? 0 : void 0 }, ne, { onKeyDown: Pe, onContextMenu: Ie, onDoubleClick: ie, onDragEnter: be, onDragOver: xe, sx: (Ce) => Object.assign(Object.assign({ "&:hover": {
    outline: (M == null ? void 0 : M.id) === a.id || C === "cell" && se || C === "table" && (me || ae) ? `1px solid ${Ce.palette.grey[500]}` : void 0,
    textOverflow: "clip"
  }, alignItems: I != null && I.startsWith("grid") ? "center" : void 0, cursor: Te ? "context-menu" : se && C === "cell" ? "pointer" : "inherit", outline: (M == null ? void 0 : M.id) === a.id ? `1px solid ${Ce.palette.grey[500]}` : void 0, outlineOffset: "-1px", overflow: "hidden", p: W === "compact" ? K === "display" ? "0 0.5rem" : "0.5rem" : W === "comfortable" ? K === "display" ? "0.5rem 0.75rem" : "1rem" : K === "display" ? "1rem 1.25rem" : "1.5rem", textOverflow: K !== "display" ? "ellipsis" : void 0, whiteSpace: Z.getIsPinned() || W === "compact" ? "nowrap" : "normal" }, Nm({
    column: X,
    table: p,
    tableCellProps: ne,
    theme: Ce
  })), oe), children: (t = ne.children) !== null && t !== void 0 ? t : f.jsxs(f.Fragment, { children: [a.getIsPlaceholder() ? (o = (n = G.PlaceholderCell) === null || n === void 0 ? void 0 : n.call(G, { cell: a, column: X, row: Z, table: p })) !== null && o !== void 0 ? o : null : U !== !1 && ($ || U) ? f.jsx(Ca, Object.assign({ animation: "wave", height: 20, width: q }, z)) : K === "display" && (["mrt-row-expand", "mrt-row-numbers", "mrt-row-select"].includes(X.id) || !Z.getIsGrouped()) ? (i = G.Cell) === null || i === void 0 ? void 0 : i.call(G, {
    cell: a,
    column: X,
    renderedCellValue: a.renderValue(),
    row: Z,
    rowRef: c,
    staticColumnIndex: u,
    staticRowIndex: d,
    table: p
  }) : me || ae ? f.jsx(TS, { cell: a, table: p }) : ye && G.enableClickToCopy !== !1 ? f.jsx(HH, { cell: a, table: p, children: f.jsx(nv, Object.assign({}, Ve)) }) : f.jsx(nv, Object.assign({}, Ve)), a.getIsGrouped() && !G.GroupedCell && f.jsxs(f.Fragment, { children: [" (", (s = Z.subRows) === null || s === void 0 ? void 0 : s.length, ")"] })] }) }));
}, GH = Up(IS, (e, t) => t.cell === e.cell), UH = (e) => {
  var { parentRowRef: t, row: n, rowVirtualizer: o, staticRowIndex: i, table: s, virtualRow: a } = e, l = Je(e, ["parentRowRef", "row", "rowVirtualizer", "staticRowIndex", "table", "virtualRow"]);
  const { getState: c, getVisibleLeafColumns: u, options: { layoutMode: d, mrtTheme: { baseBackgroundColor: p }, muiDetailPanelProps: m, muiTableBodyRowProps: g, renderDetailPanel: h } } = s, { isLoading: v } = c(), b = Se(g, {
    isDetailPanel: !0,
    row: n,
    staticRowIndex: i,
    table: s
  }), y = Object.assign(Object.assign({}, Se(m, {
    row: n,
    table: s
  })), l), C = !v && (h == null ? void 0 : h({ row: n, table: s }));
  return f.jsx(fr, Object.assign({ className: "Mui-TableBodyCell-DetailPanel", "data-index": h ? i * 2 + 1 : i, ref: (x) => {
    var T;
    x && ((T = o == null ? void 0 : o.measureElement) === null || T === void 0 || T.call(o, x));
  } }, b, { sx: (x) => {
    var T, w;
    return Object.assign({ display: d != null && d.startsWith("grid") ? "flex" : void 0, position: a ? "absolute" : void 0, top: a ? `${(w = (T = t.current) === null || T === void 0 ? void 0 : T.getBoundingClientRect()) === null || w === void 0 ? void 0 : w.height}px` : void 0, transform: a ? `translateY(${a == null ? void 0 : a.start}px)` : void 0, width: "100%" }, Se(b == null ? void 0 : b.sx, x));
  }, children: f.jsx(Lt, Object.assign({ className: "Mui-TableBodyCell-DetailPanel", colSpan: u().length }, y, { sx: (x) => Object.assign({ backgroundColor: a ? p : void 0, borderBottom: n.getIsExpanded() ? void 0 : "none", display: d != null && d.startsWith("grid") ? "flex" : void 0, py: C && n.getIsExpanded() ? "1rem" : 0, transition: a ? void 0 : "all 150ms ease-in-out", width: "100%" }, Se(y == null ? void 0 : y.sx, x)), children: a ? n.getIsExpanded() && C : f.jsx(Dr, { in: n.getIsExpanded(), mountOnEnter: !0, unmountOnExit: !0, children: C }) })) }));
}, Ul = (e) => {
  var t, n, o, i, { columnVirtualizer: s, numRows: a, pinnedRowIds: l, row: c, rowVirtualizer: u, staticRowIndex: d, table: p, virtualRow: m } = e, g = Je(e, ["columnVirtualizer", "numRows", "pinnedRowIds", "row", "rowVirtualizer", "staticRowIndex", "table", "virtualRow"]);
  const h = vn(), { getState: v, options: { enableRowOrdering: b, enableRowPinning: y, enableStickyFooter: C, enableStickyHeader: x, layoutMode: T, memoMode: w, mrtTheme: { baseBackgroundColor: R, pinnedRowBackgroundColor: E, selectedRowBackgroundColor: O }, muiTableBodyRowProps: I, renderDetailPanel: P, rowPinningDisplayMode: A }, refs: { tableFooterRef: D, tableHeadRef: k }, setHoveredRow: M } = p, { density: F, draggingColumn: N, draggingRow: W, editingCell: H, editingRow: B, hoveredRow: j, isFullScreen: L, rowPinning: ee } = v(), Y = c.getVisibleCells(), { virtualColumns: $, virtualPaddingLeft: U, virtualPaddingRight: X } = s ?? {}, Z = vc({ row: c, table: p }), G = y && c.getIsPinned(), K = (W == null ? void 0 : W.id) === c.id, re = (j == null ? void 0 : j.id) === c.id, ne = Object.assign(Object.assign({}, Se(I, {
    row: c,
    staticRowIndex: d,
    table: p
  })), g), [z, q] = St(() => !y || !(A != null && A.includes("sticky")) || !l || !c.getIsPinned() ? [] : [
    [...l].reverse().indexOf(c.id),
    l.indexOf(c.id)
  ], [l, ee]), _ = (x || L) && ((t = k.current) === null || t === void 0 ? void 0 : t.clientHeight) || 0, oe = C && ((n = D.current) === null || n === void 0 ? void 0 : n.clientHeight) || 0, te = Se(ne == null ? void 0 : ne.sx, h), se = F === "compact" ? 37 : F === "comfortable" ? 53 : 69, me = /* @ts-ignore */ parseInt((i = (o = ne == null ? void 0 : ne.style) === null || o === void 0 ? void 0 : o.height) !== null && i !== void 0 ? i : te == null ? void 0 : te.height, 10) || void 0 || se, ye = (xe) => {
    b && W && M(c);
  }, Te = (xe) => {
    xe.preventDefault();
  }, Ve = $t(null), ie = Z ? O : G ? E : void 0, be = (ne == null ? void 0 : ne.hover) !== !1 ? Z ? ie : h.palette.mode === "dark" ? `${$n(R, 0.3)}` : `${no(R, 0.3)}` : void 0;
  return f.jsxs(f.Fragment, { children: [f.jsxs(fr, Object.assign({ "data-index": P ? d * 2 : d, "data-pinned": !!G || void 0, "data-selected": Z || void 0, onDragEnter: ye, onDragOver: Te, ref: (xe) => {
    xe && (Ve.current = xe, u == null || u.measureElement(xe));
  }, selected: Z }, ne, { style: Object.assign({ transform: m ? `translateY(${m.start}px)` : void 0 }, ne == null ? void 0 : ne.style), sx: (xe) => Object.assign({ "&:hover td:after": be ? Object.assign({ backgroundColor: ze(be, 0.3) }, _p) : void 0, backgroundColor: `${R} !important`, bottom: !m && z !== void 0 && G ? `${z * me + (C ? oe - 1 : 0)}px` : void 0, boxSizing: "border-box", display: T != null && T.startsWith("grid") ? "flex" : void 0, opacity: G ? 0.97 : K || re ? 0.5 : 1, position: m ? "absolute" : A != null && A.includes("sticky") && G ? "sticky" : "relative", td: Object.assign({}, yS({ table: p, theme: xe })), "td:after": ie ? Object.assign({ backgroundColor: ie }, _p) : void 0, top: m ? 0 : q !== void 0 && G ? `${q * me + (x || L ? _ - 1 : 0)}px` : void 0, transition: m ? "none" : "all 150ms ease-in-out", width: "100%", zIndex: A != null && A.includes("sticky") && G ? 2 : 0 }, te), children: [U ? f.jsx("td", { style: { display: "flex", width: U } }) : null, ($ ?? Y).map((xe, Ie) => {
    let Pe = xe;
    s && (Ie = xe.index, Pe = Y[Ie]);
    const Ce = {
      cell: Pe,
      numRows: a,
      rowRef: Ve,
      staticColumnIndex: Ie,
      staticRowIndex: d,
      table: p
    }, Oe = `${Pe.id}-${d}`;
    return Pe ? w === "cells" && Pe.column.columnDef.columnDefType === "data" && !N && !W && (H == null ? void 0 : H.id) !== Pe.id && (B == null ? void 0 : B.id) !== c.id ? f.jsx(GH, Object.assign({}, Ce), Oe) : f.jsx(IS, Object.assign({}, Ce), Oe) : null;
  }), X ? f.jsx("td", { style: { display: "flex", width: X } }) : null] })), P && !c.getIsGrouped() && f.jsx(UH, { parentRowRef: Ve, row: c, rowVirtualizer: u, staticRowIndex: d, table: p, virtualRow: m })] });
}, Fd = Up(Ul, (e, t) => e.row === t.row && e.staticRowIndex === t.staticRowIndex), RS = (e) => {
  var t, n, o, i, s, a, { columnVirtualizer: l, table: c } = e, u = Je(e, ["columnVirtualizer", "table"]);
  const { getBottomRows: d, getIsSomeRowsPinned: p, getRowModel: m, getState: g, getTopRows: h, options: { enableStickyFooter: v, enableStickyHeader: b, layoutMode: y, localization: C, memoMode: x, muiTableBodyProps: T, renderDetailPanel: w, renderEmptyRowsFallback: R, rowPinningDisplayMode: E }, refs: { tableFooterRef: O, tableHeadRef: I, tablePaperRef: P } } = c, { columnFilters: A, globalFilter: D, isFullScreen: k, rowPinning: M } = g(), F = Object.assign(Object.assign({}, Se(T, { table: c })), u), N = (b || k) && ((t = I.current) === null || t === void 0 ? void 0 : t.clientHeight) || 0, W = v && ((n = O.current) === null || n === void 0 ? void 0 : n.clientHeight) || 0, H = St(() => {
    var Y, $;
    return !(!((Y = M.bottom) === null || Y === void 0) && Y.length) && !(!(($ = M.top) === null || $ === void 0) && $.length) ? [] : m().rows.filter((U) => U.getIsPinned()).map((U) => U.id);
  }, [M, m().rows]), B = WH(c), j = zH(c, B), { virtualRows: L } = j ?? {}, ee = {
    columnVirtualizer: l,
    numRows: B.length,
    table: c
  };
  return f.jsxs(f.Fragment, { children: [!(E != null && E.includes("sticky")) && p("top") && f.jsx(Vi, Object.assign({}, F, { sx: (Y) => Object.assign({ display: y != null && y.startsWith("grid") ? "grid" : void 0, position: "sticky", top: N - 1, zIndex: 1 }, Se(F == null ? void 0 : F.sx, Y)), children: h().map((Y, $) => {
    const U = Object.assign(Object.assign({}, ee), {
      row: Y,
      staticRowIndex: $
    });
    return x === "rows" ? f.jsx(Fd, Object.assign({}, U), Y.id) : f.jsx(Ul, Object.assign({}, U), Y.id);
  }) })), f.jsx(Vi, Object.assign({}, F, { sx: (Y) => Object.assign({ display: y != null && y.startsWith("grid") ? "grid" : void 0, height: j ? `${j.getTotalSize()}px` : void 0, minHeight: B.length ? void 0 : "100px", position: "relative" }, Se(F == null ? void 0 : F.sx, Y)), children: (o = F == null ? void 0 : F.children) !== null && o !== void 0 ? o : B.length ? f.jsx(f.Fragment, { children: (L ?? B).map((Y, $) => {
    let U = Y;
    if (j) {
      if (w) {
        if (Y.index % 2 === 1)
          return null;
        $ = Y.index / 2;
      } else
        $ = Y.index;
      U = B[$];
    }
    const X = Object.assign(Object.assign({}, ee), {
      pinnedRowIds: H,
      row: U,
      rowVirtualizer: j,
      staticRowIndex: $,
      virtualRow: j ? Y : void 0
    }), Z = `${U.id}-${U.index}`;
    return x === "rows" ? f.jsx(Fd, Object.assign({}, X), Z) : f.jsx(Ul, Object.assign({}, X), Z);
  }) }) : f.jsx("tr", { style: {
    display: y != null && y.startsWith("grid") ? "grid" : void 0
  }, children: f.jsx("td", { colSpan: c.getVisibleLeafColumns().length, style: {
    display: y != null && y.startsWith("grid") ? "grid" : void 0
  }, children: (i = R == null ? void 0 : R({ table: c })) !== null && i !== void 0 ? i : f.jsx(Fe, { sx: {
    color: "text.secondary",
    fontStyle: "italic",
    maxWidth: `min(100vw, ${(a = (s = P.current) === null || s === void 0 ? void 0 : s.clientWidth) !== null && a !== void 0 ? a : 360}px)`,
    py: "2rem",
    textAlign: "center",
    width: "100%"
  }, children: D || A.length ? C.noResultsFound : C.noRecordsToDisplay }) }) }) })), !(E != null && E.includes("sticky")) && p("bottom") && f.jsx(Vi, Object.assign({}, F, { sx: (Y) => Object.assign({ bottom: W - 1, display: y != null && y.startsWith("grid") ? "grid" : void 0, position: "sticky", zIndex: 1 }, Se(F == null ? void 0 : F.sx, Y)), children: d().map((Y, $) => {
    const U = Object.assign(Object.assign({}, ee), {
      row: Y,
      staticRowIndex: $
    });
    return x === "rows" ? f.jsx(Fd, Object.assign({}, U), Y.id) : f.jsx(Ul, Object.assign({}, U), Y.id);
  }) }))] });
}, XH = Up(RS, (e, t) => e.table.options.data === t.table.options.data), YH = (e) => {
  var t, n, o, { footer: i, staticColumnIndex: s, table: a } = e, l = Je(e, ["footer", "staticColumnIndex", "table"]);
  const c = vn(), { getState: u, options: { enableColumnPinning: d, muiTableFooterCellProps: p, enableKeyboardShortcuts: m } } = a, { density: g } = u(), { column: h } = i, { columnDef: v } = h, { columnDefType: b } = v, y = d && v.columnDefType !== "group" && h.getIsPinned(), C = { column: h, table: a }, x = Object.assign(Object.assign(Object.assign({}, Se(p, C)), Se(v.muiTableFooterCellProps, C)), l), T = (w) => {
    var R;
    Am({
      event: w,
      cellValue: i.column.columnDef.footer,
      table: a
    }), (R = x == null ? void 0 : x.onKeyDown) === null || R === void 0 || R.call(x, w);
  };
  return f.jsx(Lt, Object.assign({ align: b === "group" ? "center" : c.direction === "rtl" ? "right" : "left", colSpan: i.colSpan, "data-index": s, "data-pinned": !!y || void 0, tabIndex: m ? 0 : void 0, variant: "footer" }, x, { onKeyDown: T, sx: (w) => Object.assign(Object.assign({ fontWeight: "bold", p: g === "compact" ? "0.5rem" : g === "comfortable" ? "1rem" : "1.5rem", verticalAlign: "top" }, Nm({
    column: h,
    header: i,
    table: a,
    tableCellProps: x,
    theme: w
  })), Se(x == null ? void 0 : x.sx, w)), children: (t = x.children) !== null && t !== void 0 ? t : i.isPlaceholder ? null : (o = (n = Se(v.Footer, {
    column: h,
    footer: i,
    table: a
  })) !== null && n !== void 0 ? n : v.footer) !== null && o !== void 0 ? o : null }));
}, ZH = (e) => {
  var t, { columnVirtualizer: n, footerGroup: o, table: i } = e, s = Je(e, ["columnVirtualizer", "footerGroup", "table"]);
  const { options: { layoutMode: a, mrtTheme: { baseBackgroundColor: l }, muiTableFooterRowProps: c } } = i, { virtualColumns: u, virtualPaddingLeft: d, virtualPaddingRight: p } = n ?? {};
  if (!(!((t = o.headers) === null || t === void 0) && t.some((g) => typeof g.column.columnDef.footer == "string" && !!g.column.columnDef.footer || g.column.columnDef.Footer)))
    return null;
  const m = Object.assign(Object.assign({}, Se(c, {
    footerGroup: o,
    table: i
  })), s);
  return f.jsxs(fr, Object.assign({}, m, { sx: (g) => Object.assign({ backgroundColor: l, display: a != null && a.startsWith("grid") ? "flex" : void 0, position: "relative", width: "100%" }, Se(m == null ? void 0 : m.sx, g)), children: [d ? f.jsx("th", { style: { display: "flex", width: d } }) : null, (u ?? o.headers).map((g, h) => {
    let v = g;
    return n && (h = g.index, v = o.headers[h]), v ? f.jsx(YH, { footer: v, staticColumnIndex: h, table: i }, v.id) : null;
  }), p ? f.jsx("th", { style: { display: "flex", width: p } }) : null] }));
}, qH = (e) => {
  var { columnVirtualizer: t, table: n } = e, o = Je(e, ["columnVirtualizer", "table"]);
  const { getState: i, options: { enableStickyFooter: s, layoutMode: a, muiTableFooterProps: l }, refs: { tableFooterRef: c } } = n, { isFullScreen: u } = i(), d = Object.assign(Object.assign({}, Se(l, {
    table: n
  })), o), p = (u || s) && s !== !1, m = n.getFooterGroups();
  return m.some((g) => {
    var h;
    return (h = g.headers) === null || h === void 0 ? void 0 : h.some((v) => typeof v.column.columnDef.footer == "string" && !!v.column.columnDef.footer || v.column.columnDef.Footer);
  }) ? f.jsx(N0, Object.assign({}, d, { ref: (g) => {
    c.current = g, d != null && d.ref && (d.ref.current = g);
  }, sx: (g) => Object.assign({ bottom: p ? 0 : void 0, display: a != null && a.startsWith("grid") ? "grid" : void 0, opacity: p ? 0.97 : void 0, outline: p ? g.palette.mode === "light" ? `1px solid ${g.palette.grey[300]}` : `1px solid ${g.palette.grey[700]}` : void 0, position: p ? "sticky" : "relative", zIndex: p ? 1 : void 0 }, Se(d == null ? void 0 : d.sx, g)), children: m.map((g) => f.jsx(ZH, { columnVirtualizer: t, footerGroup: g, table: n }, g.id)) })) : null;
}, JH = (e) => [
  {
    divider: !1,
    label: e.filterFuzzy,
    option: "fuzzy",
    symbol: "≈"
  },
  {
    divider: !1,
    label: e.filterContains,
    option: "contains",
    symbol: "*"
  },
  {
    divider: !1,
    label: e.filterStartsWith,
    option: "startsWith",
    symbol: "a"
  },
  {
    divider: !0,
    label: e.filterEndsWith,
    option: "endsWith",
    symbol: "z"
  },
  {
    divider: !1,
    label: e.filterEquals,
    option: "equals",
    symbol: "="
  },
  {
    divider: !0,
    label: e.filterNotEquals,
    option: "notEquals",
    symbol: "≠"
  },
  {
    divider: !1,
    label: e.filterBetween,
    option: "between",
    symbol: "⇿"
  },
  {
    divider: !0,
    label: e.filterBetweenInclusive,
    option: "betweenInclusive",
    symbol: "⬌"
  },
  {
    divider: !1,
    label: e.filterGreaterThan,
    option: "greaterThan",
    symbol: ">"
  },
  {
    divider: !1,
    label: e.filterGreaterThanOrEqualTo,
    option: "greaterThanOrEqualTo",
    symbol: "≥"
  },
  {
    divider: !1,
    label: e.filterLessThan,
    option: "lessThan",
    symbol: "<"
  },
  {
    divider: !0,
    label: e.filterLessThanOrEqualTo,
    option: "lessThanOrEqualTo",
    symbol: "≤"
  },
  {
    divider: !1,
    label: e.filterEmpty,
    option: "empty",
    symbol: "∅"
  },
  {
    divider: !1,
    label: e.filterNotEmpty,
    option: "notEmpty",
    symbol: "!∅"
  }
], Rl = ["between", "betweenInclusive", "inNumberRange"], Nd = ["empty", "notEmpty"], KH = ["arrIncludesSome", "arrIncludesAll", "arrIncludes"], QH = ["range-slider", "date-range", "datetime-range", "range"], $m = (e) => {
  var t, n, o, i, { anchorEl: s, header: a, onSelect: l, setAnchorEl: c, setFilterValue: u, table: d } = e, p = Je(e, ["anchorEl", "header", "onSelect", "setAnchorEl", "setFilterValue", "table"]);
  const { getState: m, options: { columnFilterModeOptions: g, globalFilterModeOptions: h, localization: v, mrtTheme: { menuBackgroundColor: b }, renderColumnFilterModeMenuItems: y, renderGlobalFilterModeMenuItems: C }, setColumnFilterFns: x, setGlobalFilterFn: T } = d, { density: w, globalFilterFn: R } = m(), { column: E } = a ?? {}, { columnDef: O } = E ?? {}, I = E == null ? void 0 : E.getFilterValue();
  let P = (t = O == null ? void 0 : O.columnFilterModeOptions) !== null && t !== void 0 ? t : g;
  QH.includes(O == null ? void 0 : O.filterVariant) && (P = [
    ...Rl,
    ...P ?? []
  ].filter((M) => Rl.includes(M)));
  const A = St(() => JH(v).filter((M) => O ? P === void 0 || (P == null ? void 0 : P.includes(M.option)) : (!h || h.includes(M.option)) && ["contains", "fuzzy", "startsWith"].includes(M.option)), []), D = (M) => {
    var F, N;
    const W = (F = O == null ? void 0 : O._filterFn) !== null && F !== void 0 ? F : "";
    !a || !E ? T(M) : M !== W && (x((H) => Object.assign(Object.assign({}, H), { [a.id]: M })), Nd.includes(M) ? I !== " " && !Nd.includes(W) ? E.setFilterValue(" ") : I && E.setFilterValue(I) : (O == null ? void 0 : O.filterVariant) === "multi-select" || KH.includes(M) ? I instanceof String || I != null && I.length ? (E.setFilterValue([]), u == null || u([])) : I && E.setFilterValue(I) : !((N = O == null ? void 0 : O.filterVariant) === null || N === void 0) && N.includes("range") || Rl.includes(M) ? !Array.isArray(I) || !(I != null && I.every((H) => H === "")) && !Rl.includes(W) ? (E.setFilterValue(["", ""]), u == null || u("")) : E.setFilterValue(I) : Array.isArray(I) ? (E.setFilterValue(""), u == null || u("")) : I === " " && Nd.includes(W) ? E.setFilterValue(void 0) : E.setFilterValue(I)), c(null), l == null || l();
  }, k = a && O ? O._filterFn : R;
  return f.jsx(Lr, Object.assign({ MenuListProps: {
    dense: w === "compact",
    sx: {
      backgroundColor: b
    }
  }, anchorEl: s, anchorOrigin: { horizontal: "right", vertical: "center" }, disableScrollLock: !0, onClose: () => c(null), open: !!s }, p, { children: (i = a && E && O ? (o = (n = O.renderColumnFilterModeMenuItems) === null || n === void 0 ? void 0 : n.call(O, {
    column: E,
    internalFilterOptions: A,
    onSelectFilterMode: D,
    table: d
  })) !== null && o !== void 0 ? o : y == null ? void 0 : y({
    column: E,
    internalFilterOptions: A,
    onSelectFilterMode: D,
    table: d
  }) : C == null ? void 0 : C({
    internalFilterOptions: A,
    onSelectFilterMode: D,
    table: d
  })) !== null && i !== void 0 ? i : A.map(({ divider: M, label: F, option: N, symbol: W }, H) => f.jsx(Pn, { divider: M, icon: W, label: F, onClick: () => D(N), selected: N === k, table: d, value: N }, H)) }));
}, e9 = (e) => {
  var t, n, o, i, s, a, l, c, u, d, { anchorEl: p, header: m, setAnchorEl: g, table: h } = e, v = Je(e, ["anchorEl", "header", "setAnchorEl", "table"]);
  const { getAllLeafColumns: b, getState: y, options: { columnFilterDisplayMode: C, columnFilterModeOptions: x, enableColumnFilterModes: T, enableColumnFilters: w, enableColumnPinning: R, enableColumnResizing: E, enableGrouping: O, enableHiding: I, enableSorting: P, enableSortingRemoval: A, icons: { ClearAllIcon: D, DynamicFeedIcon: k, FilterListIcon: M, FilterListOffIcon: F, PushPinIcon: N, RestartAltIcon: W, SortIcon: H, ViewColumnIcon: B, VisibilityOffIcon: j }, localization: L, mrtTheme: { menuBackgroundColor: ee }, renderColumnActionsMenuItems: Y }, refs: { filterInputRefs: $ }, setColumnFilterFns: U, setColumnOrder: X, setColumnSizingInfo: Z, setShowColumnFilters: G } = h, { column: K } = m, { columnDef: re } = K, { columnSizing: ne, columnVisibility: z, density: q, showColumnFilters: _ } = y(), oe = K.getFilterValue(), [te, se] = Re(null), ae = () => {
    K.clearSorting(), g(null);
  }, me = () => {
    K.toggleSorting(!1), g(null);
  }, ye = () => {
    K.toggleSorting(!0), g(null);
  }, Te = () => {
    Z((Ze) => Object.assign(Object.assign({}, Ze), { isResizingColumn: !1 })), K.resetSize(), g(null);
  }, Ve = () => {
    K.toggleVisibility(!1), g(null);
  }, ie = (Ze) => {
    K.pin(Ze), g(null);
  }, be = () => {
    K.toggleGrouping(), X((Ze) => ["mrt-row-expand", ...Ze]), g(null);
  }, xe = () => {
    K.setFilterValue(void 0), g(null), ["empty", "notEmpty"].includes(re._filterFn) && U((Ze) => {
      var dt;
      return Object.assign(Object.assign({}, Ze), { [m.id]: (dt = Be == null ? void 0 : Be[0]) !== null && dt !== void 0 ? dt : "fuzzy" });
    });
  }, Ie = () => {
    G(!0), queueMicrotask(() => {
      var Ze;
      return (Ze = $.current[`${K.id}-0`]) === null || Ze === void 0 ? void 0 : Ze.focus();
    }), g(null);
  }, Pe = () => {
    b().filter((Ze) => Ze.columnDef.enableHiding !== !1).forEach((Ze) => Ze.toggleVisibility(!0)), g(null);
  }, Ce = (Ze) => {
    Ze.stopPropagation(), se(Ze.currentTarget);
  }, Oe = !!re.filterSelectOptions, Be = (t = re == null ? void 0 : re.columnFilterModeOptions) !== null && t !== void 0 ? t : x, Ae = T && re.enableColumnFilterModes !== !1 && !Oe && (Be === void 0 || !!(Be != null && Be.length)), nt = [
    ...P && K.getCanSort() ? [
      A !== !1 && f.jsx(Pn, { icon: f.jsx(D, {}), label: L.clearSort, onClick: ae, table: h }, 0),
      f.jsx(Pn, { disabled: K.getIsSorted() === "asc", icon: f.jsx(H, { style: { transform: "rotate(180deg) scaleX(-1)" } }), label: (n = L.sortByColumnAsc) === null || n === void 0 ? void 0 : n.replace("{column}", String(re.header)), onClick: me, table: h }, 1),
      f.jsx(Pn, { disabled: K.getIsSorted() === "desc", divider: w || O || I, icon: f.jsx(H, {}), label: (o = L.sortByColumnDesc) === null || o === void 0 ? void 0 : o.replace("{column}", String(re.header)), onClick: ye, table: h }, 2)
    ] : [],
    ...w && K.getCanFilter() ? [
      f.jsx(Pn, { disabled: !oe || Array.isArray(oe) && !oe.filter((Ze) => Ze).length, icon: f.jsx(F, {}), label: L.clearFilter, onClick: xe, table: h }, 3),
      C === "subheader" && f.jsx(Pn, { disabled: _ && !T, divider: O || I, icon: f.jsx(M, {}), label: (i = L.filterByColumn) === null || i === void 0 ? void 0 : i.replace("{column}", String(re.header)), onClick: _ ? Ce : Ie, onOpenSubMenu: Ae ? Ce : void 0, table: h }, 4),
      Ae && f.jsx($m, { anchorEl: te, header: m, onSelect: Ie, setAnchorEl: se, table: h }, 5)
    ].filter(Boolean) : [],
    ...O && K.getCanGroup() ? [
      f.jsx(Pn, { divider: R, icon: f.jsx(k, {}), label: (s = L[K.getIsGrouped() ? "ungroupByColumn" : "groupByColumn"]) === null || s === void 0 ? void 0 : s.replace("{column}", String(re.header)), onClick: be, table: h }, 6)
    ] : [],
    ...R && K.getCanPin() ? [
      f.jsx(Pn, { disabled: K.getIsPinned() === "left" || !K.getCanPin(), icon: f.jsx(N, { style: { transform: "rotate(90deg)" } }), label: L.pinToLeft, onClick: () => ie("left"), table: h }, 7),
      f.jsx(Pn, { disabled: K.getIsPinned() === "right" || !K.getCanPin(), icon: f.jsx(N, { style: { transform: "rotate(-90deg)" } }), label: L.pinToRight, onClick: () => ie("right"), table: h }, 8),
      f.jsx(Pn, { disabled: !K.getIsPinned(), divider: I, icon: f.jsx(N, {}), label: L.unpin, onClick: () => ie(!1), table: h }, 9)
    ] : [],
    ...E && K.getCanResize() ? [
      f.jsx(Pn, { disabled: !ne[K.id], icon: f.jsx(W, {}), label: L.resetColumnSize, onClick: Te, table: h }, 10)
    ] : [],
    ...I ? [
      f.jsx(Pn, { disabled: !K.getCanHide(), icon: f.jsx(j, {}), label: (a = L.hideColumn) === null || a === void 0 ? void 0 : a.replace("{column}", String(re.header)), onClick: Ve, table: h }, 11),
      f.jsx(Pn, { disabled: !Object.values(z).filter((Ze) => !Ze).length, icon: f.jsx(B, {}), label: (l = L.showAllColumns) === null || l === void 0 ? void 0 : l.replace("{column}", String(re.header)), onClick: Pe, table: h }, 12)
    ] : []
  ].filter(Boolean);
  return f.jsx(Lr, Object.assign({ MenuListProps: {
    dense: q === "compact",
    sx: {
      backgroundColor: ee
    }
  }, anchorEl: p, disableScrollLock: !0, onClose: () => g(null), open: !!p }, v, { children: (d = (u = (c = re.renderColumnActionsMenuItems) === null || c === void 0 ? void 0 : c.call(re, {
    closeMenu: () => g(null),
    column: K,
    internalColumnMenuItems: nt,
    table: h
  })) !== null && u !== void 0 ? u : Y == null ? void 0 : Y({
    closeMenu: () => g(null),
    column: K,
    internalColumnMenuItems: nt,
    table: h
  })) !== null && d !== void 0 ? d : nt }));
}, t9 = (e) => {
  var t, n, { header: o, table: i } = e, s = Je(e, ["header", "table"]);
  const { options: { icons: { MoreVertIcon: a }, localization: l, muiColumnActionsButtonProps: c } } = i, { column: u } = o, { columnDef: d } = u, [p, m] = Re(null), g = (v) => {
    v.stopPropagation(), v.preventDefault(), m(v.currentTarget);
  }, h = Object.assign(Object.assign(Object.assign({}, Se(c, {
    column: u,
    table: i
  })), Se(d.muiColumnActionsButtonProps, {
    column: u,
    table: i
  })), s);
  return f.jsxs(f.Fragment, { children: [f.jsx(Tt, Object.assign({}, To("top"), { title: (t = h == null ? void 0 : h.title) !== null && t !== void 0 ? t : l.columnActions, children: f.jsx(lt, Object.assign({ "aria-label": l.columnActions, onClick: g, size: "small" }, h, { sx: (v) => Object.assign({ "&:hover": {
    opacity: 1
  }, height: "2rem", m: "-8px -4px", opacity: 0.3, transition: "all 150ms", width: "2rem" }, Se(h == null ? void 0 : h.sx, v)), title: void 0, children: (n = h == null ? void 0 : h.children) !== null && n !== void 0 ? n : f.jsx(a, { style: { transform: "scale(0.9)" } }) })) })), p && f.jsx(e9, { anchorEl: p, header: o, setAnchorEl: m, table: i })] });
}, n9 = (e) => {
  var t, n, o, { column: i, table: s } = e, a = Je(e, ["column", "table"]);
  const { getState: l, options: { localization: c, muiFilterCheckboxProps: u } } = s, { density: d } = l(), { columnDef: p } = i, m = Object.assign(Object.assign(Object.assign({}, Se(u, {
    column: i,
    table: s
  })), Se(p.muiFilterCheckboxProps, {
    column: i,
    table: s
  })), a), g = (t = c.filterByColumn) === null || t === void 0 ? void 0 : t.replace("{column}", p.header);
  return f.jsx(Tt, Object.assign({}, To(), { title: (n = m == null ? void 0 : m.title) !== null && n !== void 0 ? n : g, children: f.jsx(iu, { control: f.jsx(ls, Object.assign({ checked: i.getFilterValue() === "true", color: i.getFilterValue() === void 0 ? "default" : "primary", indeterminate: i.getFilterValue() === void 0, size: d === "compact" ? "small" : "medium" }, m, { onChange: (h, v) => {
    var b;
    i.setFilterValue(i.getFilterValue() === void 0 ? "true" : i.getFilterValue() === "true" ? "false" : void 0), (b = m == null ? void 0 : m.onChange) === null || b === void 0 || b.call(m, h, v);
  }, onClick: (h) => {
    var v;
    h.stopPropagation(), (v = m == null ? void 0 : m.onClick) === null || v === void 0 || v.call(m, h);
  }, sx: (h) => Object.assign({ height: "2.5rem", width: "2.5rem" }, Se(m == null ? void 0 : m.sx, h)) })), disableTypography: !0, label: (o = m.title) !== null && o !== void 0 ? o : g, sx: { color: "text.secondary", fontWeight: "normal", mt: "-4px" }, title: void 0 }) }));
}, OS = (e) => {
  var t, n, o, i, s, a, l, c, u, d, p, m, g, h, v, b, { header: y, rangeFilterIndex: C, table: x } = e, T = Je(e, ["header", "rangeFilterIndex", "table"]);
  const { options: { enableColumnFilterModes: w, icons: { CloseIcon: R, FilterListIcon: E }, localization: O, manualFiltering: I, muiFilterAutocompleteProps: P, muiFilterDatePickerProps: A, muiFilterDateTimePickerProps: D, muiFilterTextFieldProps: k, muiFilterTimePickerProps: M }, refs: { filterInputRefs: F }, setColumnFilterFns: N } = x, { column: W } = y, { columnDef: H } = W, { filterVariant: B } = H, j = { column: W, rangeFilterIndex: C, table: x }, L = Object.assign(Object.assign(Object.assign({}, Se(k, j)), Se(H.muiFilterTextFieldProps, j)), T), ee = Object.assign(Object.assign({}, Se(P, j)), Se(H.muiFilterAutocompleteProps, j)), Y = Object.assign(Object.assign({}, Se(A, j)), Se(H.muiFilterDatePickerProps, j)), $ = Object.assign(Object.assign({}, Se(D, j)), Se(H.muiFilterDateTimePickerProps, j)), U = Object.assign(Object.assign({}, Se(M, j)), Se(H.muiFilterTimePickerProps, j)), { allowedColumnFilterOptions: X, currentFilterOption: Z, facetedUniqueValues: G, isAutocompleteFilter: K, isDateFilter: re, isMultiSelectFilter: ne, isRangeFilter: z, isSelectFilter: q, isTextboxFilter: _ } = $u({ header: y, table: x }), oe = KC({ header: y, table: x }), te = ["empty", "notEmpty"].includes(Z) ? (
    //@ts-ignore
    O[`filter${((n = (t = Z == null ? void 0 : Z.charAt) === null || t === void 0 ? void 0 : t.call(Z, 0)) === null || n === void 0 ? void 0 : n.toUpperCase()) + (Z == null ? void 0 : Z.slice(1))}`]
  ) : "", se = z ? C === 0 ? O.min : C === 1 ? O.max : "" : (o = L == null ? void 0 : L.placeholder) !== null && o !== void 0 ? o : (i = O.filterByColumn) === null || i === void 0 ? void 0 : i.replace("{column}", String(H.header)), ae = !!(w && H.enableColumnFilterModes !== !1 && !C && (X === void 0 || X != null && X.length)), [me, ye] = Re(null), [Te, Ve] = Re(() => {
    var pe, Me;
    return ne ? W.getFilterValue() || [] : z ? ((pe = W.getFilterValue()) === null || pe === void 0 ? void 0 : pe[C]) || "" : (Me = W.getFilterValue()) !== null && Me !== void 0 ? Me : "";
  }), [ie, be] = Re(K ? Te : null), xe = gn(is((pe) => {
    z ? W.setFilterValue((Me) => {
      const je = Me ?? ["", ""];
      return je[C] = pe ?? void 0, je;
    }) : W.setFilterValue(pe ?? void 0);
  }, _ ? I ? 400 : 200 : 1), []), Ie = (pe) => {
    Ve(pe ?? ""), xe(pe);
  }, Pe = (pe) => {
    var Me;
    const je = L.type === "date" ? pe.target.valueAsDate : L.type === "number" ? pe.target.valueAsNumber : pe.target.value;
    Ie(je), (Me = L == null ? void 0 : L.onChange) === null || Me === void 0 || Me.call(L, pe);
  }, Ce = (pe) => {
    be(pe), Ie(or(pe).value);
  }, Oe = () => {
    ne ? (Ve([]), W.setFilterValue([])) : z ? (Ve(""), W.setFilterValue((pe) => {
      const Me = Array.isArray(pe) && pe || ["", ""];
      return Me[C] = void 0, Me;
    })) : (Ve(""), W.setFilterValue(void 0));
  }, Be = () => {
    Ve(""), W.setFilterValue(void 0), N((pe) => {
      var Me;
      return Object.assign(Object.assign({}, pe), { [y.id]: (Me = X == null ? void 0 : X[0]) !== null && Me !== void 0 ? Me : "fuzzy" });
    });
  }, Ae = (pe) => {
    ye(pe.currentTarget);
  }, nt = $t(!1);
  if (Xt(() => {
    if (nt.current) {
      const pe = W.getFilterValue();
      pe === void 0 ? Oe() : Ve(z && C !== void 0 ? pe[C] : pe);
    }
    nt.current = !0;
  }, [W.getFilterValue()]), H.Filter)
    return f.jsx(f.Fragment, { children: (s = H.Filter) === null || s === void 0 ? void 0 : s.call(H, { column: W, header: y, rangeFilterIndex: C, table: x }) });
  const Ze = !K && !re && !te ? f.jsx(si, { position: "end", sx: { mr: q || ne ? "20px" : void 0 }, children: f.jsx(Tt, { placement: "right", title: (a = O.clearFilter) !== null && a !== void 0 ? a : "", children: f.jsx("span", { children: f.jsx(lt, { "aria-label": O.clearFilter, disabled: !(!((l = Te == null ? void 0 : Te.toString()) === null || l === void 0) && l.length), onClick: Oe, size: "small", sx: {
    height: "2rem",
    transform: "scale(0.9)",
    width: "2rem"
  }, children: f.jsx(R, {}) }) }) }) }) : null, dt = ae ? f.jsxs(si, { position: "start", children: [f.jsx(Tt, { title: O.changeFilterMode, children: f.jsx("span", { children: f.jsx(lt, { "aria-label": O.changeFilterMode, onClick: Ae, size: "small", sx: { height: "1.75rem", width: "1.75rem" }, children: f.jsx(E, {}) }) }) }), te && f.jsx(Ji, { label: te, onDelete: Be })] }) : null, de = Object.assign(Object.assign({ FormHelperTextProps: {
    sx: {
      fontSize: "0.75rem",
      lineHeight: "0.8rem",
      whiteSpace: "nowrap"
    }
  }, InputProps: Ze ? { endAdornment: Ze, startAdornment: dt } : { startAdornment: dt }, fullWidth: !0, helperText: ae ? f.jsx("label", { children: O.filterMode.replace(
    "{filterType}",
    // @ts-ignore
    O[`filter${((c = Z == null ? void 0 : Z.charAt(0)) === null || c === void 0 ? void 0 : c.toUpperCase()) + (Z == null ? void 0 : Z.slice(1))}`]
  ) }) : null, inputProps: {
    "aria-label": se,
    autoComplete: "new-password",
    // disable autocomplete and autofill
    disabled: !!te,
    sx: {
      textOverflow: "ellipsis",
      width: te ? 0 : void 0
    },
    title: se
  }, inputRef: (pe) => {
    F.current[`${W.id}-${C ?? 0}`] = pe, L.inputRef && (L.inputRef = pe);
  }, margin: "none", placeholder: te || q || ne ? void 0 : se, variant: "standard" }, L), { onKeyDown: (pe) => {
    var Me;
    pe.stopPropagation(), (Me = L.onKeyDown) === null || Me === void 0 || Me.call(L, pe);
  }, sx: (pe) => Object.assign({ minWidth: re ? "160px" : w && C === 0 ? "110px" : z ? "100px" : te ? "auto" : "120px", mx: "-2px", p: 0, width: "calc(100% + 4px)" }, Se(L == null ? void 0 : L.sx, pe)) }), we = {
    onChange: (pe) => {
      Ie(pe);
    },
    value: Te || null
  };
  return f.jsxs(f.Fragment, { children: [B != null && B.startsWith("time") ? f.jsx(ZC, Object.assign({}, we, U, { slotProps: {
    field: Object.assign({ clearable: !0, onClear: () => Oe() }, (u = U == null ? void 0 : U.slotProps) === null || u === void 0 ? void 0 : u.field),
    textField: Object.assign(Object.assign({}, de), (d = U == null ? void 0 : U.slotProps) === null || d === void 0 ? void 0 : d.textField)
  } })) : B != null && B.startsWith("datetime") ? f.jsx(HC, Object.assign({}, we, $, { slotProps: {
    field: Object.assign({ clearable: !0, onClear: () => Oe() }, (p = $ == null ? void 0 : $.slotProps) === null || p === void 0 ? void 0 : p.field),
    textField: Object.assign(Object.assign({}, de), (m = $ == null ? void 0 : $.slotProps) === null || m === void 0 ? void 0 : m.textField)
  } })) : B != null && B.startsWith("date") ? f.jsx(OC, Object.assign({}, we, Y, { slotProps: {
    field: Object.assign({ clearable: !0, onClear: () => Oe() }, (g = Y == null ? void 0 : Y.slotProps) === null || g === void 0 ? void 0 : g.field),
    textField: Object.assign(Object.assign({}, de), (h = Y == null ? void 0 : Y.slotProps) === null || h === void 0 ? void 0 : h.textField)
  } })) : K ? f.jsx(d0, Object.assign({ freeSolo: !0, getOptionLabel: (pe) => or(pe).label, onChange: (pe, Me) => Ce(Me), options: (v = oe == null ? void 0 : oe.map((pe) => or(pe))) !== null && v !== void 0 ? v : [] }, ee, { renderInput: (pe) => {
    var Me;
    return f.jsx(Kn, Object.assign({}, pe, de, { InputProps: Object.assign(Object.assign({}, pe.InputProps), { startAdornment: (Me = de == null ? void 0 : de.InputProps) === null || Me === void 0 ? void 0 : Me.startAdornment }), inputProps: Object.assign(Object.assign({}, pe.inputProps), de == null ? void 0 : de.inputProps), onChange: Pe, onClick: (je) => je.stopPropagation() }));
  }, value: ie })) : f.jsx(Kn, Object.assign({ select: q || ne }, de, { SelectProps: Object.assign({ MenuProps: { disableScrollLock: !0 }, displayEmpty: !0, multiple: ne, renderValue: ne ? (pe) => pe != null && pe.length ? f.jsx(De, { sx: { display: "flex", flexWrap: "wrap", gap: "2px" }, children: pe == null ? void 0 : pe.map((Me) => {
    const je = oe == null ? void 0 : oe.find((st) => or(st).value === Me);
    return f.jsx(Ji, { label: or(je).label }, Me);
  }) }) : f.jsx(De, { sx: { opacity: 0.5 }, children: se }) : void 0 }, de.SelectProps), onChange: Pe, onClick: (pe) => pe.stopPropagation(), value: Te ?? "", children: (q || ne) && [
    f.jsx(Mo, { disabled: !0, divider: !0, hidden: !0, value: "", children: f.jsx(De, { sx: { opacity: 0.5 }, children: se }) }, "p"),
    (b = L.children) !== null && b !== void 0 ? b : oe == null ? void 0 : oe.map((pe, Me) => {
      var je;
      const { label: st, value: pt } = or(pe);
      return f.jsxs(Mo, { sx: {
        alignItems: "center",
        display: "flex",
        gap: "0.5rem",
        m: 0
      }, value: pt, children: [ne && f.jsx(ls, { checked: ((je = W.getFilterValue()) !== null && je !== void 0 ? je : []).includes(pt), sx: { mr: "0.5rem" } }), st, " ", !H.filterSelectOptions && `(${G.get(pt)})`] }, `${Me}-${pt}`);
    })
  ] })), f.jsx($m, { anchorEl: me, header: y, setAnchorEl: ye, setFilterValue: Ve, table: x })] });
}, o9 = (e) => {
  var { header: t, table: n } = e, o = Je(e, ["header", "table"]);
  return f.jsx(De, Object.assign({}, o, { sx: (i) => Object.assign({ display: "grid", gap: "1rem", gridTemplateColumns: "1fr 1fr" }, Se(o == null ? void 0 : o.sx, i)), children: [0, 1].map((i) => f.jsx(OS, { header: t, rangeFilterIndex: i, table: n }, i)) }));
}, r9 = (e) => {
  var t, n, { header: o, table: i } = e, s = Je(e, ["header", "table"]);
  const { options: { enableColumnFilterModes: a, localization: l, muiFilterSliderProps: c }, refs: { filterInputRefs: u } } = i, { column: d } = o, { columnDef: p } = d, m = p._filterFn, g = a && p.enableColumnFilterModes !== !1, h = Object.assign(Object.assign(Object.assign({}, Se(c, { column: d, table: i })), Se(p.muiFilterSliderProps, { column: d, table: i })), s);
  let [v, b] = h.min !== void 0 && h.max !== void 0 ? [h.min, h.max] : (t = d.getFacetedMinMaxValues()) !== null && t !== void 0 ? t : [0, 1];
  Array.isArray(v) && (v = v[0]), Array.isArray(b) && (b = b[0]), v === null && (v = 0), b === null && (b = 1);
  const [y, C] = Re([v, b]), x = d.getFilterValue(), T = $t(!1);
  return Xt(() => {
    T.current && (x === void 0 ? C([v, b]) : Array.isArray(x) && C(x)), T.current = !0;
  }, [x, v, b]), f.jsxs(Nn, { children: [f.jsx(k0, Object.assign({ disableSwap: !0, max: b, min: v, onChange: (w, R) => {
    C(R);
  }, onChangeCommitted: (w, R) => {
    Array.isArray(R) && (R[0] <= v && R[1] >= b ? d.setFilterValue(void 0) : d.setFilterValue(R));
  }, value: y, valueLabelDisplay: "auto" }, h, { slotProps: {
    input: {
      ref: (w) => {
        var R, E;
        w && (u.current[`${d.id}-0`] = w, !((E = (R = h == null ? void 0 : h.slotProps) === null || R === void 0 ? void 0 : R.input) === null || E === void 0) && E.ref && (h.slotProps.input.ref = w));
      }
    }
  }, sx: (w) => Object.assign({ m: "auto", minWidth: `${d.getSize() - 50}px`, mt: g ? "6px" : "10px", px: "4px", width: "calc(100% - 8px)" }, Se(h == null ? void 0 : h.sx, w)) })), g ? f.jsx(su, { sx: {
    fontSize: "0.75rem",
    lineHeight: "0.8rem",
    m: "-3px -6px",
    whiteSpace: "nowrap"
  }, children: l.filterMode.replace(
    "{filterType}",
    // @ts-ignore
    l[`filter${((n = m == null ? void 0 : m.charAt(0)) === null || n === void 0 ? void 0 : n.toUpperCase()) + (m == null ? void 0 : m.slice(1))}`]
  ) }) : null] });
}, ES = (e) => {
  var { header: t, table: n } = e, o = Je(e, ["header", "table"]);
  const { getState: i, options: { columnFilterDisplayMode: s } } = n, { showColumnFilters: a } = i(), { column: l } = t, { columnDef: c } = l, { isRangeFilter: u } = $u({ header: t, table: n });
  return f.jsx(Dr, Object.assign({ in: a || s === "popover", mountOnEnter: !0, unmountOnExit: !0 }, o, { children: c.filterVariant === "checkbox" ? f.jsx(n9, { column: l, table: n }) : c.filterVariant === "range-slider" ? f.jsx(r9, { header: t, table: n }) : u ? f.jsx(o9, { header: t, table: n }) : f.jsx(OS, { header: t, table: n }) }));
}, i9 = (e) => {
  var t, n, { header: o, table: i } = e, s = Je(e, ["header", "table"]);
  const { options: { columnFilterDisplayMode: a, icons: { FilterAltIcon: l }, localization: c }, refs: { filterInputRefs: u }, setShowColumnFilters: d } = i, { column: p } = o, { columnDef: m } = p, g = p.getFilterValue(), [h, v] = Re(null), { currentFilterOption: b, isMultiSelectFilter: y, isRangeFilter: C, isSelectFilter: x } = $u({ header: o, table: i }), T = KC({ header: o, table: i }), w = (O) => or(T == null ? void 0 : T.find((I) => or(I).value === (O !== void 0 ? g[O] : g))).label, R = Array.isArray(g) && g.some(Boolean) || !!g && !Array.isArray(g), E = a === "popover" && !R ? (t = c.filterByColumn) === null || t === void 0 ? void 0 : t.replace("{column}", String(m.header)) : c.filteringByColumn.replace("{column}", String(m.header)).replace("{filterType}", b ? (
    // @ts-ignore
    c[`filter${((n = b == null ? void 0 : b.charAt(0)) === null || n === void 0 ? void 0 : n.toUpperCase()) + (b == null ? void 0 : b.slice(1))}`]
  ) : "").replace("{filterValue}", `"${Array.isArray(g) ? g.map((O, I) => y ? w(I) : O).join(`" ${C ? c.and : c.or} "`) : x ? w() : g}"`).replace('" "', "");
  return f.jsxs(f.Fragment, { children: [f.jsx(Mr, { in: a === "popover" || !!g && !C || C && // @ts-ignore
  (!!(g != null && g[0]) || !!(g != null && g[1])), unmountOnExit: !0, children: f.jsx(De, { component: "span", sx: { flex: "0 0" }, children: f.jsx(Tt, { placement: "top", title: E, children: f.jsx(lt, Object.assign({ disableRipple: !0, onClick: (O) => {
    a === "popover" ? v(O.currentTarget) : d(!0), queueMicrotask(() => {
      var I, P, A, D;
      (P = (I = u.current[`${p.id}-0`]) === null || I === void 0 ? void 0 : I.focus) === null || P === void 0 || P.call(I), (D = (A = u.current[`${p.id}-0`]) === null || A === void 0 ? void 0 : A.select) === null || D === void 0 || D.call(A);
    }), O.stopPropagation();
  }, size: "small" }, s, { sx: (O) => Object.assign({ height: "16px", ml: "4px", opacity: R ? 1 : 0.3, p: "8px", transform: "scale(0.75)", transition: "all 150ms ease-in-out", width: "16px" }, Se(s == null ? void 0 : s.sx, O)), children: f.jsx(l, {}) })) }) }) }), a === "popover" && f.jsx(Vf, { anchorEl: h, anchorOrigin: {
    horizontal: "center",
    vertical: "top"
  }, disableScrollLock: !0, onClick: (O) => O.stopPropagation(), onClose: (O) => {
    O.stopPropagation(), v(null);
  }, onKeyDown: (O) => O.key === "Enter" && v(null), open: !!h, slotProps: { paper: { sx: { overflow: "visible" } } }, transformOrigin: {
    horizontal: "center",
    vertical: "bottom"
  }, children: f.jsx(De, { sx: { p: "1rem" }, children: f.jsx(ES, { header: o, table: i }) }) })] });
}, s9 = (e) => {
  var { column: t, table: n, tableHeadCellRef: o } = e, i = Je(e, ["column", "table", "tableHeadCellRef"]);
  const { getState: s, options: { enableColumnOrdering: a, muiColumnDragHandleProps: l }, setColumnOrder: c, setDraggingColumn: u, setHoveredColumn: d } = n, { columnDef: p } = t, { columnOrder: m, draggingColumn: g, hoveredColumn: h } = s(), v = Object.assign(Object.assign(Object.assign({}, Se(l, { column: t, table: n })), Se(p.muiColumnDragHandleProps, {
    column: t,
    table: n
  })), i), b = (C) => {
    var x;
    (x = v == null ? void 0 : v.onDragStart) === null || x === void 0 || x.call(v, C), u(t);
    try {
      C.dataTransfer.setDragImage(o.current, 0, 0);
    } catch (T) {
      console.error(T);
    }
  }, y = (C) => {
    var x;
    (x = v == null ? void 0 : v.onDragEnd) === null || x === void 0 || x.call(v, C), (h == null ? void 0 : h.id) === "drop-zone" ? t.toggleGrouping() : a && h && (h == null ? void 0 : h.id) !== (g == null ? void 0 : g.id) && c(JC(t, h, m)), u(null), d(null);
  };
  return f.jsx(Vm, Object.assign({}, v, { onDragEnd: y, onDragStart: b, table: n }));
}, a9 = (e) => {
  var t, { header: n, table: o } = e, i = Je(e, ["header", "table"]);
  const { getState: s, options: { columnResizeDirection: a, columnResizeMode: l }, setColumnSizingInfo: c } = o, { density: u } = s(), { column: d } = n, p = n.getResizeHandler(), m = u === "compact" ? "-8px" : u === "comfortable" ? "-16px" : "-24px", g = d.columnDef.columnDefType === "display" ? "4px" : "0";
  return f.jsx(De, { className: "Mui-TableHeadCell-ResizeHandle-Wrapper", onDoubleClick: () => {
    c((h) => Object.assign(Object.assign({}, h), { isResizingColumn: !1 })), d.resetSize();
  }, onMouseDown: p, onTouchStart: p, style: {
    transform: d.getIsResizing() && l === "onEnd" ? `translateX(${(a === "rtl" ? -1 : 1) * ((t = s().columnSizingInfo.deltaOffset) !== null && t !== void 0 ? t : 0)}px)` : void 0
  }, sx: (h) => ({
    "&:active > hr": {
      backgroundColor: h.palette.info.main,
      opacity: n.subHeaders.length || l === "onEnd" ? 1 : 0
    },
    cursor: "col-resize",
    left: a === "rtl" ? g : void 0,
    ml: a === "rtl" ? m : void 0,
    mr: a === "ltr" ? m : void 0,
    position: "absolute",
    px: "4px",
    right: a === "ltr" ? g : void 0
  }), children: f.jsx(Ao, { className: "Mui-TableHeadCell-ResizeHandle-Divider", flexItem: !0, orientation: "vertical", sx: (h) => Object.assign({ borderRadius: "2px", borderWidth: "2px", height: "24px", touchAction: "none", transform: "translateX(4px)", transition: d.getIsResizing() ? void 0 : "all 150ms ease-in-out", userSelect: "none", zIndex: 4 }, Se(i == null ? void 0 : i.sx, h)) }) });
}, l9 = (e) => {
  var { header: t, table: n } = e, o = Je(e, ["header", "table"]);
  const { getState: i, options: { icons: { ArrowDownwardIcon: s, SyncAltIcon: a }, localization: l } } = n, { column: c } = t, { columnDef: u } = c, { isLoading: d, showSkeletons: p, sorting: m } = i(), g = !!c.getIsSorted(), h = d || p ? "" : c.getIsSorted() ? c.getIsSorted() === "desc" ? l.sortedByColumnDesc.replace("{column}", u.header) : l.sortedByColumnAsc.replace("{column}", u.header) : c.getNextSortingOrder() === "desc" ? l.sortByColumnDesc.replace("{column}", u.header) : l.sortByColumnAsc.replace("{column}", u.header), v = g ? c.getIsSorted() : void 0;
  return f.jsx(Tt, { placement: "top", title: h, children: f.jsx(p0, { badgeContent: m.length > 1 ? c.getSortIndex() + 1 : 0, overlap: "circular", children: f.jsx(V0, Object.assign({ IconComponent: g ? s : (b) => f.jsx(a, Object.assign({}, b, { direction: v, style: {
    transform: "rotate(-90deg) scaleX(0.9) translateX(-1px)"
  } })), active: !0, "aria-label": h, direction: v, onClick: (b) => {
    var y;
    b.stopPropagation(), (y = t.column.getToggleSortingHandler()) === null || y === void 0 || y(b);
  } }, o, { sx: (b) => Object.assign({ ".MuiTableSortLabel-icon": {
    color: `${b.palette.mode === "dark" ? b.palette.text.primary : b.palette.text.secondary} !important`
  }, flex: "0 0", opacity: g ? 1 : 0.3, transition: "all 150ms ease-in-out", width: "3ch" }, Se(o == null ? void 0 : o.sx, b)) })) }) });
}, c9 = (e) => {
  var t, n, o, i, s, a, { columnVirtualizer: l, header: c, staticColumnIndex: u, table: d } = e, p = Je(e, ["columnVirtualizer", "header", "staticColumnIndex", "table"]);
  const m = vn(), { getState: g, options: { columnFilterDisplayMode: h, columnResizeDirection: v, columnResizeMode: b, enableKeyboardShortcuts: y, enableColumnActions: C, enableColumnDragging: x, enableColumnOrdering: T, enableColumnPinning: w, enableGrouping: R, enableMultiSort: E, layoutMode: O, mrtTheme: { draggingBorderColor: I }, muiTableHeadCellProps: P }, refs: { tableHeadCellRefs: A }, setHoveredColumn: D } = d, { columnSizingInfo: k, density: M, draggingColumn: F, grouping: N, hoveredColumn: W, showColumnFilters: H } = g(), { column: B } = c, { columnDef: j } = B, { columnDefType: L } = j, ee = Object.assign(Object.assign(Object.assign({}, Se(P, { column: B, table: d })), Se(j.muiTableHeadCellProps, {
    column: B,
    table: d
  })), p), Y = w && j.columnDefType !== "group" && B.getIsPinned(), $ = (C || j.enableColumnActions) && j.enableColumnActions !== !1, U = x !== !1 && j.enableColumnDragging !== !1 && (x || T && j.enableColumnOrdering !== !1 || R && j.enableGrouping !== !1 && !N.includes(B.id)), X = St(() => {
    let z = 0;
    return B.getCanSort() && (z += 1), $ && (z += 1.75), U && (z += 1.5), z;
  }, [$, U]), Z = St(() => {
    const z = k.isResizingColumn === B.id && b === "onChange" && !c.subHeaders.length, q = z ? `2px solid ${I} !important` : (F == null ? void 0 : F.id) === B.id ? `1px dashed ${m.palette.grey[500]}` : (W == null ? void 0 : W.id) === B.id ? `2px dashed ${I}` : void 0;
    return z ? v === "ltr" ? { borderRight: q } : { borderLeft: q } : q ? {
      borderLeft: q,
      borderRight: q,
      borderTop: q
    } : void 0;
  }, [F, W, k.isResizingColumn]), G = (z) => {
    R && (W == null ? void 0 : W.id) === "drop-zone" && D(null), T && F && L !== "group" && D(j.enableColumnOrdering !== !1 ? B : null);
  }, K = (z) => {
    j.enableColumnOrdering !== !1 && z.preventDefault();
  }, re = (z) => {
    var q;
    Am({
      event: z,
      cellValue: c.column.columnDef.header,
      table: d,
      header: c
    }), (q = ee == null ? void 0 : ee.onKeyDown) === null || q === void 0 || q.call(ee, z);
  }, ne = (t = Se(j.Header, {
    column: B,
    header: c,
    table: d
  })) !== null && t !== void 0 ? t : j.header;
  return f.jsxs(Lt, Object.assign({ align: L === "group" ? "center" : m.direction === "rtl" ? "right" : "left", "aria-sort": B.getIsSorted() ? B.getIsSorted() === "asc" ? "ascending" : "descending" : "none", colSpan: c.colSpan, "data-can-sort": B.getCanSort() || void 0, "data-index": u, "data-pinned": !!Y || void 0, "data-sort": B.getIsSorted() || void 0, onDragEnter: G, onDragOver: K, ref: (z) => {
    var q;
    z && (A.current[B.id] = z, L !== "group" && ((q = l == null ? void 0 : l.measureElement) === null || q === void 0 || q.call(l, z)));
  }, tabIndex: y ? 0 : void 0 }, ee, { onKeyDown: re, sx: (z) => Object.assign(Object.assign({ "& :hover": {
    ".MuiButtonBase-root": {
      opacity: 1
    }
  }, flexDirection: O != null && O.startsWith("grid") ? "column" : void 0, fontWeight: "bold", overflow: "visible", p: M === "compact" ? "0.5rem" : M === "comfortable" ? L === "display" ? "0.75rem" : "1rem" : L === "display" ? "1rem 1.25rem" : "1.5rem", pb: L === "display" ? 0 : H || M === "compact" ? "0.4rem" : "0.6rem", pt: L === "group" || M === "compact" ? "0.25rem" : M === "comfortable" ? ".75rem" : "1.25rem", userSelect: E && B.getCanSort() ? "none" : void 0, verticalAlign: "top" }, Nm({
    column: B,
    header: c,
    table: d,
    tableCellProps: ee,
    theme: z
  })), Z), children: [c.isPlaceholder ? null : (n = ee.children) !== null && n !== void 0 ? n : f.jsxs(De, { className: "Mui-TableHeadCell-Content", sx: {
    alignItems: "center",
    display: "flex",
    flexDirection: (ee == null ? void 0 : ee.align) === "right" ? "row-reverse" : "row",
    justifyContent: L === "group" || (ee == null ? void 0 : ee.align) === "center" ? "center" : B.getCanResize() ? "space-between" : "flex-start",
    position: "relative",
    width: "100%"
  }, children: [f.jsxs(De, { className: "Mui-TableHeadCell-Content-Labels", onClick: B.getToggleSortingHandler(), sx: {
    alignItems: "center",
    cursor: B.getCanSort() && L !== "group" ? "pointer" : void 0,
    display: "flex",
    flexDirection: (ee == null ? void 0 : ee.align) === "right" ? "row-reverse" : "row",
    overflow: L === "data" ? "hidden" : void 0,
    pl: (ee == null ? void 0 : ee.align) === "center" ? `${X}rem` : void 0
  }, children: [f.jsx(De, { className: "Mui-TableHeadCell-Content-Wrapper", sx: {
    "&:hover": {
      textOverflow: "clip"
    },
    minWidth: `${Math.min((i = (o = j.header) === null || o === void 0 ? void 0 : o.length) !== null && i !== void 0 ? i : 0, 4)}ch`,
    overflow: L === "data" ? "hidden" : void 0,
    textOverflow: "ellipsis",
    whiteSpace: ((a = (s = j.header) === null || s === void 0 ? void 0 : s.length) !== null && a !== void 0 ? a : 0) < 20 ? "nowrap" : "normal"
  }, children: ne }), B.getCanFilter() && f.jsx(i9, { header: c, table: d }), B.getCanSort() && f.jsx(l9, { header: c, table: d })] }), L !== "group" && f.jsxs(De, { className: "Mui-TableHeadCell-Content-Actions", sx: {
    whiteSpace: "nowrap"
  }, children: [U && f.jsx(s9, { column: B, table: d, tableHeadCellRef: {
    current: A.current[B.id]
  } }), $ && f.jsx(t9, { header: c, table: d })] }), B.getCanResize() && f.jsx(a9, { header: c, table: d })] }), h === "subheader" && B.getCanFilter() && f.jsx(ES, { header: c, table: d })] }));
}, u9 = (e) => {
  var { columnVirtualizer: t, headerGroup: n, table: o } = e, i = Je(e, ["columnVirtualizer", "headerGroup", "table"]);
  const { options: { enableStickyHeader: s, layoutMode: a, mrtTheme: { baseBackgroundColor: l }, muiTableHeadRowProps: c } } = o, { virtualColumns: u, virtualPaddingLeft: d, virtualPaddingRight: p } = t ?? {}, m = Object.assign(Object.assign({}, Se(c, {
    headerGroup: n,
    table: o
  })), i);
  return f.jsxs(fr, Object.assign({}, m, { sx: (g) => Object.assign({ backgroundColor: l, boxShadow: `4px 0 8px ${ze(g.palette.common.black, 0.1)}`, display: a != null && a.startsWith("grid") ? "flex" : void 0, position: s && a === "semantic" ? "sticky" : "relative", top: 0 }, Se(m == null ? void 0 : m.sx, g)), children: [d ? f.jsx("th", { style: { display: "flex", width: d } }) : null, (u ?? n.headers).map((g, h) => {
    let v = g;
    return t && (h = g.index, v = n.headers[h]), v ? f.jsx(c9, { columnVirtualizer: t, header: v, staticColumnIndex: h, table: o }, v.id) : null;
  }), p ? f.jsx("th", { style: { display: "flex", width: p } }) : null] }));
}, Lm = (e) => {
  var t, n, o, { stackAlertBanner: i, table: s } = e, a = Je(e, ["stackAlertBanner", "table"]);
  const { getFilteredSelectedRowModel: l, getPrePaginationRowModel: c, getState: u, options: { enableRowSelection: d, enableSelectAll: p, localization: m, manualPagination: g, muiToolbarAlertBannerChipProps: h, muiToolbarAlertBannerProps: v, positionToolbarAlertBanner: b, renderToolbarAlertBannerContent: y, rowCount: C }, refs: { tablePaperRef: x } } = s, { density: T, grouping: w, rowSelection: R, showAlertBanner: E } = u(), O = Object.assign(Object.assign({}, Se(v, {
    table: s
  })), a), I = Se(h, {
    table: s
  }), P = C ?? c().flatRows.length, A = St(() => g ? Object.values(R).filter(Boolean).length : l().rows.length, [R, P, g]), D = A > 0 ? f.jsxs(Nn, { alignItems: "center", direction: "row", gap: "16px", children: [(n = (t = m.selectedCountOfRowCountRowsSelected) === null || t === void 0 ? void 0 : t.replace("{selectedCount}", A.toLocaleString())) === null || n === void 0 ? void 0 : n.replace("{rowCount}", P.toString()), f.jsx(vt, { onClick: (M) => Pm({ table: s })(M, !1, !0), size: "small", sx: { p: "2px" }, children: m.clearSelection })] }) : null, k = w.length > 0 ? f.jsxs("span", { children: [m.groupedBy, " ", w.map((M, F) => f.jsxs(Yl, { children: [F > 0 ? m.thenBy : "", f.jsx(Ji, Object.assign({ label: s.getColumn(M).columnDef.header, onDelete: () => s.getColumn(M).toggleGrouping() }, I))] }, `${F}-${M}`))] }) : null;
  return f.jsx(Dr, { in: E || !!D || !!k, timeout: i ? 200 : 0, children: f.jsx(qy, Object.assign({ color: "info", icon: !1 }, O, { sx: (M) => {
    var F, N;
    return Object.assign({ "& .MuiAlert-message": {
      maxWidth: `calc(${(N = (F = x.current) === null || F === void 0 ? void 0 : F.clientWidth) !== null && N !== void 0 ? N : 360}px - 1rem)`,
      width: "100%"
    }, borderRadius: 0, fontSize: "1rem", left: 0, mb: i ? 0 : b === "bottom" ? "-1rem" : void 0, p: 0, position: "relative", right: 0, top: 0, width: "100%", zIndex: 2 }, Se(O == null ? void 0 : O.sx, M));
  }, children: (o = y == null ? void 0 : y({
    groupedAlert: k,
    selectedAlert: D,
    table: s
  })) !== null && o !== void 0 ? o : f.jsxs(f.Fragment, { children: [(O == null ? void 0 : O.title) && f.jsx(Jy, { children: O.title }), f.jsxs(Nn, { sx: {
    p: b !== "head-overlay" ? "0.5rem 1rem" : T === "spacious" ? "0.75rem 1.25rem" : T === "comfortable" ? "0.5rem 0.75rem" : "0.25rem 0.5rem"
  }, children: [O == null ? void 0 : O.children, (O == null ? void 0 : O.children) && (D || k) && f.jsx("br", {}), f.jsxs(De, { sx: { display: "flex" }, children: [d && p && b === "head-overlay" && f.jsx(Bp, { table: s }), " ", D] }), D && k && f.jsx("br", {}), k] })] }) })) });
}, d9 = (e) => {
  var { columnVirtualizer: t, table: n } = e, o = Je(e, ["columnVirtualizer", "table"]);
  const { getState: i, options: { enableStickyHeader: s, layoutMode: a, muiTableHeadProps: l, positionToolbarAlertBanner: c }, refs: { tableHeadRef: u } } = n, { isFullScreen: d, showAlertBanner: p } = i(), m = Object.assign(Object.assign({}, Se(l, { table: n })), o), g = s || d;
  return f.jsx(du, Object.assign({}, m, { ref: (h) => {
    u.current = h, m != null && m.ref && (m.ref.current = h);
  }, sx: (h) => Object.assign({ display: a != null && a.startsWith("grid") ? "grid" : void 0, opacity: 0.97, position: g ? "sticky" : "relative", top: g && (a != null && a.startsWith("grid")) ? 0 : void 0, zIndex: g ? 2 : void 0 }, Se(m == null ? void 0 : m.sx, h)), children: c === "head-overlay" && (p || n.getSelectedRowModel().rows.length > 0) ? f.jsx("tr", { style: {
    display: a != null && a.startsWith("grid") ? "grid" : void 0
  }, children: f.jsx("th", { colSpan: n.getVisibleLeafColumns().length, style: {
    display: a != null && a.startsWith("grid") ? "grid" : void 0,
    padding: 0
  }, children: f.jsx(Lm, { table: n }) }) }) : n.getHeaderGroups().map((h) => f.jsx(u9, { columnVirtualizer: t, headerGroup: h, table: n }, h.id)) }));
}, p9 = (e) => {
  var { table: t } = e, n = Je(e, ["table"]);
  const { getFlatHeaders: o, getState: i, options: { columns: s, enableStickyHeader: a, enableTableFooter: l, enableTableHead: c, layoutMode: u, memoMode: d, muiTableProps: p, renderCaption: m } } = t, { columnSizing: g, columnSizingInfo: h, columnVisibility: v, isFullScreen: b } = i(), y = Object.assign(Object.assign({}, Se(p, { table: t })), n), C = Se(m, { table: t }), x = St(() => {
    const R = o(), E = {};
    for (let O = 0; O < R.length; O++) {
      const I = R[O], P = I.getSize();
      E[`--header-${ta(I.id)}-size`] = P, E[`--col-${ta(I.column.id)}-size`] = P;
    }
    return E;
  }, [s, g, h, v]), w = {
    columnVirtualizer: BH(t),
    table: t
  };
  return f.jsxs(cu, Object.assign({ stickyHeader: a || b }, y, { style: Object.assign(Object.assign({}, x), y == null ? void 0 : y.style), sx: (R) => Object.assign({ borderCollapse: "separate", display: u != null && u.startsWith("grid") ? "grid" : void 0, position: "relative" }, Se(y == null ? void 0 : y.sx, R)), children: [!!C && f.jsx("caption", { children: C }), c && f.jsx(d9, Object.assign({}, w)), d === "table-body" || h.isResizingColumn ? f.jsx(XH, Object.assign({}, w)) : f.jsx(RS, Object.assign({}, w)), l && f.jsx(qH, Object.assign({}, w))] }));
}, f9 = (e) => {
  var t, { table: n } = e, o = Je(e, ["table"]);
  const { options: { id: i, localization: s, mrtTheme: { baseBackgroundColor: a }, muiCircularProgressProps: l } } = n, c = Object.assign(Object.assign({}, Se(l, { table: n })), o);
  return f.jsx(De, { sx: {
    alignItems: "center",
    backgroundColor: ze(a, 0.5),
    bottom: 0,
    display: "flex",
    justifyContent: "center",
    left: 0,
    maxHeight: "100vh",
    position: "absolute",
    right: 0,
    top: 0,
    width: "100%",
    zIndex: 3
  }, children: (t = c == null ? void 0 : c.Component) !== null && t !== void 0 ? t : f.jsx(ii, Object.assign({ "aria-label": s.noRecordsToDisplay, id: `mrt-progress-${i}` }, c)) });
}, m9 = (e) => {
  var t, n, { table: o } = e, i = Je(e, ["table"]);
  const { getState: s, options: { editDisplayMode: a, enableClickToCopy: l, enableEditing: c, icons: { ContentCopy: u, EditIcon: d }, localization: p, mrtTheme: { menuBackgroundColor: m }, renderCellActionMenuItems: g }, refs: { actionCellRef: h } } = o, { actionCell: v, density: b } = s(), y = v, { row: C } = y, { column: x } = y, { columnDef: T } = x, w = (I) => {
    I == null || I.stopPropagation(), o.setActionCell(null), h.current = null;
  }, R = [
    (Se(l, y) === "context-menu" || Se(T.enableClickToCopy, y) === "context-menu") && f.jsx(Pn, { icon: f.jsx(u, {}), label: p.copy, onClick: (I) => {
      I.stopPropagation(), navigator.clipboard.writeText(y.getValue()), w();
    }, table: o }, "mrt-copy"),
    Se(c, C) && a === "cell" && f.jsx(Pn, { icon: f.jsx(d, {}), label: p.edit, onClick: () => {
      oS({ cell: y, table: o }), w();
    }, table: o }, "mrt-edit")
  ].filter(Boolean), E = {
    cell: y,
    closeMenu: w,
    column: x,
    internalMenuItems: R,
    row: C,
    table: o
  }, O = (n = (t = T.renderCellActionMenuItems) === null || t === void 0 ? void 0 : t.call(T, E)) !== null && n !== void 0 ? n : g == null ? void 0 : g(E);
  return (!!(O != null && O.length) || !!(R != null && R.length)) && f.jsx(Lr, Object.assign({ MenuListProps: {
    dense: b === "compact",
    sx: {
      backgroundColor: m
    }
  }, anchorEl: h.current, disableScrollLock: !0, onClick: (I) => I.stopPropagation(), onClose: w, open: !!y, transformOrigin: { horizontal: -100, vertical: 8 } }, i, { children: O ?? R }));
}, g9 = (e) => {
  var t, { open: n, table: o } = e, i = Je(e, ["open", "table"]);
  const { getState: s, options: { localization: a, muiCreateRowModalProps: l, muiEditRowDialogProps: c, onCreatingRowCancel: u, onEditingRowCancel: d, renderCreateRowDialogContent: p, renderEditRowDialogContent: m }, setCreatingRow: g, setEditingRow: h } = o, { creatingRow: v, editingRow: b } = s(), y = v ?? b, C = Object.assign(Object.assign(Object.assign({}, Se(c, { row: y, table: o })), v && Se(l, { row: y, table: o })), i), x = y.getAllCells().filter((T) => T.column.columnDef.columnDefType === "data").map((T) => f.jsx(TS, { cell: T, table: o }, T.id));
  return f.jsx(Df, Object.assign({ fullWidth: !0, maxWidth: "xs", onClose: (T, w) => {
    var R;
    v ? (u == null || u({ row: y, table: o }), g(null)) : (d == null || d({ row: y, table: o }), h(null)), y._valuesCache = {}, (R = C.onClose) === null || R === void 0 || R.call(C, T, w);
  }, open: n }, C, { children: (t = v && (p == null ? void 0 : p({
    internalEditComponents: x,
    row: y,
    table: o
  })) || (m == null ? void 0 : m({
    internalEditComponents: x,
    row: y,
    table: o
  }))) !== null && t !== void 0 ? t : f.jsxs(f.Fragment, { children: [f.jsx(h0, { sx: { textAlign: "center" }, children: a.edit }), f.jsx(jf, { children: f.jsx("form", { onSubmit: (T) => T.preventDefault(), children: f.jsx(Nn, { sx: {
    gap: "32px",
    paddingTop: "16px",
    width: "100%"
  }, children: x }) }) }), f.jsx(Mf, { sx: { p: "1.25rem" }, children: f.jsx(vS, { row: y, table: o, variant: "text" }) })] }) }));
}, h9 = typeof window < "u" ? jv : Xt, b9 = (e) => {
  var { table: t } = e, n = Je(e, ["table"]);
  const { getState: o, options: { createDisplayMode: i, editDisplayMode: s, enableCellActions: a, enableStickyHeader: l, muiTableContainerProps: c }, refs: { bottomToolbarRef: u, tableContainerRef: d, topToolbarRef: p } } = t, { actionCell: m, creatingRow: g, editingRow: h, isFullScreen: v, isLoading: b, showLoadingOverlay: y } = o(), C = y !== !1 && (b || y), [x, T] = Re(0), w = Object.assign(Object.assign({}, Se(c, {
    table: t
  })), n);
  h9(() => {
    var O, I, P, A;
    const D = typeof document < "u" && (I = (O = p.current) === null || O === void 0 ? void 0 : O.offsetHeight) !== null && I !== void 0 ? I : 0, k = typeof document < "u" && (A = (P = u == null ? void 0 : u.current) === null || P === void 0 ? void 0 : P.offsetHeight) !== null && A !== void 0 ? A : 0;
    T(D + k);
  });
  const R = i === "modal" && g, E = s === "modal" && h;
  return f.jsxs(uu, Object.assign({ "aria-busy": C, "aria-describedby": C ? "mrt-progress" : void 0 }, w, { ref: (O) => {
    O && (d.current = O, w != null && w.ref && (w.ref.current = O));
  }, style: Object.assign({ maxHeight: v ? `calc(100vh - ${x}px)` : void 0 }, w == null ? void 0 : w.style), sx: (O) => Object.assign({ maxHeight: l ? `clamp(350px, calc(100vh - ${x}px), 9999px)` : void 0, maxWidth: "100%", overflow: "auto", position: "relative" }, Se(w == null ? void 0 : w.sx, O)), children: [C ? f.jsx(f9, { table: t }) : null, f.jsx(p9, { table: t }), (R || E) && f.jsx(g9, { open: !0, table: t }), a && m && f.jsx(m9, { table: t })] }));
}, PS = (e) => {
  var { isTopToolbar: t, table: n } = e, o = Je(e, ["isTopToolbar", "table"]);
  const { getState: i, options: { muiLinearProgressProps: s } } = n, { isSaving: a, showProgressBars: l } = i(), c = Object.assign(Object.assign({}, Se(s, {
    isTopToolbar: t,
    table: n
  })), o);
  return f.jsx(Dr, { in: l !== !1 && (l || a), mountOnEnter: !0, sx: {
    bottom: t ? 0 : void 0,
    position: "absolute",
    top: t ? void 0 : 0,
    width: "100%"
  }, unmountOnExit: !0, children: f.jsx(y0, Object.assign({ "aria-busy": "true", "aria-label": "Loading", sx: { position: "relative" } }, c)) });
}, v9 = [5, 10, 15, 20, 25, 30, 50, 100], AS = (e) => {
  var { position: t = "bottom", table: n } = e, o = Je(e, ["position", "table"]);
  const i = vn(), s = Pr("(max-width: 720px)"), { getState: a, options: { enableToolbarInternalActions: l, icons: { ChevronLeftIcon: c, ChevronRightIcon: u, FirstPageIcon: d, LastPageIcon: p }, id: m, localization: g, muiPaginationProps: h, paginationDisplayMode: v } } = n, { pagination: { pageIndex: b = 0, pageSize: y = 10 } } = a(), C = Object.assign(Object.assign({}, Se(h, {
    table: n
  })), o), x = n.getRowCount(), T = n.getPageCount(), w = T > 2, R = b * y, E = Math.min(b * y + y, x), O = C ?? {}, { SelectProps: I = {}, disabled: P = !1, rowsPerPageOptions: A = v9, showFirstButton: D = w, showLastButton: k = w, showRowsPerPage: M = !0 } = O, F = Je(O, ["SelectProps", "disabled", "rowsPerPageOptions", "showFirstButton", "showLastButton", "showRowsPerPage"]), N = b <= 0 || P, W = E >= x || P;
  s && (I == null ? void 0 : I.native) !== !1 && (I.native = !0);
  const H = To();
  return f.jsxs(De, { className: "MuiTablePagination-root", sx: {
    alignItems: "center",
    display: "flex",
    flexWrap: "wrap",
    gap: "8px",
    justifyContent: { md: "space-between", sm: "center" },
    justifySelf: "flex-end",
    mt: t === "top" && l ? "3rem" : void 0,
    position: "relative",
    px: "8px",
    py: "12px",
    zIndex: 2
  }, children: [M && f.jsxs(De, { sx: { alignItems: "center", display: "flex", gap: "8px" }, children: [f.jsx(au, { htmlFor: `mrt-rows-per-page-${m}`, sx: { mb: 0 }, children: g.rowsPerPage }), f.jsx(za, Object.assign({ MenuProps: { disableScrollLock: !0 }, disableUnderline: !0, disabled: P, inputProps: {
    "aria-label": g.rowsPerPage,
    id: `mrt-rows-per-page-${m}`
  }, label: g.rowsPerPage, onChange: (B) => n.setPageSize(+B.target.value), sx: { mb: 0 }, value: y, variant: "standard" }, I, { children: A.map((B) => {
    var j;
    const L = typeof B != "number" ? B.value : B, ee = typeof B != "number" ? B.label : `${B}`;
    return (j = I == null ? void 0 : I.children) !== null && j !== void 0 ? j : I != null && I.native ? f.jsx("option", { value: L, children: ee }, L) : f.jsx(Mo, { sx: { m: 0 }, value: L, children: ee }, L);
  }) }))] }), v === "pages" ? f.jsx(_f, Object.assign({ count: T, disabled: P, onChange: (B, j) => n.setPageIndex(j - 1), page: b + 1, renderItem: (B) => f.jsx(Lf, Object.assign({ slots: {
    first: d,
    last: p,
    next: u,
    previous: c
  } }, B)), showFirstButton: D, showLastButton: k }, F)) : v === "default" ? f.jsxs(f.Fragment, { children: [f.jsx(Fe, { align: "center", component: "span", sx: { m: "0 4px", minWidth: "8ch" }, variant: "body2", children: `${E === 0 ? 0 : (R + 1).toLocaleString()}-${E.toLocaleString()} ${g.of} ${x.toLocaleString()}` }), f.jsxs(De, { gap: "xs", children: [D && f.jsx(Tt, Object.assign({}, H, { title: g.goToFirstPage, children: f.jsx("span", { children: f.jsx(lt, { "aria-label": g.goToFirstPage, disabled: N, onClick: () => n.firstPage(), size: "small", children: f.jsx(d, Object.assign({}, Il(i))) }) }) })), f.jsx(Tt, Object.assign({}, H, { title: g.goToPreviousPage, children: f.jsx("span", { children: f.jsx(lt, { "aria-label": g.goToPreviousPage, disabled: N, onClick: () => n.previousPage(), size: "small", children: f.jsx(c, Object.assign({}, Il(i))) }) }) })), f.jsx(Tt, Object.assign({}, H, { title: g.goToNextPage, children: f.jsx("span", { children: f.jsx(lt, { "aria-label": g.goToNextPage, disabled: W, onClick: () => n.nextPage(), size: "small", children: f.jsx(u, Object.assign({}, Il(i))) }) }) })), k && f.jsx(Tt, Object.assign({}, H, { title: g.goToLastPage, children: f.jsx("span", { children: f.jsx(lt, { "aria-label": g.goToLastPage, disabled: W, onClick: () => n.lastPage(), size: "small", children: f.jsx(p, Object.assign({}, Il(i))) }) }) }))] })] }) : null] });
}, DS = (e) => {
  var t, n, { table: o } = e, i = Je(e, ["table"]);
  const { getState: s, options: { enableGrouping: a, localization: l }, setHoveredColumn: c, setShowToolbarDropZone: u } = o, { draggingColumn: d, grouping: p, hoveredColumn: m, showToolbarDropZone: g } = s(), h = (b) => {
    c({ id: "drop-zone" });
  }, v = (b) => {
    b.preventDefault();
  };
  return Xt(() => {
    var b;
    ((b = o.options.state) === null || b === void 0 ? void 0 : b.showToolbarDropZone) !== void 0 && u(!!a && !!d && d.columnDef.enableGrouping !== !1 && !p.includes(d.id));
  }, [a, d, p]), f.jsx($r, { in: g, children: f.jsx(De, Object.assign({ className: "Mui-ToolbarDropZone", onDragEnter: h, onDragOver: v }, i, { sx: (b) => Object.assign({ alignItems: "center", backdropFilter: "blur(4px)", backgroundColor: ze(b.palette.info.main, (m == null ? void 0 : m.id) === "drop-zone" ? 0.2 : 0.1), border: `dashed ${b.palette.info.main} 2px`, boxSizing: "border-box", display: "flex", height: "100%", justifyContent: "center", position: "absolute", width: "100%", zIndex: 4 }, Se(i == null ? void 0 : i.sx, b)), children: f.jsx(Fe, { fontStyle: "italic", children: l.dropToGroupBy.replace("{column}", (n = (t = d == null ? void 0 : d.columnDef) === null || t === void 0 ? void 0 : t.header) !== null && n !== void 0 ? n : "") }) })) });
}, y9 = (e) => {
  var { table: t } = e, n = Je(e, ["table"]);
  const { getState: o, options: { enablePagination: i, muiBottomToolbarProps: s, positionPagination: a, positionToolbarAlertBanner: l, positionToolbarDropZone: c, renderBottomToolbarCustomActions: u }, refs: { bottomToolbarRef: d } } = t, { isFullScreen: p } = o(), m = Pr("(max-width:720px)"), g = Object.assign(Object.assign({}, Se(s, { table: t })), n), h = m || !!u;
  return f.jsxs(De, Object.assign({}, g, { ref: (v) => {
    v && (d.current = v, g != null && g.ref && (g.ref.current = v));
  }, sx: (v) => Object.assign(Object.assign(Object.assign({}, xS({ table: t, theme: v })), { bottom: p ? "0" : void 0, boxShadow: `0 1px 2px -1px ${ze(v.palette.grey[700], 0.5)} inset`, left: 0, position: p ? "fixed" : "relative", right: 0 }), Se(g == null ? void 0 : g.sx, v)), children: [f.jsx(PS, { isTopToolbar: !1, table: t }), l === "bottom" && f.jsx(Lm, { stackAlertBanner: h, table: t }), ["both", "bottom"].includes(c ?? "") && f.jsx(DS, { table: t }), f.jsxs(De, { sx: {
    alignItems: "center",
    boxSizing: "border-box",
    display: "flex",
    justifyContent: "space-between",
    p: "0.5rem",
    width: "100%"
  }, children: [u ? u({ table: t }) : f.jsx("span", {}), f.jsx(De, { sx: {
    display: "flex",
    justifyContent: "flex-end",
    position: h ? "relative" : "absolute",
    right: 0,
    top: 0
  }, children: i && ["both", "bottom"].includes(a ?? "") && f.jsx(AS, { position: "bottom", table: t }) })] })] }));
}, x9 = (e) => {
  var { column: t, table: n } = e, o = Je(e, ["column", "table"]);
  const { options: { icons: { PushPinIcon: i }, localization: s } } = n, a = (l) => {
    t.pin(l);
  };
  return f.jsx(De, Object.assign({}, o, { sx: (l) => Object.assign({ minWidth: "70px", textAlign: "center" }, Se(o == null ? void 0 : o.sx, l)), children: t.getIsPinned() ? f.jsx(Tt, { title: s.unpin, children: f.jsx(lt, { onClick: () => a(!1), size: "small", children: f.jsx(i, {}) }) }) : f.jsxs(f.Fragment, { children: [f.jsx(Tt, { title: s.pinToLeft, children: f.jsx(lt, { onClick: () => a("left"), size: "small", children: f.jsx(i, { style: {
    transform: "rotate(90deg)"
  } }) }) }), f.jsx(Tt, { title: s.pinToRight, children: f.jsx(lt, { onClick: () => a("right"), size: "small", children: f.jsx(i, { style: {
    transform: "rotate(-90deg)"
  } }) }) })] }) }));
}, MS = (e) => {
  var t, { allColumns: n, column: o, hoveredColumn: i, isNestedColumns: s, setHoveredColumn: a, table: l } = e, c = Je(e, ["allColumns", "column", "hoveredColumn", "isNestedColumns", "setHoveredColumn", "table"]);
  const { getState: u, options: { enableColumnOrdering: d, enableColumnPinning: p, enableHiding: m, localization: g, mrtTheme: { draggingBorderColor: h } }, setColumnOrder: v } = l, { columnOrder: b } = u(), { columnDef: y } = o, { columnDefType: C } = y, x = o.getIsVisible(), T = (A) => {
    var D, k;
    C === "group" ? (k = (D = A == null ? void 0 : A.columns) === null || D === void 0 ? void 0 : D.forEach) === null || k === void 0 || k.call(D, (M) => {
      M.toggleVisibility(!x);
    }) : A.toggleVisibility();
  }, w = $t(null), [R, E] = Re(!1), O = (A) => {
    E(!0);
    try {
      A.dataTransfer.setDragImage(w.current, 0, 0);
    } catch (D) {
      console.error(D);
    }
  }, I = (A) => {
    E(!1), a(null), i && v(JC(o, i, b));
  }, P = (A) => {
    !R && y.enableColumnOrdering !== !1 && a(o);
  };
  return !y.header || y.visibleInShowHideMenu === !1 ? null : f.jsxs(f.Fragment, { children: [f.jsx(Mo, Object.assign({ disableRipple: !0, onDragEnter: P, ref: w }, c, { sx: (A) => Object.assign({ alignItems: "center", justifyContent: "flex-start", my: 0, opacity: R ? 0.5 : 1, outline: R ? `2px dashed ${A.palette.grey[500]}` : (i == null ? void 0 : i.id) === o.id ? `2px dashed ${h}` : "none", outlineOffset: "-2px", pl: `${(o.depth + 0.5) * 2}rem`, py: "6px" }, Se(c == null ? void 0 : c.sx, A)), children: f.jsxs(De, { sx: {
    display: "flex",
    flexWrap: "nowrap",
    gap: "8px"
  }, children: [C !== "group" && d && !s && (y.enableColumnOrdering !== !1 ? f.jsx(Vm, { onDragEnd: I, onDragStart: O, table: l }) : f.jsx(De, { sx: { width: "28px" } })), p && (o.getCanPin() ? f.jsx(x9, { column: o, table: l }) : f.jsx(De, { sx: { width: "70px" } })), m ? f.jsx(iu, { checked: x, componentsProps: {
    typography: {
      sx: {
        mb: 0,
        opacity: C !== "display" ? 1 : 0.5
      }
    }
  }, control: f.jsx(Tt, Object.assign({}, To(), { title: g.toggleVisibility, children: f.jsx(F0, {}) })), disabled: !o.getCanHide(), label: y.header, onChange: () => T(o) }) : f.jsx(Fe, { sx: { alignSelf: "center" }, children: y.header })] }) })), (t = o.columns) === null || t === void 0 ? void 0 : t.map((A, D) => f.jsx(MS, { allColumns: n, column: A, hoveredColumn: i, isNestedColumns: s, setHoveredColumn: a, table: l }, `${D}-${A.id}`))] });
}, C9 = (e) => {
  var { anchorEl: t, setAnchorEl: n, table: o } = e, i = Je(e, ["anchorEl", "setAnchorEl", "table"]);
  const { getAllColumns: s, getAllLeafColumns: a, getCenterLeafColumns: l, getIsAllColumnsVisible: c, getIsSomeColumnsPinned: u, getIsSomeColumnsVisible: d, getLeftLeafColumns: p, getRightLeafColumns: m, getState: g, options: { enableColumnOrdering: h, enableColumnPinning: v, enableHiding: b, localization: y, mrtTheme: { menuBackgroundColor: C } } } = o, { columnOrder: x, columnPinning: T, density: w } = g(), R = (A) => {
    a().filter((D) => D.columnDef.enableHiding !== !1).forEach((D) => D.toggleVisibility(A));
  }, E = St(() => {
    const A = s();
    return x.length > 0 && !A.some((D) => D.columnDef.columnDefType === "group") ? [
      ...p(),
      ...Array.from(new Set(x)).map((D) => l().find((k) => (k == null ? void 0 : k.id) === D)),
      ...m()
    ].filter(Boolean) : A;
  }, [
    x,
    T,
    s(),
    l(),
    p(),
    m()
  ]), O = E.some((A) => A.columnDef.columnDefType === "group"), [I, P] = Re(null);
  return f.jsxs(Lr, Object.assign({ MenuListProps: {
    dense: w === "compact",
    sx: {
      backgroundColor: C
    }
  }, anchorEl: t, disableScrollLock: !0, onClose: () => n(null), open: !!t }, i, { children: [f.jsxs(De, { sx: {
    display: "flex",
    justifyContent: "space-between",
    p: "0.5rem",
    pt: 0
  }, children: [b && f.jsx(vt, { disabled: !d(), onClick: () => R(!1), children: y.hideAll }), h && f.jsx(vt, { onClick: () => o.setColumnOrder(jm(o.options, !0)), children: y.resetOrder }), v && f.jsx(vt, { disabled: !u(), onClick: () => o.resetColumnPinning(!0), children: y.unpinAll }), b && f.jsx(vt, { disabled: c(), onClick: () => R(!0), children: y.showAll })] }), f.jsx(Ao, {}), E.map((A, D) => f.jsx(MS, { allColumns: E, column: A, hoveredColumn: I, isNestedColumns: O, setHoveredColumn: P, table: o }, `${D}-${A.id}`))] }));
}, S9 = (e) => {
  var t, { table: n } = e, o = Je(e, ["table"]);
  const { options: { icons: { ViewColumnIcon: i }, localization: s } } = n, [a, l] = Re(null), c = (u) => {
    l(u.currentTarget);
  };
  return f.jsxs(f.Fragment, { children: [f.jsx(Tt, { title: (t = o == null ? void 0 : o.title) !== null && t !== void 0 ? t : s.showHideColumns, children: f.jsx(lt, Object.assign({ "aria-label": s.showHideColumns, onClick: c }, o, { title: void 0, children: f.jsx(i, {}) })) }), a && f.jsx(C9, { anchorEl: a, setAnchorEl: l, table: n })] });
}, w9 = (e) => {
  var t, { table: n } = e, o = Je(e, ["table"]);
  const { getState: i, options: { icons: { DensityLargeIcon: s, DensityMediumIcon: a, DensitySmallIcon: l }, localization: c }, setDensity: u } = n, { density: d } = i(), p = () => {
    u(d === "comfortable" ? "compact" : d === "compact" ? "spacious" : "comfortable");
  };
  return f.jsx(Tt, { title: (t = o == null ? void 0 : o.title) !== null && t !== void 0 ? t : c.toggleDensity, children: f.jsx(lt, Object.assign({ "aria-label": c.toggleDensity, onClick: p }, o, { title: void 0, children: d === "compact" ? f.jsx(l, {}) : d === "comfortable" ? f.jsx(a, {}) : f.jsx(s, {}) })) });
}, T9 = (e) => {
  var t, { table: n } = e, o = Je(e, ["table"]);
  const { getState: i, options: { icons: { FilterListIcon: s, FilterListOffIcon: a }, localization: l }, setShowColumnFilters: c } = n, { showColumnFilters: u } = i(), d = () => {
    c(!u);
  };
  return f.jsx(Tt, { title: (t = o == null ? void 0 : o.title) !== null && t !== void 0 ? t : l.showHideFilters, children: f.jsx(lt, Object.assign({ "aria-label": l.showHideFilters, onClick: d }, o, { title: void 0, children: u ? f.jsx(a, {}) : f.jsx(s, {}) })) });
}, I9 = (e) => {
  var t, { table: n } = e, o = Je(e, ["table"]);
  const { getState: i, options: { icons: { FullscreenExitIcon: s, FullscreenIcon: a }, localization: l }, setIsFullScreen: c } = n, { isFullScreen: u } = i(), [d, p] = Re(!1), m = () => {
    p(!1), c(!u);
  };
  return f.jsx(Tt, { open: d, title: (t = o == null ? void 0 : o.title) !== null && t !== void 0 ? t : l.toggleFullScreen, children: f.jsx(lt, Object.assign({ "aria-label": l.toggleFullScreen, onBlur: () => p(!1), onClick: m, onFocus: () => p(!0), onMouseEnter: () => p(!0), onMouseLeave: () => p(!1) }, o, { title: void 0, children: u ? f.jsx(s, {}) : f.jsx(a, {}) })) });
}, R9 = (e) => {
  var t, n, { table: o } = e, i = Je(e, ["table"]);
  const { getState: s, options: { icons: { SearchIcon: a, SearchOffIcon: l }, localization: c }, refs: { searchInputRef: u }, setShowGlobalFilter: d } = o, { globalFilter: p, showGlobalFilter: m } = s(), g = () => {
    d(!m), queueMicrotask(() => {
      var h;
      return (h = u.current) === null || h === void 0 ? void 0 : h.focus();
    });
  };
  return f.jsx(Tt, { title: (t = i == null ? void 0 : i.title) !== null && t !== void 0 ? t : c.showHideSearch, children: f.jsx(lt, Object.assign({ "aria-label": (n = i == null ? void 0 : i.title) !== null && n !== void 0 ? n : c.showHideSearch, disabled: !!p, onClick: g }, i, { title: void 0, children: m ? f.jsx(l, {}) : f.jsx(a, {}) })) });
}, O9 = (e) => {
  var t, { table: n } = e, o = Je(e, ["table"]);
  const { options: { columnFilterDisplayMode: i, enableColumnFilters: s, enableColumnOrdering: a, enableColumnPinning: l, enableDensityToggle: c, enableFilters: u, enableFullScreenToggle: d, enableGlobalFilter: p, enableHiding: m, initialState: g, renderToolbarInternalActions: h } } = n;
  return f.jsx(De, Object.assign({}, o, { sx: (v) => Object.assign({ alignItems: "center", display: "flex", zIndex: 3 }, Se(o == null ? void 0 : o.sx, v)), children: (t = h == null ? void 0 : h({
    table: n
  })) !== null && t !== void 0 ? t : f.jsxs(f.Fragment, { children: [u && p && !(g != null && g.showGlobalFilter) && f.jsx(R9, { table: n }), u && s && i !== "popover" && f.jsx(T9, { table: n }), (m || a || l) && f.jsx(S9, { table: n }), c && f.jsx(w9, { table: n }), d && f.jsx(I9, { table: n })] }) }));
}, Vd = (e) => {
  var t, { table: n } = e, o = Je(e, ["table"]);
  const { getState: i, options: { enableGlobalFilterModes: s, icons: { CloseIcon: a, SearchIcon: l }, localization: c, manualFiltering: u, muiSearchTextFieldProps: d }, refs: { searchInputRef: p }, setGlobalFilter: m } = n, { globalFilter: g, showGlobalFilter: h } = i(), v = Object.assign(Object.assign({}, Se(d, {
    table: n
  })), o), b = $t(!1), [y, C] = Re(null), [x, T] = Re(g ?? ""), w = gn(is((I) => {
    var P;
    m((P = I.target.value) !== null && P !== void 0 ? P : void 0);
  }, u ? 500 : 250), []), R = (I) => {
    T(I.target.value), w(I);
  }, E = (I) => {
    C(I.currentTarget);
  }, O = () => {
    T(""), m(void 0);
  };
  return Xt(() => {
    b.current && (g === void 0 ? O() : T(g)), b.current = !0;
  }, [g]), f.jsxs(Dr, { in: h, mountOnEnter: !0, orientation: "horizontal", unmountOnExit: !0, children: [f.jsx(Kn, Object.assign({ inputProps: Object.assign({ autoComplete: "new-password" }, v.inputProps), onChange: R, placeholder: c.search, size: "small", value: x ?? "", variant: "outlined" }, v, { InputProps: Object.assign(Object.assign({ endAdornment: f.jsx(si, { position: "end", children: f.jsx(Tt, { title: (t = c.clearSearch) !== null && t !== void 0 ? t : "", children: f.jsx("span", { children: f.jsx(lt, { "aria-label": c.clearSearch, disabled: !(x != null && x.length), onClick: O, size: "small", children: f.jsx(a, {}) }) }) }) }), startAdornment: s ? f.jsx(si, { position: "start", children: f.jsx(Tt, { title: c.changeSearchMode, children: f.jsx(lt, { "aria-label": c.changeSearchMode, onClick: E, size: "small", sx: { height: "1.75rem", width: "1.75rem" }, children: f.jsx(l, {}) }) }) }) : f.jsx(l, { style: { marginRight: "4px" } }) }, v.InputProps), { sx: (I) => {
    var P;
    return Object.assign({ mb: 0 }, Se((P = v == null ? void 0 : v.InputProps) === null || P === void 0 ? void 0 : P.sx, I));
  } }), inputRef: (I) => {
    p.current = I, v != null && v.inputRef && (v.inputRef = I);
  } })), f.jsx($m, { anchorEl: y, onSelect: O, setAnchorEl: C, table: n })] });
}, E9 = ({ table: e }) => {
  var t;
  const { getState: n, options: { enableGlobalFilter: o, enablePagination: i, enableToolbarInternalActions: s, muiTopToolbarProps: a, positionGlobalFilter: l, positionPagination: c, positionToolbarAlertBanner: u, positionToolbarDropZone: d, renderTopToolbarCustomActions: p }, refs: { topToolbarRef: m } } = e, { isFullScreen: g, showGlobalFilter: h } = n(), v = Pr("(max-width:720px)"), b = Pr("(max-width:1024px)"), y = Se(a, { table: e }), C = v || !!p || h && b, x = {
    sx: b ? void 0 : {
      zIndex: 2
    },
    table: e
  };
  return f.jsxs(De, Object.assign({}, y, { ref: (T) => {
    m.current = T, y != null && y.ref && (y.ref.current = T);
  }, sx: (T) => Object.assign(Object.assign(Object.assign({}, xS({ table: e, theme: T })), { position: g ? "sticky" : "relative", top: g ? "0" : void 0 }), Se(y == null ? void 0 : y.sx, T)), children: [u === "top" && f.jsx(Lm, { stackAlertBanner: C, table: e }), ["both", "top"].includes(d ?? "") && f.jsx(DS, { table: e }), f.jsxs(De, { sx: {
    alignItems: "flex-start",
    boxSizing: "border-box",
    display: "flex",
    gap: "0.5rem",
    justifyContent: "space-between",
    p: "0.5rem",
    position: C ? "relative" : "absolute",
    right: 0,
    top: 0,
    width: "100%"
  }, children: [o && l === "left" && f.jsx(Vd, Object.assign({}, x)), (t = p == null ? void 0 : p({ table: e })) !== null && t !== void 0 ? t : f.jsx("span", {}), s ? f.jsxs(De, { sx: {
    alignItems: "center",
    display: "flex",
    flexWrap: "wrap-reverse",
    gap: "0.5rem",
    justifyContent: "flex-end"
  }, children: [o && l === "right" && f.jsx(Vd, Object.assign({}, x)), f.jsx(O9, { table: e })] }) : o && l === "right" && f.jsx(Vd, Object.assign({}, x))] }), i && ["both", "top"].includes(c ?? "") && f.jsx(AS, { position: "top", table: e }), f.jsx(PS, { isTopToolbar: !0, table: e })] }));
}, P9 = (e) => {
  var t, n, { table: o } = e, i = Je(e, ["table"]);
  const { getState: s, options: { enableBottomToolbar: a, enableTopToolbar: l, mrtTheme: { baseBackgroundColor: c }, muiTablePaperProps: u, renderBottomToolbar: d, renderTopToolbar: p }, refs: { tablePaperRef: m } } = o, { isFullScreen: g } = s(), h = Object.assign(Object.assign({}, Se(u, { table: o })), i), v = vn();
  return f.jsxs(yn, Object.assign({ elevation: 2, onKeyDown: (b) => b.key === "Escape" && o.setIsFullScreen(!1) }, h, { ref: (b) => {
    m.current = b, h != null && h.ref && (h.ref.current = b);
  }, style: Object.assign(Object.assign({}, g ? {
    bottom: 0,
    height: "100dvh",
    left: 0,
    margin: 0,
    maxHeight: "100dvh",
    maxWidth: "100dvw",
    padding: 0,
    position: "fixed",
    right: 0,
    top: 0,
    width: "100dvw",
    zIndex: v.zIndex.modal
  } : {}), h == null ? void 0 : h.style), sx: (b) => Object.assign({ backgroundColor: c, backgroundImage: "unset", overflow: "hidden", transition: "all 100ms ease-in-out" }, Se(h == null ? void 0 : h.sx, b)), children: [l && ((t = Se(p, { table: o })) !== null && t !== void 0 ? t : f.jsx(E9, { table: o })), f.jsx(b9, { table: o }), a && ((n = Se(d, { table: o })) !== null && n !== void 0 ? n : f.jsx(y9, { table: o }))] }));
}, A9 = (e) => e.table !== void 0, D9 = (e) => {
  let t;
  return A9(e) ? t = e.table : t = SS(e), f.jsx(P9, { table: t });
}, M9 = (e, t, n) => [
  { accessorKey: "id", header: "ID", size: 100 },
  { accessorKey: "invoice_number", header: "Invoice Number", size: 150 },
  { accessorKey: "customer_name", header: "Customer Name", size: 200 },
  { accessorKey: "order_id", header: "Reference No", size: 150 },
  { accessorKey: "invoice_date", header: "Invoice Date", size: 150 },
  { accessorKey: "due_date", header: "Due Date", size: 150 },
  { accessorKey: "total_amount", header: "Total Amount", size: 150 },
  { accessorKey: "status", header: "Status", size: 100 },
  // {
  //   accessorKey: 'customer_id',
  //   header: 'Customer ID',
  //   size: 150,
  //   Cell: ({ cell }) => (
  //     <Typography>{cell.getValue()}</Typography>
  //   ),
  // },
  {
    accessorKey: "email",
    header: "Email",
    size: 200,
    Cell: ({ cell: o }) => /* @__PURE__ */ f.jsx(Fe, { children: o.getValue() })
  },
  {
    accessorKey: "actions",
    header: "Actions",
    size: 150,
    Cell: ({ row: o }) => {
      const { id: i, customer_id: s } = o.original;
      return /* @__PURE__ */ f.jsxs(f.Fragment, { children: [
        /* @__PURE__ */ f.jsx(lt, { onClick: () => t(i), title: "View Invoice", children: /* @__PURE__ */ f.jsx(i2, {}) }),
        /* @__PURE__ */ f.jsx(
          lt,
          {
            onClick: (a) => n(i, a),
            disabled: o.original.status === "Sent",
            title: "Delete Invoice",
            children: /* @__PURE__ */ f.jsx(fu, {})
          }
        )
      ] });
    }
  }
], j9 = ({ invoiceApiUrl: e, onNewClick: t, onViewInvoice: n }) => {
  const o = e;
  Re(!1);
  const [i, s] = Re(0), [a, l] = Re([]), [c, u] = Re(!1), [d, p] = Re(10), [m, g] = Re(0), [h, v] = Re({
    pageIndex: 0,
    pageSize: 10
  }), [b, y] = Re(!0), [C, x] = Re([]), T = async () => {
    u(!0);
    try {
      const P = { page_size: d, page: h.pageIndex + 1 };
      console.log(o);
      const A = await qf(P, o);
      l(A.data.list || []), g(A.data.pagination.count || 0);
    } catch (P) {
      console.error("Error fetching invoices:", P);
    } finally {
      u(!1);
    }
  }, w = async () => {
    y(!0);
    try {
      const P = await px({}, o);
      x(P.data);
    } catch (P) {
      console.error(P);
    } finally {
      y(!1);
    }
  };
  Xt(() => {
    T(), w();
  }, [i, h.pageIndex, d]);
  const R = async (P, A) => {
    A.stopPropagation(), console.log(`Deleting invoice with ID: ${P}`);
    try {
      await hx(P, api_url), s((D) => D + 1);
    } catch (D) {
      console.error("Failed to delete invoice:", D);
    } finally {
      u(!1);
    }
  }, E = (P) => {
    console.log(P), navigate(`/invoices/view/${P}`);
  }, O = (P) => {
    E(P.original.id);
  }, I = SS({
    initialState: {
      pagination: h
    },
    state: {
      pagination: h
    },
    columns: M9(s, n, R),
    data: a,
    manualPagination: !0,
    // Enable manual pagination
    rowCount: m,
    // Total number of rows based on the count
    paginationDisplayMode: "pages",
    // Display mode for pagination
    muiPaginationProps: {
      color: "primary",
      shape: "rounded",
      showRowsPerPage: !0,
      variant: "outlined"
    },
    onPaginationChange: v
  });
  return /* @__PURE__ */ f.jsx(De, { children: /* @__PURE__ */ f.jsx(De, { mt: 3, children: /* @__PURE__ */ f.jsx(yn, { elevation: 1, sx: { padding: "16px", borderRadius: "8px" }, children: c ? /* @__PURE__ */ f.jsx(ii, {}) : /* @__PURE__ */ f.jsx(
    D9,
    {
      table: I,
      onRowClick: (P) => O(P)
    }
  ) }) }) });
};
function k9({ invoiceApiUrl: e }) {
  const t = e, [n, o] = Re(!0), [i, s] = Re([]), a = async () => {
    o(!0);
    try {
      const l = await px({}, t);
      s(l.data);
    } catch (l) {
      console.error(l);
    } finally {
      o(!1);
    }
  };
  return Xt(() => {
    a();
  }, []), /* @__PURE__ */ f.jsxs(
    yn,
    {
      sx: {
        height: "155px",
        display: "flex",
        flexDirection: "column",
        alignItems: "start",
        justifyContent: "center",
        paddingX: "1.5rem",
        margin: "0.5em 0"
      },
      children: [
        /* @__PURE__ */ f.jsx(De, { sx: { mb: 3 }, children: /* @__PURE__ */ f.jsx(Fe, { color: "text.secondary", variant: "body1", sx: { fontWeight: 700 }, children: "Payment Summary" }) }),
        /* @__PURE__ */ f.jsxs(
          Ht,
          {
            container: !0,
            spacing: 2,
            direction: "row",
            justifyContent: "center",
            alignItems: "center",
            children: [
              /* @__PURE__ */ f.jsx(Ht, { item: !0, xs: 3, children: /* @__PURE__ */ f.jsx(De, { sx: { display: "flex", justifyContent: "space-around" }, children: /* @__PURE__ */ f.jsxs(De, { sx: { display: "flex" }, children: [
                /* @__PURE__ */ f.jsx(
                  Ef,
                  {
                    sx: {
                      bgcolor: Yr[300],
                      height: "50px",
                      width: "50px"
                    },
                    children: /* @__PURE__ */ f.jsx(n2, { sx: { color: "#000000" }, fontSize: "small" })
                  }
                ),
                /* @__PURE__ */ f.jsxs(De, { sx: { ml: 2 }, children: [
                  /* @__PURE__ */ f.jsx(Fe, { color: "text.secondary", variant: "body1", children: "Total Outstanding Receivables" }),
                  n ? /* @__PURE__ */ f.jsx(Ol, {}) : /* @__PURE__ */ f.jsxs(Fe, { variant: "h6", sx: { fontWeight: 700, fontSize: "1.2rem" }, children: [
                    "$",
                    parseFloat(
                      (i == null ? void 0 : i.total_receivable) || 0
                    ).toFixed(2)
                  ] })
                ] })
              ] }) }) }),
              /* @__PURE__ */ f.jsx(Ht, { item: !0, xs: !0, children: /* @__PURE__ */ f.jsxs(De, { sx: { display: "flex", justifyContent: "space-around" }, children: [
                /* @__PURE__ */ f.jsx(Ao, { orientation: "vertical", sx: { height: "60px" } }),
                /* @__PURE__ */ f.jsxs(De, { children: [
                  /* @__PURE__ */ f.jsx(Fe, { color: "text.secondary", variant: "body1", children: "Due Today" }),
                  n ? /* @__PURE__ */ f.jsx(Ol, {}) : /* @__PURE__ */ f.jsxs(Fe, { variant: "body1", sx: { fontWeight: 700, fontSize: "1.2rem", color: Yr[500] }, children: [
                    "$",
                    parseFloat((i == null ? void 0 : i.total_due_todayy) || 0).toFixed(2)
                  ] })
                ] }),
                /* @__PURE__ */ f.jsx(Ao, { orientation: "vertical", flexItem: !0, sx: { height: "60px" } })
              ] }) }),
              /* @__PURE__ */ f.jsx(Ht, { item: !0, xs: !0, children: /* @__PURE__ */ f.jsxs(De, { sx: { display: "flex", justifyContent: "space-around" }, children: [
                /* @__PURE__ */ f.jsxs(De, { children: [
                  /* @__PURE__ */ f.jsx(Fe, { color: "text.secondary", variant: "body1", children: "Due Within 30 Days" }),
                  n ? /* @__PURE__ */ f.jsx(Ol, {}) : /* @__PURE__ */ f.jsxs(Fe, { sx: { fontWeight: 700, fontSize: "1.2rem", color: "text.secondary" }, children: [
                    "$",
                    parseFloat((i == null ? void 0 : i.total_due_in_a_month) || 0).toFixed(2)
                  ] })
                ] }),
                /* @__PURE__ */ f.jsx(Ao, { orientation: "vertical", flexItem: !0, sx: { height: "60px" } })
              ] }) }),
              /* @__PURE__ */ f.jsx(Ht, { item: !0, xs: !0, children: /* @__PURE__ */ f.jsxs(De, { sx: { display: "flex", justifyContent: "space-end" }, children: [
                /* @__PURE__ */ f.jsxs(De, { children: [
                  /* @__PURE__ */ f.jsx(Fe, { color: "text.secondary", variant: "body1", children: "Overdue Invoice" }),
                  n ? /* @__PURE__ */ f.jsx(Ol, {}) : /* @__PURE__ */ f.jsxs(Fe, { sx: { fontWeight: 700, fontSize: "1.2rem", color: "text.secondary" }, children: [
                    "$",
                    parseFloat((i == null ? void 0 : i.total_over_due) || 0).toFixed(2)
                  ] })
                ] }),
                /* @__PURE__ */ f.jsx("span", { style: { height: "60px", display: "hidden" } })
              ] }) })
            ]
          }
        )
      ]
    }
  );
}
const Ol = () => /* @__PURE__ */ f.jsx(De, { sx: { height: 32, display: "flex", alignItems: "center" }, children: /* @__PURE__ */ f.jsx(Ca, { width: "100%", variant: "rounded", height: 12 }) }), F9 = ({ selected: e, onNewInvoice: t, setRefresh: n }) => /* @__PURE__ */ f.jsxs(
  yn,
  {
    elevation: 1,
    sx: {
      borderRadius: "8px",
      padding: "16px",
      display: "flex",
      margin: "90px auto",
      justifyContent: "space-between",
      alignItems: "center",
      height: "70px",
      marginBottom: "15px"
    },
    children: [
      /* @__PURE__ */ f.jsx(Fe, { variant: "h6", children: "All Invoices" }),
      /* @__PURE__ */ f.jsx(Nn, { direction: "row", spacing: 2, alignItems: "center", children: e ? /* @__PURE__ */ f.jsx(lt, { onClick: () => n((o) => o + 1), children: /* @__PURE__ */ f.jsx(pu, {}) }) : /* @__PURE__ */ f.jsx(
        vt,
        {
          size: "small",
          onClick: () => t(!0),
          variant: "contained",
          startIcon: /* @__PURE__ */ f.jsx(Hf, {}),
          children: "New"
        }
      ) })
    ]
  }
), N9 = "LOADING", V9 = "LOGOUT", ov = [
  "NINETY NINE TECHNOLOGIES (PVT) LIMITED",
  "Ninety Nine Technologies LLC"
], $9 = "INVOICE", Ja = ({ onViewInvoices: e }) => {
  const [t, n] = Re(null), [o, i] = Re(ov[0]), s = (c) => {
    n(c.currentTarget);
  }, a = () => {
    n(null);
  }, l = (c) => {
    i(c.target.value);
  };
  return /* @__PURE__ */ f.jsx(Ky, { position: "fixed", sx: { backgroundColor: "#1976d2", width: "100%", height: "70px" }, children: /* @__PURE__ */ f.jsxs(De, { display: "flex", alignItems: "center", justifyContent: "space-between", children: [
    /* @__PURE__ */ f.jsxs(De, { display: "flex", alignItems: "center", children: [
      /* @__PURE__ */ f.jsx(
        "img",
        {
          src: "https://www.99technologies.com/assets/images/99-tech-logo.webp",
          alt: "Logo",
          style: { height: "40px", marginLeft: "20px", marginRight: "10px" }
        }
      ),
      /* @__PURE__ */ f.jsx(Ht, { item: !0, sm: 0.6, xs: !0, children: /* @__PURE__ */ f.jsxs(
        Fe,
        {
          variant: "h6",
          sx: {
            height: "64px",
            fontSize: "18px",
            display: "flex",
            justifyContent: "center",
            alignItems: "center"
          },
          onClick: () => e(),
          children: [
            $9,
            " "
          ]
        }
      ) })
    ] }),
    /* @__PURE__ */ f.jsxs(De, { display: "flex", alignItems: "center", children: [
      /* @__PURE__ */ f.jsx(go, { sx: { marginRight: "20px", minWidth: 200 }, children: /* @__PURE__ */ f.jsx(
        za,
        {
          value: o,
          onChange: l,
          sx: { color: "white", backgroundColor: "#1976d2" },
          children: ov.map((c) => /* @__PURE__ */ f.jsx(Mo, { value: c, sx: { color: "black" }, children: c }, c))
        }
      ) }),
      /* @__PURE__ */ f.jsx(
        lt,
        {
          size: "large",
          color: "inherit",
          onClick: s,
          children: /* @__PURE__ */ f.jsx(Ef, { sx: { bgcolor: "white", color: "#1976d2" }, children: "U " })
        }
      ),
      /* @__PURE__ */ f.jsx(
        Lr,
        {
          anchorEl: t,
          open: !!t,
          onClose: a,
          children: /* @__PURE__ */ f.jsxs(Mo, { children: [
            /* @__PURE__ */ f.jsx($N, { fontSize: "small", style: { marginRight: "5px" } }),
            " Logout"
          ] })
        }
      )
    ] })
  ] }) });
};
function rv({ invoiceApiUrl: e }) {
  const t = ns(), n = () => {
    t("/invoices/new");
  }, o = (s) => {
    console.log(s), t(`/invoices/view/${s}`);
  }, i = () => {
    console.log("test"), t("/invoices");
  };
  return /* @__PURE__ */ f.jsxs(f.Fragment, { children: [
    /* @__PURE__ */ f.jsx(Ja, { onViewInvoices: i }),
    /* @__PURE__ */ f.jsx(F9, { onNewInvoice: n }),
    /* @__PURE__ */ f.jsx(k9, { invoiceApiUrl: e }),
    /* @__PURE__ */ f.jsx(j9, { onViewInvoice: o, invoiceApiUrl: e })
  ] });
}
const Ut = ({
  error: e,
  invalid: t,
  id: n,
  ph: o,
  label: i = "",
  required: s = !1,
  loading: a,
  width: l = "340px",
  InputProps: c,
  padding: u = "0 10px",
  ...d
}) => /* @__PURE__ */ f.jsxs(De, { sx: { display: "flex", flexDirection: "column", width: l }, children: [
  /* @__PURE__ */ f.jsxs(Nn, { direction: "row", children: [
    /* @__PURE__ */ f.jsx(
      Fe,
      {
        component: "label",
        variant: "label",
        htmlFor: n,
        sx: { marginBottom: "10px" },
        children: a ? /* @__PURE__ */ f.jsx(
          Ca,
          {
            variant: "text",
            width: "100px",
            sx: { fontSize: "1rem" }
          }
        ) : i
      }
    ),
    s && /* @__PURE__ */ f.jsx(Fe, { variant: "error", children: "*" })
  ] }),
  a ? /* @__PURE__ */ f.jsx(Ca, { variant: "rounded", height: "50px" }) : /* @__PURE__ */ f.jsx(
    Kn,
    {
      helperText: e,
      error: t,
      id: n,
      placeholder: o,
      variant: "outlined",
      InputProps: {
        sx: {
          height: "45px",
          borderRadius: "10px",
          padding: u,
          minWidth: "330px"
        },
        ...c
      },
      ...d
    }
  )
] });
function zs(e, t, n) {
  return (t = fC(t)) in e ? Object.defineProperty(e, t, {
    value: n,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[t] = n, e;
}
function iv(e, t) {
  var n = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    t && (o = o.filter(function(i) {
      return Object.getOwnPropertyDescriptor(e, i).enumerable;
    })), n.push.apply(n, o);
  }
  return n;
}
function et(e) {
  for (var t = 1; t < arguments.length; t++) {
    var n = arguments[t] != null ? arguments[t] : {};
    t % 2 ? iv(Object(n), !0).forEach(function(o) {
      zs(e, o, n[o]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : iv(Object(n)).forEach(function(o) {
      Object.defineProperty(e, o, Object.getOwnPropertyDescriptor(n, o));
    });
  }
  return e;
}
function L9(e) {
  if (Array.isArray(e)) return e;
}
function _9(e, t) {
  var n = e == null ? null : typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
  if (n != null) {
    var o, i, s, a, l = [], c = !0, u = !1;
    try {
      if (s = (n = n.call(e)).next, t === 0) {
        if (Object(n) !== n) return;
        c = !1;
      } else for (; !(c = (o = s.call(n)).done) && (l.push(o.value), l.length !== t); c = !0) ;
    } catch (d) {
      u = !0, i = d;
    } finally {
      try {
        if (!c && n.return != null && (a = n.return(), Object(a) !== a)) return;
      } finally {
        if (u) throw i;
      }
    }
    return l;
  }
}
function zp(e, t) {
  (t == null || t > e.length) && (t = e.length);
  for (var n = 0, o = Array(t); n < t; n++) o[n] = e[n];
  return o;
}
function jS(e, t) {
  if (e) {
    if (typeof e == "string") return zp(e, t);
    var n = {}.toString.call(e).slice(8, -1);
    return n === "Object" && e.constructor && (n = e.constructor.name), n === "Map" || n === "Set" ? Array.from(e) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? zp(e, t) : void 0;
  }
}
function B9() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function cr(e, t) {
  return L9(e) || _9(e, t) || jS(e, t) || B9();
}
function hr(e, t) {
  if (e == null) return {};
  var n, o, i = Xe(e, t);
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(e);
    for (o = 0; o < s.length; o++) n = s[o], t.includes(n) || {}.propertyIsEnumerable.call(e, n) && (i[n] = e[n]);
  }
  return i;
}
var z9 = ["defaultInputValue", "defaultMenuIsOpen", "defaultValue", "inputValue", "menuIsOpen", "onChange", "onInputChange", "onMenuClose", "onMenuOpen", "value"];
function W9(e) {
  var t = e.defaultInputValue, n = t === void 0 ? "" : t, o = e.defaultMenuIsOpen, i = o === void 0 ? !1 : o, s = e.defaultValue, a = s === void 0 ? null : s, l = e.inputValue, c = e.menuIsOpen, u = e.onChange, d = e.onInputChange, p = e.onMenuClose, m = e.onMenuOpen, g = e.value, h = hr(e, z9), v = Re(l !== void 0 ? l : n), b = cr(v, 2), y = b[0], C = b[1], x = Re(c !== void 0 ? c : i), T = cr(x, 2), w = T[0], R = T[1], E = Re(g !== void 0 ? g : a), O = cr(E, 2), I = O[0], P = O[1], A = gn(function(H, B) {
    typeof u == "function" && u(H, B), P(H);
  }, [u]), D = gn(function(H, B) {
    var j;
    typeof d == "function" && (j = d(H, B)), C(j !== void 0 ? j : H);
  }, [d]), k = gn(function() {
    typeof m == "function" && m(), R(!0);
  }, [m]), M = gn(function() {
    typeof p == "function" && p(), R(!1);
  }, [p]), F = l !== void 0 ? l : y, N = c !== void 0 ? c : w, W = g !== void 0 ? g : I;
  return et(et({}, h), {}, {
    inputValue: F,
    menuIsOpen: N,
    onChange: A,
    onInputChange: D,
    onMenuClose: M,
    onMenuOpen: k,
    value: W
  });
}
function H9(e, t) {
  if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
}
function sv(e, t) {
  for (var n = 0; n < t.length; n++) {
    var o = t[n];
    o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, fC(o.key), o);
  }
}
function G9(e, t, n) {
  return t && sv(e.prototype, t), n && sv(e, n), Object.defineProperty(e, "prototype", {
    writable: !1
  }), e;
}
function U9(e, t) {
  if (typeof t != "function" && t !== null) throw new TypeError("Super expression must either be null or a function");
  e.prototype = Object.create(t && t.prototype, {
    constructor: {
      value: e,
      writable: !0,
      configurable: !0
    }
  }), Object.defineProperty(e, "prototype", {
    writable: !1
  }), t && tc(e, t);
}
function yc(e) {
  return yc = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
    return t.__proto__ || Object.getPrototypeOf(t);
  }, yc(e);
}
function kS() {
  try {
    var e = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch {
  }
  return (kS = function() {
    return !!e;
  })();
}
function X9(e, t) {
  if (t && (ui(t) == "object" || typeof t == "function")) return t;
  if (t !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
  return Gy(e);
}
function Y9(e) {
  var t = kS();
  return function() {
    var n, o = yc(e);
    if (t) {
      var i = yc(this).constructor;
      n = Reflect.construct(o, arguments, i);
    } else n = o.apply(this, arguments);
    return X9(this, n);
  };
}
function Z9(e) {
  if (Array.isArray(e)) return zp(e);
}
function q9(e) {
  if (typeof Symbol < "u" && e[Symbol.iterator] != null || e["@@iterator"] != null) return Array.from(e);
}
function J9() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function _m(e) {
  return Z9(e) || q9(e) || jS(e) || J9();
}
function K9(e, t) {
  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, {
    raw: {
      value: Object.freeze(t)
    }
  }));
}
const Q9 = Math.min, e3 = Math.max, xc = Math.round, El = Math.floor, Cc = (e) => ({
  x: e,
  y: e
});
function t3(e) {
  const {
    x: t,
    y: n,
    width: o,
    height: i
  } = e;
  return {
    width: o,
    height: i,
    top: n,
    left: t,
    right: t + o,
    bottom: n + i,
    x: t,
    y: n
  };
}
function zu() {
  return typeof window < "u";
}
function FS(e) {
  return VS(e) ? (e.nodeName || "").toLowerCase() : "#document";
}
function gr(e) {
  var t;
  return (e == null || (t = e.ownerDocument) == null ? void 0 : t.defaultView) || window;
}
function NS(e) {
  var t;
  return (t = (VS(e) ? e.ownerDocument : e.document) || window.document) == null ? void 0 : t.documentElement;
}
function VS(e) {
  return zu() ? e instanceof Node || e instanceof gr(e).Node : !1;
}
function n3(e) {
  return zu() ? e instanceof Element || e instanceof gr(e).Element : !1;
}
function Bm(e) {
  return zu() ? e instanceof HTMLElement || e instanceof gr(e).HTMLElement : !1;
}
function av(e) {
  return !zu() || typeof ShadowRoot > "u" ? !1 : e instanceof ShadowRoot || e instanceof gr(e).ShadowRoot;
}
function $S(e) {
  const {
    overflow: t,
    overflowX: n,
    overflowY: o,
    display: i
  } = zm(e);
  return /auto|scroll|overlay|hidden|clip/.test(t + o + n) && !["inline", "contents"].includes(i);
}
function o3() {
  return typeof CSS > "u" || !CSS.supports ? !1 : CSS.supports("-webkit-backdrop-filter", "none");
}
function r3(e) {
  return ["html", "body", "#document"].includes(FS(e));
}
function zm(e) {
  return gr(e).getComputedStyle(e);
}
function i3(e) {
  if (FS(e) === "html")
    return e;
  const t = (
    // Step into the shadow DOM of the parent of a slotted node.
    e.assignedSlot || // DOM Element detected.
    e.parentNode || // ShadowRoot detected.
    av(e) && e.host || // Fallback.
    NS(e)
  );
  return av(t) ? t.host : t;
}
function LS(e) {
  const t = i3(e);
  return r3(t) ? e.ownerDocument ? e.ownerDocument.body : e.body : Bm(t) && $S(t) ? t : LS(t);
}
function Sc(e, t, n) {
  var o;
  t === void 0 && (t = []), n === void 0 && (n = !0);
  const i = LS(e), s = i === ((o = e.ownerDocument) == null ? void 0 : o.body), a = gr(i);
  if (s) {
    const l = Wp(a);
    return t.concat(a, a.visualViewport || [], $S(i) ? i : [], l && n ? Sc(l) : []);
  }
  return t.concat(i, Sc(i, [], n));
}
function Wp(e) {
  return e.parent && Object.getPrototypeOf(e.parent) ? e.frameElement : null;
}
function s3(e) {
  const t = zm(e);
  let n = parseFloat(t.width) || 0, o = parseFloat(t.height) || 0;
  const i = Bm(e), s = i ? e.offsetWidth : n, a = i ? e.offsetHeight : o, l = xc(n) !== s || xc(o) !== a;
  return l && (n = s, o = a), {
    width: n,
    height: o,
    $: l
  };
}
function Wm(e) {
  return n3(e) ? e : e.contextElement;
}
function lv(e) {
  const t = Wm(e);
  if (!Bm(t))
    return Cc(1);
  const n = t.getBoundingClientRect(), {
    width: o,
    height: i,
    $: s
  } = s3(t);
  let a = (s ? xc(n.width) : n.width) / o, l = (s ? xc(n.height) : n.height) / i;
  return (!a || !Number.isFinite(a)) && (a = 1), (!l || !Number.isFinite(l)) && (l = 1), {
    x: a,
    y: l
  };
}
const a3 = /* @__PURE__ */ Cc(0);
function l3(e) {
  const t = gr(e);
  return !o3() || !t.visualViewport ? a3 : {
    x: t.visualViewport.offsetLeft,
    y: t.visualViewport.offsetTop
  };
}
function c3(e, t, n) {
  return !1;
}
function cv(e, t, n, o) {
  t === void 0 && (t = !1);
  const i = e.getBoundingClientRect(), s = Wm(e);
  let a = Cc(1);
  t && (a = lv(e));
  const l = c3() ? l3(s) : Cc(0);
  let c = (i.left + l.x) / a.x, u = (i.top + l.y) / a.y, d = i.width / a.x, p = i.height / a.y;
  if (s) {
    const m = gr(s), g = o;
    let h = m, v = Wp(h);
    for (; v && o && g !== h; ) {
      const b = lv(v), y = v.getBoundingClientRect(), C = zm(v), x = y.left + (v.clientLeft + parseFloat(C.paddingLeft)) * b.x, T = y.top + (v.clientTop + parseFloat(C.paddingTop)) * b.y;
      c *= b.x, u *= b.y, d *= b.x, p *= b.y, c += x, u += T, h = gr(v), v = Wp(h);
    }
  }
  return t3({
    width: d,
    height: p,
    x: c,
    y: u
  });
}
function u3(e, t) {
  let n = null, o;
  const i = NS(e);
  function s() {
    var l;
    clearTimeout(o), (l = n) == null || l.disconnect(), n = null;
  }
  function a(l, c) {
    l === void 0 && (l = !1), c === void 0 && (c = 1), s();
    const {
      left: u,
      top: d,
      width: p,
      height: m
    } = e.getBoundingClientRect();
    if (l || t(), !p || !m)
      return;
    const g = El(d), h = El(i.clientWidth - (u + p)), v = El(i.clientHeight - (d + m)), b = El(u), C = {
      rootMargin: -g + "px " + -h + "px " + -v + "px " + -b + "px",
      threshold: e3(0, Q9(1, c)) || 1
    };
    let x = !0;
    function T(w) {
      const R = w[0].intersectionRatio;
      if (R !== c) {
        if (!x)
          return a();
        R ? a(!1, R) : o = setTimeout(() => {
          a(!1, 1e-7);
        }, 1e3);
      }
      x = !1;
    }
    try {
      n = new IntersectionObserver(T, {
        ...C,
        // Handle <iframe>s
        root: i.ownerDocument
      });
    } catch {
      n = new IntersectionObserver(T, C);
    }
    n.observe(e);
  }
  return a(!0), s;
}
function d3(e, t, n, o) {
  o === void 0 && (o = {});
  const {
    ancestorScroll: i = !0,
    ancestorResize: s = !0,
    elementResize: a = typeof ResizeObserver == "function",
    layoutShift: l = typeof IntersectionObserver == "function",
    animationFrame: c = !1
  } = o, u = Wm(e), d = i || s ? [...u ? Sc(u) : [], ...Sc(t)] : [];
  d.forEach((y) => {
    i && y.addEventListener("scroll", n, {
      passive: !0
    }), s && y.addEventListener("resize", n);
  });
  const p = u && l ? u3(u, n) : null;
  let m = -1, g = null;
  a && (g = new ResizeObserver((y) => {
    let [C] = y;
    C && C.target === u && g && (g.unobserve(t), cancelAnimationFrame(m), m = requestAnimationFrame(() => {
      var x;
      (x = g) == null || x.observe(t);
    })), n();
  }), u && !c && g.observe(u), g.observe(t));
  let h, v = c ? cv(e) : null;
  c && b();
  function b() {
    const y = cv(e);
    v && (y.x !== v.x || y.y !== v.y || y.width !== v.width || y.height !== v.height) && n(), v = y, h = requestAnimationFrame(b);
  }
  return n(), () => {
    var y;
    d.forEach((C) => {
      i && C.removeEventListener("scroll", n), s && C.removeEventListener("resize", n);
    }), p == null || p(), (y = g) == null || y.disconnect(), g = null, c && cancelAnimationFrame(h);
  };
}
var Hp = jv, p3 = ["className", "clearValue", "cx", "getStyles", "getClassNames", "getValue", "hasValue", "isMulti", "isRtl", "options", "selectOption", "selectProps", "setValue", "theme"], wc = function() {
};
function f3(e, t) {
  return t ? t[0] === "-" ? e + t : e + "__" + t : e;
}
function m3(e, t) {
  for (var n = arguments.length, o = new Array(n > 2 ? n - 2 : 0), i = 2; i < n; i++)
    o[i - 2] = arguments[i];
  var s = [].concat(o);
  if (t && e)
    for (var a in t)
      t.hasOwnProperty(a) && t[a] && s.push("".concat(f3(e, a)));
  return s.filter(function(l) {
    return l;
  }).map(function(l) {
    return String(l).trim();
  }).join(" ");
}
var uv = function(t) {
  return w3(t) ? t.filter(Boolean) : ui(t) === "object" && t !== null ? [t] : [];
}, _S = function(t) {
  t.className, t.clearValue, t.cx, t.getStyles, t.getClassNames, t.getValue, t.hasValue, t.isMulti, t.isRtl, t.options, t.selectOption, t.selectProps, t.setValue, t.theme;
  var n = hr(t, p3);
  return et({}, n);
}, on = function(t, n, o) {
  var i = t.cx, s = t.getStyles, a = t.getClassNames, l = t.className;
  return {
    css: s(n, t),
    className: i(o ?? {}, a(n, t), l)
  };
};
function Wu(e) {
  return [document.documentElement, document.body, window].indexOf(e) > -1;
}
function g3(e) {
  return Wu(e) ? window.innerHeight : e.clientHeight;
}
function BS(e) {
  return Wu(e) ? window.pageYOffset : e.scrollTop;
}
function Tc(e, t) {
  if (Wu(e)) {
    window.scrollTo(0, t);
    return;
  }
  e.scrollTop = t;
}
function h3(e) {
  var t = getComputedStyle(e), n = t.position === "absolute", o = /(auto|scroll)/;
  if (t.position === "fixed") return document.documentElement;
  for (var i = e; i = i.parentElement; )
    if (t = getComputedStyle(i), !(n && t.position === "static") && o.test(t.overflow + t.overflowY + t.overflowX))
      return i;
  return document.documentElement;
}
function b3(e, t, n, o) {
  return n * ((e = e / o - 1) * e * e + 1) + t;
}
function Pl(e, t) {
  var n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 200, o = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : wc, i = BS(e), s = t - i, a = 10, l = 0;
  function c() {
    l += a;
    var u = b3(l, i, s, n);
    Tc(e, u), l < n ? window.requestAnimationFrame(c) : o(e);
  }
  c();
}
function dv(e, t) {
  var n = e.getBoundingClientRect(), o = t.getBoundingClientRect(), i = t.offsetHeight / 3;
  o.bottom + i > n.bottom ? Tc(e, Math.min(t.offsetTop + t.clientHeight - e.offsetHeight + i, e.scrollHeight)) : o.top - i < n.top && Tc(e, Math.max(t.offsetTop - i, 0));
}
function v3(e) {
  var t = e.getBoundingClientRect();
  return {
    bottom: t.bottom,
    height: t.height,
    left: t.left,
    right: t.right,
    top: t.top,
    width: t.width
  };
}
function pv() {
  try {
    return document.createEvent("TouchEvent"), !0;
  } catch {
    return !1;
  }
}
function y3() {
  try {
    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
  } catch {
    return !1;
  }
}
var zS = !1, x3 = {
  get passive() {
    return zS = !0;
  }
}, Al = typeof window < "u" ? window : {};
Al.addEventListener && Al.removeEventListener && (Al.addEventListener("p", wc, x3), Al.removeEventListener("p", wc, !1));
var C3 = zS;
function S3(e) {
  return e != null;
}
function w3(e) {
  return Array.isArray(e);
}
function Dl(e, t, n) {
  return e ? t : n;
}
var T3 = function(t) {
  for (var n = arguments.length, o = new Array(n > 1 ? n - 1 : 0), i = 1; i < n; i++)
    o[i - 1] = arguments[i];
  var s = Object.entries(t).filter(function(a) {
    var l = cr(a, 1), c = l[0];
    return !o.includes(c);
  });
  return s.reduce(function(a, l) {
    var c = cr(l, 2), u = c[0], d = c[1];
    return a[u] = d, a;
  }, {});
}, I3 = ["children", "innerProps"], R3 = ["children", "innerProps"];
function O3(e) {
  var t = e.maxHeight, n = e.menuEl, o = e.minHeight, i = e.placement, s = e.shouldScroll, a = e.isFixedPosition, l = e.controlHeight, c = h3(n), u = {
    placement: "bottom",
    maxHeight: t
  };
  if (!n || !n.offsetParent) return u;
  var d = c.getBoundingClientRect(), p = d.height, m = n.getBoundingClientRect(), g = m.bottom, h = m.height, v = m.top, b = n.offsetParent.getBoundingClientRect(), y = b.top, C = a ? window.innerHeight : g3(c), x = BS(c), T = parseInt(getComputedStyle(n).marginBottom, 10), w = parseInt(getComputedStyle(n).marginTop, 10), R = y - w, E = C - v, O = R + x, I = p - x - v, P = g - C + x + T, A = x + v - w, D = 160;
  switch (i) {
    case "auto":
    case "bottom":
      if (E >= h)
        return {
          placement: "bottom",
          maxHeight: t
        };
      if (I >= h && !a)
        return s && Pl(c, P, D), {
          placement: "bottom",
          maxHeight: t
        };
      if (!a && I >= o || a && E >= o) {
        s && Pl(c, P, D);
        var k = a ? E - T : I - T;
        return {
          placement: "bottom",
          maxHeight: k
        };
      }
      if (i === "auto" || a) {
        var M = t, F = a ? R : O;
        return F >= o && (M = Math.min(F - T - l, t)), {
          placement: "top",
          maxHeight: M
        };
      }
      if (i === "bottom")
        return s && Tc(c, P), {
          placement: "bottom",
          maxHeight: t
        };
      break;
    case "top":
      if (R >= h)
        return {
          placement: "top",
          maxHeight: t
        };
      if (O >= h && !a)
        return s && Pl(c, A, D), {
          placement: "top",
          maxHeight: t
        };
      if (!a && O >= o || a && R >= o) {
        var N = t;
        return (!a && O >= o || a && R >= o) && (N = a ? R - w : O - w), s && Pl(c, A, D), {
          placement: "top",
          maxHeight: N
        };
      }
      return {
        placement: "bottom",
        maxHeight: t
      };
    default:
      throw new Error('Invalid placement provided "'.concat(i, '".'));
  }
  return u;
}
function E3(e) {
  var t = {
    bottom: "top",
    top: "bottom"
  };
  return e ? t[e] : "bottom";
}
var WS = function(t) {
  return t === "auto" ? "bottom" : t;
}, P3 = function(t, n) {
  var o, i = t.placement, s = t.theme, a = s.borderRadius, l = s.spacing, c = s.colors;
  return et((o = {
    label: "menu"
  }, zs(o, E3(i), "100%"), zs(o, "position", "absolute"), zs(o, "width", "100%"), zs(o, "zIndex", 1), o), n ? {} : {
    backgroundColor: c.neutral0,
    borderRadius: a,
    boxShadow: "0 0 0 1px hsla(0, 0%, 0%, 0.1), 0 4px 11px hsla(0, 0%, 0%, 0.1)",
    marginBottom: l.menuGutter,
    marginTop: l.menuGutter
  });
}, HS = /* @__PURE__ */ vw(null), A3 = function(t) {
  var n = t.children, o = t.minMenuHeight, i = t.maxMenuHeight, s = t.menuPlacement, a = t.menuPosition, l = t.menuShouldScrollIntoView, c = t.theme, u = Mv(HS) || {}, d = u.setPortalPlacement, p = $t(null), m = Re(i), g = cr(m, 2), h = g[0], v = g[1], b = Re(null), y = cr(b, 2), C = y[0], x = y[1], T = c.spacing.controlHeight;
  return Hp(function() {
    var w = p.current;
    if (w) {
      var R = a === "fixed", E = l && !R, O = O3({
        maxHeight: i,
        menuEl: w,
        minHeight: o,
        placement: s,
        shouldScroll: E,
        isFixedPosition: R,
        controlHeight: T
      });
      v(O.maxHeight), x(O.placement), d == null || d(O.placement);
    }
  }, [i, s, a, l, o, d, T]), n({
    ref: p,
    placerProps: et(et({}, t), {}, {
      placement: C || WS(s),
      maxHeight: h
    })
  });
}, D3 = function(t) {
  var n = t.children, o = t.innerRef, i = t.innerProps;
  return tt("div", V({}, on(t, "menu", {
    menu: !0
  }), {
    ref: o
  }, i), n);
}, M3 = D3, j3 = function(t, n) {
  var o = t.maxHeight, i = t.theme.spacing.baseUnit;
  return et({
    maxHeight: o,
    overflowY: "auto",
    position: "relative",
    // required for offset[Height, Top] > keyboard scroll
    WebkitOverflowScrolling: "touch"
  }, n ? {} : {
    paddingBottom: i,
    paddingTop: i
  });
}, k3 = function(t) {
  var n = t.children, o = t.innerProps, i = t.innerRef, s = t.isMulti;
  return tt("div", V({}, on(t, "menuList", {
    "menu-list": !0,
    "menu-list--is-multi": s
  }), {
    ref: i
  }, o), n);
}, GS = function(t, n) {
  var o = t.theme, i = o.spacing.baseUnit, s = o.colors;
  return et({
    textAlign: "center"
  }, n ? {} : {
    color: s.neutral40,
    padding: "".concat(i * 2, "px ").concat(i * 3, "px")
  });
}, F3 = GS, N3 = GS, V3 = function(t) {
  var n = t.children, o = n === void 0 ? "No options" : n, i = t.innerProps, s = hr(t, I3);
  return tt("div", V({}, on(et(et({}, s), {}, {
    children: o,
    innerProps: i
  }), "noOptionsMessage", {
    "menu-notice": !0,
    "menu-notice--no-options": !0
  }), i), o);
}, $3 = function(t) {
  var n = t.children, o = n === void 0 ? "Loading..." : n, i = t.innerProps, s = hr(t, R3);
  return tt("div", V({}, on(et(et({}, s), {}, {
    children: o,
    innerProps: i
  }), "loadingMessage", {
    "menu-notice": !0,
    "menu-notice--loading": !0
  }), i), o);
}, L3 = function(t) {
  var n = t.rect, o = t.offset, i = t.position;
  return {
    left: n.left,
    position: i,
    top: o,
    width: n.width,
    zIndex: 1
  };
}, _3 = function(t) {
  var n = t.appendTo, o = t.children, i = t.controlElement, s = t.innerProps, a = t.menuPlacement, l = t.menuPosition, c = $t(null), u = $t(null), d = Re(WS(a)), p = cr(d, 2), m = p[0], g = p[1], h = St(function() {
    return {
      setPortalPlacement: g
    };
  }, []), v = Re(null), b = cr(v, 2), y = b[0], C = b[1], x = gn(function() {
    if (i) {
      var E = v3(i), O = l === "fixed" ? 0 : window.pageYOffset, I = E[m] + O;
      (I !== (y == null ? void 0 : y.offset) || E.left !== (y == null ? void 0 : y.rect.left) || E.width !== (y == null ? void 0 : y.rect.width)) && C({
        offset: I,
        rect: E
      });
    }
  }, [i, l, m, y == null ? void 0 : y.offset, y == null ? void 0 : y.rect.left, y == null ? void 0 : y.rect.width]);
  Hp(function() {
    x();
  }, [x]);
  var T = gn(function() {
    typeof u.current == "function" && (u.current(), u.current = null), i && c.current && (u.current = d3(i, c.current, x, {
      elementResize: "ResizeObserver" in window
    }));
  }, [i, x]);
  Hp(function() {
    T();
  }, [T]);
  var w = gn(function(E) {
    c.current = E, T();
  }, [T]);
  if (!n && l !== "fixed" || !y) return null;
  var R = tt("div", V({
    ref: w
  }, on(et(et({}, t), {}, {
    offset: y.offset,
    position: l,
    rect: y.rect
  }), "menuPortal", {
    "menu-portal": !0
  }), s), o);
  return tt(HS.Provider, {
    value: h
  }, n ? /* @__PURE__ */ ww(R, n) : R);
}, B3 = function(t) {
  var n = t.isDisabled, o = t.isRtl;
  return {
    label: "container",
    direction: o ? "rtl" : void 0,
    pointerEvents: n ? "none" : void 0,
    // cancel mouse events when disabled
    position: "relative"
  };
}, z3 = function(t) {
  var n = t.children, o = t.innerProps, i = t.isDisabled, s = t.isRtl;
  return tt("div", V({}, on(t, "container", {
    "--is-disabled": i,
    "--is-rtl": s
  }), o), n);
}, W3 = function(t, n) {
  var o = t.theme.spacing, i = t.isMulti, s = t.hasValue, a = t.selectProps.controlShouldRenderValue;
  return et({
    alignItems: "center",
    display: i && s && a ? "flex" : "grid",
    flex: 1,
    flexWrap: "wrap",
    WebkitOverflowScrolling: "touch",
    position: "relative",
    overflow: "hidden"
  }, n ? {} : {
    padding: "".concat(o.baseUnit / 2, "px ").concat(o.baseUnit * 2, "px")
  });
}, H3 = function(t) {
  var n = t.children, o = t.innerProps, i = t.isMulti, s = t.hasValue;
  return tt("div", V({}, on(t, "valueContainer", {
    "value-container": !0,
    "value-container--is-multi": i,
    "value-container--has-value": s
  }), o), n);
}, G3 = function() {
  return {
    alignItems: "center",
    alignSelf: "stretch",
    display: "flex",
    flexShrink: 0
  };
}, U3 = function(t) {
  var n = t.children, o = t.innerProps;
  return tt("div", V({}, on(t, "indicatorsContainer", {
    indicators: !0
  }), o), n);
}, fv, X3 = ["size"], Y3 = ["innerProps", "isRtl", "size"];
function Z3() {
  return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
}
var q3 = process.env.NODE_ENV === "production" ? {
  name: "8mmkcg",
  styles: "display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0"
} : {
  name: "tj5bde-Svg",
  styles: "display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;label:Svg;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: Z3
}, US = function(t) {
  var n = t.size, o = hr(t, X3);
  return tt("svg", V({
    height: n,
    width: n,
    viewBox: "0 0 20 20",
    "aria-hidden": "true",
    focusable: "false",
    css: q3
  }, o));
}, Hm = function(t) {
  return tt(US, V({
    size: 20
  }, t), tt("path", {
    d: "M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z"
  }));
}, XS = function(t) {
  return tt(US, V({
    size: 20
  }, t), tt("path", {
    d: "M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
  }));
}, YS = function(t, n) {
  var o = t.isFocused, i = t.theme, s = i.spacing.baseUnit, a = i.colors;
  return et({
    label: "indicatorContainer",
    display: "flex",
    transition: "color 150ms"
  }, n ? {} : {
    color: o ? a.neutral60 : a.neutral20,
    padding: s * 2,
    ":hover": {
      color: o ? a.neutral80 : a.neutral40
    }
  });
}, J3 = YS, K3 = function(t) {
  var n = t.children, o = t.innerProps;
  return tt("div", V({}, on(t, "dropdownIndicator", {
    indicator: !0,
    "dropdown-indicator": !0
  }), o), n || tt(XS, null));
}, Q3 = YS, eG = function(t) {
  var n = t.children, o = t.innerProps;
  return tt("div", V({}, on(t, "clearIndicator", {
    indicator: !0,
    "clear-indicator": !0
  }), o), n || tt(Hm, null));
}, tG = function(t, n) {
  var o = t.isDisabled, i = t.theme, s = i.spacing.baseUnit, a = i.colors;
  return et({
    label: "indicatorSeparator",
    alignSelf: "stretch",
    width: 1
  }, n ? {} : {
    backgroundColor: o ? a.neutral10 : a.neutral20,
    marginBottom: s * 2,
    marginTop: s * 2
  });
}, nG = function(t) {
  var n = t.innerProps;
  return tt("span", V({}, n, on(t, "indicatorSeparator", {
    "indicator-separator": !0
  })));
}, oG = ko(fv || (fv = K9([`
  0%, 80%, 100% { opacity: 0; }
  40% { opacity: 1; }
`]))), rG = function(t, n) {
  var o = t.isFocused, i = t.size, s = t.theme, a = s.colors, l = s.spacing.baseUnit;
  return et({
    label: "loadingIndicator",
    display: "flex",
    transition: "color 150ms",
    alignSelf: "center",
    fontSize: i,
    lineHeight: 1,
    marginRight: i,
    textAlign: "center",
    verticalAlign: "middle"
  }, n ? {} : {
    color: o ? a.neutral60 : a.neutral20,
    padding: l * 2
  });
}, $d = function(t) {
  var n = t.delay, o = t.offset;
  return tt("span", {
    css: /* @__PURE__ */ Ko({
      animation: "".concat(oG, " 1s ease-in-out ").concat(n, "ms infinite;"),
      backgroundColor: "currentColor",
      borderRadius: "1em",
      display: "inline-block",
      marginLeft: o ? "1em" : void 0,
      height: "1em",
      verticalAlign: "top",
      width: "1em"
    }, process.env.NODE_ENV === "production" ? "" : ";label:LoadingDot;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */")
  });
}, iG = function(t) {
  var n = t.innerProps, o = t.isRtl, i = t.size, s = i === void 0 ? 4 : i, a = hr(t, Y3);
  return tt("div", V({}, on(et(et({}, a), {}, {
    innerProps: n,
    isRtl: o,
    size: s
  }), "loadingIndicator", {
    indicator: !0,
    "loading-indicator": !0
  }), n), tt($d, {
    delay: 0,
    offset: o
  }), tt($d, {
    delay: 160,
    offset: !0
  }), tt($d, {
    delay: 320,
    offset: !o
  }));
}, sG = function(t, n) {
  var o = t.isDisabled, i = t.isFocused, s = t.theme, a = s.colors, l = s.borderRadius, c = s.spacing;
  return et({
    label: "control",
    alignItems: "center",
    cursor: "default",
    display: "flex",
    flexWrap: "wrap",
    justifyContent: "space-between",
    minHeight: c.controlHeight,
    outline: "0 !important",
    position: "relative",
    transition: "all 100ms"
  }, n ? {} : {
    backgroundColor: o ? a.neutral5 : a.neutral0,
    borderColor: o ? a.neutral10 : i ? a.primary : a.neutral20,
    borderRadius: l,
    borderStyle: "solid",
    borderWidth: 1,
    boxShadow: i ? "0 0 0 1px ".concat(a.primary) : void 0,
    "&:hover": {
      borderColor: i ? a.primary : a.neutral30
    }
  });
}, aG = function(t) {
  var n = t.children, o = t.isDisabled, i = t.isFocused, s = t.innerRef, a = t.innerProps, l = t.menuIsOpen;
  return tt("div", V({
    ref: s
  }, on(t, "control", {
    control: !0,
    "control--is-disabled": o,
    "control--is-focused": i,
    "control--menu-is-open": l
  }), a, {
    "aria-disabled": o || void 0
  }), n);
}, lG = aG, cG = ["data"], uG = function(t, n) {
  var o = t.theme.spacing;
  return n ? {} : {
    paddingBottom: o.baseUnit * 2,
    paddingTop: o.baseUnit * 2
  };
}, dG = function(t) {
  var n = t.children, o = t.cx, i = t.getStyles, s = t.getClassNames, a = t.Heading, l = t.headingProps, c = t.innerProps, u = t.label, d = t.theme, p = t.selectProps;
  return tt("div", V({}, on(t, "group", {
    group: !0
  }), c), tt(a, V({}, l, {
    selectProps: p,
    theme: d,
    getStyles: i,
    getClassNames: s,
    cx: o
  }), u), tt("div", null, n));
}, pG = function(t, n) {
  var o = t.theme, i = o.colors, s = o.spacing;
  return et({
    label: "group",
    cursor: "default",
    display: "block"
  }, n ? {} : {
    color: i.neutral40,
    fontSize: "75%",
    fontWeight: 500,
    marginBottom: "0.25em",
    paddingLeft: s.baseUnit * 3,
    paddingRight: s.baseUnit * 3,
    textTransform: "uppercase"
  });
}, fG = function(t) {
  var n = _S(t);
  n.data;
  var o = hr(n, cG);
  return tt("div", V({}, on(t, "groupHeading", {
    "group-heading": !0
  }), o));
}, mG = dG, gG = ["innerRef", "isDisabled", "isHidden", "inputClassName"], hG = function(t, n) {
  var o = t.isDisabled, i = t.value, s = t.theme, a = s.spacing, l = s.colors;
  return et(et({
    visibility: o ? "hidden" : "visible",
    // force css to recompute when value change due to @emotion bug.
    // We can remove it whenever the bug is fixed.
    transform: i ? "translateZ(0)" : ""
  }, bG), n ? {} : {
    margin: a.baseUnit / 2,
    paddingBottom: a.baseUnit / 2,
    paddingTop: a.baseUnit / 2,
    color: l.neutral80
  });
}, ZS = {
  gridArea: "1 / 2",
  font: "inherit",
  minWidth: "2px",
  border: 0,
  margin: 0,
  outline: 0,
  padding: 0
}, bG = {
  flex: "1 1 auto",
  display: "inline-grid",
  gridArea: "1 / 1 / 2 / 3",
  gridTemplateColumns: "0 min-content",
  "&:after": et({
    content: 'attr(data-value) " "',
    visibility: "hidden",
    whiteSpace: "pre"
  }, ZS)
}, vG = function(t) {
  return et({
    label: "input",
    color: "inherit",
    background: 0,
    opacity: t ? 0 : 1,
    width: "100%"
  }, ZS);
}, yG = function(t) {
  var n = t.cx, o = t.value, i = _S(t), s = i.innerRef, a = i.isDisabled, l = i.isHidden, c = i.inputClassName, u = hr(i, gG);
  return tt("div", V({}, on(t, "input", {
    "input-container": !0
  }), {
    "data-value": o || ""
  }), tt("input", V({
    className: n({
      input: !0
    }, c),
    ref: s,
    style: vG(l),
    disabled: a
  }, u)));
}, xG = yG, CG = function(t, n) {
  var o = t.theme, i = o.spacing, s = o.borderRadius, a = o.colors;
  return et({
    label: "multiValue",
    display: "flex",
    minWidth: 0
  }, n ? {} : {
    backgroundColor: a.neutral10,
    borderRadius: s / 2,
    margin: i.baseUnit / 2
  });
}, SG = function(t, n) {
  var o = t.theme, i = o.borderRadius, s = o.colors, a = t.cropWithEllipsis;
  return et({
    overflow: "hidden",
    textOverflow: a || a === void 0 ? "ellipsis" : void 0,
    whiteSpace: "nowrap"
  }, n ? {} : {
    borderRadius: i / 2,
    color: s.neutral80,
    fontSize: "85%",
    padding: 3,
    paddingLeft: 6
  });
}, wG = function(t, n) {
  var o = t.theme, i = o.spacing, s = o.borderRadius, a = o.colors, l = t.isFocused;
  return et({
    alignItems: "center",
    display: "flex"
  }, n ? {} : {
    borderRadius: s / 2,
    backgroundColor: l ? a.dangerLight : void 0,
    paddingLeft: i.baseUnit,
    paddingRight: i.baseUnit,
    ":hover": {
      backgroundColor: a.dangerLight,
      color: a.danger
    }
  });
}, qS = function(t) {
  var n = t.children, o = t.innerProps;
  return tt("div", o, n);
}, TG = qS, IG = qS;
function RG(e) {
  var t = e.children, n = e.innerProps;
  return tt("div", V({
    role: "button"
  }, n), t || tt(Hm, {
    size: 14
  }));
}
var OG = function(t) {
  var n = t.children, o = t.components, i = t.data, s = t.innerProps, a = t.isDisabled, l = t.removeProps, c = t.selectProps, u = o.Container, d = o.Label, p = o.Remove;
  return tt(u, {
    data: i,
    innerProps: et(et({}, on(t, "multiValue", {
      "multi-value": !0,
      "multi-value--is-disabled": a
    })), s),
    selectProps: c
  }, tt(d, {
    data: i,
    innerProps: et({}, on(t, "multiValueLabel", {
      "multi-value__label": !0
    })),
    selectProps: c
  }, n), tt(p, {
    data: i,
    innerProps: et(et({}, on(t, "multiValueRemove", {
      "multi-value__remove": !0
    })), {}, {
      "aria-label": "Remove ".concat(n || "option")
    }, l),
    selectProps: c
  }));
}, EG = OG, PG = function(t, n) {
  var o = t.isDisabled, i = t.isFocused, s = t.isSelected, a = t.theme, l = a.spacing, c = a.colors;
  return et({
    label: "option",
    cursor: "default",
    display: "block",
    fontSize: "inherit",
    width: "100%",
    userSelect: "none",
    WebkitTapHighlightColor: "rgba(0, 0, 0, 0)"
  }, n ? {} : {
    backgroundColor: s ? c.primary : i ? c.primary25 : "transparent",
    color: o ? c.neutral20 : s ? c.neutral0 : "inherit",
    padding: "".concat(l.baseUnit * 2, "px ").concat(l.baseUnit * 3, "px"),
    // provide some affordance on touch devices
    ":active": {
      backgroundColor: o ? void 0 : s ? c.primary : c.primary50
    }
  });
}, AG = function(t) {
  var n = t.children, o = t.isDisabled, i = t.isFocused, s = t.isSelected, a = t.innerRef, l = t.innerProps;
  return tt("div", V({}, on(t, "option", {
    option: !0,
    "option--is-disabled": o,
    "option--is-focused": i,
    "option--is-selected": s
  }), {
    ref: a,
    "aria-disabled": o
  }, l), n);
}, DG = AG, MG = function(t, n) {
  var o = t.theme, i = o.spacing, s = o.colors;
  return et({
    label: "placeholder",
    gridArea: "1 / 1 / 2 / 3"
  }, n ? {} : {
    color: s.neutral50,
    marginLeft: i.baseUnit / 2,
    marginRight: i.baseUnit / 2
  });
}, jG = function(t) {
  var n = t.children, o = t.innerProps;
  return tt("div", V({}, on(t, "placeholder", {
    placeholder: !0
  }), o), n);
}, kG = jG, FG = function(t, n) {
  var o = t.isDisabled, i = t.theme, s = i.spacing, a = i.colors;
  return et({
    label: "singleValue",
    gridArea: "1 / 1 / 2 / 3",
    maxWidth: "100%",
    overflow: "hidden",
    textOverflow: "ellipsis",
    whiteSpace: "nowrap"
  }, n ? {} : {
    color: o ? a.neutral40 : a.neutral80,
    marginLeft: s.baseUnit / 2,
    marginRight: s.baseUnit / 2
  });
}, NG = function(t) {
  var n = t.children, o = t.isDisabled, i = t.innerProps;
  return tt("div", V({}, on(t, "singleValue", {
    "single-value": !0,
    "single-value--is-disabled": o
  }), i), n);
}, VG = NG, $G = {
  ClearIndicator: eG,
  Control: lG,
  DropdownIndicator: K3,
  DownChevron: XS,
  CrossIcon: Hm,
  Group: mG,
  GroupHeading: fG,
  IndicatorsContainer: U3,
  IndicatorSeparator: nG,
  Input: xG,
  LoadingIndicator: iG,
  Menu: M3,
  MenuList: k3,
  MenuPortal: _3,
  LoadingMessage: $3,
  NoOptionsMessage: V3,
  MultiValue: EG,
  MultiValueContainer: TG,
  MultiValueLabel: IG,
  MultiValueRemove: RG,
  Option: DG,
  Placeholder: kG,
  SelectContainer: z3,
  SingleValue: VG,
  ValueContainer: H3
}, LG = function(t) {
  return et(et({}, $G), t.components);
}, mv = Number.isNaN || function(t) {
  return typeof t == "number" && t !== t;
};
function _G(e, t) {
  return !!(e === t || mv(e) && mv(t));
}
function BG(e, t) {
  if (e.length !== t.length)
    return !1;
  for (var n = 0; n < e.length; n++)
    if (!_G(e[n], t[n]))
      return !1;
  return !0;
}
function zG(e, t) {
  t === void 0 && (t = BG);
  var n = null;
  function o() {
    for (var i = [], s = 0; s < arguments.length; s++)
      i[s] = arguments[s];
    if (n && n.lastThis === this && t(i, n.lastArgs))
      return n.lastResult;
    var a = e.apply(this, i);
    return n = {
      lastResult: a,
      lastArgs: i,
      lastThis: this
    }, a;
  }
  return o.clear = function() {
    n = null;
  }, o;
}
function WG() {
  return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
}
var HG = process.env.NODE_ENV === "production" ? {
  name: "7pg0cj-a11yText",
  styles: "label:a11yText;z-index:9999;border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;width:1px;position:absolute;overflow:hidden;padding:0;white-space:nowrap"
} : {
  name: "1f43avz-a11yText-A11yText",
  styles: "label:a11yText;z-index:9999;border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;width:1px;position:absolute;overflow:hidden;padding:0;white-space:nowrap;label:A11yText;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkExMXlUZXh0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFNSSIsImZpbGUiOiJBMTF5VGV4dC50c3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCB7IGpzeCB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcblxuLy8gQXNzaXN0aXZlIHRleHQgdG8gZGVzY3JpYmUgdmlzdWFsIGVsZW1lbnRzLiBIaWRkZW4gZm9yIHNpZ2h0ZWQgdXNlcnMuXG5jb25zdCBBMTF5VGV4dCA9IChwcm9wczogSlNYLkludHJpbnNpY0VsZW1lbnRzWydzcGFuJ10pID0+IChcbiAgPHNwYW5cbiAgICBjc3M9e3tcbiAgICAgIGxhYmVsOiAnYTExeVRleHQnLFxuICAgICAgekluZGV4OiA5OTk5LFxuICAgICAgYm9yZGVyOiAwLFxuICAgICAgY2xpcDogJ3JlY3QoMXB4LCAxcHgsIDFweCwgMXB4KScsXG4gICAgICBoZWlnaHQ6IDEsXG4gICAgICB3aWR0aDogMSxcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICAgICAgcGFkZGluZzogMCxcbiAgICAgIHdoaXRlU3BhY2U6ICdub3dyYXAnLFxuICAgIH19XG4gICAgey4uLnByb3BzfVxuICAvPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgQTExeVRleHQ7XG4iXX0= */",
  toString: WG
}, GG = function(t) {
  return tt("span", V({
    css: HG
  }, t));
}, gv = GG, UG = {
  guidance: function(t) {
    var n = t.isSearchable, o = t.isMulti, i = t.tabSelectsValue, s = t.context, a = t.isInitialFocus;
    switch (s) {
      case "menu":
        return "Use Up and Down to choose options, press Enter to select the currently focused option, press Escape to exit the menu".concat(i ? ", press Tab to select the option and exit the menu" : "", ".");
      case "input":
        return a ? "".concat(t["aria-label"] || "Select", " is focused ").concat(n ? ",type to refine list" : "", ", press Down to open the menu, ").concat(o ? " press left to focus selected values" : "") : "";
      case "value":
        return "Use left and right to toggle between focused values, press Backspace to remove the currently focused value";
      default:
        return "";
    }
  },
  onChange: function(t) {
    var n = t.action, o = t.label, i = o === void 0 ? "" : o, s = t.labels, a = t.isDisabled;
    switch (n) {
      case "deselect-option":
      case "pop-value":
      case "remove-value":
        return "option ".concat(i, ", deselected.");
      case "clear":
        return "All selected options have been cleared.";
      case "initial-input-focus":
        return "option".concat(s.length > 1 ? "s" : "", " ").concat(s.join(","), ", selected.");
      case "select-option":
        return a ? "option ".concat(i, " is disabled. Select another option.") : "option ".concat(i, ", selected.");
      default:
        return "";
    }
  },
  onFocus: function(t) {
    var n = t.context, o = t.focused, i = t.options, s = t.label, a = s === void 0 ? "" : s, l = t.selectValue, c = t.isDisabled, u = t.isSelected, d = t.isAppleDevice, p = function(v, b) {
      return v && v.length ? "".concat(v.indexOf(b) + 1, " of ").concat(v.length) : "";
    };
    if (n === "value" && l)
      return "value ".concat(a, " focused, ").concat(p(l, o), ".");
    if (n === "menu" && d) {
      var m = c ? " disabled" : "", g = "".concat(u ? " selected" : "").concat(m);
      return "".concat(a).concat(g, ", ").concat(p(i, o), ".");
    }
    return "";
  },
  onFilter: function(t) {
    var n = t.inputValue, o = t.resultsMessage;
    return "".concat(o).concat(n ? " for search term " + n : "", ".");
  }
}, XG = function(t) {
  var n = t.ariaSelection, o = t.focusedOption, i = t.focusedValue, s = t.focusableOptions, a = t.isFocused, l = t.selectValue, c = t.selectProps, u = t.id, d = t.isAppleDevice, p = c.ariaLiveMessages, m = c.getOptionLabel, g = c.inputValue, h = c.isMulti, v = c.isOptionDisabled, b = c.isSearchable, y = c.menuIsOpen, C = c.options, x = c.screenReaderStatus, T = c.tabSelectsValue, w = c.isLoading, R = c["aria-label"], E = c["aria-live"], O = St(function() {
    return et(et({}, UG), p || {});
  }, [p]), I = St(function() {
    var F = "";
    if (n && O.onChange) {
      var N = n.option, W = n.options, H = n.removedValue, B = n.removedValues, j = n.value, L = function(G) {
        return Array.isArray(G) ? null : G;
      }, ee = H || N || L(j), Y = ee ? m(ee) : "", $ = W || B || void 0, U = $ ? $.map(m) : [], X = et({
        // multiSelected items are usually items that have already been selected
        // or set by the user as a default value so we assume they are not disabled
        isDisabled: ee && v(ee, l),
        label: Y,
        labels: U
      }, n);
      F = O.onChange(X);
    }
    return F;
  }, [n, O, v, l, m]), P = St(function() {
    var F = "", N = o || i, W = !!(o && l && l.includes(o));
    if (N && O.onFocus) {
      var H = {
        focused: N,
        label: m(N),
        isDisabled: v(N, l),
        isSelected: W,
        options: s,
        context: N === o ? "menu" : "value",
        selectValue: l,
        isAppleDevice: d
      };
      F = O.onFocus(H);
    }
    return F;
  }, [o, i, m, v, O, s, l, d]), A = St(function() {
    var F = "";
    if (y && C.length && !w && O.onFilter) {
      var N = x({
        count: s.length
      });
      F = O.onFilter({
        inputValue: g,
        resultsMessage: N
      });
    }
    return F;
  }, [s, g, y, O, C, x, w]), D = (n == null ? void 0 : n.action) === "initial-input-focus", k = St(function() {
    var F = "";
    if (O.guidance) {
      var N = i ? "value" : y ? "menu" : "input";
      F = O.guidance({
        "aria-label": R,
        context: N,
        isDisabled: o && v(o, l),
        isMulti: h,
        isSearchable: b,
        tabSelectsValue: T,
        isInitialFocus: D
      });
    }
    return F;
  }, [R, o, i, h, v, b, y, O, l, T, D]), M = tt(Yl, null, tt("span", {
    id: "aria-selection"
  }, I), tt("span", {
    id: "aria-focused"
  }, P), tt("span", {
    id: "aria-results"
  }, A), tt("span", {
    id: "aria-guidance"
  }, k));
  return tt(Yl, null, tt(gv, {
    id: u
  }, D && M), tt(gv, {
    "aria-live": E,
    "aria-atomic": "false",
    "aria-relevant": "additions text",
    role: "log"
  }, a && !D && M));
}, YG = XG, Gp = [{
  base: "A",
  letters: "AⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ"
}, {
  base: "AA",
  letters: "Ꜳ"
}, {
  base: "AE",
  letters: "ÆǼǢ"
}, {
  base: "AO",
  letters: "Ꜵ"
}, {
  base: "AU",
  letters: "Ꜷ"
}, {
  base: "AV",
  letters: "ꜸꜺ"
}, {
  base: "AY",
  letters: "Ꜽ"
}, {
  base: "B",
  letters: "BⒷＢḂḄḆɃƂƁ"
}, {
  base: "C",
  letters: "CⒸＣĆĈĊČÇḈƇȻꜾ"
}, {
  base: "D",
  letters: "DⒹＤḊĎḌḐḒḎĐƋƊƉꝹ"
}, {
  base: "DZ",
  letters: "ǱǄ"
}, {
  base: "Dz",
  letters: "ǲǅ"
}, {
  base: "E",
  letters: "EⒺＥÈÉÊỀẾỄỂẼĒḔḖĔĖËẺĚȄȆẸỆȨḜĘḘḚƐƎ"
}, {
  base: "F",
  letters: "FⒻＦḞƑꝻ"
}, {
  base: "G",
  letters: "GⒼＧǴĜḠĞĠǦĢǤƓꞠꝽꝾ"
}, {
  base: "H",
  letters: "HⒽＨĤḢḦȞḤḨḪĦⱧⱵꞍ"
}, {
  base: "I",
  letters: "IⒾＩÌÍÎĨĪĬİÏḮỈǏȈȊỊĮḬƗ"
}, {
  base: "J",
  letters: "JⒿＪĴɈ"
}, {
  base: "K",
  letters: "KⓀＫḰǨḲĶḴƘⱩꝀꝂꝄꞢ"
}, {
  base: "L",
  letters: "LⓁＬĿĹĽḶḸĻḼḺŁȽⱢⱠꝈꝆꞀ"
}, {
  base: "LJ",
  letters: "Ǉ"
}, {
  base: "Lj",
  letters: "ǈ"
}, {
  base: "M",
  letters: "MⓂＭḾṀṂⱮƜ"
}, {
  base: "N",
  letters: "NⓃＮǸŃÑṄŇṆŅṊṈȠƝꞐꞤ"
}, {
  base: "NJ",
  letters: "Ǌ"
}, {
  base: "Nj",
  letters: "ǋ"
}, {
  base: "O",
  letters: "OⓄＯÒÓÔỒỐỖỔÕṌȬṎŌṐṒŎȮȰÖȪỎŐǑȌȎƠỜỚỠỞỢỌỘǪǬØǾƆƟꝊꝌ"
}, {
  base: "OI",
  letters: "Ƣ"
}, {
  base: "OO",
  letters: "Ꝏ"
}, {
  base: "OU",
  letters: "Ȣ"
}, {
  base: "P",
  letters: "PⓅＰṔṖƤⱣꝐꝒꝔ"
}, {
  base: "Q",
  letters: "QⓆＱꝖꝘɊ"
}, {
  base: "R",
  letters: "RⓇＲŔṘŘȐȒṚṜŖṞɌⱤꝚꞦꞂ"
}, {
  base: "S",
  letters: "SⓈＳẞŚṤŜṠŠṦṢṨȘŞⱾꞨꞄ"
}, {
  base: "T",
  letters: "TⓉＴṪŤṬȚŢṰṮŦƬƮȾꞆ"
}, {
  base: "TZ",
  letters: "Ꜩ"
}, {
  base: "U",
  letters: "UⓊＵÙÚÛŨṸŪṺŬÜǛǗǕǙỦŮŰǓȔȖƯỪỨỮỬỰỤṲŲṶṴɄ"
}, {
  base: "V",
  letters: "VⓋＶṼṾƲꝞɅ"
}, {
  base: "VY",
  letters: "Ꝡ"
}, {
  base: "W",
  letters: "WⓌＷẀẂŴẆẄẈⱲ"
}, {
  base: "X",
  letters: "XⓍＸẊẌ"
}, {
  base: "Y",
  letters: "YⓎＹỲÝŶỸȲẎŸỶỴƳɎỾ"
}, {
  base: "Z",
  letters: "ZⓏＺŹẐŻŽẒẔƵȤⱿⱫꝢ"
}, {
  base: "a",
  letters: "aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐ"
}, {
  base: "aa",
  letters: "ꜳ"
}, {
  base: "ae",
  letters: "æǽǣ"
}, {
  base: "ao",
  letters: "ꜵ"
}, {
  base: "au",
  letters: "ꜷ"
}, {
  base: "av",
  letters: "ꜹꜻ"
}, {
  base: "ay",
  letters: "ꜽ"
}, {
  base: "b",
  letters: "bⓑｂḃḅḇƀƃɓ"
}, {
  base: "c",
  letters: "cⓒｃćĉċčçḉƈȼꜿↄ"
}, {
  base: "d",
  letters: "dⓓｄḋďḍḑḓḏđƌɖɗꝺ"
}, {
  base: "dz",
  letters: "ǳǆ"
}, {
  base: "e",
  letters: "eⓔｅèéêềếễểẽēḕḗĕėëẻěȅȇẹệȩḝęḙḛɇɛǝ"
}, {
  base: "f",
  letters: "fⓕｆḟƒꝼ"
}, {
  base: "g",
  letters: "gⓖｇǵĝḡğġǧģǥɠꞡᵹꝿ"
}, {
  base: "h",
  letters: "hⓗｈĥḣḧȟḥḩḫẖħⱨⱶɥ"
}, {
  base: "hv",
  letters: "ƕ"
}, {
  base: "i",
  letters: "iⓘｉìíîĩīĭïḯỉǐȉȋịįḭɨı"
}, {
  base: "j",
  letters: "jⓙｊĵǰɉ"
}, {
  base: "k",
  letters: "kⓚｋḱǩḳķḵƙⱪꝁꝃꝅꞣ"
}, {
  base: "l",
  letters: "lⓛｌŀĺľḷḹļḽḻſłƚɫⱡꝉꞁꝇ"
}, {
  base: "lj",
  letters: "ǉ"
}, {
  base: "m",
  letters: "mⓜｍḿṁṃɱɯ"
}, {
  base: "n",
  letters: "nⓝｎǹńñṅňṇņṋṉƞɲŉꞑꞥ"
}, {
  base: "nj",
  letters: "ǌ"
}, {
  base: "o",
  letters: "oⓞｏòóôồốỗổõṍȭṏōṑṓŏȯȱöȫỏőǒȍȏơờớỡởợọộǫǭøǿɔꝋꝍɵ"
}, {
  base: "oi",
  letters: "ƣ"
}, {
  base: "ou",
  letters: "ȣ"
}, {
  base: "oo",
  letters: "ꝏ"
}, {
  base: "p",
  letters: "pⓟｐṕṗƥᵽꝑꝓꝕ"
}, {
  base: "q",
  letters: "qⓠｑɋꝗꝙ"
}, {
  base: "r",
  letters: "rⓡｒŕṙřȑȓṛṝŗṟɍɽꝛꞧꞃ"
}, {
  base: "s",
  letters: "sⓢｓßśṥŝṡšṧṣṩșşȿꞩꞅẛ"
}, {
  base: "t",
  letters: "tⓣｔṫẗťṭțţṱṯŧƭʈⱦꞇ"
}, {
  base: "tz",
  letters: "ꜩ"
}, {
  base: "u",
  letters: "uⓤｕùúûũṹūṻŭüǜǘǖǚủůűǔȕȗưừứữửựụṳųṷṵʉ"
}, {
  base: "v",
  letters: "vⓥｖṽṿʋꝟʌ"
}, {
  base: "vy",
  letters: "ꝡ"
}, {
  base: "w",
  letters: "wⓦｗẁẃŵẇẅẘẉⱳ"
}, {
  base: "x",
  letters: "xⓧｘẋẍ"
}, {
  base: "y",
  letters: "yⓨｙỳýŷỹȳẏÿỷẙỵƴɏỿ"
}, {
  base: "z",
  letters: "zⓩｚźẑżžẓẕƶȥɀⱬꝣ"
}], ZG = new RegExp("[" + Gp.map(function(e) {
  return e.letters;
}).join("") + "]", "g"), JS = {};
for (var Ld = 0; Ld < Gp.length; Ld++)
  for (var _d = Gp[Ld], Bd = 0; Bd < _d.letters.length; Bd++)
    JS[_d.letters[Bd]] = _d.base;
var KS = function(t) {
  return t.replace(ZG, function(n) {
    return JS[n];
  });
}, qG = zG(KS), hv = function(t) {
  return t.replace(/^\s+|\s+$/g, "");
}, JG = function(t) {
  return "".concat(t.label, " ").concat(t.value);
}, KG = function(t) {
  return function(n, o) {
    if (n.data.__isNew__) return !0;
    var i = et({
      ignoreCase: !0,
      ignoreAccents: !0,
      stringify: JG,
      trim: !0,
      matchFrom: "any"
    }, t), s = i.ignoreCase, a = i.ignoreAccents, l = i.stringify, c = i.trim, u = i.matchFrom, d = c ? hv(o) : o, p = c ? hv(l(n)) : l(n);
    return s && (d = d.toLowerCase(), p = p.toLowerCase()), a && (d = qG(d), p = KS(p)), u === "start" ? p.substr(0, d.length) === d : p.indexOf(d) > -1;
  };
}, QG = ["innerRef"];
function eU(e) {
  var t = e.innerRef, n = hr(e, QG), o = T3(n, "onExited", "in", "enter", "exit", "appear");
  return tt("input", V({
    ref: t
  }, o, {
    css: /* @__PURE__ */ Ko({
      label: "dummyInput",
      // get rid of any default styles
      background: 0,
      border: 0,
      // important! this hides the flashing cursor
      caretColor: "transparent",
      fontSize: "inherit",
      gridArea: "1 / 1 / 2 / 3",
      outline: 0,
      padding: 0,
      // important! without `width` browsers won't allow focus
      width: 1,
      // remove cursor on desktop
      color: "transparent",
      // remove cursor on mobile whilst maintaining "scroll into view" behaviour
      left: -100,
      opacity: 0,
      position: "relative",
      transform: "scale(.01)"
    }, process.env.NODE_ENV === "production" ? "" : ";label:DummyInput;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkR1bW15SW5wdXQudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlCTSIsImZpbGUiOiJEdW1teUlucHV0LnRzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IHsgUmVmIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsganN4IH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgcmVtb3ZlUHJvcHMgfSBmcm9tICcuLi91dGlscyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIER1bW15SW5wdXQoe1xuICBpbm5lclJlZixcbiAgLi4ucHJvcHNcbn06IEpTWC5JbnRyaW5zaWNFbGVtZW50c1snaW5wdXQnXSAmIHtcbiAgcmVhZG9ubHkgaW5uZXJSZWY6IFJlZjxIVE1MSW5wdXRFbGVtZW50Pjtcbn0pIHtcbiAgLy8gUmVtb3ZlIGFuaW1hdGlvbiBwcm9wcyBub3QgbWVhbnQgZm9yIEhUTUwgZWxlbWVudHNcbiAgY29uc3QgZmlsdGVyZWRQcm9wcyA9IHJlbW92ZVByb3BzKFxuICAgIHByb3BzLFxuICAgICdvbkV4aXRlZCcsXG4gICAgJ2luJyxcbiAgICAnZW50ZXInLFxuICAgICdleGl0JyxcbiAgICAnYXBwZWFyJ1xuICApO1xuXG4gIHJldHVybiAoXG4gICAgPGlucHV0XG4gICAgICByZWY9e2lubmVyUmVmfVxuICAgICAgey4uLmZpbHRlcmVkUHJvcHN9XG4gICAgICBjc3M9e3tcbiAgICAgICAgbGFiZWw6ICdkdW1teUlucHV0JyxcbiAgICAgICAgLy8gZ2V0IHJpZCBvZiBhbnkgZGVmYXVsdCBzdHlsZXNcbiAgICAgICAgYmFja2dyb3VuZDogMCxcbiAgICAgICAgYm9yZGVyOiAwLFxuICAgICAgICAvLyBpbXBvcnRhbnQhIHRoaXMgaGlkZXMgdGhlIGZsYXNoaW5nIGN1cnNvclxuICAgICAgICBjYXJldENvbG9yOiAndHJhbnNwYXJlbnQnLFxuICAgICAgICBmb250U2l6ZTogJ2luaGVyaXQnLFxuICAgICAgICBncmlkQXJlYTogJzEgLyAxIC8gMiAvIDMnLFxuICAgICAgICBvdXRsaW5lOiAwLFxuICAgICAgICBwYWRkaW5nOiAwLFxuICAgICAgICAvLyBpbXBvcnRhbnQhIHdpdGhvdXQgYHdpZHRoYCBicm93c2VycyB3b24ndCBhbGxvdyBmb2N1c1xuICAgICAgICB3aWR0aDogMSxcblxuICAgICAgICAvLyByZW1vdmUgY3Vyc29yIG9uIGRlc2t0b3BcbiAgICAgICAgY29sb3I6ICd0cmFuc3BhcmVudCcsXG5cbiAgICAgICAgLy8gcmVtb3ZlIGN1cnNvciBvbiBtb2JpbGUgd2hpbHN0IG1haW50YWluaW5nIFwic2Nyb2xsIGludG8gdmlld1wiIGJlaGF2aW91clxuICAgICAgICBsZWZ0OiAtMTAwLFxuICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICAgICAgdHJhbnNmb3JtOiAnc2NhbGUoLjAxKScsXG4gICAgICB9fVxuICAgIC8+XG4gICk7XG59XG4iXX0= */")
  }));
}
var tU = function(t) {
  t.cancelable && t.preventDefault(), t.stopPropagation();
};
function nU(e) {
  var t = e.isEnabled, n = e.onBottomArrive, o = e.onBottomLeave, i = e.onTopArrive, s = e.onTopLeave, a = $t(!1), l = $t(!1), c = $t(0), u = $t(null), d = gn(function(b, y) {
    if (u.current !== null) {
      var C = u.current, x = C.scrollTop, T = C.scrollHeight, w = C.clientHeight, R = u.current, E = y > 0, O = T - w - x, I = !1;
      O > y && a.current && (o && o(b), a.current = !1), E && l.current && (s && s(b), l.current = !1), E && y > O ? (n && !a.current && n(b), R.scrollTop = T, I = !0, a.current = !0) : !E && -y > x && (i && !l.current && i(b), R.scrollTop = 0, I = !0, l.current = !0), I && tU(b);
    }
  }, [n, o, i, s]), p = gn(function(b) {
    d(b, b.deltaY);
  }, [d]), m = gn(function(b) {
    c.current = b.changedTouches[0].clientY;
  }, []), g = gn(function(b) {
    var y = c.current - b.changedTouches[0].clientY;
    d(b, y);
  }, [d]), h = gn(function(b) {
    if (b) {
      var y = C3 ? {
        passive: !1
      } : !1;
      b.addEventListener("wheel", p, y), b.addEventListener("touchstart", m, y), b.addEventListener("touchmove", g, y);
    }
  }, [g, m, p]), v = gn(function(b) {
    b && (b.removeEventListener("wheel", p, !1), b.removeEventListener("touchstart", m, !1), b.removeEventListener("touchmove", g, !1));
  }, [g, m, p]);
  return Xt(function() {
    if (t) {
      var b = u.current;
      return h(b), function() {
        v(b);
      };
    }
  }, [t, h, v]), function(b) {
    u.current = b;
  };
}
var bv = ["boxSizing", "height", "overflow", "paddingRight", "position"], vv = {
  boxSizing: "border-box",
  // account for possible declaration `width: 100%;` on body
  overflow: "hidden",
  position: "relative",
  height: "100%"
};
function yv(e) {
  e.preventDefault();
}
function xv(e) {
  e.stopPropagation();
}
function Cv() {
  var e = this.scrollTop, t = this.scrollHeight, n = e + this.offsetHeight;
  e === 0 ? this.scrollTop = 1 : n === t && (this.scrollTop = e - 1);
}
function Sv() {
  return "ontouchstart" in window || navigator.maxTouchPoints;
}
var wv = !!(typeof window < "u" && window.document && window.document.createElement), ks = 0, Ei = {
  capture: !1,
  passive: !1
};
function oU(e) {
  var t = e.isEnabled, n = e.accountForScrollbars, o = n === void 0 ? !0 : n, i = $t({}), s = $t(null), a = gn(function(c) {
    if (wv) {
      var u = document.body, d = u && u.style;
      if (o && bv.forEach(function(h) {
        var v = d && d[h];
        i.current[h] = v;
      }), o && ks < 1) {
        var p = parseInt(i.current.paddingRight, 10) || 0, m = document.body ? document.body.clientWidth : 0, g = window.innerWidth - m + p || 0;
        Object.keys(vv).forEach(function(h) {
          var v = vv[h];
          d && (d[h] = v);
        }), d && (d.paddingRight = "".concat(g, "px"));
      }
      u && Sv() && (u.addEventListener("touchmove", yv, Ei), c && (c.addEventListener("touchstart", Cv, Ei), c.addEventListener("touchmove", xv, Ei))), ks += 1;
    }
  }, [o]), l = gn(function(c) {
    if (wv) {
      var u = document.body, d = u && u.style;
      ks = Math.max(ks - 1, 0), o && ks < 1 && bv.forEach(function(p) {
        var m = i.current[p];
        d && (d[p] = m);
      }), u && Sv() && (u.removeEventListener("touchmove", yv, Ei), c && (c.removeEventListener("touchstart", Cv, Ei), c.removeEventListener("touchmove", xv, Ei)));
    }
  }, [o]);
  return Xt(function() {
    if (t) {
      var c = s.current;
      return a(c), function() {
        l(c);
      };
    }
  }, [t, a, l]), function(c) {
    s.current = c;
  };
}
function rU() {
  return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
}
var iU = function(t) {
  var n = t.target;
  return n.ownerDocument.activeElement && n.ownerDocument.activeElement.blur();
}, sU = process.env.NODE_ENV === "production" ? {
  name: "1kfdb0e",
  styles: "position:fixed;left:0;bottom:0;right:0;top:0"
} : {
  name: "bp8cua-ScrollManager",
  styles: "position:fixed;left:0;bottom:0;right:0;top:0;label:ScrollManager;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNjcm9sbE1hbmFnZXIudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9EVSIsImZpbGUiOiJTY3JvbGxNYW5hZ2VyLnRzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IHsganN4IH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgRnJhZ21lbnQsIFJlYWN0RWxlbWVudCwgUmVmQ2FsbGJhY2ssIE1vdXNlRXZlbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdXNlU2Nyb2xsQ2FwdHVyZSBmcm9tICcuL3VzZVNjcm9sbENhcHR1cmUnO1xuaW1wb3J0IHVzZVNjcm9sbExvY2sgZnJvbSAnLi91c2VTY3JvbGxMb2NrJztcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgcmVhZG9ubHkgY2hpbGRyZW46IChyZWY6IFJlZkNhbGxiYWNrPEhUTUxFbGVtZW50PikgPT4gUmVhY3RFbGVtZW50O1xuICByZWFkb25seSBsb2NrRW5hYmxlZDogYm9vbGVhbjtcbiAgcmVhZG9ubHkgY2FwdHVyZUVuYWJsZWQ6IGJvb2xlYW47XG4gIHJlYWRvbmx5IG9uQm90dG9tQXJyaXZlPzogKGV2ZW50OiBXaGVlbEV2ZW50IHwgVG91Y2hFdmVudCkgPT4gdm9pZDtcbiAgcmVhZG9ubHkgb25Cb3R0b21MZWF2ZT86IChldmVudDogV2hlZWxFdmVudCB8IFRvdWNoRXZlbnQpID0+IHZvaWQ7XG4gIHJlYWRvbmx5IG9uVG9wQXJyaXZlPzogKGV2ZW50OiBXaGVlbEV2ZW50IHwgVG91Y2hFdmVudCkgPT4gdm9pZDtcbiAgcmVhZG9ubHkgb25Ub3BMZWF2ZT86IChldmVudDogV2hlZWxFdmVudCB8IFRvdWNoRXZlbnQpID0+IHZvaWQ7XG59XG5cbmNvbnN0IGJsdXJTZWxlY3RJbnB1dCA9IChldmVudDogTW91c2VFdmVudDxIVE1MRGl2RWxlbWVudD4pID0+IHtcbiAgY29uc3QgZWxlbWVudCA9IGV2ZW50LnRhcmdldCBhcyBIVE1MRGl2RWxlbWVudDtcbiAgcmV0dXJuIChcbiAgICBlbGVtZW50Lm93bmVyRG9jdW1lbnQuYWN0aXZlRWxlbWVudCAmJlxuICAgIChlbGVtZW50Lm93bmVyRG9jdW1lbnQuYWN0aXZlRWxlbWVudCBhcyBIVE1MRWxlbWVudCkuYmx1cigpXG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBTY3JvbGxNYW5hZ2VyKHtcbiAgY2hpbGRyZW4sXG4gIGxvY2tFbmFibGVkLFxuICBjYXB0dXJlRW5hYmxlZCA9IHRydWUsXG4gIG9uQm90dG9tQXJyaXZlLFxuICBvbkJvdHRvbUxlYXZlLFxuICBvblRvcEFycml2ZSxcbiAgb25Ub3BMZWF2ZSxcbn06IFByb3BzKSB7XG4gIGNvbnN0IHNldFNjcm9sbENhcHR1cmVUYXJnZXQgPSB1c2VTY3JvbGxDYXB0dXJlKHtcbiAgICBpc0VuYWJsZWQ6IGNhcHR1cmVFbmFibGVkLFxuICAgIG9uQm90dG9tQXJyaXZlLFxuICAgIG9uQm90dG9tTGVhdmUsXG4gICAgb25Ub3BBcnJpdmUsXG4gICAgb25Ub3BMZWF2ZSxcbiAgfSk7XG4gIGNvbnN0IHNldFNjcm9sbExvY2tUYXJnZXQgPSB1c2VTY3JvbGxMb2NrKHsgaXNFbmFibGVkOiBsb2NrRW5hYmxlZCB9KTtcblxuICBjb25zdCB0YXJnZXRSZWY6IFJlZkNhbGxiYWNrPEhUTUxFbGVtZW50PiA9IChlbGVtZW50KSA9PiB7XG4gICAgc2V0U2Nyb2xsQ2FwdHVyZVRhcmdldChlbGVtZW50KTtcbiAgICBzZXRTY3JvbGxMb2NrVGFyZ2V0KGVsZW1lbnQpO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPEZyYWdtZW50PlxuICAgICAge2xvY2tFbmFibGVkICYmIChcbiAgICAgICAgPGRpdlxuICAgICAgICAgIG9uQ2xpY2s9e2JsdXJTZWxlY3RJbnB1dH1cbiAgICAgICAgICBjc3M9e3sgcG9zaXRpb246ICdmaXhlZCcsIGxlZnQ6IDAsIGJvdHRvbTogMCwgcmlnaHQ6IDAsIHRvcDogMCB9fVxuICAgICAgICAvPlxuICAgICAgKX1cbiAgICAgIHtjaGlsZHJlbih0YXJnZXRSZWYpfVxuICAgIDwvRnJhZ21lbnQ+XG4gICk7XG59XG4iXX0= */",
  toString: rU
};
function aU(e) {
  var t = e.children, n = e.lockEnabled, o = e.captureEnabled, i = o === void 0 ? !0 : o, s = e.onBottomArrive, a = e.onBottomLeave, l = e.onTopArrive, c = e.onTopLeave, u = nU({
    isEnabled: i,
    onBottomArrive: s,
    onBottomLeave: a,
    onTopArrive: l,
    onTopLeave: c
  }), d = oU({
    isEnabled: n
  }), p = function(g) {
    u(g), d(g);
  };
  return tt(Yl, null, n && tt("div", {
    onClick: iU,
    css: sU
  }), t(p));
}
function lU() {
  return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).";
}
var cU = process.env.NODE_ENV === "production" ? {
  name: "1a0ro4n-requiredInput",
  styles: "label:requiredInput;opacity:0;pointer-events:none;position:absolute;bottom:0;left:0;right:0;width:100%"
} : {
  name: "5kkxb2-requiredInput-RequiredInput",
  styles: "label:requiredInput;opacity:0;pointer-events:none;position:absolute;bottom:0;left:0;right:0;width:100%;label:RequiredInput;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJlcXVpcmVkSW5wdXQudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWNJIiwiZmlsZSI6IlJlcXVpcmVkSW5wdXQudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQgeyBGb2N1c0V2ZW50SGFuZGxlciwgRnVuY3Rpb25Db21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBqc3ggfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5cbmNvbnN0IFJlcXVpcmVkSW5wdXQ6IEZ1bmN0aW9uQ29tcG9uZW50PHtcbiAgcmVhZG9ubHkgbmFtZT86IHN0cmluZztcbiAgcmVhZG9ubHkgb25Gb2N1czogRm9jdXNFdmVudEhhbmRsZXI8SFRNTElucHV0RWxlbWVudD47XG59PiA9ICh7IG5hbWUsIG9uRm9jdXMgfSkgPT4gKFxuICA8aW5wdXRcbiAgICByZXF1aXJlZFxuICAgIG5hbWU9e25hbWV9XG4gICAgdGFiSW5kZXg9ey0xfVxuICAgIGFyaWEtaGlkZGVuPVwidHJ1ZVwiXG4gICAgb25Gb2N1cz17b25Gb2N1c31cbiAgICBjc3M9e3tcbiAgICAgIGxhYmVsOiAncmVxdWlyZWRJbnB1dCcsXG4gICAgICBvcGFjaXR5OiAwLFxuICAgICAgcG9pbnRlckV2ZW50czogJ25vbmUnLFxuICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICBib3R0b206IDAsXG4gICAgICBsZWZ0OiAwLFxuICAgICAgcmlnaHQ6IDAsXG4gICAgICB3aWR0aDogJzEwMCUnLFxuICAgIH19XG4gICAgLy8gUHJldmVudCBgU3dpdGNoaW5nIGZyb20gdW5jb250cm9sbGVkIHRvIGNvbnRyb2xsZWRgIGVycm9yXG4gICAgdmFsdWU9XCJcIlxuICAgIG9uQ2hhbmdlPXsoKSA9PiB7fX1cbiAgLz5cbik7XG5cbmV4cG9ydCBkZWZhdWx0IFJlcXVpcmVkSW5wdXQ7XG4iXX0= */",
  toString: lU
}, uU = function(t) {
  var n = t.name, o = t.onFocus;
  return tt("input", {
    required: !0,
    name: n,
    tabIndex: -1,
    "aria-hidden": "true",
    onFocus: o,
    css: cU,
    value: "",
    onChange: function() {
    }
  });
}, dU = uU;
function Gm(e) {
  var t;
  return typeof window < "u" && window.navigator != null ? e.test(((t = window.navigator.userAgentData) === null || t === void 0 ? void 0 : t.platform) || window.navigator.platform) : !1;
}
function pU() {
  return Gm(/^iPhone/i);
}
function QS() {
  return Gm(/^Mac/i);
}
function fU() {
  return Gm(/^iPad/i) || // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.
  QS() && navigator.maxTouchPoints > 1;
}
function mU() {
  return pU() || fU();
}
function gU() {
  return QS() || mU();
}
var hU = function(t) {
  return t.label;
}, bU = function(t) {
  return t.label;
}, vU = function(t) {
  return t.value;
}, yU = function(t) {
  return !!t.isDisabled;
}, xU = {
  clearIndicator: Q3,
  container: B3,
  control: sG,
  dropdownIndicator: J3,
  group: uG,
  groupHeading: pG,
  indicatorsContainer: G3,
  indicatorSeparator: tG,
  input: hG,
  loadingIndicator: rG,
  loadingMessage: N3,
  menu: P3,
  menuList: j3,
  menuPortal: L3,
  multiValue: CG,
  multiValueLabel: SG,
  multiValueRemove: wG,
  noOptionsMessage: F3,
  option: PG,
  placeholder: MG,
  singleValue: FG,
  valueContainer: W3
}, CU = {
  primary: "#2684FF",
  primary75: "#4C9AFF",
  primary50: "#B2D4FF",
  primary25: "#DEEBFF",
  danger: "#DE350B",
  dangerLight: "#FFBDAD",
  neutral0: "hsl(0, 0%, 100%)",
  neutral5: "hsl(0, 0%, 95%)",
  neutral10: "hsl(0, 0%, 90%)",
  neutral20: "hsl(0, 0%, 80%)",
  neutral30: "hsl(0, 0%, 70%)",
  neutral40: "hsl(0, 0%, 60%)",
  neutral50: "hsl(0, 0%, 50%)",
  neutral60: "hsl(0, 0%, 40%)",
  neutral70: "hsl(0, 0%, 30%)",
  neutral80: "hsl(0, 0%, 20%)",
  neutral90: "hsl(0, 0%, 10%)"
}, SU = 4, ew = 4, wU = 38, TU = ew * 2, IU = {
  baseUnit: ew,
  controlHeight: wU,
  menuGutter: TU
}, zd = {
  borderRadius: SU,
  colors: CU,
  spacing: IU
}, RU = {
  "aria-live": "polite",
  backspaceRemovesValue: !0,
  blurInputOnSelect: pv(),
  captureMenuScroll: !pv(),
  classNames: {},
  closeMenuOnSelect: !0,
  closeMenuOnScroll: !1,
  components: {},
  controlShouldRenderValue: !0,
  escapeClearsValue: !1,
  filterOption: KG(),
  formatGroupLabel: hU,
  getOptionLabel: bU,
  getOptionValue: vU,
  isDisabled: !1,
  isLoading: !1,
  isMulti: !1,
  isRtl: !1,
  isSearchable: !0,
  isOptionDisabled: yU,
  loadingMessage: function() {
    return "Loading...";
  },
  maxMenuHeight: 300,
  minMenuHeight: 140,
  menuIsOpen: !1,
  menuPlacement: "bottom",
  menuPosition: "absolute",
  menuShouldBlockScroll: !1,
  menuShouldScrollIntoView: !y3(),
  noOptionsMessage: function() {
    return "No options";
  },
  openMenuOnFocus: !1,
  openMenuOnClick: !0,
  options: [],
  pageSize: 5,
  placeholder: "Select...",
  screenReaderStatus: function(t) {
    var n = t.count;
    return "".concat(n, " result").concat(n !== 1 ? "s" : "", " available");
  },
  styles: {},
  tabIndex: 0,
  tabSelectsValue: !0,
  unstyled: !1
};
function Tv(e, t, n, o) {
  var i = ow(e, t, n), s = rw(e, t, n), a = nw(e, t), l = Ic(e, t);
  return {
    type: "option",
    data: t,
    isDisabled: i,
    isSelected: s,
    label: a,
    value: l,
    index: o
  };
}
function Xl(e, t) {
  return e.options.map(function(n, o) {
    if ("options" in n) {
      var i = n.options.map(function(a, l) {
        return Tv(e, a, t, l);
      }).filter(function(a) {
        return Rv(e, a);
      });
      return i.length > 0 ? {
        type: "group",
        data: n,
        options: i,
        index: o
      } : void 0;
    }
    var s = Tv(e, n, t, o);
    return Rv(e, s) ? s : void 0;
  }).filter(S3);
}
function tw(e) {
  return e.reduce(function(t, n) {
    return n.type === "group" ? t.push.apply(t, _m(n.options.map(function(o) {
      return o.data;
    }))) : t.push(n.data), t;
  }, []);
}
function Iv(e, t) {
  return e.reduce(function(n, o) {
    return o.type === "group" ? n.push.apply(n, _m(o.options.map(function(i) {
      return {
        data: i.data,
        id: "".concat(t, "-").concat(o.index, "-").concat(i.index)
      };
    }))) : n.push({
      data: o.data,
      id: "".concat(t, "-").concat(o.index)
    }), n;
  }, []);
}
function OU(e, t) {
  return tw(Xl(e, t));
}
function Rv(e, t) {
  var n = e.inputValue, o = n === void 0 ? "" : n, i = t.data, s = t.isSelected, a = t.label, l = t.value;
  return (!sw(e) || !s) && iw(e, {
    label: a,
    value: l,
    data: i
  }, o);
}
function EU(e, t) {
  var n = e.focusedValue, o = e.selectValue, i = o.indexOf(n);
  if (i > -1) {
    var s = t.indexOf(n);
    if (s > -1)
      return n;
    if (i < t.length)
      return t[i];
  }
  return null;
}
function PU(e, t) {
  var n = e.focusedOption;
  return n && t.indexOf(n) > -1 ? n : t[0];
}
var Wd = function(t, n) {
  var o, i = (o = t.find(function(s) {
    return s.data === n;
  })) === null || o === void 0 ? void 0 : o.id;
  return i || null;
}, nw = function(t, n) {
  return t.getOptionLabel(n);
}, Ic = function(t, n) {
  return t.getOptionValue(n);
};
function ow(e, t, n) {
  return typeof e.isOptionDisabled == "function" ? e.isOptionDisabled(t, n) : !1;
}
function rw(e, t, n) {
  if (n.indexOf(t) > -1) return !0;
  if (typeof e.isOptionSelected == "function")
    return e.isOptionSelected(t, n);
  var o = Ic(e, t);
  return n.some(function(i) {
    return Ic(e, i) === o;
  });
}
function iw(e, t, n) {
  return e.filterOption ? e.filterOption(t, n) : !0;
}
var sw = function(t) {
  var n = t.hideSelectedOptions, o = t.isMulti;
  return n === void 0 ? o : n;
}, AU = 1, aw = /* @__PURE__ */ function(e) {
  U9(n, e);
  var t = Y9(n);
  function n(o) {
    var i;
    if (H9(this, n), i = t.call(this, o), i.state = {
      ariaSelection: null,
      focusedOption: null,
      focusedOptionId: null,
      focusableOptionsWithIds: [],
      focusedValue: null,
      inputIsHidden: !1,
      isFocused: !1,
      selectValue: [],
      clearFocusValueOnUpdate: !1,
      prevWasFocused: !1,
      inputIsHiddenAfterUpdate: void 0,
      prevProps: void 0,
      instancePrefix: ""
    }, i.blockOptionHover = !1, i.isComposing = !1, i.commonProps = void 0, i.initialTouchX = 0, i.initialTouchY = 0, i.openAfterFocus = !1, i.scrollToFocusedOptionOnUpdate = !1, i.userIsDragging = void 0, i.isAppleDevice = gU(), i.controlRef = null, i.getControlRef = function(c) {
      i.controlRef = c;
    }, i.focusedOptionRef = null, i.getFocusedOptionRef = function(c) {
      i.focusedOptionRef = c;
    }, i.menuListRef = null, i.getMenuListRef = function(c) {
      i.menuListRef = c;
    }, i.inputRef = null, i.getInputRef = function(c) {
      i.inputRef = c;
    }, i.focus = i.focusInput, i.blur = i.blurInput, i.onChange = function(c, u) {
      var d = i.props, p = d.onChange, m = d.name;
      u.name = m, i.ariaOnChange(c, u), p(c, u);
    }, i.setValue = function(c, u, d) {
      var p = i.props, m = p.closeMenuOnSelect, g = p.isMulti, h = p.inputValue;
      i.onInputChange("", {
        action: "set-value",
        prevInputValue: h
      }), m && (i.setState({
        inputIsHiddenAfterUpdate: !g
      }), i.onMenuClose()), i.setState({
        clearFocusValueOnUpdate: !0
      }), i.onChange(c, {
        action: u,
        option: d
      });
    }, i.selectOption = function(c) {
      var u = i.props, d = u.blurInputOnSelect, p = u.isMulti, m = u.name, g = i.state.selectValue, h = p && i.isOptionSelected(c, g), v = i.isOptionDisabled(c, g);
      if (h) {
        var b = i.getOptionValue(c);
        i.setValue(g.filter(function(y) {
          return i.getOptionValue(y) !== b;
        }), "deselect-option", c);
      } else if (!v)
        p ? i.setValue([].concat(_m(g), [c]), "select-option", c) : i.setValue(c, "select-option");
      else {
        i.ariaOnChange(c, {
          action: "select-option",
          option: c,
          name: m
        });
        return;
      }
      d && i.blurInput();
    }, i.removeValue = function(c) {
      var u = i.props.isMulti, d = i.state.selectValue, p = i.getOptionValue(c), m = d.filter(function(h) {
        return i.getOptionValue(h) !== p;
      }), g = Dl(u, m, m[0] || null);
      i.onChange(g, {
        action: "remove-value",
        removedValue: c
      }), i.focusInput();
    }, i.clearValue = function() {
      var c = i.state.selectValue;
      i.onChange(Dl(i.props.isMulti, [], null), {
        action: "clear",
        removedValues: c
      });
    }, i.popValue = function() {
      var c = i.props.isMulti, u = i.state.selectValue, d = u[u.length - 1], p = u.slice(0, u.length - 1), m = Dl(c, p, p[0] || null);
      d && i.onChange(m, {
        action: "pop-value",
        removedValue: d
      });
    }, i.getFocusedOptionId = function(c) {
      return Wd(i.state.focusableOptionsWithIds, c);
    }, i.getFocusableOptionsWithIds = function() {
      return Iv(Xl(i.props, i.state.selectValue), i.getElementId("option"));
    }, i.getValue = function() {
      return i.state.selectValue;
    }, i.cx = function() {
      for (var c = arguments.length, u = new Array(c), d = 0; d < c; d++)
        u[d] = arguments[d];
      return m3.apply(void 0, [i.props.classNamePrefix].concat(u));
    }, i.getOptionLabel = function(c) {
      return nw(i.props, c);
    }, i.getOptionValue = function(c) {
      return Ic(i.props, c);
    }, i.getStyles = function(c, u) {
      var d = i.props.unstyled, p = xU[c](u, d);
      p.boxSizing = "border-box";
      var m = i.props.styles[c];
      return m ? m(p, u) : p;
    }, i.getClassNames = function(c, u) {
      var d, p;
      return (d = (p = i.props.classNames)[c]) === null || d === void 0 ? void 0 : d.call(p, u);
    }, i.getElementId = function(c) {
      return "".concat(i.state.instancePrefix, "-").concat(c);
    }, i.getComponents = function() {
      return LG(i.props);
    }, i.buildCategorizedOptions = function() {
      return Xl(i.props, i.state.selectValue);
    }, i.getCategorizedOptions = function() {
      return i.props.menuIsOpen ? i.buildCategorizedOptions() : [];
    }, i.buildFocusableOptions = function() {
      return tw(i.buildCategorizedOptions());
    }, i.getFocusableOptions = function() {
      return i.props.menuIsOpen ? i.buildFocusableOptions() : [];
    }, i.ariaOnChange = function(c, u) {
      i.setState({
        ariaSelection: et({
          value: c
        }, u)
      });
    }, i.onMenuMouseDown = function(c) {
      c.button === 0 && (c.stopPropagation(), c.preventDefault(), i.focusInput());
    }, i.onMenuMouseMove = function(c) {
      i.blockOptionHover = !1;
    }, i.onControlMouseDown = function(c) {
      if (!c.defaultPrevented) {
        var u = i.props.openMenuOnClick;
        i.state.isFocused ? i.props.menuIsOpen ? c.target.tagName !== "INPUT" && c.target.tagName !== "TEXTAREA" && i.onMenuClose() : u && i.openMenu("first") : (u && (i.openAfterFocus = !0), i.focusInput()), c.target.tagName !== "INPUT" && c.target.tagName !== "TEXTAREA" && c.preventDefault();
      }
    }, i.onDropdownIndicatorMouseDown = function(c) {
      if (!(c && c.type === "mousedown" && c.button !== 0) && !i.props.isDisabled) {
        var u = i.props, d = u.isMulti, p = u.menuIsOpen;
        i.focusInput(), p ? (i.setState({
          inputIsHiddenAfterUpdate: !d
        }), i.onMenuClose()) : i.openMenu("first"), c.preventDefault();
      }
    }, i.onClearIndicatorMouseDown = function(c) {
      c && c.type === "mousedown" && c.button !== 0 || (i.clearValue(), c.preventDefault(), i.openAfterFocus = !1, c.type === "touchend" ? i.focusInput() : setTimeout(function() {
        return i.focusInput();
      }));
    }, i.onScroll = function(c) {
      typeof i.props.closeMenuOnScroll == "boolean" ? c.target instanceof HTMLElement && Wu(c.target) && i.props.onMenuClose() : typeof i.props.closeMenuOnScroll == "function" && i.props.closeMenuOnScroll(c) && i.props.onMenuClose();
    }, i.onCompositionStart = function() {
      i.isComposing = !0;
    }, i.onCompositionEnd = function() {
      i.isComposing = !1;
    }, i.onTouchStart = function(c) {
      var u = c.touches, d = u && u.item(0);
      d && (i.initialTouchX = d.clientX, i.initialTouchY = d.clientY, i.userIsDragging = !1);
    }, i.onTouchMove = function(c) {
      var u = c.touches, d = u && u.item(0);
      if (d) {
        var p = Math.abs(d.clientX - i.initialTouchX), m = Math.abs(d.clientY - i.initialTouchY), g = 5;
        i.userIsDragging = p > g || m > g;
      }
    }, i.onTouchEnd = function(c) {
      i.userIsDragging || (i.controlRef && !i.controlRef.contains(c.target) && i.menuListRef && !i.menuListRef.contains(c.target) && i.blurInput(), i.initialTouchX = 0, i.initialTouchY = 0);
    }, i.onControlTouchEnd = function(c) {
      i.userIsDragging || i.onControlMouseDown(c);
    }, i.onClearIndicatorTouchEnd = function(c) {
      i.userIsDragging || i.onClearIndicatorMouseDown(c);
    }, i.onDropdownIndicatorTouchEnd = function(c) {
      i.userIsDragging || i.onDropdownIndicatorMouseDown(c);
    }, i.handleInputChange = function(c) {
      var u = i.props.inputValue, d = c.currentTarget.value;
      i.setState({
        inputIsHiddenAfterUpdate: !1
      }), i.onInputChange(d, {
        action: "input-change",
        prevInputValue: u
      }), i.props.menuIsOpen || i.onMenuOpen();
    }, i.onInputFocus = function(c) {
      i.props.onFocus && i.props.onFocus(c), i.setState({
        inputIsHiddenAfterUpdate: !1,
        isFocused: !0
      }), (i.openAfterFocus || i.props.openMenuOnFocus) && i.openMenu("first"), i.openAfterFocus = !1;
    }, i.onInputBlur = function(c) {
      var u = i.props.inputValue;
      if (i.menuListRef && i.menuListRef.contains(document.activeElement)) {
        i.inputRef.focus();
        return;
      }
      i.props.onBlur && i.props.onBlur(c), i.onInputChange("", {
        action: "input-blur",
        prevInputValue: u
      }), i.onMenuClose(), i.setState({
        focusedValue: null,
        isFocused: !1
      });
    }, i.onOptionHover = function(c) {
      if (!(i.blockOptionHover || i.state.focusedOption === c)) {
        var u = i.getFocusableOptions(), d = u.indexOf(c);
        i.setState({
          focusedOption: c,
          focusedOptionId: d > -1 ? i.getFocusedOptionId(c) : null
        });
      }
    }, i.shouldHideSelectedOptions = function() {
      return sw(i.props);
    }, i.onValueInputFocus = function(c) {
      c.preventDefault(), c.stopPropagation(), i.focus();
    }, i.onKeyDown = function(c) {
      var u = i.props, d = u.isMulti, p = u.backspaceRemovesValue, m = u.escapeClearsValue, g = u.inputValue, h = u.isClearable, v = u.isDisabled, b = u.menuIsOpen, y = u.onKeyDown, C = u.tabSelectsValue, x = u.openMenuOnFocus, T = i.state, w = T.focusedOption, R = T.focusedValue, E = T.selectValue;
      if (!v && !(typeof y == "function" && (y(c), c.defaultPrevented))) {
        switch (i.blockOptionHover = !0, c.key) {
          case "ArrowLeft":
            if (!d || g) return;
            i.focusValue("previous");
            break;
          case "ArrowRight":
            if (!d || g) return;
            i.focusValue("next");
            break;
          case "Delete":
          case "Backspace":
            if (g) return;
            if (R)
              i.removeValue(R);
            else {
              if (!p) return;
              d ? i.popValue() : h && i.clearValue();
            }
            break;
          case "Tab":
            if (i.isComposing || c.shiftKey || !b || !C || !w || // don't capture the event if the menu opens on focus and the focused
            // option is already selected; it breaks the flow of navigation
            x && i.isOptionSelected(w, E))
              return;
            i.selectOption(w);
            break;
          case "Enter":
            if (c.keyCode === 229)
              break;
            if (b) {
              if (!w || i.isComposing) return;
              i.selectOption(w);
              break;
            }
            return;
          case "Escape":
            b ? (i.setState({
              inputIsHiddenAfterUpdate: !1
            }), i.onInputChange("", {
              action: "menu-close",
              prevInputValue: g
            }), i.onMenuClose()) : h && m && i.clearValue();
            break;
          case " ":
            if (g)
              return;
            if (!b) {
              i.openMenu("first");
              break;
            }
            if (!w) return;
            i.selectOption(w);
            break;
          case "ArrowUp":
            b ? i.focusOption("up") : i.openMenu("last");
            break;
          case "ArrowDown":
            b ? i.focusOption("down") : i.openMenu("first");
            break;
          case "PageUp":
            if (!b) return;
            i.focusOption("pageup");
            break;
          case "PageDown":
            if (!b) return;
            i.focusOption("pagedown");
            break;
          case "Home":
            if (!b) return;
            i.focusOption("first");
            break;
          case "End":
            if (!b) return;
            i.focusOption("last");
            break;
          default:
            return;
        }
        c.preventDefault();
      }
    }, i.state.instancePrefix = "react-select-" + (i.props.instanceId || ++AU), i.state.selectValue = uv(o.value), o.menuIsOpen && i.state.selectValue.length) {
      var s = i.getFocusableOptionsWithIds(), a = i.buildFocusableOptions(), l = a.indexOf(i.state.selectValue[0]);
      i.state.focusableOptionsWithIds = s, i.state.focusedOption = a[l], i.state.focusedOptionId = Wd(s, a[l]);
    }
    return i;
  }
  return G9(n, [{
    key: "componentDidMount",
    value: function() {
      this.startListeningComposition(), this.startListeningToTouch(), this.props.closeMenuOnScroll && document && document.addEventListener && document.addEventListener("scroll", this.onScroll, !0), this.props.autoFocus && this.focusInput(), this.props.menuIsOpen && this.state.focusedOption && this.menuListRef && this.focusedOptionRef && dv(this.menuListRef, this.focusedOptionRef);
    }
  }, {
    key: "componentDidUpdate",
    value: function(i) {
      var s = this.props, a = s.isDisabled, l = s.menuIsOpen, c = this.state.isFocused;
      // ensure focus is restored correctly when the control becomes enabled
      (c && !a && i.isDisabled || // ensure focus is on the Input when the menu opens
      c && l && !i.menuIsOpen) && this.focusInput(), c && a && !i.isDisabled ? this.setState({
        isFocused: !1
      }, this.onMenuClose) : !c && !a && i.isDisabled && this.inputRef === document.activeElement && this.setState({
        isFocused: !0
      }), this.menuListRef && this.focusedOptionRef && this.scrollToFocusedOptionOnUpdate && (dv(this.menuListRef, this.focusedOptionRef), this.scrollToFocusedOptionOnUpdate = !1);
    }
  }, {
    key: "componentWillUnmount",
    value: function() {
      this.stopListeningComposition(), this.stopListeningToTouch(), document.removeEventListener("scroll", this.onScroll, !0);
    }
    // ==============================
    // Consumer Handlers
    // ==============================
  }, {
    key: "onMenuOpen",
    value: function() {
      this.props.onMenuOpen();
    }
  }, {
    key: "onMenuClose",
    value: function() {
      this.onInputChange("", {
        action: "menu-close",
        prevInputValue: this.props.inputValue
      }), this.props.onMenuClose();
    }
  }, {
    key: "onInputChange",
    value: function(i, s) {
      this.props.onInputChange(i, s);
    }
    // ==============================
    // Methods
    // ==============================
  }, {
    key: "focusInput",
    value: function() {
      this.inputRef && this.inputRef.focus();
    }
  }, {
    key: "blurInput",
    value: function() {
      this.inputRef && this.inputRef.blur();
    }
    // aliased for consumers
  }, {
    key: "openMenu",
    value: function(i) {
      var s = this, a = this.state, l = a.selectValue, c = a.isFocused, u = this.buildFocusableOptions(), d = i === "first" ? 0 : u.length - 1;
      if (!this.props.isMulti) {
        var p = u.indexOf(l[0]);
        p > -1 && (d = p);
      }
      this.scrollToFocusedOptionOnUpdate = !(c && this.menuListRef), this.setState({
        inputIsHiddenAfterUpdate: !1,
        focusedValue: null,
        focusedOption: u[d],
        focusedOptionId: this.getFocusedOptionId(u[d])
      }, function() {
        return s.onMenuOpen();
      });
    }
  }, {
    key: "focusValue",
    value: function(i) {
      var s = this.state, a = s.selectValue, l = s.focusedValue;
      if (this.props.isMulti) {
        this.setState({
          focusedOption: null
        });
        var c = a.indexOf(l);
        l || (c = -1);
        var u = a.length - 1, d = -1;
        if (a.length) {
          switch (i) {
            case "previous":
              c === 0 ? d = 0 : c === -1 ? d = u : d = c - 1;
              break;
            case "next":
              c > -1 && c < u && (d = c + 1);
              break;
          }
          this.setState({
            inputIsHidden: d !== -1,
            focusedValue: a[d]
          });
        }
      }
    }
  }, {
    key: "focusOption",
    value: function() {
      var i = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "first", s = this.props.pageSize, a = this.state.focusedOption, l = this.getFocusableOptions();
      if (l.length) {
        var c = 0, u = l.indexOf(a);
        a || (u = -1), i === "up" ? c = u > 0 ? u - 1 : l.length - 1 : i === "down" ? c = (u + 1) % l.length : i === "pageup" ? (c = u - s, c < 0 && (c = 0)) : i === "pagedown" ? (c = u + s, c > l.length - 1 && (c = l.length - 1)) : i === "last" && (c = l.length - 1), this.scrollToFocusedOptionOnUpdate = !0, this.setState({
          focusedOption: l[c],
          focusedValue: null,
          focusedOptionId: this.getFocusedOptionId(l[c])
        });
      }
    }
  }, {
    key: "getTheme",
    value: (
      // ==============================
      // Getters
      // ==============================
      function() {
        return this.props.theme ? typeof this.props.theme == "function" ? this.props.theme(zd) : et(et({}, zd), this.props.theme) : zd;
      }
    )
  }, {
    key: "getCommonProps",
    value: function() {
      var i = this.clearValue, s = this.cx, a = this.getStyles, l = this.getClassNames, c = this.getValue, u = this.selectOption, d = this.setValue, p = this.props, m = p.isMulti, g = p.isRtl, h = p.options, v = this.hasValue();
      return {
        clearValue: i,
        cx: s,
        getStyles: a,
        getClassNames: l,
        getValue: c,
        hasValue: v,
        isMulti: m,
        isRtl: g,
        options: h,
        selectOption: u,
        selectProps: p,
        setValue: d,
        theme: this.getTheme()
      };
    }
  }, {
    key: "hasValue",
    value: function() {
      var i = this.state.selectValue;
      return i.length > 0;
    }
  }, {
    key: "hasOptions",
    value: function() {
      return !!this.getFocusableOptions().length;
    }
  }, {
    key: "isClearable",
    value: function() {
      var i = this.props, s = i.isClearable, a = i.isMulti;
      return s === void 0 ? a : s;
    }
  }, {
    key: "isOptionDisabled",
    value: function(i, s) {
      return ow(this.props, i, s);
    }
  }, {
    key: "isOptionSelected",
    value: function(i, s) {
      return rw(this.props, i, s);
    }
  }, {
    key: "filterOption",
    value: function(i, s) {
      return iw(this.props, i, s);
    }
  }, {
    key: "formatOptionLabel",
    value: function(i, s) {
      if (typeof this.props.formatOptionLabel == "function") {
        var a = this.props.inputValue, l = this.state.selectValue;
        return this.props.formatOptionLabel(i, {
          context: s,
          inputValue: a,
          selectValue: l
        });
      } else
        return this.getOptionLabel(i);
    }
  }, {
    key: "formatGroupLabel",
    value: function(i) {
      return this.props.formatGroupLabel(i);
    }
    // ==============================
    // Mouse Handlers
    // ==============================
  }, {
    key: "startListeningComposition",
    value: (
      // ==============================
      // Composition Handlers
      // ==============================
      function() {
        document && document.addEventListener && (document.addEventListener("compositionstart", this.onCompositionStart, !1), document.addEventListener("compositionend", this.onCompositionEnd, !1));
      }
    )
  }, {
    key: "stopListeningComposition",
    value: function() {
      document && document.removeEventListener && (document.removeEventListener("compositionstart", this.onCompositionStart), document.removeEventListener("compositionend", this.onCompositionEnd));
    }
  }, {
    key: "startListeningToTouch",
    value: (
      // ==============================
      // Touch Handlers
      // ==============================
      function() {
        document && document.addEventListener && (document.addEventListener("touchstart", this.onTouchStart, !1), document.addEventListener("touchmove", this.onTouchMove, !1), document.addEventListener("touchend", this.onTouchEnd, !1));
      }
    )
  }, {
    key: "stopListeningToTouch",
    value: function() {
      document && document.removeEventListener && (document.removeEventListener("touchstart", this.onTouchStart), document.removeEventListener("touchmove", this.onTouchMove), document.removeEventListener("touchend", this.onTouchEnd));
    }
  }, {
    key: "renderInput",
    value: (
      // ==============================
      // Renderers
      // ==============================
      function() {
        var i = this.props, s = i.isDisabled, a = i.isSearchable, l = i.inputId, c = i.inputValue, u = i.tabIndex, d = i.form, p = i.menuIsOpen, m = i.required, g = this.getComponents(), h = g.Input, v = this.state, b = v.inputIsHidden, y = v.ariaSelection, C = this.commonProps, x = l || this.getElementId("input"), T = et(et(et({
          "aria-autocomplete": "list",
          "aria-expanded": p,
          "aria-haspopup": !0,
          "aria-errormessage": this.props["aria-errormessage"],
          "aria-invalid": this.props["aria-invalid"],
          "aria-label": this.props["aria-label"],
          "aria-labelledby": this.props["aria-labelledby"],
          "aria-required": m,
          role: "combobox",
          "aria-activedescendant": this.isAppleDevice ? void 0 : this.state.focusedOptionId || ""
        }, p && {
          "aria-controls": this.getElementId("listbox")
        }), !a && {
          "aria-readonly": !0
        }), this.hasValue() ? (y == null ? void 0 : y.action) === "initial-input-focus" && {
          "aria-describedby": this.getElementId("live-region")
        } : {
          "aria-describedby": this.getElementId("placeholder")
        });
        return a ? /* @__PURE__ */ S.createElement(h, V({}, C, {
          autoCapitalize: "none",
          autoComplete: "off",
          autoCorrect: "off",
          id: x,
          innerRef: this.getInputRef,
          isDisabled: s,
          isHidden: b,
          onBlur: this.onInputBlur,
          onChange: this.handleInputChange,
          onFocus: this.onInputFocus,
          spellCheck: "false",
          tabIndex: u,
          form: d,
          type: "text",
          value: c
        }, T)) : /* @__PURE__ */ S.createElement(eU, V({
          id: x,
          innerRef: this.getInputRef,
          onBlur: this.onInputBlur,
          onChange: wc,
          onFocus: this.onInputFocus,
          disabled: s,
          tabIndex: u,
          inputMode: "none",
          form: d,
          value: ""
        }, T));
      }
    )
  }, {
    key: "renderPlaceholderOrValue",
    value: function() {
      var i = this, s = this.getComponents(), a = s.MultiValue, l = s.MultiValueContainer, c = s.MultiValueLabel, u = s.MultiValueRemove, d = s.SingleValue, p = s.Placeholder, m = this.commonProps, g = this.props, h = g.controlShouldRenderValue, v = g.isDisabled, b = g.isMulti, y = g.inputValue, C = g.placeholder, x = this.state, T = x.selectValue, w = x.focusedValue, R = x.isFocused;
      if (!this.hasValue() || !h)
        return y ? null : /* @__PURE__ */ S.createElement(p, V({}, m, {
          key: "placeholder",
          isDisabled: v,
          isFocused: R,
          innerProps: {
            id: this.getElementId("placeholder")
          }
        }), C);
      if (b)
        return T.map(function(O, I) {
          var P = O === w, A = "".concat(i.getOptionLabel(O), "-").concat(i.getOptionValue(O));
          return /* @__PURE__ */ S.createElement(a, V({}, m, {
            components: {
              Container: l,
              Label: c,
              Remove: u
            },
            isFocused: P,
            isDisabled: v,
            key: A,
            index: I,
            removeProps: {
              onClick: function() {
                return i.removeValue(O);
              },
              onTouchEnd: function() {
                return i.removeValue(O);
              },
              onMouseDown: function(k) {
                k.preventDefault();
              }
            },
            data: O
          }), i.formatOptionLabel(O, "value"));
        });
      if (y)
        return null;
      var E = T[0];
      return /* @__PURE__ */ S.createElement(d, V({}, m, {
        data: E,
        isDisabled: v
      }), this.formatOptionLabel(E, "value"));
    }
  }, {
    key: "renderClearIndicator",
    value: function() {
      var i = this.getComponents(), s = i.ClearIndicator, a = this.commonProps, l = this.props, c = l.isDisabled, u = l.isLoading, d = this.state.isFocused;
      if (!this.isClearable() || !s || c || !this.hasValue() || u)
        return null;
      var p = {
        onMouseDown: this.onClearIndicatorMouseDown,
        onTouchEnd: this.onClearIndicatorTouchEnd,
        "aria-hidden": "true"
      };
      return /* @__PURE__ */ S.createElement(s, V({}, a, {
        innerProps: p,
        isFocused: d
      }));
    }
  }, {
    key: "renderLoadingIndicator",
    value: function() {
      var i = this.getComponents(), s = i.LoadingIndicator, a = this.commonProps, l = this.props, c = l.isDisabled, u = l.isLoading, d = this.state.isFocused;
      if (!s || !u) return null;
      var p = {
        "aria-hidden": "true"
      };
      return /* @__PURE__ */ S.createElement(s, V({}, a, {
        innerProps: p,
        isDisabled: c,
        isFocused: d
      }));
    }
  }, {
    key: "renderIndicatorSeparator",
    value: function() {
      var i = this.getComponents(), s = i.DropdownIndicator, a = i.IndicatorSeparator;
      if (!s || !a) return null;
      var l = this.commonProps, c = this.props.isDisabled, u = this.state.isFocused;
      return /* @__PURE__ */ S.createElement(a, V({}, l, {
        isDisabled: c,
        isFocused: u
      }));
    }
  }, {
    key: "renderDropdownIndicator",
    value: function() {
      var i = this.getComponents(), s = i.DropdownIndicator;
      if (!s) return null;
      var a = this.commonProps, l = this.props.isDisabled, c = this.state.isFocused, u = {
        onMouseDown: this.onDropdownIndicatorMouseDown,
        onTouchEnd: this.onDropdownIndicatorTouchEnd,
        "aria-hidden": "true"
      };
      return /* @__PURE__ */ S.createElement(s, V({}, a, {
        innerProps: u,
        isDisabled: l,
        isFocused: c
      }));
    }
  }, {
    key: "renderMenu",
    value: function() {
      var i = this, s = this.getComponents(), a = s.Group, l = s.GroupHeading, c = s.Menu, u = s.MenuList, d = s.MenuPortal, p = s.LoadingMessage, m = s.NoOptionsMessage, g = s.Option, h = this.commonProps, v = this.state.focusedOption, b = this.props, y = b.captureMenuScroll, C = b.inputValue, x = b.isLoading, T = b.loadingMessage, w = b.minMenuHeight, R = b.maxMenuHeight, E = b.menuIsOpen, O = b.menuPlacement, I = b.menuPosition, P = b.menuPortalTarget, A = b.menuShouldBlockScroll, D = b.menuShouldScrollIntoView, k = b.noOptionsMessage, M = b.onMenuScrollToTop, F = b.onMenuScrollToBottom;
      if (!E) return null;
      var N = function(Y, $) {
        var U = Y.type, X = Y.data, Z = Y.isDisabled, G = Y.isSelected, K = Y.label, re = Y.value, ne = v === X, z = Z ? void 0 : function() {
          return i.onOptionHover(X);
        }, q = Z ? void 0 : function() {
          return i.selectOption(X);
        }, _ = "".concat(i.getElementId("option"), "-").concat($), oe = {
          id: _,
          onClick: q,
          onMouseMove: z,
          onMouseOver: z,
          tabIndex: -1,
          role: "option",
          "aria-selected": i.isAppleDevice ? void 0 : G
          // is not supported on Apple devices
        };
        return /* @__PURE__ */ S.createElement(g, V({}, h, {
          innerProps: oe,
          data: X,
          isDisabled: Z,
          isSelected: G,
          key: _,
          label: K,
          type: U,
          value: re,
          isFocused: ne,
          innerRef: ne ? i.getFocusedOptionRef : void 0
        }), i.formatOptionLabel(Y.data, "menu"));
      }, W;
      if (this.hasOptions())
        W = this.getCategorizedOptions().map(function(ee) {
          if (ee.type === "group") {
            var Y = ee.data, $ = ee.options, U = ee.index, X = "".concat(i.getElementId("group"), "-").concat(U), Z = "".concat(X, "-heading");
            return /* @__PURE__ */ S.createElement(a, V({}, h, {
              key: X,
              data: Y,
              options: $,
              Heading: l,
              headingProps: {
                id: Z,
                data: ee.data
              },
              label: i.formatGroupLabel(ee.data)
            }), ee.options.map(function(G) {
              return N(G, "".concat(U, "-").concat(G.index));
            }));
          } else if (ee.type === "option")
            return N(ee, "".concat(ee.index));
        });
      else if (x) {
        var H = T({
          inputValue: C
        });
        if (H === null) return null;
        W = /* @__PURE__ */ S.createElement(p, h, H);
      } else {
        var B = k({
          inputValue: C
        });
        if (B === null) return null;
        W = /* @__PURE__ */ S.createElement(m, h, B);
      }
      var j = {
        minMenuHeight: w,
        maxMenuHeight: R,
        menuPlacement: O,
        menuPosition: I,
        menuShouldScrollIntoView: D
      }, L = /* @__PURE__ */ S.createElement(A3, V({}, h, j), function(ee) {
        var Y = ee.ref, $ = ee.placerProps, U = $.placement, X = $.maxHeight;
        return /* @__PURE__ */ S.createElement(c, V({}, h, j, {
          innerRef: Y,
          innerProps: {
            onMouseDown: i.onMenuMouseDown,
            onMouseMove: i.onMenuMouseMove
          },
          isLoading: x,
          placement: U
        }), /* @__PURE__ */ S.createElement(aU, {
          captureEnabled: y,
          onTopArrive: M,
          onBottomArrive: F,
          lockEnabled: A
        }, function(Z) {
          return /* @__PURE__ */ S.createElement(u, V({}, h, {
            innerRef: function(K) {
              i.getMenuListRef(K), Z(K);
            },
            innerProps: {
              role: "listbox",
              "aria-multiselectable": h.isMulti,
              id: i.getElementId("listbox")
            },
            isLoading: x,
            maxHeight: X,
            focusedOption: v
          }), W);
        }));
      });
      return P || I === "fixed" ? /* @__PURE__ */ S.createElement(d, V({}, h, {
        appendTo: P,
        controlElement: this.controlRef,
        menuPlacement: O,
        menuPosition: I
      }), L) : L;
    }
  }, {
    key: "renderFormField",
    value: function() {
      var i = this, s = this.props, a = s.delimiter, l = s.isDisabled, c = s.isMulti, u = s.name, d = s.required, p = this.state.selectValue;
      if (d && !this.hasValue() && !l)
        return /* @__PURE__ */ S.createElement(dU, {
          name: u,
          onFocus: this.onValueInputFocus
        });
      if (!(!u || l))
        if (c)
          if (a) {
            var m = p.map(function(v) {
              return i.getOptionValue(v);
            }).join(a);
            return /* @__PURE__ */ S.createElement("input", {
              name: u,
              type: "hidden",
              value: m
            });
          } else {
            var g = p.length > 0 ? p.map(function(v, b) {
              return /* @__PURE__ */ S.createElement("input", {
                key: "i-".concat(b),
                name: u,
                type: "hidden",
                value: i.getOptionValue(v)
              });
            }) : /* @__PURE__ */ S.createElement("input", {
              name: u,
              type: "hidden",
              value: ""
            });
            return /* @__PURE__ */ S.createElement("div", null, g);
          }
        else {
          var h = p[0] ? this.getOptionValue(p[0]) : "";
          return /* @__PURE__ */ S.createElement("input", {
            name: u,
            type: "hidden",
            value: h
          });
        }
    }
  }, {
    key: "renderLiveRegion",
    value: function() {
      var i = this.commonProps, s = this.state, a = s.ariaSelection, l = s.focusedOption, c = s.focusedValue, u = s.isFocused, d = s.selectValue, p = this.getFocusableOptions();
      return /* @__PURE__ */ S.createElement(YG, V({}, i, {
        id: this.getElementId("live-region"),
        ariaSelection: a,
        focusedOption: l,
        focusedValue: c,
        isFocused: u,
        selectValue: d,
        focusableOptions: p,
        isAppleDevice: this.isAppleDevice
      }));
    }
  }, {
    key: "render",
    value: function() {
      var i = this.getComponents(), s = i.Control, a = i.IndicatorsContainer, l = i.SelectContainer, c = i.ValueContainer, u = this.props, d = u.className, p = u.id, m = u.isDisabled, g = u.menuIsOpen, h = this.state.isFocused, v = this.commonProps = this.getCommonProps();
      return /* @__PURE__ */ S.createElement(l, V({}, v, {
        className: d,
        innerProps: {
          id: p,
          onKeyDown: this.onKeyDown
        },
        isDisabled: m,
        isFocused: h
      }), this.renderLiveRegion(), /* @__PURE__ */ S.createElement(s, V({}, v, {
        innerRef: this.getControlRef,
        innerProps: {
          onMouseDown: this.onControlMouseDown,
          onTouchEnd: this.onControlTouchEnd
        },
        isDisabled: m,
        isFocused: h,
        menuIsOpen: g
      }), /* @__PURE__ */ S.createElement(c, V({}, v, {
        isDisabled: m
      }), this.renderPlaceholderOrValue(), this.renderInput()), /* @__PURE__ */ S.createElement(a, V({}, v, {
        isDisabled: m
      }), this.renderClearIndicator(), this.renderLoadingIndicator(), this.renderIndicatorSeparator(), this.renderDropdownIndicator())), this.renderMenu(), this.renderFormField());
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function(i, s) {
      var a = s.prevProps, l = s.clearFocusValueOnUpdate, c = s.inputIsHiddenAfterUpdate, u = s.ariaSelection, d = s.isFocused, p = s.prevWasFocused, m = s.instancePrefix, g = i.options, h = i.value, v = i.menuIsOpen, b = i.inputValue, y = i.isMulti, C = uv(h), x = {};
      if (a && (h !== a.value || g !== a.options || v !== a.menuIsOpen || b !== a.inputValue)) {
        var T = v ? OU(i, C) : [], w = v ? Iv(Xl(i, C), "".concat(m, "-option")) : [], R = l ? EU(s, C) : null, E = PU(s, T), O = Wd(w, E);
        x = {
          selectValue: C,
          focusedOption: E,
          focusedOptionId: O,
          focusableOptionsWithIds: w,
          focusedValue: R,
          clearFocusValueOnUpdate: !1
        };
      }
      var I = c != null && i !== a ? {
        inputIsHidden: c,
        inputIsHiddenAfterUpdate: void 0
      } : {}, P = u, A = d && p;
      return d && !A && (P = {
        value: Dl(y, C, C[0] || null),
        options: C,
        action: "initial-input-focus"
      }, A = !p), (u == null ? void 0 : u.action) === "initial-input-focus" && (P = null), et(et(et({}, x), I), {}, {
        prevProps: i,
        ariaSelection: P,
        prevWasFocused: A
      });
    }
  }]), n;
}(yw);
aw.defaultProps = RU;
var DU = /* @__PURE__ */ Dv(function(e, t) {
  var n = W9(e);
  return /* @__PURE__ */ S.createElement(aw, V({
    ref: t
  }, n));
}), Ov = DU;
const Or = ({
  invalid: e,
  label: t = "",
  required: n = !1,
  labelKey: o = "label",
  valueKey: i = "value",
  isLoading: s,
  isSearchable: a = !1,
  data: l,
  onChange: c,
  isDisabled: u,
  defaultValue: d,
  width: p = "340px",
  containerMb: m = "10px",
  borderRadius: g = "10px 10px 10px 10px",
  background: h = "white",
  focusShadow: v = "0 0 0 1px #2684FF",
  noOptionText: b = "No options",
  ph: y = "",
  onConfigure: C,
  ...x
}) => {
  const T = St(() => l, [l]);
  return St(() => /* @__PURE__ */ f.jsxs(De, { sx: { maxWidth: "340px" }, children: [
    /* @__PURE__ */ f.jsx(De, { mb: m, children: /* @__PURE__ */ f.jsxs(Nn, { direction: "row", children: [
      /* @__PURE__ */ f.jsx(Fe, { component: "label", variant: "label", children: t }),
      n && /* @__PURE__ */ f.jsx(Fe, { variant: "error", children: "*" })
    ] }) }),
    typeof c == "function" ? /* @__PURE__ */ f.jsx(
      Ov,
      {
        ...x,
        placeholder: y,
        isDisabled: u,
        noOptionsMessage: () => /* @__PURE__ */ f.jsx(Fe, { children: b }),
        onChange: c,
        isLoading: s,
        getOptionLabel: (w) => w[o],
        getOptionValue: (w) => w[i],
        className: "basic-single",
        classNamePrefix: "select",
        isClearable: !1,
        isSearchable: a,
        name: "color",
        options: l,
        styles: {
          container: (w) => ({
            ...w,
            width: p,
            height: "43px"
          }),
          control: (w, R) => ({
            ...w,
            height: "43px",
            borderRadius: g,
            borderColor: e ? "#d32f2f" : R.menuIsOpen || R.isFocused ? "lightgray" : "#D0D0D0",
            boxShadow: R.isFocused ? v : "",
            background: h,
            "&:hover": {
              borderColor: "lightgray"
            }
          }),
          menu: (w) => ({
            ...w,
            zIndex: 99
          }),
          indicatorSeparator: (w) => ({
            ...w,
            display: "none"
          })
        }
      }
    ) : /* @__PURE__ */ f.jsx(
      Ov,
      {
        ...x,
        placeholder: y,
        noOptionsMessage: () => /* @__PURE__ */ f.jsx(Fe, { children: b }),
        defaultValue: d,
        isLoading: s,
        getOptionLabel: (w) => w[o],
        getOptionValue: (w) => w[i],
        className: "basic-single",
        classNamePrefix: "select",
        isClearable: !1,
        isSearchable: a,
        name: "color",
        options: T,
        styles: {
          container: (w) => ({
            ...w,
            width: p,
            height: "43px"
          }),
          control: (w) => ({
            ...w,
            height: "43px",
            borderRadius: g,
            borderColor: e ? "#d32f2f" : "#D0D0D0"
          })
        }
      }
    )
  ] }), [T, C, y, b, o, i, t, c]);
}, Ev = {
  id: "1",
  first_name: "Lighting",
  last_name: "Resources LLC",
  company_name: "Lighting Resources LLC",
  display_name: "Lighting Resources LLC",
  email: "awais@99technologies.com",
  website: "https://www.google.com",
  tax_preference: "tax_exempt",
  mode_of_payment: "ACH Transfer",
  mode_of_payment_value: "ACH Transfer",
  customer_billing_address: [
    {
      type: "billing",
      attention: "Lighting Resources LLC",
      country_id: 231,
      address: "P.O Box 941438",
      address2: "",
      city: "Simi Valley",
      zipcode: "93094",
      is_default: 1,
      state_name: "California",
      country: { name: "U.S.A" },
      state: { name: "California" }
    }
  ],
  customer_shipping_address: [
    {
      type: "shipping",
      attention: "Lighting Resources LLC",
      country_id: 231,
      address: "P.O Box 941438",
      address2: "",
      city: "Simi Valley",
      zipcode: "93094",
      is_default: 1,
      state_name: "California",
      country: { name: "U.S.A" },
      state: { name: "California" }
    }
  ],
  term: {
    id: 5,
    term_name: "Due on Receipt",
    days: "1",
    is_default: 1
  },
  tax: {
    id: 3,
    name: "MN Sales Tax 5.5",
    rate: "5.50",
    authority: "MN Sales Tax [5.5%]",
    deleted_at: null,
    created_at: null,
    updated_at: null
  }
}, MU = ({ invoiceApiUrl: e, onCloseTab: t, onInvoiceCreate: n }) => {
  const o = e, i = Ev.customer_billing_address[0], s = Ev.customer_shipping_address[0], [a, l] = Re([{ name: "", description: "", quantity: 1, rate: 0 }]), [c, u] = Re({
    customerName: "Lighting Resources LLC",
    referenceNumber: "",
    invoiceDate: (/* @__PURE__ */ new Date()).toISOString().substring(0, 10),
    dueDate: "",
    subject: "",
    paymentTerms: "",
    itemRatesType: "Exclusive",
    officeEmail: "ayesha.nasir@99technologies.com",
    paymentMethod: "ACH Transfer",
    billingAddress: {
      attention: "",
      address: "",
      city: "",
      state_name: "",
      zipcode: "",
      country: { name: "" }
      // Assuming country object has a name property
    },
    shippingAddress: {
      attention: "",
      address: "",
      city: "",
      state_name: "",
      zipcode: "",
      country: { name: "" }
      // Same as billing
    },
    status: "Draft"
  }), [d, p] = Re([
    { value: "Exclusive", label: "Tax Exclusive" },
    { value: "Inclusive", label: "Tax Inclusive" }
  ]), m = [
    { value: "Lighting Resources LLC", label: "Lighting Resources LLC" }
    // Add more customer options as needed
  ], [g] = Re([
    { value: "Credit Card", label: "Credit Card" },
    { value: "Cash", label: "Cash" },
    { value: "ACH Transfer", label: "ACH Transfer" },
    { value: "Cheque", label: "Cheque" }
  ]), [h, v] = Re([]), [b, y] = Re({ name: "", days: 0, description: "" }), [C, x] = Re(!1);
  Xt(() => {
    w();
  }, []);
  const T = (j) => {
    u((L) => ({
      ...L,
      itemRatesType: j ? j.value : ""
      // Use the label for display
    }));
  }, w = async () => {
    try {
      console.log(o);
      const j = await gx(o);
      console.log("Fetched payment terms:", j.data);
      const L = j.data.map((ee) => ({
        label: ee.name,
        // Use name as label
        value: ee.id
        // Use id as value
      }));
      v(L);
    } catch (j) {
      console.error("Error fetching payment terms:", j);
    }
  }, R = (j) => {
    console.log("Selected option:", j), u({
      ...c,
      customerName: j ? j.value : ""
      // Handle clearing
    });
  }, E = (j) => {
    u((L) => ({
      ...L,
      paymentMethod: j ? j.label : ""
      // Use the label for display
    }));
  }, O = (j) => {
    const { name: L, value: ee } = j.target;
    u({ ...c, [L]: ee });
  }, I = (j, L) => {
    const { name: ee, value: Y } = L.target, $ = [...a];
    $[j][ee] = Y, l($);
  }, P = () => {
    l([...a, { name: "", description: "", quantity: 1, rate: 0 }]);
  }, A = (j) => {
    const L = [...a];
    L.splice(j, 1), l(L);
  }, D = () => a.reduce((j, L) => j + L.quantity * L.rate, 0), k = (j) => {
    u((L) => ({
      ...L,
      paymentTerms: j ? j.label : ""
      // Use value instead of name
    })), console.log(j.label);
  };
  Q(Lt)(({ theme: j }) => ({
    fontFamily: "Nunito, Arial, sans-serif",
    // fontWeight: 700,
    // fontSize: '0.875rem',
    lineHeight: "1.5rem",
    verticalAlign: "inherit",
    borderBottom: "1px solid rgba(224, 224, 224, 1)",
    textAlign: "left",
    padding: "16px",
    color: "rgba(0, 0, 0, 0.87)"
  }));
  const M = c.itemRatesType === "Inclusive" ? 0 : 0.05, F = async () => {
    c.status = "Sent", console.log(c.status), N();
  };
  Re({
    id: "",
    name: "",
    days: "",
    description: ""
  });
  const N = async () => {
    if (!c.customerName || !c.referenceNumber) {
      alert("Customer Name and Reference No. are required.");
      return;
    }
    try {
      const j = D(), L = c.itemRatesType === "Inclusive" ? 0.05 : 0;
      let ee, Y;
      console.log(L), console.log(c.itemRatesType), c.itemRatesType === "Exclusive" ? (ee = j * L, console.log("include", ee), Y = j + ee, console.log(Y)) : (ee = j * L, console.log(ee), Y = j);
      const $ = (Z, G) => {
        u((K) => ({
          ...K,
          billingAddress: {
            attention: Z.attention || K.billingAddress.attention,
            address: Z.address || K.billingAddress.address,
            city: Z.city || K.billingAddress.city,
            state_name: Z.state_name || K.billingAddress.state_name,
            zipcode: Z.zipcode || K.billingAddress.zipcode,
            country: { name: Z.country.name || K.billingAddress.country.name }
          },
          shippingAddress: {
            attention: G.attention || K.shippingAddress.attention,
            address: G.address || K.shippingAddress.address,
            city: G.city || K.shippingAddress.city,
            state_name: G.state_name || K.shippingAddress.state_name,
            zipcode: G.zipcode || K.shippingAddress.zipcode,
            country: { name: G.country.name || K.shippingAddress.country.name }
          }
        }));
      }, U = {
        customer_id: "1",
        customer_name: c.customerName,
        email: c.officeEmail,
        // Update to reflect actual input
        billing_address_1: i.address,
        // Replace with your inputs
        billing_address_2: "",
        billing_city: i.city,
        billing_state: i.state_name,
        billing_zip_code: i.zipcode,
        shipping_address_1: s.address,
        shipping_address_2: "",
        shipping_city: s.city,
        shipping_state: s.state_name,
        shipping_zip_code: s.zipcode,
        payment_method: c.paymentMethod,
        // From invoiceDetails
        order_id: c.referenceNumber,
        from_address_1: "Floor 1 & 2, Plaza, 117, Civic Center",
        // Update as needed
        from_address_2: "",
        from_city: "Islamabad",
        // Update as needed
        from_state: "Capital Territory",
        // Update as needed
        from_zip_code: "46000",
        // Update as needed
        from_phone: "03099712657",
        // id: 1,// Update as needed
        metadata: {
          // pickup_date: "Something", // Replace with actual input if applicable
          // termObject: {
          //   name: newTerm.name,        // Using name from newTerm
          //   days: newTerm.days,       // Assuming 'days' in newTerm corresponds to 'value'
          //   id: newTerm.id,  
          //   value : newTerm.id,        // Use id from newTerm
          //   description: newTerm.description, // Use description from newTerm
          // },
          // paymentObject: {
          //   label: invoiceDetails.paymentMethod,
          //   value: invoiceDetails.paymentMethod,
          // },
          companyObject: {
            id: 1,
            // Update as needed
            name: "NINETY NINE TECHNOLOGIES (PVT) LIMITED",
            company_address_1: "Floor 1 & 2, Plaza, 117, Civic Center",
            company_address_2: "",
            company_city: "Islamabad",
            company_state: "Capital Territory",
            company_zip_code: "46000",
            company_phone: "03099712657",
            company_country: "Pakistan",
            company_email: "admin@btosystems.com",
            company_website: "www.minnesotacomputers.com",
            company_logo: "/public/99-tech-private.png",
            company_tax_id: "123456789"
            // bankDetails: {
            //   bank_name: "Bank AL Habib Limited",
            //   bank_title: "NINETY NINE TECHNOLOGIES (PVT) LIMITED",
            //   bank_no: "5546 0081 0020 33012",
            //   bank_routing: "",
            //   bank_swift_code: "BAHLPKKA",
            //   bank_branch_code: "5546",
            //   bank_iban: "PK95 BAHL 5546 0081 0020 3301",
            //   bank_address: "IBB, BAHRIA EXPRESSWAY, RAWALPINDI, PAKISTAN",
            // },
          },
          bankDetailsObject: {
            bank_name: "Bank AL Habib Limited",
            bank_title: "NINETY NINE TECHNOLOGIES (PVT) LIMITED",
            bank_no: "5546 0081 0020 33012",
            bank_routing: "",
            bank_swift_code: "BAHLPKKA",
            bank_branch_code: "5546",
            bank_iban: "PK95 BAHL 5546 0081 0020 3301",
            bank_address: "IBB, BAHRIA EXPRESSWAY, RAWALPINDI, PAKISTAN"
          }
          //         termsAndConditionsObject: {
          //           text: "All items will come with a Standard 30-Days Warranty unless specified in the applicable invoice. All items sold on this invoice are considered Pre-Owned (Used) unless otherwise noted in the sales agreement. Any DOA or damaged claim must be noted to the company in writing with 10 days upon delivery to the vendor. the company will not be responsible for any damage in the shipping unless mentioned in the sales agreement."
          //  },
        },
        tax_type: c.itemRatesType,
        // due_date_value: invoiceDetails.dueDate, // Update based on your input
        term: c.paymentTerms,
        // invoice_date_value: invoiceDetails.invoiceDate, // Update based on your input
        // expiry_date_value: invoiceDetails.dueDate, // Update based on your input
        subject: `NINETY NINE TECHNOLOGIES (PVT) LIMITED - Invoice #${c.referenceNumber}`,
        // Update as needed
        status: c.status,
        cc: ["awais@99technologies.com"],
        discount: 0,
        tax: 5,
        // Update based on your inputs
        discount_type: "Percentage",
        items: a.map((Z) => {
          const G = Z.quantity * Z.rate, K = (c.itemRatesType === "Inclusive", 0.05), re = G * K;
          return {
            // item_name_object: "",
            // item_id: "", // Update if you have item IDs
            name: Z.name,
            quantity: Z.quantity,
            description: Z.description,
            price: Z.rate
          };
        })
      };
      console.log("Form submitted", U);
      const X = await NV(U, o);
      console.log("Invoice saved :", X.data), console.log(X.data.status), n({ response: X });
    } catch (j) {
      console.error("Error submitting form:", j), alert("Failed to submit invoice.");
    }
  }, W = async () => {
    try {
      const j = await mx(b, o);
      v((L) => [
        ...L,
        { id: j.id, name: j.name, days: j.days, description: j.description }
      ]), y({ name: "", days: 0, description: "" }), B(), alert("Payment term added successfully!");
    } catch (j) {
      console.error("Error adding payment term:", j), alert("Failed to add payment term.");
    }
  }, H = () => x(!0), B = () => x(!1);
  return /* @__PURE__ */ f.jsxs(De, { p: 3, sx: { border: "1px solid #ccc", boxShadow: 2, borderRadius: 2 }, children: [
    /* @__PURE__ */ f.jsx(De, { mb: 2, p: 2, sx: { backgroundColor: "#fff", boxShadow: 3, borderRadius: 2 }, children: /* @__PURE__ */ f.jsxs(De, { display: "flex", justifyContent: "space-between", alignItems: "center", mb: 2, mt: 8, children: [
      /* @__PURE__ */ f.jsx(Fe, { variant: "h5", children: "New Invoice" }),
      /* @__PURE__ */ f.jsx(lt, { color: "error", onClick: () => t(), children: /* @__PURE__ */ f.jsx(pu, {}) })
    ] }) }),
    /* @__PURE__ */ f.jsx(Ht, { container: !0, spacing: 2, children: /* @__PURE__ */ f.jsxs(Ht, { item: !0, xs: 12, md: 12, children: [
      /* @__PURE__ */ f.jsx(go, { fullWidth: !0, children: /* @__PURE__ */ f.jsx(
        Or,
        {
          data: m,
          label: "Select Customer",
          value: m.find((j) => j.value === c.customerName),
          onChange: R,
          ph: "Select a customer"
        }
      ) }),
      /* @__PURE__ */ f.jsxs(De, { sx: { marginLeft: 2, marginTop: 2, display: "flex", gap: 4 }, children: [
        /* @__PURE__ */ f.jsxs(De, { children: [
          /* @__PURE__ */ f.jsx(Fe, { variant: "subtitle1", gutterBottom: !0, children: "BILLING ADDRESS" }),
          /* @__PURE__ */ f.jsx(Fe, { variant: "body2", children: i.attention }),
          /* @__PURE__ */ f.jsx(Fe, { variant: "body2", children: i.address }),
          /* @__PURE__ */ f.jsxs(Fe, { variant: "body2", children: [
            i.city,
            ", ",
            i.state_name,
            " ",
            i.zipcode
          ] }),
          /* @__PURE__ */ f.jsx(Fe, { variant: "body2", children: i.country.name })
        ] }),
        /* @__PURE__ */ f.jsxs(De, { sx: { marginLeft: 3 }, children: [
          /* @__PURE__ */ f.jsx(Fe, { variant: "subtitle1", gutterBottom: !0, children: "SHIPPING ADDRESS" }),
          /* @__PURE__ */ f.jsx(Fe, { variant: "body2", children: s.attention }),
          /* @__PURE__ */ f.jsx(Fe, { variant: "body2", children: s.address }),
          /* @__PURE__ */ f.jsxs(Fe, { variant: "body2", children: [
            s.city,
            ", ",
            s.state_name,
            " ",
            s.zipcode
          ] }),
          /* @__PURE__ */ f.jsx(Fe, { variant: "body2", children: s.country.name })
        ] })
      ] }),
      /* @__PURE__ */ f.jsxs(Ht, { container: !0, mt: 2, children: [
        /* @__PURE__ */ f.jsx(
          Ut,
          {
            label: "Reference No.",
            name: "referenceNumber",
            value: c.referenceNumber,
            onChange: O,
            placeholder: "Enter reference number",
            fullWidth: !0
          }
        ),
        /* @__PURE__ */ f.jsx(De, { sx: { marginLeft: 2 }, children: /* @__PURE__ */ f.jsx(
          Ut,
          {
            label: "Subject",
            name: "subject",
            value: c.subject,
            onChange: O,
            fullWidth: !0,
            sx: { minWidth: "1000px" }
          }
        ) })
      ] }),
      /* @__PURE__ */ f.jsxs(Ht, { container: !0, mt: 2, children: [
        /* @__PURE__ */ f.jsx(
          Ut,
          {
            label: "Invoice Date",
            type: "date",
            name: "invoiceDate",
            value: c.invoiceDate,
            onChange: O,
            InputLabelProps: { shrink: !0 },
            fullWidth: !0
          }
        ),
        /* @__PURE__ */ f.jsx(De, { sx: { marginLeft: 2 }, children: /* @__PURE__ */ f.jsx(
          Ut,
          {
            label: "Due Date",
            type: "date",
            name: "dueDate",
            value: c.dueDate,
            onChange: O,
            InputLabelProps: { shrink: !0 },
            fullWidth: !0
          }
        ) }),
        /* @__PURE__ */ f.jsx(De, { sx: { marginLeft: 2 }, children: /* @__PURE__ */ f.jsx(
          Ut,
          {
            label: "Office Email",
            name: "officeEmail",
            value: c.officeEmail,
            onChange: O,
            fullWidth: !0
          }
        ) })
      ] }),
      /* @__PURE__ */ f.jsxs(Ht, { container: !0, spacing: 0, mt: 2, children: [
        /* @__PURE__ */ f.jsxs(Ht, { children: [
          " ",
          /* @__PURE__ */ f.jsxs(go, { fullWidth: !0, children: [
            /* @__PURE__ */ f.jsx(
              Or,
              {
                value: h.find((j) => j.name === c.paymentTerms),
                onChange: k,
                data: h,
                label: "Payment terms",
                ph: "Select payment terms"
              }
            ),
            /* @__PURE__ */ f.jsx(vt, { variant: "outlined", onClick: H, children: "Configure Terms" })
          ] })
        ] }),
        /* @__PURE__ */ f.jsxs(Ht, { sx: { ml: 2 }, children: [
          " ",
          /* @__PURE__ */ f.jsx(go, { fullWidth: !0, children: /* @__PURE__ */ f.jsx(
            Or,
            {
              value: d.find((j) => j.value === c.itemRatesType) || null,
              onChange: T,
              data: d,
              label: "Item Rates",
              ph: "Select item rates"
            }
          ) })
        ] }),
        /* @__PURE__ */ f.jsxs(Ht, { sx: { ml: 2 }, children: [
          "   ",
          /* @__PURE__ */ f.jsx(go, { fullWidth: !0, mt: 2, children: /* @__PURE__ */ f.jsx(
            Or,
            {
              value: g.find((j) => j.label === c.paymentMethod) || null,
              onChange: E,
              data: g,
              label: "Payment Method",
              ph: "Select payment method"
            }
          ) }),
          /* @__PURE__ */ f.jsx(
            Ba,
            {
              open: C,
              onClose: B,
              sx: { display: "flex", alignItems: "center", justifyContent: "center" },
              children: /* @__PURE__ */ f.jsxs(De, { p: 3, sx: { backgroundColor: "white", borderRadius: 1, width: 400 }, children: [
                /* @__PURE__ */ f.jsx(Fe, { variant: "h6", children: "Add New Payment Term" }),
                /* @__PURE__ */ f.jsx(
                  Ut,
                  {
                    label: "Term Name",
                    name: "name",
                    value: b.name,
                    onChange: (j) => y({ ...b, name: j.target.value }),
                    fullWidth: !0,
                    margin: "normal"
                  }
                ),
                /* @__PURE__ */ f.jsx(
                  Ut,
                  {
                    label: "Days",
                    name: "days",
                    type: "number",
                    value: b.days,
                    onChange: (j) => y({ ...b, days: j.target.value }),
                    fullWidth: !0,
                    margin: "normal"
                  }
                ),
                /* @__PURE__ */ f.jsx(
                  Ut,
                  {
                    label: "Description",
                    name: "description",
                    value: b.description,
                    onChange: (j) => y({ ...b, description: j.target.value }),
                    fullWidth: !0,
                    margin: "normal"
                  }
                ),
                /* @__PURE__ */ f.jsxs(De, { display: "flex", justifyContent: "flex-end", mt: 2, children: [
                  /* @__PURE__ */ f.jsx(vt, { onClick: B, children: "Cancel" }),
                  /* @__PURE__ */ f.jsx(vt, { variant: "contained", color: "primary", onClick: W, sx: { ml: 1 }, children: "Add Term" })
                ] })
              ] })
            }
          )
        ] })
      ] })
    ] }) }),
    /* @__PURE__ */ f.jsx(Fe, { variant: "h6", children: "Invoice Items" }),
    /* @__PURE__ */ f.jsx(uu, { component: yn, children: /* @__PURE__ */ f.jsxs(cu, { children: [
      /* @__PURE__ */ f.jsx(du, { children: /* @__PURE__ */ f.jsxs(fr, { children: [
        /* @__PURE__ */ f.jsx(Lt, { children: " Item Name" }),
        /* @__PURE__ */ f.jsx(Lt, { children: "Item Description" }),
        /* @__PURE__ */ f.jsx(Lt, { children: "Quantity" }),
        /* @__PURE__ */ f.jsx(Lt, { children: "Rate" }),
        /* @__PURE__ */ f.jsx(Lt, { children: "Amount" }),
        /* @__PURE__ */ f.jsx(Lt, { children: "Actions" })
      ] }) }),
      /* @__PURE__ */ f.jsx(Vi, { children: a.map((j, L) => /* @__PURE__ */ f.jsxs(fr, { children: [
        /* @__PURE__ */ f.jsx(Lt, { children: /* @__PURE__ */ f.jsx(
          Ut,
          {
            name: "name",
            value: j.name,
            onChange: (ee) => I(L, ee),
            fullWidth: !0
          }
        ) }),
        /* @__PURE__ */ f.jsx(Lt, { children: /* @__PURE__ */ f.jsx(
          Ut,
          {
            name: "description",
            value: j.description,
            onChange: (ee) => I(L, ee),
            fullWidth: !0
          }
        ) }),
        /* @__PURE__ */ f.jsx(Lt, { children: /* @__PURE__ */ f.jsx(
          Ut,
          {
            name: "quantity",
            type: "number",
            value: j.quantity,
            onChange: (ee) => I(L, ee),
            fullWidth: !0
          }
        ) }),
        /* @__PURE__ */ f.jsx(Lt, { children: /* @__PURE__ */ f.jsx(
          Ut,
          {
            name: "rate",
            type: "number",
            value: j.rate,
            onChange: (ee) => I(L, ee),
            fullWidth: !0
          }
        ) }),
        /* @__PURE__ */ f.jsx(Lt, { children: /* @__PURE__ */ f.jsx(Fe, { children: (j.quantity * j.rate).toFixed(2) }) }),
        /* @__PURE__ */ f.jsx(Lt, { children: /* @__PURE__ */ f.jsx(lt, { onClick: () => A(L), color: "secondary", children: /* @__PURE__ */ f.jsx(fu, {}) }) })
      ] }, L)) })
    ] }) }),
    /* @__PURE__ */ f.jsx(vt, { startIcon: /* @__PURE__ */ f.jsx(Hf, {}), onClick: P, sx: { mt: 2 }, children: "Add New Item" }),
    /* @__PURE__ */ f.jsx(De, { mt: 4, display: "flex", justifyContent: "flex-end", children: /* @__PURE__ */ f.jsxs(De, { children: [
      /* @__PURE__ */ f.jsxs(Fe, { children: [
        "Sub Total: $",
        D()
      ] }),
      /* @__PURE__ */ f.jsxs(Fe, { children: [
        "Tax (5%): $",
        D() * M
      ] }),
      /* @__PURE__ */ f.jsxs(Fe, { children: [
        "Total: $",
        D() * (1 + M)
      ] })
    ] }) }),
    /* @__PURE__ */ f.jsxs(De, { mt: 4, display: "flex", justifyContent: "flex-end", gap: 2, children: [
      /* @__PURE__ */ f.jsx(vt, { variant: "outlined", onClick: () => t(!0), children: "Cancel" }),
      /* @__PURE__ */ f.jsx(vt, { variant: "contained", color: "primary", onClick: N, children: "Save as Draft" }),
      /* @__PURE__ */ f.jsx(vt, { variant: "contained", color: "secondary", onClick: F, children: "Save and Send" })
    ] })
  ] });
};
function jU({ invoiceApiUrl: e }) {
  const t = ns(), n = () => {
    console.log("test"), t("/invoices");
  }, o = () => {
    console.log("test"), t("/invoices");
  }, i = async (s) => {
    console.log("test"), t("/invoices");
  };
  return /* @__PURE__ */ f.jsxs(f.Fragment, { children: [
    /* @__PURE__ */ f.jsx(Ja, { onViewInvoices: n }),
    /* @__PURE__ */ f.jsx(MU, { invoiceApiUrl: e, onCloseTab: o, onInvoiceCreate: i })
  ] });
}
const kU = ({ invoiceApiUrl: e, onNewInvoice: t, onViewInvoice: n }) => {
  const o = e;
  Re(null);
  const [i, s] = Re([]), [a, l] = Re(!0), [c, u] = Re(/* @__PURE__ */ new Set()), [d, p] = Re(10), [m, g] = Re(0), [h, v] = Re(0), [b, y] = Re(1);
  Re(""), Re(0);
  const [C, x] = Re(10);
  Xt(() => {
    (async () => {
      l(!0);
      try {
        console.log("testing"), console.log(o);
        const I = { page_size: d, page: m + 1 }, P = await qf(I, o);
        s(P.data.list || []), v(P.data.pagination.count || 0), y(P.data.pagination.pages || 1);
      } catch (I) {
        console.error("Error fetching invoices:", I);
      } finally {
        l(!1);
      }
    })();
  }, [d, m]);
  const T = (O) => {
    console.log("test ", O);
    const I = new Set(c);
    I.has(O) ? I.delete(O) : I.add(O), u(I);
  }, w = async () => {
    if (c.size > 0) {
      const O = [...c][0];
      console.log("Deleting invoice with ID:", O);
      try {
        await hx(O, o), console.log("Invoice deleted successfully"), u(/* @__PURE__ */ new Set());
      } catch (I) {
        console.error("Error deleting invoice:", I);
      }
    } else
      console.log("No invoices selected for deletion.");
  }, R = (O, I) => {
    g(I - 1);
  }, E = c.size > 0;
  return /* @__PURE__ */ f.jsxs(
    yn,
    {
      elevation: 1,
      sx: {
        width: "30%",
        maxWidth: "700px",
        margin: "90px auto",
        padding: "8px",
        borderRadius: "8px",
        marginRight: "30px"
        // overflow: 'auto',
      },
      children: [
        /* @__PURE__ */ f.jsxs(Nn, { direction: "row", justifyContent: "space-between", marginBottom: 2, children: [
          /* @__PURE__ */ f.jsx(Fe, { variant: "h6", children: "All Invoices" }),
          E ? /* @__PURE__ */ f.jsx(
            vt,
            {
              variant: "outlined",
              startIcon: /* @__PURE__ */ f.jsx(fu, {}),
              onClick: w,
              children: "Delete"
            }
          ) : /* @__PURE__ */ f.jsx(vt, { variant: "contained", onClick: () => t(), children: "+ New" })
        ] }),
        /* @__PURE__ */ f.jsxs(
          De,
          {
            sx: {
              display: "flex",
              justifyContent: "space-between",
              padding: "6px 0",
              backgroundColor: "#f0f0f0",
              borderRadius: "4px"
            },
            children: [
              /* @__PURE__ */ f.jsx(Fe, { variant: "subtitle2", sx: { fontWeight: "bold", width: "40%" }, children: "Invoice Number | Date" }),
              /* @__PURE__ */ f.jsx(Fe, { variant: "subtitle2", sx: { fontWeight: "bold", width: "30%" }, children: "Status" }),
              /* @__PURE__ */ f.jsx(Fe, { variant: "subtitle2", sx: { fontWeight: "bold", width: "30%", textAlign: "right" }, children: "Amount" })
            ]
          }
        ),
        /* @__PURE__ */ f.jsx(De, { sx: {
          maxHeight: "500px",
          // Adjust this height as needed
          overflow: "auto"
          // Allow scrolling inside this box if content overflows
        }, children: Array.isArray(i) && i.length > 0 ? i.map((O) => /* @__PURE__ */ f.jsxs(
          De,
          {
            sx: {
              display: "flex",
              justifyContent: "space-between",
              padding: "8px 0",
              borderBottom: "1px solid #e0e0e0",
              alignItems: "center",
              cursor: "pointer",
              "&:hover": {
                backgroundColor: "#f9f9f9"
              }
            },
            onClick: () => n(O.id),
            children: [
              /* @__PURE__ */ f.jsxs(De, { sx: { display: "flex", alignItems: "center", width: "40%" }, children: [
                /* @__PURE__ */ f.jsx(
                  ls,
                  {
                    checked: c.has(O.id),
                    onChange: () => T(O.id),
                    disabled: O.status === "Sent",
                    sx: { marginRight: "8px" }
                  }
                ),
                /* @__PURE__ */ f.jsxs(De, { children: [
                  /* @__PURE__ */ f.jsx(Fe, { children: O.invoice_number }),
                  /* @__PURE__ */ f.jsx(Fe, { variant: "caption", color: "textSecondary", children: O.invoice_date })
                ] })
              ] }),
              /* @__PURE__ */ f.jsx(Fe, { sx: { width: "30%" }, children: O.status }),
              /* @__PURE__ */ f.jsxs(Fe, { sx: { width: "30%", textAlign: "right", paddingRight: "8px" }, children: [
                "$",
                O.total_amount
              ] })
            ]
          },
          O.id
        )) : /* @__PURE__ */ f.jsx(Fe, { children: "No invoices found." }) }),
        /* @__PURE__ */ f.jsx("div", { children: /* @__PURE__ */ f.jsxs("div", { style: { textAlign: "center", marginBottom: "8px" }, children: [
          "Rows Per Page: ",
          Math.min(C, h - m * C)
        ] }) }),
        /* @__PURE__ */ f.jsx(
          _f,
          {
            count: b,
            page: m + 1,
            onChange: R,
            sx: { display: "flex", justifyContent: "center", mt: 2 }
          }
        )
      ]
    }
  );
}, FU = ({ invoiceId: e, invoiceApiUrl: t, onEditInvoice: n, onSendInvoice: o }) => {
  const i = e, s = t, [a, l] = Re(null), [c, u] = Re([]), [d, p] = Re(!0), [m, g] = Re(/* @__PURE__ */ new Set()), [h, v] = Re(10), [b, y] = Re(0), [C, x] = Re(0), [T, w] = Re(1), [R, E] = Re("");
  Re(0), Re(10), Xt(() => {
    (async () => {
      p(!0);
      try {
        console.log("testing"), console.log(s);
        const k = { page_size: h, page: b + 1 }, M = await qf(k, s);
        u(M.data.list || []), x(M.data.pagination.count || 0), w(M.data.pagination.pages || 1);
      } catch (k) {
        console.error("Error fetching invoices:", k);
      } finally {
        p(!1);
      }
    })();
  }, [h, b]), Xt(() => {
    (async () => {
      console.log(i);
      try {
        const k = await fx(i, s);
        l(k.data.data);
      } catch (k) {
        console.error("Error fetching invoice details:", k);
      } finally {
        p(!1);
      }
    })();
  }, [i]);
  const O = async (D, k) => {
    try {
      const M = await _V(D, s), F = new Blob([M], { type: "text/html" }), N = URL.createObjectURL(F);
      k(N);
    } catch (M) {
      console.error("Error fetching HTML content:", M);
    }
  };
  if (Xt(() => {
    O(i, E);
  }, [i]), d)
    return /* @__PURE__ */ f.jsx(ii, {});
  if (!a)
    return /* @__PURE__ */ f.jsx(Fe, { variant: "h6", children: "Invoice not found." });
  const I = () => {
    n(i);
  }, P = async () => {
    try {
      const D = await LV(i, s), k = new Blob([D.data], { type: "application/pdf" }), M = window.URL.createObjectURL(k), F = document.createElement("a");
      F.href = M, F.download = `invoice_${i}.pdf`, document.body.appendChild(F), F.click(), F.remove(), window.URL.revokeObjectURL(M);
    } catch (D) {
      console.error("Download failed:", D);
    } finally {
    }
  }, A = () => {
    o(i);
  };
  return m.size > 0, /* @__PURE__ */ f.jsx(De, { flex: 1, children: /* @__PURE__ */ f.jsxs(yn, { elevation: 1, sx: { padding: "16px", marginTop: "80px", borderRadius: "8px", marginBottom: "16px" }, children: [
    /* @__PURE__ */ f.jsxs(Nn, { direction: "row", justifyContent: "space-between", marginBottom: 2, children: [
      /* @__PURE__ */ f.jsxs(Fe, { variant: "h5", children: [
        "Invoice ",
        a.invoice_number
      ] }),
      /* @__PURE__ */ f.jsxs(Nn, { direction: "row", spacing: 2, children: [
        /* @__PURE__ */ f.jsx(
          vt,
          {
            variant: "outlined",
            startIcon: /* @__PURE__ */ f.jsx(FN, {}),
            onClick: P,
            children: "Download PDF"
          }
        ),
        a.status === "Draft" && /* @__PURE__ */ f.jsx(
          vt,
          {
            variant: "outlined",
            startIcon: /* @__PURE__ */ f.jsx(B0, {}),
            onClick: I,
            children: "Edit Invoice"
          }
        ),
        a.status === "Draft" && /* @__PURE__ */ f.jsx(
          vt,
          {
            variant: "outlined",
            onClick: A,
            children: "Send Invoice"
          }
        )
      ] })
    ] }),
    /* @__PURE__ */ f.jsx(Ao, {}),
    /* @__PURE__ */ f.jsxs(De, { sx: { height: "calc(100vh - 200px)" }, children: [
      " ",
      /* @__PURE__ */ f.jsx(
        "iframe",
        {
          src: R,
          style: { width: "100%", height: "100%", border: "2px solid black", borderRadius: "5px" },
          title: "Invoice"
        }
      )
    ] })
  ] }) });
};
function NU({ invoiceApiUrl: e }) {
  const { id: t } = Gv(), n = ns(), o = () => {
    n("/invoices/new");
  }, i = (c) => {
    console.log(c), n(`/invoices/view/${c}`);
  }, s = (c) => {
    console.log(c), n(`/invoices/edit/${c}`);
  }, a = () => {
    console.log("test"), n("/invoices");
  }, l = (c) => {
    n("/invoices/send-email", { state: { invoiceId: c } });
  };
  return /* @__PURE__ */ f.jsxs(f.Fragment, { children: [
    /* @__PURE__ */ f.jsx(Ja, { onViewInvoices: a }),
    /* @__PURE__ */ f.jsxs(De, { display: "flex", children: [
      /* @__PURE__ */ f.jsx(kU, { invoiceApiUrl: e, onNewInvoice: o, onViewInvoice: i }),
      /* @__PURE__ */ f.jsx(FU, { invoiceId: t, invoiceApiUrl: e, onEditInvoice: s, onSendInvoice: l })
    ] })
  ] });
}
const VU = ({ invoiceId: e, invoiceApiUrl: t, onCloseTab: n, onInvoiceCreate: o }) => {
  const i = e, s = t, [a, l] = Re(!0), c = async () => {
    try {
      const Y = await fx(i, s), $ = Y.data.data;
      console.log("term is empty", $.term), m({
        customerId: $.customer_id,
        id: $.id,
        customerName: $.customer_name,
        referenceNumber: $.order_id,
        invoiceDate: $.invoice_date,
        dueDate: $.due_date,
        subject: $.subject,
        paymentTerms: $.term,
        itemRatesType: $.tax_type,
        officeEmail: $.email,
        // If you want to keep this
        paymentMethod: $.payment_method,
        billing_address_1: $.billing_address_1,
        billing_city: $.billing_city,
        billing_state: $.billing_state,
        billing_zip_code: $.billing_zip_code,
        shipping_address_1: $.shipping_address_1,
        shipping_city: $.shipping_city,
        shipping_state: $.shipping_state,
        shipping_zip_code: $.shipping_zip_code,
        status: $.status
      });
      const U = $.items.map((X) => ({
        name: X.name,
        description: X.description,
        quantity: X.quantity,
        rate: parseFloat(X.price)
        // Assuming price is a string and needs to be converted to a number
      }));
      d(U), console.log(Y.data), console.log(p), console.log("Invoice Payment Terms:", p.paymentTerms), console.log("Available Payment Terms:", y);
    } catch (Y) {
      console.error("Error fetching invoice:", Y);
    } finally {
      l(!1);
    }
  };
  Xt(() => {
    console.log("Updated invoice status:", p.status), (async () => {
      try {
        const $ = await gx(s);
        console.log("Fetched payment terms:", $.data);
        const U = $.data.map((X) => ({
          // console.log(esponse.data);
          label: X.name,
          // Use name as label
          value: X.id
          // Use id as value
        }));
        console.log(U), C(U);
      } catch ($) {
        console.error("Error fetching payment terms:", $);
      }
    })();
  }, []), Xt(() => {
    c();
  }, [i]);
  const [u, d] = Re([{ name: "", description: "", quantity: 1, rate: 0 }]), [p, m] = Re({
    customerId: "",
    status: "Draft",
    id: "",
    customerName: "",
    referenceNumber: "",
    invoiceDate: "",
    dueDate: "",
    subject: "",
    paymentTerms: "",
    itemRatesType: "",
    officeEmail: "",
    // Optional field if you want to keep it
    paymentMethod: "",
    shipping_address_1: "",
    shipping_city: "",
    shipping_state: "",
    billing_address_1: "",
    billing_city: "",
    billing_state: ""
  }), [g, h] = Re([
    { value: "Exclusive", label: "Tax Exclusive" },
    { value: "Inclusive", label: "Tax Inclusive" }
  ]), v = [
    { value: "Ninety Nine Technologies LLC", label: "Ninety Nine Technologies LLC" },
    { value: "Lighting Resources LLC", label: "Lighting Resources LLC" }
    // { value: 'Customer C', label: 'Customer C' },
    // Add more customer options as needed
  ], [b] = Re([
    { value: "Credit Card", label: "Credit Card" },
    { value: "Cash", label: "Cash" },
    { value: "ACH Transfer", label: "ACH Transfer" },
    { value: "Cheque", label: "Cheque" }
  ]), [y, C] = Re([]), [x, T] = Re({ name: "", days: 0, description: "" }), [w, R] = Re(!1), E = (Y) => {
    m(($) => ({
      ...$,
      itemRatesType: Y ? Y.value : ""
      // Use the label for display
    }));
  }, O = (Y) => {
    console.log("Selected option:", Y), m({
      ...p,
      customerName: Y ? Y.value : ""
      // Handle clearing
    });
  }, I = (Y) => {
    m(($) => ({
      ...$,
      paymentMethod: Y ? Y.label : ""
      // Use the label for display
    }));
  }, P = (Y) => {
    const { name: $, value: U } = Y.target;
    m({ ...p, [$]: U });
  }, A = (Y, $) => {
    const { name: U, value: X } = $.target, Z = [...u];
    Z[Y][U] = X, d(Z);
  }, D = () => {
    d([...u, { name: "", description: "", quantity: 1, rate: 0 }]);
  }, k = (Y) => {
    const $ = [...u];
    $.splice(Y, 1), d($);
  }, M = () => u.reduce((Y, $) => Y + $.quantity * $.rate, 0), F = async () => {
    p.status = "Sent", console.log(p), console.log("hello"), console.log(p.status), console.log(p.status), H();
  }, N = (Y) => {
    console.log("new one", p.paymentTerms), m(($) => ({
      ...$,
      paymentTerms: Y ? Y.label : p.paymentTerms
      // Use value instead of name
    }));
  }, W = p.itemRatesType === "Inclusive" ? 0 : 0.05, H = async () => {
    console.log(p), console.log("Inside handleSaveSubmit:", p.status);
    const Y = p.status;
    if (console.log(Y), !p.customerName || !p.referenceNumber) {
      alert("Customer Name and Reference No. are required.");
      return;
    }
    try {
      const $ = M(), U = p.itemRatesType === "Inclusive" ? 0.055 : 0;
      let X, Z;
      console.log(U), console.log(p.itemRatesType), p.itemRatesType === "Exclusive" ? (X = $ * U, console.log("include", X), Z = $ + X, console.log(Z)) : (X = $ * U, console.log(X), Z = $);
      const G = {
        customer_id: p.customerId,
        // This should be fetched from your customer data
        customer_name: p.customerName,
        email: p.officeEmail,
        // Update to reflect actual input
        billing_address_1: p.billing_address_1,
        // Replace with your inputs
        billing_address_2: "",
        billing_city: p.billing_city,
        // Replace with your inputs
        billing_state: p.billing_state,
        // Replace with your inputs
        billing_zip_code: p.billing_zip_code,
        // Replace with your inputs
        shipping_address_1: p.shipping_address_1,
        // Replace with your inputs
        shipping_address_2: "",
        shipping_city: p.shipping_city,
        // Replace with your inputs
        shipping_state: p.shipping_state,
        // Replace with your inputs
        shipping_zip_code: p.shipping_zip_code,
        // Replace with your inputs
        payment_method: p.paymentMethod,
        // From invoiceDetails
        order_id: p.referenceNumber,
        from_address_1: "Floor 1 & 2, Plaza, 117, Civic Center",
        // Update as needed
        from_address_2: "",
        from_city: "Islamabad",
        // Update as needed
        from_state: "Capital Territory",
        // Update as needed
        from_zip_code: "46000",
        // Update as needed
        from_phone: "03099712657",
        id: p.id,
        // Update as needed
        metadata: {
          // pickup_date: "Something", // Replace with actual input if applicable
          // termObject: {
          //   name: newTerm.name,        // Using name from newTerm
          //   days: newTerm.days,       // Assuming 'days' in newTerm corresponds to 'value'
          //   id: newTerm.id,  
          //   value : newTerm.id,        // Use id from newTerm
          //   description: newTerm.description, // Use description from newTerm
          // },
          // paymentObject: {
          //   label: invoiceDetails.paymentMethod,
          //   value: invoiceDetails.paymentMethod,
          // },
          companyObject: {
            id: 1,
            // Update as needed
            name: "NINETY NINE TECHNOLOGIES (PVT) LIMITED",
            company_address_1: "Floor 1 & 2, Plaza, 117, Civic Center",
            company_address_2: "",
            company_city: "Islamabad",
            company_state: "Capital Territory",
            company_zip_code: "46000",
            company_phone: "03099712657",
            company_country: "Pakistan",
            company_email: "admin@btosystems.com",
            company_website: "www.minnesotacomputers.com",
            company_logo: "/public/99-tech-private.png",
            company_tax_id: "123456789"
            // bankDetails: {
            //   bank_name: "Bank AL Habib Limited",
            //   bank_title: "NINETY NINE TECHNOLOGIES (PVT) LIMITED",
            //   bank_no: "5546 0081 0020 33012",
            //   bank_routing: "",
            //   bank_swift_code: "BAHLPKKA",
            //   bank_branch_code: "5546",
            //   bank_iban: "PK95 BAHL 5546 0081 0020 3301",
            //   bank_address: "IBB, BAHRIA EXPRESSWAY, RAWALPINDI, PAKISTAN",
            // },
          },
          bankDetailsObject: {
            bank_name: "Bank AL Habib Limited",
            bank_title: "NINETY NINE TECHNOLOGIES (PVT) LIMITED",
            bank_no: "5546 0081 0020 33012",
            bank_routing: "",
            bank_swift_code: "BAHLPKKA",
            bank_branch_code: "5546",
            bank_iban: "PK95 BAHL 5546 0081 0020 3301",
            bank_address: "IBB, BAHRIA EXPRESSWAY, RAWALPINDI, PAKISTAN"
          }
          //         termsAndConditionsObject: {
          //           text: "All items will come with a Standard 30-Days Warranty unless specified in the applicable invoice. All items sold on this invoice are considered Pre-Owned (Used) unless otherwise noted in the sales agreement. Any DOA or damaged claim must be noted to the company in writing with 10 days upon delivery to the vendor. the company will not be responsible for any damage in the shipping unless mentioned in the sales agreement."
          //  },
        },
        tax_type: p.itemRatesType,
        // due_date_value: invoiceDetails.dueDate, // Update based on your input
        term: p.paymentTerms,
        // invoice_date_value: invoiceDetails.invoiceDate, // Update based on your input
        // expiry_date_value: invoiceDetails.dueDate, // Update based on your input
        subject: `NINETY NINE TECHNOLOGIES (PVT) LIMITED - Invoice #${p.referenceNumber}`,
        // Update as needed
        cc: ["ayesha.nasir@99technologies.com"],
        discount: 0,
        tax: 5,
        // Update based on your inputs
        status: p.status,
        discount_type: "Percentage",
        items: u.map((re) => {
          const ne = re.quantity * re.rate, z = (p.itemRatesType === "Inclusive", 0.05), q = ne * z;
          return {
            // item_name_object: "",
            // item_id: "", // Update if you have item IDs
            name: re.name,
            quantity: re.quantity,
            description: re.description,
            price: re.rate
          };
        })
      };
      console.log("Form submitted", G), console.log(s);
      const K = await VV(G, s);
      console.log("Invoice saved as draft:", K), o({ response: K });
    } catch ($) {
      console.error("Error submitting form:", $);
    }
  };
  Re({
    id: "",
    name: "",
    days: "",
    description: ""
  });
  const B = async () => {
    try {
      const Y = await mx(x, s);
      C(($) => [
        ...$,
        { id: Y.id, name: Y.name, days: Y.days, description: Y.description }
      ]), T({ name: "", days: 0, description: "" }), ee(), alert("Payment term added successfully!");
    } catch (Y) {
      console.error("Error adding payment term:", Y), alert("Failed to add payment term.");
    }
  }, j = () => {
    n();
  }, L = () => R(!0), ee = () => R(!1);
  return /* @__PURE__ */ f.jsxs(De, { p: 3, sx: { border: "1px solid #ccc", boxShadow: 2, borderRadius: 2 }, children: [
    /* @__PURE__ */ f.jsx(De, { mb: 2, p: 2, sx: { backgroundColor: "#fff", boxShadow: 3, borderRadius: 2 }, children: /* @__PURE__ */ f.jsxs(De, { display: "flex", justifyContent: "space-between", alignItems: "center", mb: 2, mt: 8, children: [
      /* @__PURE__ */ f.jsx(Fe, { variant: "h5", children: "Edit Invoice" }),
      /* @__PURE__ */ f.jsx(lt, { color: "error", onClick: () => n(), children: /* @__PURE__ */ f.jsx(pu, {}) })
    ] }) }),
    /* @__PURE__ */ f.jsx(Ht, { container: !0, spacing: 2, children: /* @__PURE__ */ f.jsxs(Ht, { item: !0, xs: 12, sm: 12, children: [
      /* @__PURE__ */ f.jsx(go, { fullWidth: !0, children: /* @__PURE__ */ f.jsx(
        Or,
        {
          data: v,
          label: "Select Customer",
          value: v.find((Y) => Y.value === p.customerName),
          onChange: O,
          ph: "Select a customer"
        }
      ) }),
      /* @__PURE__ */ f.jsxs(De, { sx: { marginLeft: 2, marginTop: 2, display: "flex", gap: 4 }, children: [
        /* @__PURE__ */ f.jsxs(De, { children: [
          /* @__PURE__ */ f.jsx(Fe, { variant: "subtitle1", gutterBottom: !0, children: "BILLING ADDRESS" }),
          /* @__PURE__ */ f.jsx(Fe, { variant: "body2", children: p.customerName }),
          /* @__PURE__ */ f.jsx(Fe, { variant: "body2", children: p.billing_address_1 }),
          /* @__PURE__ */ f.jsxs(Fe, { variant: "body2", children: [
            p.billing_city,
            ", ",
            p.billing_state,
            " ",
            p.billing_zip_code
          ] }),
          /* @__PURE__ */ f.jsx(Fe, { variant: "body2", children: "U.S.A" })
        ] }),
        /* @__PURE__ */ f.jsxs(De, { sx: { marginLeft: 3 }, children: [
          /* @__PURE__ */ f.jsx(Fe, { variant: "subtitle1", gutterBottom: !0, children: "SHIPPING ADDRESS" }),
          /* @__PURE__ */ f.jsx(Fe, { variant: "body2", children: p.customerName }),
          /* @__PURE__ */ f.jsx(Fe, { variant: "body2", children: p.shipping_address_1 }),
          /* @__PURE__ */ f.jsxs(Fe, { variant: "body2", children: [
            p.shipping_city,
            ", ",
            p.shipping_state,
            " ",
            p.shipping_zip_code
          ] }),
          /* @__PURE__ */ f.jsx(Fe, { variant: "body2", children: "U.S.A" })
        ] })
      ] }),
      /* @__PURE__ */ f.jsxs(Ht, { container: !0, mt: 2, children: [
        /* @__PURE__ */ f.jsx(
          Ut,
          {
            label: "Reference No.",
            name: "referenceNumber",
            value: p.referenceNumber,
            onChange: P,
            placeholder: "Enter reference number",
            fullWidth: !0
          }
        ),
        /* @__PURE__ */ f.jsx(De, { sx: { marginLeft: 2 }, children: /* @__PURE__ */ f.jsx(
          Ut,
          {
            label: "Subject",
            name: "subject",
            value: p.subject,
            onChange: P,
            fullWidth: !0,
            sx: { minWidth: "1000px" }
          }
        ) })
      ] }),
      /* @__PURE__ */ f.jsxs(Ht, { container: !0, mt: 2, children: [
        /* @__PURE__ */ f.jsx(
          Ut,
          {
            label: "Invoice Date",
            type: "date",
            name: "invoiceDate",
            value: p.invoiceDate,
            onChange: P,
            InputLabelProps: { shrink: !0 },
            fullWidth: !0
          }
        ),
        /* @__PURE__ */ f.jsx(De, { sx: { marginLeft: 2 }, children: /* @__PURE__ */ f.jsx(
          Ut,
          {
            label: "Due Date",
            type: "date",
            name: "dueDate",
            value: p.dueDate,
            onChange: P,
            InputLabelProps: { shrink: !0 },
            fullWidth: !0
          }
        ) }),
        /* @__PURE__ */ f.jsx(De, { sx: { marginLeft: 2 }, children: /* @__PURE__ */ f.jsx(
          Ut,
          {
            label: "Office Email",
            name: "officeEmail",
            value: p.officeEmail,
            onChange: P,
            fullWidth: !0
          }
        ) })
      ] }),
      /* @__PURE__ */ f.jsxs(Ht, { container: !0, spacing: 0, mt: 2, children: [
        /* @__PURE__ */ f.jsxs(Ht, { children: [
          " ",
          /* @__PURE__ */ f.jsxs(go, { fullWidth: !0, children: [
            /* @__PURE__ */ f.jsx(
              Or,
              {
                value: y.find((Y) => Y.label === p.paymentTerms) || null,
                onChange: N,
                data: y,
                label: "Payment terms",
                ph: "Select payment terms"
              }
            ),
            /* @__PURE__ */ f.jsx(vt, { variant: "outlined", onClick: L, children: "Configure Terms" })
          ] })
        ] }),
        /* @__PURE__ */ f.jsxs(Ht, { sx: { ml: 2 }, children: [
          " ",
          /* @__PURE__ */ f.jsx(go, { fullWidth: !0, children: /* @__PURE__ */ f.jsx(
            Or,
            {
              value: g.find((Y) => Y.value === p.itemRatesType) || null,
              onChange: E,
              data: g,
              label: "Item Rates",
              ph: "Select item rates"
            }
          ) })
        ] }),
        /* @__PURE__ */ f.jsxs(Ht, { sx: { ml: 2 }, children: [
          "   ",
          /* @__PURE__ */ f.jsx(go, { fullWidth: !0, mt: 2, children: /* @__PURE__ */ f.jsx(
            Or,
            {
              value: b.find((Y) => Y.label === p.paymentMethod) || null,
              onChange: I,
              data: b,
              label: "Payment Method",
              ph: "Select payment method"
            }
          ) }),
          /* @__PURE__ */ f.jsx(
            Ba,
            {
              open: w,
              onClose: ee,
              sx: { display: "flex", alignItems: "center", justifyContent: "center" },
              children: /* @__PURE__ */ f.jsxs(De, { p: 3, sx: { backgroundColor: "white", borderRadius: 1, width: 400 }, children: [
                /* @__PURE__ */ f.jsx(Fe, { variant: "h6", children: "Add New Payment Term" }),
                /* @__PURE__ */ f.jsx(
                  Ut,
                  {
                    label: "Term Name",
                    name: "name",
                    value: x.name,
                    onChange: (Y) => T({ ...x, name: Y.target.value }),
                    fullWidth: !0,
                    margin: "normal"
                  }
                ),
                /* @__PURE__ */ f.jsx(
                  Ut,
                  {
                    label: "Days",
                    name: "days",
                    type: "number",
                    value: x.days,
                    onChange: (Y) => T({ ...x, days: Y.target.value }),
                    fullWidth: !0,
                    margin: "normal"
                  }
                ),
                /* @__PURE__ */ f.jsx(
                  Ut,
                  {
                    label: "Description",
                    name: "description",
                    value: x.description,
                    onChange: (Y) => T({ ...x, description: Y.target.value }),
                    fullWidth: !0,
                    margin: "normal"
                  }
                ),
                /* @__PURE__ */ f.jsxs(De, { display: "flex", justifyContent: "flex-end", mt: 2, children: [
                  /* @__PURE__ */ f.jsx(vt, { onClick: ee, children: "Cancel" }),
                  /* @__PURE__ */ f.jsx(vt, { variant: "contained", color: "primary", onClick: B, sx: { ml: 1 }, children: "Add Term" })
                ] })
              ] })
            }
          )
        ] })
      ] })
    ] }) }),
    /* @__PURE__ */ f.jsx(Fe, { variant: "h6", children: "Invoice Items" }),
    /* @__PURE__ */ f.jsx(uu, { component: yn, children: /* @__PURE__ */ f.jsxs(cu, { children: [
      /* @__PURE__ */ f.jsx(du, { children: /* @__PURE__ */ f.jsxs(fr, { children: [
        /* @__PURE__ */ f.jsx(Lt, { children: "Item Name" }),
        /* @__PURE__ */ f.jsx(Lt, { children: "Item Description" }),
        /* @__PURE__ */ f.jsx(Lt, { children: "Quantity" }),
        /* @__PURE__ */ f.jsx(Lt, { children: "Rate" }),
        /* @__PURE__ */ f.jsx(Lt, { children: "Amount" }),
        /* @__PURE__ */ f.jsx(Lt, { children: "Actions" })
      ] }) }),
      /* @__PURE__ */ f.jsx(Vi, { children: u.map((Y, $) => /* @__PURE__ */ f.jsxs(fr, { children: [
        /* @__PURE__ */ f.jsx(Lt, { children: /* @__PURE__ */ f.jsx(
          Kn,
          {
            name: "name",
            value: Y.name,
            onChange: (U) => A($, U),
            fullWidth: !0
          }
        ) }),
        /* @__PURE__ */ f.jsx(Lt, { children: /* @__PURE__ */ f.jsx(
          Kn,
          {
            name: "description",
            value: Y.description,
            onChange: (U) => A($, U),
            fullWidth: !0
          }
        ) }),
        /* @__PURE__ */ f.jsx(Lt, { children: /* @__PURE__ */ f.jsx(
          Kn,
          {
            name: "quantity",
            type: "number",
            value: Y.quantity,
            onChange: (U) => A($, U),
            fullWidth: !0
          }
        ) }),
        /* @__PURE__ */ f.jsx(Lt, { children: /* @__PURE__ */ f.jsx(
          Kn,
          {
            name: "rate",
            type: "number",
            value: Y.rate,
            onChange: (U) => A($, U),
            fullWidth: !0
          }
        ) }),
        /* @__PURE__ */ f.jsx(Lt, { children: /* @__PURE__ */ f.jsx(Fe, { children: (Y.quantity * Y.rate).toFixed(2) }) }),
        /* @__PURE__ */ f.jsx(Lt, { children: /* @__PURE__ */ f.jsx(lt, { onClick: () => k($), color: "secondary", children: /* @__PURE__ */ f.jsx(fu, {}) }) })
      ] }, $)) })
    ] }) }),
    /* @__PURE__ */ f.jsx(vt, { startIcon: /* @__PURE__ */ f.jsx(Hf, {}), onClick: D, sx: { mt: 2 }, children: "Add New Item" }),
    /* @__PURE__ */ f.jsx(De, { mt: 4, display: "flex", justifyContent: "flex-end", children: /* @__PURE__ */ f.jsxs(De, { children: [
      /* @__PURE__ */ f.jsxs(Fe, { children: [
        "Sub Total: $",
        M()
      ] }),
      /* @__PURE__ */ f.jsxs(Fe, { children: [
        "Tax (5%): $",
        M() * W
      ] }),
      /* @__PURE__ */ f.jsxs(Fe, { children: [
        "Total: $",
        M() * (1 + W)
      ] })
    ] }) }),
    /* @__PURE__ */ f.jsxs(De, { mt: 4, display: "flex", justifyContent: "flex-end", gap: 2, children: [
      /* @__PURE__ */ f.jsx(vt, { variant: "outlined", onClick: () => j(), children: "Cancel" }),
      /* @__PURE__ */ f.jsx(vt, { variant: "contained", color: "primary", onClick: H, children: "Save as Draft" }),
      /* @__PURE__ */ f.jsx(vt, { variant: "contained", color: "secondary", onClick: F, children: "Save and Send" })
    ] })
  ] });
};
function $U({ invoiceApiUrl: e }) {
  const { id: t } = Gv(), n = ns(), o = () => {
    console.log("test"), n("/invoices");
  }, i = () => {
    console.log("test"), n("/invoices");
  }, s = async (a) => {
    console.log("test"), n("/invoices");
  };
  return /* @__PURE__ */ f.jsxs(f.Fragment, { children: [
    /* @__PURE__ */ f.jsx(Ja, { onViewInvoices: o }),
    /* @__PURE__ */ f.jsx(VU, { invoiceId: t, invoiceApiUrl: e, onCloseTab: i, onInvoiceCreate: s })
  ] });
}
const LU = ({ invoiceId: e, invoiceApiUrl: t, onCloseTab: n, onSendEmail: o }) => {
  const i = t, [s, a] = Re(""), [l, c] = Re(""), [u, d] = Re("NINETY NINE TECHNOLOGIES (PVT) LIMITED"), [p, m] = Re(null), [g, h] = Re(!1), [v, b] = Re(""), [y, C] = Re(!1), [x, T] = Re(""), w = (O) => {
    m(O.target.files[0]);
  }, R = () => {
    console.log("hello"), n();
  }, E = async () => {
    T(""), C(!0);
    const O = new FormData();
    O.append("from", "admin@btosystems.com"), O.append("to[0]", s), l && O.append("cc[0]", l), O.append("subject", u), O.append("message", v), O.append("id", e), O.append("type", "invoice"), O.append("attach_file", g ? 1 : 0), g && p && O.append("attachments[0]", p);
    try {
      const I = await $V(O, i);
      console.log("Email sent successfully:", I), o();
    } catch {
      T("Failed to send email. Please try again.");
    } finally {
      C(!1);
    }
  };
  return /* @__PURE__ */ f.jsxs(De, { sx: { padding: "16px", maxWidth: "100%", margin: "auto" }, children: [
    /* @__PURE__ */ f.jsx(De, { sx: { padding: "16px", marginTop: "80px", maxWidth: "100%", backgroundColor: "#f0f0f0", marginBottom: "16px" }, children: /* @__PURE__ */ f.jsx(Fe, { variant: "h6", children: "Email to" }) }),
    /* @__PURE__ */ f.jsx(yn, { elevation: 1, sx: { padding: "16px" }, children: /* @__PURE__ */ f.jsxs(Nn, { spacing: 2, children: [
      /* @__PURE__ */ f.jsx(
        Ut,
        {
          label: "From",
          value: "admin@btosystems.com",
          InputProps: {
            readOnly: !0
          },
          fullWidth: !0,
          sx: { minWidth: "1500px" }
        }
      ),
      /* @__PURE__ */ f.jsx(
        Ut,
        {
          label: "Send To",
          value: s,
          onChange: (O) => a(O.target.value),
          placeholder: "Enter recipient email",
          error: !!x,
          helperText: x && "Please enter a valid email address",
          fullWidth: !0,
          sx: { minWidth: "1500px" }
        }
      ),
      /* @__PURE__ */ f.jsx(
        Ut,
        {
          label: "Cc",
          value: l,
          onChange: (O) => c(O.target.value),
          placeholder: "Enter CC email",
          fullWidth: !0,
          sx: { minWidth: "1500px" }
        }
      ),
      /* @__PURE__ */ f.jsx(
        Ut,
        {
          label: "Subject",
          value: u,
          onChange: (O) => d(O.target.value),
          fullWidth: !0,
          sx: { minWidth: "1500px" }
        }
      ),
      /* @__PURE__ */ f.jsx(
        iu,
        {
          control: /* @__PURE__ */ f.jsx(
            ls,
            {
              checked: g,
              onChange: (O) => h(O.target.checked),
              color: "primary"
            }
          ),
          label: "Attach File"
        }
      ),
      /* @__PURE__ */ f.jsx(De, { children: /* @__PURE__ */ f.jsx(
        "input",
        {
          type: "file",
          accept: "*",
          onChange: w,
          style: { marginTop: "16px", display: "block" }
        }
      ) }),
      x && /* @__PURE__ */ f.jsx(Fe, { color: "error", children: x }),
      y && /* @__PURE__ */ f.jsx(Nn, { direction: "row", justifyContent: "center", children: /* @__PURE__ */ f.jsx(ii, {}) }),
      !y && /* @__PURE__ */ f.jsxs(Nn, { direction: "row", spacing: 2, justifyContent: "flex-end", children: [
        /* @__PURE__ */ f.jsx(
          vt,
          {
            variant: "contained",
            color: "primary",
            onClick: E,
            disabled: y,
            children: "Send"
          }
        ),
        /* @__PURE__ */ f.jsx(vt, { variant: "outlined", onClick: R, children: "Cancel" })
      ] })
    ] }) })
  ] });
};
function _U({ invoiceApiUrl: e }) {
  const t = ns(), n = di(), { invoiceId: o } = n.state || {}, i = () => {
    console.log("test"), t("/invoices");
  }, s = () => {
    console.log("hello"), t(`/invoices/view/${o}`);
  };
  return /* @__PURE__ */ f.jsxs(f.Fragment, { children: [
    /* @__PURE__ */ f.jsx(Ja, { onViewInvoices: i }),
    /* @__PURE__ */ f.jsx(LU, { invoiceId: o, invoiceApiUrl: e, onCloseTab: s, onSendEmail: s })
  ] });
}
function An(e) {
  return "Minified Redux error #" + e + "; visit https://redux.js.org/Errors?code=" + e + " for the full message or use the non-minified dev environment for full errors. ";
}
var Pv = function() {
  return typeof Symbol == "function" && Symbol.observable || "@@observable";
}(), Hd = function() {
  return Math.random().toString(36).substring(7).split("").join(".");
}, ni = {
  INIT: "@@redux/INIT" + Hd(),
  REPLACE: "@@redux/REPLACE" + Hd(),
  PROBE_UNKNOWN_ACTION: function() {
    return "@@redux/PROBE_UNKNOWN_ACTION" + Hd();
  }
};
function lw(e) {
  if (typeof e != "object" || e === null) return !1;
  for (var t = e; Object.getPrototypeOf(t) !== null; )
    t = Object.getPrototypeOf(t);
  return Object.getPrototypeOf(e) === t;
}
function BU(e) {
  if (e === void 0) return "undefined";
  if (e === null) return "null";
  var t = typeof e;
  switch (t) {
    case "boolean":
    case "string":
    case "number":
    case "symbol":
    case "function":
      return t;
  }
  if (Array.isArray(e)) return "array";
  if (HU(e)) return "date";
  if (WU(e)) return "error";
  var n = zU(e);
  switch (n) {
    case "Symbol":
    case "Promise":
    case "WeakMap":
    case "WeakSet":
    case "Map":
    case "Set":
      return n;
  }
  return t.slice(8, -1).toLowerCase().replace(/\s/g, "");
}
function zU(e) {
  return typeof e.constructor == "function" ? e.constructor.name : null;
}
function WU(e) {
  return e instanceof Error || typeof e.message == "string" && e.constructor && typeof e.constructor.stackTraceLimit == "number";
}
function HU(e) {
  return e instanceof Date ? !0 : typeof e.toDateString == "function" && typeof e.getDate == "function" && typeof e.setDate == "function";
}
function Xr(e) {
  var t = typeof e;
  return process.env.NODE_ENV !== "production" && (t = BU(e)), t;
}
function cw(e, t, n) {
  var o;
  if (typeof t == "function" && typeof n == "function" || typeof n == "function" && typeof arguments[3] == "function")
    throw new Error(process.env.NODE_ENV === "production" ? An(0) : "It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.");
  if (typeof t == "function" && typeof n > "u" && (n = t, t = void 0), typeof n < "u") {
    if (typeof n != "function")
      throw new Error(process.env.NODE_ENV === "production" ? An(1) : "Expected the enhancer to be a function. Instead, received: '" + Xr(n) + "'");
    return n(cw)(e, t);
  }
  if (typeof e != "function")
    throw new Error(process.env.NODE_ENV === "production" ? An(2) : "Expected the root reducer to be a function. Instead, received: '" + Xr(e) + "'");
  var i = e, s = t, a = [], l = a, c = !1;
  function u() {
    l === a && (l = a.slice());
  }
  function d() {
    if (c)
      throw new Error(process.env.NODE_ENV === "production" ? An(3) : "You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");
    return s;
  }
  function p(v) {
    if (typeof v != "function")
      throw new Error(process.env.NODE_ENV === "production" ? An(4) : "Expected the listener to be a function. Instead, received: '" + Xr(v) + "'");
    if (c)
      throw new Error(process.env.NODE_ENV === "production" ? An(5) : "You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api/store#subscribelistener for more details.");
    var b = !0;
    return u(), l.push(v), function() {
      if (b) {
        if (c)
          throw new Error(process.env.NODE_ENV === "production" ? An(6) : "You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api/store#subscribelistener for more details.");
        b = !1, u();
        var C = l.indexOf(v);
        l.splice(C, 1), a = null;
      }
    };
  }
  function m(v) {
    if (!lw(v))
      throw new Error(process.env.NODE_ENV === "production" ? An(7) : "Actions must be plain objects. Instead, the actual type was: '" + Xr(v) + "'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.");
    if (typeof v.type > "u")
      throw new Error(process.env.NODE_ENV === "production" ? An(8) : 'Actions may not have an undefined "type" property. You may have misspelled an action type string constant.');
    if (c)
      throw new Error(process.env.NODE_ENV === "production" ? An(9) : "Reducers may not dispatch actions.");
    try {
      c = !0, s = i(s, v);
    } finally {
      c = !1;
    }
    for (var b = a = l, y = 0; y < b.length; y++) {
      var C = b[y];
      C();
    }
    return v;
  }
  function g(v) {
    if (typeof v != "function")
      throw new Error(process.env.NODE_ENV === "production" ? An(10) : "Expected the nextReducer to be a function. Instead, received: '" + Xr(v));
    i = v, m({
      type: ni.REPLACE
    });
  }
  function h() {
    var v, b = p;
    return v = {
      /**
       * The minimal observable subscription method.
       * @param {Object} observer Any object that can be used as an observer.
       * The observer object should have a `next` method.
       * @returns {subscription} An object with an `unsubscribe` method that can
       * be used to unsubscribe the observable from the store, and prevent further
       * emission of values from the observable.
       */
      subscribe: function(C) {
        if (typeof C != "object" || C === null)
          throw new Error(process.env.NODE_ENV === "production" ? An(11) : "Expected the observer to be an object. Instead, received: '" + Xr(C) + "'");
        function x() {
          C.next && C.next(d());
        }
        x();
        var T = b(x);
        return {
          unsubscribe: T
        };
      }
    }, v[Pv] = function() {
      return this;
    }, v;
  }
  return m({
    type: ni.INIT
  }), o = {
    dispatch: m,
    subscribe: p,
    getState: d,
    replaceReducer: g
  }, o[Pv] = h, o;
}
function Av(e) {
  typeof console < "u" && typeof console.error == "function" && console.error(e);
  try {
    throw new Error(e);
  } catch {
  }
}
function GU(e, t, n, o) {
  var i = Object.keys(t), s = n && n.type === ni.INIT ? "preloadedState argument passed to createStore" : "previous state received by the reducer";
  if (i.length === 0)
    return "Store does not have a valid reducer. Make sure the argument passed to combineReducers is an object whose values are reducers.";
  if (!lw(e))
    return "The " + s + ' has unexpected type of "' + Xr(e) + '". Expected argument to be an object with the following ' + ('keys: "' + i.join('", "') + '"');
  var a = Object.keys(e).filter(function(l) {
    return !t.hasOwnProperty(l) && !o[l];
  });
  if (a.forEach(function(l) {
    o[l] = !0;
  }), !(n && n.type === ni.REPLACE) && a.length > 0)
    return "Unexpected " + (a.length > 1 ? "keys" : "key") + " " + ('"' + a.join('", "') + '" found in ' + s + ". ") + "Expected to find one of the known reducer keys instead: " + ('"' + i.join('", "') + '". Unexpected keys will be ignored.');
}
function UU(e) {
  Object.keys(e).forEach(function(t) {
    var n = e[t], o = n(void 0, {
      type: ni.INIT
    });
    if (typeof o > "u")
      throw new Error(process.env.NODE_ENV === "production" ? An(12) : 'The slice reducer for key "' + t + `" returned undefined during initialization. If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined. If you don't want to set a value for this reducer, you can use null instead of undefined.`);
    if (typeof n(void 0, {
      type: ni.PROBE_UNKNOWN_ACTION()
    }) > "u")
      throw new Error(process.env.NODE_ENV === "production" ? An(13) : 'The slice reducer for key "' + t + '" returned undefined when probed with a random type. ' + ("Don't try to handle '" + ni.INIT + `' or other actions in "redux/*" `) + "namespace. They are considered private. Instead, you must return the current state for any unknown actions, unless it is undefined, in which case you must return the initial state, regardless of the action type. The initial state may not be undefined, but can be null.");
  });
}
function XU(e) {
  for (var t = Object.keys(e), n = {}, o = 0; o < t.length; o++) {
    var i = t[o];
    process.env.NODE_ENV !== "production" && typeof e[i] > "u" && Av('No reducer provided for key "' + i + '"'), typeof e[i] == "function" && (n[i] = e[i]);
  }
  var s = Object.keys(n), a;
  process.env.NODE_ENV !== "production" && (a = {});
  var l;
  try {
    UU(n);
  } catch (c) {
    l = c;
  }
  return function(u, d) {
    if (u === void 0 && (u = {}), l)
      throw l;
    if (process.env.NODE_ENV !== "production") {
      var p = GU(u, n, d, a);
      p && Av(p);
    }
    for (var m = !1, g = {}, h = 0; h < s.length; h++) {
      var v = s[h], b = n[v], y = u[v], C = b(y, d);
      if (typeof C > "u") {
        var x = d && d.type;
        throw new Error(process.env.NODE_ENV === "production" ? An(14) : "When called with an action of type " + (x ? '"' + String(x) + '"' : "(unknown type)") + ', the slice reducer for key "' + v + '" returned undefined. To ignore an action, you must explicitly return the previous state. If you want this reducer to hold no value, you can return null instead of undefined.');
      }
      g[v] = C, m = m || C !== y;
    }
    return m = m || s.length !== Object.keys(u).length, m ? g : u;
  };
}
function YU() {
  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
    t[n] = arguments[n];
  return t.length === 0 ? function(o) {
    return o;
  } : t.length === 1 ? t[0] : t.reduce(function(o, i) {
    return function() {
      return o(i.apply(void 0, arguments));
    };
  });
}
function ZU() {
  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
    t[n] = arguments[n];
  return function(o) {
    return function() {
      var i = o.apply(void 0, arguments), s = function() {
        throw new Error(process.env.NODE_ENV === "production" ? An(15) : "Dispatching while constructing your middleware is not allowed. Other middleware would not be applied to this dispatch.");
      }, a = {
        getState: i.getState,
        dispatch: function() {
          return s.apply(void 0, arguments);
        }
      }, l = t.map(function(c) {
        return c(a);
      });
      return s = YU.apply(void 0, l)(i.dispatch), et(et({}, i), {}, {
        dispatch: s
      });
    };
  };
}
function uw(e) {
  var t = function(o) {
    var i = o.dispatch, s = o.getState;
    return function(a) {
      return function(l) {
        return typeof l == "function" ? l(i, s, e) : a(l);
      };
    };
  };
  return t;
}
var dw = uw();
dw.withExtraArgument = uw;
const qU = {
  loading: !1,
  isAuthenticated: !0,
  // Set your initial authentication state
  user: null
}, JU = (e = qU, t) => {
  switch (t.type) {
    case N9:
      return { ...e, loading: !0 };
    case V9:
      return { ...e, isAuthenticated: !1, user: null };
    default:
      return e;
  }
}, KU = XU({
  auth: JU
  //   company: companyReducer,
  // Add other reducers as necessary
}), QU = cw(KU, ZU(dw)), i6 = () => {
  const e = "http://localhost:3000/v1", t = Xc({
    palette: {
      primary: {
        main: "#2C8CFB"
      },
      secondary: {
        main: "#dc004e"
      },
      success: {
        main: "#4BB543"
      }
    },
    components: {
      MuiButton: {
        styleOverrides: {
          root: ({ ownerState: n }) => ({
            borderRadius: "10px",
            fontSize: "12px",
            fontWeight: 400,
            lineHeight: "14px",
            height: "40px",
            ...n.variant === "contained" && {},
            ...n.variant === "outlined" && {
              color: "#2C8CFB",
              borderRadius: "10px",
              border: "1px solid #2C8CFB"
            }
          })
        }
      },
      MuiTextField: {
        defaultProps: {
          variant: "outlined"
        },
        styleOverrides: {
          root: {
            "& .MuiInputBase-root": {
              borderRadius: "10px",
              height: "45px",
              padding: "0 10px",
              minWidth: "330px"
            },
            "& .MuiOutlinedInput-root": {
              "& fieldset": {
                borderColor: "#D0D0D0"
              },
              "&:hover fieldset": {
                borderColor: "#D0D0D0"
              },
              "&.Mui-focused fieldset": {
                borderColor: "#2684FF"
              }
            }
          }
        }
      }
    },
    typography: {
      fontFamily: "Nunito, Arial, sans-serif",
      label: {
        fontSize: "14px",
        fontWeight: 700,
        lineHeight: "21px",
        color: "#121212"
      },
      formSection: {
        fontSize: "20px",
        fontWeight: 800,
        lineHeight: "27px",
        color: "#272525"
      },
      error: {
        fontSize: "12px",
        fontWeight: 600,
        color: "#d32f2f"
      },
      success: {
        fontSize: "12px",
        fontWeight: 600,
        color: "#10A142"
      }
    }
  });
  return /* @__PURE__ */ f.jsx(Hw, { store: QU, children: /* @__PURE__ */ f.jsx(YO, { theme: t, children: /* @__PURE__ */ f.jsx(Y1, { children: /* @__PURE__ */ f.jsxs(j1, { children: [
    /* @__PURE__ */ f.jsx(Hr, { path: "/", element: /* @__PURE__ */ f.jsx(rv, { invoiceApiUrl: e }) }),
    /* @__PURE__ */ f.jsx(Hr, { path: "/invoices", element: /* @__PURE__ */ f.jsx(rv, { invoiceApiUrl: e }) }),
    /* @__PURE__ */ f.jsx(Hr, { path: "/invoices/new", element: /* @__PURE__ */ f.jsx(jU, { invoiceApiUrl: e }) }),
    /* @__PURE__ */ f.jsx(Hr, { path: "/invoices/view/:id", element: /* @__PURE__ */ f.jsx(NU, { invoiceApiUrl: e }) }),
    /* @__PURE__ */ f.jsx(Hr, { path: "/invoices/send-email", element: /* @__PURE__ */ f.jsx(_U, { invoiceApiUrl: e }) }),
    /* @__PURE__ */ f.jsx(Hr, { path: "/invoices/edit/:id", element: /* @__PURE__ */ f.jsx($U, { invoiceApiUrl: e }) })
  ] }) }) }) });
};
export {
  i6 as InvoiceComponent,
  MU as InvoiceCreate,
  j9 as InvoiceDetailList,
  VU as InvoiceEdit,
  F9 as InvoiceHeader,
  kU as InvoiceList,
  k9 as InvoicePaymentSummary,
  LU as InvoiceSendEmail,
  FU as InvoiceView,
  Ja as MainHeader
};
